; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.redisObject = type { i32, i32, i8* }
%struct.redisCommand = type { i8*, {}*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon, %struct.dictEntry* }
%union.anon = type { i8* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon.3], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.4, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon.3 = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.4 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.clusterState = type { %struct.clusterNode*, i64, i32, i32, %struct.dict*, %struct.dict*, [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x i64], %struct.rax*, i64, i32, i32, i32, i64, i32, i64, %struct.clusterNode*, i64, i32, i64, i32, [10 x i64], [10 x i64], i64 }
%struct.clusterNode = type { i64, [40 x i8], i32, i64, [2048 x i8], i32, i32, %struct.clusterNode**, %struct.clusterNode*, i64, i64, i64, i64, i64, i64, i64, [46 x i8], i32, i32, %struct.clusterLink*, %struct.list* }
%struct.clusterLink = type { i64, i32, i8*, i8*, %struct.clusterNode* }
%struct.lua_State = type opaque
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.rdbSaveInfo = type { i32, i32, [41 x i8], i64 }
%struct.uk_thread_status_block = type { i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.1, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._mbstate_t = type { i32, %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.rusage = type { %struct.timeval, %struct.timeval, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [16 x i64] }
%struct.pthread_mutexattr_t_ = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sigaction = type { %union.anon.6, i64, i32, void ()* }
%union.anon.6 = type { void (i32)* }
%struct.listIter = type { %struct.listNode*, i32 }
%struct.redisMemOverhead = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, float, float, i64, float, i64, float, i64, float, i64, i64, %struct.anon.5* }
%struct.anon.5 = type { i64, i64, i64 }
%struct.sockaddr_un = type { i8, [108 x i8] }
%struct.iovec = type { i8*, i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i32, i8*, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"as\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"rF\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"wm\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"setnx\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"wmF\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"setex\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"psetex\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"strlen\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"wF\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"setbit\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"getbit\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"bitfield\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"setrange\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"getrange\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"incr\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"decr\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"mget\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"rpush\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"lpush\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"rpushx\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"lpushx\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"linsert\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"rpop\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"lpop\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"brpop\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"brpoplpush\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"wms\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"blpop\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"llen\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"lindex\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"lset\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"lrange\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"lrem\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"rpoplpush\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"sadd\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"srem\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"smove\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"sismember\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"scard\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"spop\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"wRF\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"srandmember\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"rR\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"sinter\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"rS\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"sinterstore\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"sunion\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"sunionstore\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"sdiff\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"sdiffstore\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"smembers\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"sscan\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"zadd\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"zincrby\00", align 1
@.str.66 = private unnamed_addr constant [5 x i8] c"zrem\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c"zremrangebyscore\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"zremrangebyrank\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"zremrangebylex\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"zunionstore\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"zinterstore\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"zrange\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"zrangebyscore\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"zrevrangebyscore\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"zrangebylex\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"zrevrangebylex\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"zcount\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"zlexcount\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"zrevrange\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"zcard\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"zscore\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"zrank\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"zrevrank\00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"zscan\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"zpopmin\00", align 1
@.str.86 = private unnamed_addr constant [8 x i8] c"zpopmax\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c"bzpopmin\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"wsF\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"bzpopmax\00", align 1
@.str.90 = private unnamed_addr constant [5 x i8] c"hset\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"hsetnx\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"hget\00", align 1
@.str.93 = private unnamed_addr constant [6 x i8] c"hmset\00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"hmget\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"hincrby\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"hincrbyfloat\00", align 1
@.str.97 = private unnamed_addr constant [5 x i8] c"hdel\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"hlen\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"hstrlen\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"hkeys\00", align 1
@.str.101 = private unnamed_addr constant [6 x i8] c"hvals\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"hgetall\00", align 1
@.str.103 = private unnamed_addr constant [8 x i8] c"hexists\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"hscan\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"incrby\00", align 1
@.str.106 = private unnamed_addr constant [7 x i8] c"decrby\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"incrbyfloat\00", align 1
@.str.108 = private unnamed_addr constant [7 x i8] c"getset\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"mset\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"msetnx\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"randomkey\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.113 = private unnamed_addr constant [3 x i8] c"lF\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"swapdb\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"rename\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"renamenx\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"expire\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"expireat\00", align 1
@.str.120 = private unnamed_addr constant [8 x i8] c"pexpire\00", align 1
@.str.121 = private unnamed_addr constant [10 x i8] c"pexpireat\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.123 = private unnamed_addr constant [5 x i8] c"scan\00", align 1
@.str.124 = private unnamed_addr constant [7 x i8] c"dbsize\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"sltF\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"ping\00", align 1
@.str.128 = private unnamed_addr constant [3 x i8] c"tF\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"echo\00", align 1
@.str.130 = private unnamed_addr constant [2 x i8] c"F\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"save\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"bgsave\00", align 1
@.str.133 = private unnamed_addr constant [13 x i8] c"bgrewriteaof\00", align 1
@.str.134 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"aslt\00", align 1
@.str.136 = private unnamed_addr constant [9 x i8] c"lastsave\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"RF\00", align 1
@.str.138 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"multi\00", align 1
@.str.140 = private unnamed_addr constant [3 x i8] c"sF\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.142 = private unnamed_addr constant [3 x i8] c"sM\00", align 1
@.str.143 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str.145 = private unnamed_addr constant [4 x i8] c"ars\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"psync\00", align 1
@.str.147 = private unnamed_addr constant [9 x i8] c"replconf\00", align 1
@.str.148 = private unnamed_addr constant [8 x i8] c"flushdb\00", align 1
@.str.149 = private unnamed_addr constant [9 x i8] c"flushall\00", align 1
@.str.150 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.152 = private unnamed_addr constant [4 x i8] c"ltR\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"monitor\00", align 1
@.str.154 = private unnamed_addr constant [4 x i8] c"ttl\00", align 1
@.str.155 = private unnamed_addr constant [4 x i8] c"rFR\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"touch\00", align 1
@.str.157 = private unnamed_addr constant [5 x i8] c"pttl\00", align 1
@.str.158 = private unnamed_addr constant [8 x i8] c"persist\00", align 1
@.str.159 = private unnamed_addr constant [8 x i8] c"slaveof\00", align 1
@.str.160 = private unnamed_addr constant [4 x i8] c"ast\00", align 1
@.str.161 = private unnamed_addr constant [10 x i8] c"replicaof\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"role\00", align 1
@.str.163 = private unnamed_addr constant [4 x i8] c"lst\00", align 1
@.str.164 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@.str.166 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.167 = private unnamed_addr constant [10 x i8] c"subscribe\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"pslt\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c"unsubscribe\00", align 1
@.str.170 = private unnamed_addr constant [11 x i8] c"psubscribe\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"punsubscribe\00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"publish\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"pltF\00", align 1
@.str.174 = private unnamed_addr constant [7 x i8] c"pubsub\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"pltR\00", align 1
@.str.176 = private unnamed_addr constant [6 x i8] c"watch\00", align 1
@.str.177 = private unnamed_addr constant [8 x i8] c"unwatch\00", align 1
@.str.178 = private unnamed_addr constant [8 x i8] c"cluster\00", align 1
@.str.179 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.180 = private unnamed_addr constant [8 x i8] c"restore\00", align 1
@.str.181 = private unnamed_addr constant [15 x i8] c"restore-asking\00", align 1
@.str.182 = private unnamed_addr constant [4 x i8] c"wmk\00", align 1
@.str.183 = private unnamed_addr constant [8 x i8] c"migrate\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"wR\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"asking\00", align 1
@.str.186 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"readwrite\00", align 1
@.str.188 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.190 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@.str.191 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@.str.192 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.193 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.194 = private unnamed_addr constant [8 x i8] c"evalsha\00", align 1
@.str.195 = private unnamed_addr constant [8 x i8] c"slowlog\00", align 1
@.str.196 = private unnamed_addr constant [3 x i8] c"aR\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.199 = private unnamed_addr constant [6 x i8] c"bitop\00", align 1
@.str.200 = private unnamed_addr constant [9 x i8] c"bitcount\00", align 1
@.str.201 = private unnamed_addr constant [7 x i8] c"bitpos\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.203 = private unnamed_addr constant [8 x i8] c"command\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"geoadd\00", align 1
@.str.205 = private unnamed_addr constant [10 x i8] c"georadius\00", align 1
@.str.206 = private unnamed_addr constant [13 x i8] c"georadius_ro\00", align 1
@.str.207 = private unnamed_addr constant [18 x i8] c"georadiusbymember\00", align 1
@.str.208 = private unnamed_addr constant [21 x i8] c"georadiusbymember_ro\00", align 1
@.str.209 = private unnamed_addr constant [8 x i8] c"geohash\00", align 1
@.str.210 = private unnamed_addr constant [7 x i8] c"geopos\00", align 1
@.str.211 = private unnamed_addr constant [8 x i8] c"geodist\00", align 1
@.str.212 = private unnamed_addr constant [11 x i8] c"pfselftest\00", align 1
@.str.213 = private unnamed_addr constant [6 x i8] c"pfadd\00", align 1
@.str.214 = private unnamed_addr constant [8 x i8] c"pfcount\00", align 1
@.str.215 = private unnamed_addr constant [8 x i8] c"pfmerge\00", align 1
@.str.216 = private unnamed_addr constant [8 x i8] c"pfdebug\00", align 1
@.str.217 = private unnamed_addr constant [5 x i8] c"xadd\00", align 1
@.str.218 = private unnamed_addr constant [5 x i8] c"wmFR\00", align 1
@.str.219 = private unnamed_addr constant [7 x i8] c"xrange\00", align 1
@.str.220 = private unnamed_addr constant [10 x i8] c"xrevrange\00", align 1
@.str.221 = private unnamed_addr constant [5 x i8] c"xlen\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"xread\00", align 1
@.str.223 = private unnamed_addr constant [3 x i8] c"rs\00", align 1
@.str.224 = private unnamed_addr constant [11 x i8] c"xreadgroup\00", align 1
@.str.225 = private unnamed_addr constant [7 x i8] c"xgroup\00", align 1
@.str.226 = private unnamed_addr constant [7 x i8] c"xsetid\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"xack\00", align 1
@.str.228 = private unnamed_addr constant [9 x i8] c"xpending\00", align 1
@.str.229 = private unnamed_addr constant [7 x i8] c"xclaim\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"xinfo\00", align 1
@.str.231 = private unnamed_addr constant [5 x i8] c"xdel\00", align 1
@.str.232 = private unnamed_addr constant [6 x i8] c"xtrim\00", align 1
@.str.233 = private unnamed_addr constant [4 x i8] c"wFR\00", align 1
@.str.234 = private unnamed_addr constant [5 x i8] c"post\00", align 1
@.str.235 = private unnamed_addr constant [3 x i8] c"lt\00", align 1
@.str.236 = private unnamed_addr constant [6 x i8] c"host:\00", align 1
@.str.237 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@.str.238 = private unnamed_addr constant [7 x i8] c"lolwut\00", align 1
@redisCommandTable = dso_local global [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }] [{ i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), void (%struct.client*)* @moduleCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), void (%struct.client*)* @getCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), void (%struct.client*)* @setCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), void (%struct.client*)* @setnxCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), void (%struct.client*)* @setexCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), void (%struct.client*)* @psetexCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), void (%struct.client*)* @appendCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), void (%struct.client*)* @strlenCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), void (%struct.client*)* @delCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), void (%struct.client*)* @unlinkCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), void (%struct.client*)* @existsCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), void (%struct.client*)* @setbitCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), void (%struct.client*)* @getbitCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), void (%struct.client*)* @bitfieldCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), void (%struct.client*)* @setrangeCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), void (%struct.client*)* @getrangeCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), void (%struct.client*)* @getrangeCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), void (%struct.client*)* @incrCommand, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), void (%struct.client*)* @decrCommand, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), void (%struct.client*)* @mgetCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), void (%struct.client*)* @rpushCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), void (%struct.client*)* @lpushCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), void (%struct.client*)* @rpushxCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), void (%struct.client*)* @lpushxCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), void (%struct.client*)* @linsertCommand, i32 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), void (%struct.client*)* @rpopCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), void (%struct.client*)* @lpopCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i32 0, i32 0), void (%struct.client*)* @brpopCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i32 0, i32 0), void (%struct.client*)* @brpoplpushCommand, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), void (%struct.client*)* @blpopCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), void (%struct.client*)* @llenCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), void (%struct.client*)* @lindexCommand, i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), void (%struct.client*)* @lsetCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), void (%struct.client*)* @lrangeCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), void (%struct.client*)* @ltrimCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), void (%struct.client*)* @lremCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), void (%struct.client*)* @rpoplpushCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), void (%struct.client*)* @saddCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), void (%struct.client*)* @sremCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), void (%struct.client*)* @smoveCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), void (%struct.client*)* @sismemberCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), void (%struct.client*)* @scardCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), void (%struct.client*)* @spopCommand, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), void (%struct.client*)* @srandmemberCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), void (%struct.client*)* @sinterCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i32 0, i32 0), void (%struct.client*)* @sinterstoreCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), void (%struct.client*)* @sunionCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i32 0, i32 0), void (%struct.client*)* @sunionstoreCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), void (%struct.client*)* @sdiffCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i32 0, i32 0), void (%struct.client*)* @sdiffstoreCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), void (%struct.client*)* @sinterCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), void (%struct.client*)* @sscanCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), void (%struct.client*)* @zaddCommand, i32 -4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i32 0, i32 0), void (%struct.client*)* @zincrbyCommand, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), void (%struct.client*)* @zremCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i32 0, i32 0), void (%struct.client*)* @zremrangebyscoreCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i32 0, i32 0), void (%struct.client*)* @zremrangebyrankCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), void (%struct.client*)* @zremrangebylexCommand, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i32 0, i32 0), void (%struct.client*)* @zunionstoreCommand, i32 -4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @zunionInterGetKeys, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), void (%struct.client*)* @zinterstoreCommand, i32 -4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @zunionInterGetKeys, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), void (%struct.client*)* @zrangeCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0), void (%struct.client*)* @zrangebyscoreCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i32 0, i32 0), void (%struct.client*)* @zrevrangebyscoreCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i32 0, i32 0), void (%struct.client*)* @zrangebylexCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i32 0, i32 0), void (%struct.client*)* @zrevrangebylexCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), void (%struct.client*)* @zcountCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), void (%struct.client*)* @zlexcountCommand, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), void (%struct.client*)* @zrevrangeCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i32 0, i32 0), void (%struct.client*)* @zcardCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), void (%struct.client*)* @zscoreCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), void (%struct.client*)* @zrankCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), void (%struct.client*)* @zrevrankCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i32 0, i32 0), void (%struct.client*)* @zscanCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i32 0, i32 0), void (%struct.client*)* @zpopminCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i32 0, i32 0), void (%struct.client*)* @zpopmaxCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), void (%struct.client*)* @bzpopminCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i32 0, i32 0), void (%struct.client*)* @bzpopmaxCommand, i32 -3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.90, i32 0, i32 0), void (%struct.client*)* @hsetCommand, i32 -4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), void (%struct.client*)* @hsetnxCommand, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), void (%struct.client*)* @hgetCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.93, i32 0, i32 0), void (%struct.client*)* @hsetCommand, i32 -4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i32 0, i32 0), void (%struct.client*)* @hmgetCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), void (%struct.client*)* @hincrbyCommand, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0), void (%struct.client*)* @hincrbyfloatCommand, i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0), void (%struct.client*)* @hdelCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.98, i32 0, i32 0), void (%struct.client*)* @hlenCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), void (%struct.client*)* @hstrlenCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), void (%struct.client*)* @hkeysCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), void (%struct.client*)* @hvalsCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), void (%struct.client*)* @hgetallCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.103, i32 0, i32 0), void (%struct.client*)* @hexistsCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), void (%struct.client*)* @hscanCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i32 0, i32 0), void (%struct.client*)* @incrbyCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i32 0, i32 0), void (%struct.client*)* @decrbyCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i32 0, i32 0), void (%struct.client*)* @incrbyfloatCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i32 0, i32 0), void (%struct.client*)* @getsetCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), void (%struct.client*)* @msetCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 2, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.110, i32 0, i32 0), void (%struct.client*)* @msetnxCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 2, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i32 0, i32 0), void (%struct.client*)* @randomkeyCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), void (%struct.client*)* @selectCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.113, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0), void (%struct.client*)* @swapdbCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), void (%struct.client*)* @moveCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.116, i32 0, i32 0), void (%struct.client*)* @renameCommand, i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), void (%struct.client*)* @renamenxCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), void (%struct.client*)* @expireCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), void (%struct.client*)* @expireatCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.120, i32 0, i32 0), void (%struct.client*)* @pexpireCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.121, i32 0, i32 0), void (%struct.client*)* @pexpireatCommand, i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), void (%struct.client*)* @keysCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i32 0, i32 0), void (%struct.client*)* @scanCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i32 0, i32 0), void (%struct.client*)* @dbsizeCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), void (%struct.client*)* @authCommand, i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), void (%struct.client*)* @pingCommand, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.128, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), void (%struct.client*)* @echoCommand, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), void (%struct.client*)* @saveCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), void (%struct.client*)* @bgsaveCommand, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.133, i32 0, i32 0), void (%struct.client*)* @bgrewriteaofCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i32 0, i32 0), void (%struct.client*)* @shutdownCommand, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.136, i32 0, i32 0), void (%struct.client*)* @lastsaveCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.138, i32 0, i32 0), void (%struct.client*)* @typeCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0), void (%struct.client*)* @multiCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), void (%struct.client*)* @execCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.142, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), void (%struct.client*)* @discardCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), void (%struct.client*)* @syncCommand, i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.145, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), void (%struct.client*)* @syncCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.145, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i32 0, i32 0), void (%struct.client*)* @replconfCommand, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i32 0, i32 0), void (%struct.client*)* @flushdbCommand, i32 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.149, i32 0, i32 0), void (%struct.client*)* @flushallCommand, i32 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.150, i32 0, i32 0), void (%struct.client*)* @sortCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @sortGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i32 0, i32 0), void (%struct.client*)* @infoCommand, i32 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.153, i32 0, i32 0), void (%struct.client*)* @monitorCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.154, i32 0, i32 0), void (%struct.client*)* @ttlCommand, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i32 0, i32 0), void (%struct.client*)* @touchCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.157, i32 0, i32 0), void (%struct.client*)* @pttlCommand, i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.155, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.158, i32 0, i32 0), void (%struct.client*)* @persistCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.159, i32 0, i32 0), void (%struct.client*)* @replicaofCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.161, i32 0, i32 0), void (%struct.client*)* @replicaofCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.160, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i32 0, i32 0), void (%struct.client*)* @roleCommand, i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.163, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.164, i32 0, i32 0), void (%struct.client*)* @debugCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i32 0, i32 0), void (%struct.client*)* @configCommand, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.166, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.167, i32 0, i32 0), void (%struct.client*)* @subscribeCommand, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i32 0, i32 0), void (%struct.client*)* @unsubscribeCommand, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.170, i32 0, i32 0), void (%struct.client*)* @psubscribeCommand, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.171, i32 0, i32 0), void (%struct.client*)* @punsubscribeCommand, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.172, i32 0, i32 0), void (%struct.client*)* @publishCommand, i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i32 0, i32 0), void (%struct.client*)* @pubsubCommand, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.176, i32 0, i32 0), void (%struct.client*)* @watchCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.177, i32 0, i32 0), void (%struct.client*)* @unwatchCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.140, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i32 0, i32 0), void (%struct.client*)* @clusterCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.180, i32 0, i32 0), void (%struct.client*)* @restoreCommand, i32 -4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i32 0, i32 0), void (%struct.client*)* @restoreCommand, i32 -4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.182, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.183, i32 0, i32 0), void (%struct.client*)* @migrateCommand, i32 -6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.184, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @migrateGetKeys, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0), void (%struct.client*)* @askingCommand, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.186, i32 0, i32 0), void (%struct.client*)* @readonlyCommand, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.187, i32 0, i32 0), void (%struct.client*)* @readwriteCommand, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.188, i32 0, i32 0), void (%struct.client*)* @dumpCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i32 0, i32 0), void (%struct.client*)* @objectCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 2, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i32 0, i32 0), void (%struct.client*)* @memoryCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.191, i32 0, i32 0), void (%struct.client*)* @clientCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.192, i32 0, i32 0), void (%struct.client*)* @evalCommand, i32 -3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.193, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @evalGetKeys, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.194, i32 0, i32 0), void (%struct.client*)* @evalShaCommand, i32 -3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.193, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @evalGetKeys, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i32 0, i32 0), void (%struct.client*)* @slowlogCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i32 0, i32 0), void (%struct.client*)* @scriptCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.193, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), void (%struct.client*)* @timeCommand, i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.199, i32 0, i32 0), void (%struct.client*)* @bitopCommand, i32 -4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 2, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.200, i32 0, i32 0), void (%struct.client*)* @bitcountCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.201, i32 0, i32 0), void (%struct.client*)* @bitposCommand, i32 -3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.202, i32 0, i32 0), void (%struct.client*)* @waitCommand, i32 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.193, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203, i32 0, i32 0), void (%struct.client*)* @commandCommand, i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.152, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0), void (%struct.client*)* @geoaddCommand, i32 -5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i32 0, i32 0), void (%struct.client*)* @georadiusCommand, i32 -6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @georadiusGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.206, i32 0, i32 0), void (%struct.client*)* @georadiusroCommand, i32 -6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @georadiusGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.207, i32 0, i32 0), void (%struct.client*)* @georadiusbymemberCommand, i32 -5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @georadiusGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.208, i32 0, i32 0), void (%struct.client*)* @georadiusbymemberroCommand, i32 -5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @georadiusGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i32 0, i32 0), void (%struct.client*)* @geohashCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.210, i32 0, i32 0), void (%struct.client*)* @geoposCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.211, i32 0, i32 0), void (%struct.client*)* @geodistCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.212, i32 0, i32 0), void (%struct.client*)* @pfselftestCommand, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i32 0, i32 0), void (%struct.client*)* @pfaddCommand, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.214, i32 0, i32 0), void (%struct.client*)* @pfcountCommand, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.215, i32 0, i32 0), void (%struct.client*)* @pfmergeCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 -1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.216, i32 0, i32 0), void (%struct.client*)* @pfdebugCommand, i32 -3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.217, i32 0, i32 0), void (%struct.client*)* @xaddCommand, i32 -5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.218, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.219, i32 0, i32 0), void (%struct.client*)* @xrangeCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.220, i32 0, i32 0), void (%struct.client*)* @xrevrangeCommand, i32 -4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.221, i32 0, i32 0), void (%struct.client*)* @xlenCommand, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i32 0, i32 0), void (%struct.client*)* @xreadCommand, i32 -4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.223, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @xreadGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.224, i32 0, i32 0), void (%struct.client*)* @xreadCommand, i32 -7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* @xreadGetKeys, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), void (%struct.client*)* @xgroupCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 2, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.226, i32 0, i32 0), void (%struct.client*)* @xsetidCommand, i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0), void (%struct.client*)* @xackCommand, i32 -4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.228, i32 0, i32 0), void (%struct.client*)* @xpendingCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.229, i32 0, i32 0), void (%struct.client*)* @xclaimCommand, i32 -6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i32 0, i32 0), void (%struct.client*)* @xinfoCommand, i32 -2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 2, i32 2, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.231, i32 0, i32 0), void (%struct.client*)* @xdelCommand, i32 -3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.232, i32 0, i32 0), void (%struct.client*)* @xtrimCommand, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.233, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 1, i32 1, i32 1, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.234, i32 0, i32 0), void (%struct.client*)* @securityWarningCommand, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.235, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.236, i32 0, i32 0), void (%struct.client*)* @securityWarningCommand, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.235, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.237, i32 0, i32 0), void (%struct.client*)* @latencyCommand, i32 -2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.238, i32 0, i32 0), void (%struct.client*)* @lolwutCommand, i32 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i32 0, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* null, i32 0, i32 0, i32 0, i64 0, i64 0 }], align 16, !dbg !0
@serverLogRaw.syslogLevelMap = private unnamed_addr constant [4 x i32] [i32 7, i32 6, i32 5, i32 4], align 16
@.str.239 = private unnamed_addr constant [5 x i8] c".-*#\00", align 1
@server = common dso_local global %struct.redisServer zeroinitializer, align 8, !dbg !604
@.str.240 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.241 = private unnamed_addr constant [19 x i8] c"%d %b %Y %H:%M:%S.\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@.str.243 = private unnamed_addr constant [16 x i8] c"%d:%c %s %c %s\0A\00", align 1
@.str.244 = private unnamed_addr constant [18 x i8] c":signal-handler (\00", align 1
@.str.245 = private unnamed_addr constant [3 x i8] c") \00", align 1
@.str.246 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@objectKeyPointerValueDictType = dso_local global %struct.dictType { i64 (i8*)* @dictEncObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictEncObjKeyCompare, void (i8*, i8*)* @dictObjectDestructor, void (i8*, i8*)* null }, align 8, !dbg !316
@objectKeyHeapPointerValueDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictEncObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictEncObjKeyCompare, void (i8*, i8*)* @dictObjectDestructor, void (i8*, i8*)* @dictVanillaFree }, align 8, !dbg !318
@setDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !320
@zsetDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* null, void (i8*, i8*)* null }, align 8, !dbg !322
@dbDictType = dso_local global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* @dictObjectDestructor }, align 8, !dbg !324
@shaScriptObjectDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsCaseHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCaseCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* @dictObjectDestructor }, align 8, !dbg !326
@keyptrDictType = dso_local global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* null, void (i8*, i8*)* null }, align 8, !dbg !328
@commandTableDictType = dso_local global %struct.dictType { i64 (i8*)* @dictSdsCaseHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCaseCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !330
@hashDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* @dictSdsDestructor }, align 8, !dbg !332
@keylistDictType = dso_local global %struct.dictType { i64 (i8*)* @dictObjHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictObjKeyCompare, void (i8*, i8*)* @dictObjectDestructor, void (i8*, i8*)* @dictListDestructor }, align 8, !dbg !334
@clusterNodesDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !336
@clusterNodesBlackListDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsCaseHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCaseCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !338
@modulesDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsCaseHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCaseCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !340
@migrateCacheDictType = dso_local global %struct.dictType { i64 (i8*)* @dictSdsHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !342
@replScriptCacheDictType = dso_local local_unnamed_addr global %struct.dictType { i64 (i8*)* @dictSdsCaseHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictSdsKeyCaseCompare, void (i8*, i8*)* @dictSdsDestructor, void (i8*, i8*)* null }, align 8, !dbg !344
@.str.247 = private unnamed_addr constant [20 x i8] c"Closing idle client\00", align 1
@ClientsPeakMemInput = common dso_local local_unnamed_addr global [8 x i64] zeroinitializer, align 16, !dbg !1133
@ClientsPeakMemOutput = common dso_local local_unnamed_addr global [8 x i64] zeroinitializer, align 16, !dbg !1138
@databasesCron.resize_db = internal unnamed_addr global i32 0, align 4, !dbg !346
@databasesCron.rehash_db = internal unnamed_addr global i32 0, align 4, !dbg !362
@.str.248 = private unnamed_addr constant [96 x i8] c"SIGTERM received but errors trying to shut down the server, check the logs for more information\00", align 1
@.str.249 = private unnamed_addr constant [51 x i8] c"DB %d: %lld keys (%lld volatile) in %lld slots HT.\00", align 1
@.str.250 = private unnamed_addr constant [55 x i8] c"%lu clients connected (%lu replicas), %zu bytes in use\00", align 1
@.str.251 = private unnamed_addr constant [70 x i8] c"wait3() returned an error: %s. rdb_child_pid = %d, aof_child_pid = %d\00", align 1
@.str.252 = private unnamed_addr constant [48 x i8] c"Warning, detected child with unmatched pid: %ld\00", align 1
@.str.253 = private unnamed_addr constant [36 x i8] c"%d changes in %d seconds. Saving...\00", align 1
@.str.254 = private unnamed_addr constant [53 x i8] c"Starting automatic rewriting of AOF on %lld%% growth\00", align 1
@.str.255 = private unnamed_addr constant [9 x i8] c"REPLCONF\00", align 1
@.str.256 = private unnamed_addr constant [7 x i8] c"GETACK\00", align 1
@.str.257 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.258 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@shared = common dso_local local_unnamed_addr global %struct.sharedObjectsStruct zeroinitializer, align 8, !dbg !531
@.str.259 = private unnamed_addr constant [6 x i8] c"+OK\0D\0A\00", align 1
@.str.260 = private unnamed_addr constant [7 x i8] c"-ERR\0D\0A\00", align 1
@.str.261 = private unnamed_addr constant [7 x i8] c"$0\0D\0A\0D\0A\00", align 1
@.str.262 = private unnamed_addr constant [5 x i8] c":0\0D\0A\00", align 1
@.str.263 = private unnamed_addr constant [5 x i8] c":1\0D\0A\00", align 1
@.str.264 = private unnamed_addr constant [6 x i8] c":-1\0D\0A\00", align 1
@.str.265 = private unnamed_addr constant [6 x i8] c"$-1\0D\0A\00", align 1
@.str.266 = private unnamed_addr constant [6 x i8] c"*-1\0D\0A\00", align 1
@.str.267 = private unnamed_addr constant [5 x i8] c"*0\0D\0A\00", align 1
@.str.268 = private unnamed_addr constant [8 x i8] c"+PONG\0D\0A\00", align 1
@.str.269 = private unnamed_addr constant [10 x i8] c"+QUEUED\0D\0A\00", align 1
@.str.270 = private unnamed_addr constant [16 x i8] c"*2\0D\0A$1\0D\0A0\0D\0A*0\0D\0A\00", align 1
@.str.271 = private unnamed_addr constant [69 x i8] c"-WRONGTYPE Operation against a key holding the wrong kind of value\0D\0A\00", align 1
@.str.272 = private unnamed_addr constant [19 x i8] c"-ERR no such key\0D\0A\00", align 1
@.str.273 = private unnamed_addr constant [20 x i8] c"-ERR syntax error\0D\0A\00", align 1
@.str.274 = private unnamed_addr constant [51 x i8] c"-ERR source and destination objects are the same\0D\0A\00", align 1
@.str.275 = private unnamed_addr constant [26 x i8] c"-ERR index out of range\0D\0A\00", align 1
@.str.276 = private unnamed_addr constant [49 x i8] c"-NOSCRIPT No matching script. Please use EVAL.\0D\0A\00", align 1
@.str.277 = private unnamed_addr constant [50 x i8] c"-LOADING Redis is loading the dataset in memory\0D\0A\00", align 1
@.str.278 = private unnamed_addr constant [90 x i8] c"-BUSY Redis is busy running a script. You can only call SCRIPT KILL or SHUTDOWN NOSAVE.\0D\0A\00", align 1
@.str.279 = private unnamed_addr constant [84 x i8] c"-MASTERDOWN Link with MASTER is down and replica-serve-stale-data is set to 'no'.\0D\0A\00", align 1
@.str.280 = private unnamed_addr constant [347 x i8] c"-MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.\0D\0A\00", align 1
@.str.281 = private unnamed_addr constant [57 x i8] c"-READONLY You can't write against a read only replica.\0D\0A\00", align 1
@.str.282 = private unnamed_addr constant [35 x i8] c"-NOAUTH Authentication required.\0D\0A\00", align 1
@.str.283 = private unnamed_addr constant [59 x i8] c"-OOM command not allowed when used memory > 'maxmemory'.\0D\0A\00", align 1
@.str.284 = private unnamed_addr constant [63 x i8] c"-EXECABORT Transaction discarded because of previous errors.\0D\0A\00", align 1
@.str.285 = private unnamed_addr constant [49 x i8] c"-NOREPLICAS Not enough good replicas to write.\0D\0A\00", align 1
@.str.286 = private unnamed_addr constant [43 x i8] c"-BUSYKEY Target key name already exists.\0D\0A\00", align 1
@.str.287 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.288 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.289 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.290 = private unnamed_addr constant [26 x i8] c"*2\0D\0A$6\0D\0ASELECT\0D\0A$%d\0D\0A%s\0D\0A\00", align 1
@.str.291 = private unnamed_addr constant [14 x i8] c"$7\0D\0Amessage\0D\0A\00", align 1
@.str.292 = private unnamed_addr constant [15 x i8] c"$8\0D\0Apmessage\0D\0A\00", align 1
@.str.293 = private unnamed_addr constant [16 x i8] c"$9\0D\0Asubscribe\0D\0A\00", align 1
@.str.294 = private unnamed_addr constant [19 x i8] c"$11\0D\0Aunsubscribe\0D\0A\00", align 1
@.str.295 = private unnamed_addr constant [18 x i8] c"$10\0D\0Apsubscribe\0D\0A\00", align 1
@.str.296 = private unnamed_addr constant [20 x i8] c"$12\0D\0Apunsubscribe\0D\0A\00", align 1
@.str.297 = private unnamed_addr constant [4 x i8] c"DEL\00", align 1
@.str.298 = private unnamed_addr constant [7 x i8] c"UNLINK\00", align 1
@.str.299 = private unnamed_addr constant [5 x i8] c"RPOP\00", align 1
@.str.300 = private unnamed_addr constant [5 x i8] c"LPOP\00", align 1
@.str.301 = private unnamed_addr constant [6 x i8] c"LPUSH\00", align 1
@.str.302 = private unnamed_addr constant [10 x i8] c"RPOPLPUSH\00", align 1
@.str.303 = private unnamed_addr constant [8 x i8] c"ZPOPMIN\00", align 1
@.str.304 = private unnamed_addr constant [8 x i8] c"ZPOPMAX\00", align 1
@.str.305 = private unnamed_addr constant [6 x i8] c"*%d\0D\0A\00", align 1
@.str.306 = private unnamed_addr constant [6 x i8] c"$%d\0D\0A\00", align 1
@.str.307 = private unnamed_addr constant [10 x i8] c"minstring\00", align 1
@.str.308 = private unnamed_addr constant [10 x i8] c"maxstring\00", align 1
@.str.309 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.310 = private unnamed_addr constant [6 x i8] c"redis\00", align 1
@.str.311 = private unnamed_addr constant [9 x i8] c"dump.rdb\00", align 1
@.str.312 = private unnamed_addr constant [15 x i8] c"appendonly.aof\00", align 1
@.str.313 = private unnamed_addr constant [11 x i8] c"nodes.conf\00", align 1
@clientBufferLimitsDefaults = external dso_local local_unnamed_addr global [3 x %struct.clientBufferLimitsConfig], align 16
@R_Zero = common dso_local local_unnamed_addr global double 0.000000e+00, align 8, !dbg !596
@R_PosInf = common dso_local local_unnamed_addr global double 0.000000e+00, align 8, !dbg !598
@R_NegInf = common dso_local local_unnamed_addr global double 0.000000e+00, align 8, !dbg !600
@R_Nan = common dso_local local_unnamed_addr global double 0.000000e+00, align 8, !dbg !602
@.str.314 = private unnamed_addr constant [22 x i8] c"<no assertion failed>\00", align 1
@.str.315 = private unnamed_addr constant [10 x i8] c"<no file>\00", align 1
@.str.316 = private unnamed_addr constant [61 x i8] c"Can't restart: this process has no permissions to execute %s\00", align 1
@.str.317 = private unnamed_addr constant [52 x i8] c"Can't restart: configuration rewrite process failed\00", align 1
@.str.318 = private unnamed_addr constant [44 x i8] c"Can't restart: error preparing for shutdown\00", align 1
@environ = external dso_local local_unnamed_addr global i8**, align 8
@.str.319 = private unnamed_addr constant [117 x i8] c"Unable to obtain the current NOFILE limit (%s), assuming 1024 and setting the max clients configuration accordingly.\00", align 1
@.str.320 = private unnamed_addr constant [136 x i8] c"Your current 'ulimit -n' of %llu is not enough for the server to start. Please increase your open file limit to at least %llu. Exiting.\00", align 1
@.str.321 = private unnamed_addr constant [77 x i8] c"You requested maxclients of %d requiring at least %llu max file descriptors.\00", align 1
@.str.322 = private unnamed_addr constant [69 x i8] c"Server can't set maximum open files to %llu because of OS error: %s.\00", align 1
@.str.323 = private unnamed_addr constant [152 x i8] c"Current maximum open files is %llu. maxclients has been reduced to %d to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.\00", align 1
@.str.324 = private unnamed_addr constant [80 x i8] c"Increased maximum number of open files to %llu (it was originally set to %llu).\00", align 1
@.str.325 = private unnamed_addr constant [35 x i8] c"Not listening to IPv6: unsupproted\00", align 1
@.str.326 = private unnamed_addr constant [35 x i8] c"Not listening to IPv4: unsupproted\00", align 1
@.str.327 = private unnamed_addr constant [55 x i8] c"Could not create server TCP listening socket %s:%d: %s\00", align 1
@.str.328 = private unnamed_addr constant [52 x i8] c"Failed creating the event loop. Error message: '%s'\00", align 1
@.str.329 = private unnamed_addr constant [24 x i8] c"Opening Unix socket: %s\00", align 1
@.str.330 = private unnamed_addr constant [44 x i8] c"Configured to not listen anywhere, exiting.\00", align 1
@.str.331 = private unnamed_addr constant [74 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.c\00", align 1
@.str.332 = private unnamed_addr constant [32 x i8] c"Can't create event loop timers.\00", align 1
@.str.333 = private unnamed_addr constant [53 x i8] c"Unrecoverable error creating server.ipfd file event.\00", align 1
@.str.334 = private unnamed_addr constant [53 x i8] c"Unrecoverable error creating server.sofd file event.\00", align 1
@.str.335 = private unnamed_addr constant [79 x i8] c"Error registering the readable event for the module blocked clients subsystem.\00", align 1
@.str.336 = private unnamed_addr constant [36 x i8] c"Can't open the append-only file: %s\00", align 1
@.str.337 = private unnamed_addr constant [118 x i8] c"Warning: 32 bit instance detected but no memory limit set. Setting 3 GB maxmemory limit with 'noeviction' policy now.\00", align 1
@.str.338 = private unnamed_addr constant [25 x i8] c"Unsupported command flag\00", align 1
@.str.339 = private unnamed_addr constant [41 x i8] c"retval1 == DICT_OK && retval2 == DICT_OK\00", align 1
@.str.340 = private unnamed_addr constant [13 x i8] c"fast-command\00", align 1
@.str.341 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.342 = private unnamed_addr constant [9 x i8] c"`%.*s`, \00", align 1
@.str.343 = private unnamed_addr constant [51 x i8] c"unknown command `%s`, with args beginning with: %s\00", align 1
@.str.344 = private unnamed_addr constant [43 x i8] c"wrong number of arguments for '%s' command\00", align 1
@.str.345 = private unnamed_addr constant [46 x i8] c"-MISCONF Errors writing to the AOF file: %s\0D\0A\00", align 1
@.str.346 = private unnamed_addr constant [73 x i8] c"only (P)SUBSCRIBE / (P)UNSUBSCRIBE / PING / QUIT allowed in this context\00", align 1
@.str.347 = private unnamed_addr constant [31 x i8] c"Removing the unix socket file.\00", align 1
@.str.348 = private unnamed_addr constant [27 x i8] c"User requested shutdown...\00", align 1
@.str.349 = private unnamed_addr constant [45 x i8] c"There is a child saving an .rdb. Killing it!\00", align 1
@.str.350 = private unnamed_addr constant [33 x i8] c"Writing initial AOF, can't exit.\00", align 1
@.str.351 = private unnamed_addr constant [48 x i8] c"There is a child rewriting the AOF. Killing it!\00", align 1
@.str.352 = private unnamed_addr constant [33 x i8] c"Calling fsync() on the AOF file.\00", align 1
@.str.353 = private unnamed_addr constant [46 x i8] c"Saving the final RDB snapshot before exiting.\00", align 1
@.str.354 = private unnamed_addr constant [41 x i8] c"Error trying to save the DB, can't exit.\00", align 1
@.str.355 = private unnamed_addr constant [23 x i8] c"Removing the pid file.\00", align 1
@.str.356 = private unnamed_addr constant [36 x i8] c"%s is now ready to exit, bye bye...\00", align 1
@.str.357 = private unnamed_addr constant [9 x i8] c"Sentinel\00", align 1
@.str.358 = private unnamed_addr constant [6 x i8] c"Redis\00", align 1
@.str.359 = private unnamed_addr constant [41 x i8] c"Client sent AUTH, but no password is set\00", align 1
@.str.360 = private unnamed_addr constant [17 x i8] c"invalid password\00", align 1
@.str.361 = private unnamed_addr constant [5 x i8] c"pong\00", align 1
@.str.362 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.363 = private unnamed_addr constant [8 x i8] c"denyoom\00", align 1
@.str.364 = private unnamed_addr constant [6 x i8] c"admin\00", align 1
@.str.365 = private unnamed_addr constant [9 x i8] c"noscript\00", align 1
@.str.366 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.367 = private unnamed_addr constant [16 x i8] c"sort_for_script\00", align 1
@.str.368 = private unnamed_addr constant [8 x i8] c"loading\00", align 1
@.str.369 = private unnamed_addr constant [6 x i8] c"stale\00", align 1
@.str.370 = private unnamed_addr constant [13 x i8] c"skip_monitor\00", align 1
@.str.371 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.372 = private unnamed_addr constant [12 x i8] c"movablekeys\00", align 1
@.str.373 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.374 = private unnamed_addr constant [60 x i8] c"(no subcommand) -- Return details about all Redis commands.\00", align 1
@.str.375 = private unnamed_addr constant [67 x i8] c"COUNT -- Return the total number of commands in this Redis server.\00", align 1
@.str.376 = private unnamed_addr constant [69 x i8] c"GETKEYS <full-command> -- Return the keys from a full Redis command.\00", align 1
@.str.377 = private unnamed_addr constant [73 x i8] c"INFO [command-name ...] -- Return details about multiple Redis commands.\00", align 1
@.str.378 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.379 = private unnamed_addr constant [8 x i8] c"getkeys\00", align 1
@.str.380 = private unnamed_addr constant [26 x i8] c"Invalid command specified\00", align 1
@.str.381 = private unnamed_addr constant [33 x i8] c"The command has no key arguments\00", align 1
@.str.382 = private unnamed_addr constant [50 x i8] c"Invalid number of arguments specified for command\00", align 1
@.str.383 = private unnamed_addr constant [40 x i8] c"Invalid arguments specified for command\00", align 1
@.str.384 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.385 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.386 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@genRedisInfoString.call_uname = internal unnamed_addr global i1 false, align 4, !dbg !1143
@genRedisInfoString.name = internal global %struct.utsname zeroinitializer, align 1, !dbg !517
@.str.387 = private unnamed_addr constant [9 x i8] c"sentinel\00", align 1
@.str.388 = private unnamed_addr constant [11 x i8] c"standalone\00", align 1
@.str.389 = private unnamed_addr constant [346 x i8] c"# Server\0D\0Aredis_version:%s\0D\0Aredis_git_sha1:%s\0D\0Aredis_git_dirty:%d\0D\0Aredis_build_id:%llx\0D\0Aredis_mode:%s\0D\0Aos:%s %s %s\0D\0Aarch_bits:%d\0D\0Amultiplexing_api:%s\0D\0Aatomicvar_api:%s\0D\0Agcc_version:%d.%d.%d\0D\0Aprocess_id:%ld\0D\0Arun_id:%s\0D\0Atcp_port:%d\0D\0Auptime_in_seconds:%jd\0D\0Auptime_in_days:%jd\0D\0Ahz:%d\0D\0Aconfigured_hz:%d\0D\0Alru_clock:%ld\0D\0Aexecutable:%s\0D\0Aconfig_file:%s\0D\0A\00", align 1
@.str.390 = private unnamed_addr constant [6 x i8] c"5.0.6\00", align 1
@.str.391 = private unnamed_addr constant [15 x i8] c"atomic-builtin\00", align 1
@.str.392 = private unnamed_addr constant [8 x i8] c"clients\00", align 1
@.str.393 = private unnamed_addr constant [128 x i8] c"# Clients\0D\0Aconnected_clients:%lu\0D\0Aclient_recent_max_input_buffer:%zu\0D\0Aclient_recent_max_output_buffer:%zu\0D\0Ablocked_clients:%d\0D\0A\00", align 1
@.str.394 = private unnamed_addr constant [1016 x i8] c"# Memory\0D\0Aused_memory:%zu\0D\0Aused_memory_human:%s\0D\0Aused_memory_rss:%zu\0D\0Aused_memory_rss_human:%s\0D\0Aused_memory_peak:%zu\0D\0Aused_memory_peak_human:%s\0D\0Aused_memory_peak_perc:%.2f%%\0D\0Aused_memory_overhead:%zu\0D\0Aused_memory_startup:%zu\0D\0Aused_memory_dataset:%zu\0D\0Aused_memory_dataset_perc:%.2f%%\0D\0Aallocator_allocated:%zu\0D\0Aallocator_active:%zu\0D\0Aallocator_resident:%zu\0D\0Atotal_system_memory:%lu\0D\0Atotal_system_memory_human:%s\0D\0Aused_memory_lua:%lld\0D\0Aused_memory_lua_human:%s\0D\0Aused_memory_scripts:%lld\0D\0Aused_memory_scripts_human:%s\0D\0Anumber_of_cached_scripts:%lu\0D\0Amaxmemory:%lld\0D\0Amaxmemory_human:%s\0D\0Amaxmemory_policy:%s\0D\0Aallocator_frag_ratio:%.2f\0D\0Aallocator_frag_bytes:%zu\0D\0Aallocator_rss_ratio:%.2f\0D\0Aallocator_rss_bytes:%zd\0D\0Arss_overhead_ratio:%.2f\0D\0Arss_overhead_bytes:%zd\0D\0Amem_fragmentation_ratio:%.2f\0D\0Amem_fragmentation_bytes:%zd\0D\0Amem_not_counted_for_evict:%zu\0D\0Amem_replication_backlog:%zu\0D\0Amem_clients_slaves:%zu\0D\0Amem_clients_normal:%zu\0D\0Amem_aof_buffer:%zu\0D\0Amem_allocator:%s\0D\0Aactive_defrag_running:%d\0D\0Alazyfree_pending_objects:%zu\0D\0A\00", align 1
@.str.395 = private unnamed_addr constant [5 x i8] c"libc\00", align 1
@.str.396 = private unnamed_addr constant [12 x i8] c"persistence\00", align 1
@.str.397 = private unnamed_addr constant [440 x i8] c"# Persistence\0D\0Aloading:%d\0D\0Ardb_changes_since_last_save:%lld\0D\0Ardb_bgsave_in_progress:%d\0D\0Ardb_last_save_time:%jd\0D\0Ardb_last_bgsave_status:%s\0D\0Ardb_last_bgsave_time_sec:%jd\0D\0Ardb_current_bgsave_time_sec:%jd\0D\0Ardb_last_cow_size:%zu\0D\0Aaof_enabled:%d\0D\0Aaof_rewrite_in_progress:%d\0D\0Aaof_rewrite_scheduled:%d\0D\0Aaof_last_rewrite_time_sec:%jd\0D\0Aaof_current_rewrite_time_sec:%jd\0D\0Aaof_last_bgrewrite_status:%s\0D\0Aaof_last_write_status:%s\0D\0Aaof_last_cow_size:%zu\0D\0A\00", align 1
@.str.398 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.399 = private unnamed_addr constant [4 x i8] c"err\00", align 1
@.str.400 = private unnamed_addr constant [173 x i8] c"aof_current_size:%lld\0D\0Aaof_base_size:%lld\0D\0Aaof_pending_rewrite:%d\0D\0Aaof_buffer_length:%zu\0D\0Aaof_rewrite_buffer_length:%lu\0D\0Aaof_pending_bio_fsync:%llu\0D\0Aaof_delayed_fsync:%lu\0D\0A\00", align 1
@.str.401 = private unnamed_addr constant [129 x i8] c"loading_start_time:%jd\0D\0Aloading_total_bytes:%llu\0D\0Aloading_loaded_bytes:%llu\0D\0Aloading_loaded_perc:%.2f\0D\0Aloading_eta_seconds:%jd\0D\0A\00", align 1
@.str.402 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@.str.403 = private unnamed_addr constant [693 x i8] c"# Stats\0D\0Atotal_connections_received:%lld\0D\0Atotal_commands_processed:%lld\0D\0Ainstantaneous_ops_per_sec:%lld\0D\0Atotal_net_input_bytes:%lld\0D\0Atotal_net_output_bytes:%lld\0D\0Ainstantaneous_input_kbps:%.2f\0D\0Ainstantaneous_output_kbps:%.2f\0D\0Arejected_connections:%lld\0D\0Async_full:%lld\0D\0Async_partial_ok:%lld\0D\0Async_partial_err:%lld\0D\0Aexpired_keys:%lld\0D\0Aexpired_stale_perc:%.2f\0D\0Aexpired_time_cap_reached_count:%lld\0D\0Aevicted_keys:%lld\0D\0Akeyspace_hits:%lld\0D\0Akeyspace_misses:%lld\0D\0Apubsub_channels:%ld\0D\0Apubsub_patterns:%lu\0D\0Alatest_fork_usec:%lld\0D\0Amigrate_cached_sockets:%ld\0D\0Aslave_expires_tracked_keys:%zu\0D\0Aactive_defrag_hits:%lld\0D\0Aactive_defrag_misses:%lld\0D\0Aactive_defrag_key_hits:%lld\0D\0Aactive_defrag_key_misses:%lld\0D\0A\00", align 1
@.str.404 = private unnamed_addr constant [12 x i8] c"replication\00", align 1
@.str.405 = private unnamed_addr constant [25 x i8] c"# Replication\0D\0Arole:%s\0D\0A\00", align 1
@.str.406 = private unnamed_addr constant [7 x i8] c"master\00", align 1
@.str.407 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@.str.408 = private unnamed_addr constant [139 x i8] c"master_host:%s\0D\0Amaster_port:%d\0D\0Amaster_link_status:%s\0D\0Amaster_last_io_seconds_ago:%d\0D\0Amaster_sync_in_progress:%d\0D\0Aslave_repl_offset:%lld\0D\0A\00", align 1
@.str.409 = private unnamed_addr constant [3 x i8] c"up\00", align 1
@.str.410 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.411 = private unnamed_addr constant [66 x i8] c"master_sync_left_bytes:%lld\0D\0Amaster_sync_last_io_seconds_ago:%d\0D\0A\00", align 1
@.str.412 = private unnamed_addr constant [37 x i8] c"master_link_down_since_seconds:%jd\0D\0A\00", align 1
@.str.413 = private unnamed_addr constant [40 x i8] c"slave_priority:%d\0D\0Aslave_read_only:%d\0D\0A\00", align 1
@.str.414 = private unnamed_addr constant [23 x i8] c"connected_slaves:%lu\0D\0A\00", align 1
@.str.415 = private unnamed_addr constant [28 x i8] c"min_slaves_good_slaves:%d\0D\0A\00", align 1
@.str.416 = private unnamed_addr constant [12 x i8] c"wait_bgsave\00", align 1
@.str.417 = private unnamed_addr constant [10 x i8] c"send_bulk\00", align 1
@.str.418 = private unnamed_addr constant [7 x i8] c"online\00", align 1
@.str.419 = private unnamed_addr constant [53 x i8] c"slave%d:ip=%s,port=%d,state=%s,offset=%lld,lag=%ld\0D\0A\00", align 1
@.str.420 = private unnamed_addr constant [200 x i8] c"master_replid:%s\0D\0Amaster_replid2:%s\0D\0Amaster_repl_offset:%lld\0D\0Asecond_repl_offset:%lld\0D\0Arepl_backlog_active:%d\0D\0Arepl_backlog_size:%lld\0D\0Arepl_backlog_first_byte_offset:%lld\0D\0Arepl_backlog_histlen:%lld\0D\0A\00", align 1
@.str.421 = private unnamed_addr constant [4 x i8] c"cpu\00", align 1
@.str.422 = private unnamed_addr constant [124 x i8] c"# CPU\0D\0Aused_cpu_sys:%ld.%06ld\0D\0Aused_cpu_user:%ld.%06ld\0D\0Aused_cpu_sys_children:%ld.%06ld\0D\0Aused_cpu_user_children:%ld.%06ld\0D\0A\00", align 1
@.str.423 = private unnamed_addr constant [13 x i8] c"commandstats\00", align 1
@.str.424 = private unnamed_addr constant [17 x i8] c"# Commandstats\0D\0A\00", align 1
@.str.425 = private unnamed_addr constant [53 x i8] c"cmdstat_%s:calls=%lld,usec=%lld,usec_per_call=%.2f\0D\0A\00", align 1
@.str.426 = private unnamed_addr constant [32 x i8] c"# Cluster\0D\0Acluster_enabled:%d\0D\0A\00", align 1
@.str.427 = private unnamed_addr constant [9 x i8] c"keyspace\00", align 1
@.str.428 = private unnamed_addr constant [13 x i8] c"# Keyspace\0D\0A\00", align 1
@.str.429 = private unnamed_addr constant [43 x i8] c"db%d:keys=%lld,expires=%lld,avg_ttl=%lld\0D\0A\00", align 1
@.str.430 = private unnamed_addr constant [19 x i8] c"/var/run/redis.pid\00", align 1
@.str.431 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.432 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.433 = private unnamed_addr constant [58 x i8] c"Redis server v=%s sha=%s:%d malloc=%s bits=%d build=%llx\0A\00", align 1
@.str.434 = private unnamed_addr constant [55 x i8] c"Usage: ./redis-server [/path/to/redis.conf] [options]\0A\00", align 1
@.str.435 = private unnamed_addr constant [50 x i8] c"       ./redis-server - (read config from stdin)\0A\00", align 1
@.str.436 = private unnamed_addr constant [39 x i8] c"       ./redis-server -v or --version\0A\00", align 1
@.str.437 = private unnamed_addr constant [36 x i8] c"       ./redis-server -h or --help\0A\00", align 1
@.str.438 = private unnamed_addr constant [50 x i8] c"       ./redis-server --test-memory <megabytes>\0A\0A\00", align 1
@.str.439 = private unnamed_addr constant [11 x i8] c"Examples:\0A\00", align 1
@.str.440 = private unnamed_addr constant [58 x i8] c"       ./redis-server (run the server with default conf)\0A\00", align 1
@.str.441 = private unnamed_addr constant [44 x i8] c"       ./redis-server /etc/redis/6379.conf\0A\00", align 1
@.str.442 = private unnamed_addr constant [35 x i8] c"       ./redis-server --port 7777\0A\00", align 1
@.str.443 = private unnamed_addr constant [62 x i8] c"       ./redis-server --port 7777 --replicaof 127.0.0.1 8888\0A\00", align 1
@.str.444 = private unnamed_addr constant [61 x i8] c"       ./redis-server /etc/myredis.conf --loglevel verbose\0A\0A\00", align 1
@.str.445 = private unnamed_addr constant [16 x i8] c"Sentinel mode:\0A\00", align 1
@.str.446 = private unnamed_addr constant [53 x i8] c"       ./redis-server /etc/sentinel.conf --sentinel\0A\00", align 1
@.str.447 = private unnamed_addr constant [1133 x i8] c"                _._                                                  \0A           _.-``__ ''-._                                             \0A      _.-``    `.  `_.  ''-._           Redis %s (%s/%d) %s bit\0A  .-`` .-```.  ```\5C/    _.,_ ''-._                                   \0A (    '      ,       .-`  | `,    )     Running in %s mode\0A |`-._`-...-` __...-.``-._|'` _.-'|     Port: %d\0A |    `-._   `._    /     _.-'    |     PID: %ld\0A  `-._    `-._  `-./  _.-'    _.-'                                   \0A |`-._`-._    `-.__.-'    _.-'_.-'|                                  \0A |    `-._`-._        _.-'_.-'    |           http://redis.io        \0A  `-._    `-._`-.__.-'_.-'    _.-'                                   \0A |`-._`-._    `-.__.-'    _.-'_.-'|                                  \0A |    `-._`-._        _.-'_.-'    |                                  \0A  `-._    `-._`-.__.-'_.-'    _.-'                                   \0A      `-._    `-.__.-'    _.-'                                       \0A          `-._        _.-'                                           \0A              `-.__.-'                                               \0A\0A\00", align 1
@.str.448 = private unnamed_addr constant [26 x i8] c"Running mode=%s, port=%d.\00", align 1
@.str.449 = private unnamed_addr constant [3 x i8] c"64\00", align 1
@.str.450 = private unnamed_addr constant [15 x i8] c"redis-sentinel\00", align 1
@.str.451 = private unnamed_addr constant [11 x i8] c"--sentinel\00", align 1
@.str.452 = private unnamed_addr constant [46 x i8] c"DB loaded from append only file: %.3f seconds\00", align 1
@loadDataFromDisk.rsi = private unnamed_addr constant %struct.rdbSaveInfo { i32 -1, i32 0, [41 x i8] c"000000000000000000000000000000\00\00\00\00\00\00\00\00\00\00\00", i64 -1 }, align 8
@.str.453 = private unnamed_addr constant [34 x i8] c"DB loaded from disk: %.3f seconds\00", align 1
@.str.454 = private unnamed_addr constant [41 x i8] c"Fatal error loading the DB: %s. Exiting.\00", align 1
@.str.455 = private unnamed_addr constant [36 x i8] c"Out Of Memory allocating %zu bytes!\00", align 1
@.str.456 = private unnamed_addr constant [33 x i8] c"Redis aborting for OUT OF MEMORY\00", align 1
@.str.457 = private unnamed_addr constant [12 x i8] c"UPSTART_JOB\00", align 1
@.str.458 = private unnamed_addr constant [57 x i8] c"upstart supervision requested, but UPSTART_JOB not found\00", align 1
@.str.459 = private unnamed_addr constant [53 x i8] c"supervised by upstart, will stop to signal readiness\00", align 1
@.str.460 = private unnamed_addr constant [14 x i8] c"NOTIFY_SOCKET\00", align 1
@.str.461 = private unnamed_addr constant [59 x i8] c"systemd supervision requested, but NOTIFY_SOCKET not found\00", align 1
@.str.462 = private unnamed_addr constant [3 x i8] c"@/\00", align 1
@.str.463 = private unnamed_addr constant [45 x i8] c"supervised by systemd, will signal readiness\00", align 1
@.str.464 = private unnamed_addr constant [35 x i8] c"Can't connect to systemd socket %s\00", align 1
@.str.465 = private unnamed_addr constant [8 x i8] c"READY=1\00", align 1
@_intrstack_start = external dso_local global [0 x i8], align 1
@_end = external dso_local global [0 x i8], align 1
@tsb_comp0 = external dso_local global [32 x %struct.uk_thread_status_block], align 16
@tsb_comp1 = external dso_local global [32 x %struct.uk_thread_status_block], align 16
@.str.466 = private unnamed_addr constant [35 x i8] c"Can't send notification to systemd\00", align 1
@.str.467 = private unnamed_addr constant [16 x i8] c"redis-check-rdb\00", align 1
@.str.468 = private unnamed_addr constant [16 x i8] c"redis-check-aof\00", align 1
@.str.469 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.470 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.471 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.472 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.473 = private unnamed_addr constant [14 x i8] c"--test-memory\00", align 1
@.str.474 = private unnamed_addr constant [59 x i8] c"Please specify the amount of memory to test in megabytes.\0A\00", align 1
@.str.475 = private unnamed_addr constant [45 x i8] c"Example: ./redis-server --test-memory 4096\0A\0A\00", align 1
@.str.476 = private unnamed_addr constant [12 x i8] c"--check-rdb\00", align 1
@.str.477 = private unnamed_addr constant [40 x i8] c"Sentinel config from STDIN not allowed.\00", align 1
@.str.478 = private unnamed_addr constant [62 x i8] c"Sentinel needs config file on disk to save state.  Exiting...\00", align 1
@.str.479 = private unnamed_addr constant [46 x i8] c"oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\00", align 1
@.str.480 = private unnamed_addr constant [72 x i8] c"Redis version=%s, bits=%d, commit=%s, modified=%d, pid=%d, just started\00", align 1
@.str.481 = private unnamed_addr constant [119 x i8] c"Warning: no config file specified, using the default config. In order to specify a config file use %s /path/to/%s.conf\00", align 1
@.str.482 = private unnamed_addr constant [21 x i8] c"Configuration loaded\00", align 1
@.str.483 = private unnamed_addr constant [19 x i8] c"Server initialized\00", align 1
@.str.484 = private unnamed_addr constant [79 x i8] c"You can't have keys in a DB different than DB 0 when in Cluster mode. Exiting.\00", align 1
@.str.485 = private unnamed_addr constant [28 x i8] c"Ready to accept connections\00", align 1
@.str.486 = private unnamed_addr constant [52 x i8] c"The server is now ready to accept connections at %s\00", align 1
@.str.487 = private unnamed_addr constant [137 x i8] c"WARNING: You specified a maxmemory value that is less than 1MB (current value is %llu bytes). Are you sure this is what you really want?\00", align 1
@lru_clock = common dso_local local_unnamed_addr global i64 0, align 8, !dbg !1130
@.str.488 = private unnamed_addr constant [6 x i8] c"%lluB\00", align 1
@.str.489 = private unnamed_addr constant [6 x i8] c"%.2fK\00", align 1
@.str.490 = private unnamed_addr constant [6 x i8] c"%.2fM\00", align 1
@.str.491 = private unnamed_addr constant [6 x i8] c"%.2fG\00", align 1
@.str.492 = private unnamed_addr constant [6 x i8] c"%.2fT\00", align 1
@.str.493 = private unnamed_addr constant [6 x i8] c"%.2fP\00", align 1
@.str.494 = private unnamed_addr constant [39 x i8] c"Received SIGINT scheduling shutdown...\00", align 1
@.str.495 = private unnamed_addr constant [40 x i8] c"Received SIGTERM scheduling shutdown...\00", align 1
@.str.496 = private unnamed_addr constant [49 x i8] c"Received shutdown signal, scheduling shutdown...\00", align 1
@.str.497 = private unnamed_addr constant [27 x i8] c"You insist... exiting now.\00", align 1
@.str.498 = private unnamed_addr constant [54 x i8] c"Received shutdown signal during loading, exiting now.\00", align 1
@__A_VARIABLE = internal global i32 0

; Function Attrs: noredzone
declare dso_local void @moduleCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @getCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @setCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @setnxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @setexCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @psetexCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @appendCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @strlenCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @delCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @unlinkCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @existsCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @setbitCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @getbitCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bitfieldCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @setrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @getrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @incrCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @decrCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @mgetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @rpushCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lpushCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @rpushxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lpushxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @linsertCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @rpopCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lpopCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @brpopCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @brpoplpushCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @blpopCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @llenCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lindexCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lsetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @ltrimCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lremCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @rpoplpushCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @saddCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sremCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @smoveCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sismemberCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @scardCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @spopCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @srandmemberCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sinterCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sinterstoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sunionCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sunionstoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sdiffCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sdiffstoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sscanCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zaddCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zincrbyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zremCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zremrangebyscoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zremrangebyrankCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zremrangebylexCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zunionstoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local i32* @zunionInterGetKeys(%struct.redisCommand*, %struct.redisObject**, i32, i32*) #0

; Function Attrs: noredzone
declare dso_local void @zinterstoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrangebyscoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrevrangebyscoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrangebylexCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrevrangebylexCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zcountCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zlexcountCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrevrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zcardCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zscoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrankCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zrevrankCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zscanCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zpopminCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @zpopmaxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bzpopminCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bzpopmaxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hsetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hsetnxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hgetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hmgetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hincrbyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hincrbyfloatCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hdelCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hlenCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hstrlenCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hkeysCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hvalsCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hgetallCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hexistsCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @hscanCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @incrbyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @decrbyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @incrbyfloatCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @getsetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @msetCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @msetnxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @randomkeyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @selectCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @swapdbCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @moveCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @renameCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @renamenxCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @expireCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @expireatCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pexpireCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pexpireatCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @keysCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @scanCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @dbsizeCommand(%struct.client*) #0

; Function Attrs: noredzone nounwind
define dso_local void @authCommand(%struct.client*) #1 !dbg !1148 {
  %2 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15), align 8, !dbg !1152, !tbaa !1154
  %3 = icmp eq i8* %2, null, !dbg !1166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1167
  br i1 %3, label %4, label %5, !dbg !1167

; <label>:4:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.359, i64 0, i64 0)) #9, !dbg !1168
  br label %18, !dbg !1170

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1171
  %7 = load %struct.redisObject**, %struct.redisObject*** %6, align 8, !dbg !1171, !tbaa !1173
  %8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !1177
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !1177, !tbaa !1178
  %10 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 2, !dbg !1179
  %11 = load i8*, i8** %10, align 8, !dbg !1179, !tbaa !1180
  %12 = tail call i32 @time_independent_strcmp(i8* %11, i8* nonnull %2) #10, !dbg !1182
  %13 = icmp eq i32 %12, 0, !dbg !1182
  %14 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 22, !dbg !1183
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1185
  br i1 %13, label %15, label %17, !dbg !1185

; <label>:15:                                     ; preds = %5
  store i32 1, i32* %14, align 4, !dbg !1186, !tbaa !1187
  %16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !1188, !tbaa !1189
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %16) #9, !dbg !1191
  br label %18, !dbg !1192

; <label>:17:                                     ; preds = %5
  store i32 0, i32* %14, align 4, !dbg !1193, !tbaa !1187
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.360, i64 0, i64 0)) #9, !dbg !1195
  br label %18

; <label>:18:                                     ; preds = %15, %17, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1196
  ret void, !dbg !1196
}

; Function Attrs: noredzone nounwind
define dso_local void @pingCommand(%struct.client*) #1 !dbg !1197 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !1201
  %3 = load i32, i32* %2, align 8, !dbg !1201, !tbaa !1203
  %4 = icmp sgt i32 %3, 2, !dbg !1204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1205
  br i1 %4, label %5, label %10, !dbg !1205

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 10, !dbg !1206
  %7 = load %struct.redisCommand*, %struct.redisCommand** %6, align 8, !dbg !1206, !tbaa !1208
  %8 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %7, i64 0, i32 0, !dbg !1209
  %9 = load i8*, i8** %8, align 8, !dbg !1209, !tbaa !1210
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.344, i64 0, i64 0), i8* %9) #9, !dbg !1212
  br label %34, !dbg !1213

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !1214
  %12 = load i32, i32* %11, align 8, !dbg !1214, !tbaa !1216
  %13 = and i32 %12, 262144, !dbg !1217
  %14 = icmp eq i32 %13, 0, !dbg !1217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1218
  br i1 %14, label %25, label %15, !dbg !1218

; <label>:15:                                     ; preds = %10
  %16 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 48, i64 2), align 8, !dbg !1219, !tbaa !1178
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %16) #9, !dbg !1221
  tail call void @addReplyBulkCBuffer(%struct.client* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.361, i64 0, i64 0), i64 4) #9, !dbg !1222
  %17 = load i32, i32* %2, align 8, !dbg !1223, !tbaa !1203
  %18 = icmp eq i32 %17, 1, !dbg !1225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1226
  br i1 %18, label %19, label %20, !dbg !1226

; <label>:19:                                     ; preds = %15
  tail call void @addReplyBulkCBuffer(%struct.client* nonnull %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.309, i64 0, i64 0), i64 0) #9, !dbg !1227
  br label %34, !dbg !1227

; <label>:20:                                     ; preds = %15
  %21 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1228
  %22 = load %struct.redisObject**, %struct.redisObject*** %21, align 8, !dbg !1228, !tbaa !1173
  %23 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %22, i64 1, !dbg !1229
  %24 = load %struct.redisObject*, %struct.redisObject** %23, align 8, !dbg !1229, !tbaa !1178
  tail call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %24) #9, !dbg !1230
  br label %34

; <label>:25:                                     ; preds = %10
  %26 = icmp eq i32 %3, 1, !dbg !1231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1234
  br i1 %26, label %27, label %29, !dbg !1234

; <label>:27:                                     ; preds = %25
  %28 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 7), align 8, !dbg !1235, !tbaa !1236
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %28) #9, !dbg !1237
  br label %34, !dbg !1237

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1238
  %31 = load %struct.redisObject**, %struct.redisObject*** %30, align 8, !dbg !1238, !tbaa !1173
  %32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %31, i64 1, !dbg !1239
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !1239, !tbaa !1178
  tail call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %33) #9, !dbg !1240
  br label %34

; <label>:34:                                     ; preds = %27, %29, %19, %20, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1241
  ret void, !dbg !1241
}

; Function Attrs: noredzone nounwind
define dso_local void @echoCommand(%struct.client*) #1 !dbg !1242 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1246
  %3 = load %struct.redisObject**, %struct.redisObject*** %2, align 8, !dbg !1246, !tbaa !1173
  %4 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %3, i64 1, !dbg !1247
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !1247, !tbaa !1178
  tail call void @addReplyBulk(%struct.client* %0, %struct.redisObject* %5) #9, !dbg !1248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1249
  ret void, !dbg !1249
}

; Function Attrs: noredzone
declare dso_local void @saveCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bgsaveCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bgrewriteaofCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @shutdownCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lastsaveCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @typeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @multiCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @execCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @discardCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @syncCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @replconfCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @flushdbCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @flushallCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @sortCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local i32* @sortGetKeys(%struct.redisCommand*, %struct.redisObject**, i32, i32*) #0

; Function Attrs: noredzone nounwind
define dso_local void @infoCommand(%struct.client*) #1 !dbg !1250 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !1255
  %3 = load i32, i32* %2, align 8, !dbg !1255, !tbaa !1203
  %4 = icmp eq i32 %3, 2, !dbg !1256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1257
  br i1 %4, label %5, label %12, !dbg !1257

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1258
  %7 = load %struct.redisObject**, %struct.redisObject*** %6, align 8, !dbg !1258, !tbaa !1173
  %8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !1259
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !1259, !tbaa !1178
  %10 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 2, !dbg !1260
  %11 = load i8*, i8** %10, align 8, !dbg !1260, !tbaa !1180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1262
  br label %16, !dbg !1262

; <label>:12:                                     ; preds = %1
  %13 = icmp sgt i32 %3, 2, !dbg !1263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1262
  br i1 %13, label %14, label %16, !dbg !1262

; <label>:14:                                     ; preds = %12
  %15 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !1265, !tbaa !1267
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %15) #9, !dbg !1268
  br label %19, !dbg !1269

; <label>:16:                                     ; preds = %5, %12
  %17 = phi i8* [ %11, %5 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), %12 ]
  %18 = tail call i8* @genRedisInfoString(i8* %17) #10, !dbg !1270
  tail call void @addReplyBulkSds(%struct.client* nonnull %0, i8* %18) #9, !dbg !1271
  br label %19, !dbg !1272

; <label>:19:                                     ; preds = %16, %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1272
  ret void, !dbg !1272
}

; Function Attrs: noredzone nounwind
define dso_local void @monitorCommand(%struct.client*) #1 !dbg !1274 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !1278
  %3 = load i32, i32* %2, align 8, !dbg !1278, !tbaa !1216
  %4 = and i32 %3, 1, !dbg !1280
  %5 = icmp eq i32 %4, 0, !dbg !1280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1281
  br i1 %5, label %6, label %12, !dbg !1281

; <label>:6:                                      ; preds = %1
  %7 = or i32 %3, 5, !dbg !1282
  store i32 %7, i32* %2, align 8, !dbg !1282, !tbaa !1216
  %8 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 42), align 8, !dbg !1283, !tbaa !1284
  %9 = bitcast %struct.client* %0 to i8*, !dbg !1285
  %10 = tail call %struct.list* @listAddNodeTail(%struct.list* %8, i8* %9) #9, !dbg !1286
  %11 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !1287, !tbaa !1189
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %11) #9, !dbg !1288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1289
  br label %12, !dbg !1289

; <label>:12:                                     ; preds = %1, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1289
  ret void, !dbg !1289
}

; Function Attrs: noredzone
declare dso_local void @ttlCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @touchCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pttlCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @persistCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @replicaofCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @roleCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @debugCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @configCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @subscribeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @unsubscribeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @psubscribeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @punsubscribeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @publishCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pubsubCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @watchCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @unwatchCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @clusterCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @restoreCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @migrateCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local i32* @migrateGetKeys(%struct.redisCommand*, %struct.redisObject**, i32, i32*) #0

; Function Attrs: noredzone
declare dso_local void @askingCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @readonlyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @readwriteCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @dumpCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @objectCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @memoryCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @clientCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @evalCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local i32* @evalGetKeys(%struct.redisCommand*, %struct.redisObject**, i32, i32*) #0

; Function Attrs: noredzone
declare dso_local void @evalShaCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @slowlogCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @scriptCommand(%struct.client*) #0

; Function Attrs: noredzone nounwind
define dso_local void @timeCommand(%struct.client*) #1 !dbg !1290 {
  %2 = alloca %struct.timeval, align 8
  %3 = bitcast %struct.timeval* %2 to i8*, !dbg !1308
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #4, !dbg !1308
  %4 = ptrtoint %struct.timeval* %2 to i64, !dbg !1309
  %5 = add i64 %4, 65536, !dbg !1310
  %6 = inttoptr i64 %5 to %struct.timeval*, !dbg !1311
  %7 = call i32 @gettimeofday(%struct.timeval* %6, i8* null) #9, !dbg !1313
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i64 0, i32 0, !dbg !1315
  %9 = load i64, i64* %8, align 8, !dbg !1315, !tbaa !1316
  %10 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i64 0, i32 1, !dbg !1318
  %11 = load i64, i64* %10, align 8, !dbg !1318, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #4, !dbg !1320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1321
  call void @addReplyMultiBulkLen(%struct.client* %0, i64 2) #9, !dbg !1322
  call void @addReplyBulkLongLong(%struct.client* %0, i64 %9) #9, !dbg !1323
  call void @addReplyBulkLongLong(%struct.client* %0, i64 %11) #9, !dbg !1324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1325
  ret void, !dbg !1325
}

; Function Attrs: noredzone
declare dso_local void @bitopCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bitcountCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @bitposCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @waitCommand(%struct.client*) #0

; Function Attrs: noredzone nounwind
define dso_local void @commandCommand(%struct.client*) #1 !dbg !1326 {
  %2 = alloca [5 x i8*], align 16
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !1349
  %5 = load i32, i32* %4, align 8, !dbg !1349, !tbaa !1203
  %6 = icmp eq i32 %5, 2, !dbg !1350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1351
  br i1 %6, label %7, label %25, !dbg !1351

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1352
  %9 = load %struct.redisObject**, %struct.redisObject*** %8, align 8, !dbg !1352, !tbaa !1173
  %10 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %9, i64 1, !dbg !1353
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !1353, !tbaa !1178
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 2, !dbg !1354
  %13 = load i8*, i8** %12, align 8, !dbg !1354, !tbaa !1180
  %14 = tail call i32 @strcasecmp(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.373, i64 0, i64 0)) #11, !dbg !1355
  %15 = icmp eq i32 %14, 0, !dbg !1355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1356
  br i1 %15, label %17, label %16, !dbg !1356

; <label>:16:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1357
  br label %53, !dbg !1357

; <label>:17:                                     ; preds = %7
  %18 = bitcast [5 x i8*]* %2 to i8*, !dbg !1358
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #4, !dbg !1358
  %19 = getelementptr inbounds [5 x i8*], [5 x i8*]* %2, i64 0, i64 4
  %20 = bitcast i8** %19 to i64*, !dbg !1359
  store i64 0, i64* %20, align 16, !dbg !1359
  %21 = getelementptr inbounds [5 x i8*], [5 x i8*]* %2, i64 0, i64 0, !dbg !1359
  %22 = bitcast [5 x i8*]* %2 to <2 x i8*>*, !dbg !1359
  store <2 x i8*> <i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.374, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.375, i64 0, i64 0)>, <2 x i8*>* %22, align 16, !dbg !1359
  %23 = getelementptr inbounds [5 x i8*], [5 x i8*]* %2, i64 0, i64 2, !dbg !1359
  %24 = bitcast i8** %23 to <2 x i8*>*, !dbg !1359
  store <2 x i8*> <i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.376, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.377, i64 0, i64 0)>, <2 x i8*>* %24, align 16, !dbg !1359
  call void @addReplyHelp(%struct.client* nonnull %0, i8** nonnull %21) #9, !dbg !1360
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #4, !dbg !1361
  br label %156, !dbg !1362

; <label>:25:                                     ; preds = %1
  %26 = icmp eq i32 %5, 1, !dbg !1363
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1357
  br i1 %26, label %34, label %27, !dbg !1357

; <label>:27:                                     ; preds = %25
  %28 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  %29 = load %struct.redisObject**, %struct.redisObject*** %28, align 8, !dbg !1364, !tbaa !1173
  %30 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %29, i64 1
  %31 = load %struct.redisObject*, %struct.redisObject** %30, align 8, !dbg !1365, !tbaa !1178
  %32 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %31, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8, !dbg !1366, !tbaa !1180
  br label %53, !dbg !1357

; <label>:34:                                     ; preds = %25
  %35 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1367, !tbaa !1369
  %36 = getelementptr inbounds %struct.dict, %struct.dict* %35, i64 0, i32 2, i64 0, i32 3, !dbg !1367
  %37 = load i64, i64* %36, align 8, !dbg !1367, !tbaa !1370
  %38 = getelementptr inbounds %struct.dict, %struct.dict* %35, i64 0, i32 2, i64 1, i32 3, !dbg !1367
  %39 = load i64, i64* %38, align 8, !dbg !1367, !tbaa !1370
  %40 = add i64 %39, %37, !dbg !1367
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %40) #9, !dbg !1372
  %41 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1373, !tbaa !1369
  %42 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %41) #9, !dbg !1374
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1376
  %43 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %42) #9, !dbg !1377
  %44 = icmp eq %struct.dictEntry* %43, null, !dbg !1379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1376
  br i1 %44, label %52, label %45, !dbg !1376

; <label>:45:                                     ; preds = %34, %45
  %46 = phi %struct.dictEntry* [ %50, %45 ], [ %43, %34 ]
  %47 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %46, i64 0, i32 1, i32 0, !dbg !1380
  %48 = bitcast i8** %47 to %struct.redisCommand**, !dbg !1380
  %49 = load %struct.redisCommand*, %struct.redisCommand** %48, align 8, !dbg !1380, !tbaa !1382
  tail call void @addReplyCommand(%struct.client* %0, %struct.redisCommand* %49) #10, !dbg !1383
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1376
  %50 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %42) #9, !dbg !1377
  %51 = icmp eq %struct.dictEntry* %50, null, !dbg !1379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1376
  br i1 %51, label %52, label %45, !dbg !1376, !llvm.loop !1384

; <label>:52:                                     ; preds = %45, %34
  tail call void @dictReleaseIterator(%struct.dictIterator* %42) #9, !dbg !1386
  br label %156, !dbg !1387

; <label>:53:                                     ; preds = %27, %16
  %54 = phi %struct.redisObject*** [ %28, %27 ], [ %8, %16 ], !dbg !1364
  %55 = phi i8* [ %33, %27 ], [ %13, %16 ], !dbg !1366
  %56 = phi %struct.redisObject** [ %29, %27 ], [ %9, %16 ], !dbg !1364
  %57 = tail call i32 @strcasecmp(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0)) #11, !dbg !1388
  %58 = icmp eq i32 %57, 0, !dbg !1388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1389
  br i1 %58, label %59, label %78, !dbg !1389

; <label>:59:                                     ; preds = %53
  %60 = add nsw i32 %5, -2, !dbg !1390
  %61 = sext i32 %60 to i64, !dbg !1391
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %61) #9, !dbg !1392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1394
  %62 = load i32, i32* %4, align 8, !dbg !1396, !tbaa !1203
  %63 = icmp sgt i32 %62, 2, !dbg !1398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1399
  br i1 %63, label %64, label %156, !dbg !1399

; <label>:64:                                     ; preds = %59, %64
  %65 = phi i64 [ %74, %64 ], [ 2, %59 ]
  %66 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1400, !tbaa !1369
  %67 = load %struct.redisObject**, %struct.redisObject*** %54, align 8, !dbg !1402, !tbaa !1173
  %68 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %67, i64 %65, !dbg !1403
  %69 = load %struct.redisObject*, %struct.redisObject** %68, align 8, !dbg !1403, !tbaa !1178
  %70 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %69, i64 0, i32 2, !dbg !1404
  %71 = load i8*, i8** %70, align 8, !dbg !1404, !tbaa !1180
  %72 = tail call i8* @dictFetchValue(%struct.dict* %66, i8* %71) #9, !dbg !1405
  %73 = bitcast i8* %72 to %struct.redisCommand*, !dbg !1405
  tail call void @addReplyCommand(%struct.client* nonnull %0, %struct.redisCommand* %73) #10, !dbg !1406
  %74 = add nuw nsw i64 %65, 1, !dbg !1407
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1408
  %75 = load i32, i32* %4, align 8, !dbg !1396, !tbaa !1203
  %76 = sext i32 %75 to i64, !dbg !1398
  %77 = icmp slt i64 %74, %76, !dbg !1398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1399
  br i1 %77, label %64, label %156, !dbg !1399, !llvm.loop !1409

; <label>:78:                                     ; preds = %53
  %79 = tail call i32 @strcasecmp(i8* %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.378, i64 0, i64 0)) #11, !dbg !1411
  %80 = icmp eq i32 %79, 0, !dbg !1411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1412
  br i1 %80, label %81, label %89, !dbg !1412

; <label>:81:                                     ; preds = %78
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1413
  br i1 %6, label %82, label %89, !dbg !1413

; <label>:82:                                     ; preds = %81
  %83 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1414, !tbaa !1369
  %84 = getelementptr inbounds %struct.dict, %struct.dict* %83, i64 0, i32 2, i64 0, i32 3, !dbg !1414
  %85 = load i64, i64* %84, align 8, !dbg !1414, !tbaa !1370
  %86 = getelementptr inbounds %struct.dict, %struct.dict* %83, i64 0, i32 2, i64 1, i32 3, !dbg !1414
  %87 = load i64, i64* %86, align 8, !dbg !1414, !tbaa !1370
  %88 = add i64 %87, %85, !dbg !1414
  tail call void @addReplyLongLong(%struct.client* nonnull %0, i64 %88) #9, !dbg !1416
  br label %156, !dbg !1417

; <label>:89:                                     ; preds = %78, %81
  %90 = tail call i32 @strcasecmp(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.379, i64 0, i64 0)) #11, !dbg !1418
  %91 = icmp eq i32 %90, 0, !dbg !1418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1419
  br i1 %91, label %92, label %155, !dbg !1419

; <label>:92:                                     ; preds = %89
  %93 = icmp sgt i32 %5, 2, !dbg !1420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1421
  br i1 %93, label %94, label %155, !dbg !1421

; <label>:94:                                     ; preds = %92
  %95 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %56, i64 2, !dbg !1422
  %96 = load %struct.redisObject*, %struct.redisObject** %95, align 8, !dbg !1422, !tbaa !1178
  %97 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %96, i64 0, i32 2, !dbg !1423
  %98 = load i8*, i8** %97, align 8, !dbg !1423, !tbaa !1180
  %99 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1431, !tbaa !1369
  %100 = tail call i8* @dictFetchValue(%struct.dict* %99, i8* %98) #9, !dbg !1432
  %101 = bitcast i8* %100 to %struct.redisCommand*, !dbg !1432
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1433
  %102 = bitcast i32* %3 to i8*, !dbg !1435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #4, !dbg !1435
  %103 = icmp eq i8* %100, null, !dbg !1436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1438
  br i1 %103, label %104, label %105, !dbg !1438

; <label>:104:                                    ; preds = %94
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.380, i64 0, i64 0)) #9, !dbg !1439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1441
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #4, !dbg !1442
  br label %157

; <label>:105:                                    ; preds = %94
  %106 = getelementptr inbounds i8, i8* %100, i64 40, !dbg !1443
  %107 = bitcast i8* %106 to i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)**, !dbg !1443
  %108 = load i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %107, align 8, !dbg !1443, !tbaa !1445
  %109 = icmp eq i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* %108, null, !dbg !1446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1447
  br i1 %109, label %110, label %116, !dbg !1447

; <label>:110:                                    ; preds = %105
  %111 = getelementptr inbounds i8, i8* %100, i64 48, !dbg !1448
  %112 = bitcast i8* %111 to i32*, !dbg !1448
  %113 = load i32, i32* %112, align 8, !dbg !1448, !tbaa !1449
  %114 = icmp eq i32 %113, 0, !dbg !1450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1451
  br i1 %114, label %115, label %116, !dbg !1451

; <label>:115:                                    ; preds = %110
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.381, i64 0, i64 0)) #9, !dbg !1452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1454
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #4, !dbg !1442
  br label %157

; <label>:116:                                    ; preds = %110, %105
  %117 = getelementptr inbounds i8, i8* %100, i64 16, !dbg !1455
  %118 = bitcast i8* %117 to i32*, !dbg !1455
  %119 = load i32, i32* %118, align 8, !dbg !1455, !tbaa !1457
  %120 = icmp sgt i32 %119, 0, !dbg !1458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1459
  %121 = load i32, i32* %4, align 8, !dbg !1460, !tbaa !1203
  %122 = add nsw i32 %121, -2, !dbg !1460
  br i1 %120, label %123, label %125, !dbg !1459

; <label>:123:                                    ; preds = %116
  %124 = icmp eq i32 %119, %122, !dbg !1461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1462
  br i1 %124, label %125, label %128, !dbg !1462

; <label>:125:                                    ; preds = %116, %123
  %126 = sub nsw i32 0, %119, !dbg !1463
  %127 = icmp slt i32 %122, %126, !dbg !1464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1465
  br i1 %127, label %128, label %129, !dbg !1465

; <label>:128:                                    ; preds = %123, %125
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.382, i64 0, i64 0)) #9, !dbg !1466
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1468
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #4, !dbg !1442
  br label %157

; <label>:129:                                    ; preds = %125
  %130 = load %struct.redisObject**, %struct.redisObject*** %54, align 8, !dbg !1469, !tbaa !1173
  %131 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %130, i64 2, !dbg !1470
  %132 = call i32* @getKeysFromCommand(%struct.redisCommand* nonnull %101, %struct.redisObject** nonnull %131, i32 %122, i32* nonnull %3) #9, !dbg !1472
  %133 = icmp eq i32* %132, null, !dbg !1474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1476
  br i1 %133, label %134, label %135, !dbg !1476

; <label>:134:                                    ; preds = %129
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.383, i64 0, i64 0)) #9, !dbg !1477
  br label %154, !dbg !1479

; <label>:135:                                    ; preds = %129
  %136 = load i32, i32* %3, align 4, !dbg !1480, !tbaa !1482
  %137 = sext i32 %136 to i64, !dbg !1480
  call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %137) #9, !dbg !1483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1485
  %138 = load i32, i32* %3, align 4, !dbg !1487, !tbaa !1482
  %139 = icmp sgt i32 %138, 0, !dbg !1489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1490
  br i1 %139, label %140, label %153, !dbg !1490

; <label>:140:                                    ; preds = %135, %140
  %141 = phi i64 [ %149, %140 ], [ 0, %135 ]
  %142 = load %struct.redisObject**, %struct.redisObject*** %54, align 8, !dbg !1491, !tbaa !1173
  %143 = getelementptr inbounds i32, i32* %132, i64 %141, !dbg !1492
  %144 = load i32, i32* %143, align 4, !dbg !1492, !tbaa !1482
  %145 = add nsw i32 %144, 2, !dbg !1493
  %146 = sext i32 %145 to i64, !dbg !1494
  %147 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %142, i64 %146, !dbg !1494
  %148 = load %struct.redisObject*, %struct.redisObject** %147, align 8, !dbg !1494, !tbaa !1178
  call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %148) #9, !dbg !1495
  %149 = add nuw nsw i64 %141, 1, !dbg !1496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1497
  %150 = load i32, i32* %3, align 4, !dbg !1487, !tbaa !1482
  %151 = sext i32 %150 to i64, !dbg !1489
  %152 = icmp slt i64 %149, %151, !dbg !1489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1490
  br i1 %152, label %140, label %153, !dbg !1490, !llvm.loop !1498

; <label>:153:                                    ; preds = %140, %135
  call void @getKeysFreeResult(i32* nonnull %132) #9, !dbg !1500
  br label %154

; <label>:154:                                    ; preds = %153, %134
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1442
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #4, !dbg !1442
  br label %156

; <label>:155:                                    ; preds = %89, %92
  tail call void @addReplySubcommandSyntaxError(%struct.client* nonnull %0) #9, !dbg !1501
  br label %156

; <label>:156:                                    ; preds = %64, %59, %154, %52, %82, %155, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %157, !dbg !1503

; <label>:157:                                    ; preds = %104, %128, %115, %156
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1503
  ret void, !dbg !1503
}

; Function Attrs: noredzone
declare dso_local void @geoaddCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @georadiusCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local i32* @georadiusGetKeys(%struct.redisCommand*, %struct.redisObject**, i32, i32*) #0

; Function Attrs: noredzone
declare dso_local void @georadiusroCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @georadiusbymemberCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @georadiusbymemberroCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @geohashCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @geoposCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @geodistCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pfselftestCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pfaddCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pfcountCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pfmergeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @pfdebugCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xaddCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xrevrangeCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xlenCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xreadCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local i32* @xreadGetKeys(%struct.redisCommand*, %struct.redisObject**, i32, i32*) #0

; Function Attrs: noredzone
declare dso_local void @xgroupCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xsetidCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xackCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xpendingCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xclaimCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xinfoCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xdelCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @xtrimCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @securityWarningCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @latencyCommand(%struct.client*) #0

; Function Attrs: noredzone
declare dso_local void @lolwutCommand(%struct.client*) #0

; Function Attrs: noredzone nounwind
define dso_local void @serverLogRaw(i32, i8*) local_unnamed_addr #1 !dbg !1504 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca [64 x i8], align 16
  %5 = alloca %struct.tm, align 8
  %6 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0, !dbg !1739
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #4, !dbg !1739
  %7 = and i32 %0, 1024, !dbg !1741
  %8 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 173), align 8, !dbg !1743, !tbaa !1744
  %9 = load i8, i8* %8, align 1, !dbg !1745, !tbaa !1382
  %10 = icmp eq i8 %9, 0, !dbg !1746
  %11 = and i32 %0, 255, !dbg !1747
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !1748, !tbaa !1750
  %13 = icmp slt i32 %11, %12, !dbg !1751
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1753
  br i1 %13, label %79, label %14, !dbg !1752

; <label>:14:                                     ; preds = %2
  br i1 %10, label %15, label %19, !dbg !1754

; <label>:15:                                     ; preds = %14
  %16 = tail call %struct._reent* @__getreent() #9, !dbg !1755
  %17 = getelementptr inbounds %struct._reent, %struct._reent* %16, i64 0, i32 2, !dbg !1755
  %18 = load %struct.__sFILE*, %struct.__sFILE** %17, align 8, !dbg !1755, !tbaa !1756
  br label %21, !dbg !1754

; <label>:19:                                     ; preds = %14
  %20 = tail call %struct.__sFILE* @fopen(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.179, i64 0, i64 0)) #9, !dbg !1761
  br label %21, !dbg !1754

; <label>:21:                                     ; preds = %19, %15
  %22 = phi %struct.__sFILE* [ %18, %15 ], [ %20, %19 ], !dbg !1754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1754
  %23 = icmp eq %struct.__sFILE* %22, null, !dbg !1763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1765
  br i1 %23, label %78, label %24, !dbg !1765

; <label>:24:                                     ; preds = %21
  %25 = icmp eq i32 %7, 0, !dbg !1766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1767
  br i1 %25, label %28, label %26, !dbg !1767

; <label>:26:                                     ; preds = %24
  %27 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* nonnull %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i64 0, i64 0), i8* %1) #9, !dbg !1768
  br label %67, !dbg !1770

; <label>:28:                                     ; preds = %24
  %29 = tail call i32 @getpid() #9, !dbg !1771
  %30 = bitcast %struct.timeval* %3 to i8*, !dbg !1777
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #4, !dbg !1777
  %31 = ptrtoint %struct.timeval* %3 to i64, !dbg !1778
  %32 = add i64 %31, 65536, !dbg !1779
  %33 = inttoptr i64 %32 to %struct.timeval*, !dbg !1780
  %34 = call i32 @gettimeofday(%struct.timeval* %33, i8* null) #9, !dbg !1782
  %35 = getelementptr inbounds %struct.timeval, %struct.timeval* %33, i64 0, i32 0, !dbg !1784
  %36 = load i64, i64* %35, align 8, !dbg !1784, !tbaa !1316
  %37 = getelementptr inbounds %struct.timeval, %struct.timeval* %33, i64 0, i32 1, !dbg !1785
  %38 = load i64, i64* %37, align 8, !dbg !1785, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #4, !dbg !1786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1787
  %39 = bitcast %struct.tm* %5 to i8*, !dbg !1788
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #4, !dbg !1788
  %40 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 252), align 8, !dbg !1789, !tbaa !1790
  %41 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 253), align 8, !dbg !1791, !tbaa !1792
  call void @nolocks_localtime(%struct.tm* nonnull %5, i64 %36, i64 %40, i32 %41) #9, !dbg !1794
  %42 = call i64 @strftime(i8* nonnull %6, i64 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.241, i64 0, i64 0), %struct.tm* nonnull %5) #9, !dbg !1795
  %43 = shl i64 %42, 32, !dbg !1796
  %44 = ashr exact i64 %43, 32, !dbg !1796
  %45 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 %44, !dbg !1796
  %46 = sub nsw i64 64, %44, !dbg !1797
  %47 = trunc i64 %38 to i32, !dbg !1798
  %48 = sdiv i32 %47, 1000, !dbg !1799
  %49 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %45, i64 %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0), i32 %48) #9, !dbg !1800
  %50 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !1801, !tbaa !1803
  %51 = icmp eq i32 %50, 0, !dbg !1804
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1805
  br i1 %51, label %52, label %59, !dbg !1805

; <label>:52:                                     ; preds = %28
  %53 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 0), align 8, !dbg !1806, !tbaa !1808
  %54 = icmp eq i32 %29, %53, !dbg !1809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1810
  br i1 %54, label %55, label %59, !dbg !1810

; <label>:55:                                     ; preds = %52
  %56 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !1811, !tbaa !1813
  %57 = icmp eq i8* %56, null, !dbg !1814
  %58 = select i1 %57, i32 77, i32 83, !dbg !1814
  br label %59

; <label>:59:                                     ; preds = %52, %28, %55
  %60 = phi i32 [ %58, %55 ], [ 88, %28 ], [ 67, %52 ], !dbg !1816
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %61 = call i32 @getpid() #9, !dbg !1817
  %62 = zext i32 %11 to i64, !dbg !1818
  %63 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.239, i64 0, i64 %62, !dbg !1818
  %64 = load i8, i8* %63, align 1, !dbg !1818, !tbaa !1382
  %65 = sext i8 %64 to i32, !dbg !1818
  %66 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* nonnull %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.243, i64 0, i64 0), i32 %61, i32 %60, i8* nonnull %6, i32 %65, i8* %1) #9, !dbg !1819
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #4, !dbg !1820
  br label %67

; <label>:67:                                     ; preds = %59, %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %68 = call i32 @fflush(%struct.__sFILE* nonnull %22) #9, !dbg !1821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1822
  br i1 %10, label %71, label %69, !dbg !1822

; <label>:69:                                     ; preds = %67
  %70 = call i32 @fclose(%struct.__sFILE* nonnull %22) #9, !dbg !1823
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1823
  br label %71, !dbg !1823

; <label>:71:                                     ; preds = %69, %67
  %72 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 174), align 8, !dbg !1825, !tbaa !1827
  %73 = icmp eq i32 %72, 0, !dbg !1828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1829
  br i1 %73, label %78, label %74, !dbg !1829

; <label>:74:                                     ; preds = %71
  %75 = zext i32 %11 to i64, !dbg !1830
  %76 = getelementptr inbounds [4 x i32], [4 x i32]* @serverLogRaw.syslogLevelMap, i64 0, i64 %75, !dbg !1830
  %77 = load i32, i32* %76, align 4, !dbg !1830, !tbaa !1482
  call void (i32, i8*, ...) @syslog(i32 %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.240, i64 0, i64 0), i8* %1) #9, !dbg !1831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1831
  br label %78, !dbg !1831

; <label>:78:                                     ; preds = %74, %71, %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1832
  br label %79, !dbg !1833

; <label>:79:                                     ; preds = %78, %2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #4, !dbg !1833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1833
  ret void, !dbg !1833
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #3

; Function Attrs: noredzone
declare dso_local %struct._reent* @__getreent() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.__sFILE* @fopen(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @fprintf(%struct.__sFILE*, i8*, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @getpid() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @nolocks_localtime(%struct.tm*, i64, i64, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @strftime(i8*, i64, i8*, %struct.tm*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #3

; Function Attrs: noredzone
declare dso_local i32 @fflush(%struct.__sFILE*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @fclose(%struct.__sFILE*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @syslog(i32, i8*, ...) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #1 !dbg !1834 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !1858
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #4, !dbg !1858
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !1860
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #4, !dbg !1860
  %7 = and i32 %0, 255, !dbg !1862
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !1864, !tbaa !1750
  %9 = icmp slt i32 %7, %8, !dbg !1865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1866
  br i1 %9, label %13, label %10, !dbg !1866

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1867
  call void @llvm.va_start(i8* nonnull %5), !dbg !1867
  %12 = call i32 @vsnprintf(i8* nonnull %6, i64 1024, i8* %1, %struct.__va_list_tag* nonnull %11) #9, !dbg !1868
  call void @llvm.va_end(i8* nonnull %5), !dbg !1869
  call void @serverLogRaw(i32 %0, i8* nonnull %6) #10, !dbg !1870
  br label %13, !dbg !1871

; <label>:13:                                     ; preds = %2, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1872
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #4, !dbg !1871
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #4, !dbg !1871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1871
  ret void, !dbg !1871
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: noredzone
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #0

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: noredzone nounwind
define dso_local void @serverLogFromHandler(i32, i8*) local_unnamed_addr #1 !dbg !1873 {
  %3 = alloca [64 x i8], align 16
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 173), align 8, !dbg !1882, !tbaa !1744
  %5 = load i8, i8* %4, align 1, !dbg !1883, !tbaa !1382
  %6 = icmp eq i8 %5, 0, !dbg !1884
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0, !dbg !1885
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #4, !dbg !1885
  %8 = and i32 %0, 255, !dbg !1887
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !1889, !tbaa !1750
  %10 = icmp slt i32 %8, %9, !dbg !1890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1891
  br i1 %10, label %49, label %11, !dbg !1891

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 115), align 4, !dbg !1892
  %13 = icmp ne i32 %12, 0, !dbg !1893
  %14 = and i1 %6, %13, !dbg !1894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1894
  br i1 %14, label %49, label %15, !dbg !1894

; <label>:15:                                     ; preds = %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1895
  br i1 %6, label %16, label %17, !dbg !1895

; <label>:16:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1897
  br label %20, !dbg !1897

; <label>:17:                                     ; preds = %15
  %18 = tail call i32 (i8*, i32, ...) @open(i8* %4, i32 521, i32 420) #9, !dbg !1898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1895
  %19 = icmp eq i32 %18, -1, !dbg !1899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1897
  br i1 %19, label %49, label %20, !dbg !1897

; <label>:20:                                     ; preds = %16, %17
  %21 = phi i32 [ 1, %16 ], [ %18, %17 ]
  %22 = tail call i32 @getpid() #9, !dbg !1901
  %23 = sext i32 %22 to i64, !dbg !1901
  %24 = call i32 @ll2string(i8* nonnull %7, i64 64, i64 %23) #9, !dbg !1902
  %25 = call i64 @strlen(i8* nonnull %7) #9, !dbg !1903
  %26 = call i64 @write(i32 %21, i8* nonnull %7, i64 %25) #9, !dbg !1905
  %27 = icmp eq i64 %26, -1, !dbg !1906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1907
  br i1 %27, label %46, label %28, !dbg !1907

; <label>:28:                                     ; preds = %20
  %29 = call i64 @write(i32 %21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.244, i64 0, i64 0), i64 17) #9, !dbg !1908
  %30 = icmp eq i64 %29, -1, !dbg !1910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1911
  br i1 %30, label %46, label %31, !dbg !1911

; <label>:31:                                     ; preds = %28
  %32 = call i64 @time(i64* null) #9, !dbg !1912
  %33 = call i32 @ll2string(i8* nonnull %7, i64 64, i64 %32) #9, !dbg !1913
  %34 = call i64 @strlen(i8* nonnull %7) #9, !dbg !1914
  %35 = call i64 @write(i32 %21, i8* nonnull %7, i64 %34) #9, !dbg !1916
  %36 = icmp eq i64 %35, -1, !dbg !1917
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1918
  br i1 %36, label %46, label %37, !dbg !1918

; <label>:37:                                     ; preds = %31
  %38 = call i64 @write(i32 %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.245, i64 0, i64 0), i64 2) #9, !dbg !1919
  %39 = icmp eq i64 %38, -1, !dbg !1921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1922
  br i1 %39, label %46, label %40, !dbg !1922

; <label>:40:                                     ; preds = %37
  %41 = call i64 @strlen(i8* %1) #9, !dbg !1923
  %42 = call i64 @write(i32 %21, i8* %1, i64 %41) #9, !dbg !1925
  %43 = icmp eq i64 %42, -1, !dbg !1926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1927
  br i1 %43, label %46, label %44, !dbg !1927

; <label>:44:                                     ; preds = %40
  %45 = call i64 @write(i32 %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.246, i64 0, i64 0), i64 1) #9, !dbg !1928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1930
  br label %46, !dbg !1930

; <label>:46:                                     ; preds = %44, %40, %37, %31, %28, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1931
  br i1 %6, label %49, label %47, !dbg !1931

; <label>:47:                                     ; preds = %46
  %48 = call i32 @close(i32 %21) #9, !dbg !1932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1932
  br label %49, !dbg !1932

; <label>:49:                                     ; preds = %46, %47, %17, %2, %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1934
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #4, !dbg !1935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1935
  ret void, !dbg !1935
}

; Function Attrs: noredzone
declare dso_local i32 @open(i8*, i32, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @ll2string(i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @time(i64*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @close(i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i64 @ustime() local_unnamed_addr #1 !dbg !1936 {
  %1 = alloca %struct.timeval, align 8
  %2 = bitcast %struct.timeval* %1 to i8*, !dbg !1946
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #4, !dbg !1946
  %3 = ptrtoint %struct.timeval* %1 to i64, !dbg !1947
  %4 = add i64 %3, 65536, !dbg !1948
  %5 = inttoptr i64 %4 to %struct.timeval*, !dbg !1949
  %6 = call i32 @gettimeofday(%struct.timeval* %5, i8* null) #9, !dbg !1951
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 0, !dbg !1953
  %8 = load i64, i64* %7, align 8, !dbg !1953, !tbaa !1316
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 1, !dbg !1954
  %10 = load i64, i64* %9, align 8, !dbg !1954, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #4, !dbg !1955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1956
  %11 = mul nsw i64 %8, 1000000, !dbg !1957
  %12 = add nsw i64 %11, %10, !dbg !1959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1960
  ret i64 %12, !dbg !1960
}

; Function Attrs: noredzone nounwind
define dso_local i64 @mstime() local_unnamed_addr #1 !dbg !1961 {
  %1 = alloca %struct.timeval, align 8
  %2 = bitcast %struct.timeval* %1 to i8*, !dbg !1967
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #4, !dbg !1967
  %3 = ptrtoint %struct.timeval* %1 to i64, !dbg !1968
  %4 = add i64 %3, 65536, !dbg !1969
  %5 = inttoptr i64 %4 to %struct.timeval*, !dbg !1970
  %6 = call i32 @gettimeofday(%struct.timeval* %5, i8* null) #9, !dbg !1972
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 0, !dbg !1974
  %8 = load i64, i64* %7, align 8, !dbg !1974, !tbaa !1316
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 1, !dbg !1975
  %10 = load i64, i64* %9, align 8, !dbg !1975, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #4, !dbg !1976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1977
  %11 = mul nsw i64 %8, 1000000, !dbg !1978
  %12 = add nsw i64 %11, %10, !dbg !1980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1981
  %13 = sdiv i64 %12, 1000, !dbg !1982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1983
  ret i64 %13, !dbg !1983
}

; Function Attrs: noredzone noreturn nounwind
define dso_local void @exitFromChild(i32) local_unnamed_addr #5 !dbg !1984 {
  tail call void @_exit(i32 %0) #12, !dbg !1988
  unreachable
}

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #6

; Function Attrs: noredzone nounwind
define dso_local void @dictVanillaFree(i8* nocapture readnone, i8*) #1 !dbg !1989 {
  tail call void @zfree(i8* %1) #9, !dbg !1995
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1996
  ret void, !dbg !1996
}

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @dictListDestructor(i8* nocapture readnone, i8*) #1 !dbg !1997 {
  %3 = bitcast i8* %1 to %struct.list*, !dbg !2003
  tail call void @listRelease(%struct.list* %3) #9, !dbg !2004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2005
  ret void, !dbg !2005
}

; Function Attrs: noredzone
declare dso_local void @listRelease(%struct.list*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @dictSdsKeyCompare(i8* nocapture readnone, i8*, i8*) #1 !dbg !2006 {
  %4 = getelementptr inbounds i8, i8* %1, i64 -1, !dbg !2026
  %5 = load i8, i8* %4, align 1, !dbg !2026, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2028
  %6 = trunc i8 %5 to i3, !dbg !2028
  switch i3 %6, label %28 [
    i3 0, label %7
    i3 1, label %10
    i3 2, label %14
    i3 3, label %19
    i3 -4, label %24
  ], !dbg !2028

; <label>:7:                                      ; preds = %3
  %8 = lshr i8 %5, 3, !dbg !2029
  %9 = zext i8 %8 to i64, !dbg !2029
  br label %28, !dbg !2031

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds i8, i8* %1, i64 -3, !dbg !2032
  %12 = load i8, i8* %11, align 1, !dbg !2033, !tbaa !1382
  %13 = zext i8 %12 to i64, !dbg !2032
  br label %28, !dbg !2034

; <label>:14:                                     ; preds = %3
  %15 = getelementptr inbounds i8, i8* %1, i64 -5, !dbg !2035
  %16 = bitcast i8* %15 to i16*, !dbg !2036
  %17 = load i16, i16* %16, align 1, !dbg !2036, !tbaa !2037
  %18 = zext i16 %17 to i64, !dbg !2035
  br label %28, !dbg !2039

; <label>:19:                                     ; preds = %3
  %20 = getelementptr inbounds i8, i8* %1, i64 -9, !dbg !2040
  %21 = bitcast i8* %20 to i32*, !dbg !2041
  %22 = load i32, i32* %21, align 1, !dbg !2041, !tbaa !1482
  %23 = zext i32 %22 to i64, !dbg !2040
  br label %28, !dbg !2042

; <label>:24:                                     ; preds = %3
  %25 = getelementptr inbounds i8, i8* %1, i64 -17, !dbg !2043
  %26 = bitcast i8* %25 to i64*, !dbg !2044
  %27 = load i64, i64* %26, align 1, !dbg !2044, !tbaa !2045
  br label %28, !dbg !2046

; <label>:28:                                     ; preds = %3, %7, %10, %14, %19, %24
  %29 = phi i64 [ %27, %24 ], [ %23, %19 ], [ %18, %14 ], [ %13, %10 ], [ %9, %7 ], [ 0, %3 ], !dbg !2047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2049
  %30 = trunc i64 %29 to i32, !dbg !2050
  %31 = getelementptr inbounds i8, i8* %2, i64 -1, !dbg !2054
  %32 = load i8, i8* %31, align 1, !dbg !2054, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2056
  %33 = trunc i8 %32 to i3, !dbg !2056
  switch i3 %33, label %55 [
    i3 0, label %34
    i3 1, label %37
    i3 2, label %41
    i3 3, label %46
    i3 -4, label %51
  ], !dbg !2056

; <label>:34:                                     ; preds = %28
  %35 = lshr i8 %32, 3, !dbg !2057
  %36 = zext i8 %35 to i64, !dbg !2057
  br label %55, !dbg !2058

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds i8, i8* %2, i64 -3, !dbg !2059
  %39 = load i8, i8* %38, align 1, !dbg !2060, !tbaa !1382
  %40 = zext i8 %39 to i64, !dbg !2059
  br label %55, !dbg !2061

; <label>:41:                                     ; preds = %28
  %42 = getelementptr inbounds i8, i8* %2, i64 -5, !dbg !2062
  %43 = bitcast i8* %42 to i16*, !dbg !2063
  %44 = load i16, i16* %43, align 1, !dbg !2063, !tbaa !2037
  %45 = zext i16 %44 to i64, !dbg !2062
  br label %55, !dbg !2064

; <label>:46:                                     ; preds = %28
  %47 = getelementptr inbounds i8, i8* %2, i64 -9, !dbg !2065
  %48 = bitcast i8* %47 to i32*, !dbg !2066
  %49 = load i32, i32* %48, align 1, !dbg !2066, !tbaa !1482
  %50 = zext i32 %49 to i64, !dbg !2065
  br label %55, !dbg !2067

; <label>:51:                                     ; preds = %28
  %52 = getelementptr inbounds i8, i8* %2, i64 -17, !dbg !2068
  %53 = bitcast i8* %52 to i64*, !dbg !2069
  %54 = load i64, i64* %53, align 1, !dbg !2069, !tbaa !2045
  br label %55, !dbg !2070

; <label>:55:                                     ; preds = %28, %34, %37, %41, %46, %51
  %56 = phi i64 [ %54, %51 ], [ %50, %46 ], [ %45, %41 ], [ %40, %37 ], [ %36, %34 ], [ 0, %28 ], !dbg !2071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2072
  %57 = trunc i64 %56 to i32, !dbg !2073
  %58 = icmp eq i32 %30, %57, !dbg !2075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2077
  br i1 %58, label %59, label %65, !dbg !2077

; <label>:59:                                     ; preds = %55
  %60 = shl i64 %29, 32, !dbg !2078
  %61 = ashr exact i64 %60, 32, !dbg !2078
  %62 = tail call i32 @memcmp(i8* nonnull %1, i8* nonnull %2, i64 %61) #9, !dbg !2079
  %63 = icmp eq i32 %62, 0, !dbg !2080
  %64 = zext i1 %63 to i32, !dbg !2080
  br label %65, !dbg !2081

; <label>:65:                                     ; preds = %55, %59
  %66 = phi i32 [ %64, %59 ], [ 0, %55 ], !dbg !2048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2083
  ret i32 %66, !dbg !2083
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @dictSdsKeyCaseCompare(i8* nocapture readnone, i8* readonly, i8* readonly) #1 !dbg !2084 {
  %4 = tail call i32 @strcasecmp(i8* %1, i8* %2) #11, !dbg !2092
  %5 = icmp eq i32 %4, 0, !dbg !2093
  %6 = zext i1 %5 to i32, !dbg !2093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2094
  ret i32 %6, !dbg !2094
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #7

; Function Attrs: noredzone nounwind
define dso_local void @dictObjectDestructor(i8* nocapture readnone, i8*) #1 !dbg !2095 {
  %3 = icmp eq i8* %1, null, !dbg !2101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2103
  br i1 %3, label %6, label %4, !dbg !2103

; <label>:4:                                      ; preds = %2
  %5 = bitcast i8* %1 to %struct.redisObject*, !dbg !2104
  tail call void @decrRefCount(%struct.redisObject* %5) #9, !dbg !2105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2106
  br label %6, !dbg !2106

; <label>:6:                                      ; preds = %2, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2106
  ret void, !dbg !2106
}

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @dictSdsDestructor(i8* nocapture readnone, i8*) #1 !dbg !2107 {
  tail call void @sdsfree(i8* %1) #9, !dbg !2113
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2114
  ret void, !dbg !2114
}

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @dictObjKeyCompare(i8* nocapture readnone, i8* nocapture readonly, i8* nocapture readonly) #1 !dbg !2115 {
  %4 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !2129
  %5 = bitcast i8* %4 to i8**, !dbg !2129
  %6 = load i8*, i8** %5, align 8, !dbg !2129, !tbaa !1180
  %7 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !2130
  %8 = bitcast i8* %7 to i8**, !dbg !2130
  %9 = load i8*, i8** %8, align 8, !dbg !2130, !tbaa !1180
  %10 = tail call i32 @dictSdsKeyCompare(i8* undef, i8* %6, i8* %9) #10, !dbg !2131
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2132
  ret i32 %10, !dbg !2132
}

; Function Attrs: noredzone nounwind
define dso_local i64 @dictObjHash(i8* nocapture readonly) #1 !dbg !2133 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !2139
  %3 = bitcast i8* %2 to i8**, !dbg !2139
  %4 = load i8*, i8** %3, align 8, !dbg !2139, !tbaa !1180
  %5 = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !2142
  %6 = load i8, i8* %5, align 1, !dbg !2142, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2144
  %7 = trunc i8 %6 to i3, !dbg !2144
  switch i3 %7, label %29 [
    i3 0, label %8
    i3 1, label %11
    i3 2, label %15
    i3 3, label %20
    i3 -4, label %25
  ], !dbg !2144

; <label>:8:                                      ; preds = %1
  %9 = lshr i8 %6, 3, !dbg !2145
  %10 = zext i8 %9 to i64, !dbg !2145
  br label %29, !dbg !2146

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds i8, i8* %4, i64 -3, !dbg !2147
  %13 = load i8, i8* %12, align 1, !dbg !2148, !tbaa !1382
  %14 = zext i8 %13 to i64, !dbg !2147
  br label %29, !dbg !2149

; <label>:15:                                     ; preds = %1
  %16 = getelementptr inbounds i8, i8* %4, i64 -5, !dbg !2150
  %17 = bitcast i8* %16 to i16*, !dbg !2151
  %18 = load i16, i16* %17, align 1, !dbg !2151, !tbaa !2037
  %19 = zext i16 %18 to i64, !dbg !2150
  br label %29, !dbg !2152

; <label>:20:                                     ; preds = %1
  %21 = getelementptr inbounds i8, i8* %4, i64 -9, !dbg !2153
  %22 = bitcast i8* %21 to i32*, !dbg !2154
  %23 = load i32, i32* %22, align 1, !dbg !2154, !tbaa !1482
  %24 = zext i32 %23 to i64, !dbg !2153
  br label %29, !dbg !2155

; <label>:25:                                     ; preds = %1
  %26 = getelementptr inbounds i8, i8* %4, i64 -17, !dbg !2156
  %27 = bitcast i8* %26 to i64*, !dbg !2157
  %28 = load i64, i64* %27, align 1, !dbg !2157, !tbaa !2045
  br label %29, !dbg !2158

; <label>:29:                                     ; preds = %1, %8, %11, %15, %20, %25
  %30 = phi i64 [ %28, %25 ], [ %24, %20 ], [ %19, %15 ], [ %14, %11 ], [ %10, %8 ], [ 0, %1 ], !dbg !2159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2161
  %31 = trunc i64 %30 to i32, !dbg !2162
  %32 = tail call i64 @dictGenHashFunction(i8* %4, i32 %31) #9, !dbg !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2164
  ret i64 %32, !dbg !2164
}

; Function Attrs: noredzone
declare dso_local i64 @dictGenHashFunction(i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i64 @dictSdsHash(i8*) #1 !dbg !2165 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -1, !dbg !2171
  %3 = load i8, i8* %2, align 1, !dbg !2171, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2173
  %4 = trunc i8 %3 to i3, !dbg !2173
  switch i3 %4, label %26 [
    i3 0, label %5
    i3 1, label %8
    i3 2, label %12
    i3 3, label %17
    i3 -4, label %22
  ], !dbg !2173

; <label>:5:                                      ; preds = %1
  %6 = lshr i8 %3, 3, !dbg !2174
  %7 = zext i8 %6 to i64, !dbg !2174
  br label %26, !dbg !2175

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds i8, i8* %0, i64 -3, !dbg !2176
  %10 = load i8, i8* %9, align 1, !dbg !2177, !tbaa !1382
  %11 = zext i8 %10 to i64, !dbg !2176
  br label %26, !dbg !2178

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds i8, i8* %0, i64 -5, !dbg !2179
  %14 = bitcast i8* %13 to i16*, !dbg !2180
  %15 = load i16, i16* %14, align 1, !dbg !2180, !tbaa !2037
  %16 = zext i16 %15 to i64, !dbg !2179
  br label %26, !dbg !2181

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds i8, i8* %0, i64 -9, !dbg !2182
  %19 = bitcast i8* %18 to i32*, !dbg !2183
  %20 = load i32, i32* %19, align 1, !dbg !2183, !tbaa !1482
  %21 = zext i32 %20 to i64, !dbg !2182
  br label %26, !dbg !2184

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds i8, i8* %0, i64 -17, !dbg !2185
  %24 = bitcast i8* %23 to i64*, !dbg !2186
  %25 = load i64, i64* %24, align 1, !dbg !2186, !tbaa !2045
  br label %26, !dbg !2187

; <label>:26:                                     ; preds = %1, %5, %8, %12, %17, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %17 ], [ %16, %12 ], [ %11, %8 ], [ %7, %5 ], [ 0, %1 ], !dbg !2188
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2190
  %28 = trunc i64 %27 to i32, !dbg !2191
  %29 = tail call i64 @dictGenHashFunction(i8* nonnull %0, i32 %28) #9, !dbg !2192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2193
  ret i64 %29, !dbg !2193
}

; Function Attrs: noredzone nounwind
define dso_local i64 @dictSdsCaseHash(i8*) #1 !dbg !2194 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -1, !dbg !2200
  %3 = load i8, i8* %2, align 1, !dbg !2200, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2202
  %4 = trunc i8 %3 to i3, !dbg !2202
  switch i3 %4, label %26 [
    i3 0, label %5
    i3 1, label %8
    i3 2, label %12
    i3 3, label %17
    i3 -4, label %22
  ], !dbg !2202

; <label>:5:                                      ; preds = %1
  %6 = lshr i8 %3, 3, !dbg !2203
  %7 = zext i8 %6 to i64, !dbg !2203
  br label %26, !dbg !2204

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds i8, i8* %0, i64 -3, !dbg !2205
  %10 = load i8, i8* %9, align 1, !dbg !2206, !tbaa !1382
  %11 = zext i8 %10 to i64, !dbg !2205
  br label %26, !dbg !2207

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds i8, i8* %0, i64 -5, !dbg !2208
  %14 = bitcast i8* %13 to i16*, !dbg !2209
  %15 = load i16, i16* %14, align 1, !dbg !2209, !tbaa !2037
  %16 = zext i16 %15 to i64, !dbg !2208
  br label %26, !dbg !2210

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds i8, i8* %0, i64 -9, !dbg !2211
  %19 = bitcast i8* %18 to i32*, !dbg !2212
  %20 = load i32, i32* %19, align 1, !dbg !2212, !tbaa !1482
  %21 = zext i32 %20 to i64, !dbg !2211
  br label %26, !dbg !2213

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds i8, i8* %0, i64 -17, !dbg !2214
  %24 = bitcast i8* %23 to i64*, !dbg !2215
  %25 = load i64, i64* %24, align 1, !dbg !2215, !tbaa !2045
  br label %26, !dbg !2216

; <label>:26:                                     ; preds = %1, %5, %8, %12, %17, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %17 ], [ %16, %12 ], [ %11, %8 ], [ %7, %5 ], [ 0, %1 ], !dbg !2217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2219
  %28 = trunc i64 %27 to i32, !dbg !2220
  %29 = tail call i64 @dictGenCaseHashFunction(i8* nonnull %0, i32 %28) #9, !dbg !2221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2222
  ret i64 %29, !dbg !2222
}

; Function Attrs: noredzone
declare dso_local i64 @dictGenCaseHashFunction(i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @dictEncObjKeyCompare(i8* nocapture readnone, i8*, i8*) #1 !dbg !2223 {
  %4 = bitcast i8* %1 to %struct.redisObject*, !dbg !2234
  %5 = bitcast i8* %2 to %struct.redisObject*, !dbg !2236
  %6 = bitcast i8* %1 to i32*, !dbg !2238
  %7 = load i32, i32* %6, align 8, !dbg !2238
  %8 = and i32 %7, 240, !dbg !2238
  %9 = icmp eq i32 %8, 16, !dbg !2240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2241
  br i1 %9, label %10, label %24, !dbg !2241

; <label>:10:                                     ; preds = %3
  %11 = bitcast i8* %2 to i32*, !dbg !2242
  %12 = load i32, i32* %11, align 8, !dbg !2242
  %13 = and i32 %12, 240, !dbg !2242
  %14 = icmp eq i32 %13, 16, !dbg !2243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2244
  br i1 %14, label %15, label %24, !dbg !2244

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !2245
  %17 = bitcast i8* %16 to i8**, !dbg !2245
  %18 = load i8*, i8** %17, align 8, !dbg !2245, !tbaa !1180
  %19 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !2246
  %20 = bitcast i8* %19 to i8**, !dbg !2246
  %21 = load i8*, i8** %20, align 8, !dbg !2246, !tbaa !1180
  %22 = icmp eq i8* %18, %21, !dbg !2247
  %23 = zext i1 %22 to i32, !dbg !2247
  br label %32, !dbg !2248

; <label>:24:                                     ; preds = %10, %3
  %25 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %4) #9, !dbg !2249
  %26 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %5) #9, !dbg !2250
  %27 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !2251
  %28 = load i8*, i8** %27, align 8, !dbg !2251, !tbaa !1180
  %29 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %26, i64 0, i32 2, !dbg !2252
  %30 = load i8*, i8** %29, align 8, !dbg !2252, !tbaa !1180
  %31 = tail call i32 @dictSdsKeyCompare(i8* undef, i8* %28, i8* %30) #10, !dbg !2253
  tail call void @decrRefCount(%struct.redisObject* %25) #9, !dbg !2255
  tail call void @decrRefCount(%struct.redisObject* %26) #9, !dbg !2256
  br label %32, !dbg !2257

; <label>:32:                                     ; preds = %24, %15
  %33 = phi i32 [ %23, %15 ], [ %31, %24 ], !dbg !2258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2260
  ret i32 %33, !dbg !2260
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i64 @dictEncObjHash(i8*) #1 !dbg !2261 {
  %2 = alloca [32 x i8], align 16
  %3 = bitcast i8* %0 to %struct.redisObject*, !dbg !2275
  %4 = bitcast i8* %0 to i32*, !dbg !2277
  %5 = load i32, i32* %4, align 8, !dbg !2277
  %6 = lshr i32 %5, 4, !dbg !2277
  %7 = and i32 %6, 15, !dbg !2277
  %8 = icmp eq i32 %7, 0, !dbg !2277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2277
  br i1 %8, label %11, label %9, !dbg !2277

; <label>:9:                                      ; preds = %1
  %10 = icmp eq i32 %7, 8, !dbg !2277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2278
  br i1 %10, label %11, label %43, !dbg !2278

; <label>:11:                                     ; preds = %9, %1
  %12 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !2279
  %13 = bitcast i8* %12 to i8**, !dbg !2279
  %14 = load i8*, i8** %13, align 8, !dbg !2279, !tbaa !1180
  %15 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !2283
  %16 = load i8, i8* %15, align 1, !dbg !2283, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2285
  %17 = trunc i8 %16 to i3, !dbg !2285
  switch i3 %17, label %39 [
    i3 0, label %18
    i3 1, label %21
    i3 2, label %25
    i3 3, label %30
    i3 -4, label %35
  ], !dbg !2285

; <label>:18:                                     ; preds = %11
  %19 = lshr i8 %16, 3, !dbg !2286
  %20 = zext i8 %19 to i64, !dbg !2286
  br label %39, !dbg !2287

; <label>:21:                                     ; preds = %11
  %22 = getelementptr inbounds i8, i8* %14, i64 -3, !dbg !2288
  %23 = load i8, i8* %22, align 1, !dbg !2289, !tbaa !1382
  %24 = zext i8 %23 to i64, !dbg !2288
  br label %39, !dbg !2290

; <label>:25:                                     ; preds = %11
  %26 = getelementptr inbounds i8, i8* %14, i64 -5, !dbg !2291
  %27 = bitcast i8* %26 to i16*, !dbg !2292
  %28 = load i16, i16* %27, align 1, !dbg !2292, !tbaa !2037
  %29 = zext i16 %28 to i64, !dbg !2291
  br label %39, !dbg !2293

; <label>:30:                                     ; preds = %11
  %31 = getelementptr inbounds i8, i8* %14, i64 -9, !dbg !2294
  %32 = bitcast i8* %31 to i32*, !dbg !2295
  %33 = load i32, i32* %32, align 1, !dbg !2295, !tbaa !1482
  %34 = zext i32 %33 to i64, !dbg !2294
  br label %39, !dbg !2296

; <label>:35:                                     ; preds = %11
  %36 = getelementptr inbounds i8, i8* %14, i64 -17, !dbg !2297
  %37 = bitcast i8* %36 to i64*, !dbg !2298
  %38 = load i64, i64* %37, align 1, !dbg !2298, !tbaa !2045
  br label %39, !dbg !2299

; <label>:39:                                     ; preds = %11, %18, %21, %25, %30, %35
  %40 = phi i64 [ %38, %35 ], [ %34, %30 ], [ %29, %25 ], [ %24, %21 ], [ %20, %18 ], [ 0, %11 ], !dbg !2300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2301
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2302
  %41 = trunc i64 %40 to i32, !dbg !2303
  %42 = tail call i64 @dictGenHashFunction(i8* %14, i32 %41) #9, !dbg !2304
  br label %84, !dbg !2305

; <label>:43:                                     ; preds = %9
  %44 = icmp eq i32 %7, 1, !dbg !2306
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2307
  br i1 %44, label %45, label %52, !dbg !2307

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0, !dbg !2308
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #4, !dbg !2308
  %47 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !2310
  %48 = bitcast i8* %47 to i64*, !dbg !2310
  %49 = load i64, i64* %48, align 8, !dbg !2310, !tbaa !1180
  %50 = call i32 @ll2string(i8* nonnull %46, i64 32, i64 %49) #9, !dbg !2311
  %51 = call i64 @dictGenHashFunction(i8* nonnull %46, i32 %50) #9, !dbg !2313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #4, !dbg !2314
  br label %84

; <label>:52:                                     ; preds = %43
  %53 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %3) #9, !dbg !2315
  %54 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %53, i64 0, i32 2, !dbg !2316
  %55 = load i8*, i8** %54, align 8, !dbg !2316, !tbaa !1180
  %56 = getelementptr inbounds i8, i8* %55, i64 -1, !dbg !2319
  %57 = load i8, i8* %56, align 1, !dbg !2319, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2321
  %58 = trunc i8 %57 to i3, !dbg !2321
  switch i3 %58, label %80 [
    i3 0, label %59
    i3 1, label %62
    i3 2, label %66
    i3 3, label %71
    i3 -4, label %76
  ], !dbg !2321

; <label>:59:                                     ; preds = %52
  %60 = lshr i8 %57, 3, !dbg !2322
  %61 = zext i8 %60 to i64, !dbg !2322
  br label %80, !dbg !2323

; <label>:62:                                     ; preds = %52
  %63 = getelementptr inbounds i8, i8* %55, i64 -3, !dbg !2324
  %64 = load i8, i8* %63, align 1, !dbg !2325, !tbaa !1382
  %65 = zext i8 %64 to i64, !dbg !2324
  br label %80, !dbg !2326

; <label>:66:                                     ; preds = %52
  %67 = getelementptr inbounds i8, i8* %55, i64 -5, !dbg !2327
  %68 = bitcast i8* %67 to i16*, !dbg !2328
  %69 = load i16, i16* %68, align 1, !dbg !2328, !tbaa !2037
  %70 = zext i16 %69 to i64, !dbg !2327
  br label %80, !dbg !2329

; <label>:71:                                     ; preds = %52
  %72 = getelementptr inbounds i8, i8* %55, i64 -9, !dbg !2330
  %73 = bitcast i8* %72 to i32*, !dbg !2331
  %74 = load i32, i32* %73, align 1, !dbg !2331, !tbaa !1482
  %75 = zext i32 %74 to i64, !dbg !2330
  br label %80, !dbg !2332

; <label>:76:                                     ; preds = %52
  %77 = getelementptr inbounds i8, i8* %55, i64 -17, !dbg !2333
  %78 = bitcast i8* %77 to i64*, !dbg !2334
  %79 = load i64, i64* %78, align 1, !dbg !2334, !tbaa !2045
  br label %80, !dbg !2335

; <label>:80:                                     ; preds = %52, %59, %62, %66, %71, %76
  %81 = phi i64 [ %79, %76 ], [ %75, %71 ], [ %70, %66 ], [ %65, %62 ], [ %61, %59 ], [ 0, %52 ], !dbg !2336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2337
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2338
  %82 = trunc i64 %81 to i32, !dbg !2339
  %83 = tail call i64 @dictGenHashFunction(i8* %55, i32 %82) #9, !dbg !2340
  tail call void @decrRefCount(%struct.redisObject* %53) #9, !dbg !2342
  br label %84

; <label>:84:                                     ; preds = %80, %45, %39
  %85 = phi i64 [ %42, %39 ], [ %51, %45 ], [ %83, %80 ], !dbg !2337
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2343
  ret i64 %85, !dbg !2343
}

; Function Attrs: noredzone nounwind
define dso_local i32 @htNeedsResize(%struct.dict* nocapture readonly) local_unnamed_addr #1 !dbg !2344 {
  %2 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 1, !dbg !2352
  %3 = load i64, i64* %2, align 8, !dbg !2352, !tbaa !2353
  %4 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 1, !dbg !2352
  %5 = load i64, i64* %4, align 8, !dbg !2352, !tbaa !2353
  %6 = add i64 %5, %3, !dbg !2352
  %7 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 0, i32 3, !dbg !2355
  %8 = load i64, i64* %7, align 8, !dbg !2355, !tbaa !1370
  %9 = getelementptr inbounds %struct.dict, %struct.dict* %0, i64 0, i32 2, i64 1, i32 3, !dbg !2355
  %10 = load i64, i64* %9, align 8, !dbg !2355, !tbaa !1370
  %11 = icmp sgt i64 %6, 4, !dbg !2356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2357
  br i1 %11, label %12, label %18, !dbg !2357

; <label>:12:                                     ; preds = %1
  %13 = add i64 %10, %8, !dbg !2355
  %14 = mul nsw i64 %13, 100, !dbg !2359
  %15 = sdiv i64 %14, %6, !dbg !2360
  %16 = icmp slt i64 %15, 10, !dbg !2361
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %17 = zext i1 %16 to i32
  br label %18

; <label>:18:                                     ; preds = %12, %1
  %19 = phi i32 [ 0, %1 ], [ %17, %12 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2362
  ret i32 %19, !dbg !2362
}

; Function Attrs: noredzone nounwind
define dso_local void @tryResizeHashTables(i32) local_unnamed_addr #1 !dbg !2363 {
  %2 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !2367, !tbaa !2369
  %3 = sext i32 %0 to i64, !dbg !2370
  %4 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %2, i64 %3, i32 0, !dbg !2371
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !2371, !tbaa !2372
  %6 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 1, !dbg !2376
  %7 = load i64, i64* %6, align 8, !dbg !2376, !tbaa !2353
  %8 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 1, !dbg !2376
  %9 = load i64, i64* %8, align 8, !dbg !2376, !tbaa !2353
  %10 = add i64 %9, %7, !dbg !2376
  %11 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 3, !dbg !2378
  %12 = load i64, i64* %11, align 8, !dbg !2378, !tbaa !1370
  %13 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 3, !dbg !2378
  %14 = load i64, i64* %13, align 8, !dbg !2378, !tbaa !1370
  %15 = icmp sgt i64 %10, 4, !dbg !2379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2380
  br i1 %15, label %17, label %16, !dbg !2380

; <label>:16:                                     ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2381
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2382
  br label %25, !dbg !2382

; <label>:17:                                     ; preds = %1
  %18 = add i64 %14, %12, !dbg !2378
  %19 = mul nsw i64 %18, 100, !dbg !2384
  %20 = sdiv i64 %19, %10, !dbg !2385
  %21 = icmp sgt i64 %20, 9, !dbg !2386
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2381
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2382
  br i1 %21, label %25, label %22, !dbg !2382

; <label>:22:                                     ; preds = %17
  %23 = tail call i32 @dictResize(%struct.dict* %5) #9, !dbg !2387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2387
  %24 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !2388, !tbaa !2369
  br label %25, !dbg !2387

; <label>:25:                                     ; preds = %16, %17, %22
  %26 = phi %struct.redisDb* [ %2, %16 ], [ %2, %17 ], [ %24, %22 ], !dbg !2388
  %27 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %26, i64 %3, i32 1, !dbg !2390
  %28 = load %struct.dict*, %struct.dict** %27, align 8, !dbg !2390, !tbaa !2391
  %29 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 0, i32 1, !dbg !2394
  %30 = load i64, i64* %29, align 8, !dbg !2394, !tbaa !2353
  %31 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 1, i32 1, !dbg !2394
  %32 = load i64, i64* %31, align 8, !dbg !2394, !tbaa !2353
  %33 = add i64 %32, %30, !dbg !2394
  %34 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 0, i32 3, !dbg !2396
  %35 = load i64, i64* %34, align 8, !dbg !2396, !tbaa !1370
  %36 = getelementptr inbounds %struct.dict, %struct.dict* %28, i64 0, i32 2, i64 1, i32 3, !dbg !2396
  %37 = load i64, i64* %36, align 8, !dbg !2396, !tbaa !1370
  %38 = icmp sgt i64 %33, 4, !dbg !2397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2398
  br i1 %38, label %40, label %39, !dbg !2398

; <label>:39:                                     ; preds = %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2399
  br label %47, !dbg !2400

; <label>:40:                                     ; preds = %25
  %41 = add i64 %37, %35, !dbg !2396
  %42 = mul nsw i64 %41, 100, !dbg !2402
  %43 = sdiv i64 %42, %33, !dbg !2403
  %44 = icmp sgt i64 %43, 9, !dbg !2404
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2399
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2400
  br i1 %44, label %48, label %45, !dbg !2400

; <label>:45:                                     ; preds = %40
  %46 = tail call i32 @dictResize(%struct.dict* %28) #9, !dbg !2405
  br label %47, !dbg !2405

; <label>:47:                                     ; preds = %45, %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2406
  br label %48, !dbg !2407

; <label>:48:                                     ; preds = %47, %40
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2407
  ret void, !dbg !2407
}

; Function Attrs: noredzone
declare dso_local i32 @dictResize(%struct.dict*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @incrementallyRehash(i32) local_unnamed_addr #1 !dbg !2408 {
  %2 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !2414, !tbaa !2369
  %3 = sext i32 %0 to i64, !dbg !2414
  %4 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %2, i64 %3, i32 0, !dbg !2414
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !2414, !tbaa !2372
  %6 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 3, !dbg !2414
  %7 = load i64, i64* %6, align 8, !dbg !2414, !tbaa !2416
  %8 = icmp eq i64 %7, -1, !dbg !2414
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2418
  br i1 %8, label %11, label %9, !dbg !2418

; <label>:9:                                      ; preds = %1
  %10 = tail call i32 @dictRehashMilliseconds(%struct.dict* %5, i32 1) #9, !dbg !2419
  br label %19, !dbg !2421

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %2, i64 %3, i32 1, !dbg !2422
  %13 = load %struct.dict*, %struct.dict** %12, align 8, !dbg !2422, !tbaa !2391
  %14 = getelementptr inbounds %struct.dict, %struct.dict* %13, i64 0, i32 3, !dbg !2422
  %15 = load i64, i64* %14, align 8, !dbg !2422, !tbaa !2416
  %16 = icmp eq i64 %15, -1, !dbg !2422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2424
  br i1 %16, label %19, label %17, !dbg !2424

; <label>:17:                                     ; preds = %11
  %18 = tail call i32 @dictRehashMilliseconds(%struct.dict* %13, i32 1) #9, !dbg !2425
  br label %19, !dbg !2427

; <label>:19:                                     ; preds = %11, %17, %9
  %20 = phi i32 [ 1, %9 ], [ 1, %17 ], [ 0, %11 ], !dbg !2428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2430
  ret i32 %20, !dbg !2430
}

; Function Attrs: noredzone
declare dso_local i32 @dictRehashMilliseconds(%struct.dict*, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @updateDictResizePolicy() local_unnamed_addr #1 !dbg !2431 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !2432, !tbaa !2434
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !2435
  %3 = and i32 %2, %1, !dbg !2436
  %4 = icmp eq i32 %3, -1, !dbg !2436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2436
  br i1 %4, label %5, label %6, !dbg !2436

; <label>:5:                                      ; preds = %0
  tail call void @dictEnableResize() #9, !dbg !2437
  br label %7, !dbg !2437

; <label>:6:                                      ; preds = %0
  tail call void @dictDisableResize() #9, !dbg !2438
  br label %7

; <label>:7:                                      ; preds = %6, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2439
  ret void, !dbg !2439
}

; Function Attrs: noredzone
declare dso_local void @dictEnableResize() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @dictDisableResize() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @trackInstantaneousMetric(i32, i64) local_unnamed_addr #1 !dbg !2440 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = bitcast %struct.timeval* %4 to i8*, !dbg !2457
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4, !dbg !2457
  %6 = ptrtoint %struct.timeval* %4 to i64, !dbg !2458
  %7 = add i64 %6, 65536, !dbg !2459
  %8 = inttoptr i64 %7 to %struct.timeval*, !dbg !2460
  %9 = call i32 @gettimeofday(%struct.timeval* %8, i8* null) #9, !dbg !2462
  %10 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i64 0, i32 0, !dbg !2464
  %11 = load i64, i64* %10, align 8, !dbg !2464, !tbaa !1316
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i64 0, i32 1, !dbg !2465
  %13 = load i64, i64* %12, align 8, !dbg !2465, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4, !dbg !2466
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2467
  %14 = mul nsw i64 %11, 1000000, !dbg !2468
  %15 = add nsw i64 %14, %13, !dbg !2470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2471
  %16 = sdiv i64 %15, 1000, !dbg !2472
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2473
  %17 = sext i32 %0 to i64, !dbg !2474
  %18 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %17, i32 0, !dbg !2475
  %19 = load i64, i64* %18, align 8, !dbg !2475, !tbaa !2476
  %20 = sub nsw i64 %16, %19, !dbg !2478
  %21 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %17, i32 1, !dbg !2480
  %22 = load i64, i64* %21, align 8, !dbg !2480, !tbaa !2481
  %23 = icmp sgt i64 %20, 0, !dbg !2482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2483
  br i1 %23, label %24, label %28, !dbg !2483

; <label>:24:                                     ; preds = %2
  %25 = sub nsw i64 %1, %22, !dbg !2484
  %26 = mul nsw i64 %25, 1000, !dbg !2486
  %27 = sdiv i64 %26, %20, !dbg !2487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2483
  br label %28, !dbg !2483

; <label>:28:                                     ; preds = %2, %24
  %29 = phi i64 [ %27, %24 ], [ 0, %2 ], !dbg !2483
  %30 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %17, i32 3, !dbg !2489
  %31 = load i32, i32* %30, align 8, !dbg !2489, !tbaa !2490
  %32 = sext i32 %31 to i64, !dbg !2491
  %33 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %17, i32 2, i64 %32, !dbg !2491
  store i64 %29, i64* %33, align 8, !dbg !2492, !tbaa !2493
  %34 = add nsw i32 %31, 1, !dbg !2494
  %35 = srem i32 %34, 16, !dbg !2495
  store i32 %35, i32* %30, align 8, !dbg !2495, !tbaa !2490
  %36 = bitcast %struct.timeval* %3 to i8*, !dbg !2502
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #4, !dbg !2502
  %37 = ptrtoint %struct.timeval* %3 to i64, !dbg !2503
  %38 = add i64 %37, 65536, !dbg !2504
  %39 = inttoptr i64 %38 to %struct.timeval*, !dbg !2505
  %40 = call i32 @gettimeofday(%struct.timeval* %39, i8* null) #9, !dbg !2507
  %41 = getelementptr inbounds %struct.timeval, %struct.timeval* %39, i64 0, i32 0, !dbg !2509
  %42 = load i64, i64* %41, align 8, !dbg !2509, !tbaa !1316
  %43 = getelementptr inbounds %struct.timeval, %struct.timeval* %39, i64 0, i32 1, !dbg !2510
  %44 = load i64, i64* %43, align 8, !dbg !2510, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #4, !dbg !2511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2512
  %45 = mul nsw i64 %42, 1000000, !dbg !2513
  %46 = add nsw i64 %45, %44, !dbg !2515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2516
  %47 = sdiv i64 %46, 1000, !dbg !2517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2518
  store i64 %47, i64* %18, align 8, !dbg !2519, !tbaa !2476
  store i64 %1, i64* %21, align 8, !dbg !2520, !tbaa !2481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2521
  ret void, !dbg !2521
}

; Function Attrs: noredzone nounwind
define dso_local i64 @getInstantaneousMetric(i32) local_unnamed_addr #1 !dbg !2522 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 0, !dbg !2535
  %4 = load i64, i64* %3, align 8, !dbg !2535, !tbaa !2493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %5 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 1, !dbg !2535
  %6 = load i64, i64* %5, align 8, !dbg !2535, !tbaa !2493
  %7 = add nsw i64 %6, %4, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %8 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 2, !dbg !2535
  %9 = load i64, i64* %8, align 8, !dbg !2535, !tbaa !2493
  %10 = add nsw i64 %9, %7, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %11 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 3, !dbg !2535
  %12 = load i64, i64* %11, align 8, !dbg !2535, !tbaa !2493
  %13 = add nsw i64 %12, %10, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %14 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 4, !dbg !2535
  %15 = load i64, i64* %14, align 8, !dbg !2535, !tbaa !2493
  %16 = add nsw i64 %15, %13, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %17 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 5, !dbg !2535
  %18 = load i64, i64* %17, align 8, !dbg !2535, !tbaa !2493
  %19 = add nsw i64 %18, %16, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %20 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 6, !dbg !2535
  %21 = load i64, i64* %20, align 8, !dbg !2535, !tbaa !2493
  %22 = add nsw i64 %21, %19, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %23 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 7, !dbg !2535
  %24 = load i64, i64* %23, align 8, !dbg !2535, !tbaa !2493
  %25 = add nsw i64 %24, %22, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %26 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 8, !dbg !2535
  %27 = load i64, i64* %26, align 8, !dbg !2535, !tbaa !2493
  %28 = add nsw i64 %27, %25, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %29 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 9, !dbg !2535
  %30 = load i64, i64* %29, align 8, !dbg !2535, !tbaa !2493
  %31 = add nsw i64 %30, %28, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %32 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 10, !dbg !2535
  %33 = load i64, i64* %32, align 8, !dbg !2535, !tbaa !2493
  %34 = add nsw i64 %33, %31, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %35 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 11, !dbg !2535
  %36 = load i64, i64* %35, align 8, !dbg !2535, !tbaa !2493
  %37 = add nsw i64 %36, %34, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %38 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 12, !dbg !2535
  %39 = load i64, i64* %38, align 8, !dbg !2535, !tbaa !2493
  %40 = add nsw i64 %39, %37, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %41 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 13, !dbg !2535
  %42 = load i64, i64* %41, align 8, !dbg !2535, !tbaa !2493
  %43 = add nsw i64 %42, %40, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %44 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 14, !dbg !2535
  %45 = load i64, i64* %44, align 8, !dbg !2535, !tbaa !2493
  %46 = add nsw i64 %45, %43, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %47 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 %2, i32 2, i64 15, !dbg !2535
  %48 = load i64, i64* %47, align 8, !dbg !2535, !tbaa !2493
  %49 = add nsw i64 %48, %46, !dbg !2538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  %50 = sdiv i64 %49, 16, !dbg !2539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2540
  ret i64 %50, !dbg !2540
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clientsCronHandleTimeout(%struct.client*, i64) local_unnamed_addr #1 !dbg !2541 {
  %3 = sdiv i64 %1, 1000, !dbg !2550
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 101), align 4, !dbg !2552, !tbaa !2554
  %5 = icmp eq i32 %4, 0, !dbg !2555
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2556
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21
  %7 = load i32, i32* %6, align 8, !dbg !2557, !tbaa !1216
  br i1 %5, label %27, label %8, !dbg !2556

; <label>:8:                                      ; preds = %2
  %9 = and i32 %7, 1, !dbg !2558
  %10 = icmp eq i32 %9, 0, !dbg !2558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2559
  br i1 %10, label %11, label %27, !dbg !2559

; <label>:11:                                     ; preds = %8
  %12 = and i32 %7, 2, !dbg !2560
  %13 = icmp eq i32 %12, 0, !dbg !2560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2561
  br i1 %13, label %14, label %27, !dbg !2561

; <label>:14:                                     ; preds = %11
  %15 = and i32 %7, 16, !dbg !2562
  %16 = icmp eq i32 %15, 0, !dbg !2562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2563
  br i1 %16, label %17, label %27, !dbg !2563

; <label>:17:                                     ; preds = %14
  %18 = and i32 %7, 262144, !dbg !2564
  %19 = icmp eq i32 %18, 0, !dbg !2564
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2565
  br i1 %19, label %20, label %27, !dbg !2565

; <label>:20:                                     ; preds = %17
  %21 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 19, !dbg !2566
  %22 = load i64, i64* %21, align 8, !dbg !2566, !tbaa !2567
  %23 = sub nsw i64 %3, %22, !dbg !2568
  %24 = sext i32 %4 to i64, !dbg !2569
  %25 = icmp sgt i64 %23, %24, !dbg !2570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2571
  br i1 %25, label %26, label %27, !dbg !2571

; <label>:26:                                     ; preds = %20
  tail call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.247, i64 0, i64 0)) #10, !dbg !2572
  tail call void @freeClient(%struct.client* nonnull %0) #9, !dbg !2574
  br label %44, !dbg !2575

; <label>:27:                                     ; preds = %2, %17, %14, %11, %8, %20
  %28 = and i32 %7, 16, !dbg !2576
  %29 = icmp eq i32 %28, 0, !dbg !2576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2578
  br i1 %29, label %44, label %30, !dbg !2578

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 0, !dbg !2579
  %32 = load i64, i64* %31, align 8, !dbg !2579, !tbaa !2582
  %33 = icmp eq i64 %32, 0, !dbg !2583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2584
  br i1 %33, label %37, label %34, !dbg !2584

; <label>:34:                                     ; preds = %30
  %35 = icmp slt i64 %32, %1, !dbg !2585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2586
  br i1 %35, label %36, label %37, !dbg !2586

; <label>:36:                                     ; preds = %34
  tail call void @replyToBlockedClientTimedOut(%struct.client* nonnull %0) #9, !dbg !2587
  tail call void @unblockClient(%struct.client* nonnull %0) #9, !dbg !2589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2590
  br label %44, !dbg !2590

; <label>:37:                                     ; preds = %30, %34
  %38 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !2591, !tbaa !2593
  %39 = icmp eq i32 %38, 0, !dbg !2594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2595
  br i1 %39, label %44, label %40, !dbg !2595

; <label>:40:                                     ; preds = %37
  %41 = tail call i32 @clusterRedirectBlockedClientIfNeeded(%struct.client* nonnull %0) #9, !dbg !2596
  %42 = icmp eq i32 %41, 0, !dbg !2596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2599
  br i1 %42, label %44, label %43, !dbg !2599

; <label>:43:                                     ; preds = %40
  tail call void @unblockClient(%struct.client* nonnull %0) #9, !dbg !2600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2600
  br label %44, !dbg !2600

; <label>:44:                                     ; preds = %36, %43, %27, %37, %40, %26
  %45 = phi i32 [ 1, %26 ], [ 0, %40 ], [ 0, %37 ], [ 0, %27 ], [ 0, %43 ], [ 0, %36 ], !dbg !2601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2602
  ret i32 %45, !dbg !2602
}

; Function Attrs: noredzone
declare dso_local void @freeClient(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @replyToBlockedClientTimedOut(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @unblockClient(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @clusterRedirectBlockedClientIfNeeded(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @clientsCronResizeQueryBuffer(%struct.client* nocapture) local_unnamed_addr #1 !dbg !2603 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 4, !dbg !2614
  %3 = load i8*, i8** %2, align 8, !dbg !2614, !tbaa !2615
  %4 = tail call i64 @sdsAllocSize(i8* %3) #9, !dbg !2616
  %5 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !2618, !tbaa !2619
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 19, !dbg !2620
  %7 = load i64, i64* %6, align 8, !dbg !2620, !tbaa !2567
  %8 = icmp ugt i64 %4, 32768, !dbg !2621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2623
  br i1 %8, label %11, label %9, !dbg !2623

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 7, !dbg !2624
  br label %66, !dbg !2623

; <label>:11:                                     ; preds = %1
  %12 = sub nsw i64 %5, %7, !dbg !2625
  %13 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 7, !dbg !2627
  %14 = load i64, i64* %13, align 8, !dbg !2627, !tbaa !2628
  %15 = add i64 %14, 1, !dbg !2629
  %16 = udiv i64 %4, %15, !dbg !2630
  %17 = icmp ugt i64 %16, 2, !dbg !2631
  %18 = icmp sgt i64 %12, 2, !dbg !2632
  %19 = or i1 %18, %17, !dbg !2633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2633
  br i1 %19, label %20, label %66, !dbg !2633

; <label>:20:                                     ; preds = %11
  %21 = load i8*, i8** %2, align 8, !dbg !2634, !tbaa !2615
  %22 = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !2652
  %23 = load i8, i8* %22, align 1, !dbg !2652, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2654
  %24 = trunc i8 %23 to i3, !dbg !2654
  switch i3 %24, label %60 [
    i3 -4, label %52
    i3 1, label %25
    i3 2, label %33
    i3 3, label %43
  ], !dbg !2654

; <label>:25:                                     ; preds = %20
  %26 = getelementptr inbounds i8, i8* %21, i64 -3, !dbg !2655
  %27 = getelementptr inbounds i8, i8* %21, i64 -2, !dbg !2656
  %28 = load i8, i8* %27, align 1, !dbg !2656, !tbaa !1382
  %29 = zext i8 %28 to i64, !dbg !2657
  %30 = load i8, i8* %26, align 1, !dbg !2658, !tbaa !1382
  %31 = zext i8 %30 to i64, !dbg !2659
  %32 = sub nsw i64 %29, %31, !dbg !2660
  br label %61

; <label>:33:                                     ; preds = %20
  %34 = getelementptr inbounds i8, i8* %21, i64 -5, !dbg !2661
  %35 = getelementptr inbounds i8, i8* %21, i64 -3, !dbg !2662
  %36 = bitcast i8* %35 to i16*, !dbg !2662
  %37 = load i16, i16* %36, align 1, !dbg !2662, !tbaa !2037
  %38 = zext i16 %37 to i64, !dbg !2663
  %39 = bitcast i8* %34 to i16*, !dbg !2664
  %40 = load i16, i16* %39, align 1, !dbg !2664, !tbaa !2037
  %41 = zext i16 %40 to i64, !dbg !2665
  %42 = sub nsw i64 %38, %41, !dbg !2666
  br label %61

; <label>:43:                                     ; preds = %20
  %44 = getelementptr inbounds i8, i8* %21, i64 -9, !dbg !2667
  %45 = getelementptr inbounds i8, i8* %21, i64 -5, !dbg !2668
  %46 = bitcast i8* %45 to i32*, !dbg !2668
  %47 = load i32, i32* %46, align 1, !dbg !2668, !tbaa !1482
  %48 = bitcast i8* %44 to i32*, !dbg !2669
  %49 = load i32, i32* %48, align 1, !dbg !2669, !tbaa !1482
  %50 = sub i32 %47, %49, !dbg !2670
  %51 = zext i32 %50 to i64, !dbg !2671
  br label %61

; <label>:52:                                     ; preds = %20
  %53 = getelementptr inbounds i8, i8* %21, i64 -17, !dbg !2672
  %54 = getelementptr inbounds i8, i8* %21, i64 -9, !dbg !2673
  %55 = bitcast i8* %54 to i64*, !dbg !2673
  %56 = load i64, i64* %55, align 1, !dbg !2673, !tbaa !2045
  %57 = bitcast i8* %53 to i64*, !dbg !2674
  %58 = load i64, i64* %57, align 1, !dbg !2674, !tbaa !2045
  %59 = sub i64 %56, %58, !dbg !2675
  br label %61

; <label>:60:                                     ; preds = %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2676
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2678
  br label %66, !dbg !2678

; <label>:61:                                     ; preds = %25, %33, %43, %52
  %62 = phi i64 [ %59, %52 ], [ %51, %43 ], [ %42, %33 ], [ %32, %25 ], !dbg !2679
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2677
  %63 = icmp ugt i64 %62, 4096, !dbg !2681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2678
  br i1 %63, label %64, label %66, !dbg !2678

; <label>:64:                                     ; preds = %61
  %65 = tail call i8* @sdsRemoveFreeSpace(i8* nonnull %21) #9, !dbg !2682
  store i8* %65, i8** %2, align 8, !dbg !2684, !tbaa !2615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2685
  br label %66, !dbg !2685

; <label>:66:                                     ; preds = %9, %60, %61, %64, %11
  %67 = phi i64* [ %10, %9 ], [ %13, %60 ], [ %13, %61 ], [ %13, %64 ], [ %13, %11 ], !dbg !2624
  store i64 0, i64* %67, align 8, !dbg !2686, !tbaa !2628
  %68 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !2687
  %69 = load i32, i32* %68, align 8, !dbg !2687, !tbaa !1216
  %70 = and i32 %69, 2, !dbg !2688
  %71 = icmp eq i32 %70, 0, !dbg !2688
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2689
  br i1 %71, label %110, label %72, !dbg !2689

; <label>:72:                                     ; preds = %66
  %73 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 6, !dbg !2690
  %74 = load i8*, i8** %73, align 8, !dbg !2690, !tbaa !2691
  %75 = tail call i64 @sdsAllocSize(i8* %74) #9, !dbg !2692
  %76 = icmp ugt i64 %75, 4194304, !dbg !2694
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2696
  br i1 %76, label %77, label %109, !dbg !2696

; <label>:77:                                     ; preds = %72
  %78 = load i8*, i8** %73, align 8, !dbg !2697, !tbaa !2691
  %79 = getelementptr inbounds i8, i8* %78, i64 -1, !dbg !2700
  %80 = load i8, i8* %79, align 1, !dbg !2700, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2702
  %81 = trunc i8 %80 to i3, !dbg !2702
  switch i3 %81, label %103 [
    i3 0, label %82
    i3 1, label %85
    i3 2, label %89
    i3 3, label %94
    i3 -4, label %99
  ], !dbg !2702

; <label>:82:                                     ; preds = %77
  %83 = lshr i8 %80, 3, !dbg !2703
  %84 = zext i8 %83 to i64, !dbg !2703
  br label %103, !dbg !2704

; <label>:85:                                     ; preds = %77
  %86 = getelementptr inbounds i8, i8* %78, i64 -3, !dbg !2705
  %87 = load i8, i8* %86, align 1, !dbg !2706, !tbaa !1382
  %88 = zext i8 %87 to i64, !dbg !2705
  br label %103, !dbg !2707

; <label>:89:                                     ; preds = %77
  %90 = getelementptr inbounds i8, i8* %78, i64 -5, !dbg !2708
  %91 = bitcast i8* %90 to i16*, !dbg !2709
  %92 = load i16, i16* %91, align 1, !dbg !2709, !tbaa !2037
  %93 = zext i16 %92 to i64, !dbg !2708
  br label %103, !dbg !2710

; <label>:94:                                     ; preds = %77
  %95 = getelementptr inbounds i8, i8* %78, i64 -9, !dbg !2711
  %96 = bitcast i8* %95 to i32*, !dbg !2712
  %97 = load i32, i32* %96, align 1, !dbg !2712, !tbaa !1482
  %98 = zext i32 %97 to i64, !dbg !2711
  br label %103, !dbg !2713

; <label>:99:                                     ; preds = %77
  %100 = getelementptr inbounds i8, i8* %78, i64 -17, !dbg !2714
  %101 = bitcast i8* %100 to i64*, !dbg !2715
  %102 = load i64, i64* %101, align 1, !dbg !2715, !tbaa !2045
  br label %103, !dbg !2716

; <label>:103:                                    ; preds = %77, %82, %85, %89, %94, %99
  %104 = phi i64 [ %102, %99 ], [ %98, %94 ], [ %93, %89 ], [ %88, %85 ], [ %84, %82 ], [ 0, %77 ], !dbg !2717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2718
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2719
  %105 = lshr i64 %75, 1, !dbg !2720
  %106 = icmp ult i64 %104, %105, !dbg !2721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2722
  br i1 %106, label %107, label %109, !dbg !2722

; <label>:107:                                    ; preds = %103
  %108 = tail call i8* @sdsRemoveFreeSpace(i8* %78) #9, !dbg !2723
  store i8* %108, i8** %73, align 8, !dbg !2725, !tbaa !2691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2726
  br label %109, !dbg !2726

; <label>:109:                                    ; preds = %107, %103, %72
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2727
  br label %110, !dbg !2727

; <label>:110:                                    ; preds = %66, %109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2728
  ret i32 0, !dbg !2728
}

; Function Attrs: noredzone
declare dso_local i64 @sdsAllocSize(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @sdsRemoveFreeSpace(i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @clientsCronTrackExpansiveClients(%struct.client*) local_unnamed_addr #1 !dbg !2729 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 4, !dbg !2737
  %3 = load i8*, i8** %2, align 8, !dbg !2737, !tbaa !2615
  %4 = tail call i64 @sdsAllocSize(i8* %3) #9, !dbg !2738
  %5 = tail call i64 @getClientOutputBufferMemoryUsage(%struct.client* %0) #9, !dbg !2740
  %6 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !2742, !tbaa !2619
  %7 = srem i64 %6, 8, !dbg !2743
  %8 = trunc i64 %7 to i32, !dbg !2744
  %9 = add nsw i32 %8, 1, !dbg !2746
  %10 = srem i32 %9, 8, !dbg !2747
  %11 = sext i32 %10 to i64, !dbg !2749
  %12 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 %11, !dbg !2749
  store i64 0, i64* %12, align 8, !dbg !2750, !tbaa !2045
  %13 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 %11, !dbg !2751
  store i64 0, i64* %13, align 8, !dbg !2752, !tbaa !2045
  %14 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 %7, !dbg !2753
  %15 = load i64, i64* %14, align 8, !dbg !2753, !tbaa !2045
  %16 = icmp ugt i64 %4, %15, !dbg !2755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2756
  br i1 %16, label %17, label %18, !dbg !2756

; <label>:17:                                     ; preds = %1
  store i64 %4, i64* %14, align 8, !dbg !2757, !tbaa !2045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2758
  br label %18, !dbg !2758

; <label>:18:                                     ; preds = %17, %1
  %19 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 %7, !dbg !2759
  %20 = load i64, i64* %19, align 8, !dbg !2759, !tbaa !2045
  %21 = icmp ugt i64 %5, %20, !dbg !2761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2762
  br i1 %21, label %22, label %23, !dbg !2762

; <label>:22:                                     ; preds = %18
  store i64 %5, i64* %19, align 8, !dbg !2763, !tbaa !2045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2764
  br label %23, !dbg !2764

; <label>:23:                                     ; preds = %22, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2765
  ret i32 0, !dbg !2765
}

; Function Attrs: noredzone
declare dso_local i64 @getClientOutputBufferMemoryUsage(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @getExpansiveClientsInfo(i64* nocapture, i64* nocapture) local_unnamed_addr #1 !dbg !2766 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %3 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 0), align 16, !dbg !2784, !tbaa !2045
  %4 = icmp eq i64 %3, 0, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %4, label %6, label %5, !dbg !2789

; <label>:5:                                      ; preds = %2
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %6, !dbg !2790

; <label>:6:                                      ; preds = %2, %5
  %7 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 0), align 16, !dbg !2791, !tbaa !2045
  %8 = icmp eq i64 %7, 0, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %8, label %10, label %9, !dbg !2794

; <label>:9:                                      ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %10, !dbg !2795

; <label>:10:                                     ; preds = %6, %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %11 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 1), align 8, !dbg !2784, !tbaa !2045
  %12 = icmp ugt i64 %11, %3, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %12, label %13, label %14, !dbg !2789

; <label>:13:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %14, !dbg !2790

; <label>:14:                                     ; preds = %13, %10
  %15 = phi i64 [ %11, %13 ], [ %3, %10 ], !dbg !2797
  %16 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 1), align 8, !dbg !2791, !tbaa !2045
  %17 = icmp ugt i64 %16, %7, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %17, label %18, label %19, !dbg !2794

; <label>:18:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %19, !dbg !2795

; <label>:19:                                     ; preds = %18, %14
  %20 = phi i64 [ %16, %18 ], [ %7, %14 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %21 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 2), align 16, !dbg !2784, !tbaa !2045
  %22 = icmp ugt i64 %21, %15, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %22, label %23, label %24, !dbg !2789

; <label>:23:                                     ; preds = %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %24, !dbg !2790

; <label>:24:                                     ; preds = %23, %19
  %25 = phi i64 [ %21, %23 ], [ %15, %19 ], !dbg !2797
  %26 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 2), align 16, !dbg !2791, !tbaa !2045
  %27 = icmp ugt i64 %26, %20, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %27, label %28, label %29, !dbg !2794

; <label>:28:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %29, !dbg !2795

; <label>:29:                                     ; preds = %28, %24
  %30 = phi i64 [ %26, %28 ], [ %20, %24 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %31 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 3), align 8, !dbg !2784, !tbaa !2045
  %32 = icmp ugt i64 %31, %25, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %32, label %33, label %34, !dbg !2789

; <label>:33:                                     ; preds = %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %34, !dbg !2790

; <label>:34:                                     ; preds = %33, %29
  %35 = phi i64 [ %31, %33 ], [ %25, %29 ], !dbg !2797
  %36 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 3), align 8, !dbg !2791, !tbaa !2045
  %37 = icmp ugt i64 %36, %30, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %37, label %38, label %39, !dbg !2794

; <label>:38:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %39, !dbg !2795

; <label>:39:                                     ; preds = %38, %34
  %40 = phi i64 [ %36, %38 ], [ %30, %34 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %41 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 4), align 16, !dbg !2784, !tbaa !2045
  %42 = icmp ugt i64 %41, %35, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %42, label %43, label %44, !dbg !2789

; <label>:43:                                     ; preds = %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %44, !dbg !2790

; <label>:44:                                     ; preds = %43, %39
  %45 = phi i64 [ %41, %43 ], [ %35, %39 ], !dbg !2797
  %46 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 4), align 16, !dbg !2791, !tbaa !2045
  %47 = icmp ugt i64 %46, %40, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %47, label %48, label %49, !dbg !2794

; <label>:48:                                     ; preds = %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %49, !dbg !2795

; <label>:49:                                     ; preds = %48, %44
  %50 = phi i64 [ %46, %48 ], [ %40, %44 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %51 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 5), align 8, !dbg !2784, !tbaa !2045
  %52 = icmp ugt i64 %51, %45, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %52, label %53, label %54, !dbg !2789

; <label>:53:                                     ; preds = %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %54, !dbg !2790

; <label>:54:                                     ; preds = %53, %49
  %55 = phi i64 [ %51, %53 ], [ %45, %49 ], !dbg !2797
  %56 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 5), align 8, !dbg !2791, !tbaa !2045
  %57 = icmp ugt i64 %56, %50, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %57, label %58, label %59, !dbg !2794

; <label>:58:                                     ; preds = %54
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %59, !dbg !2795

; <label>:59:                                     ; preds = %58, %54
  %60 = phi i64 [ %56, %58 ], [ %50, %54 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %61 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 6), align 16, !dbg !2784, !tbaa !2045
  %62 = icmp ugt i64 %61, %55, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %62, label %63, label %64, !dbg !2789

; <label>:63:                                     ; preds = %59
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %64, !dbg !2790

; <label>:64:                                     ; preds = %63, %59
  %65 = phi i64 [ %61, %63 ], [ %55, %59 ], !dbg !2797
  %66 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 6), align 16, !dbg !2791, !tbaa !2045
  %67 = icmp ugt i64 %66, %60, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %67, label %68, label %69, !dbg !2794

; <label>:68:                                     ; preds = %64
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %69, !dbg !2795

; <label>:69:                                     ; preds = %68, %64
  %70 = phi i64 [ %66, %68 ], [ %60, %64 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  %71 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 7), align 8, !dbg !2784, !tbaa !2045
  %72 = icmp ugt i64 %71, %65, !dbg !2788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2789
  br i1 %72, label %73, label %74, !dbg !2789

; <label>:73:                                     ; preds = %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2790
  br label %74, !dbg !2790

; <label>:74:                                     ; preds = %73, %69
  %75 = phi i64 [ %71, %73 ], [ %65, %69 ], !dbg !2797
  %76 = load i64, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 7), align 8, !dbg !2791, !tbaa !2045
  %77 = icmp ugt i64 %76, %70, !dbg !2793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2794
  br i1 %77, label %78, label %79, !dbg !2794

; <label>:78:                                     ; preds = %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2795
  br label %79, !dbg !2795

; <label>:79:                                     ; preds = %78, %74
  %80 = phi i64 [ %76, %78 ], [ %70, %74 ], !dbg !2797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  store i64 %75, i64* %0, align 8, !dbg !2798, !tbaa !2045
  store i64 %80, i64* %1, align 8, !dbg !2799, !tbaa !2045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2800
  ret void, !dbg !2800
}

; Function Attrs: noredzone nounwind
define dso_local void @clientsCron() local_unnamed_addr #1 !dbg !2801 {
  %1 = alloca %struct.timeval, align 8
  %2 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !2809, !tbaa !2810
  %3 = getelementptr inbounds %struct.list, %struct.list* %2, i64 0, i32 5, !dbg !2809
  %4 = load i64, i64* %3, align 8, !dbg !2809, !tbaa !2811
  %5 = trunc i64 %4 to i32, !dbg !2809
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !2814, !tbaa !2815
  %7 = sdiv i32 %5, %6, !dbg !2816
  %8 = bitcast %struct.timeval* %1 to i8*, !dbg !2824
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4, !dbg !2824
  %9 = ptrtoint %struct.timeval* %1 to i64, !dbg !2825
  %10 = add i64 %9, 65536, !dbg !2826
  %11 = inttoptr i64 %10 to %struct.timeval*, !dbg !2827
  %12 = call i32 @gettimeofday(%struct.timeval* %11, i8* null) #9, !dbg !2829
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i64 0, i32 0, !dbg !2831
  %14 = load i64, i64* %13, align 8, !dbg !2831, !tbaa !1316
  %15 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i64 0, i32 1, !dbg !2832
  %16 = load i64, i64* %15, align 8, !dbg !2832, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4, !dbg !2833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2834
  %17 = mul nsw i64 %14, 1000000, !dbg !2835
  %18 = add nsw i64 %17, %16, !dbg !2837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2838
  %19 = sdiv i64 %18, 1000, !dbg !2839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2840
  %20 = icmp slt i32 %7, 5, !dbg !2842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2844
  br i1 %20, label %21, label %24, !dbg !2844

; <label>:21:                                     ; preds = %0
  %22 = icmp slt i32 %5, 5, !dbg !2845
  %23 = select i1 %22, i32 %5, i32 5, !dbg !2846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2847
  br label %24, !dbg !2847

; <label>:24:                                     ; preds = %21, %0
  %25 = phi i32 [ %23, %21 ], [ %7, %0 ], !dbg !2848
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2849
  %26 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !2850, !tbaa !2810
  %27 = getelementptr inbounds %struct.list, %struct.list* %26, i64 0, i32 5, !dbg !2850
  %28 = load i64, i64* %27, align 8, !dbg !2850, !tbaa !2811
  %29 = icmp eq i64 %28, 0, !dbg !2850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2851
  br i1 %29, label %73, label %30, !dbg !2851

; <label>:30:                                     ; preds = %24, %68
  %31 = phi %struct.list* [ %69, %68 ], [ %26, %24 ]
  %32 = phi i32 [ %33, %68 ], [ %25, %24 ]
  %33 = add nsw i32 %32, -1, !dbg !2852
  %34 = icmp eq i32 %32, 0, !dbg !2851
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2849
  br i1 %34, label %73, label %35, !dbg !2849

; <label>:35:                                     ; preds = %30
  call void @listRotate(%struct.list* %31) #9, !dbg !2853
  %36 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !2854, !tbaa !2810
  %37 = getelementptr inbounds %struct.list, %struct.list* %36, i64 0, i32 0, !dbg !2854
  %38 = load %struct.listNode*, %struct.listNode** %37, align 8, !dbg !2854, !tbaa !2855
  %39 = getelementptr inbounds %struct.listNode, %struct.listNode* %38, i64 0, i32 2, !dbg !2857
  %40 = bitcast i8** %39 to %struct.client**, !dbg !2857
  %41 = load %struct.client*, %struct.client** %40, align 8, !dbg !2857, !tbaa !2858
  %42 = call i32 @clientsCronHandleTimeout(%struct.client* %41, i64 %19) #10, !dbg !2861
  %43 = icmp eq i32 %42, 0, !dbg !2861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2863
  br i1 %43, label %44, label %68, !dbg !2863, !llvm.loop !2864

; <label>:44:                                     ; preds = %35
  %45 = call i32 @clientsCronResizeQueryBuffer(%struct.client* %41) #10, !dbg !2866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2868
  %46 = getelementptr inbounds %struct.client, %struct.client* %41, i64 0, i32 4, !dbg !2872
  %47 = load i8*, i8** %46, align 8, !dbg !2872, !tbaa !2615
  %48 = call i64 @sdsAllocSize(i8* %47) #9, !dbg !2873
  %49 = call i64 @getClientOutputBufferMemoryUsage(%struct.client* %41) #9, !dbg !2875
  %50 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !2877, !tbaa !2619
  %51 = srem i64 %50, 8, !dbg !2878
  %52 = trunc i64 %51 to i32, !dbg !2879
  %53 = add nsw i32 %52, 1, !dbg !2881
  %54 = srem i32 %53, 8, !dbg !2882
  %55 = sext i32 %54 to i64, !dbg !2884
  %56 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 %55, !dbg !2884
  store i64 0, i64* %56, align 8, !dbg !2885, !tbaa !2045
  %57 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 %55, !dbg !2886
  store i64 0, i64* %57, align 8, !dbg !2887, !tbaa !2045
  %58 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemInput, i64 0, i64 %51, !dbg !2888
  %59 = load i64, i64* %58, align 8, !dbg !2888, !tbaa !2045
  %60 = icmp ugt i64 %48, %59, !dbg !2889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2890
  br i1 %60, label %61, label %62, !dbg !2890

; <label>:61:                                     ; preds = %44
  store i64 %48, i64* %58, align 8, !dbg !2891, !tbaa !2045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2892
  br label %62, !dbg !2892

; <label>:62:                                     ; preds = %61, %44
  %63 = getelementptr inbounds [8 x i64], [8 x i64]* @ClientsPeakMemOutput, i64 0, i64 %51, !dbg !2893
  %64 = load i64, i64* %63, align 8, !dbg !2893, !tbaa !2045
  %65 = icmp ugt i64 %49, %64, !dbg !2894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2895
  br i1 %65, label %66, label %67, !dbg !2895

; <label>:66:                                     ; preds = %62
  store i64 %49, i64* %63, align 8, !dbg !2896, !tbaa !2045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2897
  br label %67, !dbg !2897

; <label>:67:                                     ; preds = %62, %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2899
  br label %68, !dbg !2865

; <label>:68:                                     ; preds = %35, %67
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2900
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %69 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !2850, !tbaa !2810
  %70 = getelementptr inbounds %struct.list, %struct.list* %69, i64 0, i32 5, !dbg !2850
  %71 = load i64, i64* %70, align 8, !dbg !2850, !tbaa !2811
  %72 = icmp eq i64 %71, 0, !dbg !2850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2851
  br i1 %72, label %73, label %30, !dbg !2851

; <label>:73:                                     ; preds = %68, %30, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2901
  ret void, !dbg !2901
}

; Function Attrs: noredzone
declare dso_local void @listRotate(%struct.list*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @databasesCron() local_unnamed_addr #1 !dbg !348 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 103), align 4, !dbg !2902, !tbaa !2904
  %2 = icmp eq i32 %1, 0, !dbg !2905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2906
  br i1 %2, label %9, label %3, !dbg !2906

; <label>:3:                                      ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !2907, !tbaa !1813
  %5 = icmp eq i8* %4, null, !dbg !2910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2911
  br i1 %5, label %6, label %7, !dbg !2911

; <label>:6:                                      ; preds = %3
  tail call void @activeExpireCycle(i32 0) #9, !dbg !2912
  br label %8, !dbg !2914

; <label>:7:                                      ; preds = %3
  tail call void @expireSlaveKeys() #9, !dbg !2915
  br label %8

; <label>:8:                                      ; preds = %7, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %9, !dbg !2917

; <label>:9:                                      ; preds = %8, %0
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 104), align 8, !dbg !2917, !tbaa !2919
  %11 = icmp eq i32 %10, 0, !dbg !2920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2921
  br i1 %11, label %13, label %12, !dbg !2921

; <label>:12:                                     ; preds = %9
  tail call void @activeDefragCycle() #9, !dbg !2922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2922
  br label %13, !dbg !2922

; <label>:13:                                     ; preds = %9, %12
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !2923, !tbaa !2434
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !2924
  %16 = and i32 %15, %14, !dbg !2925
  %17 = icmp eq i32 %16, -1, !dbg !2925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2925
  br i1 %17, label %18, label %75, !dbg !2925

; <label>:18:                                     ; preds = %13
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !2927, !tbaa !2929
  %20 = icmp slt i32 %19, 16, !dbg !2930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2932
  br i1 %20, label %21, label %23, !dbg !2931

; <label>:21:                                     ; preds = %18
  %22 = icmp sgt i32 %19, 0, !dbg !2935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2937
  br i1 %22, label %23, label %39, !dbg !2937

; <label>:23:                                     ; preds = %18, %21
  %24 = phi i32 [ %19, %21 ], [ 16, %18 ]
  %25 = load i32, i32* @databasesCron.resize_db, align 4, !dbg !2938, !tbaa !1482
  %26 = urem i32 %25, %19, !dbg !2940
  tail call void @tryResizeHashTables(i32 %26) #10, !dbg !2941
  %27 = load i32, i32* @databasesCron.resize_db, align 4, !dbg !2942, !tbaa !1482
  %28 = add i32 %27, 1, !dbg !2942
  store i32 %28, i32* @databasesCron.resize_db, align 4, !dbg !2942, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2943
  %29 = icmp sgt i32 %24, 1, !dbg !2935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2937
  br i1 %29, label %30, label %39, !dbg !2937, !llvm.loop !2944

; <label>:30:                                     ; preds = %23, %30
  %31 = phi i32 [ %37, %30 ], [ 1, %23 ]
  %32 = phi i32 [ %36, %30 ], [ %28, %23 ]
  %33 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !2946, !tbaa !2929
  %34 = urem i32 %32, %33, !dbg !2940
  tail call void @tryResizeHashTables(i32 %34) #10, !dbg !2941
  %35 = load i32, i32* @databasesCron.resize_db, align 4, !dbg !2942, !tbaa !1482
  %36 = add i32 %35, 1, !dbg !2942
  store i32 %36, i32* @databasesCron.resize_db, align 4, !dbg !2942, !tbaa !1482
  %37 = add nuw nsw i32 %31, 1, !dbg !2947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2943
  %38 = icmp slt i32 %37, %24, !dbg !2935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2937
  br i1 %38, label %30, label %39, !dbg !2937, !llvm.loop !2944

; <label>:39:                                     ; preds = %30, %23, %21
  %40 = phi i1 [ false, %21 ], [ true, %23 ], [ true, %30 ]
  %41 = phi i32 [ %19, %21 ], [ %24, %23 ], [ %24, %30 ]
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !2948, !tbaa !2949
  %43 = icmp eq i32 %42, 0, !dbg !2950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2951
  br i1 %43, label %74, label %44, !dbg !2951

; <label>:44:                                     ; preds = %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2952
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2953
  br i1 %40, label %45, label %74, !dbg !2953

; <label>:45:                                     ; preds = %44
  %46 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8
  %47 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8
  %48 = load i32, i32* @databasesCron.rehash_db, align 4, !dbg !2954, !tbaa !1482
  br label %49, !dbg !2953

; <label>:49:                                     ; preds = %45, %69
  %50 = phi i32 [ %48, %45 ], [ %71, %69 ], !dbg !2954
  %51 = phi i32 [ 0, %45 ], [ %72, %69 ]
  %52 = sext i32 %50 to i64, !dbg !2957
  %53 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %46, i64 %52, i32 0, !dbg !2957
  %54 = load %struct.dict*, %struct.dict** %53, align 8, !dbg !2957, !tbaa !2372
  %55 = getelementptr inbounds %struct.dict, %struct.dict* %54, i64 0, i32 3, !dbg !2957
  %56 = load i64, i64* %55, align 8, !dbg !2957, !tbaa !2416
  %57 = icmp eq i64 %56, -1, !dbg !2957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2958
  br i1 %57, label %60, label %58, !dbg !2958

; <label>:58:                                     ; preds = %49
  %59 = tail call i32 @dictRehashMilliseconds(%struct.dict* %54, i32 1) #9, !dbg !2959
  br label %68, !dbg !2960

; <label>:60:                                     ; preds = %49
  %61 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %46, i64 %52, i32 1, !dbg !2961
  %62 = load %struct.dict*, %struct.dict** %61, align 8, !dbg !2961, !tbaa !2391
  %63 = getelementptr inbounds %struct.dict, %struct.dict* %62, i64 0, i32 3, !dbg !2961
  %64 = load i64, i64* %63, align 8, !dbg !2961, !tbaa !2416
  %65 = icmp eq i64 %64, -1, !dbg !2961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2962
  br i1 %65, label %69, label %66, !dbg !2962

; <label>:66:                                     ; preds = %60
  %67 = tail call i32 @dictRehashMilliseconds(%struct.dict* %62, i32 1) #9, !dbg !2963
  br label %68, !dbg !2964

; <label>:68:                                     ; preds = %58, %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2965
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2966
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2968
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2969
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %74

; <label>:69:                                     ; preds = %60
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2972
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2966
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2968
  %70 = add i32 %50, 1, !dbg !2973
  %71 = urem i32 %70, %47, !dbg !2975
  store i32 %71, i32* @databasesCron.rehash_db, align 4, !dbg !2975, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2976
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %72 = add nuw nsw i32 %51, 1, !dbg !2977
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2978
  %73 = icmp slt i32 %72, %41, !dbg !2979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2953
  br i1 %73, label %49, label %74, !dbg !2953, !llvm.loop !2980

; <label>:74:                                     ; preds = %69, %44, %68, %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2982
  br label %75, !dbg !2982

; <label>:75:                                     ; preds = %74, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2983
  ret void, !dbg !2983
}

; Function Attrs: noredzone
declare dso_local void @activeExpireCycle(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @expireSlaveKeys() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @activeDefragCycle() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @updateCachedTime() local_unnamed_addr #1 !dbg !2984 {
  %1 = alloca %struct.timeval, align 8
  %2 = alloca %struct.tm, align 8
  %3 = tail call i64 @time(i64* null) #9, !dbg !2988
  store atomic i64 %3, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251) monotonic, align 8, !dbg !2990
  %4 = bitcast %struct.timeval* %1 to i8*, !dbg !2997
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #4, !dbg !2997
  %5 = ptrtoint %struct.timeval* %1 to i64, !dbg !2998
  %6 = add i64 %5, 65536, !dbg !2999
  %7 = inttoptr i64 %6 to %struct.timeval*, !dbg !3000
  %8 = call i32 @gettimeofday(%struct.timeval* %7, i8* null) #9, !dbg !3002
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i64 0, i32 0, !dbg !3004
  %10 = load i64, i64* %9, align 8, !dbg !3004, !tbaa !1316
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i64 0, i32 1, !dbg !3005
  %12 = load i64, i64* %11, align 8, !dbg !3005, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #4, !dbg !3006
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3007
  %13 = mul nsw i64 %10, 1000000, !dbg !3008
  %14 = add nsw i64 %13, %12, !dbg !3010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3011
  %15 = sdiv i64 %14, 1000, !dbg !3012
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3013
  store i64 %15, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 254), align 8, !dbg !3014, !tbaa !3015
  %16 = bitcast %struct.tm* %2 to i8*, !dbg !3016
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #4, !dbg !3016
  %17 = call %struct.tm* @localtime_r(i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), %struct.tm* nonnull %2) #9, !dbg !3018
  %18 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 8, !dbg !3019
  %19 = load i32, i32* %18, align 8, !dbg !3019, !tbaa !3020
  store i32 %19, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 253), align 8, !dbg !3022, !tbaa !1792
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #4, !dbg !3023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3023
  ret void, !dbg !3023
}

; Function Attrs: noredzone
declare dso_local %struct.tm* @localtime_r(i64*, %struct.tm*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @serverCron(%struct.aeEventLoop* nocapture readnone, i64, i8* nocapture readnone) #1 !dbg !3024 {
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.tm, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.rdbSaveInfo, align 8
  %8 = alloca %struct.rdbSaveInfo, align 8
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 294), align 8, !dbg !3080, !tbaa !3082
  %10 = icmp eq i32 %9, 0, !dbg !3083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3084
  br i1 %10, label %12, label %11, !dbg !3084

; <label>:11:                                     ; preds = %3
  tail call void @watchdogScheduleSignal(i32 %9) #9, !dbg !3085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3085
  br label %12, !dbg !3085

; <label>:12:                                     ; preds = %3, %11
  %13 = tail call i64 @time(i64* null) #9, !dbg !3086
  store atomic i64 %13, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251) monotonic, align 8, !dbg !3089
  %14 = bitcast %struct.timeval* %4 to i8*, !dbg !3096
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #4, !dbg !3096
  %15 = ptrtoint %struct.timeval* %4 to i64, !dbg !3097
  %16 = add i64 %15, 65536, !dbg !3098
  %17 = inttoptr i64 %16 to %struct.timeval*, !dbg !3099
  %18 = call i32 @gettimeofday(%struct.timeval* %17, i8* null) #9, !dbg !3101
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i64 0, i32 0, !dbg !3103
  %20 = load i64, i64* %19, align 8, !dbg !3103, !tbaa !1316
  %21 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i64 0, i32 1, !dbg !3104
  %22 = load i64, i64* %21, align 8, !dbg !3104, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #4, !dbg !3105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3106
  %23 = mul nsw i64 %20, 1000000, !dbg !3107
  %24 = add nsw i64 %23, %22, !dbg !3109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3110
  %25 = sdiv i64 %24, 1000, !dbg !3111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3112
  store i64 %25, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 254), align 8, !dbg !3113, !tbaa !3015
  %26 = bitcast %struct.tm* %5 to i8*, !dbg !3114
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #4, !dbg !3114
  %27 = call %struct.tm* @localtime_r(i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), %struct.tm* nonnull %5) #9, !dbg !3116
  %28 = getelementptr inbounds %struct.tm, %struct.tm* %5, i64 0, i32 8, !dbg !3117
  %29 = load i32, i32* %28, align 8, !dbg !3117, !tbaa !3020
  store i32 %29, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 253), align 8, !dbg !3118, !tbaa !1792
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #4, !dbg !3119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3119
  %30 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 5), align 4, !dbg !3120, !tbaa !3121
  store i32 %30, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3122, !tbaa !2815
  %31 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !3123, !tbaa !3125
  %32 = icmp eq i32 %31, 0, !dbg !3126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3127
  br i1 %32, label %46, label %33, !dbg !3127

; <label>:33:                                     ; preds = %12
  %34 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !tbaa !2810
  %35 = getelementptr inbounds %struct.list, %struct.list* %34, i64 0, i32 5
  %36 = load i64, i64* %35, align 8, !tbaa !2811
  br label %37, !dbg !3128

; <label>:37:                                     ; preds = %33, %42
  %38 = phi i32 [ %43, %42 ], [ %30, %33 ], !dbg !3130
  %39 = sext i32 %38 to i64, !dbg !3131
  %40 = udiv i64 %36, %39, !dbg !3132
  %41 = icmp ugt i64 %40, 200, !dbg !3133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3134
  br i1 %41, label %42, label %46, !dbg !3134

; <label>:42:                                     ; preds = %37
  %43 = shl nsw i32 %38, 1, !dbg !3135
  store i32 %43, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3135, !tbaa !2815
  %44 = icmp sgt i32 %38, 250, !dbg !3137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3139
  br i1 %44, label %45, label %37, !dbg !3139, !llvm.loop !3140

; <label>:45:                                     ; preds = %42
  store i32 500, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3142, !tbaa !2815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3144
  br label %46, !dbg !3144

; <label>:46:                                     ; preds = %37, %12, %45
  %47 = phi i32 [ %30, %12 ], [ 500, %45 ], [ %38, %37 ], !dbg !3145
  %48 = sdiv i32 1000, %47, !dbg !3145
  %49 = icmp sgt i32 %48, 99, !dbg !3145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3145
  br i1 %49, label %55, label %50, !dbg !3145

; <label>:50:                                     ; preds = %46
  %51 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3145, !tbaa !3147
  %52 = sdiv i32 100, %48, !dbg !3145
  %53 = srem i32 %51, %52, !dbg !3145
  %54 = icmp eq i32 %53, 0, !dbg !3145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3148
  br i1 %54, label %55, label %59, !dbg !3148

; <label>:55:                                     ; preds = %50, %46
  %56 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !3149, !tbaa !3151
  call void @trackInstantaneousMetric(i32 0, i64 %56) #10, !dbg !3152
  %57 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 95), align 8, !dbg !3153, !tbaa !3154
  call void @trackInstantaneousMetric(i32 1, i64 %57) #10, !dbg !3155
  %58 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 96), align 8, !dbg !3156, !tbaa !3157
  call void @trackInstantaneousMetric(i32 2, i64 %58) #10, !dbg !3158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3159
  br label %59, !dbg !3159

; <label>:59:                                     ; preds = %50, %55
  %60 = call i32 @getLRUClock() #9, !dbg !3160
  store atomic i32 %60, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 11) monotonic, align 8, !dbg !3161
  %61 = call i64 @zmalloc_used_memory() #9, !dbg !3162
  %62 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !3164, !tbaa !3165
  %63 = icmp ugt i64 %61, %62, !dbg !3166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3167
  br i1 %63, label %64, label %66, !dbg !3167

; <label>:64:                                     ; preds = %59
  %65 = call i64 @zmalloc_used_memory() #9, !dbg !3168
  store i64 %65, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !3169, !tbaa !3165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3170
  br label %66, !dbg !3170

; <label>:66:                                     ; preds = %64, %59
  %67 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3171, !tbaa !2815
  %68 = sdiv i32 1000, %67, !dbg !3171
  %69 = icmp sgt i32 %68, 99, !dbg !3171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3171
  br i1 %69, label %75, label %70, !dbg !3171

; <label>:70:                                     ; preds = %66
  %71 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3171, !tbaa !3147
  %72 = sdiv i32 100, %68, !dbg !3171
  %73 = srem i32 %71, %72, !dbg !3171
  %74 = icmp eq i32 %73, 0, !dbg !3171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3172
  br i1 %74, label %75, label %98, !dbg !3172

; <label>:75:                                     ; preds = %70, %66
  %76 = call i64 @zmalloc_get_rss() #9, !dbg !3173
  store i64 %76, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 1), align 8, !dbg !3174, !tbaa !3175
  %77 = call i64 @zmalloc_used_memory() #9, !dbg !3176
  store i64 %77, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 0), align 8, !dbg !3177, !tbaa !3178
  %78 = call i32 @zmalloc_get_allocator_info(i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 2), i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 3), i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 4)) #9, !dbg !3179
  %79 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 4), align 8, !dbg !3180, !tbaa !3181
  %80 = icmp eq i64 %79, 0, !dbg !3182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3183
  br i1 %80, label %81, label %88, !dbg !3183

; <label>:81:                                     ; preds = %75
  %82 = load %struct.lua_State*, %struct.lua_State** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 270), align 8, !dbg !3184, !tbaa !3185
  %83 = call i32 @lua_gc(%struct.lua_State* %82, i32 3, i32 0) #9, !dbg !3186
  %84 = sext i32 %83 to i64, !dbg !3186
  %85 = shl nsw i64 %84, 10, !dbg !3187
  %86 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 1), align 8, !dbg !3189, !tbaa !3175
  %87 = sub i64 %86, %85, !dbg !3190
  store i64 %87, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 4), align 8, !dbg !3191, !tbaa !3181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3192
  br label %88, !dbg !3192

; <label>:88:                                     ; preds = %75, %81
  %89 = phi i64 [ %79, %75 ], [ %87, %81 ]
  %90 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 3), align 8, !dbg !3193, !tbaa !3195
  %91 = icmp eq i64 %90, 0, !dbg !3196
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3197
  br i1 %91, label %92, label %93, !dbg !3197

; <label>:92:                                     ; preds = %88
  store i64 %89, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 3), align 8, !dbg !3198, !tbaa !3195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3199
  br label %93, !dbg !3199

; <label>:93:                                     ; preds = %88, %92
  %94 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 2), align 8, !dbg !3200, !tbaa !3202
  %95 = icmp eq i64 %94, 0, !dbg !3203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3204
  br i1 %95, label %96, label %98, !dbg !3204

; <label>:96:                                     ; preds = %93
  %97 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 0), align 8, !dbg !3205, !tbaa !3178
  store i64 %97, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 2), align 8, !dbg !3206, !tbaa !3202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3207
  br label %98, !dbg !3207

; <label>:98:                                     ; preds = %93, %70, %96
  %99 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 4, !dbg !3208, !tbaa !3210
  %100 = icmp eq i32 %99, 0, !dbg !3211
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3212
  br i1 %100, label %106, label %101, !dbg !3212

; <label>:101:                                    ; preds = %98
  %102 = call i32 @prepareForShutdown(i32 0) #10, !dbg !3213
  %103 = icmp eq i32 %102, 0, !dbg !3216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3217
  br i1 %103, label %104, label %105, !dbg !3217

; <label>:104:                                    ; preds = %101
  call void @exit(i32 0) #12, !dbg !3218
  unreachable

; <label>:105:                                    ; preds = %101
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.248, i64 0, i64 0)) #10, !dbg !3219
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 4, !dbg !3220, !tbaa !3210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3221
  br label %106, !dbg !3221

; <label>:106:                                    ; preds = %98, %105
  %107 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3222, !tbaa !2815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3222
  %108 = sdiv i32 1000, %107, !dbg !3222
  %109 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3222, !tbaa !3147
  %110 = sdiv i32 5000, %108, !dbg !3222
  %111 = srem i32 %109, %110, !dbg !3222
  %112 = icmp eq i32 %111, 0, !dbg !3222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3223
  br i1 %112, label %113, label %149, !dbg !3223

; <label>:113:                                    ; preds = %106
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3225
  %114 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !3226, !tbaa !2929
  %115 = icmp sgt i32 %114, 0, !dbg !3227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3228
  br i1 %115, label %116, label %149, !dbg !3228

; <label>:116:                                    ; preds = %113, %144
  %117 = phi i32 [ %145, %144 ], [ %114, %113 ]
  %118 = phi i64 [ %146, %144 ], [ 0, %113 ]
  %119 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !3229, !tbaa !2369
  %120 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %119, i64 %118, i32 0, !dbg !3229
  %121 = load %struct.dict*, %struct.dict** %120, align 8, !dbg !3229, !tbaa !2372
  %122 = getelementptr inbounds %struct.dict, %struct.dict* %121, i64 0, i32 2, i64 0, i32 1, !dbg !3229
  %123 = load i64, i64* %122, align 8, !dbg !3229, !tbaa !2353
  %124 = getelementptr inbounds %struct.dict, %struct.dict* %121, i64 0, i32 2, i64 1, i32 1, !dbg !3229
  %125 = load i64, i64* %124, align 8, !dbg !3229, !tbaa !2353
  %126 = getelementptr inbounds %struct.dict, %struct.dict* %121, i64 0, i32 2, i64 0, i32 3, !dbg !3230
  %127 = load i64, i64* %126, align 8, !dbg !3230, !tbaa !1370
  %128 = getelementptr inbounds %struct.dict, %struct.dict* %121, i64 0, i32 2, i64 1, i32 3, !dbg !3230
  %129 = load i64, i64* %128, align 8, !dbg !3230, !tbaa !1370
  %130 = add i64 %129, %127, !dbg !3230
  %131 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %119, i64 %118, i32 1, !dbg !3232
  %132 = load %struct.dict*, %struct.dict** %131, align 8, !dbg !3232, !tbaa !2391
  %133 = getelementptr inbounds %struct.dict, %struct.dict* %132, i64 0, i32 2, i64 0, i32 3, !dbg !3232
  %134 = load i64, i64* %133, align 8, !dbg !3232, !tbaa !1370
  %135 = getelementptr inbounds %struct.dict, %struct.dict* %132, i64 0, i32 2, i64 1, i32 3, !dbg !3232
  %136 = load i64, i64* %135, align 8, !dbg !3232, !tbaa !1370
  %137 = add i64 %136, %134, !dbg !3232
  %138 = or i64 %137, %130, !dbg !3234
  %139 = icmp eq i64 %138, 0, !dbg !3234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3234
  br i1 %139, label %144, label %140, !dbg !3234

; <label>:140:                                    ; preds = %116
  %141 = add i64 %125, %123, !dbg !3229
  %142 = trunc i64 %118 to i32, !dbg !3237
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.249, i64 0, i64 0), i32 %142, i64 %130, i64 %137, i64 %141) #10, !dbg !3237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3239
  %143 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !3226, !tbaa !2929
  br label %144, !dbg !3239

; <label>:144:                                    ; preds = %116, %140
  %145 = phi i32 [ %117, %116 ], [ %143, %140 ], !dbg !3226
  %146 = add nuw nsw i64 %118, 1, !dbg !3240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3241
  %147 = sext i32 %145 to i64, !dbg !3227
  %148 = icmp slt i64 %146, %147, !dbg !3227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3228
  br i1 %148, label %116, label %149, !dbg !3228, !llvm.loop !3242

; <label>:149:                                    ; preds = %144, %113, %106
  %150 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !3244, !tbaa !1803
  %151 = icmp eq i32 %150, 0, !dbg !3246
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3247
  br i1 %151, label %152, label %168, !dbg !3247

; <label>:152:                                    ; preds = %149
  %153 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3248, !tbaa !2815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3248
  %154 = sdiv i32 1000, %153, !dbg !3248
  %155 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3248, !tbaa !3147
  %156 = sdiv i32 5000, %154, !dbg !3248
  %157 = srem i32 %155, %156, !dbg !3248
  %158 = icmp eq i32 %157, 0, !dbg !3248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3251
  br i1 %158, label %159, label %168, !dbg !3251

; <label>:159:                                    ; preds = %152
  %160 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !3252, !tbaa !2810
  %161 = getelementptr inbounds %struct.list, %struct.list* %160, i64 0, i32 5, !dbg !3252
  %162 = load i64, i64* %161, align 8, !dbg !3252, !tbaa !2811
  %163 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !3254, !tbaa !3255
  %164 = getelementptr inbounds %struct.list, %struct.list* %163, i64 0, i32 5, !dbg !3254
  %165 = load i64, i64* %164, align 8, !dbg !3254, !tbaa !2811
  %166 = sub i64 %162, %165, !dbg !3256
  %167 = call i64 @zmalloc_used_memory() #9, !dbg !3257
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.250, i64 0, i64 0), i64 %166, i64 %165, i64 %167) #10, !dbg !3258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3259
  br label %168, !dbg !3259

; <label>:168:                                    ; preds = %152, %149, %159
  call void @clientsCron() #10, !dbg !3260
  call void @databasesCron() #10, !dbg !3261
  %169 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3262, !tbaa !2434
  %170 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3264
  %171 = and i32 %170, %169, !dbg !3265
  %172 = icmp eq i32 %171, -1, !dbg !3265
  %173 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 126), align 8, !dbg !3266
  %174 = icmp ne i32 %173, 0, !dbg !3267
  %175 = and i1 %172, %174, !dbg !3265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3265
  br i1 %175, label %176, label %180, !dbg !3265

; <label>:176:                                    ; preds = %168
  %177 = call i32 @rewriteAppendOnlyFileBackground() #9, !dbg !3268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3270
  %178 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3271, !tbaa !2434
  %179 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3272
  br label %180, !dbg !3270

; <label>:180:                                    ; preds = %176, %168
  %181 = phi i32 [ %179, %176 ], [ %170, %168 ], !dbg !3272
  %182 = phi i32 [ %178, %176 ], [ %169, %168 ], !dbg !3271
  %183 = and i32 %181, %182, !dbg !3273
  %184 = icmp eq i32 %183, -1, !dbg !3273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3273
  br i1 %184, label %185, label %188, !dbg !3273

; <label>:185:                                    ; preds = %180
  %186 = call i32 @ldbPendingChildren() #9, !dbg !3274
  %187 = icmp eq i32 %186, 0, !dbg !3274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3275
  br i1 %187, label %238, label %188, !dbg !3275

; <label>:188:                                    ; preds = %185, %180
  %189 = bitcast i32* %6 to i8*, !dbg !3276
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #4, !dbg !3276
  %190 = call i32 @wait3(i32* nonnull %6, i32 1, %struct.rusage* null) #9, !dbg !3278
  %191 = icmp eq i32 %190, 0, !dbg !3280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3281
  br i1 %191, label %237, label %192, !dbg !3281

; <label>:192:                                    ; preds = %188
  %193 = load i32, i32* %6, align 4, !dbg !3282, !tbaa !1482
  %194 = lshr i32 %193, 8, !dbg !3282
  %195 = and i32 %194, 255, !dbg !3282
  %196 = and i32 %193, 127, !dbg !3285
  %197 = icmp eq i32 %196, 0, !dbg !3285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3285
  br i1 %197, label %201, label %198, !dbg !3285

; <label>:198:                                    ; preds = %192
  %199 = icmp eq i32 %196, 127, !dbg !3285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3287
  br i1 %199, label %201, label %200, !dbg !3287

; <label>:200:                                    ; preds = %198
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3288
  br label %201, !dbg !3288

; <label>:201:                                    ; preds = %198, %192, %200
  %202 = phi i32 [ %196, %200 ], [ 0, %198 ], [ 0, %192 ], !dbg !3289
  %203 = icmp eq i32 %190, -1, !dbg !3290
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3292
  br i1 %203, label %204, label %210, !dbg !3292

; <label>:204:                                    ; preds = %201
  %205 = call i32* @__errno() #9, !dbg !3293
  %206 = load i32, i32* %205, align 4, !dbg !3293, !tbaa !1482
  %207 = call i8* @strerror(i32 %206) #9, !dbg !3295
  %208 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3296, !tbaa !2434
  %209 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3297, !tbaa !3298
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.251, i64 0, i64 0), i8* %207, i32 %208, i32 %209) #10, !dbg !3299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3300
  br label %229, !dbg !3300

; <label>:210:                                    ; preds = %201
  %211 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3301, !tbaa !2434
  %212 = icmp eq i32 %190, %211, !dbg !3303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3304
  br i1 %212, label %213, label %217, !dbg !3304

; <label>:213:                                    ; preds = %210
  call void @backgroundSaveDoneHandler(i32 %195, i32 %202) #9, !dbg !3305
  %214 = or i32 %202, %195, !dbg !3307
  %215 = icmp eq i32 %214, 0, !dbg !3307
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3307
  br i1 %215, label %216, label %229, !dbg !3307

; <label>:216:                                    ; preds = %213
  call void @receiveChildInfo() #9, !dbg !3309
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3309
  br label %229, !dbg !3309

; <label>:217:                                    ; preds = %210
  %218 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3310, !tbaa !3298
  %219 = icmp eq i32 %190, %218, !dbg !3312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3313
  br i1 %219, label %220, label %224, !dbg !3313

; <label>:220:                                    ; preds = %217
  call void @backgroundRewriteDoneHandler(i32 %195, i32 %202) #9, !dbg !3314
  %221 = or i32 %202, %195, !dbg !3316
  %222 = icmp eq i32 %221, 0, !dbg !3316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3316
  br i1 %222, label %223, label %229, !dbg !3316

; <label>:223:                                    ; preds = %220
  call void @receiveChildInfo() #9, !dbg !3318
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3318
  br label %229, !dbg !3318

; <label>:224:                                    ; preds = %217
  %225 = call i32 @ldbRemoveChild(i32 %190) #9, !dbg !3319
  %226 = icmp eq i32 %225, 0, !dbg !3319
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3322
  br i1 %226, label %227, label %229, !dbg !3322

; <label>:227:                                    ; preds = %224
  %228 = sext i32 %190 to i64, !dbg !3323
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.252, i64 0, i64 0), i64 %228) #10, !dbg !3325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3326
  br label %229, !dbg !3326

; <label>:229:                                    ; preds = %224, %213, %216, %227, %223, %220, %204
  %230 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3327, !tbaa !2434
  %231 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3329
  %232 = and i32 %231, %230, !dbg !3330
  %233 = icmp eq i32 %232, -1, !dbg !3330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3330
  br i1 %233, label %234, label %235, !dbg !3330

; <label>:234:                                    ; preds = %229
  call void @dictEnableResize() #9, !dbg !3331
  br label %236, !dbg !3331

; <label>:235:                                    ; preds = %229
  call void @dictDisableResize() #9, !dbg !3332
  br label %236

; <label>:236:                                    ; preds = %234, %235
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3333
  call void @closeChildInfoPipe() #9, !dbg !3334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3335
  br label %237, !dbg !3335

; <label>:237:                                    ; preds = %188, %236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #4, !dbg !3336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3337
  br label %301, !dbg !3337

; <label>:238:                                    ; preds = %185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3338
  %239 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 156), align 8, !dbg !3339, !tbaa !3340
  %240 = icmp sgt i32 %239, 0, !dbg !3341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3342
  br i1 %240, label %241, label %274, !dbg !3342

; <label>:241:                                    ; preds = %238
  %242 = load %struct.saveparam*, %struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 155), align 8, !tbaa !3343
  %243 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8
  %244 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8
  %245 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8
  %246 = sub nsw i64 %244, %245
  %247 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 161), align 8
  %248 = sub nsw i64 %244, %247
  %249 = icmp sgt i64 %248, 5
  %250 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8
  %251 = icmp eq i32 %250, 0
  %252 = or i1 %249, %251
  %253 = sext i32 %239 to i64, !dbg !3342
  br label %254, !dbg !3342

; <label>:254:                                    ; preds = %241, %271
  %255 = phi i64 [ 0, %241 ], [ %272, %271 ]
  %256 = getelementptr inbounds %struct.saveparam, %struct.saveparam* %242, i64 %255, i32 1, !dbg !3344
  %257 = load i32, i32* %256, align 8, !dbg !3344, !tbaa !3345
  %258 = sext i32 %257 to i64, !dbg !3347
  %259 = icmp slt i64 %243, %258, !dbg !3348
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3349
  br i1 %259, label %271, label %260, !dbg !3349

; <label>:260:                                    ; preds = %254
  %261 = getelementptr inbounds %struct.saveparam, %struct.saveparam* %242, i64 %255, i32 0, !dbg !3350
  %262 = load i64, i64* %261, align 8, !dbg !3350, !tbaa !3351
  %263 = icmp sgt i64 %246, %262, !dbg !3352
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3353
  br i1 %263, label %264, label %271, !dbg !3353

; <label>:264:                                    ; preds = %260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3354
  br i1 %252, label %265, label %271, !dbg !3354

; <label>:265:                                    ; preds = %264
  %266 = trunc i64 %262 to i32, !dbg !3355
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.253, i64 0, i64 0), i32 %257, i32 %266) #10, !dbg !3356
  %267 = bitcast %struct.rdbSaveInfo* %7 to i8*, !dbg !3357
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %267) #4, !dbg !3357
  %268 = call %struct.rdbSaveInfo* @rdbPopulateSaveInfo(%struct.rdbSaveInfo* nonnull %7) #9, !dbg !3359
  %269 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !3361, !tbaa !3362
  %270 = call i32 @rdbSaveBackground(i8* %269, %struct.rdbSaveInfo* %268) #9, !dbg !3363
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %267) #4, !dbg !3364
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %274

; <label>:271:                                    ; preds = %254, %264, %260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3365
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %272 = add nuw nsw i64 %255, 1, !dbg !3366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3367
  %273 = icmp slt i64 %272, %253, !dbg !3341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3342
  br i1 %273, label %254, label %274, !dbg !3342, !llvm.loop !3368

; <label>:274:                                    ; preds = %271, %238, %265
  %275 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !3370, !tbaa !3371
  %276 = icmp eq i32 %275, 1, !dbg !3372
  %277 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3373
  %278 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3374
  %279 = and i32 %278, %277, !dbg !3375
  %280 = icmp eq i32 %279, -1, !dbg !3375
  %281 = and i1 %276, %280, !dbg !3375
  %282 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 121), align 4, !dbg !3376
  %283 = icmp ne i32 %282, 0, !dbg !3377
  %284 = and i1 %283, %281, !dbg !3375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3375
  br i1 %284, label %285, label %301, !dbg !3375

; <label>:285:                                    ; preds = %274
  %286 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 124), align 8, !dbg !3378, !tbaa !3379
  %287 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 122), align 8, !dbg !3380, !tbaa !3381
  %288 = icmp sgt i64 %286, %287, !dbg !3382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3383
  br i1 %288, label %289, label %301, !dbg !3383

; <label>:289:                                    ; preds = %285
  %290 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 123), align 8, !dbg !3384, !tbaa !3385
  %291 = icmp eq i64 %290, 0, !dbg !3386
  %292 = select i1 %291, i64 1, i64 %290, !dbg !3386
  %293 = mul nsw i64 %286, 100, !dbg !3388
  %294 = sdiv i64 %293, %292, !dbg !3389
  %295 = add nsw i64 %294, -100, !dbg !3390
  %296 = sext i32 %282 to i64, !dbg !3392
  %297 = icmp slt i64 %295, %296, !dbg !3394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3395
  br i1 %297, label %300, label %298, !dbg !3395

; <label>:298:                                    ; preds = %289
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.254, i64 0, i64 0), i64 %295) #10, !dbg !3396
  %299 = call i32 @rewriteAppendOnlyFileBackground() #9, !dbg !3398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3399
  br label %300, !dbg !3399

; <label>:300:                                    ; preds = %289, %298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3400
  br label %301, !dbg !3400

; <label>:301:                                    ; preds = %274, %285, %300, %237
  %302 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 132), align 8, !dbg !3401, !tbaa !3403
  %303 = icmp eq i64 %302, 0, !dbg !3404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3405
  br i1 %303, label %305, label %304, !dbg !3405

; <label>:304:                                    ; preds = %301
  call void @flushAppendOnlyFile(i32 0) #9, !dbg !3406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3406
  br label %305, !dbg !3406

; <label>:305:                                    ; preds = %301, %304
  %306 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3407, !tbaa !2815
  %307 = sdiv i32 1000, %306, !dbg !3407
  %308 = icmp sgt i32 %307, 999, !dbg !3407
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3407
  br i1 %308, label %317, label %309, !dbg !3407

; <label>:309:                                    ; preds = %305
  %310 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3407, !tbaa !3147
  %311 = sdiv i32 1000, %307, !dbg !3407
  %312 = srem i32 %310, %311, !dbg !3407
  %313 = icmp eq i32 %312, 0, !dbg !3407
  %314 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 140), align 8, !dbg !3409
  %315 = icmp eq i32 %314, -1, !dbg !3412
  %316 = and i1 %313, %315, !dbg !3413
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3413
  br i1 %316, label %320, label %321, !dbg !3413

; <label>:317:                                    ; preds = %305
  %318 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 140), align 8, !dbg !3409, !tbaa !3414
  %319 = icmp eq i32 %318, -1, !dbg !3412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3415
  br i1 %319, label %320, label %321, !dbg !3415

; <label>:320:                                    ; preds = %309, %317
  call void @flushAppendOnlyFile(i32 0) #9, !dbg !3416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3416
  br label %321, !dbg !3416

; <label>:321:                                    ; preds = %309, %317, %320
  call void @freeClientsInAsyncFreeQueue() #9, !dbg !3417
  %322 = call i32 @clientsArePaused() #9, !dbg !3418
  %323 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3419, !tbaa !2815
  %324 = sdiv i32 1000, %323, !dbg !3419
  %325 = icmp sgt i32 %324, 999, !dbg !3419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3419
  br i1 %325, label %331, label %326, !dbg !3419

; <label>:326:                                    ; preds = %321
  %327 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3419, !tbaa !3147
  %328 = sdiv i32 1000, %324, !dbg !3419
  %329 = srem i32 %327, %328, !dbg !3419
  %330 = icmp eq i32 %329, 0, !dbg !3419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3421
  br i1 %330, label %331, label %334, !dbg !3421

; <label>:331:                                    ; preds = %326, %321
  call void @replicationCron() #9, !dbg !3422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3422
  %332 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3423, !tbaa !2815
  %333 = sdiv i32 1000, %332, !dbg !3423
  br label %334, !dbg !3422

; <label>:334:                                    ; preds = %326, %331
  %335 = phi i32 [ %324, %326 ], [ %333, %331 ], !dbg !3423
  %336 = icmp sgt i32 %335, 99, !dbg !3423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3423
  br i1 %336, label %345, label %337, !dbg !3423

; <label>:337:                                    ; preds = %334
  %338 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3423, !tbaa !3147
  %339 = sdiv i32 100, %335, !dbg !3423
  %340 = srem i32 %338, %339, !dbg !3423
  %341 = icmp eq i32 %340, 0, !dbg !3423
  %342 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !3425
  %343 = icmp ne i32 %342, 0, !dbg !3428
  %344 = and i1 %341, %343, !dbg !3429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3429
  br i1 %344, label %348, label %349, !dbg !3429

; <label>:345:                                    ; preds = %334
  %346 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !3425, !tbaa !2593
  %347 = icmp eq i32 %346, 0, !dbg !3428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3430
  br i1 %347, label %349, label %348, !dbg !3430

; <label>:348:                                    ; preds = %345, %337
  call void @clusterCron() #9, !dbg !3431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3431
  br label %349, !dbg !3431

; <label>:349:                                    ; preds = %345, %337, %348
  %350 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !3432, !tbaa !1803
  %351 = icmp eq i32 %350, 0, !dbg !3434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3435
  br i1 %351, label %353, label %352, !dbg !3435

; <label>:352:                                    ; preds = %349
  call void @sentinelTimer() #9, !dbg !3436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3436
  br label %353, !dbg !3436

; <label>:353:                                    ; preds = %349, %352
  %354 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3437, !tbaa !2815
  %355 = sdiv i32 1000, %354, !dbg !3437
  %356 = icmp sgt i32 %355, 999, !dbg !3437
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3437
  br i1 %356, label %362, label %357, !dbg !3437

; <label>:357:                                    ; preds = %353
  %358 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3437, !tbaa !3147
  %359 = sdiv i32 1000, %355, !dbg !3437
  %360 = srem i32 %358, %359, !dbg !3437
  %361 = icmp eq i32 %360, 0, !dbg !3437
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3439
  br i1 %361, label %362, label %363, !dbg !3439

; <label>:362:                                    ; preds = %357, %353
  call void @migrateCloseTimedoutSockets() #9, !dbg !3440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3442
  br label %363, !dbg !3442

; <label>:363:                                    ; preds = %357, %362
  %364 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !3443, !tbaa !2434
  %365 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !3444
  %366 = and i32 %365, %364, !dbg !3445
  %367 = icmp eq i32 %366, -1, !dbg !3445
  %368 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 164), align 8, !dbg !3446
  %369 = icmp ne i32 %368, 0, !dbg !3447
  %370 = and i1 %367, %369, !dbg !3445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3445
  br i1 %370, label %371, label %387, !dbg !3445

; <label>:371:                                    ; preds = %363
  %372 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !3448, !tbaa !2619
  %373 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 161), align 8, !dbg !3449, !tbaa !3450
  %374 = sub nsw i64 %372, %373, !dbg !3451
  %375 = icmp sgt i64 %374, 5, !dbg !3452
  %376 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !3453
  %377 = icmp eq i32 %376, 0, !dbg !3454
  %378 = or i1 %375, %377, !dbg !3455
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3455
  br i1 %378, label %379, label %387, !dbg !3455

; <label>:379:                                    ; preds = %371
  %380 = bitcast %struct.rdbSaveInfo* %8 to i8*, !dbg !3456
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %380) #4, !dbg !3456
  %381 = call %struct.rdbSaveInfo* @rdbPopulateSaveInfo(%struct.rdbSaveInfo* nonnull %8) #9, !dbg !3458
  %382 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !3460, !tbaa !3362
  %383 = call i32 @rdbSaveBackground(i8* %382, %struct.rdbSaveInfo* %381) #9, !dbg !3462
  %384 = icmp eq i32 %383, 0, !dbg !3463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3464
  br i1 %384, label %385, label %386, !dbg !3464

; <label>:385:                                    ; preds = %379
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 164), align 8, !dbg !3465, !tbaa !3466
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3467
  br label %386, !dbg !3467

; <label>:386:                                    ; preds = %385, %379
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %380) #4, !dbg !3468
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3469
  br label %387, !dbg !3469

; <label>:387:                                    ; preds = %371, %386, %363
  %388 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3470, !tbaa !3147
  %389 = add nsw i32 %388, 1, !dbg !3470
  store i32 %389, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !3470, !tbaa !3147
  %390 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3471, !tbaa !2815
  %391 = sdiv i32 1000, %390, !dbg !3472
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3473
  ret i32 %391, !dbg !3473
}

; Function Attrs: noredzone
declare dso_local void @watchdogScheduleSignal(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @getLRUClock() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_used_memory() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_get_rss() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @zmalloc_get_allocator_info(i64*, i64*, i64*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @lua_gc(%struct.lua_State*, i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #6

; Function Attrs: noredzone
declare dso_local i32 @rewriteAppendOnlyFileBackground() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @ldbPendingChildren() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @wait3(i32*, i32, %struct.rusage*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @backgroundSaveDoneHandler(i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @receiveChildInfo() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @backgroundRewriteDoneHandler(i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @ldbRemoveChild(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @closeChildInfoPipe() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.rdbSaveInfo* @rdbPopulateSaveInfo(%struct.rdbSaveInfo*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveBackground(i8*, %struct.rdbSaveInfo*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @flushAppendOnlyFile(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @freeClientsInAsyncFreeQueue() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @clientsArePaused() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @replicationCron() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @clusterCron() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @sentinelTimer() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @migrateCloseTimedoutSockets() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @beforeSleep(%struct.aeEventLoop* nocapture readnone) #1 !dbg !3474 {
  %2 = alloca [3 x %struct.redisObject*], align 16
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !3482, !tbaa !2593
  %4 = icmp eq i32 %3, 0, !dbg !3484
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3485
  br i1 %4, label %6, label %5, !dbg !3485

; <label>:5:                                      ; preds = %1
  tail call void @clusterBeforeSleep() #9, !dbg !3486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3486
  br label %6, !dbg !3486

; <label>:6:                                      ; preds = %1, %5
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 103), align 4, !dbg !3487, !tbaa !2904
  %8 = icmp ne i32 %7, 0, !dbg !3489
  %9 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !3490
  %10 = icmp eq i8* %9, null, !dbg !3491
  %11 = and i1 %8, %10, !dbg !3492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3492
  br i1 %11, label %12, label %13, !dbg !3492

; <label>:12:                                     ; preds = %6
  tail call void @activeExpireCycle(i32 1) #9, !dbg !3493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3493
  br label %13, !dbg !3493

; <label>:13:                                     ; preds = %12, %6
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 225), align 8, !dbg !3494, !tbaa !3495
  %15 = icmp eq i32 %14, 0, !dbg !3496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3497
  br i1 %15, label %29, label %16, !dbg !3497

; <label>:16:                                     ; preds = %13
  %17 = bitcast [3 x %struct.redisObject*]* %2 to i8*, !dbg !3498
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #4, !dbg !3498
  %18 = tail call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.255, i64 0, i64 0), i64 8) #9, !dbg !3500
  %19 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %2, i64 0, i64 0, !dbg !3501
  store %struct.redisObject* %18, %struct.redisObject** %19, align 16, !dbg !3502, !tbaa !1178
  %20 = tail call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.256, i64 0, i64 0), i64 6) #9, !dbg !3503
  %21 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %2, i64 0, i64 1, !dbg !3504
  store %struct.redisObject* %20, %struct.redisObject** %21, align 8, !dbg !3505, !tbaa !1178
  %22 = tail call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i64 0, i64 0), i64 1) #9, !dbg !3506
  %23 = getelementptr inbounds [3 x %struct.redisObject*], [3 x %struct.redisObject*]* %2, i64 0, i64 2, !dbg !3507
  store %struct.redisObject* %22, %struct.redisObject** %23, align 16, !dbg !3508, !tbaa !1178
  %24 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !3509, !tbaa !3255
  %25 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !3510, !tbaa !3511
  call void @replicationFeedSlaves(%struct.list* %24, i32 %25, %struct.redisObject** nonnull %19, i32 3) #9, !dbg !3512
  %26 = load %struct.redisObject*, %struct.redisObject** %19, align 16, !dbg !3513, !tbaa !1178
  call void @decrRefCount(%struct.redisObject* %26) #9, !dbg !3514
  %27 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !3515, !tbaa !1178
  call void @decrRefCount(%struct.redisObject* %27) #9, !dbg !3516
  %28 = load %struct.redisObject*, %struct.redisObject** %23, align 16, !dbg !3517, !tbaa !1178
  call void @decrRefCount(%struct.redisObject* %28) #9, !dbg !3518
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 225), align 8, !dbg !3519, !tbaa !3495
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #4, !dbg !3520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3521
  br label %29, !dbg !3521

; <label>:29:                                     ; preds = %13, %16
  %30 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 224), align 8, !dbg !3522, !tbaa !3524
  %31 = getelementptr inbounds %struct.list, %struct.list* %30, i64 0, i32 5, !dbg !3522
  %32 = load i64, i64* %31, align 8, !dbg !3522, !tbaa !2811
  %33 = icmp eq i64 %32, 0, !dbg !3522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3525
  br i1 %33, label %35, label %34, !dbg !3525

; <label>:34:                                     ; preds = %29
  call void @processClientsWaitingReplicas() #9, !dbg !3526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3526
  br label %35, !dbg !3526

; <label>:35:                                     ; preds = %29, %34
  call void @moduleHandleBlockedClients() #9, !dbg !3527
  %36 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 235), align 8, !dbg !3528, !tbaa !3530
  %37 = getelementptr inbounds %struct.list, %struct.list* %36, i64 0, i32 5, !dbg !3528
  %38 = load i64, i64* %37, align 8, !dbg !3528, !tbaa !2811
  %39 = icmp eq i64 %38, 0, !dbg !3528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3531
  br i1 %39, label %41, label %40, !dbg !3531

; <label>:40:                                     ; preds = %35
  call void @processUnblockedClients() #9, !dbg !3532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3532
  br label %41, !dbg !3532

; <label>:41:                                     ; preds = %35, %40
  call void @flushAppendOnlyFile(i32 0) #9, !dbg !3533
  %42 = call i32 @handleClientsWithPendingWrites() #9, !dbg !3534
  %43 = call i64 @moduleCount() #9, !dbg !3535
  %44 = icmp eq i64 %43, 0, !dbg !3535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3537
  br i1 %44, label %46, label %45, !dbg !3537

; <label>:45:                                     ; preds = %41
  call void @moduleReleaseGIL() #9, !dbg !3538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3538
  br label %46, !dbg !3538

; <label>:46:                                     ; preds = %41, %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3539
  ret void, !dbg !3539
}

; Function Attrs: noredzone
declare dso_local void @clusterBeforeSleep() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @replicationFeedSlaves(%struct.list*, i32, %struct.redisObject**, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @processClientsWaitingReplicas() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @moduleHandleBlockedClients() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @processUnblockedClients() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @handleClientsWithPendingWrites() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @moduleCount() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @moduleReleaseGIL() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @afterSleep(%struct.aeEventLoop* nocapture readnone) #1 !dbg !3540 {
  %2 = tail call i64 @moduleCount() #9, !dbg !3544
  %3 = icmp eq i64 %2, 0, !dbg !3544
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3546
  br i1 %3, label %5, label %4, !dbg !3546

; <label>:4:                                      ; preds = %1
  tail call void @moduleAcquireGIL() #9, !dbg !3547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3547
  br label %5, !dbg !3547

; <label>:5:                                      ; preds = %1, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3548
  ret void, !dbg !3548
}

; Function Attrs: noredzone
declare dso_local void @moduleAcquireGIL() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @createSharedObjects() local_unnamed_addr #1 !dbg !3549 {
  %1 = alloca [64 x i8], align 16
  %2 = tail call i8* @sdsnew(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !3557
  %3 = tail call %struct.redisObject* @createObject(i32 0, i8* %2) #9, !dbg !3558
  store %struct.redisObject* %3, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !3559, !tbaa !3560
  %4 = tail call i8* @sdsnew(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.259, i64 0, i64 0)) #9, !dbg !3561
  %5 = tail call %struct.redisObject* @createObject(i32 0, i8* %4) #9, !dbg !3562
  store %struct.redisObject* %5, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !3563, !tbaa !1189
  %6 = tail call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.260, i64 0, i64 0)) #9, !dbg !3564
  %7 = tail call %struct.redisObject* @createObject(i32 0, i8* %6) #9, !dbg !3565
  store %struct.redisObject* %7, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !3566, !tbaa !3567
  %8 = tail call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.261, i64 0, i64 0)) #9, !dbg !3568
  %9 = tail call %struct.redisObject* @createObject(i32 0, i8* %8) #9, !dbg !3569
  store %struct.redisObject* %9, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 3), align 8, !dbg !3570, !tbaa !3571
  %10 = tail call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.262, i64 0, i64 0)) #9, !dbg !3572
  %11 = tail call %struct.redisObject* @createObject(i32 0, i8* %10) #9, !dbg !3573
  store %struct.redisObject* %11, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 4), align 8, !dbg !3574, !tbaa !3575
  %12 = tail call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.263, i64 0, i64 0)) #9, !dbg !3576
  %13 = tail call %struct.redisObject* @createObject(i32 0, i8* %12) #9, !dbg !3577
  store %struct.redisObject* %13, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 5), align 8, !dbg !3578, !tbaa !3579
  %14 = tail call i8* @sdsnew(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.264, i64 0, i64 0)) #9, !dbg !3580
  %15 = tail call %struct.redisObject* @createObject(i32 0, i8* %14) #9, !dbg !3581
  store %struct.redisObject* %15, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 6), align 8, !dbg !3582, !tbaa !3583
  %16 = tail call i8* @sdsnew(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.265, i64 0, i64 0)) #9, !dbg !3584
  %17 = tail call %struct.redisObject* @createObject(i32 0, i8* %16) #9, !dbg !3585
  store %struct.redisObject* %17, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !3586, !tbaa !3587
  %18 = tail call i8* @sdsnew(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.266, i64 0, i64 0)) #9, !dbg !3588
  %19 = tail call %struct.redisObject* @createObject(i32 0, i8* %18) #9, !dbg !3589
  store %struct.redisObject* %19, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 11), align 8, !dbg !3590, !tbaa !3591
  %20 = tail call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.267, i64 0, i64 0)) #9, !dbg !3592
  %21 = tail call %struct.redisObject* @createObject(i32 0, i8* %20) #9, !dbg !3593
  store %struct.redisObject* %21, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 13), align 8, !dbg !3594, !tbaa !3595
  %22 = tail call i8* @sdsnew(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.268, i64 0, i64 0)) #9, !dbg !3596
  %23 = tail call %struct.redisObject* @createObject(i32 0, i8* %22) #9, !dbg !3597
  store %struct.redisObject* %23, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 7), align 8, !dbg !3598, !tbaa !1236
  %24 = tail call i8* @sdsnew(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.269, i64 0, i64 0)) #9, !dbg !3599
  %25 = tail call %struct.redisObject* @createObject(i32 0, i8* %24) #9, !dbg !3600
  store %struct.redisObject* %25, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !3601, !tbaa !3602
  %26 = tail call i8* @sdsnew(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.270, i64 0, i64 0)) #9, !dbg !3603
  %27 = tail call %struct.redisObject* @createObject(i32 0, i8* %26) #9, !dbg !3604
  store %struct.redisObject* %27, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 45), align 8, !dbg !3605, !tbaa !3606
  %28 = tail call i8* @sdsnew(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.271, i64 0, i64 0)) #9, !dbg !3607
  %29 = tail call %struct.redisObject* @createObject(i32 0, i8* %28) #9, !dbg !3608
  store %struct.redisObject* %29, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 14), align 8, !dbg !3609, !tbaa !3610
  %30 = tail call i8* @sdsnew(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.272, i64 0, i64 0)) #9, !dbg !3611
  %31 = tail call %struct.redisObject* @createObject(i32 0, i8* %30) #9, !dbg !3612
  store %struct.redisObject* %31, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 15), align 8, !dbg !3613, !tbaa !3614
  %32 = tail call i8* @sdsnew(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.273, i64 0, i64 0)) #9, !dbg !3615
  %33 = tail call %struct.redisObject* @createObject(i32 0, i8* %32) #9, !dbg !3616
  store %struct.redisObject* %33, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !3617, !tbaa !1267
  %34 = tail call i8* @sdsnew(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.274, i64 0, i64 0)) #9, !dbg !3618
  %35 = tail call %struct.redisObject* @createObject(i32 0, i8* %34) #9, !dbg !3619
  store %struct.redisObject* %35, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 17), align 8, !dbg !3620, !tbaa !3621
  %36 = tail call i8* @sdsnew(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.275, i64 0, i64 0)) #9, !dbg !3622
  %37 = tail call %struct.redisObject* @createObject(i32 0, i8* %36) #9, !dbg !3623
  store %struct.redisObject* %37, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 18), align 8, !dbg !3624, !tbaa !3625
  %38 = tail call i8* @sdsnew(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.276, i64 0, i64 0)) #9, !dbg !3626
  %39 = tail call %struct.redisObject* @createObject(i32 0, i8* %38) #9, !dbg !3627
  store %struct.redisObject* %39, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 19), align 8, !dbg !3628, !tbaa !3629
  %40 = tail call i8* @sdsnew(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.277, i64 0, i64 0)) #9, !dbg !3630
  %41 = tail call %struct.redisObject* @createObject(i32 0, i8* %40) #9, !dbg !3631
  store %struct.redisObject* %41, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 20), align 8, !dbg !3632, !tbaa !3633
  %42 = tail call i8* @sdsnew(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.278, i64 0, i64 0)) #9, !dbg !3634
  %43 = tail call %struct.redisObject* @createObject(i32 0, i8* %42) #9, !dbg !3635
  store %struct.redisObject* %43, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 21), align 8, !dbg !3636, !tbaa !3637
  %44 = tail call i8* @sdsnew(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.279, i64 0, i64 0)) #9, !dbg !3638
  %45 = tail call %struct.redisObject* @createObject(i32 0, i8* %44) #9, !dbg !3639
  store %struct.redisObject* %45, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 23), align 8, !dbg !3640, !tbaa !3641
  %46 = tail call i8* @sdsnew(i8* getelementptr inbounds ([347 x i8], [347 x i8]* @.str.280, i64 0, i64 0)) #9, !dbg !3642
  %47 = tail call %struct.redisObject* @createObject(i32 0, i8* %46) #9, !dbg !3643
  store %struct.redisObject* %47, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 22), align 8, !dbg !3644, !tbaa !3645
  %48 = tail call i8* @sdsnew(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.281, i64 0, i64 0)) #9, !dbg !3646
  %49 = tail call %struct.redisObject* @createObject(i32 0, i8* %48) #9, !dbg !3647
  store %struct.redisObject* %49, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 24), align 8, !dbg !3648, !tbaa !3649
  %50 = tail call i8* @sdsnew(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.282, i64 0, i64 0)) #9, !dbg !3650
  %51 = tail call %struct.redisObject* @createObject(i32 0, i8* %50) #9, !dbg !3651
  store %struct.redisObject* %51, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 26), align 8, !dbg !3652, !tbaa !3653
  %52 = tail call i8* @sdsnew(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.283, i64 0, i64 0)) #9, !dbg !3654
  %53 = tail call %struct.redisObject* @createObject(i32 0, i8* %52) #9, !dbg !3655
  store %struct.redisObject* %53, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 29), align 8, !dbg !3656, !tbaa !3657
  %54 = tail call i8* @sdsnew(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.284, i64 0, i64 0)) #9, !dbg !3658
  %55 = tail call %struct.redisObject* @createObject(i32 0, i8* %54) #9, !dbg !3659
  store %struct.redisObject* %55, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 25), align 8, !dbg !3660, !tbaa !3661
  %56 = tail call i8* @sdsnew(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.285, i64 0, i64 0)) #9, !dbg !3662
  %57 = tail call %struct.redisObject* @createObject(i32 0, i8* %56) #9, !dbg !3663
  store %struct.redisObject* %57, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 27), align 8, !dbg !3664, !tbaa !3665
  %58 = tail call i8* @sdsnew(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.286, i64 0, i64 0)) #9, !dbg !3666
  %59 = tail call %struct.redisObject* @createObject(i32 0, i8* %58) #9, !dbg !3667
  store %struct.redisObject* %59, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 28), align 8, !dbg !3668, !tbaa !3669
  %60 = tail call i8* @sdsnew(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0)) #9, !dbg !3670
  %61 = tail call %struct.redisObject* @createObject(i32 0, i8* %60) #9, !dbg !3671
  store %struct.redisObject* %61, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 8), align 8, !dbg !3672, !tbaa !3673
  %62 = tail call i8* @sdsnew(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.288, i64 0, i64 0)) #9, !dbg !3674
  %63 = tail call %struct.redisObject* @createObject(i32 0, i8* %62) #9, !dbg !3675
  store %struct.redisObject* %63, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 9), align 8, !dbg !3676, !tbaa !3677
  %64 = tail call i8* @sdsnew(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.289, i64 0, i64 0)) #9, !dbg !3678
  %65 = tail call %struct.redisObject* @createObject(i32 0, i8* %64) #9, !dbg !3679
  store %struct.redisObject* %65, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 30), align 8, !dbg !3680, !tbaa !3681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3683
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3684
  %66 = getelementptr inbounds [64 x i8], [64 x i8]* %1, i64 0, i64 0
  br label %67, !dbg !3684

; <label>:67:                                     ; preds = %67, %0
  %68 = phi i64 [ 0, %0 ], [ %74, %67 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %66) #4, !dbg !3685
  %69 = call i32 @ll2string(i8* nonnull %66, i64 64, i64 %68) #9, !dbg !3687
  %70 = call i8* @sdsempty() #9, !dbg !3689
  %71 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %70, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.290, i64 0, i64 0), i32 %69, i8* nonnull %66) #9, !dbg !3690
  %72 = call %struct.redisObject* @createObject(i32 0, i8* %71) #9, !dbg !3691
  %73 = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 46, i64 %68, !dbg !3692
  store %struct.redisObject* %72, %struct.redisObject** %73, align 8, !dbg !3693, !tbaa !1178
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %66) #4, !dbg !3694
  %74 = add nuw nsw i64 %68, 1, !dbg !3695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3684
  %75 = icmp eq i64 %74, 10, !dbg !3697
  br i1 %75, label %76, label %67, !dbg !3684, !llvm.loop !3698

; <label>:76:                                     ; preds = %67
  %77 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.291, i64 0, i64 0), i64 13) #9, !dbg !3700
  store %struct.redisObject* %77, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 31), align 8, !dbg !3701, !tbaa !3702
  %78 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.292, i64 0, i64 0), i64 14) #9, !dbg !3703
  store %struct.redisObject* %78, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 32), align 8, !dbg !3704, !tbaa !3705
  %79 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.293, i64 0, i64 0), i64 15) #9, !dbg !3706
  store %struct.redisObject* %79, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 33), align 8, !dbg !3707, !tbaa !3708
  %80 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.294, i64 0, i64 0), i64 18) #9, !dbg !3709
  store %struct.redisObject* %80, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 34), align 8, !dbg !3710, !tbaa !3711
  %81 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.295, i64 0, i64 0), i64 17) #9, !dbg !3712
  store %struct.redisObject* %81, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 35), align 8, !dbg !3713, !tbaa !3714
  %82 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.296, i64 0, i64 0), i64 19) #9, !dbg !3715
  store %struct.redisObject* %82, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 36), align 8, !dbg !3716, !tbaa !3717
  %83 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.297, i64 0, i64 0), i64 3) #9, !dbg !3718
  store %struct.redisObject* %83, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 37), align 8, !dbg !3719, !tbaa !3720
  %84 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.298, i64 0, i64 0), i64 6) #9, !dbg !3721
  store %struct.redisObject* %84, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 38), align 8, !dbg !3722, !tbaa !3723
  %85 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.299, i64 0, i64 0), i64 4) #9, !dbg !3724
  store %struct.redisObject* %85, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 39), align 8, !dbg !3725, !tbaa !3726
  %86 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.300, i64 0, i64 0), i64 4) #9, !dbg !3727
  store %struct.redisObject* %86, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 40), align 8, !dbg !3728, !tbaa !3729
  %87 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.301, i64 0, i64 0), i64 5) #9, !dbg !3730
  store %struct.redisObject* %87, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 41), align 8, !dbg !3731, !tbaa !3732
  %88 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.302, i64 0, i64 0), i64 9) #9, !dbg !3733
  store %struct.redisObject* %88, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 42), align 8, !dbg !3734, !tbaa !3735
  %89 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.303, i64 0, i64 0), i64 7) #9, !dbg !3736
  store %struct.redisObject* %89, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 43), align 8, !dbg !3737, !tbaa !3738
  %90 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.304, i64 0, i64 0), i64 7) #9, !dbg !3739
  store %struct.redisObject* %90, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 44), align 8, !dbg !3740, !tbaa !3741
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3742
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3744
  br label %91, !dbg !3744

; <label>:91:                                     ; preds = %91, %76
  %92 = phi i64 [ 0, %76 ], [ %101, %91 ]
  %93 = inttoptr i64 %92 to i8*, !dbg !3745
  %94 = call %struct.redisObject* @createObject(i32 0, i8* %93) #9, !dbg !3748
  %95 = call %struct.redisObject* @makeObjectShared(%struct.redisObject* %94) #9, !dbg !3749
  %96 = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 47, i64 %92, !dbg !3750
  store %struct.redisObject* %95, %struct.redisObject** %96, align 8, !dbg !3751, !tbaa !1178
  %97 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %95, i64 0, i32 0, !dbg !3752
  %98 = load i32, i32* %97, align 8, !dbg !3753
  %99 = and i32 %98, -241, !dbg !3753
  %100 = or i32 %99, 16, !dbg !3753
  store i32 %100, i32* %97, align 8, !dbg !3753
  %101 = add nuw nsw i64 %92, 1, !dbg !3754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3744
  %102 = icmp eq i64 %101, 10000, !dbg !3756
  br i1 %102, label %103, label %91, !dbg !3744, !llvm.loop !3757

; <label>:103:                                    ; preds = %91
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3759
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3761
  br label %104, !dbg !3761

; <label>:104:                                    ; preds = %104, %103
  %105 = phi i64 [ 0, %103 ], [ %115, %104 ]
  %106 = call i8* @sdsempty() #9, !dbg !3762
  %107 = trunc i64 %105 to i32, !dbg !3765
  %108 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %106, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.305, i64 0, i64 0), i32 %107) #9, !dbg !3765
  %109 = call %struct.redisObject* @createObject(i32 0, i8* %108) #9, !dbg !3766
  %110 = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 48, i64 %105, !dbg !3767
  store %struct.redisObject* %109, %struct.redisObject** %110, align 8, !dbg !3768, !tbaa !1178
  %111 = call i8* @sdsempty() #9, !dbg !3769
  %112 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %111, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.306, i64 0, i64 0), i32 %107) #9, !dbg !3770
  %113 = call %struct.redisObject* @createObject(i32 0, i8* %112) #9, !dbg !3771
  %114 = getelementptr inbounds %struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 49, i64 %105, !dbg !3772
  store %struct.redisObject* %113, %struct.redisObject** %114, align 8, !dbg !3773, !tbaa !1178
  %115 = add nuw nsw i64 %105, 1, !dbg !3774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3761
  %116 = icmp eq i64 %115, 32, !dbg !3776
  br i1 %116, label %117, label %104, !dbg !3761, !llvm.loop !3777

; <label>:117:                                    ; preds = %104
  %118 = call i8* @sdsnew(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.307, i64 0, i64 0)) #9, !dbg !3779
  store i8* %118, i8** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 50), align 8, !dbg !3780, !tbaa !3781
  %119 = call i8* @sdsnew(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.308, i64 0, i64 0)) #9, !dbg !3782
  store i8* %119, i8** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 51), align 8, !dbg !3783, !tbaa !3784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3785
  ret void, !dbg !3785
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @sdsnew(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @sdscatprintf(i8*, i8*, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @sdsempty() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @makeObjectShared(%struct.redisObject*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @initServerConfig() local_unnamed_addr #1 !dbg !3786 {
  %1 = alloca %struct.timeval, align 8
  %2 = alloca %struct.tm, align 8
  %3 = tail call i32 @pthread_mutex_init(%struct.pthread_mutex_t_** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 297), %struct.pthread_mutexattr_t_** null) #9, !dbg !3790
  %4 = tail call i32 @pthread_mutex_init(%struct.pthread_mutex_t_** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 296), %struct.pthread_mutexattr_t_** null) #9, !dbg !3791
  %5 = tail call i32 @pthread_mutex_init(%struct.pthread_mutex_t_** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 298), %struct.pthread_mutexattr_t_** null) #9, !dbg !3792
  %6 = tail call i64 @time(i64* null) #9, !dbg !3793
  store atomic i64 %6, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251) monotonic, align 8, !dbg !3796
  %7 = bitcast %struct.timeval* %1 to i8*, !dbg !3803
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4, !dbg !3803
  %8 = ptrtoint %struct.timeval* %1 to i64, !dbg !3804
  %9 = add i64 %8, 65536, !dbg !3805
  %10 = inttoptr i64 %9 to %struct.timeval*, !dbg !3806
  %11 = call i32 @gettimeofday(%struct.timeval* %10, i8* null) #9, !dbg !3808
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i64 0, i32 0, !dbg !3810
  %13 = load i64, i64* %12, align 8, !dbg !3810, !tbaa !1316
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i64 0, i32 1, !dbg !3811
  %15 = load i64, i64* %14, align 8, !dbg !3811, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4, !dbg !3812
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3813
  %16 = mul nsw i64 %13, 1000000, !dbg !3814
  %17 = add nsw i64 %16, %15, !dbg !3816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3817
  %18 = sdiv i64 %17, 1000, !dbg !3818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3819
  store i64 %18, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 254), align 8, !dbg !3820, !tbaa !3015
  %19 = bitcast %struct.tm* %2 to i8*, !dbg !3821
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #4, !dbg !3821
  %20 = call %struct.tm* @localtime_r(i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), %struct.tm* nonnull %2) #9, !dbg !3823
  %21 = getelementptr inbounds %struct.tm, %struct.tm* %2, i64 0, i32 8, !dbg !3824
  %22 = load i32, i32* %21, align 8, !dbg !3824, !tbaa !3020
  store i32 %22, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 253), align 8, !dbg !3825, !tbaa !1792
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #4, !dbg !3826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3826
  call void @getRandomHexChars(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19, i64 0), i64 40) #9, !dbg !3827
  store i8 0, i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19, i64 40), align 8, !dbg !3828, !tbaa !1382
  call void @changeReplicationId() #9, !dbg !3829
  call void @clearReplicationId2() #9, !dbg !3830
  %23 = call i64 @getTimeZone() #9, !dbg !3831
  store i64 %23, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 252), align 8, !dbg !3832, !tbaa !1790
  store <2 x i8*> zeroinitializer, <2 x i8*>* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1) to <2 x i8*>*), align 8, !dbg !3833, !tbaa !1178
  store i32 10, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 5), align 4, !dbg !3834, !tbaa !3121
  store i32 10, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !3835, !tbaa !2815
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 4), align 8, !dbg !3836, !tbaa !3125
  store i32 64, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !3837, !tbaa !3838
  store i32 6379, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !3839, !tbaa !3840
  store i32 511, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !3841, !tbaa !3842
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !3843, !tbaa !3844
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 8, !dbg !3845, !tbaa !3846
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !3847, !tbaa !3848
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !3849, !tbaa !3850
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !3851, !tbaa !3852
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 50), align 8, !dbg !3853, !tbaa !3854
  store i32 16, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !3855, !tbaa !2929
  store <4 x i32> <i32 2, i32 0, i32 300, i32 1>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100) to <4 x i32>*), align 8, !dbg !3856, !tbaa !1482
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 104), align 8, !dbg !3857, !tbaa !2919
  store i64 104857600, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 105), align 8, !dbg !3858, !tbaa !3859
  store <4 x i32> <i32 10, i32 100, i32 5, i32 75>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 106) to <4 x i32>*), align 8, !dbg !3860, !tbaa !1482
  store i64 536870912, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 232), align 8, !dbg !3861, !tbaa !3862
  store <2 x i64> <i64 1000, i64 1073741824>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 110) to <2 x i64>*), align 8, !dbg !3863, !tbaa !2045
  store %struct.saveparam* null, %struct.saveparam** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 155), align 8, !dbg !3864, !tbaa !3343
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !3865, !tbaa !3866
  %24 = call i8* @zstrdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.309, i64 0, i64 0)) #9, !dbg !3867
  store i8* %24, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 173), align 8, !dbg !3868, !tbaa !1744
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 174), align 8, !dbg !3869, !tbaa !1827
  %25 = call i8* @zstrdup(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.310, i64 0, i64 0)) #9, !dbg !3870
  store i8* %25, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 175), align 8, !dbg !3871, !tbaa !3872
  store i32 128, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 176), align 8, !dbg !3873, !tbaa !3874
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 115), align 4, !dbg !3875, !tbaa !3876
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 113), align 4, !dbg !3877, !tbaa !3878
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 114), align 8, !dbg !3879, !tbaa !3880
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !3881, !tbaa !3371
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 118), align 4, !dbg !3882, !tbaa !3883
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 120), align 8, !dbg !3884, !tbaa !3885
  store i32 100, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 121), align 4, !dbg !3886, !tbaa !3887
  store <2 x i64> <i64 67108864, i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 122) to <2 x i64>*), align 8, !dbg !3888, !tbaa !2045
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 126), align 8, !dbg !3889, !tbaa !3890
  %26 = call i64 @time(i64* null) #9, !dbg !3891
  store i64 %26, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 133), align 8, !dbg !3892, !tbaa !3893
  store <2 x i64> <i64 -1, i64 -1>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 134) to <2 x i64>*), align 8, !dbg !3894, !tbaa !2045
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 136), align 8, !dbg !3895, !tbaa !3896
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 137), align 8, !dbg !3897, !tbaa !3898
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 130), align 8, !dbg !3899, !tbaa !3900
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 131), align 4, !dbg !3901, !tbaa !3902
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 132), align 8, !dbg !3903, !tbaa !3403
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 138), align 8, !dbg !3904, !tbaa !3905
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 139), align 4, !dbg !3906, !tbaa !3907
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 142), align 8, !dbg !3908, !tbaa !3909
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 143), align 4, !dbg !3910, !tbaa !3911
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !3912, !tbaa !3913
  %27 = call i8* @zstrdup(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.311, i64 0, i64 0)) #9, !dbg !3914
  store i8* %27, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !3915, !tbaa !3362
  %28 = call i8* @zstrdup(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.312, i64 0, i64 0)) #9, !dbg !3916
  store i8* %28, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 119), align 8, !dbg !3917, !tbaa !3918
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15), align 8, !dbg !3919, !tbaa !1154
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 158), align 8, !dbg !3920, !tbaa !3921
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !3922, !tbaa !3923
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 167), align 4, !dbg !3924, !tbaa !3925
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 13), align 8, !dbg !3926, !tbaa !2949
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 14), align 4, !dbg !3927, !tbaa !3928
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 257), align 8, !dbg !3929, !tbaa !3930
  store i32 10000, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !3931, !tbaa !3932
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 233), align 8, !dbg !3933, !tbaa !3934
  %29 = call i8* @memset(i8* bitcast (i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 234, i64 0) to i8*), i32 0, i64 24) #9, !dbg !3935
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !3936, !tbaa !3937
  store <4 x i32> <i32 1792, i32 5, i32 10, i32 1>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 228) to <4 x i32>*), align 8, !dbg !3938, !tbaa !1482
  store <2 x i64> <i64 512, i64 64>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241) to <2 x i64>*), align 8, !dbg !3939, !tbaa !2045
  store i32 -2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !3940, !tbaa !3941
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !3942, !tbaa !3943
  store <2 x i64> <i64 512, i64 128>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 243) to <2 x i64>*), align 8, !dbg !3944, !tbaa !2045
  store <2 x i64> <i64 64, i64 3000>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 245) to <2 x i64>*), align 8, !dbg !3945, !tbaa !2045
  store <2 x i64> <i64 4096, i64 100>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 247) to <2 x i64>*), align 8, !dbg !3946, !tbaa !2045
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 4, !dbg !3947, !tbaa !3210
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !3948, !tbaa !2593
  store i64 15000, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !3949, !tbaa !3950
  store <4 x i32> <i32 1, i32 10, i32 1, i32 0>, <4 x i32>* bitcast (i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 262) to <4 x i32>*), align 8, !dbg !3951, !tbaa !1482
  %30 = call i8* @zstrdup(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.313, i64 0, i64 0)) #9, !dbg !3952
  store i8* %30, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !3953, !tbaa !3954
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !3955, !tbaa !3956
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 267), align 8, !dbg !3957, !tbaa !3958
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 268), align 4, !dbg !3959, !tbaa !3960
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !3961, !tbaa !3962
  %31 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @migrateCacheDictType, i8* null) #9, !dbg !3963
  store %struct.dict* %31, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !3964, !tbaa !3965
  store i64 1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 49), align 8, !dbg !3966, !tbaa !3967
  store i64 2097152, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !3968, !tbaa !3969
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 285), align 8, !dbg !3970, !tbaa !3971
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 286), align 4, !dbg !3972, !tbaa !3973
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 287), align 8, !dbg !3974, !tbaa !3975
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 22), align 8, !dbg !3976, !tbaa !3977
  store i64 5000, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 275), align 8, !dbg !3978, !tbaa !3979
  %32 = call i32 @getLRUClock() #9, !dbg !3980
  store atomic i32 %32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 11) monotonic, align 8, !dbg !3982
  call void @resetServerSaveParams() #9, !dbg !3983
  call void @appendServerSaveParams(i64 3600, i32 1) #9, !dbg !3984
  call void @appendServerSaveParams(i64 300, i32 100) #9, !dbg !3985
  call void @appendServerSaveParams(i64 60, i32 10000) #9, !dbg !3986
  store <2 x i8*> zeroinitializer, <2 x i8*>* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 195) to <2 x i8*>*), align 8, !dbg !3987, !tbaa !1178
  store i32 6379, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 197), align 8, !dbg !3988, !tbaa !3989
  store <2 x %struct.client*> zeroinitializer, <2 x %struct.client*>* bitcast (%struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199) to <2 x %struct.client*>*), align 8, !dbg !3990, !tbaa !1178
  store i64 -1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 219), align 8, !dbg !3991, !tbaa !3992
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !3993, !tbaa !3994
  store i32 5, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 201), align 8, !dbg !3995, !tbaa !3996
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 210), align 8, !dbg !3997, !tbaa !3998
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 211), align 4, !dbg !3999, !tbaa !4000
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 212), align 8, !dbg !4001, !tbaa !4002
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 220), align 8, !dbg !4003, !tbaa !4004
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 213), align 8, !dbg !4005, !tbaa !4006
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 214), align 8, !dbg !4007, !tbaa !4008
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 193), align 4, !dbg !4009, !tbaa !4010
  store i32 5, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 194), align 8, !dbg !4011, !tbaa !4012
  store i32 10, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 182), align 4, !dbg !4013, !tbaa !4014
  store i32 60, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 198), align 4, !dbg !4015, !tbaa !4016
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 190), align 8, !dbg !4017, !tbaa !4018
  store i32 10, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 191), align 4, !dbg !4019, !tbaa !4020
  store i32 100, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 215), align 4, !dbg !4021, !tbaa !4022
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 217), align 8, !dbg !4023, !tbaa !4024
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 216), align 8, !dbg !4025, !tbaa !4026
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !4027, !tbaa !4028
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !4029, !tbaa !4030
  store <2 x i64> <i64 1048576, i64 0>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 184) to <2 x i64>*), align 8, !dbg !4031, !tbaa !2493
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 186) to <2 x i64>*), align 8, !dbg !4032, !tbaa !2493
  store i64 3600, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 188), align 8, !dbg !4033, !tbaa !4034
  %33 = call i64 @time(i64* null) #9, !dbg !4035
  store i64 %33, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 189), align 8, !dbg !4036, !tbaa !4037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 bitcast (%struct.clientBufferLimitsConfig* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 116, i64 0) to i8*), i8* nonnull align 16 bitcast ([3 x %struct.clientBufferLimitsConfig]* @clientBufferLimitsDefaults to i8*), i64 24, i1 false), !dbg !4042, !tbaa.struct !4044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 bitcast (%struct.clientBufferLimitsConfig* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 116, i64 1) to i8*), i8* nonnull align 8 bitcast (%struct.clientBufferLimitsConfig* getelementptr inbounds ([3 x %struct.clientBufferLimitsConfig], [3 x %struct.clientBufferLimitsConfig]* @clientBufferLimitsDefaults, i64 0, i64 1) to i8*), i64 24, i1 false), !dbg !4042, !tbaa.struct !4044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4041
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 bitcast (%struct.clientBufferLimitsConfig* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 116, i64 2) to i8*), i8* nonnull align 16 bitcast (%struct.clientBufferLimitsConfig* getelementptr inbounds ([3 x %struct.clientBufferLimitsConfig], [3 x %struct.clientBufferLimitsConfig]* @clientBufferLimitsDefaults, i64 0, i64 2) to i8*), i64 24, i1 false), !dbg !4042, !tbaa.struct !4044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4041
  store double 0.000000e+00, double* @R_Zero, align 8, !dbg !4046, !tbaa !4047
  store double 0x7FF0000000000000, double* @R_PosInf, align 8, !dbg !4048, !tbaa !4047
  store double 0xFFF0000000000000, double* @R_NegInf, align 8, !dbg !4049, !tbaa !4047
  store double 0x7FF8000000000000, double* @R_Nan, align 8, !dbg !4050, !tbaa !4047
  %34 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @commandTableDictType, i8* null) #9, !dbg !4051
  store %struct.dict* %34, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4052, !tbaa !1369
  %35 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @commandTableDictType, i8* null) #9, !dbg !4053
  store %struct.dict* %35, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !4054, !tbaa !4055
  call void @populateCommandTable() #10, !dbg !4056
  %36 = call i8* @sdsnew(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !4066
  %37 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4068, !tbaa !1369
  %38 = call i8* @dictFetchValue(%struct.dict* %37, i8* %36) #9, !dbg !4069
  call void @sdsfree(i8* %36) #9, !dbg !4071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4072
  store i8* %38, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 56) to i8**), align 8, !dbg !4073, !tbaa !4074
  %39 = call i8* @sdsnew(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i64 0, i64 0)) #9, !dbg !4077
  %40 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4079, !tbaa !1369
  %41 = call i8* @dictFetchValue(%struct.dict* %40, i8* %39) #9, !dbg !4080
  call void @sdsfree(i8* %39) #9, !dbg !4082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4083
  store i8* %41, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 57) to i8**), align 8, !dbg !4084, !tbaa !4085
  %42 = call i8* @sdsnew(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !4088
  %43 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4090, !tbaa !1369
  %44 = call i8* @dictFetchValue(%struct.dict* %43, i8* %42) #9, !dbg !4091
  call void @sdsfree(i8* %42) #9, !dbg !4093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4094
  store i8* %44, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 58) to i8**), align 8, !dbg !4095, !tbaa !4096
  %45 = call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !4099
  %46 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4101, !tbaa !1369
  %47 = call i8* @dictFetchValue(%struct.dict* %46, i8* %45) #9, !dbg !4102
  call void @sdsfree(i8* %45) #9, !dbg !4104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4105
  store i8* %47, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 59) to i8**), align 8, !dbg !4106, !tbaa !4107
  %48 = call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !4110
  %49 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4112, !tbaa !1369
  %50 = call i8* @dictFetchValue(%struct.dict* %49, i8* %48) #9, !dbg !4113
  call void @sdsfree(i8* %48) #9, !dbg !4115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4116
  store i8* %50, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 60) to i8**), align 8, !dbg !4117, !tbaa !4118
  %51 = call i8* @sdsnew(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !4121
  %52 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4123, !tbaa !1369
  %53 = call i8* @dictFetchValue(%struct.dict* %52, i8* %51) #9, !dbg !4124
  call void @sdsfree(i8* %51) #9, !dbg !4126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4127
  store i8* %53, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 61) to i8**), align 8, !dbg !4128, !tbaa !4129
  %54 = call i8* @sdsnew(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.86, i64 0, i64 0)) #9, !dbg !4132
  %55 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4134, !tbaa !1369
  %56 = call i8* @dictFetchValue(%struct.dict* %55, i8* %54) #9, !dbg !4135
  call void @sdsfree(i8* %54) #9, !dbg !4137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4138
  store i8* %56, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 62) to i8**), align 8, !dbg !4139, !tbaa !4140
  %57 = call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0)) #9, !dbg !4143
  %58 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4145, !tbaa !1369
  %59 = call i8* @dictFetchValue(%struct.dict* %58, i8* %57) #9, !dbg !4146
  call void @sdsfree(i8* %57) #9, !dbg !4148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4149
  store i8* %59, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 63) to i8**), align 8, !dbg !4150, !tbaa !4151
  %60 = call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i64 0, i64 0)) #9, !dbg !4154
  %61 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4156, !tbaa !1369
  %62 = call i8* @dictFetchValue(%struct.dict* %61, i8* %60) #9, !dbg !4157
  call void @sdsfree(i8* %60) #9, !dbg !4159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4160
  store i8* %62, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64) to i8**), align 8, !dbg !4161, !tbaa !4162
  %63 = call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0)) #9, !dbg !4165
  %64 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4167, !tbaa !1369
  %65 = call i8* @dictFetchValue(%struct.dict* %64, i8* %63) #9, !dbg !4168
  call void @sdsfree(i8* %63) #9, !dbg !4170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4171
  store i8* %65, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 65) to i8**), align 8, !dbg !4172, !tbaa !4173
  %66 = call i8* @sdsnew(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.120, i64 0, i64 0)) #9, !dbg !4176
  %67 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4178, !tbaa !1369
  %68 = call i8* @dictFetchValue(%struct.dict* %67, i8* %66) #9, !dbg !4179
  call void @sdsfree(i8* %66) #9, !dbg !4181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4182
  store i8* %68, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 66) to i8**), align 8, !dbg !4183, !tbaa !4184
  %69 = call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.229, i64 0, i64 0)) #9, !dbg !4187
  %70 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4189, !tbaa !1369
  %71 = call i8* @dictFetchValue(%struct.dict* %70, i8* %69) #9, !dbg !4190
  call void @sdsfree(i8* %69) #9, !dbg !4192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4193
  store i8* %71, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 67) to i8**), align 8, !dbg !4194, !tbaa !4195
  %72 = call i8* @sdsnew(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i64 0, i64 0)) #9, !dbg !4198
  %73 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4200, !tbaa !1369
  %74 = call i8* @dictFetchValue(%struct.dict* %73, i8* %72) #9, !dbg !4201
  call void @sdsfree(i8* %72) #9, !dbg !4203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4204
  store i8* %74, i8** bitcast (%struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 68) to i8**), align 8, !dbg !4205, !tbaa !4206
  store <2 x i64> <i64 10000, i64 128>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 92) to <2 x i64>*), align 8, !dbg !4207, !tbaa !1382
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !4208, !tbaa !4209
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.314, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.315, i64 0, i64 0)>, <2 x i8*>* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 290) to <2 x i8*>*), align 8, !dbg !4210, !tbaa !1178
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 292), align 8, !dbg !4211, !tbaa !4212
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 293), align 4, !dbg !4213, !tbaa !4214
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 294), align 8, !dbg !4215, !tbaa !3082
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 284), align 4, !dbg !4216, !tbaa !4217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4218
  ret void, !dbg !4218
}

; Function Attrs: noredzone
declare dso_local i32 @pthread_mutex_init(%struct.pthread_mutex_t_**, %struct.pthread_mutexattr_t_**) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @changeReplicationId() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @clearReplicationId2() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @getTimeZone() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @zstrdup(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.dict* @dictCreate(%struct.dictType*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @resetServerSaveParams() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @appendServerSaveParams(i64, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @populateCommandTable() local_unnamed_addr #1 !dbg !4219 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4233
  br label %1, !dbg !4233

; <label>:1:                                      ; preds = %0, %48
  %2 = phi i64 [ 0, %0 ], [ %49, %48 ]
  %3 = getelementptr inbounds [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }], [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }]* @redisCommandTable, i64 0, i64 %2, !dbg !4234
  %4 = getelementptr inbounds [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }], [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }]* @redisCommandTable, i64 0, i64 %2, i32 3, !dbg !4236
  %5 = load i8*, i8** %4, align 8, !dbg !4236, !tbaa !4237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  %6 = load i8, i8* %5, align 1, !dbg !4240, !tbaa !1382
  %7 = icmp eq i8 %6, 0, !dbg !4241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  br i1 %7, label %34, label %8, !dbg !4239

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }], [200 x { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }]* @redisCommandTable, i64 0, i64 %2, i32 4
  br label %10, !dbg !4239

; <label>:10:                                     ; preds = %8, %27
  %11 = phi i8 [ %6, %8 ], [ %32, %27 ]
  %12 = phi i8* [ %5, %8 ], [ %31, %27 ]
  %13 = sext i8 %11 to i32, !dbg !4240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4242
  switch i32 %13, label %26 [
    i32 119, label %27
    i32 114, label %14
    i32 109, label %15
    i32 97, label %16
    i32 112, label %17
    i32 115, label %18
    i32 82, label %19
    i32 83, label %20
    i32 108, label %21
    i32 116, label %22
    i32 77, label %23
    i32 107, label %24
    i32 70, label %25
  ], !dbg !4242

; <label>:14:                                     ; preds = %10
  br label %27, !dbg !4244

; <label>:15:                                     ; preds = %10
  br label %27, !dbg !4246

; <label>:16:                                     ; preds = %10
  br label %27, !dbg !4247

; <label>:17:                                     ; preds = %10
  br label %27, !dbg !4248

; <label>:18:                                     ; preds = %10
  br label %27, !dbg !4249

; <label>:19:                                     ; preds = %10
  br label %27, !dbg !4250

; <label>:20:                                     ; preds = %10
  br label %27, !dbg !4251

; <label>:21:                                     ; preds = %10
  br label %27, !dbg !4252

; <label>:22:                                     ; preds = %10
  br label %27, !dbg !4253

; <label>:23:                                     ; preds = %10
  br label %27, !dbg !4254

; <label>:24:                                     ; preds = %10
  br label %27, !dbg !4255

; <label>:25:                                     ; preds = %10
  br label %27, !dbg !4256

; <label>:26:                                     ; preds = %10
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 2232, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.338, i64 0, i64 0)) #9, !dbg !4257
  tail call void @_exit(i32 1) #12, !dbg !4257
  unreachable

; <label>:27:                                     ; preds = %10, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14
  %28 = phi i32 [ 8192, %25 ], [ 4096, %24 ], [ 2048, %23 ], [ 1024, %22 ], [ 512, %21 ], [ 256, %20 ], [ 128, %19 ], [ 64, %18 ], [ 32, %17 ], [ 16, %16 ], [ 4, %15 ], [ 2, %14 ], [ 1, %10 ]
  %29 = load i32, i32* %9, align 16, !dbg !4258, !tbaa !4259
  %30 = or i32 %29, %28, !dbg !4258
  store i32 %30, i32* %9, align 16, !dbg !4258, !tbaa !4259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4258
  %31 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !4260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  %32 = load i8, i8* %31, align 1, !dbg !4240, !tbaa !1382
  %33 = icmp eq i8 %32, 0, !dbg !4241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  br i1 %33, label %34, label %10, !dbg !4239, !llvm.loop !4261

; <label>:34:                                     ; preds = %27, %1
  %35 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4263, !tbaa !1369
  %36 = getelementptr inbounds { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }, { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }* %3, i64 0, i32 0, !dbg !4264
  %37 = load i8*, i8** %36, align 16, !dbg !4264, !tbaa !1210
  %38 = tail call i8* @sdsnew(i8* %37) #9, !dbg !4265
  %39 = bitcast { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }* %3 to i8*, !dbg !4266
  %40 = tail call i32 @dictAdd(%struct.dict* %35, i8* %38, i8* nonnull %39) #9, !dbg !4267
  %41 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !4269, !tbaa !4055
  %42 = load i8*, i8** %36, align 16, !dbg !4270, !tbaa !1210
  %43 = tail call i8* @sdsnew(i8* %42) #9, !dbg !4271
  %44 = tail call i32 @dictAdd(%struct.dict* %41, i8* %43, i8* nonnull %39) #9, !dbg !4272
  %45 = or i32 %44, %40, !dbg !4274
  %46 = icmp eq i32 %45, 0, !dbg !4274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4274
  br i1 %46, label %48, label %47, !dbg !4274

; <label>:47:                                     ; preds = %34
  tail call void @_serverAssert(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 2241) #9, !dbg !4274
  tail call void @_exit(i32 1) #12, !dbg !4274
  unreachable

; <label>:48:                                     ; preds = %34
  %49 = add nuw nsw i64 %2, 1, !dbg !4275
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4276
  %50 = icmp ult i64 %49, 200, !dbg !4277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4233
  br i1 %50, label %1, label %51, !dbg !4233, !llvm.loop !4278

; <label>:51:                                     ; preds = %48
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4280
  ret void, !dbg !4280
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisCommand* @lookupCommandByCString(i8*) local_unnamed_addr #1 !dbg !4058 {
  %2 = tail call i8* @sdsnew(i8* %0) #9, !dbg !4282
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4284, !tbaa !1369
  %4 = tail call i8* @dictFetchValue(%struct.dict* %3, i8* %2) #9, !dbg !4285
  %5 = bitcast i8* %4 to %struct.redisCommand*, !dbg !4285
  tail call void @sdsfree(i8* %2) #9, !dbg !4287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4288
  ret %struct.redisCommand* %5, !dbg !4288
}

; Function Attrs: noredzone nounwind
define dso_local i32 @restartServer(i32, i64) local_unnamed_addr #1 !dbg !4289 {
  %3 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 8, !dbg !4298, !tbaa !4300
  %4 = tail call i32 @access(i8* %3, i32 1) #9, !dbg !4301
  %5 = icmp eq i32 %4, -1, !dbg !4302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4303
  br i1 %5, label %6, label %8, !dbg !4303

; <label>:6:                                      ; preds = %2
  %7 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 8, !dbg !4304, !tbaa !4300
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.316, i64 0, i64 0), i8* %7) #10, !dbg !4306
  br label %54, !dbg !4307

; <label>:8:                                      ; preds = %2
  %9 = and i32 %0, 2, !dbg !4308
  %10 = icmp ne i32 %9, 0, !dbg !4308
  %11 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !4310
  %12 = icmp ne i8* %11, null, !dbg !4311
  %13 = and i1 %10, %12, !dbg !4312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4312
  br i1 %13, label %14, label %18, !dbg !4312

; <label>:14:                                     ; preds = %8
  %15 = tail call i32 @rewriteConfig(i8* nonnull %11) #9, !dbg !4313
  %16 = icmp eq i32 %15, -1, !dbg !4314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4315
  br i1 %16, label %17, label %18, !dbg !4315

; <label>:17:                                     ; preds = %14
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.317, i64 0, i64 0)) #10, !dbg !4316
  br label %54, !dbg !4318

; <label>:18:                                     ; preds = %14, %8
  %19 = and i32 %0, 1, !dbg !4319
  %20 = icmp eq i32 %19, 0, !dbg !4319
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4321
  br i1 %20, label %25, label %21, !dbg !4321

; <label>:21:                                     ; preds = %18
  %22 = tail call i32 @prepareForShutdown(i32 0) #10, !dbg !4322
  %23 = icmp eq i32 %22, 0, !dbg !4323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4324
  br i1 %23, label %25, label %24, !dbg !4324

; <label>:24:                                     ; preds = %21
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.318, i64 0, i64 0)) #10, !dbg !4325
  br label %54, !dbg !4327

; <label>:25:                                     ; preds = %21, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4329
  %26 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4331, !tbaa !3932
  %27 = icmp sgt i32 %26, -1021, !dbg !4333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4334
  br i1 %27, label %28, label %39, !dbg !4334

; <label>:28:                                     ; preds = %25, %34
  %29 = phi i32 [ %35, %34 ], [ 3, %25 ]
  %30 = tail call i32 (i32, i32, ...) @fcntl(i32 %29, i32 1) #9, !dbg !4335
  %31 = icmp eq i32 %30, -1, !dbg !4338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4339
  br i1 %31, label %34, label %32, !dbg !4339

; <label>:32:                                     ; preds = %28
  %33 = tail call i32 @close(i32 %29) #9, !dbg !4340
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4340
  br label %34, !dbg !4340

; <label>:34:                                     ; preds = %28, %32
  %35 = add nuw nsw i32 %29, 1, !dbg !4341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4342
  %36 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4331, !tbaa !3932
  %37 = add nsw i32 %36, 1023, !dbg !4333
  %38 = icmp slt i32 %29, %37, !dbg !4333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4334
  br i1 %38, label %28, label %39, !dbg !4334, !llvm.loop !4343

; <label>:39:                                     ; preds = %34, %25
  %40 = icmp eq i64 %1, 0, !dbg !4345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4347
  br i1 %40, label %44, label %41, !dbg !4347

; <label>:41:                                     ; preds = %39
  %42 = mul nsw i64 %1, 1000, !dbg !4348
  %43 = tail call i32 @usleep(i64 %42) #9, !dbg !4349
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4349
  br label %44, !dbg !4349

; <label>:44:                                     ; preds = %39, %41
  %45 = load i8**, i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !4350, !tbaa !4351
  %46 = load i8*, i8** %45, align 8, !dbg !4352, !tbaa !1178
  tail call void @zfree(i8* %46) #9, !dbg !4353
  %47 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 8, !dbg !4354, !tbaa !4300
  %48 = tail call i8* @zstrdup(i8* %47) #9, !dbg !4355
  %49 = load i8**, i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !4356, !tbaa !4351
  store i8* %48, i8** %49, align 8, !dbg !4357, !tbaa !1178
  %50 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 8, !dbg !4358, !tbaa !4300
  %51 = load i8**, i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !4359, !tbaa !4351
  %52 = load i8**, i8*** @environ, align 8, !dbg !4360, !tbaa !1178
  %53 = tail call i32 @execve(i8* %50, i8** %51, i8** %52) #9, !dbg !4361
  tail call void @_exit(i32 1) #12, !dbg !4362
  unreachable

; <label>:54:                                     ; preds = %24, %17, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4363
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4364
  ret i32 -1, !dbg !4364
}

; Function Attrs: noredzone
declare dso_local i32 @access(i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @rewriteConfig(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @fcntl(i32, i32, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @usleep(i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @execve(i8*, i8**, i8**) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @adjustOpenFilesLimit() local_unnamed_addr #1 !dbg !4365 {
  %1 = alloca %struct.rlimit, align 8
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4386, !tbaa !3932
  %3 = add i32 %2, 32, !dbg !4387
  %4 = zext i32 %3 to i64, !dbg !4388
  %5 = bitcast %struct.rlimit* %1 to i8*, !dbg !4390
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4, !dbg !4390
  %6 = call i32 @getrlimit(i32 7, %struct.rlimit* nonnull %1) #9, !dbg !4392
  %7 = icmp eq i32 %6, -1, !dbg !4393
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4394
  br i1 %7, label %8, label %12, !dbg !4394

; <label>:8:                                      ; preds = %0
  %9 = call i32* @__errno() #9, !dbg !4395
  %10 = load i32, i32* %9, align 4, !dbg !4395, !tbaa !1482
  %11 = call i8* @strerror(i32 %10) #9, !dbg !4397
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.319, i64 0, i64 0), i8* %11) #10, !dbg !4398
  store i32 992, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4399, !tbaa !3932
  br label %53, !dbg !4400

; <label>:12:                                     ; preds = %0
  %13 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %1, i64 0, i32 0, !dbg !4401
  %14 = load i64, i64* %13, align 8, !dbg !4401, !tbaa !4402
  %15 = icmp ult i64 %14, %4, !dbg !4405
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4406
  br i1 %15, label %16, label %53, !dbg !4406

; <label>:16:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4409
  %17 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %1, i64 0, i32 1
  store i64 %4, i64* %13, align 8, !dbg !4411, !tbaa !4402
  store i64 %4, i64* %17, align 8, !dbg !4412, !tbaa !4413
  %18 = call i32 @setrlimit(i32 7, %struct.rlimit* nonnull %1) #9, !dbg !4414
  %19 = icmp eq i32 %18, -1, !dbg !4416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4417
  br i1 %19, label %23, label %28, !dbg !4417

; <label>:20:                                     ; preds = %31
  store i64 %32, i64* %13, align 8, !dbg !4411, !tbaa !4402
  store i64 %32, i64* %17, align 8, !dbg !4412, !tbaa !4413
  %21 = call i32 @setrlimit(i32 7, %struct.rlimit* nonnull %1) #9, !dbg !4414
  %22 = icmp eq i32 %21, -1, !dbg !4416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4417
  br i1 %22, label %23, label %28, !dbg !4417

; <label>:23:                                     ; preds = %16, %20
  %24 = phi i64 [ %32, %20 ], [ %4, %16 ]
  %25 = call i32* @__errno() #9, !dbg !4418
  %26 = load i32, i32* %25, align 4, !dbg !4418, !tbaa !1482
  %27 = icmp ult i64 %24, 16, !dbg !4419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4421
  br i1 %27, label %28, label %31, !dbg !4421

; <label>:28:                                     ; preds = %23, %20, %16
  %29 = phi i64 [ %4, %16 ], [ %24, %23 ], [ %32, %20 ]
  %30 = phi i32 [ 0, %16 ], [ %26, %20 ], [ %26, %23 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4422
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %34

; <label>:31:                                     ; preds = %23
  %32 = add nsw i64 %24, -16, !dbg !4423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4424
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %33 = icmp ugt i64 %32, %14, !dbg !4425
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4409
  br i1 %33, label %20, label %34, !dbg !4409

; <label>:34:                                     ; preds = %31, %28
  %35 = phi i64 [ %29, %28 ], [ %32, %31 ]
  %36 = phi i32 [ %30, %28 ], [ %26, %31 ], !dbg !4407
  %37 = icmp ult i64 %35, %14, !dbg !4426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4428
  br i1 %37, label %38, label %39, !dbg !4428

; <label>:38:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4429
  br label %39, !dbg !4429

; <label>:39:                                     ; preds = %38, %34
  %40 = phi i64 [ %14, %38 ], [ %35, %34 ], !dbg !4430
  %41 = icmp ult i64 %40, %4, !dbg !4431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4432
  br i1 %41, label %42, label %51, !dbg !4432

; <label>:42:                                     ; preds = %39
  %43 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4433, !tbaa !3932
  %44 = trunc i64 %40 to i32, !dbg !4435
  %45 = add i32 %44, -32, !dbg !4435
  store i32 %45, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4436, !tbaa !3932
  %46 = icmp ult i64 %40, 33, !dbg !4437
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4439
  br i1 %46, label %47, label %48, !dbg !4439

; <label>:47:                                     ; preds = %42
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.320, i64 0, i64 0), i64 %14, i64 %4) #10, !dbg !4440
  call void @exit(i32 1) #12, !dbg !4442
  unreachable

; <label>:48:                                     ; preds = %42
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.321, i64 0, i64 0), i32 %43, i64 %4) #10, !dbg !4443
  %49 = call i8* @strerror(i32 %36) #9, !dbg !4444
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.322, i64 0, i64 0), i64 %4, i8* %49) #10, !dbg !4445
  %50 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4446, !tbaa !3932
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.323, i64 0, i64 0), i64 %40, i32 %50) #10, !dbg !4447
  br label %52, !dbg !4448

; <label>:51:                                     ; preds = %39
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.324, i64 0, i64 0), i64 %4, i64 %14) #10, !dbg !4449
  br label %52

; <label>:52:                                     ; preds = %51, %48
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4451
  br label %53, !dbg !4451

; <label>:53:                                     ; preds = %12, %52, %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4, !dbg !4452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4452
  ret void, !dbg !4452
}

; Function Attrs: noredzone
declare dso_local i32 @getrlimit(i32, %struct.rlimit*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @setrlimit(i32, %struct.rlimit*) local_unnamed_addr #0

; Function Attrs: norecurse noredzone nounwind
define dso_local void @checkTcpBacklogSettings() local_unnamed_addr #8 !dbg !4453 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4454
  ret void, !dbg !4454
}

; Function Attrs: noredzone nounwind
define dso_local i32 @listenToPort(i32, i32* nocapture, i32* nocapture) local_unnamed_addr #1 !dbg !4455 {
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !4472, !tbaa !3844
  %5 = icmp eq i32 %4, 0, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4475
  br i1 %5, label %6, label %7, !dbg !4475

; <label>:6:                                      ; preds = %3
  store i8* null, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29, i64 0), align 8, !dbg !4476, !tbaa !1178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4477
  br label %7, !dbg !4477

; <label>:7:                                      ; preds = %6, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4479
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4480
  br label %8, !dbg !4480

; <label>:8:                                      ; preds = %7, %118
  %9 = phi i64 [ 0, %7 ], [ %119, %118 ]
  %10 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 29, i64 %9, !dbg !4481
  %11 = load i8*, i8** %10, align 8, !dbg !4481, !tbaa !1178
  %12 = icmp eq i8* %11, null, !dbg !4482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4483
  br i1 %12, label %13, label %65, !dbg !4483

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !4485, !tbaa !3842
  %15 = tail call i32 @anetTcp6Server(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %0, i8* null, i32 %14) #9, !dbg !4486
  %16 = load i32, i32* %2, align 4, !dbg !4487, !tbaa !1482
  %17 = sext i32 %16 to i64, !dbg !4488
  %18 = getelementptr inbounds i32, i32* %1, i64 %17, !dbg !4488
  store i32 %15, i32* %18, align 4, !dbg !4489, !tbaa !1482
  %19 = load i32, i32* %2, align 4, !dbg !4490, !tbaa !1482
  %20 = sext i32 %19 to i64, !dbg !4492
  %21 = getelementptr inbounds i32, i32* %1, i64 %20, !dbg !4492
  %22 = load i32, i32* %21, align 4, !dbg !4492, !tbaa !1482
  %23 = icmp eq i32 %22, -1, !dbg !4493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4494
  br i1 %23, label %28, label %24, !dbg !4494

; <label>:24:                                     ; preds = %13
  %25 = tail call i32 @anetNonBlock(i8* null, i32 %22) #9, !dbg !4495
  %26 = load i32, i32* %2, align 4, !dbg !4497, !tbaa !1482
  %27 = add nsw i32 %26, 1, !dbg !4497
  store i32 %27, i32* %2, align 4, !dbg !4497, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4498
  br label %35, !dbg !4498

; <label>:28:                                     ; preds = %13
  %29 = tail call i32* @__errno() #9, !dbg !4499
  %30 = load i32, i32* %29, align 4, !dbg !4499, !tbaa !1482
  %31 = icmp eq i32 %30, 106, !dbg !4501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4502
  br i1 %31, label %34, label %32, !dbg !4502

; <label>:32:                                     ; preds = %28
  %33 = load i32, i32* %2, align 4, !dbg !4503, !tbaa !1482
  br label %35, !dbg !4502

; <label>:34:                                     ; preds = %28
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.325, i64 0, i64 0)) #10, !dbg !4505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4508
  br label %38, !dbg !4508

; <label>:35:                                     ; preds = %32, %24
  %36 = phi i32 [ %33, %32 ], [ %27, %24 ], !dbg !4503
  %37 = icmp eq i32 %36, 1, !dbg !4509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4508
  br i1 %37, label %38, label %60, !dbg !4508

; <label>:38:                                     ; preds = %34, %35
  %39 = phi i32 [ 1, %34 ], [ 0, %35 ]
  %40 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !4510, !tbaa !3842
  %41 = tail call i32 @anetTcpServer(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %0, i8* null, i32 %40) #9, !dbg !4512
  %42 = load i32, i32* %2, align 4, !dbg !4513, !tbaa !1482
  %43 = sext i32 %42 to i64, !dbg !4514
  %44 = getelementptr inbounds i32, i32* %1, i64 %43, !dbg !4514
  store i32 %41, i32* %44, align 4, !dbg !4515, !tbaa !1482
  %45 = load i32, i32* %2, align 4, !dbg !4516, !tbaa !1482
  %46 = sext i32 %45 to i64, !dbg !4518
  %47 = getelementptr inbounds i32, i32* %1, i64 %46, !dbg !4518
  %48 = load i32, i32* %47, align 4, !dbg !4518, !tbaa !1482
  %49 = icmp eq i32 %48, -1, !dbg !4519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4520
  br i1 %49, label %54, label %50, !dbg !4520

; <label>:50:                                     ; preds = %38
  %51 = tail call i32 @anetNonBlock(i8* null, i32 %48) #9, !dbg !4521
  %52 = load i32, i32* %2, align 4, !dbg !4523, !tbaa !1482
  %53 = add nsw i32 %52, 1, !dbg !4523
  store i32 %53, i32* %2, align 4, !dbg !4523, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4524
  br label %60, !dbg !4524

; <label>:54:                                     ; preds = %38
  %55 = tail call i32* @__errno() #9, !dbg !4525
  %56 = load i32, i32* %55, align 4, !dbg !4525, !tbaa !1482
  %57 = icmp eq i32 %56, 106, !dbg !4527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4528
  br i1 %57, label %58, label %60, !dbg !4528

; <label>:58:                                     ; preds = %54
  %59 = add nuw nsw i32 %39, 1, !dbg !4529
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.326, i64 0, i64 0)) #10, !dbg !4531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4532
  br label %60, !dbg !4532

; <label>:60:                                     ; preds = %50, %58, %54, %35
  %61 = phi i32 [ %39, %50 ], [ %59, %58 ], [ %39, %54 ], [ 0, %35 ], !dbg !4533
  %62 = load i32, i32* %2, align 4, !dbg !4534, !tbaa !1482
  %63 = add nsw i32 %62, %61, !dbg !4536
  %64 = icmp eq i32 %63, 2, !dbg !4537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4539
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %64, label %123, label %79

; <label>:65:                                     ; preds = %8
  %66 = tail call i8* @strchr(i8* nonnull %11, i32 58) #9, !dbg !4540
  %67 = icmp eq i8* %66, null, !dbg !4540
  %68 = load i8*, i8** %10, align 8, !dbg !4542, !tbaa !1178
  %69 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !4542, !tbaa !3842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4544
  br i1 %67, label %72, label %70, !dbg !4544

; <label>:70:                                     ; preds = %65
  %71 = tail call i32 @anetTcp6Server(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %0, i8* %68, i32 %69) #9, !dbg !4545
  br label %74, !dbg !4547

; <label>:72:                                     ; preds = %65
  %73 = tail call i32 @anetTcpServer(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %0, i8* %68, i32 %69) #9, !dbg !4548
  br label %74

; <label>:74:                                     ; preds = %72, %70
  %75 = phi i32 [ %71, %70 ], [ %73, %72 ]
  %76 = load i32, i32* %2, align 4, !dbg !4542, !tbaa !1482
  %77 = sext i32 %76 to i64, !dbg !4542
  %78 = getelementptr inbounds i32, i32* %1, i64 %77, !dbg !4542
  store i32 %75, i32* %78, align 4, !dbg !4542, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %79, !dbg !4549

; <label>:79:                                     ; preds = %74, %60
  %80 = load i32, i32* %2, align 4, !dbg !4549, !tbaa !1482
  %81 = sext i32 %80 to i64, !dbg !4551
  %82 = getelementptr inbounds i32, i32* %1, i64 %81, !dbg !4551
  %83 = load i32, i32* %82, align 4, !dbg !4551, !tbaa !1482
  %84 = icmp eq i32 %83, -1, !dbg !4552
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4553
  br i1 %84, label %85, label %114, !dbg !4553

; <label>:85:                                     ; preds = %79
  %86 = load i8*, i8** %10, align 8, !dbg !4554, !tbaa !1178
  %87 = icmp eq i8* %86, null, !dbg !4554
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4554
  br i1 %87, label %89, label %88, !dbg !4554

; <label>:88:                                     ; preds = %85
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4554
  br label %89, !dbg !4554

; <label>:89:                                     ; preds = %85, %88
  %90 = phi i8* [ %86, %88 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.257, i64 0, i64 0), %85 ], !dbg !4554
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.327, i64 0, i64 0), i8* nonnull %90, i32 %0, i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #10, !dbg !4556
  %91 = tail call i32* @__errno() #9, !dbg !4557
  %92 = load i32, i32* %91, align 4, !dbg !4557, !tbaa !1482
  %93 = icmp eq i32 %92, 109, !dbg !4559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4560
  br i1 %93, label %118, label %94, !dbg !4560

; <label>:94:                                     ; preds = %89
  %95 = tail call i32* @__errno() #9, !dbg !4561
  %96 = load i32, i32* %95, align 4, !dbg !4561, !tbaa !1482
  %97 = icmp eq i32 %96, 123, !dbg !4562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4563
  br i1 %97, label %118, label %98, !dbg !4563

; <label>:98:                                     ; preds = %94
  %99 = tail call i32* @__errno() #9, !dbg !4564
  %100 = load i32, i32* %99, align 4, !dbg !4564, !tbaa !1482
  %101 = icmp eq i32 %100, 124, !dbg !4565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4566
  br i1 %101, label %118, label %102, !dbg !4566

; <label>:102:                                    ; preds = %98
  %103 = tail call i32* @__errno() #9, !dbg !4567
  %104 = load i32, i32* %103, align 4, !dbg !4567, !tbaa !1482
  %105 = icmp eq i32 %104, 96, !dbg !4568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4569
  br i1 %105, label %118, label %106, !dbg !4569

; <label>:106:                                    ; preds = %102
  %107 = tail call i32* @__errno() #9, !dbg !4570
  %108 = load i32, i32* %107, align 4, !dbg !4570, !tbaa !1482
  %109 = icmp eq i32 %108, 106, !dbg !4571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4572
  br i1 %109, label %118, label %110, !dbg !4572

; <label>:110:                                    ; preds = %106
  %111 = tail call i32* @__errno() #9, !dbg !4573
  %112 = load i32, i32* %111, align 4, !dbg !4573, !tbaa !1482
  %113 = icmp eq i32 %112, 125, !dbg !4574
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4575
  br i1 %113, label %118, label %123, !dbg !4575

; <label>:114:                                    ; preds = %79
  %115 = tail call i32 @anetNonBlock(i8* null, i32 %83) #9, !dbg !4576
  %116 = load i32, i32* %2, align 4, !dbg !4577, !tbaa !1482
  %117 = add nsw i32 %116, 1, !dbg !4577
  store i32 %117, i32* %2, align 4, !dbg !4577, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4578
  br label %118, !dbg !4578

; <label>:118:                                    ; preds = %89, %94, %98, %102, %106, %110, %114
  %119 = add nuw nsw i64 %9, 1, !dbg !4579
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4580
  %120 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !4581, !tbaa !3844
  %121 = sext i32 %120 to i64, !dbg !4582
  %122 = icmp slt i64 %119, %121, !dbg !4582
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4480
  br i1 %122, label %8, label %123, !dbg !4480, !llvm.loop !4583

; <label>:123:                                    ; preds = %118, %60, %110
  %124 = phi i32 [ -1, %110 ], [ 0, %60 ], [ 0, %118 ], !dbg !4585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4587
  ret i32 %124, !dbg !4587
}

; Function Attrs: noredzone
declare dso_local i32 @anetTcp6Server(i8*, i32, i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @anetTcpServer(i8*, i32, i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @resetServerStats() local_unnamed_addr #1 !dbg !4588 {
  %1 = alloca %struct.timeval, align 8
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70) to <2 x i64>*), align 8, !dbg !4591, !tbaa !2493
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !4592, !tbaa !4593
  store double 0.000000e+00, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 73), align 8, !dbg !4594, !tbaa !4595
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74) to <2 x i64>*), align 8, !dbg !4596, !tbaa !2493
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76) to <2 x i64>*), align 8, !dbg !4597, !tbaa !2493
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78) to <2 x i64>*), align 8, !dbg !4598, !tbaa !2493
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 80) to <2 x i64>*), align 8, !dbg !4599, !tbaa !2493
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 82), align 8, !dbg !4600, !tbaa !4601
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !4602, !tbaa !4603
  store double 0.000000e+00, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !4604, !tbaa !4605
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !4606, !tbaa !4607
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 87) to <2 x i64>*), align 8, !dbg !4608, !tbaa !2493
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 89), align 8, !dbg !4609, !tbaa !4610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4614
  %2 = bitcast %struct.timeval* %1 to i8*
  %3 = ptrtoint %struct.timeval* %1 to i64
  %4 = add i64 %3, 65536
  %5 = inttoptr i64 %4 to %struct.timeval*
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 0
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i64 0, i32 1
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 3), align 8, !dbg !4615, !tbaa !2490
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #4, !dbg !4624
  %8 = call i32 @gettimeofday(%struct.timeval* %5, i8* null) #9, !dbg !4626
  %9 = load i64, i64* %6, align 8, !dbg !4628, !tbaa !1316
  %10 = load i64, i64* %7, align 8, !dbg !4629, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #4, !dbg !4630
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4631
  %11 = mul nsw i64 %9, 1000000, !dbg !4632
  %12 = add nsw i64 %11, %10, !dbg !4634
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4635
  %13 = sdiv i64 %12, 1000, !dbg !4636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4637
  store i64 %13, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 0), align 8, !dbg !4638, !tbaa !2476
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 1), align 8, !dbg !4639, !tbaa !2481
  %14 = call i8* @memset(i8* nonnull bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 0) to i8*), i32 0, i64 128) #9, !dbg !4640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4614
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 3), align 8, !dbg !4615, !tbaa !2490
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #4, !dbg !4624
  %15 = call i32 @gettimeofday(%struct.timeval* %5, i8* null) #9, !dbg !4626
  %16 = load i64, i64* %6, align 8, !dbg !4628, !tbaa !1316
  %17 = load i64, i64* %7, align 8, !dbg !4629, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #4, !dbg !4630
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4631
  %18 = mul nsw i64 %16, 1000000, !dbg !4632
  %19 = add nsw i64 %18, %17, !dbg !4634
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4635
  %20 = sdiv i64 %19, 1000, !dbg !4636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4637
  store i64 %20, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 0), align 8, !dbg !4638, !tbaa !2476
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 1), align 8, !dbg !4639, !tbaa !2481
  %21 = call i8* @memset(i8* nonnull bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 0) to i8*), i32 0, i64 128) #9, !dbg !4640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4614
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 3), align 8, !dbg !4615, !tbaa !2490
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #4, !dbg !4624
  %22 = call i32 @gettimeofday(%struct.timeval* %5, i8* null) #9, !dbg !4626
  %23 = load i64, i64* %6, align 8, !dbg !4628, !tbaa !1316
  %24 = load i64, i64* %7, align 8, !dbg !4629, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #4, !dbg !4630
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4631
  %25 = mul nsw i64 %23, 1000000, !dbg !4632
  %26 = add nsw i64 %25, %24, !dbg !4634
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4635
  %27 = sdiv i64 %26, 1000, !dbg !4636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4637
  store i64 %27, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 0), align 8, !dbg !4638, !tbaa !2476
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 1), align 8, !dbg !4639, !tbaa !2481
  %28 = call i8* @memset(i8* nonnull bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 0) to i8*), i32 0, i64 128) #9, !dbg !4640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4614
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 95) to <2 x i64>*), align 8, !dbg !4642, !tbaa !2493
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 137), align 8, !dbg !4643, !tbaa !3898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4644
  ret void, !dbg !4644
}

; Function Attrs: noredzone nounwind
define dso_local void @initServer() local_unnamed_addr #1 !dbg !4645 {
  %1 = alloca %struct.sigaction, align 8
  %2 = tail call void (i32)* @signal(i32 1, void (i32)* inttoptr (i64 1 to void (i32)*)) #9, !dbg !4648
  %3 = tail call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #9, !dbg !4649
  %4 = bitcast %struct.sigaction* %1 to i8*, !dbg !4650
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #4, !dbg !4650
  %5 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 1, !dbg !4677
  %6 = call i32 @sigemptyset(i64* nonnull %5) #9, !dbg !4678
  %7 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 2, !dbg !4679
  store i32 0, i32* %7, align 8, !dbg !4680, !tbaa !4681
  %8 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 0, i32 0, !dbg !4683
  store void (i32)* @sigShutdownHandler, void (i32)** %8, align 8, !dbg !4684, !tbaa !1382
  %9 = call i32 @sigaction(i32 15, %struct.sigaction* nonnull %1, %struct.sigaction* null) #9, !dbg !4686
  %10 = call i32 @sigaction(i32 2, %struct.sigaction* nonnull %1, %struct.sigaction* null) #9, !dbg !4687
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #4, !dbg !4688
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4688
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 174), align 8, !dbg !4689, !tbaa !1827
  %12 = icmp eq i32 %11, 0, !dbg !4691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4692
  br i1 %12, label %16, label %13, !dbg !4692

; <label>:13:                                     ; preds = %0
  %14 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 175), align 8, !dbg !4693, !tbaa !3872
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 176), align 8, !dbg !4695, !tbaa !3874
  call void @openlog(i8* %14, i32 25, i32 %15) #9, !dbg !4696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4697
  br label %16, !dbg !4697

; <label>:16:                                     ; preds = %0, %13
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 5), align 4, !dbg !4698, !tbaa !3121
  store i32 %17, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !4699, !tbaa !2815
  %18 = call i32 @getpid() #9, !dbg !4700
  store i32 %18, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 0), align 8, !dbg !4701, !tbaa !1808
  store %struct.client* null, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 43), align 8, !dbg !4702, !tbaa !4703
  %19 = call %struct.list* @listCreate() #9, !dbg !4704
  store %struct.list* %19, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !4705, !tbaa !2810
  %20 = call %struct.rax* @raxNew() #9, !dbg !4706
  store %struct.rax* %20, %struct.rax** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 44), align 8, !dbg !4707, !tbaa !4708
  %21 = call %struct.list* @listCreate() #9, !dbg !4709
  store %struct.list* %21, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 39), align 8, !dbg !4710, !tbaa !4711
  %22 = call %struct.list* @listCreate() #9, !dbg !4712
  store %struct.list* %22, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !4713, !tbaa !3255
  %23 = call %struct.list* @listCreate() #9, !dbg !4714
  store %struct.list* %23, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 42), align 8, !dbg !4715, !tbaa !1284
  %24 = call %struct.list* @listCreate() #9, !dbg !4716
  store %struct.list* %24, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !4717, !tbaa !4718
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !4719, !tbaa !3511
  %25 = call %struct.list* @listCreate() #9, !dbg !4720
  store %struct.list* %25, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 235), align 8, !dbg !4721, !tbaa !3530
  %26 = call %struct.list* @listCreate() #9, !dbg !4722
  store %struct.list* %26, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 236), align 8, !dbg !4723, !tbaa !4724
  %27 = call %struct.list* @listCreate() #9, !dbg !4725
  store %struct.list* %27, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 224), align 8, !dbg !4726, !tbaa !3524
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 225), align 8, !dbg !4727, !tbaa !3495
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 45), align 8, !dbg !4728, !tbaa !4729
  %28 = call i64 @zmalloc_get_memory_size() #9, !dbg !4730
  store i64 %28, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 295), align 8, !dbg !4731, !tbaa !4732
  call void @createSharedObjects() #10, !dbg !4733
  call void @adjustOpenFilesLimit() #10, !dbg !4734
  %29 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 226), align 4, !dbg !4735, !tbaa !3932
  %30 = add i32 %29, 128, !dbg !4736
  %31 = call %struct.aeEventLoop* @aeCreateEventLoop(i32 %30) #9, !dbg !4737
  store %struct.aeEventLoop* %31, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4738, !tbaa !4739
  %32 = icmp eq %struct.aeEventLoop* %31, null, !dbg !4740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4742
  br i1 %32, label %33, label %37, !dbg !4742

; <label>:33:                                     ; preds = %16
  %34 = call i32* @__errno() #9, !dbg !4743
  %35 = load i32, i32* %34, align 4, !dbg !4743, !tbaa !1482
  %36 = call i8* @strerror(i32 %35) #9, !dbg !4745
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.328, i64 0, i64 0), i8* %36) #10, !dbg !4746
  call void @exit(i32 1) #12, !dbg !4747
  unreachable

; <label>:37:                                     ; preds = %16
  %38 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4748, !tbaa !2929
  %39 = sext i32 %38 to i64, !dbg !4749
  %40 = shl nsw i64 %39, 6, !dbg !4750
  %41 = call i8* @zmalloc(i64 %40) #9, !dbg !4751
  store i8* %41, i8** bitcast (%struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7) to i8**), align 8, !dbg !4752, !tbaa !2369
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !4753, !tbaa !3840
  %43 = icmp eq i32 %42, 0, !dbg !4755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4756
  br i1 %43, label %48, label %44, !dbg !4756

; <label>:44:                                     ; preds = %37
  %45 = call i32 @listenToPort(i32 %42, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 33, i64 0), i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34)) #10, !dbg !4757
  %46 = icmp eq i32 %45, -1, !dbg !4758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4759
  br i1 %46, label %47, label %48, !dbg !4759

; <label>:47:                                     ; preds = %44
  call void @exit(i32 1) #12, !dbg !4760
  unreachable

; <label>:48:                                     ; preds = %37, %44
  %49 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 8, !dbg !4761, !tbaa !3846
  %50 = icmp eq i8* %49, null, !dbg !4763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4764
  br i1 %50, label %61, label %51, !dbg !4764

; <label>:51:                                     ; preds = %48
  %52 = call i32 @unlink(i8* nonnull %49) #9, !dbg !4765
  %53 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 8, !dbg !4767, !tbaa !3846
  %54 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 32), align 8, !dbg !4768, !tbaa !3848
  %55 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 28), align 4, !dbg !4769, !tbaa !3842
  %56 = call i32 @anetUnixServer(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i8* %53, i32 %54, i32 %55) #9, !dbg !4770
  store i32 %56, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !4771, !tbaa !3852
  %57 = icmp eq i32 %56, -1, !dbg !4772
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4774
  br i1 %57, label %58, label %59, !dbg !4774

; <label>:58:                                     ; preds = %51
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.329, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #10, !dbg !4775
  call void @exit(i32 1) #12, !dbg !4777
  unreachable

; <label>:59:                                     ; preds = %51
  %60 = call i32 @anetNonBlock(i8* null, i32 %56) #9, !dbg !4778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4779
  br label %61, !dbg !4779

; <label>:61:                                     ; preds = %48, %59
  %62 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !4780, !tbaa !3850
  %63 = icmp eq i32 %62, 0, !dbg !4782
  %64 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !4783
  %65 = icmp slt i32 %64, 0, !dbg !4784
  %66 = and i1 %63, %65, !dbg !4785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4785
  br i1 %66, label %67, label %68, !dbg !4785

; <label>:67:                                     ; preds = %61
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.330, i64 0, i64 0)) #10, !dbg !4786
  call void @exit(i32 1) #12, !dbg !4788
  unreachable

; <label>:68:                                     ; preds = %61
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4790
  %69 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4792, !tbaa !2929
  %70 = icmp sgt i32 %69, 0, !dbg !4794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4795
  br i1 %70, label %71, label %98, !dbg !4795

; <label>:71:                                     ; preds = %68, %71
  %72 = phi i64 [ %94, %71 ], [ 0, %68 ]
  %73 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @dbDictType, i8* null) #9, !dbg !4796
  %74 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4798, !tbaa !2369
  %75 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %74, i64 %72, i32 0, !dbg !4799
  store %struct.dict* %73, %struct.dict** %75, align 8, !dbg !4800, !tbaa !2372
  %76 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @keyptrDictType, i8* null) #9, !dbg !4801
  %77 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4802, !tbaa !2369
  %78 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %77, i64 %72, i32 1, !dbg !4803
  store %struct.dict* %76, %struct.dict** %78, align 8, !dbg !4804, !tbaa !2391
  %79 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @keylistDictType, i8* null) #9, !dbg !4805
  %80 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4806, !tbaa !2369
  %81 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %80, i64 %72, i32 2, !dbg !4807
  store %struct.dict* %79, %struct.dict** %81, align 8, !dbg !4808, !tbaa !4809
  %82 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @objectKeyPointerValueDictType, i8* null) #9, !dbg !4810
  %83 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4811, !tbaa !2369
  %84 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %83, i64 %72, i32 3, !dbg !4812
  store %struct.dict* %82, %struct.dict** %84, align 8, !dbg !4813, !tbaa !4814
  %85 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @keylistDictType, i8* null) #9, !dbg !4815
  %86 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4816, !tbaa !2369
  %87 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %86, i64 %72, i32 4, !dbg !4817
  store %struct.dict* %85, %struct.dict** %87, align 8, !dbg !4818, !tbaa !4819
  %88 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %86, i64 %72, i32 5, !dbg !4820
  %89 = trunc i64 %72 to i32, !dbg !4821
  store i32 %89, i32* %88, align 8, !dbg !4821, !tbaa !4822
  %90 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %86, i64 %72, i32 6, !dbg !4823
  store i64 0, i64* %90, align 8, !dbg !4824, !tbaa !4825
  %91 = call %struct.list* @listCreate() #9, !dbg !4826
  %92 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4827, !tbaa !2369
  %93 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %92, i64 %72, i32 7, !dbg !4828
  store %struct.list* %91, %struct.list** %93, align 8, !dbg !4829, !tbaa !4830
  %94 = add nuw nsw i64 %72, 1, !dbg !4831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4832
  %95 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4792, !tbaa !2929
  %96 = sext i32 %95 to i64, !dbg !4794
  %97 = icmp slt i64 %94, %96, !dbg !4794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4795
  br i1 %97, label %71, label %98, !dbg !4795, !llvm.loop !4833

; <label>:98:                                     ; preds = %71, %68
  call void @evictionPoolAlloc() #9, !dbg !4835
  %99 = call %struct.dict* @dictCreate(%struct.dictType* nonnull @keylistDictType, i8* null) #9, !dbg !4836
  store %struct.dict* %99, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 255), align 8, !dbg !4837, !tbaa !4838
  %100 = call %struct.list* @listCreate() #9, !dbg !4839
  store %struct.list* %100, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 256), align 8, !dbg !4840, !tbaa !4841
  %101 = getelementptr inbounds %struct.list, %struct.list* %100, i64 0, i32 3, !dbg !4842
  store void (i8*)* @freePubsubPattern, void (i8*)** %101, align 8, !dbg !4842, !tbaa !4843
  %102 = getelementptr inbounds %struct.list, %struct.list* %100, i64 0, i32 4, !dbg !4844
  store i32 (i8*, i8*)* @listMatchPubsubPattern, i32 (i8*, i8*)** %102, align 8, !dbg !4844, !tbaa !4845
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 18), align 4, !dbg !4846, !tbaa !3147
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !4847, !tbaa !2434
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !4848, !tbaa !3298
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !4849, !tbaa !4850
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 164), align 8, !dbg !4851, !tbaa !3466
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 170, i64 0), align 8, !dbg !4852, !tbaa !1482
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 170, i64 1), align 4, !dbg !4853, !tbaa !1482
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 171, i32 2), align 8, !dbg !4854, !tbaa !4855
  call void @aofRewriteBufferReset() #9, !dbg !4856
  %103 = call i8* @sdsempty() #9, !dbg !4857
  store i8* %103, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 129), align 8, !dbg !4858, !tbaa !4859
  %104 = call i64 @time(i64* null) #9, !dbg !4860
  store i64 %104, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8, !dbg !4861, !tbaa !4862
  store <2 x i64> <i64 0, i64 -1>, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 161) to <2 x i64>*), align 8, !dbg !4863, !tbaa !2045
  store i64 -1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !4864, !tbaa !4865
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !4866, !tbaa !4867
  call void @resetServerStats() #10, !dbg !4868
  %105 = call i64 @time(i64* null) #9, !dbg !4869
  store i64 %105, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !4870, !tbaa !4871
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !4872, !tbaa !3165
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 97) to <2 x i64>*), align 8, !dbg !4873, !tbaa !2045
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 0) to <2 x i64>*), align 8, !dbg !4874, !tbaa !2045
  store <2 x i64> zeroinitializer, <2 x i64>* bitcast (i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 2) to <2 x i64>*), align 8, !dbg !4875, !tbaa !2045
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 4), align 8, !dbg !4876, !tbaa !3181
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !4877, !tbaa !4878
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 140), align 8, !dbg !4879, !tbaa !3414
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 141), align 4, !dbg !4880, !tbaa !4881
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 192), align 8, !dbg !4882, !tbaa !4883
  %106 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4884, !tbaa !4739
  %107 = call i64 @aeCreateTimeEvent(%struct.aeEventLoop* %106, i64 1, i32 (%struct.aeEventLoop*, i64, i8*)* nonnull @serverCron, i8* null, void (%struct.aeEventLoop*, i8*)* null) #9, !dbg !4886
  %108 = icmp eq i64 %107, -1, !dbg !4887
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4888
  br i1 %108, label %109, label %110, !dbg !4888

; <label>:109:                                    ; preds = %98
  call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 2149, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.332, i64 0, i64 0)) #9, !dbg !4889
  call void @_exit(i32 1) #12, !dbg !4889
  unreachable

; <label>:110:                                    ; preds = %98
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4891
  %111 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !4893, !tbaa !3850
  %112 = icmp sgt i32 %111, 0, !dbg !4895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4896
  br i1 %112, label %113, label %126, !dbg !4896

; <label>:113:                                    ; preds = %110, %121
  %114 = phi i64 [ %122, %121 ], [ 0, %110 ]
  %115 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4897, !tbaa !4739
  %116 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 33, i64 %114, !dbg !4900
  %117 = load i32, i32* %116, align 4, !dbg !4900, !tbaa !1482
  %118 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* %115, i32 %117, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @acceptTcpHandler, i8* null) #9, !dbg !4901
  %119 = icmp eq i32 %118, -1, !dbg !4902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4903
  br i1 %119, label %120, label %121, !dbg !4903

; <label>:120:                                    ; preds = %113
  call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 2160, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.333, i64 0, i64 0)) #9, !dbg !4904
  call void @_exit(i32 1) #12, !dbg !4904
  unreachable

; <label>:121:                                    ; preds = %113
  %122 = add nuw nsw i64 %114, 1, !dbg !4906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4907
  %123 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !4893, !tbaa !3850
  %124 = sext i32 %123 to i64, !dbg !4895
  %125 = icmp slt i64 %122, %124, !dbg !4895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4896
  br i1 %125, label %113, label %126, !dbg !4896, !llvm.loop !4908

; <label>:126:                                    ; preds = %121, %110
  %127 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !4910, !tbaa !3852
  %128 = icmp sgt i32 %127, 0, !dbg !4912
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4913
  br i1 %128, label %129, label %134, !dbg !4913

; <label>:129:                                    ; preds = %126
  %130 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4914, !tbaa !4739
  %131 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* %130, i32 %127, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @acceptUnixHandler, i8* null) #9, !dbg !4915
  %132 = icmp eq i32 %131, -1, !dbg !4916
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4917
  br i1 %132, label %133, label %134, !dbg !4917

; <label>:133:                                    ; preds = %129
  call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 2164, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.334, i64 0, i64 0)) #9, !dbg !4918
  call void @_exit(i32 1) #12, !dbg !4918
  unreachable

; <label>:134:                                    ; preds = %129, %126
  %135 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !4919, !tbaa !4739
  %136 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0), align 8, !dbg !4921, !tbaa !1482
  %137 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* %135, i32 %136, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @moduleBlockedClientPipeReadable, i8* null) #9, !dbg !4922
  %138 = icmp eq i32 %137, -1, !dbg !4923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4924
  br i1 %138, label %139, label %140, !dbg !4924

; <label>:139:                                    ; preds = %134
  call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 2173, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.335, i64 0, i64 0)) #9, !dbg !4925
  call void @_exit(i32 1) #12, !dbg !4925
  unreachable

; <label>:140:                                    ; preds = %134
  %141 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !4927, !tbaa !3371
  %142 = icmp eq i32 %141, 1, !dbg !4929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4930
  br i1 %142, label %143, label %151, !dbg !4930

; <label>:143:                                    ; preds = %140
  %144 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 119), align 8, !dbg !4931, !tbaa !3918
  %145 = call i32 (i8*, i32, ...) @open(i8* %144, i32 521, i32 420) #9, !dbg !4933
  store i32 %145, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 130), align 8, !dbg !4934, !tbaa !3900
  %146 = icmp eq i32 %145, -1, !dbg !4935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4937
  br i1 %146, label %147, label %151, !dbg !4937

; <label>:147:                                    ; preds = %143
  %148 = call i32* @__errno() #9, !dbg !4938
  %149 = load i32, i32* %148, align 4, !dbg !4938, !tbaa !1482
  %150 = call i8* @strerror(i32 %149) #9, !dbg !4940
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.336, i64 0, i64 0), i8* %150) #10, !dbg !4941
  call void @exit(i32 1) #12, !dbg !4942
  unreachable

; <label>:151:                                    ; preds = %143, %140
  %152 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !4943, !tbaa !3838
  %153 = icmp eq i32 %152, 32, !dbg !4945
  %154 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !4946
  %155 = icmp eq i64 %154, 0, !dbg !4947
  %156 = and i1 %153, %155, !dbg !4948
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4948
  br i1 %156, label %157, label %158, !dbg !4948

; <label>:157:                                    ; preds = %151
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.337, i64 0, i64 0)) #10, !dbg !4949
  store i64 3221225472, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !4951, !tbaa !3937
  store i32 1792, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 228), align 8, !dbg !4952, !tbaa !4953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4954
  br label %158, !dbg !4954

; <label>:158:                                    ; preds = %157, %151
  %159 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !4955, !tbaa !2593
  %160 = icmp eq i32 %159, 0, !dbg !4957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4958
  br i1 %160, label %162, label %161, !dbg !4958

; <label>:161:                                    ; preds = %158
  call void @clusterInit() #9, !dbg !4959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4959
  br label %162, !dbg !4959

; <label>:162:                                    ; preds = %158, %161
  call void @replicationScriptCacheInit() #9, !dbg !4960
  call void @scriptingInit(i32 1) #9, !dbg !4961
  call void @slowlogInit() #9, !dbg !4962
  call void @latencyMonitorInit() #9, !dbg !4963
  call void @bioInit() #9, !dbg !4964
  %163 = call i64 @zmalloc_used_memory() #9, !dbg !4965
  store i64 %163, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 21), align 8, !dbg !4966, !tbaa !4967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4968
  ret void, !dbg !4968
}

; Function Attrs: noredzone
declare dso_local void (i32)* @signal(i32, void (i32)*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @setupSignalHandlers() local_unnamed_addr #1 !dbg !4651 {
  %1 = alloca %struct.sigaction, align 8
  %2 = bitcast %struct.sigaction* %1 to i8*, !dbg !4969
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #4, !dbg !4969
  %3 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 1, !dbg !4970
  %4 = call i32 @sigemptyset(i64* nonnull %3) #9, !dbg !4971
  %5 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 2, !dbg !4972
  store i32 0, i32* %5, align 8, !dbg !4973, !tbaa !4681
  %6 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %1, i64 0, i32 0, i32 0, !dbg !4974
  store void (i32)* @sigShutdownHandler, void (i32)** %6, align 8, !dbg !4975, !tbaa !1382
  %7 = call i32 @sigaction(i32 15, %struct.sigaction* nonnull %1, %struct.sigaction* null) #9, !dbg !4977
  %8 = call i32 @sigaction(i32 2, %struct.sigaction* nonnull %1, %struct.sigaction* null) #9, !dbg !4978
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #4, !dbg !4979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4979
  ret void, !dbg !4979
}

; Function Attrs: noredzone
declare dso_local void @openlog(i8*, i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.list* @listCreate() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.rax* @raxNew() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_get_memory_size() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.aeEventLoop* @aeCreateEventLoop(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @unlink(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @anetUnixServer(i8*, i8*, i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @evictionPoolAlloc() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @freePubsubPattern(i8*) #0

; Function Attrs: noredzone
declare dso_local i32 @listMatchPubsubPattern(i8*, i8*) #0

; Function Attrs: noredzone
declare dso_local void @aofRewriteBufferReset() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @aeCreateTimeEvent(%struct.aeEventLoop*, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, i8*, void (%struct.aeEventLoop*, i8*)*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @aeCreateFileEvent(%struct.aeEventLoop*, i32, i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @acceptTcpHandler(%struct.aeEventLoop*, i32, i8*, i32) #0

; Function Attrs: noredzone
declare dso_local void @acceptUnixHandler(%struct.aeEventLoop*, i32, i8*, i32) #0

; Function Attrs: noredzone
declare dso_local void @moduleBlockedClientPipeReadable(%struct.aeEventLoop*, i32, i8*, i32) #0

; Function Attrs: noredzone
declare dso_local void @clusterInit() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @replicationScriptCacheInit() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @scriptingInit(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @slowlogInit() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @latencyMonitorInit() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @bioInit() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @_serverAssert(i8*, i8*, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @resetCommandTableStats() local_unnamed_addr #1 !dbg !4980 {
  %1 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !4985, !tbaa !1369
  %2 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %1) #9, !dbg !4986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4988
  %3 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %2) #9, !dbg !4989
  %4 = icmp eq %struct.dictEntry* %3, null, !dbg !4991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4988
  br i1 %4, label %14, label %5, !dbg !4988

; <label>:5:                                      ; preds = %0, %5
  %6 = phi %struct.dictEntry* [ %12, %5 ], [ %3, %0 ]
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 1, i32 0, !dbg !4992
  %8 = bitcast i8** %7 to %struct.redisCommand**, !dbg !4992
  %9 = load %struct.redisCommand*, %struct.redisCommand** %8, align 8, !dbg !4992, !tbaa !1382
  %10 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %9, i64 0, i32 9, !dbg !4995
  %11 = bitcast i64* %10 to <2 x i64>*, !dbg !4996
  store <2 x i64> zeroinitializer, <2 x i64>* %11, align 8, !dbg !4996, !tbaa !2493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4988
  %12 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %2) #9, !dbg !4989
  %13 = icmp eq %struct.dictEntry* %12, null, !dbg !4991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4988
  br i1 %13, label %14, label %5, !dbg !4988, !llvm.loop !4997

; <label>:14:                                     ; preds = %5, %0
  tail call void @dictReleaseIterator(%struct.dictIterator* %2) #9, !dbg !4999
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5000
  ret void, !dbg !5000
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @redisOpArrayInit(%struct.redisOpArray* nocapture) local_unnamed_addr #1 !dbg !5001 {
  %2 = getelementptr inbounds %struct.redisOpArray, %struct.redisOpArray* %0, i64 0, i32 0, !dbg !5008
  store %struct.redisOp* null, %struct.redisOp** %2, align 8, !dbg !5009, !tbaa !5010
  %3 = getelementptr inbounds %struct.redisOpArray, %struct.redisOpArray* %0, i64 0, i32 1, !dbg !5011
  store i32 0, i32* %3, align 8, !dbg !5012, !tbaa !5013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5014
  ret void, !dbg !5014
}

; Function Attrs: noredzone nounwind
define dso_local i32 @redisOpArrayAppend(%struct.redisOpArray* nocapture, %struct.redisCommand*, i32, %struct.redisObject**, i32, i32) local_unnamed_addr #1 !dbg !5015 {
  %7 = bitcast %struct.redisOpArray* %0 to i8**, !dbg !5032
  %8 = load i8*, i8** %7, align 8, !dbg !5032, !tbaa !5010
  %9 = getelementptr inbounds %struct.redisOpArray, %struct.redisOpArray* %0, i64 0, i32 1, !dbg !5033
  %10 = load i32, i32* %9, align 8, !dbg !5033, !tbaa !5013
  %11 = add nsw i32 %10, 1, !dbg !5034
  %12 = sext i32 %11 to i64, !dbg !5035
  %13 = shl nsw i64 %12, 5, !dbg !5036
  %14 = tail call i8* @zrealloc(i8* %8, i64 %13) #9, !dbg !5037
  %15 = bitcast i8* %14 to %struct.redisOp*, !dbg !5037
  store i8* %14, i8** %7, align 8, !dbg !5038, !tbaa !5010
  %16 = load i32, i32* %9, align 8, !dbg !5039, !tbaa !5013
  %17 = sext i32 %16 to i64, !dbg !5040
  %18 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %15, i64 %17, i32 4, !dbg !5041
  store %struct.redisCommand* %1, %struct.redisCommand** %18, align 8, !dbg !5042, !tbaa !5043
  %19 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %15, i64 %17, i32 2, !dbg !5045
  store i32 %2, i32* %19, align 4, !dbg !5046, !tbaa !5047
  %20 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %15, i64 %17, i32 0, !dbg !5048
  store %struct.redisObject** %3, %struct.redisObject*** %20, align 8, !dbg !5049, !tbaa !5050
  %21 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %15, i64 %17, i32 1, !dbg !5051
  store i32 %4, i32* %21, align 8, !dbg !5052, !tbaa !5053
  %22 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %15, i64 %17, i32 3, !dbg !5054
  store i32 %5, i32* %22, align 8, !dbg !5055, !tbaa !5056
  %23 = add nsw i32 %16, 1, !dbg !5057
  store i32 %23, i32* %9, align 8, !dbg !5057, !tbaa !5013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5058
  ret i32 %23, !dbg !5058
}

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @redisOpArrayFree(%struct.redisOpArray* nocapture) local_unnamed_addr #1 !dbg !5059 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5066
  %2 = getelementptr inbounds %struct.redisOpArray, %struct.redisOpArray* %0, i64 0, i32 1, !dbg !5067
  %3 = load i32, i32* %2, align 8, !dbg !5067, !tbaa !5013
  %4 = icmp eq i32 %3, 0, !dbg !5066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5066
  br i1 %4, label %32, label %5, !dbg !5066

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.redisOpArray, %struct.redisOpArray* %0, i64 0, i32 0
  br label %7, !dbg !5066

; <label>:7:                                      ; preds = %5, %27
  %8 = phi i32 [ %3, %5 ], [ %30, %27 ]
  %9 = add nsw i32 %8, -1, !dbg !5068
  store i32 %9, i32* %2, align 8, !dbg !5068, !tbaa !5013
  %10 = load %struct.redisOp*, %struct.redisOp** %6, align 8, !dbg !5069, !tbaa !5010
  %11 = sext i32 %9 to i64, !dbg !5070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5072
  %12 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %10, i64 %11, i32 1, !dbg !5074
  %13 = load i32, i32* %12, align 8, !dbg !5074, !tbaa !5053
  %14 = icmp sgt i32 %13, 0, !dbg !5076
  %15 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %10, i64 %11, i32 0, !dbg !5077
  %16 = load %struct.redisObject**, %struct.redisObject*** %15, align 8, !dbg !5077, !tbaa !5050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5078
  br i1 %14, label %17, label %27, !dbg !5078

; <label>:17:                                     ; preds = %7, %17
  %18 = phi i64 [ %22, %17 ], [ 0, %7 ]
  %19 = phi %struct.redisObject** [ %26, %17 ], [ %16, %7 ]
  %20 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %19, i64 %18, !dbg !5079
  %21 = load %struct.redisObject*, %struct.redisObject** %20, align 8, !dbg !5079, !tbaa !1178
  tail call void @decrRefCount(%struct.redisObject* %21) #9, !dbg !5080
  %22 = add nuw nsw i64 %18, 1, !dbg !5081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5082
  %23 = load i32, i32* %12, align 8, !dbg !5074, !tbaa !5053
  %24 = sext i32 %23 to i64, !dbg !5076
  %25 = icmp slt i64 %22, %24, !dbg !5076
  %26 = load %struct.redisObject**, %struct.redisObject*** %15, align 8, !dbg !5077, !tbaa !5050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5078
  br i1 %25, label %17, label %27, !dbg !5078, !llvm.loop !5083

; <label>:27:                                     ; preds = %17, %7
  %28 = phi %struct.redisObject** [ %16, %7 ], [ %26, %17 ], !dbg !5077
  %29 = bitcast %struct.redisObject** %28 to i8*, !dbg !5085
  tail call void @zfree(i8* %29) #9, !dbg !5086
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5066
  %30 = load i32, i32* %2, align 8, !dbg !5067, !tbaa !5013
  %31 = icmp eq i32 %30, 0, !dbg !5066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5066
  br i1 %31, label %32, label %7, !dbg !5066, !llvm.loop !5087

; <label>:32:                                     ; preds = %27, %1
  %33 = bitcast %struct.redisOpArray* %0 to i8**, !dbg !5089
  %34 = load i8*, i8** %33, align 8, !dbg !5089, !tbaa !5010
  tail call void @zfree(i8* %34) #9, !dbg !5090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5091
  ret void, !dbg !5091
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisCommand* @lookupCommand(i8*) local_unnamed_addr #1 !dbg !1425 {
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !5093, !tbaa !1369
  %3 = tail call i8* @dictFetchValue(%struct.dict* %2, i8* %0) #9, !dbg !5094
  %4 = bitcast i8* %3 to %struct.redisCommand*, !dbg !5094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5095
  ret %struct.redisCommand* %4, !dbg !5095
}

; Function Attrs: noredzone
declare dso_local i8* @dictFetchValue(%struct.dict*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local %struct.redisCommand* @lookupCommandOrOriginal(i8*) local_unnamed_addr #1 !dbg !5096 {
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !5101, !tbaa !1369
  %3 = tail call i8* @dictFetchValue(%struct.dict* %2, i8* %0) #9, !dbg !5102
  %4 = icmp eq i8* %3, null, !dbg !5104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5106
  br i1 %4, label %5, label %8, !dbg !5106

; <label>:5:                                      ; preds = %1
  %6 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !5107, !tbaa !4055
  %7 = tail call i8* @dictFetchValue(%struct.dict* %6, i8* %0) #9, !dbg !5108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5109
  br label %8, !dbg !5109

; <label>:8:                                      ; preds = %1, %5
  %9 = phi i8* [ %3, %1 ], [ %7, %5 ]
  %10 = bitcast i8* %9 to %struct.redisCommand*, !dbg !5110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5111
  ret %struct.redisCommand* %10, !dbg !5111
}

; Function Attrs: noredzone nounwind
define dso_local void @propagate(%struct.redisCommand*, i32, %struct.redisObject**, i32, i32) local_unnamed_addr #1 !dbg !5112 {
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !5126, !tbaa !3371
  %7 = icmp eq i32 %6, 0, !dbg !5128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5129
  br i1 %7, label %12, label %8, !dbg !5129

; <label>:8:                                      ; preds = %5
  %9 = and i32 %4, 1, !dbg !5130
  %10 = icmp eq i32 %9, 0, !dbg !5130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5131
  br i1 %10, label %12, label %11, !dbg !5131

; <label>:11:                                     ; preds = %8
  tail call void @feedAppendOnlyFile(%struct.redisCommand* %0, i32 %1, %struct.redisObject** %2, i32 %3) #9, !dbg !5132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5132
  br label %12, !dbg !5132

; <label>:12:                                     ; preds = %8, %5, %11
  %13 = and i32 %4, 2, !dbg !5133
  %14 = icmp eq i32 %13, 0, !dbg !5133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5135
  br i1 %14, label %17, label %15, !dbg !5135

; <label>:15:                                     ; preds = %12
  %16 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !5136, !tbaa !3255
  tail call void @replicationFeedSlaves(%struct.list* %16, i32 %1, %struct.redisObject** %2, i32 %3) #9, !dbg !5137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5137
  br label %17, !dbg !5137

; <label>:17:                                     ; preds = %12, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5138
  ret void, !dbg !5138
}

; Function Attrs: noredzone
declare dso_local void @feedAppendOnlyFile(%struct.redisCommand*, i32, %struct.redisObject**, i32) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @alsoPropagate(%struct.redisCommand*, i32, %struct.redisObject** nocapture readonly, i32, i32) local_unnamed_addr #1 !dbg !5139 {
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !5153, !tbaa !3866
  %7 = icmp eq i32 %6, 0, !dbg !5155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5156
  br i1 %7, label %8, label %43, !dbg !5156

; <label>:8:                                      ; preds = %5
  %9 = sext i32 %3 to i64, !dbg !5157
  %10 = shl nsw i64 %9, 3, !dbg !5158
  %11 = tail call i8* @zmalloc(i64 %10) #9, !dbg !5159
  %12 = bitcast i8* %11 to %struct.redisObject**, !dbg !5159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5162
  %13 = icmp sgt i32 %3, 0, !dbg !5164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5166
  br i1 %13, label %14, label %26, !dbg !5166

; <label>:14:                                     ; preds = %8
  %15 = zext i32 %3 to i64
  br label %16, !dbg !5167

; <label>:16:                                     ; preds = %16, %14
  %17 = phi i64 [ 0, %14 ], [ %24, %16 ]
  %18 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %2, i64 %17, !dbg !5167
  %19 = bitcast %struct.redisObject** %18 to i64*, !dbg !5167
  %20 = load i64, i64* %19, align 8, !dbg !5167, !tbaa !1178
  %21 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %12, i64 %17, !dbg !5169
  %22 = bitcast %struct.redisObject** %21 to i64*, !dbg !5170
  store i64 %20, i64* %22, align 8, !dbg !5170, !tbaa !1178
  %23 = load %struct.redisObject*, %struct.redisObject** %18, align 8, !dbg !5171, !tbaa !1178
  tail call void @incrRefCount(%struct.redisObject* %23) #9, !dbg !5172
  %24 = add nuw nsw i64 %17, 1, !dbg !5173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5166
  %25 = icmp eq i64 %24, %15, !dbg !5164
  br i1 %25, label %26, label %16, !dbg !5166, !llvm.loop !5175

; <label>:26:                                     ; preds = %16, %8
  %27 = load i8*, i8** bitcast (%struct.redisOpArray* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172) to i8**), align 8, !dbg !5184, !tbaa !5010
  %28 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 1), align 8, !dbg !5185, !tbaa !5013
  %29 = add nsw i32 %28, 1, !dbg !5186
  %30 = sext i32 %29 to i64, !dbg !5187
  %31 = shl nsw i64 %30, 5, !dbg !5188
  %32 = tail call i8* @zrealloc(i8* %27, i64 %31) #9, !dbg !5189
  %33 = bitcast i8* %32 to %struct.redisOp*, !dbg !5189
  store i8* %32, i8** bitcast (%struct.redisOpArray* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172) to i8**), align 8, !dbg !5190, !tbaa !5010
  %34 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 1), align 8, !dbg !5191, !tbaa !5013
  %35 = sext i32 %34 to i64, !dbg !5192
  %36 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %33, i64 %35, i32 4, !dbg !5193
  store %struct.redisCommand* %0, %struct.redisCommand** %36, align 8, !dbg !5194, !tbaa !5043
  %37 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %33, i64 %35, i32 2, !dbg !5195
  store i32 %1, i32* %37, align 4, !dbg !5196, !tbaa !5047
  %38 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %33, i64 %35, i32 0, !dbg !5197
  %39 = bitcast %struct.redisObject*** %38 to i8**, !dbg !5198
  store i8* %11, i8** %39, align 8, !dbg !5198, !tbaa !5050
  %40 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %33, i64 %35, i32 1, !dbg !5199
  store i32 %3, i32* %40, align 8, !dbg !5200, !tbaa !5053
  %41 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %33, i64 %35, i32 3, !dbg !5201
  store i32 %4, i32* %41, align 8, !dbg !5202, !tbaa !5056
  %42 = add nsw i32 %34, 1, !dbg !5203
  store i32 %42, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 1), align 8, !dbg !5203, !tbaa !5013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5204
  br label %43, !dbg !5205

; <label>:43:                                     ; preds = %5, %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5206
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5205
  ret void, !dbg !5205
}

; Function Attrs: noredzone
declare dso_local void @incrRefCount(%struct.redisObject*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @forceCommandPropagation(%struct.client* nocapture, i32) local_unnamed_addr #1 !dbg !5207 {
  %3 = and i32 %1, 2, !dbg !5215
  %4 = icmp eq i32 %3, 0, !dbg !5215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5217
  br i1 %4, label %9, label %5, !dbg !5217

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5218
  %7 = load i32, i32* %6, align 8, !dbg !5219, !tbaa !1216
  %8 = or i32 %7, 32768, !dbg !5219
  store i32 %8, i32* %6, align 8, !dbg !5219, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5220
  br label %9, !dbg !5220

; <label>:9:                                      ; preds = %2, %5
  %10 = and i32 %1, 1, !dbg !5221
  %11 = icmp eq i32 %10, 0, !dbg !5221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5223
  br i1 %11, label %16, label %12, !dbg !5223

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5224
  %14 = load i32, i32* %13, align 8, !dbg !5225, !tbaa !1216
  %15 = or i32 %14, 16384, !dbg !5225
  store i32 %15, i32* %13, align 8, !dbg !5225, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5226
  br label %16, !dbg !5226

; <label>:16:                                     ; preds = %9, %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  ret void, !dbg !5227
}

; Function Attrs: noredzone nounwind
define dso_local void @preventCommandPropagation(%struct.client* nocapture) local_unnamed_addr #1 !dbg !5228 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5232
  %3 = load i32, i32* %2, align 8, !dbg !5233, !tbaa !1216
  %4 = or i32 %3, 1572864, !dbg !5233
  store i32 %4, i32* %2, align 8, !dbg !5233, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5234
  ret void, !dbg !5234
}

; Function Attrs: noredzone nounwind
define dso_local void @preventCommandAOF(%struct.client* nocapture) local_unnamed_addr #1 !dbg !5235 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5239
  %3 = load i32, i32* %2, align 8, !dbg !5240, !tbaa !1216
  %4 = or i32 %3, 524288, !dbg !5240
  store i32 %4, i32* %2, align 8, !dbg !5240, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5241
  ret void, !dbg !5241
}

; Function Attrs: noredzone nounwind
define dso_local void @preventCommandReplication(%struct.client* nocapture) local_unnamed_addr #1 !dbg !5242 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5246
  %3 = load i32, i32* %2, align 8, !dbg !5247, !tbaa !1216
  %4 = or i32 %3, 1048576, !dbg !5247
  store i32 %4, i32* %2, align 8, !dbg !5247, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5248
  ret void, !dbg !5248
}

; Function Attrs: noredzone nounwind
define dso_local void @call(%struct.client*, i32) local_unnamed_addr #1 !dbg !5249 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.timeval, align 8
  %5 = alloca %struct.redisOpArray, align 8
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5277
  %7 = load i32, i32* %6, align 8, !dbg !5277, !tbaa !1216
  %8 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 10, !dbg !5279
  %9 = load %struct.redisCommand*, %struct.redisCommand** %8, align 8, !dbg !5279, !tbaa !1208
  %10 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 42), align 8, !dbg !5281, !tbaa !1284
  %11 = getelementptr inbounds %struct.list, %struct.list* %10, i64 0, i32 5, !dbg !5281
  %12 = load i64, i64* %11, align 8, !dbg !5281, !tbaa !2811
  %13 = icmp eq i64 %12, 0, !dbg !5281
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !5283
  %15 = icmp ne i32 %14, 0, !dbg !5284
  %16 = or i1 %13, %15, !dbg !5285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5285
  br i1 %16, label %32, label %17, !dbg !5285

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %9, i64 0, i32 4, !dbg !5286
  %19 = load i32, i32* %18, align 8, !dbg !5286, !tbaa !4259
  %20 = and i32 %19, 2064, !dbg !5287
  %21 = icmp eq i32 %20, 0, !dbg !5287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5288
  br i1 %21, label %22, label %32, !dbg !5288

; <label>:22:                                     ; preds = %17
  %23 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !5289
  %24 = load %struct.redisDb*, %struct.redisDb** %23, align 8, !dbg !5289, !tbaa !5291
  %25 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %24, i64 0, i32 5, !dbg !5292
  %26 = load i32, i32* %25, align 8, !dbg !5292, !tbaa !4822
  %27 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !5293
  %28 = load %struct.redisObject**, %struct.redisObject*** %27, align 8, !dbg !5293, !tbaa !1173
  %29 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !5294
  %30 = load i32, i32* %29, align 8, !dbg !5294, !tbaa !1203
  tail call void @replicationFeedMonitors(%struct.client* nonnull %0, %struct.list* %10, i32 %26, %struct.redisObject** %28, i32 %30) #9, !dbg !5295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5296
  %31 = load i32, i32* %6, align 8, !dbg !5297, !tbaa !1216
  br label %32, !dbg !5296

; <label>:32:                                     ; preds = %17, %2, %22
  %33 = phi i32 [ %7, %17 ], [ %7, %2 ], [ %31, %22 ], !dbg !5297
  %34 = and i32 %33, -1622017, !dbg !5297
  store i32 %34, i32* %6, align 8, !dbg !5297, !tbaa !1216
  %35 = bitcast %struct.redisOpArray* %5 to i8*, !dbg !5298
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35), !dbg !5298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 bitcast (%struct.redisOpArray* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172) to i8*), i64 16, i1 false), !dbg !5299, !tbaa.struct !5300
  store %struct.redisOp* null, %struct.redisOp** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 0), align 8, !dbg !5303, !tbaa !5010
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 1), align 8, !dbg !5304, !tbaa !5013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5305
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !5306, !tbaa !4867
  %37 = bitcast %struct.timeval* %4 to i8*, !dbg !5313
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #4, !dbg !5313
  %38 = ptrtoint %struct.timeval* %4 to i64, !dbg !5314
  %39 = add i64 %38, 65536, !dbg !5315
  %40 = inttoptr i64 %39 to %struct.timeval*, !dbg !5316
  %41 = call i32 @gettimeofday(%struct.timeval* %40, i8* null) #9, !dbg !5318
  %42 = getelementptr inbounds %struct.timeval, %struct.timeval* %40, i64 0, i32 0, !dbg !5320
  %43 = load i64, i64* %42, align 8, !dbg !5320, !tbaa !1316
  %44 = getelementptr inbounds %struct.timeval, %struct.timeval* %40, i64 0, i32 1, !dbg !5321
  %45 = load i64, i64* %44, align 8, !dbg !5321, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #4, !dbg !5322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5324
  %46 = load %struct.redisCommand*, %struct.redisCommand** %8, align 8, !dbg !5325, !tbaa !1208
  %47 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %46, i64 0, i32 1, !dbg !5326
  %48 = bitcast {}** %47 to void (%struct.client*)**, !dbg !5326
  %49 = load void (%struct.client*)*, void (%struct.client*)** %48, align 8, !dbg !5326, !tbaa !5327
  call void %49(%struct.client* nonnull %0) #9, !dbg !5328
  %50 = bitcast %struct.timeval* %3 to i8*, !dbg !5334
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #4, !dbg !5334
  %51 = ptrtoint %struct.timeval* %3 to i64, !dbg !5335
  %52 = add i64 %51, 65536, !dbg !5336
  %53 = inttoptr i64 %52 to %struct.timeval*, !dbg !5337
  %54 = call i32 @gettimeofday(%struct.timeval* %53, i8* null) #9, !dbg !5339
  %55 = getelementptr inbounds %struct.timeval, %struct.timeval* %53, i64 0, i32 0, !dbg !5341
  %56 = load i64, i64* %55, align 8, !dbg !5341, !tbaa !1316
  %57 = getelementptr inbounds %struct.timeval, %struct.timeval* %53, i64 0, i32 1, !dbg !5342
  %58 = load i64, i64* %57, align 8, !dbg !5342, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #4, !dbg !5343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5344
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5346
  %59 = sub i64 %56, %43
  %60 = mul i64 %59, 1000000
  %61 = sub i64 %58, %45, !dbg !5347
  %62 = add i64 %61, %60, !dbg !5348
  %63 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !5350, !tbaa !4867
  %64 = icmp sgt i64 %63, %36, !dbg !5351
  %65 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !5352, !tbaa !3866
  %66 = icmp eq i32 %65, 0, !dbg !5354
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5355
  %67 = load i32, i32* %6, align 8, !dbg !5356, !tbaa !1216
  %68 = and i32 %67, 256, !dbg !5356
  br i1 %66, label %74, label %69, !dbg !5355

; <label>:69:                                     ; preds = %32
  %70 = icmp eq i32 %68, 0, !dbg !5357
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5358
  br i1 %70, label %71, label %72, !dbg !5358

; <label>:71:                                     ; preds = %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5359
  br label %96, !dbg !5359

; <label>:72:                                     ; preds = %69
  %73 = and i32 %1, -4, !dbg !5361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5362
  br label %74, !dbg !5362

; <label>:74:                                     ; preds = %32, %72
  %75 = phi i32 [ %73, %72 ], [ %1, %32 ]
  %76 = icmp ne i32 %68, 0, !dbg !5363
  %77 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 272), align 8, !dbg !5364
  %78 = icmp ne %struct.client* %77, null, !dbg !5365
  %79 = and i1 %76, %78, !dbg !5359
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5359
  br i1 %79, label %80, label %96, !dbg !5359

; <label>:80:                                     ; preds = %74
  %81 = trunc i32 %67 to i16, !dbg !5366
  %82 = icmp slt i16 %81, 0, !dbg !5366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5369
  br i1 %82, label %83, label %88, !dbg !5369

; <label>:83:                                     ; preds = %80
  %84 = getelementptr inbounds %struct.client, %struct.client* %77, i64 0, i32 21, !dbg !5370
  %85 = load i32, i32* %84, align 8, !dbg !5371, !tbaa !1216
  %86 = or i32 %85, 32768, !dbg !5371
  store i32 %86, i32* %84, align 8, !dbg !5371, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5372
  %87 = load i32, i32* %6, align 8, !dbg !5373, !tbaa !1216
  br label %88, !dbg !5372

; <label>:88:                                     ; preds = %83, %80
  %89 = phi i32 [ %87, %83 ], [ %67, %80 ], !dbg !5373
  %90 = and i32 %89, 16384, !dbg !5375
  %91 = icmp eq i32 %90, 0, !dbg !5375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5376
  br i1 %91, label %96, label %92, !dbg !5376

; <label>:92:                                     ; preds = %88
  %93 = getelementptr inbounds %struct.client, %struct.client* %77, i64 0, i32 21, !dbg !5377
  %94 = load i32, i32* %93, align 8, !dbg !5378, !tbaa !1216
  %95 = or i32 %94, 16384, !dbg !5378
  store i32 %95, i32* %93, align 8, !dbg !5378, !tbaa !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5379
  br label %96, !dbg !5379

; <label>:96:                                     ; preds = %71, %88, %92, %74
  %97 = phi i32 [ %1, %71 ], [ %75, %88 ], [ %75, %92 ], [ %75, %74 ]
  %98 = and i32 %97, 1, !dbg !5380
  %99 = icmp eq i32 %98, 0, !dbg !5380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5381
  br i1 %99, label %123, label %100, !dbg !5381

; <label>:100:                                    ; preds = %96
  %101 = load %struct.redisCommand*, %struct.redisCommand** %8, align 8, !dbg !5382, !tbaa !1208
  %102 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %101, i64 0, i32 1, !dbg !5383
  %103 = bitcast {}** %102 to void (%struct.client*)**, !dbg !5383
  %104 = load void (%struct.client*)*, void (%struct.client*)** %103, align 8, !dbg !5383, !tbaa !5327
  %105 = icmp eq void (%struct.client*)* %104, @execCommand, !dbg !5384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5385
  br i1 %105, label %123, label %106, !dbg !5385

; <label>:106:                                    ; preds = %100
  %107 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %101, i64 0, i32 4, !dbg !5386
  %108 = load i32, i32* %107, align 8, !dbg !5386, !tbaa !4259
  %109 = and i32 %108, 8192, !dbg !5387
  %110 = icmp eq i32 %109, 0, !dbg !5388
  %111 = select i1 %110, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.340, i64 0, i64 0), !dbg !5388
  %112 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !5390, !tbaa !4209
  %113 = icmp eq i64 %112, 0, !dbg !5390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5390
  br i1 %113, label %118, label %114, !dbg !5390

; <label>:114:                                    ; preds = %106
  %115 = sdiv i64 %62, 1000, !dbg !5390
  %116 = icmp slt i64 %115, %112, !dbg !5390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5392
  br i1 %116, label %118, label %117, !dbg !5392

; <label>:117:                                    ; preds = %114
  call void @latencyAddSample(i8* %111, i64 %115) #9, !dbg !5390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5390
  br label %118, !dbg !5390

; <label>:118:                                    ; preds = %114, %106, %117
  %119 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !5393
  %120 = load %struct.redisObject**, %struct.redisObject*** %119, align 8, !dbg !5393, !tbaa !1173
  %121 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !5394
  %122 = load i32, i32* %121, align 8, !dbg !5394, !tbaa !1203
  call void @slowlogPushEntryIfNeeded(%struct.client* nonnull %0, %struct.redisObject** %120, i32 %122, i64 %62) #9, !dbg !5395
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5396
  br label %123, !dbg !5396

; <label>:123:                                    ; preds = %100, %96, %118
  %124 = and i32 %97, 2, !dbg !5397
  %125 = icmp eq i32 %124, 0, !dbg !5397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5399
  br i1 %125, label %133, label %126, !dbg !5399

; <label>:126:                                    ; preds = %123
  %127 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %9, i64 0, i32 9, !dbg !5400
  %128 = bitcast i64* %127 to <2 x i64>*, !dbg !5402
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !dbg !5402, !tbaa !2493
  %130 = insertelement <2 x i64> <i64 undef, i64 1>, i64 %62, i32 0, !dbg !5402
  %131 = add nsw <2 x i64> %129, %130, !dbg !5402
  %132 = bitcast i64* %127 to <2 x i64>*, !dbg !5402
  store <2 x i64> %131, <2 x i64>* %132, align 8, !dbg !5402, !tbaa !2493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5403
  br label %133, !dbg !5403

; <label>:133:                                    ; preds = %123, %126
  %134 = and i32 %97, 12, !dbg !5404
  %135 = icmp ne i32 %134, 0, !dbg !5404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5405
  br i1 %135, label %136, label %203, !dbg !5405

; <label>:136:                                    ; preds = %133
  %137 = load i32, i32* %6, align 8, !dbg !5406, !tbaa !1216
  %138 = and i32 %137, 1572864, !dbg !5407
  %139 = icmp eq i32 %138, 1572864, !dbg !5408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5409
  br i1 %139, label %203, label %140, !dbg !5409

; <label>:140:                                    ; preds = %136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5411
  br i1 %64, label %141, label %142, !dbg !5411

; <label>:141:                                    ; preds = %140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5412
  br label %142, !dbg !5412

; <label>:142:                                    ; preds = %141, %140
  %143 = phi i32 [ 3, %141 ], [ 0, %140 ], !dbg !5414
  %144 = trunc i32 %137 to i16, !dbg !5415
  %145 = icmp slt i16 %144, 0, !dbg !5415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5417
  br i1 %145, label %146, label %148, !dbg !5417

; <label>:146:                                    ; preds = %142
  %147 = or i32 %143, 2, !dbg !5418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5419
  br label %148, !dbg !5419

; <label>:148:                                    ; preds = %146, %142
  %149 = phi i32 [ %147, %146 ], [ %143, %142 ], !dbg !5420
  %150 = and i32 %137, 16384, !dbg !5421
  %151 = icmp eq i32 %150, 0, !dbg !5421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5423
  br i1 %151, label %154, label %152, !dbg !5423

; <label>:152:                                    ; preds = %148
  %153 = or i32 %149, 1, !dbg !5424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5425
  br label %154, !dbg !5425

; <label>:154:                                    ; preds = %148, %152
  %155 = phi i32 [ %153, %152 ], [ %149, %148 ], !dbg !5426
  %156 = and i32 %137, 1048576, !dbg !5427
  %157 = icmp eq i32 %156, 0, !dbg !5427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5429
  br i1 %157, label %158, label %161, !dbg !5429

; <label>:158:                                    ; preds = %154
  %159 = and i32 %97, 8, !dbg !5430
  %160 = icmp eq i32 %159, 0, !dbg !5430
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5431
  br i1 %160, label %161, label %163, !dbg !5431

; <label>:161:                                    ; preds = %158, %154
  %162 = and i32 %155, -3, !dbg !5432
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5433
  br label %163, !dbg !5433

; <label>:163:                                    ; preds = %158, %161
  %164 = phi i32 [ %162, %161 ], [ %155, %158 ], !dbg !5434
  %165 = and i32 %137, 524288, !dbg !5435
  %166 = icmp eq i32 %165, 0, !dbg !5435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5437
  br i1 %166, label %167, label %170, !dbg !5437

; <label>:167:                                    ; preds = %163
  %168 = and i32 %97, 4, !dbg !5438
  %169 = icmp eq i32 %168, 0, !dbg !5438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5439
  br i1 %169, label %170, label %172, !dbg !5439

; <label>:170:                                    ; preds = %167, %163
  %171 = and i32 %164, -2, !dbg !5440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5441
  br label %172, !dbg !5441

; <label>:172:                                    ; preds = %167, %170
  %173 = phi i32 [ %171, %170 ], [ %164, %167 ], !dbg !5442
  %174 = icmp eq i32 %173, 0, !dbg !5443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5445
  br i1 %174, label %202, label %175, !dbg !5445

; <label>:175:                                    ; preds = %172
  %176 = load %struct.redisCommand*, %struct.redisCommand** %8, align 8, !dbg !5446, !tbaa !1208
  %177 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %176, i64 0, i32 4, !dbg !5447
  %178 = load i32, i32* %177, align 8, !dbg !5447, !tbaa !4259
  %179 = and i32 %178, 8, !dbg !5448
  %180 = icmp eq i32 %179, 0, !dbg !5448
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5449
  br i1 %180, label %181, label %202, !dbg !5449

; <label>:181:                                    ; preds = %175
  %182 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !5450
  %183 = load %struct.redisDb*, %struct.redisDb** %182, align 8, !dbg !5450, !tbaa !5291
  %184 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %183, i64 0, i32 5, !dbg !5451
  %185 = load i32, i32* %184, align 8, !dbg !5451, !tbaa !4822
  %186 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !5452
  %187 = load %struct.redisObject**, %struct.redisObject*** %186, align 8, !dbg !5452, !tbaa !1173
  %188 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !5453
  %189 = load i32, i32* %188, align 8, !dbg !5453, !tbaa !1203
  %190 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !5460, !tbaa !3371
  %191 = icmp eq i32 %190, 0, !dbg !5461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5462
  br i1 %191, label %196, label %192, !dbg !5462

; <label>:192:                                    ; preds = %181
  %193 = and i32 %173, 1, !dbg !5463
  %194 = icmp eq i32 %193, 0, !dbg !5463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5464
  br i1 %194, label %196, label %195, !dbg !5464

; <label>:195:                                    ; preds = %192
  call void @feedAppendOnlyFile(%struct.redisCommand* %176, i32 %185, %struct.redisObject** %187, i32 %189) #9, !dbg !5465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5465
  br label %196, !dbg !5465

; <label>:196:                                    ; preds = %195, %192, %181
  %197 = and i32 %173, 2, !dbg !5466
  %198 = icmp eq i32 %197, 0, !dbg !5466
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5467
  br i1 %198, label %201, label %199, !dbg !5467

; <label>:199:                                    ; preds = %196
  %200 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !5468, !tbaa !3255
  call void @replicationFeedSlaves(%struct.list* %200, i32 %185, %struct.redisObject** %187, i32 %189) #9, !dbg !5469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5469
  br label %201, !dbg !5469

; <label>:201:                                    ; preds = %196, %199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5471
  br label %202, !dbg !5471

; <label>:202:                                    ; preds = %175, %172, %201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5472
  br label %203, !dbg !5472

; <label>:203:                                    ; preds = %136, %202, %133
  %204 = load i32, i32* %6, align 8, !dbg !5473, !tbaa !1216
  %205 = and i32 %204, -1622017, !dbg !5473
  %206 = and i32 %7, 1622016, !dbg !5474
  %207 = or i32 %205, %206, !dbg !5475
  store i32 %207, i32* %6, align 8, !dbg !5475, !tbaa !1216
  %208 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 1), align 8, !dbg !5476, !tbaa !5477
  %209 = icmp eq i32 %208, 0, !dbg !5478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5479
  br i1 %209, label %261, label %210, !dbg !5479

; <label>:210:                                    ; preds = %203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5480
  br i1 %135, label %211, label %260, !dbg !5480

; <label>:211:                                    ; preds = %210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5482
  %212 = icmp sgt i32 %208, 0, !dbg !5483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5484
  br i1 %212, label %213, label %260, !dbg !5484

; <label>:213:                                    ; preds = %211
  %214 = and i32 %97, 4
  %215 = icmp eq i32 %214, 0
  %216 = and i32 %97, 8
  %217 = icmp eq i32 %216, 0
  br label %218, !dbg !5484

; <label>:218:                                    ; preds = %213, %255
  %219 = phi i32 [ %208, %213 ], [ %256, %255 ]
  %220 = phi i64 [ 0, %213 ], [ %257, %255 ]
  %221 = load %struct.redisOp*, %struct.redisOp** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 0), align 8, !dbg !5485, !tbaa !5486
  %222 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %221, i64 %220, i32 3, !dbg !5487
  %223 = load i32, i32* %222, align 8, !dbg !5487, !tbaa !5056
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5489
  br i1 %215, label %224, label %226, !dbg !5489

; <label>:224:                                    ; preds = %218
  %225 = and i32 %223, -2, !dbg !5490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5492
  br label %226, !dbg !5492

; <label>:226:                                    ; preds = %218, %224
  %227 = phi i32 [ %223, %218 ], [ %225, %224 ], !dbg !5493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5494
  br i1 %217, label %228, label %230, !dbg !5494

; <label>:228:                                    ; preds = %226
  %229 = and i32 %227, -3, !dbg !5495
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5497
  br label %230, !dbg !5497

; <label>:230:                                    ; preds = %226, %228
  %231 = phi i32 [ %227, %226 ], [ %229, %228 ], !dbg !5498
  %232 = icmp eq i32 %231, 0, !dbg !5499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5501
  br i1 %232, label %255, label %233, !dbg !5501

; <label>:233:                                    ; preds = %230
  %234 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %221, i64 %220, i32 4, !dbg !5502
  %235 = load %struct.redisCommand*, %struct.redisCommand** %234, align 8, !dbg !5502, !tbaa !5043
  %236 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %221, i64 %220, i32 2, !dbg !5503
  %237 = load i32, i32* %236, align 4, !dbg !5503, !tbaa !5047
  %238 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %221, i64 %220, i32 0, !dbg !5504
  %239 = load %struct.redisObject**, %struct.redisObject*** %238, align 8, !dbg !5504, !tbaa !5050
  %240 = getelementptr inbounds %struct.redisOp, %struct.redisOp* %221, i64 %220, i32 1, !dbg !5505
  %241 = load i32, i32* %240, align 8, !dbg !5505, !tbaa !5053
  %242 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !5512, !tbaa !3371
  %243 = icmp eq i32 %242, 0, !dbg !5513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5514
  br i1 %243, label %248, label %244, !dbg !5514

; <label>:244:                                    ; preds = %233
  %245 = and i32 %231, 1, !dbg !5515
  %246 = icmp eq i32 %245, 0, !dbg !5515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5516
  br i1 %246, label %248, label %247, !dbg !5516

; <label>:247:                                    ; preds = %244
  call void @feedAppendOnlyFile(%struct.redisCommand* %235, i32 %237, %struct.redisObject** %239, i32 %241) #9, !dbg !5517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5517
  br label %248, !dbg !5517

; <label>:248:                                    ; preds = %247, %244, %233
  %249 = and i32 %231, 2, !dbg !5518
  %250 = icmp eq i32 %249, 0, !dbg !5518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5519
  br i1 %250, label %253, label %251, !dbg !5519

; <label>:251:                                    ; preds = %248
  %252 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !5520, !tbaa !3255
  call void @replicationFeedSlaves(%struct.list* %252, i32 %237, %struct.redisObject** %239, i32 %241) #9, !dbg !5521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5521
  br label %253, !dbg !5521

; <label>:253:                                    ; preds = %248, %251
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5523
  %254 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172, i32 1), align 8, !dbg !5524, !tbaa !5477
  br label %255, !dbg !5523

; <label>:255:                                    ; preds = %230, %253
  %256 = phi i32 [ %219, %230 ], [ %254, %253 ], !dbg !5524
  %257 = add nuw nsw i64 %220, 1, !dbg !5525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5526
  %258 = sext i32 %256 to i64, !dbg !5483
  %259 = icmp slt i64 %257, %258, !dbg !5483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5484
  br i1 %259, label %218, label %260, !dbg !5484, !llvm.loop !5527

; <label>:260:                                    ; preds = %255, %211, %210
  call void @redisOpArrayFree(%struct.redisOpArray* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172)) #10, !dbg !5529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5530
  br label %261, !dbg !5530

; <label>:261:                                    ; preds = %203, %260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.redisOpArray* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 172) to i8*), i8* nonnull align 8 %35, i64 16, i1 false), !dbg !5531, !tbaa.struct !5300
  %262 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !5532, !tbaa !3151
  %263 = add nsw i64 %262, 1, !dbg !5532
  store i64 %263, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !5532, !tbaa !3151
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35), !dbg !5533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5533
  ret void, !dbg !5533
}

; Function Attrs: noredzone
declare dso_local void @replicationFeedMonitors(%struct.client*, %struct.list*, i32, %struct.redisObject**, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @latencyAddSample(i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @slowlogPushEntryIfNeeded(%struct.client*, %struct.redisObject**, i32, i64) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @processCommand(%struct.client*) local_unnamed_addr #1 !dbg !5534 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  tail call void @moduleCallCommandFilters(%struct.client* %0) #9, !dbg !5556
  %4 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !5557
  %5 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !5557, !tbaa !1173
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !5559, !tbaa !1178
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !5560
  %8 = load i8*, i8** %7, align 8, !dbg !5560, !tbaa !1180
  %9 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0)) #11, !dbg !5561
  %10 = icmp eq i32 %9, 0, !dbg !5561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5562
  br i1 %10, label %11, label %16, !dbg !5562

; <label>:11:                                     ; preds = %1
  %12 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !5563, !tbaa !1189
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %12) #9, !dbg !5565
  %13 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5566
  %14 = load i32, i32* %13, align 8, !dbg !5567, !tbaa !1216
  %15 = or i32 %14, 64, !dbg !5567
  store i32 %15, i32* %13, align 8, !dbg !5567, !tbaa !1216
  br label %441, !dbg !5568

; <label>:16:                                     ; preds = %1
  %17 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !5571, !tbaa !1369
  %18 = tail call i8* @dictFetchValue(%struct.dict* %17, i8* %8) #9, !dbg !5572
  %19 = bitcast i8* %18 to %struct.redisCommand*, !dbg !5572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5573
  %20 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 11, !dbg !5574
  %21 = bitcast %struct.redisCommand** %20 to i8**, !dbg !5575
  store i8* %18, i8** %21, align 8, !dbg !5575, !tbaa !5576
  %22 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 10, !dbg !5577
  %23 = bitcast %struct.redisCommand** %22 to i8**, !dbg !5578
  store i8* %18, i8** %23, align 8, !dbg !5578, !tbaa !1208
  %24 = icmp eq i8* %18, null, !dbg !5579
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5580
  br i1 %24, label %25, label %100, !dbg !5580

; <label>:25:                                     ; preds = %16
  tail call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5581
  %26 = tail call i8* @sdsempty() #9, !dbg !5582
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5585
  %27 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !5587
  %28 = load i32, i32* %27, align 8, !dbg !5587, !tbaa !1203
  %29 = icmp sgt i32 %28, 1, !dbg !5589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5590
  br i1 %29, label %30, label %94, !dbg !5590

; <label>:30:                                     ; preds = %25, %80
  %31 = phi i64 [ %90, %80 ], [ 1, %25 ]
  %32 = phi i8* [ %89, %80 ], [ %26, %25 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 -1, !dbg !5593
  %34 = load i8, i8* %33, align 1, !dbg !5593, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5595
  %35 = trunc i8 %34 to i3, !dbg !5595
  switch i3 %35, label %54 [
    i3 -4, label %50
    i3 1, label %36
    i3 2, label %40
    i3 3, label %45
  ], !dbg !5595

; <label>:36:                                     ; preds = %30
  %37 = getelementptr inbounds i8, i8* %32, i64 -3, !dbg !5596
  %38 = load i8, i8* %37, align 1, !dbg !5597, !tbaa !1382
  %39 = zext i8 %38 to i64, !dbg !5596
  br label %55, !dbg !5598

; <label>:40:                                     ; preds = %30
  %41 = getelementptr inbounds i8, i8* %32, i64 -5, !dbg !5599
  %42 = bitcast i8* %41 to i16*, !dbg !5600
  %43 = load i16, i16* %42, align 1, !dbg !5600, !tbaa !2037
  %44 = zext i16 %43 to i64, !dbg !5599
  br label %55, !dbg !5601

; <label>:45:                                     ; preds = %30
  %46 = getelementptr inbounds i8, i8* %32, i64 -9, !dbg !5602
  %47 = bitcast i8* %46 to i32*, !dbg !5603
  %48 = load i32, i32* %47, align 1, !dbg !5603, !tbaa !1482
  %49 = zext i32 %48 to i64, !dbg !5602
  br label %55, !dbg !5604

; <label>:50:                                     ; preds = %30
  %51 = getelementptr inbounds i8, i8* %32, i64 -17, !dbg !5605
  %52 = bitcast i8* %51 to i64*, !dbg !5606
  %53 = load i64, i64* %52, align 1, !dbg !5606, !tbaa !2045
  br label %55, !dbg !5607

; <label>:54:                                     ; preds = %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5610
  br label %58, !dbg !5610

; <label>:55:                                     ; preds = %36, %40, %45, %50
  %56 = phi i64 [ %53, %50 ], [ %49, %45 ], [ %44, %40 ], [ %39, %36 ], !dbg !5611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5609
  %57 = icmp ult i64 %56, 128, !dbg !5612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5610
  br i1 %57, label %58, label %94, !dbg !5610

; <label>:58:                                     ; preds = %54, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5616
  switch i3 %35, label %80 [
    i3 0, label %59
    i3 1, label %62
    i3 2, label %66
    i3 3, label %71
    i3 -4, label %76
  ], !dbg !5616

; <label>:59:                                     ; preds = %58
  %60 = lshr i8 %34, 3, !dbg !5617
  %61 = zext i8 %60 to i64, !dbg !5617
  br label %80, !dbg !5618

; <label>:62:                                     ; preds = %58
  %63 = getelementptr inbounds i8, i8* %32, i64 -3, !dbg !5619
  %64 = load i8, i8* %63, align 1, !dbg !5620, !tbaa !1382
  %65 = zext i8 %64 to i64, !dbg !5619
  br label %80, !dbg !5621

; <label>:66:                                     ; preds = %58
  %67 = getelementptr inbounds i8, i8* %32, i64 -5, !dbg !5622
  %68 = bitcast i8* %67 to i16*, !dbg !5623
  %69 = load i16, i16* %68, align 1, !dbg !5623, !tbaa !2037
  %70 = zext i16 %69 to i64, !dbg !5622
  br label %80, !dbg !5624

; <label>:71:                                     ; preds = %58
  %72 = getelementptr inbounds i8, i8* %32, i64 -9, !dbg !5625
  %73 = bitcast i8* %72 to i32*, !dbg !5626
  %74 = load i32, i32* %73, align 1, !dbg !5626, !tbaa !1482
  %75 = zext i32 %74 to i64, !dbg !5625
  br label %80, !dbg !5627

; <label>:76:                                     ; preds = %58
  %77 = getelementptr inbounds i8, i8* %32, i64 -17, !dbg !5628
  %78 = bitcast i8* %77 to i64*, !dbg !5629
  %79 = load i64, i64* %78, align 1, !dbg !5629, !tbaa !2045
  br label %80, !dbg !5630

; <label>:80:                                     ; preds = %58, %59, %62, %66, %71, %76
  %81 = phi i64 [ %79, %76 ], [ %75, %71 ], [ %70, %66 ], [ %65, %62 ], [ %61, %59 ], [ 0, %58 ], !dbg !5631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5632
  %82 = trunc i64 %81 to i32, !dbg !5633
  %83 = sub nsw i32 128, %82, !dbg !5634
  %84 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !5635, !tbaa !1173
  %85 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %84, i64 %31, !dbg !5636
  %86 = load %struct.redisObject*, %struct.redisObject** %85, align 8, !dbg !5636, !tbaa !1178
  %87 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %86, i64 0, i32 2, !dbg !5637
  %88 = load i8*, i8** %87, align 8, !dbg !5637, !tbaa !1180
  %89 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* nonnull %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.342, i64 0, i64 0), i32 %83, i8* %88) #9, !dbg !5638
  %90 = add nuw nsw i64 %31, 1, !dbg !5639
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5640
  %91 = load i32, i32* %27, align 8, !dbg !5587, !tbaa !1203
  %92 = sext i32 %91 to i64, !dbg !5589
  %93 = icmp slt i64 %90, %92, !dbg !5589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5590
  br i1 %93, label %30, label %94, !dbg !5590, !llvm.loop !5641

; <label>:94:                                     ; preds = %55, %80, %25
  %95 = phi i8* [ %26, %25 ], [ %89, %80 ], [ %32, %55 ], !dbg !5608
  %96 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !5643, !tbaa !1173
  %97 = load %struct.redisObject*, %struct.redisObject** %96, align 8, !dbg !5644, !tbaa !1178
  %98 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %97, i64 0, i32 2, !dbg !5645
  %99 = load i8*, i8** %98, align 8, !dbg !5645, !tbaa !1180
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.343, i64 0, i64 0), i8* %99, i8* %95) #9, !dbg !5646
  tail call void @sdsfree(i8* %95) #9, !dbg !5647
  br label %441

; <label>:100:                                    ; preds = %16
  %101 = getelementptr inbounds i8, i8* %18, i64 16, !dbg !5648
  %102 = bitcast i8* %101 to i32*, !dbg !5648
  %103 = load i32, i32* %102, align 8, !dbg !5648, !tbaa !1457
  %104 = icmp sgt i32 %103, 0, !dbg !5650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5651
  %105 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8
  %106 = load i32, i32* %105, align 8, !dbg !5652, !tbaa !1203
  br i1 %104, label %107, label %109, !dbg !5651

; <label>:107:                                    ; preds = %100
  %108 = icmp eq i32 %103, %106, !dbg !5653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5654
  br i1 %108, label %109, label %113, !dbg !5654

; <label>:109:                                    ; preds = %100, %107
  %110 = phi i32 [ %103, %107 ], [ %106, %100 ], !dbg !5655
  %111 = sub nsw i32 0, %103, !dbg !5656
  %112 = icmp slt i32 %110, %111, !dbg !5657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5658
  br i1 %112, label %113, label %117, !dbg !5658

; <label>:113:                                    ; preds = %107, %109
  tail call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5659
  %114 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5661, !tbaa !1208
  %115 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %114, i64 0, i32 0, !dbg !5662
  %116 = load i8*, i8** %115, align 8, !dbg !5662, !tbaa !1210
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.344, i64 0, i64 0), i8* %116) #9, !dbg !5663
  br label %441, !dbg !5664

; <label>:117:                                    ; preds = %109
  %118 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 15), align 8, !dbg !5665, !tbaa !1154
  %119 = icmp eq i8* %118, null, !dbg !5667
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5668
  br i1 %119, label %131, label %120, !dbg !5668

; <label>:120:                                    ; preds = %117
  %121 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 22, !dbg !5669
  %122 = load i32, i32* %121, align 4, !dbg !5669, !tbaa !1187
  %123 = icmp eq i32 %122, 0, !dbg !5670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5671
  br i1 %123, label %124, label %131, !dbg !5671

; <label>:124:                                    ; preds = %120
  %125 = getelementptr inbounds i8, i8* %18, i64 8, !dbg !5672
  %126 = bitcast i8* %125 to void (%struct.client*)**, !dbg !5672
  %127 = load void (%struct.client*)*, void (%struct.client*)** %126, align 8, !dbg !5672, !tbaa !5327
  %128 = icmp eq void (%struct.client*)* %127, @authCommand, !dbg !5673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5674
  br i1 %128, label %131, label %129, !dbg !5674

; <label>:129:                                    ; preds = %124
  tail call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5675
  %130 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 26), align 8, !dbg !5677, !tbaa !3653
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %130) #9, !dbg !5678
  br label %441, !dbg !5679

; <label>:131:                                    ; preds = %124, %120, %117
  %132 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !5680, !tbaa !2593
  %133 = icmp eq i32 %132, 0, !dbg !5681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5682
  br i1 %133, label %186, label %134, !dbg !5682

; <label>:134:                                    ; preds = %131
  %135 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5683
  %136 = load i32, i32* %135, align 8, !dbg !5683, !tbaa !1216
  %137 = and i32 %136, 2, !dbg !5684
  %138 = icmp eq i32 %137, 0, !dbg !5684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5685
  br i1 %138, label %139, label %186, !dbg !5685

; <label>:139:                                    ; preds = %134
  %140 = and i32 %136, 256, !dbg !5686
  %141 = icmp eq i32 %140, 0, !dbg !5686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5687
  br i1 %141, label %148, label %142, !dbg !5687

; <label>:142:                                    ; preds = %139
  %143 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 272), align 8, !dbg !5688, !tbaa !5689
  %144 = getelementptr inbounds %struct.client, %struct.client* %143, i64 0, i32 21, !dbg !5690
  %145 = load i32, i32* %144, align 8, !dbg !5690, !tbaa !1216
  %146 = and i32 %145, 2, !dbg !5691
  %147 = icmp eq i32 %146, 0, !dbg !5691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5692
  br i1 %147, label %148, label %186, !dbg !5692

; <label>:148:                                    ; preds = %142, %139
  %149 = getelementptr inbounds i8, i8* %18, i64 40, !dbg !5693
  %150 = bitcast i8* %149 to i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)**, !dbg !5693
  %151 = load i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %150, align 8, !dbg !5693, !tbaa !1445
  %152 = icmp eq i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* %151, null, !dbg !5694
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5695
  br i1 %152, label %153, label %163, !dbg !5695

; <label>:153:                                    ; preds = %148
  %154 = getelementptr inbounds i8, i8* %18, i64 48, !dbg !5696
  %155 = bitcast i8* %154 to i32*, !dbg !5696
  %156 = load i32, i32* %155, align 8, !dbg !5696, !tbaa !1449
  %157 = icmp eq i32 %156, 0, !dbg !5697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5698
  br i1 %157, label %158, label %163, !dbg !5698

; <label>:158:                                    ; preds = %153
  %159 = getelementptr inbounds i8, i8* %18, i64 8, !dbg !5699
  %160 = bitcast i8* %159 to void (%struct.client*)**, !dbg !5699
  %161 = load void (%struct.client*)*, void (%struct.client*)** %160, align 8, !dbg !5699, !tbaa !5327
  %162 = icmp eq void (%struct.client*)* %161, @execCommand, !dbg !5700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5701
  br i1 %162, label %163, label %186, !dbg !5701

; <label>:163:                                    ; preds = %158, %153, %148
  %164 = bitcast i32* %2 to i8*, !dbg !5702
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #4, !dbg !5702
  %165 = bitcast i32* %3 to i8*, !dbg !5703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #4, !dbg !5703
  %166 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !5704, !tbaa !1173
  %167 = call %struct.clusterNode* @getNodeByQuery(%struct.client* nonnull %0, %struct.redisCommand* nonnull %19, %struct.redisObject** %166, i32 %110, i32* nonnull %2, i32* nonnull %3) #9, !dbg !5707
  %168 = icmp eq %struct.clusterNode* %167, null, !dbg !5709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5711
  br i1 %168, label %174, label %169, !dbg !5711

; <label>:169:                                    ; preds = %163
  %170 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5712, !tbaa !5713
  %171 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %170, i64 0, i32 0, !dbg !5714
  %172 = load %struct.clusterNode*, %struct.clusterNode** %171, align 8, !dbg !5714, !tbaa !5715
  %173 = icmp eq %struct.clusterNode* %167, %172, !dbg !5717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5718
  br i1 %173, label %185, label %174, !dbg !5718

; <label>:174:                                    ; preds = %169, %163
  %175 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5719, !tbaa !1208
  %176 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %175, i64 0, i32 1, !dbg !5722
  %177 = bitcast {}** %176 to void (%struct.client*)**, !dbg !5722
  %178 = load void (%struct.client*)*, void (%struct.client*)** %177, align 8, !dbg !5722, !tbaa !5327
  %179 = icmp eq void (%struct.client*)* %178, @execCommand, !dbg !5723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5724
  br i1 %179, label %180, label %181, !dbg !5724

; <label>:180:                                    ; preds = %174
  call void @discardTransaction(%struct.client* nonnull %0) #9, !dbg !5725
  br label %182, !dbg !5727

; <label>:181:                                    ; preds = %174
  call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5728
  br label %182

; <label>:182:                                    ; preds = %181, %180
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %183 = load i32, i32* %2, align 4, !dbg !5730, !tbaa !1482
  %184 = load i32, i32* %3, align 4, !dbg !5731, !tbaa !1482
  call void @clusterRedirectClient(%struct.client* nonnull %0, %struct.clusterNode* %167, i32 %183, i32 %184) #9, !dbg !5732
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5733
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #4, !dbg !5734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #4, !dbg !5734
  br label %441

; <label>:185:                                    ; preds = %169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #4, !dbg !5734
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #4, !dbg !5734
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %186

; <label>:186:                                    ; preds = %185, %142, %158, %134, %131
  %187 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !5735, !tbaa !3937
  %188 = icmp eq i64 %187, 0, !dbg !5736
  %189 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 282), align 4, !dbg !5737
  %190 = icmp ne i32 %189, 0, !dbg !5738
  %191 = or i1 %188, %190, !dbg !5739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5739
  br i1 %191, label %219, label %192, !dbg !5739

; <label>:192:                                    ; preds = %186
  %193 = call i32 @freeMemoryIfNeededAndSafe() #9, !dbg !5740
  %194 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 43), align 8, !dbg !5741, !tbaa !4703
  %195 = icmp eq %struct.client* %194, null, !dbg !5743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5744
  br i1 %195, label %216, label %196, !dbg !5744

; <label>:196:                                    ; preds = %192
  %197 = icmp eq i32 %193, -1, !dbg !5745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5746
  br i1 %197, label %198, label %218, !dbg !5746

; <label>:198:                                    ; preds = %196
  %199 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5748, !tbaa !1208
  %200 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %199, i64 0, i32 4, !dbg !5749
  %201 = load i32, i32* %200, align 8, !dbg !5749, !tbaa !4259
  %202 = and i32 %201, 4, !dbg !5750
  %203 = icmp eq i32 %202, 0, !dbg !5750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5751
  br i1 %203, label %204, label %214, !dbg !5751

; <label>:204:                                    ; preds = %198
  %205 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5752
  %206 = load i32, i32* %205, align 8, !dbg !5752, !tbaa !1216
  %207 = and i32 %206, 8, !dbg !5753
  %208 = icmp eq i32 %207, 0, !dbg !5753
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5754
  br i1 %208, label %218, label %209, !dbg !5754

; <label>:209:                                    ; preds = %204
  %210 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %199, i64 0, i32 1, !dbg !5755
  %211 = bitcast {}** %210 to void (%struct.client*)**, !dbg !5755
  %212 = load void (%struct.client*)*, void (%struct.client*)** %211, align 8, !dbg !5755, !tbaa !5327
  %213 = icmp eq void (%struct.client*)* %212, @execCommand, !dbg !5756
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5757
  br i1 %213, label %218, label %214, !dbg !5757

; <label>:214:                                    ; preds = %209, %198
  call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5758
  %215 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 29), align 8, !dbg !5760, !tbaa !3657
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %215) #9, !dbg !5761
  br label %216, !dbg !5762

; <label>:216:                                    ; preds = %192, %214
  %217 = phi i32 [ 0, %214 ], [ -1, %192 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5763
  br label %441

; <label>:218:                                    ; preds = %196, %204, %209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5764
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %219

; <label>:219:                                    ; preds = %218, %186
  %220 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 167), align 4, !dbg !5765, !tbaa !3925
  %221 = icmp ne i32 %220, 0, !dbg !5771
  %222 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 156), align 8, !dbg !5772
  %223 = icmp sgt i32 %222, 0, !dbg !5773
  %224 = and i1 %221, %223, !dbg !5774
  %225 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !5775
  %226 = icmp eq i32 %225, -1, !dbg !5776
  %227 = and i1 %224, %226, !dbg !5774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5774
  br i1 %227, label %228, label %229, !dbg !5774

; <label>:228:                                    ; preds = %219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5777
  br label %236, !dbg !5777

; <label>:229:                                    ; preds = %219
  %230 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !5779, !tbaa !3371
  %231 = icmp ne i32 %230, 0, !dbg !5781
  %232 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 140), align 8, !dbg !5782
  %233 = icmp eq i32 %232, -1, !dbg !5783
  %234 = and i1 %231, %233, !dbg !5784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5785
  %235 = zext i1 %234 to i32, !dbg !5787
  br label %236, !dbg !5787

; <label>:236:                                    ; preds = %228, %229
  %237 = phi i32 [ 2, %228 ], [ %235, %229 ], !dbg !5785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5789
  %238 = icmp ne i32 %237, 0, !dbg !5791
  %239 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !5793
  %240 = icmp eq i8* %239, null, !dbg !5794
  %241 = and i1 %238, %240, !dbg !5795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  br i1 %241, label %242, label %263, !dbg !5795

; <label>:242:                                    ; preds = %236
  %243 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5796, !tbaa !1208
  %244 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %243, i64 0, i32 4, !dbg !5797
  %245 = load i32, i32* %244, align 8, !dbg !5797, !tbaa !4259
  %246 = and i32 %245, 1, !dbg !5798
  %247 = icmp eq i32 %246, 0, !dbg !5798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5799
  br i1 %247, label %248, label %253, !dbg !5799

; <label>:248:                                    ; preds = %242
  %249 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %243, i64 0, i32 1, !dbg !5800
  %250 = bitcast {}** %249 to void (%struct.client*)**, !dbg !5800
  %251 = load void (%struct.client*)*, void (%struct.client*)** %250, align 8, !dbg !5800, !tbaa !5327
  %252 = icmp eq void (%struct.client*)* %251, @pingCommand, !dbg !5801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5802
  br i1 %252, label %253, label %263, !dbg !5802

; <label>:253:                                    ; preds = %242, %248
  call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5803
  %254 = icmp eq i32 %237, 2, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5807
  br i1 %254, label %255, label %257, !dbg !5807

; <label>:255:                                    ; preds = %253
  %256 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 22), align 8, !dbg !5808, !tbaa !3645
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %256) #9, !dbg !5809
  br label %262, !dbg !5809

; <label>:257:                                    ; preds = %253
  %258 = call i8* @sdsempty() #9, !dbg !5810
  %259 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 141), align 4, !dbg !5811, !tbaa !4881
  %260 = call i8* @strerror(i32 %259) #9, !dbg !5812
  %261 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %258, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.345, i64 0, i64 0), i8* %260) #9, !dbg !5813
  call void @addReplySds(%struct.client* nonnull %0, i8* %261) #9, !dbg !5814
  br label %262

; <label>:262:                                    ; preds = %257, %255
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %440, !dbg !5815

; <label>:263:                                    ; preds = %248, %236
  %264 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 190), align 8, !dbg !5816
  %265 = icmp ne i32 %264, 0, !dbg !5818
  %266 = and i1 %240, %265, !dbg !5819
  %267 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 191), align 4, !dbg !5820
  %268 = icmp ne i32 %267, 0, !dbg !5821
  %269 = and i1 %266, %268, !dbg !5819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5819
  br i1 %269, label %270, label %282, !dbg !5819

; <label>:270:                                    ; preds = %263
  %271 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5822, !tbaa !1208
  %272 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %271, i64 0, i32 4, !dbg !5823
  %273 = load i32, i32* %272, align 8, !dbg !5823, !tbaa !4259
  %274 = and i32 %273, 1, !dbg !5824
  %275 = icmp eq i32 %274, 0, !dbg !5824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5825
  br i1 %275, label %281, label %276, !dbg !5825

; <label>:276:                                    ; preds = %270
  %277 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 192), align 8, !dbg !5826, !tbaa !4883
  %278 = icmp slt i32 %277, %264, !dbg !5827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5828
  br i1 %278, label %279, label %281, !dbg !5828

; <label>:279:                                    ; preds = %276
  call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5829
  %280 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 27), align 8, !dbg !5831, !tbaa !3665
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %280) #9, !dbg !5832
  br label %440, !dbg !5833

; <label>:281:                                    ; preds = %270, %276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5834
  br label %300, !dbg !5834

; <label>:282:                                    ; preds = %263
  %283 = icmp ne i8* %239, null, !dbg !5836
  %284 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 211), align 4, !dbg !5837
  %285 = icmp ne i32 %284, 0, !dbg !5838
  %286 = and i1 %283, %285, !dbg !5834
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5834
  br i1 %286, label %287, label %300, !dbg !5834

; <label>:287:                                    ; preds = %282
  %288 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5839
  %289 = load i32, i32* %288, align 8, !dbg !5839, !tbaa !1216
  %290 = and i32 %289, 2, !dbg !5840
  %291 = icmp eq i32 %290, 0, !dbg !5840
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5841
  br i1 %291, label %292, label %300, !dbg !5841

; <label>:292:                                    ; preds = %287
  %293 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5842, !tbaa !1208
  %294 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %293, i64 0, i32 4, !dbg !5843
  %295 = load i32, i32* %294, align 8, !dbg !5843, !tbaa !4259
  %296 = and i32 %295, 1, !dbg !5844
  %297 = icmp eq i32 %296, 0, !dbg !5844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5845
  br i1 %297, label %300, label %298, !dbg !5845

; <label>:298:                                    ; preds = %292
  %299 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 24), align 8, !dbg !5846, !tbaa !3649
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %299) #9, !dbg !5848
  br label %440, !dbg !5849

; <label>:300:                                    ; preds = %281, %292, %287, %282
  %301 = phi i1 [ false, %281 ], [ true, %292 ], [ true, %287 ], [ %283, %282 ]
  %302 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !5850
  %303 = load i32, i32* %302, align 8, !dbg !5850, !tbaa !1216
  %304 = and i32 %303, 262144, !dbg !5852
  %305 = icmp eq i32 %304, 0, !dbg !5852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5853
  br i1 %305, label %321, label %306, !dbg !5853

; <label>:306:                                    ; preds = %300
  %307 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5854, !tbaa !1208
  %308 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %307, i64 0, i32 1, !dbg !5855
  %309 = bitcast {}** %308 to void (%struct.client*)**, !dbg !5855
  %310 = load void (%struct.client*)*, void (%struct.client*)** %309, align 8, !dbg !5855, !tbaa !5327
  %311 = icmp eq void (%struct.client*)* %310, @pingCommand, !dbg !5856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5857
  br i1 %311, label %321, label %312, !dbg !5857

; <label>:312:                                    ; preds = %306
  %313 = icmp eq void (%struct.client*)* %310, @subscribeCommand, !dbg !5858
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5859
  br i1 %313, label %321, label %314, !dbg !5859

; <label>:314:                                    ; preds = %312
  %315 = icmp eq void (%struct.client*)* %310, @unsubscribeCommand, !dbg !5860
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5861
  br i1 %315, label %321, label %316, !dbg !5861

; <label>:316:                                    ; preds = %314
  %317 = icmp eq void (%struct.client*)* %310, @psubscribeCommand, !dbg !5862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5863
  br i1 %317, label %321, label %318, !dbg !5863

; <label>:318:                                    ; preds = %316
  %319 = icmp eq void (%struct.client*)* %310, @punsubscribeCommand, !dbg !5864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5865
  br i1 %319, label %321, label %320, !dbg !5865

; <label>:320:                                    ; preds = %318
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.346, i64 0, i64 0)) #9, !dbg !5866
  br label %440, !dbg !5868

; <label>:321:                                    ; preds = %318, %316, %314, %312, %306, %300
  %322 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !5869
  %323 = icmp ne i32 %322, 15, !dbg !5871
  %324 = and i1 %301, %323, !dbg !5872
  %325 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 210), align 8, !dbg !5873
  %326 = icmp eq i32 %325, 0, !dbg !5874
  %327 = and i1 %324, %326, !dbg !5872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  br i1 %327, label %328, label %336, !dbg !5872

; <label>:328:                                    ; preds = %321
  %329 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5875, !tbaa !1208
  %330 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %329, i64 0, i32 4, !dbg !5876
  %331 = load i32, i32* %330, align 8, !dbg !5876, !tbaa !4259
  %332 = and i32 %331, 1024, !dbg !5877
  %333 = icmp eq i32 %332, 0, !dbg !5877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5878
  br i1 %333, label %334, label %336, !dbg !5878

; <label>:334:                                    ; preds = %328
  call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5879
  %335 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 23), align 8, !dbg !5881, !tbaa !3641
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %335) #9, !dbg !5882
  br label %440, !dbg !5883

; <label>:336:                                    ; preds = %328, %321
  %337 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !5884, !tbaa !3866
  %338 = icmp eq i32 %337, 0, !dbg !5886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5887
  br i1 %338, label %347, label %339, !dbg !5887

; <label>:339:                                    ; preds = %336
  %340 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5888, !tbaa !1208
  %341 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %340, i64 0, i32 4, !dbg !5889
  %342 = load i32, i32* %341, align 8, !dbg !5889, !tbaa !4259
  %343 = and i32 %342, 512, !dbg !5890
  %344 = icmp eq i32 %343, 0, !dbg !5890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5891
  br i1 %344, label %345, label %347, !dbg !5891

; <label>:345:                                    ; preds = %339
  %346 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 20), align 8, !dbg !5892, !tbaa !3633
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %346) #9, !dbg !5894
  br label %440, !dbg !5895

; <label>:347:                                    ; preds = %339, %336
  %348 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 282), align 4, !dbg !5896, !tbaa !5897
  %349 = icmp eq i32 %348, 0, !dbg !5898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5899
  br i1 %349, label %413, label %350, !dbg !5899

; <label>:350:                                    ; preds = %347
  %351 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5900, !tbaa !1208
  %352 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %351, i64 0, i32 1, !dbg !5901
  %353 = bitcast {}** %352 to void (%struct.client*)**, !dbg !5901
  %354 = load void (%struct.client*)*, void (%struct.client*)** %353, align 8, !dbg !5901, !tbaa !5327
  %355 = icmp eq void (%struct.client*)* %354, @authCommand, !dbg !5902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5903
  br i1 %355, label %413, label %356, !dbg !5903

; <label>:356:                                    ; preds = %350
  %357 = icmp eq void (%struct.client*)* %354, @replconfCommand, !dbg !5904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5905
  br i1 %357, label %413, label %358, !dbg !5905

; <label>:358:                                    ; preds = %356
  %359 = icmp eq void (%struct.client*)* %354, @shutdownCommand, !dbg !5906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5907
  br i1 %359, label %360, label %387, !dbg !5907

; <label>:360:                                    ; preds = %358
  %361 = load i32, i32* %105, align 8, !dbg !5908, !tbaa !1203
  %362 = icmp eq i32 %361, 2, !dbg !5909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5910
  br i1 %362, label %364, label %363, !dbg !5910

; <label>:363:                                    ; preds = %360
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5911
  br label %411, !dbg !5911

; <label>:364:                                    ; preds = %360
  %365 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !5912, !tbaa !1173
  %366 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %365, i64 1, !dbg !5912
  %367 = load %struct.redisObject*, %struct.redisObject** %366, align 8, !dbg !5912, !tbaa !1178
  %368 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %367, i64 0, i32 2, !dbg !5912
  %369 = load i8*, i8** %368, align 8, !dbg !5912, !tbaa !1180
  %370 = load i8, i8* %369, align 1, !dbg !5912, !tbaa !1382
  %371 = call i8* @__locale_ctype_ptr() #9, !dbg !5912
  %372 = getelementptr inbounds i8, i8* %371, i64 1, !dbg !5912
  %373 = sext i8 %370 to i32, !dbg !5912
  %374 = sext i8 %370 to i64, !dbg !5912
  %375 = getelementptr inbounds i8, i8* %372, i64 %374, !dbg !5912
  %376 = load i8, i8* %375, align 1, !dbg !5912, !tbaa !1382
  %377 = and i8 %376, 3, !dbg !5912
  %378 = icmp eq i8 %377, 1, !dbg !5912
  %379 = add nsw i32 %373, 32, !dbg !5912
  %380 = select i1 %378, i32 %379, i32 %373, !dbg !5912
  %381 = icmp eq i32 %380, 110, !dbg !5913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5914
  br i1 %381, label %413, label %382, !dbg !5914

; <label>:382:                                    ; preds = %364
  %383 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5915, !tbaa !1208
  %384 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %383, i64 0, i32 1
  %385 = bitcast {}** %384 to void (%struct.client*)**
  %386 = load void (%struct.client*)*, void (%struct.client*)** %385, align 8, !dbg !5916, !tbaa !5327
  br label %387, !dbg !5914

; <label>:387:                                    ; preds = %382, %358
  %388 = phi void (%struct.client*)* [ %386, %382 ], [ %354, %358 ], !dbg !5916
  %389 = icmp eq void (%struct.client*)* %388, @scriptCommand, !dbg !5917
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5911
  br i1 %389, label %390, label %411, !dbg !5911

; <label>:390:                                    ; preds = %387
  %391 = load i32, i32* %105, align 8, !dbg !5918, !tbaa !1203
  %392 = icmp eq i32 %391, 2, !dbg !5919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5920
  br i1 %392, label %393, label %411, !dbg !5920

; <label>:393:                                    ; preds = %390
  %394 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !5921, !tbaa !1173
  %395 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %394, i64 1, !dbg !5921
  %396 = load %struct.redisObject*, %struct.redisObject** %395, align 8, !dbg !5921, !tbaa !1178
  %397 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %396, i64 0, i32 2, !dbg !5921
  %398 = load i8*, i8** %397, align 8, !dbg !5921, !tbaa !1180
  %399 = load i8, i8* %398, align 1, !dbg !5921, !tbaa !1382
  %400 = call i8* @__locale_ctype_ptr() #9, !dbg !5921
  %401 = getelementptr inbounds i8, i8* %400, i64 1, !dbg !5921
  %402 = sext i8 %399 to i32, !dbg !5921
  %403 = sext i8 %399 to i64, !dbg !5921
  %404 = getelementptr inbounds i8, i8* %401, i64 %403, !dbg !5921
  %405 = load i8, i8* %404, align 1, !dbg !5921, !tbaa !1382
  %406 = and i8 %405, 3, !dbg !5921
  %407 = icmp eq i8 %406, 1, !dbg !5921
  %408 = add nsw i32 %402, 32, !dbg !5921
  %409 = select i1 %407, i32 %408, i32 %402, !dbg !5921
  %410 = icmp eq i32 %409, 107, !dbg !5922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5923
  br i1 %410, label %413, label %411, !dbg !5923

; <label>:411:                                    ; preds = %363, %393, %390, %387
  call void @flagTransaction(%struct.client* nonnull %0) #9, !dbg !5924
  %412 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 21), align 8, !dbg !5926, !tbaa !3637
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %412) #9, !dbg !5927
  br label %440, !dbg !5928

; <label>:413:                                    ; preds = %356, %350, %347, %393, %364
  %414 = load i32, i32* %302, align 8, !dbg !5929, !tbaa !1216
  %415 = and i32 %414, 8, !dbg !5931
  %416 = icmp eq i32 %415, 0, !dbg !5931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5932
  br i1 %416, label %431, label %417, !dbg !5932

; <label>:417:                                    ; preds = %413
  %418 = load %struct.redisCommand*, %struct.redisCommand** %22, align 8, !dbg !5933, !tbaa !1208
  %419 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %418, i64 0, i32 1, !dbg !5934
  %420 = bitcast {}** %419 to void (%struct.client*)**, !dbg !5934
  %421 = load void (%struct.client*)*, void (%struct.client*)** %420, align 8, !dbg !5934, !tbaa !5327
  %422 = icmp eq void (%struct.client*)* %421, @execCommand, !dbg !5935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5936
  br i1 %422, label %431, label %423, !dbg !5936

; <label>:423:                                    ; preds = %417
  %424 = icmp eq void (%struct.client*)* %421, @discardCommand, !dbg !5937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5938
  br i1 %424, label %431, label %425, !dbg !5938

; <label>:425:                                    ; preds = %423
  %426 = icmp eq void (%struct.client*)* %421, @multiCommand, !dbg !5939
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5940
  br i1 %426, label %431, label %427, !dbg !5940

; <label>:427:                                    ; preds = %425
  %428 = icmp eq void (%struct.client*)* %421, @watchCommand, !dbg !5941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5942
  br i1 %428, label %431, label %429, !dbg !5942

; <label>:429:                                    ; preds = %427
  call void @queueMultiCommand(%struct.client* nonnull %0) #9, !dbg !5943
  %430 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 12), align 8, !dbg !5945, !tbaa !3602
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %430) #9, !dbg !5946
  br label %439, !dbg !5947

; <label>:431:                                    ; preds = %427, %425, %423, %417, %413
  call void @call(%struct.client* nonnull %0, i32 15) #10, !dbg !5948
  %432 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !5950, !tbaa !4028
  %433 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 41, !dbg !5951
  store i64 %432, i64* %433, align 8, !dbg !5952, !tbaa !5953
  %434 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 236), align 8, !dbg !5954, !tbaa !4724
  %435 = getelementptr inbounds %struct.list, %struct.list* %434, i64 0, i32 5, !dbg !5954
  %436 = load i64, i64* %435, align 8, !dbg !5954, !tbaa !2811
  %437 = icmp eq i64 %436, 0, !dbg !5954
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5956
  br i1 %437, label %440, label %438, !dbg !5956

; <label>:438:                                    ; preds = %431
  call void @handleClientsBlockedOnKeys() #9, !dbg !5957
  br label %439, !dbg !5957

; <label>:439:                                    ; preds = %429, %438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5958
  br label %440, !dbg !5959

; <label>:440:                                    ; preds = %431, %439, %411, %345, %334, %320, %298, %279, %262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5960
  br label %441

; <label>:441:                                    ; preds = %216, %182, %440, %129, %113, %94, %11
  %442 = phi i32 [ 0, %113 ], [ 0, %440 ], [ 0, %129 ], [ 0, %94 ], [ -1, %11 ], [ 0, %182 ], [ %217, %216 ], !dbg !5961
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5962
  ret i32 %442, !dbg !5962
}

; Function Attrs: noredzone
declare dso_local void @moduleCallCommandFilters(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @flagTransaction(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyErrorFormat(%struct.client*, i8*, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.clusterNode* @getNodeByQuery(%struct.client*, %struct.redisCommand*, %struct.redisObject**, i32, i32*, i32*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @discardTransaction(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @clusterRedirectClient(%struct.client*, %struct.clusterNode*, i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @freeMemoryIfNeededAndSafe() local_unnamed_addr #0

; Function Attrs: norecurse noredzone nounwind
define dso_local i32 @writeCommandsDeniedByDiskError() local_unnamed_addr #8 !dbg !5767 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 167), align 4, !dbg !5963, !tbaa !3925
  %2 = icmp ne i32 %1, 0, !dbg !5964
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 156), align 8, !dbg !5965
  %4 = icmp sgt i32 %3, 0, !dbg !5966
  %5 = and i1 %2, %4, !dbg !5967
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !5968
  %7 = icmp eq i32 %6, -1, !dbg !5969
  %8 = and i1 %5, %7, !dbg !5967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5967
  br i1 %8, label %9, label %10, !dbg !5967

; <label>:9:                                      ; preds = %0
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5970
  br label %17, !dbg !5970

; <label>:10:                                     ; preds = %0
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !5971, !tbaa !3371
  %12 = icmp ne i32 %11, 0, !dbg !5972
  %13 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 140), align 8, !dbg !5973
  %14 = icmp eq i32 %13, -1, !dbg !5974
  %15 = and i1 %12, %14, !dbg !5975
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5975
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5976
  %16 = zext i1 %15 to i32, !dbg !5977
  br label %17, !dbg !5977

; <label>:17:                                     ; preds = %10, %9
  %18 = phi i32 [ 2, %9 ], [ %16, %10 ], !dbg !5976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5978
  ret i32 %18, !dbg !5978
}

; Function Attrs: noredzone
declare dso_local void @addReplySds(%struct.client*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @__locale_ctype_ptr() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @queueMultiCommand(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @handleClientsBlockedOnKeys() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @closeListeningSockets(i32) local_unnamed_addr #1 !dbg !5979 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5985
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !5987, !tbaa !3850
  %3 = icmp sgt i32 %2, 0, !dbg !5989
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5990
  br i1 %3, label %4, label %13, !dbg !5990

; <label>:4:                                      ; preds = %1, %4
  %5 = phi i64 [ %9, %4 ], [ 0, %1 ]
  %6 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 33, i64 %5, !dbg !5991
  %7 = load i32, i32* %6, align 4, !dbg !5991, !tbaa !1482
  %8 = tail call i32 @close(i32 %7) #9, !dbg !5992
  %9 = add nuw nsw i64 %5, 1, !dbg !5993
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5994
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !5987, !tbaa !3850
  %11 = sext i32 %10 to i64, !dbg !5989
  %12 = icmp slt i64 %9, %11, !dbg !5989
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5990
  br i1 %12, label %4, label %13, !dbg !5990, !llvm.loop !5995

; <label>:13:                                     ; preds = %4, %1
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !5997, !tbaa !3852
  %15 = icmp eq i32 %14, -1, !dbg !5999
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6000
  br i1 %15, label %18, label %16, !dbg !6000

; <label>:16:                                     ; preds = %13
  %17 = tail call i32 @close(i32 %14) #9, !dbg !6001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6001
  br label %18, !dbg !6001

; <label>:18:                                     ; preds = %13, %16
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !6002, !tbaa !2593
  %20 = icmp eq i32 %19, 0, !dbg !6004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6005
  br i1 %20, label %33, label %21, !dbg !6005

; <label>:21:                                     ; preds = %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6006
  %22 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !6008, !tbaa !6010
  %23 = icmp sgt i32 %22, 0, !dbg !6011
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6012
  br i1 %23, label %24, label %33, !dbg !6012

; <label>:24:                                     ; preds = %21, %24
  %25 = phi i64 [ %29, %24 ], [ 0, %21 ]
  %26 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 36, i64 %25, !dbg !6013
  %27 = load i32, i32* %26, align 4, !dbg !6013, !tbaa !1482
  %28 = tail call i32 @close(i32 %27) #9, !dbg !6014
  %29 = add nuw nsw i64 %25, 1, !dbg !6015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6016
  %30 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !6008, !tbaa !6010
  %31 = sext i32 %30 to i64, !dbg !6011
  %32 = icmp slt i64 %29, %31, !dbg !6011
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6012
  br i1 %32, label %24, label %33, !dbg !6012, !llvm.loop !6017

; <label>:33:                                     ; preds = %24, %21, %18
  %34 = icmp ne i32 %0, 0, !dbg !6019
  %35 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 8, !dbg !6021
  %36 = icmp ne i8* %35, null, !dbg !6022
  %37 = and i1 %34, %36, !dbg !6023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6023
  br i1 %37, label %38, label %41, !dbg !6023

; <label>:38:                                     ; preds = %33
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.347, i64 0, i64 0)) #10, !dbg !6024
  %39 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 8, !dbg !6026, !tbaa !3846
  %40 = tail call i32 @unlink(i8* %39) #9, !dbg !6027
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6028
  br label %41, !dbg !6028

; <label>:41:                                     ; preds = %38, %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6029
  ret void, !dbg !6029
}

; Function Attrs: noredzone nounwind
define dso_local i32 @prepareForShutdown(i32) local_unnamed_addr #1 !dbg !6030 {
  %2 = alloca %struct.rdbSaveInfo, align 8
  %3 = and i32 %0, 1, !dbg !6040
  %4 = and i32 %0, 2, !dbg !6042
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.348, i64 0, i64 0)) #10, !dbg !6044
  tail call void @ldbKillForkedSessions() #9, !dbg !6045
  %5 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !6046, !tbaa !2434
  %6 = icmp eq i32 %5, -1, !dbg !6048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6049
  br i1 %6, label %11, label %7, !dbg !6049

; <label>:7:                                      ; preds = %1
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.349, i64 0, i64 0)) #10, !dbg !6050
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !6052, !tbaa !2434
  %9 = tail call i32 @kill(i32 %8, i32 10) #9, !dbg !6053
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !6054, !tbaa !2434
  tail call void @rdbRemoveTempFile(i32 %10) #9, !dbg !6055
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6056
  br label %11, !dbg !6056

; <label>:11:                                     ; preds = %1, %7
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !6057, !tbaa !3371
  %13 = icmp eq i32 %12, 0, !dbg !6059
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6060
  br i1 %13, label %26, label %14, !dbg !6060

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !6061, !tbaa !3298
  %16 = icmp eq i32 %15, -1, !dbg !6064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6065
  br i1 %16, label %23, label %17, !dbg !6065

; <label>:17:                                     ; preds = %14
  %18 = icmp eq i32 %12, 2, !dbg !6066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6069
  br i1 %18, label %19, label %20, !dbg !6069

; <label>:19:                                     ; preds = %17
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.350, i64 0, i64 0)) #10, !dbg !6070
  br label %54, !dbg !6072

; <label>:20:                                     ; preds = %17
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.351, i64 0, i64 0)) #10, !dbg !6073
  %21 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !6074, !tbaa !3298
  %22 = tail call i32 @kill(i32 %21, i32 10) #9, !dbg !6075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6076
  br label %23, !dbg !6076

; <label>:23:                                     ; preds = %14, %20
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.352, i64 0, i64 0)) #10, !dbg !6077
  tail call void @flushAppendOnlyFile(i32 1) #9, !dbg !6078
  %24 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 130), align 8, !dbg !6079, !tbaa !3900
  %25 = tail call i32 @fsync(i32 %24) #9, !dbg !6080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6081
  br label %26, !dbg !6081

; <label>:26:                                     ; preds = %11, %23
  %27 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 156), align 8, !dbg !6082, !tbaa !3340
  %28 = icmp sgt i32 %27, 0, !dbg !6083
  %29 = icmp eq i32 %4, 0, !dbg !6084
  %30 = and i1 %29, %28, !dbg !6085
  %31 = icmp ne i32 %3, 0, !dbg !6086
  %32 = or i1 %31, %30, !dbg !6085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6085
  br i1 %32, label %33, label %41, !dbg !6085

; <label>:33:                                     ; preds = %26
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.353, i64 0, i64 0)) #10, !dbg !6087
  %34 = bitcast %struct.rdbSaveInfo* %2 to i8*, !dbg !6088
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #4, !dbg !6088
  %35 = call %struct.rdbSaveInfo* @rdbPopulateSaveInfo(%struct.rdbSaveInfo* nonnull %2) #9, !dbg !6090
  %36 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !6092, !tbaa !3362
  %37 = call i32 @rdbSave(i8* %36, %struct.rdbSaveInfo* %35) #9, !dbg !6094
  %38 = icmp eq i32 %37, 0, !dbg !6095
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6096
  br i1 %38, label %40, label %39, !dbg !6096

; <label>:39:                                     ; preds = %33
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.354, i64 0, i64 0)) #10, !dbg !6097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6099
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #4, !dbg !6100
  br label %54

; <label>:40:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6100
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #4, !dbg !6100
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %41

; <label>:41:                                     ; preds = %40, %26
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 115), align 4, !dbg !6101, !tbaa !3876
  %43 = icmp ne i32 %42, 0, !dbg !6103
  %44 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !6104
  %45 = icmp ne i8* %44, null, !dbg !6105
  %46 = or i1 %43, %45, !dbg !6106
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6106
  br i1 %46, label %47, label %50, !dbg !6106

; <label>:47:                                     ; preds = %41
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.355, i64 0, i64 0)) #10, !dbg !6107
  %48 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !6109, !tbaa !3913
  %49 = call i32 @unlink(i8* %48) #9, !dbg !6110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6111
  br label %50, !dbg !6111

; <label>:50:                                     ; preds = %41, %47
  call void @flushSlavesOutputBuffers() #9, !dbg !6112
  call void @closeListeningSockets(i32 1) #10, !dbg !6113
  %51 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !6114, !tbaa !1803
  %52 = icmp eq i32 %51, 0, !dbg !6115
  %53 = select i1 %52, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.357, i64 0, i64 0), !dbg !6115
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.356, i64 0, i64 0), i8* %53) #10, !dbg !6116
  br label %54, !dbg !6117

; <label>:54:                                     ; preds = %39, %50, %19
  %55 = phi i32 [ -1, %19 ], [ 0, %50 ], [ -1, %39 ], !dbg !6118
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6119
  ret i32 %55, !dbg !6119
}

; Function Attrs: noredzone
declare dso_local void @ldbKillForkedSessions() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @kill(i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @rdbRemoveTempFile(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @fsync(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @rdbSave(i8*, %struct.rdbSaveInfo*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @flushSlavesOutputBuffers() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @time_independent_strcmp(i8*, i8*) local_unnamed_addr #1 !dbg !6120 {
  %3 = alloca [512 x i8], align 16
  %4 = alloca [512 x i8], align 16
  %5 = getelementptr inbounds [512 x i8], [512 x i8]* %3, i64 0, i64 0, !dbg !6137
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %5) #4, !dbg !6137
  %6 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0, !dbg !6137
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %6) #4, !dbg !6137
  %7 = tail call i64 @strlen(i8* %0) #9, !dbg !6140
  %8 = tail call i64 @strlen(i8* %1) #9, !dbg !6141
  %9 = and i64 %7, 4294967295, !dbg !6143
  %10 = icmp ugt i64 %9, 512, !dbg !6145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6146
  br i1 %10, label %43, label %11, !dbg !6146

; <label>:11:                                     ; preds = %2
  %12 = and i64 %8, 4294967295, !dbg !6147
  %13 = icmp ugt i64 %12, 512, !dbg !6148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6149
  br i1 %13, label %43, label %14, !dbg !6149

; <label>:14:                                     ; preds = %11
  %15 = call i8* @memset(i8* nonnull %5, i32 0, i64 512) #9, !dbg !6150
  %16 = call i8* @memset(i8* nonnull %6, i32 0, i64 512) #9, !dbg !6151
  %17 = call i8* @memcpy(i8* nonnull %5, i8* %0, i64 %9) #9, !dbg !6152
  %18 = call i8* @memcpy(i8* nonnull %6, i8* %1, i64 %12) #9, !dbg !6153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6157
  br label %19, !dbg !6157

; <label>:19:                                     ; preds = %19, %14
  %20 = phi i64 [ 0, %14 ], [ %37, %19 ]
  %21 = phi i32 [ 0, %14 ], [ %36, %19 ]
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %3, i64 0, i64 %20, !dbg !6158
  %23 = load i8, i8* %22, align 2, !dbg !6158, !tbaa !1382
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 %20, !dbg !6161
  %25 = load i8, i8* %24, align 2, !dbg !6161, !tbaa !1382
  %26 = xor i8 %25, %23, !dbg !6162
  %27 = sext i8 %26 to i32, !dbg !6162
  %28 = or i32 %21, %27, !dbg !6163
  %29 = or i64 %20, 1, !dbg !6164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6157
  %30 = getelementptr inbounds [512 x i8], [512 x i8]* %3, i64 0, i64 %29, !dbg !6158
  %31 = load i8, i8* %30, align 1, !dbg !6158, !tbaa !1382
  %32 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 %29, !dbg !6161
  %33 = load i8, i8* %32, align 1, !dbg !6161, !tbaa !1382
  %34 = xor i8 %33, %31, !dbg !6162
  %35 = sext i8 %34 to i32, !dbg !6162
  %36 = or i32 %28, %35, !dbg !6163
  %37 = add nuw nsw i64 %20, 2, !dbg !6164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6157
  %38 = icmp eq i64 %37, 512, !dbg !6166
  br i1 %38, label %39, label %19, !dbg !6157, !llvm.loop !6167

; <label>:39:                                     ; preds = %19
  %40 = xor i64 %8, %7, !dbg !6169
  %41 = trunc i64 %40 to i32, !dbg !6169
  %42 = or i32 %36, %41, !dbg !6170
  br label %43, !dbg !6171

; <label>:43:                                     ; preds = %2, %11, %39
  %44 = phi i32 [ %42, %39 ], [ 1, %11 ], [ 1, %2 ], !dbg !6172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6173
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %6) #4, !dbg !6174
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %5) #4, !dbg !6174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6174
  ret i32 %44, !dbg !6174
}

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCBuffer(%struct.client*, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyBulk(%struct.client*, %struct.redisObject*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyMultiBulkLen(%struct.client*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyBulkLongLong(%struct.client*, i64) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @addReplyCommandFlag(%struct.client*, %struct.redisCommand* nocapture readonly, i32, i8*) local_unnamed_addr #1 !dbg !6175 {
  %5 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 4, !dbg !6187
  %6 = load i32, i32* %5, align 8, !dbg !6187, !tbaa !4259
  %7 = and i32 %6, %2, !dbg !6189
  %8 = icmp eq i32 %7, 0, !dbg !6189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6190
  br i1 %8, label %10, label %9, !dbg !6190

; <label>:9:                                      ; preds = %4
  tail call void @addReplyStatus(%struct.client* %0, i8* %3) #9, !dbg !6191
  br label %10, !dbg !6193

; <label>:10:                                     ; preds = %4, %9
  %11 = phi i32 [ 1, %9 ], [ 0, %4 ], !dbg !6194
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6196
  ret i32 %11, !dbg !6196
}

; Function Attrs: noredzone
declare dso_local void @addReplyStatus(%struct.client*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @addReplyCommand(%struct.client*, %struct.redisCommand* readonly) local_unnamed_addr #1 !dbg !6197 {
  %3 = icmp eq %struct.redisCommand* %1, null, !dbg !6209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6210
  br i1 %3, label %4, label %6, !dbg !6210

; <label>:4:                                      ; preds = %2
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !6211, !tbaa !3587
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %5) #9, !dbg !6213
  br label %152, !dbg !6214

; <label>:6:                                      ; preds = %2
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 6) #9, !dbg !6215
  %7 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 0, !dbg !6216
  %8 = load i8*, i8** %7, align 8, !dbg !6216, !tbaa !1210
  tail call void @addReplyBulkCString(%struct.client* %0, i8* %8) #9, !dbg !6217
  %9 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 2, !dbg !6218
  %10 = load i32, i32* %9, align 8, !dbg !6218, !tbaa !1457
  %11 = sext i32 %10 to i64, !dbg !6219
  tail call void @addReplyLongLong(%struct.client* %0, i64 %11) #9, !dbg !6220
  %12 = tail call i8* @addDeferredMultiBulkLength(%struct.client* %0) #9, !dbg !6222
  %13 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 4, !dbg !6229
  %14 = load i32, i32* %13, align 8, !dbg !6229, !tbaa !4259
  %15 = and i32 %14, 1, !dbg !6230
  %16 = icmp eq i32 %15, 0, !dbg !6230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6231
  br i1 %16, label %19, label %17, !dbg !6231

; <label>:17:                                     ; preds = %6
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.362, i64 0, i64 0)) #9, !dbg !6232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6233
  %18 = load i32, i32* %13, align 8, !dbg !6234, !tbaa !4259
  br label %20, !dbg !6233

; <label>:19:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6236
  br label %20, !dbg !6236

; <label>:20:                                     ; preds = %17, %19
  %21 = phi i32 [ %18, %17 ], [ %14, %19 ], !dbg !6234
  %22 = phi i32 [ 1, %17 ], [ 0, %19 ], !dbg !6237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6238
  %23 = and i32 %21, 2, !dbg !6243
  %24 = icmp eq i32 %23, 0, !dbg !6243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6244
  br i1 %24, label %27, label %25, !dbg !6244

; <label>:25:                                     ; preds = %20
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.186, i64 0, i64 0)) #9, !dbg !6245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6246
  %26 = load i32, i32* %13, align 8, !dbg !6247, !tbaa !4259
  br label %28, !dbg !6246

; <label>:27:                                     ; preds = %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6249
  br label %28, !dbg !6249

; <label>:28:                                     ; preds = %25, %27
  %29 = phi i32 [ %26, %25 ], [ %21, %27 ], !dbg !6247
  %30 = phi i32 [ 1, %25 ], [ 0, %27 ], !dbg !6250
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6251
  %31 = add nuw nsw i32 %30, %22, !dbg !6252
  %32 = and i32 %29, 4, !dbg !6257
  %33 = icmp eq i32 %32, 0, !dbg !6257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6258
  br i1 %33, label %36, label %34, !dbg !6258

; <label>:34:                                     ; preds = %28
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.363, i64 0, i64 0)) #9, !dbg !6259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6260
  %35 = load i32, i32* %13, align 8, !dbg !6261, !tbaa !4259
  br label %37, !dbg !6260

; <label>:36:                                     ; preds = %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6263
  br label %37, !dbg !6263

; <label>:37:                                     ; preds = %34, %36
  %38 = phi i32 [ %35, %34 ], [ %29, %36 ], !dbg !6261
  %39 = phi i32 [ 1, %34 ], [ 0, %36 ], !dbg !6264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6265
  %40 = add nuw nsw i32 %31, %39, !dbg !6266
  %41 = and i32 %38, 16, !dbg !6271
  %42 = icmp eq i32 %41, 0, !dbg !6271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6272
  br i1 %42, label %45, label %43, !dbg !6272

; <label>:43:                                     ; preds = %37
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.364, i64 0, i64 0)) #9, !dbg !6273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6274
  %44 = load i32, i32* %13, align 8, !dbg !6275, !tbaa !4259
  br label %46, !dbg !6274

; <label>:45:                                     ; preds = %37
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6277
  br label %46, !dbg !6277

; <label>:46:                                     ; preds = %43, %45
  %47 = phi i32 [ %44, %43 ], [ %38, %45 ], !dbg !6275
  %48 = phi i32 [ 1, %43 ], [ 0, %45 ], !dbg !6278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6279
  %49 = add nuw nsw i32 %40, %48, !dbg !6280
  %50 = and i32 %47, 32, !dbg !6285
  %51 = icmp eq i32 %50, 0, !dbg !6285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6286
  br i1 %51, label %54, label %52, !dbg !6286

; <label>:52:                                     ; preds = %46
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0)) #9, !dbg !6287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6288
  %53 = load i32, i32* %13, align 8, !dbg !6289, !tbaa !4259
  br label %55, !dbg !6288

; <label>:54:                                     ; preds = %46
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6291
  br label %55, !dbg !6291

; <label>:55:                                     ; preds = %52, %54
  %56 = phi i32 [ %53, %52 ], [ %47, %54 ], !dbg !6289
  %57 = phi i32 [ 1, %52 ], [ 0, %54 ], !dbg !6292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6293
  %58 = add nuw nsw i32 %49, %57, !dbg !6294
  %59 = and i32 %56, 64, !dbg !6299
  %60 = icmp eq i32 %59, 0, !dbg !6299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6300
  br i1 %60, label %63, label %61, !dbg !6300

; <label>:61:                                     ; preds = %55
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.365, i64 0, i64 0)) #9, !dbg !6301
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6302
  %62 = load i32, i32* %13, align 8, !dbg !6303, !tbaa !4259
  br label %64, !dbg !6302

; <label>:63:                                     ; preds = %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6305
  br label %64, !dbg !6305

; <label>:64:                                     ; preds = %61, %63
  %65 = phi i32 [ %62, %61 ], [ %56, %63 ], !dbg !6303
  %66 = phi i32 [ 1, %61 ], [ 0, %63 ], !dbg !6306
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6307
  %67 = add nuw nsw i32 %58, %66, !dbg !6308
  %68 = trunc i32 %65 to i8, !dbg !6313
  %69 = icmp sgt i8 %68, -1, !dbg !6313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6314
  br i1 %69, label %72, label %70, !dbg !6314

; <label>:70:                                     ; preds = %64
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.366, i64 0, i64 0)) #9, !dbg !6315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6316
  %71 = load i32, i32* %13, align 8, !dbg !6317, !tbaa !4259
  br label %73, !dbg !6316

; <label>:72:                                     ; preds = %64
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6319
  br label %73, !dbg !6319

; <label>:73:                                     ; preds = %70, %72
  %74 = phi i32 [ %71, %70 ], [ %65, %72 ], !dbg !6317
  %75 = phi i32 [ 1, %70 ], [ 0, %72 ], !dbg !6320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6321
  %76 = add nsw i32 %67, %75, !dbg !6322
  %77 = and i32 %74, 256, !dbg !6327
  %78 = icmp eq i32 %77, 0, !dbg !6327
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6328
  br i1 %78, label %81, label %79, !dbg !6328

; <label>:79:                                     ; preds = %73
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.367, i64 0, i64 0)) #9, !dbg !6329
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6330
  %80 = load i32, i32* %13, align 8, !dbg !6331, !tbaa !4259
  br label %82, !dbg !6330

; <label>:81:                                     ; preds = %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6333
  br label %82, !dbg !6333

; <label>:82:                                     ; preds = %79, %81
  %83 = phi i32 [ %80, %79 ], [ %74, %81 ], !dbg !6331
  %84 = phi i32 [ 1, %79 ], [ 0, %81 ], !dbg !6334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6335
  %85 = add nsw i32 %76, %84, !dbg !6336
  %86 = and i32 %83, 512, !dbg !6341
  %87 = icmp eq i32 %86, 0, !dbg !6341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6342
  br i1 %87, label %90, label %88, !dbg !6342

; <label>:88:                                     ; preds = %82
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.368, i64 0, i64 0)) #9, !dbg !6343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6344
  %89 = load i32, i32* %13, align 8, !dbg !6345, !tbaa !4259
  br label %91, !dbg !6344

; <label>:90:                                     ; preds = %82
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6347
  br label %91, !dbg !6347

; <label>:91:                                     ; preds = %88, %90
  %92 = phi i32 [ %89, %88 ], [ %83, %90 ], !dbg !6345
  %93 = phi i32 [ 1, %88 ], [ 0, %90 ], !dbg !6348
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6349
  %94 = add nsw i32 %85, %93, !dbg !6350
  %95 = and i32 %92, 1024, !dbg !6355
  %96 = icmp eq i32 %95, 0, !dbg !6355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6356
  br i1 %96, label %99, label %97, !dbg !6356

; <label>:97:                                     ; preds = %91
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.369, i64 0, i64 0)) #9, !dbg !6357
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6358
  %98 = load i32, i32* %13, align 8, !dbg !6359, !tbaa !4259
  br label %100, !dbg !6358

; <label>:99:                                     ; preds = %91
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6361
  br label %100, !dbg !6361

; <label>:100:                                    ; preds = %97, %99
  %101 = phi i32 [ %98, %97 ], [ %92, %99 ], !dbg !6359
  %102 = phi i32 [ 1, %97 ], [ 0, %99 ], !dbg !6362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6363
  %103 = add nsw i32 %94, %102, !dbg !6364
  %104 = and i32 %101, 2048, !dbg !6369
  %105 = icmp eq i32 %104, 0, !dbg !6369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6370
  br i1 %105, label %108, label %106, !dbg !6370

; <label>:106:                                    ; preds = %100
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.370, i64 0, i64 0)) #9, !dbg !6371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6372
  %107 = load i32, i32* %13, align 8, !dbg !6373, !tbaa !4259
  br label %109, !dbg !6372

; <label>:108:                                    ; preds = %100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6375
  br label %109, !dbg !6375

; <label>:109:                                    ; preds = %106, %108
  %110 = phi i32 [ %107, %106 ], [ %101, %108 ], !dbg !6373
  %111 = phi i32 [ 1, %106 ], [ 0, %108 ], !dbg !6376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6377
  %112 = add nsw i32 %103, %111, !dbg !6378
  %113 = and i32 %110, 4096, !dbg !6383
  %114 = icmp eq i32 %113, 0, !dbg !6383
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6384
  br i1 %114, label %117, label %115, !dbg !6384

; <label>:115:                                    ; preds = %109
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i64 0, i64 0)) #9, !dbg !6385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6386
  %116 = load i32, i32* %13, align 8, !dbg !6387, !tbaa !4259
  br label %118, !dbg !6386

; <label>:117:                                    ; preds = %109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6389
  br label %118, !dbg !6389

; <label>:118:                                    ; preds = %115, %117
  %119 = phi i32 [ %116, %115 ], [ %110, %117 ], !dbg !6387
  %120 = phi i32 [ 1, %115 ], [ 0, %117 ], !dbg !6390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6391
  %121 = add nsw i32 %112, %120, !dbg !6392
  %122 = and i32 %119, 8192, !dbg !6397
  %123 = icmp eq i32 %122, 0, !dbg !6397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6398
  br i1 %123, label %125, label %124, !dbg !6398

; <label>:124:                                    ; preds = %118
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.371, i64 0, i64 0)) #9, !dbg !6399
  br label %125, !dbg !6400

; <label>:125:                                    ; preds = %118, %124
  %126 = phi i32 [ 1, %124 ], [ 0, %118 ], !dbg !6401
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6403
  %127 = add nsw i32 %121, %126, !dbg !6404
  %128 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 5, !dbg !6405
  %129 = load i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %128, align 8, !dbg !6405, !tbaa !1445
  %130 = icmp eq i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)* %129, null, !dbg !6407
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6408
  %131 = load i32, i32* %13, align 8, !dbg !6409, !tbaa !4259
  br i1 %130, label %135, label %132, !dbg !6408

; <label>:132:                                    ; preds = %125
  %133 = and i32 %131, 8, !dbg !6410
  %134 = icmp eq i32 %133, 0, !dbg !6410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6411
  br i1 %134, label %138, label %135, !dbg !6411

; <label>:135:                                    ; preds = %125, %132
  %136 = and i32 %131, 16384, !dbg !6412
  %137 = icmp eq i32 %136, 0, !dbg !6412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6413
  br i1 %137, label %140, label %138, !dbg !6413

; <label>:138:                                    ; preds = %132, %135
  tail call void @addReplyStatus(%struct.client* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.372, i64 0, i64 0)) #9, !dbg !6414
  %139 = add nsw i32 %127, 1, !dbg !6416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6417
  br label %140, !dbg !6417

; <label>:140:                                    ; preds = %135, %138
  %141 = phi i32 [ %139, %138 ], [ %127, %135 ], !dbg !6402
  %142 = sext i32 %141 to i64, !dbg !6418
  tail call void @setDeferredMultiBulkLength(%struct.client* %0, i8* %12, i64 %142) #9, !dbg !6419
  %143 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 6, !dbg !6420
  %144 = load i32, i32* %143, align 8, !dbg !6420, !tbaa !1449
  %145 = sext i32 %144 to i64, !dbg !6421
  tail call void @addReplyLongLong(%struct.client* %0, i64 %145) #9, !dbg !6422
  %146 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 7, !dbg !6423
  %147 = load i32, i32* %146, align 4, !dbg !6423, !tbaa !6424
  %148 = sext i32 %147 to i64, !dbg !6425
  tail call void @addReplyLongLong(%struct.client* %0, i64 %148) #9, !dbg !6426
  %149 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 8, !dbg !6427
  %150 = load i32, i32* %149, align 8, !dbg !6427, !tbaa !6428
  %151 = sext i32 %150 to i64, !dbg !6429
  tail call void @addReplyLongLong(%struct.client* %0, i64 %151) #9, !dbg !6430
  br label %152

; <label>:152:                                    ; preds = %140, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6431
  ret void, !dbg !6431
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCString(%struct.client*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyLongLong(%struct.client*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @addDeferredMultiBulkLength(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @setDeferredMultiBulkLength(%struct.client*, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyHelp(%struct.client*, i8**) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32* @getKeysFromCommand(%struct.redisCommand*, %struct.redisObject**, i32, i32*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @getKeysFreeResult(i32*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplySubcommandSyntaxError(%struct.client*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i8* @genRedisInfoString(i8* readonly) local_unnamed_addr #1 !dbg !366 {
  %2 = alloca %struct.rusage, align 8
  %3 = alloca %struct.rusage, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca [64 x i8], align 16
  %7 = alloca [64 x i8], align 16
  %8 = alloca [64 x i8], align 16
  %9 = alloca [64 x i8], align 16
  %10 = alloca [64 x i8], align 16
  %11 = alloca [64 x i8], align 16
  %12 = alloca [64 x i8], align 16
  %13 = alloca %struct.listIter, align 8
  %14 = alloca [46 x i8], align 16
  %15 = alloca i32, align 4
  %16 = tail call i8* @sdsempty() #9, !dbg !6433
  %17 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !6435, !tbaa !2619
  %18 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 69), align 8, !dbg !6436, !tbaa !4871
  %19 = sub nsw i64 %17, %18, !dbg !6437
  %20 = bitcast %struct.rusage* %2 to i8*, !dbg !6439
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %20) #4, !dbg !6439
  %21 = bitcast %struct.rusage* %3 to i8*, !dbg !6439
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %21) #4, !dbg !6439
  %22 = icmp eq i8* %0, null, !dbg !6443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6445
  br i1 %22, label %23, label %24, !dbg !6445

; <label>:23:                                     ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6446
  br label %24, !dbg !6446

; <label>:24:                                     ; preds = %23, %1
  %25 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0), %23 ], [ %0, %1 ]
  %26 = tail call i32 @strcasecmp(i8* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.385, i64 0, i64 0)) #11, !dbg !6447
  %27 = icmp eq i32 %26, 0, !dbg !6448
  %28 = tail call i32 @strcasecmp(i8* nonnull %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.384, i64 0, i64 0)) #11, !dbg !6449
  %29 = icmp eq i32 %28, 0, !dbg !6450
  %30 = call i32 @getrusage(i32 0, %struct.rusage* nonnull %2) #9, !dbg !6452
  %31 = call i32 @getrusage(i32 -1, %struct.rusage* nonnull %3) #9, !dbg !6454
  %32 = or i1 %27, %29, !dbg !6455
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6455
  br i1 %32, label %37, label %33, !dbg !6455

; <label>:33:                                     ; preds = %24
  %34 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.386, i64 0, i64 0)) #11, !dbg !6456
  %35 = icmp eq i32 %34, 0, !dbg !6456
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6457
  br i1 %35, label %37, label %36, !dbg !6457

; <label>:36:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6458
  br label %74, !dbg !6458

; <label>:37:                                     ; preds = %33, %24
  %38 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !6459, !tbaa !2593
  %39 = icmp eq i32 %38, 0, !dbg !6461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6462
  br i1 %39, label %41, label %40, !dbg !6462

; <label>:40:                                     ; preds = %37
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6464
  br label %45, !dbg !6464

; <label>:41:                                     ; preds = %37
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !6465, !tbaa !1803
  %43 = icmp eq i32 %42, 0, !dbg !6467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6468
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %44 = select i1 %43, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.388, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.387, i64 0, i64 0)
  br label %45

; <label>:45:                                     ; preds = %41, %40
  %46 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0), %40 ], [ %44, %41 ], !dbg !6469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6470
  %47 = load i1, i1* @genRedisInfoString.call_uname, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6471
  br i1 %47, label %50, label %48, !dbg !6471

; <label>:48:                                     ; preds = %45
  %49 = call i32 @uname(%struct.utsname* nonnull @genRedisInfoString.name) #9, !dbg !6472
  store i1 true, i1* @genRedisInfoString.call_uname, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6475
  br label %50, !dbg !6475

; <label>:50:                                     ; preds = %48, %45
  %51 = load atomic i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 11) monotonic, align 8, !dbg !6476
  %52 = call i8* @redisGitSHA1() #9, !dbg !6479
  %53 = call i8* @redisGitDirty() #9, !dbg !6480
  %54 = call i64 @strtol(i8* %53, i8** null, i32 10) #9, !dbg !6481
  %55 = icmp sgt i64 %54, 0, !dbg !6482
  %56 = zext i1 %55 to i32, !dbg !6482
  %57 = call i64 @redisBuildId() #9, !dbg !6483
  %58 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 17), align 8, !dbg !6484, !tbaa !3838
  %59 = call i8* @aeGetApiName() #9, !dbg !6485
  %60 = call i32 @getpid() #9, !dbg !6486
  %61 = sext i32 %60 to i64, !dbg !6487
  %62 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !6488, !tbaa !3840
  %63 = sdiv i64 %19, 86400, !dbg !6489
  %64 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 6), align 8, !dbg !6490, !tbaa !2815
  %65 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 5), align 4, !dbg !6491, !tbaa !3121
  %66 = zext i32 %51 to i64, !dbg !6492
  %67 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 8, !dbg !6493, !tbaa !4300
  %68 = icmp eq i8* %67, null, !dbg !6494
  %69 = select i1 %68, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.309, i64 0, i64 0), i8* %67, !dbg !6494
  %70 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !6495, !tbaa !6496
  %71 = icmp eq i8* %70, null, !dbg !6497
  %72 = select i1 %71, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.309, i64 0, i64 0), i8* %70, !dbg !6497
  %73 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %16, i8* getelementptr inbounds ([346 x i8], [346 x i8]* @.str.389, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.390, i64 0, i64 0), i8* %52, i32 %56, i64 %57, i8* %46, i8* getelementptr inbounds (%struct.utsname, %struct.utsname* @genRedisInfoString.name, i64 0, i32 0, i64 0), i8* getelementptr inbounds (%struct.utsname, %struct.utsname* @genRedisInfoString.name, i64 0, i32 2, i64 0), i8* getelementptr inbounds (%struct.utsname, %struct.utsname* @genRedisInfoString.name, i64 0, i32 4, i64 0), i32 %58, i8* %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.391, i64 0, i64 0), i32 4, i32 2, i32 1, i64 %61, i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 19, i64 0), i32 %62, i64 %19, i64 %63, i32 %64, i32 %65, i64 %66, i8* %69, i8* %72) #9, !dbg !6498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6458
  br i1 %32, label %80, label %74, !dbg !6458

; <label>:74:                                     ; preds = %36, %50
  %75 = phi i8* [ %16, %36 ], [ %73, %50 ]
  %76 = phi i32 [ 0, %36 ], [ 1, %50 ]
  %77 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.392, i64 0, i64 0)) #11, !dbg !6500
  %78 = icmp eq i32 %77, 0, !dbg !6500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6501
  br i1 %78, label %80, label %79, !dbg !6501

; <label>:79:                                     ; preds = %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6502
  br label %102, !dbg !6502

; <label>:80:                                     ; preds = %74, %50
  %81 = phi i8* [ %75, %74 ], [ %73, %50 ]
  %82 = phi i32 [ %76, %74 ], [ 1, %50 ]
  %83 = bitcast i64* %4 to i8*, !dbg !6503
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #4, !dbg !6503
  %84 = bitcast i64* %5 to i8*, !dbg !6503
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #4, !dbg !6503
  call void @getExpansiveClientsInfo(i64* nonnull %4, i64* nonnull %5) #10, !dbg !6506
  %85 = add nuw nsw i32 %82, 1, !dbg !6507
  %86 = icmp eq i32 %82, 0, !dbg !6507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6509
  br i1 %86, label %89, label %87, !dbg !6509

; <label>:87:                                     ; preds = %80
  %88 = call i8* @sdscat(i8* %81, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !6510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6511
  br label %89, !dbg !6511

; <label>:89:                                     ; preds = %87, %80
  %90 = phi i8* [ %88, %87 ], [ %81, %80 ], !dbg !6512
  %91 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 38), align 8, !dbg !6513, !tbaa !2810
  %92 = getelementptr inbounds %struct.list, %struct.list* %91, i64 0, i32 5, !dbg !6513
  %93 = load i64, i64* %92, align 8, !dbg !6513, !tbaa !2811
  %94 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !6514, !tbaa !3255
  %95 = getelementptr inbounds %struct.list, %struct.list* %94, i64 0, i32 5, !dbg !6514
  %96 = load i64, i64* %95, align 8, !dbg !6514, !tbaa !2811
  %97 = sub i64 %93, %96, !dbg !6515
  %98 = load i64, i64* %4, align 8, !dbg !6516, !tbaa !2045
  %99 = load i64, i64* %5, align 8, !dbg !6517, !tbaa !2045
  %100 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 233), align 8, !dbg !6518, !tbaa !3934
  %101 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %90, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.393, i64 0, i64 0), i64 %97, i64 %98, i64 %99, i32 %100) #9, !dbg !6519
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #4, !dbg !6520
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #4, !dbg !6520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6502
  br i1 %32, label %108, label %102, !dbg !6502

; <label>:102:                                    ; preds = %79, %89
  %103 = phi i8* [ %75, %79 ], [ %101, %89 ]
  %104 = phi i32 [ %76, %79 ], [ %85, %89 ]
  %105 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.190, i64 0, i64 0)) #11, !dbg !6522
  %106 = icmp eq i32 %105, 0, !dbg !6522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6523
  br i1 %106, label %108, label %107, !dbg !6523

; <label>:107:                                    ; preds = %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6524
  br label %199, !dbg !6524

; <label>:108:                                    ; preds = %102, %89
  %109 = phi i8* [ %103, %102 ], [ %101, %89 ]
  %110 = phi i32 [ %104, %102 ], [ %85, %89 ]
  %111 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0, !dbg !6525
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %111) #4, !dbg !6525
  %112 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0, !dbg !6527
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %112) #4, !dbg !6527
  %113 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0, !dbg !6529
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %113) #4, !dbg !6529
  %114 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0, !dbg !6531
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %114) #4, !dbg !6531
  %115 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0, !dbg !6533
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %115) #4, !dbg !6533
  %116 = getelementptr inbounds [64 x i8], [64 x i8]* %11, i64 0, i64 0, !dbg !6535
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %116) #4, !dbg !6535
  %117 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 0, !dbg !6537
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %117) #4, !dbg !6537
  %118 = call i64 @zmalloc_used_memory() #9, !dbg !6539
  %119 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 295), align 8, !dbg !6541, !tbaa !4732
  %120 = call i8* @evictPolicyToString() #9, !dbg !6543
  %121 = load %struct.lua_State*, %struct.lua_State** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 270), align 8, !dbg !6545, !tbaa !3185
  %122 = call i32 @lua_gc(%struct.lua_State* %121, i32 3, i32 0) #9, !dbg !6546
  %123 = sext i32 %122 to i64, !dbg !6547
  %124 = shl nsw i64 %123, 10, !dbg !6548
  %125 = call %struct.redisMemOverhead* @getMemoryOverheadData() #9, !dbg !6550
  %126 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6552, !tbaa !3165
  %127 = icmp ugt i64 %118, %126, !dbg !6554
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6555
  br i1 %127, label %128, label %129, !dbg !6555

; <label>:128:                                    ; preds = %108
  store i64 %118, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6556, !tbaa !3165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6557
  br label %129, !dbg !6557

; <label>:129:                                    ; preds = %128, %108
  call fastcc void @bytesToHuman(i8* nonnull %111, i64 %118) #10, !dbg !6558
  %130 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6559, !tbaa !3165
  call fastcc void @bytesToHuman(i8* nonnull %112, i64 %130) #10, !dbg !6560
  call fastcc void @bytesToHuman(i8* nonnull %113, i64 %119) #10, !dbg !6561
  call fastcc void @bytesToHuman(i8* nonnull %114, i64 %124) #10, !dbg !6562
  %131 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 7, !dbg !6563
  %132 = load i64, i64* %131, align 8, !dbg !6563, !tbaa !6564
  call fastcc void @bytesToHuman(i8* nonnull %115, i64 %132) #10, !dbg !6567
  %133 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 1), align 8, !dbg !6568, !tbaa !3175
  call fastcc void @bytesToHuman(i8* nonnull %116, i64 %133) #10, !dbg !6569
  %134 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !6570, !tbaa !3937
  call fastcc void @bytesToHuman(i8* nonnull %117, i64 %134) #10, !dbg !6571
  %135 = add nsw i32 %110, 1, !dbg !6572
  %136 = icmp eq i32 %110, 0, !dbg !6572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6574
  br i1 %136, label %139, label %137, !dbg !6574

; <label>:137:                                    ; preds = %129
  %138 = call i8* @sdscat(i8* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !6575
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6576
  br label %139, !dbg !6576

; <label>:139:                                    ; preds = %137, %129
  %140 = phi i8* [ %138, %137 ], [ %109, %129 ], !dbg !6577
  %141 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 1), align 8, !dbg !6578, !tbaa !3175
  %142 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6579, !tbaa !3165
  %143 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 13, !dbg !6580
  %144 = load float, float* %143, align 4, !dbg !6580, !tbaa !6581
  %145 = fpext float %144 to double, !dbg !6582
  %146 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 8, !dbg !6583
  %147 = load i64, i64* %146, align 8, !dbg !6583, !tbaa !6584
  %148 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 2, !dbg !6585
  %149 = load i64, i64* %148, align 8, !dbg !6585, !tbaa !6586
  %150 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 9, !dbg !6587
  %151 = load i64, i64* %150, align 8, !dbg !6587, !tbaa !6588
  %152 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 12, !dbg !6589
  %153 = load float, float* %152, align 8, !dbg !6589, !tbaa !6590
  %154 = fpext float %153 to double, !dbg !6591
  %155 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 2), align 8, !dbg !6592, !tbaa !3202
  %156 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 3), align 8, !dbg !6593, !tbaa !3195
  %157 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 94, i32 4), align 8, !dbg !6594, !tbaa !3181
  %158 = load i64, i64* %131, align 8, !dbg !6595, !tbaa !6564
  %159 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 273), align 8, !dbg !6596, !tbaa !6597
  %160 = getelementptr inbounds %struct.dict, %struct.dict* %159, i64 0, i32 2, i64 0, i32 3, !dbg !6596
  %161 = load i64, i64* %160, align 8, !dbg !6596, !tbaa !1370
  %162 = getelementptr inbounds %struct.dict, %struct.dict* %159, i64 0, i32 2, i64 1, i32 3, !dbg !6596
  %163 = load i64, i64* %162, align 8, !dbg !6596, !tbaa !1370
  %164 = add i64 %163, %161, !dbg !6596
  %165 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !6598, !tbaa !3937
  %166 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 16, !dbg !6599
  %167 = load float, float* %166, align 8, !dbg !6599, !tbaa !6600
  %168 = fpext float %167 to double, !dbg !6601
  %169 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 17, !dbg !6602
  %170 = load i64, i64* %169, align 8, !dbg !6602, !tbaa !6603
  %171 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 18, !dbg !6604
  %172 = load float, float* %171, align 8, !dbg !6604, !tbaa !6605
  %173 = fpext float %172 to double, !dbg !6606
  %174 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 19, !dbg !6607
  %175 = load i64, i64* %174, align 8, !dbg !6607, !tbaa !6608
  %176 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 20, !dbg !6609
  %177 = load float, float* %176, align 8, !dbg !6609, !tbaa !6610
  %178 = fpext float %177 to double, !dbg !6611
  %179 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 21, !dbg !6612
  %180 = load i64, i64* %179, align 8, !dbg !6612, !tbaa !6613
  %181 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 14, !dbg !6614
  %182 = load float, float* %181, align 8, !dbg !6614, !tbaa !6615
  %183 = fpext float %182 to double, !dbg !6616
  %184 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 15, !dbg !6617
  %185 = load i64, i64* %184, align 8, !dbg !6617, !tbaa !6618
  %186 = call i64 (...) @freeMemoryGetNotCountedMemory() #9, !dbg !6619
  %187 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 3, !dbg !6620
  %188 = load i64, i64* %187, align 8, !dbg !6620, !tbaa !6621
  %189 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 4, !dbg !6622
  %190 = load i64, i64* %189, align 8, !dbg !6622, !tbaa !6623
  %191 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 5, !dbg !6624
  %192 = load i64, i64* %191, align 8, !dbg !6624, !tbaa !6625
  %193 = getelementptr inbounds %struct.redisMemOverhead, %struct.redisMemOverhead* %125, i64 0, i32 6, !dbg !6626
  %194 = load i64, i64* %193, align 8, !dbg !6626, !tbaa !6627
  %195 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 14), align 4, !dbg !6628, !tbaa !3928
  %196 = call i64 @lazyfreeGetPendingObjectsCount() #9, !dbg !6629
  %197 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %140, i8* getelementptr inbounds ([1016 x i8], [1016 x i8]* @.str.394, i64 0, i64 0), i64 %118, i8* nonnull %111, i64 %141, i8* nonnull %116, i64 %142, i8* nonnull %112, double %145, i64 %147, i64 %149, i64 %151, double %154, i64 %155, i64 %156, i64 %157, i64 %119, i8* nonnull %113, i64 %124, i8* nonnull %114, i64 %158, i8* nonnull %115, i64 %164, i64 %165, i8* nonnull %117, i8* %120, double %168, i64 %170, double %173, i64 %175, double %178, i64 %180, double %183, i64 %185, i64 %186, i64 %188, i64 %190, i64 %192, i64 %194, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0), i32 %195, i64 %196) #9, !dbg !6630
  call void @freeMemoryOverheadData(%struct.redisMemOverhead* nonnull %125) #9, !dbg !6631
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %117) #4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %116) #4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %115) #4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %114) #4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %113) #4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %112) #4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %111) #4, !dbg !6632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6524
  br i1 %32, label %198, label %199, !dbg !6524

; <label>:198:                                    ; preds = %139
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6634
  br label %207, !dbg !6634

; <label>:199:                                    ; preds = %107, %139
  %200 = phi i8* [ %103, %107 ], [ %197, %139 ]
  %201 = phi i32 [ %104, %107 ], [ %135, %139 ]
  %202 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.396, i64 0, i64 0)) #11, !dbg !6635
  %203 = icmp eq i32 %202, 0, !dbg !6635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6636
  br i1 %203, label %205, label %204, !dbg !6636

; <label>:204:                                    ; preds = %199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6637
  br label %325, !dbg !6637

; <label>:205:                                    ; preds = %199
  %206 = icmp eq i32 %201, 0, !dbg !6639
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6634
  br i1 %206, label %212, label %207, !dbg !6634

; <label>:207:                                    ; preds = %198, %205
  %208 = phi i32 [ %135, %198 ], [ %201, %205 ]
  %209 = phi i8* [ %197, %198 ], [ %200, %205 ]
  %210 = add nsw i32 %208, 1, !dbg !6639
  %211 = call i8* @sdscat(i8* %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !6641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6642
  br label %212, !dbg !6642

; <label>:212:                                    ; preds = %205, %207
  %213 = phi i32 [ %210, %207 ], [ 1, %205 ]
  %214 = phi i8* [ %211, %207 ], [ %200, %205 ], !dbg !6643
  %215 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6644, !tbaa !3866
  %216 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !6645, !tbaa !4867
  %217 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !6646, !tbaa !2434
  %218 = icmp ne i32 %217, -1, !dbg !6647
  %219 = zext i1 %218 to i32, !dbg !6647
  %220 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8, !dbg !6648, !tbaa !4862
  %221 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !6649, !tbaa !4878
  %222 = icmp eq i32 %221, 0, !dbg !6650
  %223 = select i1 %222, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.399, i64 0, i64 0), !dbg !6651
  %224 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 162), align 8, !dbg !6652, !tbaa !6653
  %225 = icmp eq i32 %217, -1, !dbg !6654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6655
  br i1 %225, label %230, label %226, !dbg !6655

; <label>:226:                                    ; preds = %212
  %227 = call i64 @time(i64* null) #9, !dbg !6656
  %228 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !6657, !tbaa !4865
  %229 = sub nsw i64 %227, %228, !dbg !6658
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6655
  br label %230, !dbg !6655

; <label>:230:                                    ; preds = %212, %226
  %231 = phi i64 [ %229, %226 ], [ -1, %212 ], !dbg !6655
  %232 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 97), align 8, !dbg !6659, !tbaa !6660
  %233 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !6661, !tbaa !3371
  %234 = icmp ne i32 %233, 0, !dbg !6662
  %235 = zext i1 %234 to i32, !dbg !6662
  %236 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !6663, !tbaa !3298
  %237 = icmp ne i32 %236, -1, !dbg !6664
  %238 = zext i1 %237 to i32, !dbg !6664
  %239 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 126), align 8, !dbg !6665, !tbaa !3890
  %240 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 134), align 8, !dbg !6666, !tbaa !6667
  %241 = icmp eq i32 %236, -1, !dbg !6668
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6669
  br i1 %241, label %246, label %242, !dbg !6669

; <label>:242:                                    ; preds = %230
  %243 = call i64 @time(i64* null) #9, !dbg !6670
  %244 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 135), align 8, !dbg !6671, !tbaa !6672
  %245 = sub nsw i64 %243, %244, !dbg !6673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6669
  br label %246, !dbg !6669

; <label>:246:                                    ; preds = %230, %242
  %247 = phi i64 [ %245, %242 ], [ -1, %230 ], !dbg !6669
  %248 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 136), align 8, !dbg !6674, !tbaa !3896
  %249 = icmp eq i32 %248, 0, !dbg !6675
  %250 = select i1 %249, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.399, i64 0, i64 0), !dbg !6676
  %251 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 140), align 8, !dbg !6677, !tbaa !3414
  %252 = icmp eq i32 %251, 0, !dbg !6678
  %253 = select i1 %252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.399, i64 0, i64 0), !dbg !6679
  %254 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 98), align 8, !dbg !6680, !tbaa !6681
  %255 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %214, i8* getelementptr inbounds ([440 x i8], [440 x i8]* @.str.397, i64 0, i64 0), i32 %215, i64 %216, i32 %219, i64 %220, i8* %223, i64 %224, i64 %231, i64 %232, i32 %235, i32 %238, i32 %239, i64 %240, i64 %247, i8* %250, i8* %253, i64 %254) #9, !dbg !6682
  %256 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !6683, !tbaa !3371
  %257 = icmp eq i32 %256, 0, !dbg !6685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6686
  br i1 %257, label %293, label %258, !dbg !6686

; <label>:258:                                    ; preds = %246
  %259 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 124), align 8, !dbg !6687, !tbaa !3379
  %260 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 123), align 8, !dbg !6689, !tbaa !3385
  %261 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 126), align 8, !dbg !6690, !tbaa !3890
  %262 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 129), align 8, !dbg !6691, !tbaa !4859
  %263 = getelementptr inbounds i8, i8* %262, i64 -1, !dbg !6694
  %264 = load i8, i8* %263, align 1, !dbg !6694, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6696
  %265 = trunc i8 %264 to i3, !dbg !6696
  switch i3 %265, label %287 [
    i3 0, label %266
    i3 1, label %269
    i3 2, label %273
    i3 3, label %278
    i3 -4, label %283
  ], !dbg !6696

; <label>:266:                                    ; preds = %258
  %267 = lshr i8 %264, 3, !dbg !6697
  %268 = zext i8 %267 to i64, !dbg !6697
  br label %287, !dbg !6698

; <label>:269:                                    ; preds = %258
  %270 = getelementptr inbounds i8, i8* %262, i64 -3, !dbg !6699
  %271 = load i8, i8* %270, align 1, !dbg !6700, !tbaa !1382
  %272 = zext i8 %271 to i64, !dbg !6699
  br label %287, !dbg !6701

; <label>:273:                                    ; preds = %258
  %274 = getelementptr inbounds i8, i8* %262, i64 -5, !dbg !6702
  %275 = bitcast i8* %274 to i16*, !dbg !6703
  %276 = load i16, i16* %275, align 1, !dbg !6703, !tbaa !2037
  %277 = zext i16 %276 to i64, !dbg !6702
  br label %287, !dbg !6704

; <label>:278:                                    ; preds = %258
  %279 = getelementptr inbounds i8, i8* %262, i64 -9, !dbg !6705
  %280 = bitcast i8* %279 to i32*, !dbg !6706
  %281 = load i32, i32* %280, align 1, !dbg !6706, !tbaa !1482
  %282 = zext i32 %281 to i64, !dbg !6705
  br label %287, !dbg !6707

; <label>:283:                                    ; preds = %258
  %284 = getelementptr inbounds i8, i8* %262, i64 -17, !dbg !6708
  %285 = bitcast i8* %284 to i64*, !dbg !6709
  %286 = load i64, i64* %285, align 1, !dbg !6709, !tbaa !2045
  br label %287, !dbg !6710

; <label>:287:                                    ; preds = %258, %266, %269, %273, %278, %283
  %288 = phi i64 [ %286, %283 ], [ %282, %278 ], [ %277, %273 ], [ %272, %269 ], [ %268, %266 ], [ 0, %258 ], !dbg !6711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6712
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6713
  %289 = call i64 @aofRewriteBufferSize() #9, !dbg !6714
  %290 = call i64 @bioPendingJobsOfType(i32 1) #9, !dbg !6715
  %291 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 137), align 8, !dbg !6716, !tbaa !3898
  %292 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %255, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.400, i64 0, i64 0), i64 %259, i64 %260, i32 %261, i64 %288, i64 %289, i64 %290, i64 %291) #9, !dbg !6717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6718
  br label %293, !dbg !6718

; <label>:293:                                    ; preds = %246, %287
  %294 = phi i8* [ %292, %287 ], [ %255, %246 ], !dbg !6719
  %295 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6720, !tbaa !3866
  %296 = icmp eq i32 %295, 0, !dbg !6721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6722
  br i1 %296, label %322, label %297, !dbg !6722

; <label>:297:                                    ; preds = %293
  %298 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 8, !dbg !6723, !tbaa !6724
  %299 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6725, !tbaa !6726
  %300 = sitofp i64 %299 to double, !dbg !6727
  %301 = add nsw i64 %298, 1, !dbg !6728
  %302 = sitofp i64 %301 to double, !dbg !6729
  %303 = fdiv double %300, %302, !dbg !6730
  %304 = fmul double %303, 1.000000e+02, !dbg !6731
  %305 = call i64 @time(i64* null) #9, !dbg !6733
  %306 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 8, !dbg !6734, !tbaa !6735
  %307 = sub nsw i64 %305, %306, !dbg !6736
  %308 = icmp eq i64 %307, 0, !dbg !6738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6740
  br i1 %308, label %309, label %311, !dbg !6740

; <label>:309:                                    ; preds = %297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6742
  %310 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6744, !tbaa !6726
  br label %317, !dbg !6742

; <label>:311:                                    ; preds = %297
  %312 = sub nsw i64 %298, %299, !dbg !6745
  %313 = mul nsw i64 %307, %312, !dbg !6747
  %314 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6749, !tbaa !6726
  %315 = add nsw i64 %314, 1, !dbg !6750
  %316 = sdiv i64 %313, %315, !dbg !6751
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %317

; <label>:317:                                    ; preds = %311, %309
  %318 = phi i64 [ %310, %309 ], [ %314, %311 ], !dbg !6744
  %319 = phi i64 [ 1, %309 ], [ %316, %311 ], !dbg !6752
  %320 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 8, !dbg !6753, !tbaa !6724
  %321 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %294, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.401, i64 0, i64 0), i64 %306, i64 %320, i64 %318, double %304, i64 %319) #9, !dbg !6754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6755
  br label %322, !dbg !6755

; <label>:322:                                    ; preds = %293, %317
  %323 = phi i8* [ %321, %317 ], [ %294, %293 ], !dbg !6643
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6637
  br i1 %32, label %324, label %325, !dbg !6637

; <label>:324:                                    ; preds = %322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6756
  br label %333, !dbg !6756

; <label>:325:                                    ; preds = %204, %322
  %326 = phi i8* [ %200, %204 ], [ %323, %322 ]
  %327 = phi i32 [ %201, %204 ], [ %213, %322 ]
  %328 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.402, i64 0, i64 0)) #11, !dbg !6758
  %329 = icmp eq i32 %328, 0, !dbg !6758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6759
  br i1 %329, label %331, label %330, !dbg !6759

; <label>:330:                                    ; preds = %325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6760
  br label %481, !dbg !6760

; <label>:331:                                    ; preds = %325
  %332 = icmp eq i32 %327, 0, !dbg !6761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6756
  br i1 %332, label %338, label %333, !dbg !6756

; <label>:333:                                    ; preds = %324, %331
  %334 = phi i32 [ %213, %324 ], [ %327, %331 ]
  %335 = phi i8* [ %323, %324 ], [ %326, %331 ]
  %336 = add nsw i32 %334, 1, !dbg !6761
  %337 = call i8* @sdscat(i8* %335, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !6763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6764
  br label %338, !dbg !6764

; <label>:338:                                    ; preds = %333, %331
  %339 = phi i32 [ %336, %333 ], [ 1, %331 ]
  %340 = phi i8* [ %337, %333 ], [ %326, %331 ], !dbg !6765
  %341 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 71), align 8, !dbg !6766, !tbaa !6767
  %342 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 70), align 8, !dbg !6768, !tbaa !3151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6773
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %343 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 0), align 8, !dbg !6775, !tbaa !2493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %344 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 1), align 8, !dbg !6775, !tbaa !2493
  %345 = add nsw i64 %344, %343, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %346 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 2), align 8, !dbg !6775, !tbaa !2493
  %347 = add nsw i64 %345, %346, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %348 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 3), align 8, !dbg !6775, !tbaa !2493
  %349 = add nsw i64 %347, %348, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %350 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 4), align 8, !dbg !6775, !tbaa !2493
  %351 = add nsw i64 %349, %350, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %352 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 5), align 8, !dbg !6775, !tbaa !2493
  %353 = add nsw i64 %351, %352, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %354 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 6), align 8, !dbg !6775, !tbaa !2493
  %355 = add nsw i64 %353, %354, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %356 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 7), align 8, !dbg !6775, !tbaa !2493
  %357 = add nsw i64 %355, %356, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %358 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 8), align 8, !dbg !6775, !tbaa !2493
  %359 = add nsw i64 %357, %358, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %360 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 9), align 8, !dbg !6775, !tbaa !2493
  %361 = add nsw i64 %359, %360, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %362 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 10), align 8, !dbg !6775, !tbaa !2493
  %363 = add nsw i64 %361, %362, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %364 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 11), align 8, !dbg !6775, !tbaa !2493
  %365 = add nsw i64 %363, %364, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %366 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 12), align 8, !dbg !6775, !tbaa !2493
  %367 = add nsw i64 %365, %366, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %368 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 13), align 8, !dbg !6775, !tbaa !2493
  %369 = add nsw i64 %367, %368, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %370 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 14), align 8, !dbg !6775, !tbaa !2493
  %371 = add nsw i64 %369, %370, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %372 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 0, i32 2, i64 15), align 8, !dbg !6775, !tbaa !2493
  %373 = add nsw i64 %371, %372, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  %374 = sdiv i64 %373, 16, !dbg !6778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6779
  %375 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 95), align 8, !dbg !6780, !tbaa !3154
  %376 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 96), align 8, !dbg !6781, !tbaa !3157
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %377 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 0), align 8, !dbg !6788, !tbaa !2493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %378 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 1), align 8, !dbg !6788, !tbaa !2493
  %379 = add nsw i64 %378, %377, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %380 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 2), align 8, !dbg !6788, !tbaa !2493
  %381 = add nsw i64 %379, %380, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %382 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 3), align 8, !dbg !6788, !tbaa !2493
  %383 = add nsw i64 %381, %382, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %384 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 4), align 8, !dbg !6788, !tbaa !2493
  %385 = add nsw i64 %383, %384, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %386 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 5), align 8, !dbg !6788, !tbaa !2493
  %387 = add nsw i64 %385, %386, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %388 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 6), align 8, !dbg !6788, !tbaa !2493
  %389 = add nsw i64 %387, %388, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %390 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 7), align 8, !dbg !6788, !tbaa !2493
  %391 = add nsw i64 %389, %390, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %392 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 8), align 8, !dbg !6788, !tbaa !2493
  %393 = add nsw i64 %391, %392, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %394 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 9), align 8, !dbg !6788, !tbaa !2493
  %395 = add nsw i64 %393, %394, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %396 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 10), align 8, !dbg !6788, !tbaa !2493
  %397 = add nsw i64 %395, %396, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %398 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 11), align 8, !dbg !6788, !tbaa !2493
  %399 = add nsw i64 %397, %398, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %400 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 12), align 8, !dbg !6788, !tbaa !2493
  %401 = add nsw i64 %399, %400, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %402 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 13), align 8, !dbg !6788, !tbaa !2493
  %403 = add nsw i64 %401, %402, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %404 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 14), align 8, !dbg !6788, !tbaa !2493
  %405 = add nsw i64 %403, %404, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %406 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 1, i32 2, i64 15), align 8, !dbg !6788, !tbaa !2493
  %407 = add nsw i64 %405, %406, !dbg !6790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %408 = sdiv i64 %407, 16, !dbg !6791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6792
  %409 = sitofp i64 %408 to float, !dbg !6793
  %410 = fmul float %409, 0x3F50000000000000, !dbg !6794
  %411 = fpext float %410 to double, !dbg !6793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %412 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 0), align 8, !dbg !6801, !tbaa !2493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %413 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 1), align 8, !dbg !6801, !tbaa !2493
  %414 = add nsw i64 %413, %412, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %415 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 2), align 8, !dbg !6801, !tbaa !2493
  %416 = add nsw i64 %414, %415, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %417 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 3), align 8, !dbg !6801, !tbaa !2493
  %418 = add nsw i64 %416, %417, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %419 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 4), align 8, !dbg !6801, !tbaa !2493
  %420 = add nsw i64 %418, %419, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %421 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 5), align 8, !dbg !6801, !tbaa !2493
  %422 = add nsw i64 %420, %421, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %423 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 6), align 8, !dbg !6801, !tbaa !2493
  %424 = add nsw i64 %422, %423, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %425 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 7), align 8, !dbg !6801, !tbaa !2493
  %426 = add nsw i64 %424, %425, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %427 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 8), align 8, !dbg !6801, !tbaa !2493
  %428 = add nsw i64 %426, %427, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %429 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 9), align 8, !dbg !6801, !tbaa !2493
  %430 = add nsw i64 %428, %429, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %431 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 10), align 8, !dbg !6801, !tbaa !2493
  %432 = add nsw i64 %430, %431, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %433 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 11), align 8, !dbg !6801, !tbaa !2493
  %434 = add nsw i64 %432, %433, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %435 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 12), align 8, !dbg !6801, !tbaa !2493
  %436 = add nsw i64 %434, %435, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %437 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 13), align 8, !dbg !6801, !tbaa !2493
  %438 = add nsw i64 %436, %437, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %439 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 14), align 8, !dbg !6801, !tbaa !2493
  %440 = add nsw i64 %438, %439, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %441 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 99, i64 2, i32 2, i64 15), align 8, !dbg !6801, !tbaa !2493
  %442 = add nsw i64 %440, %441, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6800
  %443 = sdiv i64 %442, 16, !dbg !6804
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6805
  %444 = sitofp i64 %443 to float, !dbg !6806
  %445 = fmul float %444, 0x3F50000000000000, !dbg !6807
  %446 = fpext float %445 to double, !dbg !6806
  %447 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 86), align 8, !dbg !6808, !tbaa !4607
  %448 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 87), align 8, !dbg !6809, !tbaa !6810
  %449 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 88), align 8, !dbg !6811, !tbaa !6812
  %450 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 89), align 8, !dbg !6813, !tbaa !4610
  %451 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 72), align 8, !dbg !6814, !tbaa !4593
  %452 = load double, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 73), align 8, !dbg !6815, !tbaa !4595
  %453 = fmul double %452, 1.000000e+02, !dbg !6816
  %454 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 74), align 8, !dbg !6817, !tbaa !6818
  %455 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 75), align 8, !dbg !6819, !tbaa !6820
  %456 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 76), align 8, !dbg !6821, !tbaa !6822
  %457 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 77), align 8, !dbg !6823, !tbaa !6824
  %458 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 255), align 8, !dbg !6825, !tbaa !4838
  %459 = getelementptr inbounds %struct.dict, %struct.dict* %458, i64 0, i32 2, i64 0, i32 3, !dbg !6825
  %460 = load i64, i64* %459, align 8, !dbg !6825, !tbaa !1370
  %461 = getelementptr inbounds %struct.dict, %struct.dict* %458, i64 0, i32 2, i64 1, i32 3, !dbg !6825
  %462 = load i64, i64* %461, align 8, !dbg !6825, !tbaa !1370
  %463 = add i64 %462, %460, !dbg !6825
  %464 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 256), align 8, !dbg !6826, !tbaa !4841
  %465 = getelementptr inbounds %struct.list, %struct.list* %464, i64 0, i32 5, !dbg !6826
  %466 = load i64, i64* %465, align 8, !dbg !6826, !tbaa !2811
  %467 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !6827, !tbaa !4603
  %468 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !6828, !tbaa !3965
  %469 = getelementptr inbounds %struct.dict, %struct.dict* %468, i64 0, i32 2, i64 0, i32 3, !dbg !6828
  %470 = load i64, i64* %469, align 8, !dbg !6828, !tbaa !1370
  %471 = getelementptr inbounds %struct.dict, %struct.dict* %468, i64 0, i32 2, i64 1, i32 3, !dbg !6828
  %472 = load i64, i64* %471, align 8, !dbg !6828, !tbaa !1370
  %473 = add i64 %472, %470, !dbg !6828
  %474 = call i64 @getSlaveKeyWithExpireCount() #9, !dbg !6829
  %475 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 78), align 8, !dbg !6830, !tbaa !6831
  %476 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 79), align 8, !dbg !6832, !tbaa !6833
  %477 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 80), align 8, !dbg !6834, !tbaa !6835
  %478 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 81), align 8, !dbg !6836, !tbaa !6837
  %479 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %340, i8* getelementptr inbounds ([693 x i8], [693 x i8]* @.str.403, i64 0, i64 0), i64 %341, i64 %342, i64 %374, i64 %375, i64 %376, double %411, double %446, i64 %447, i64 %448, i64 %449, i64 %450, i64 %451, double %453, i64 %454, i64 %455, i64 %456, i64 %457, i64 %463, i64 %466, i64 %467, i64 %473, i64 %474, i64 %475, i64 %476, i64 %477, i64 %478) #9, !dbg !6838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6760
  br i1 %32, label %480, label %481, !dbg !6760

; <label>:480:                                    ; preds = %338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6840
  br label %489, !dbg !6840

; <label>:481:                                    ; preds = %330, %338
  %482 = phi i8* [ %326, %330 ], [ %479, %338 ]
  %483 = phi i32 [ %327, %330 ], [ %339, %338 ]
  %484 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.404, i64 0, i64 0)) #11, !dbg !6841
  %485 = icmp eq i32 %484, 0, !dbg !6841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6842
  br i1 %485, label %487, label %486, !dbg !6842

; <label>:486:                                    ; preds = %481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6843
  br label %650, !dbg !6843

; <label>:487:                                    ; preds = %481
  %488 = icmp eq i32 %483, 0, !dbg !6845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6840
  br i1 %488, label %494, label %489, !dbg !6840

; <label>:489:                                    ; preds = %480, %487
  %490 = phi i32 [ %339, %480 ], [ %483, %487 ]
  %491 = phi i8* [ %479, %480 ], [ %482, %487 ]
  %492 = add nsw i32 %490, 1, !dbg !6845
  %493 = call i8* @sdscat(i8* %491, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !6847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6848
  br label %494, !dbg !6848

; <label>:494:                                    ; preds = %487, %489
  %495 = phi i32 [ %492, %489 ], [ 1, %487 ]
  %496 = phi i8* [ %493, %489 ], [ %482, %487 ], !dbg !6849
  %497 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !6850, !tbaa !1813
  %498 = icmp eq i8* %497, null, !dbg !6851
  %499 = select i1 %498, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.406, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.407, i64 0, i64 0), !dbg !6852
  %500 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %496, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.405, i64 0, i64 0), i8* %499) #9, !dbg !6853
  %501 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !6854, !tbaa !1813
  %502 = icmp eq i8* %501, null, !dbg !6855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6856
  br i1 %502, label %565, label %503, !dbg !6856

; <label>:503:                                    ; preds = %494
  %504 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !6858, !tbaa !6860
  %505 = icmp eq %struct.client* %504, null, !dbg !6861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6862
  br i1 %505, label %506, label %518, !dbg !6862

; <label>:506:                                    ; preds = %503
  %507 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !6863, !tbaa !6865
  %508 = icmp eq %struct.client* %507, null, !dbg !6866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6867
  br i1 %508, label %512, label %509, !dbg !6867

; <label>:509:                                    ; preds = %506
  %510 = getelementptr inbounds %struct.client, %struct.client* %507, i64 0, i32 30, !dbg !6868
  %511 = load i64, i64* %510, align 8, !dbg !6868, !tbaa !6869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6870
  br label %512, !dbg !6870

; <label>:512:                                    ; preds = %506, %509
  %513 = phi i64 [ 1, %506 ], [ %511, %509 ]
  %514 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 197), align 8, !dbg !6871, !tbaa !3989
  %515 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6872, !tbaa !3994
  %516 = icmp eq i32 %515, 15, !dbg !6873
  %517 = select i1 %516, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.409, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.410, i64 0, i64 0), !dbg !6874
  br label %530, !dbg !6875

; <label>:518:                                    ; preds = %503
  %519 = getelementptr inbounds %struct.client, %struct.client* %504, i64 0, i32 30, !dbg !6876
  %520 = load i64, i64* %519, align 8, !dbg !6876, !tbaa !6869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6877
  %521 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 197), align 8, !dbg !6871, !tbaa !3989
  %522 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6872, !tbaa !3994
  %523 = icmp eq i32 %522, 15, !dbg !6873
  %524 = select i1 %523, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.409, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.410, i64 0, i64 0), !dbg !6874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6875
  %525 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !6878, !tbaa !2619
  %526 = getelementptr inbounds %struct.client, %struct.client* %504, i64 0, i32 19, !dbg !6879
  %527 = load i64, i64* %526, align 8, !dbg !6879, !tbaa !2567
  %528 = sub nsw i64 %525, %527, !dbg !6880
  %529 = trunc i64 %528 to i32, !dbg !6881
  br label %530, !dbg !6875

; <label>:530:                                    ; preds = %512, %518
  %531 = phi i8* [ %524, %518 ], [ %517, %512 ]
  %532 = phi i32 [ %522, %518 ], [ %515, %512 ]
  %533 = phi i32 [ %521, %518 ], [ %514, %512 ]
  %534 = phi i64 [ %520, %518 ], [ %513, %512 ]
  %535 = phi i32 [ %529, %518 ], [ -1, %512 ], !dbg !6875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6875
  %536 = icmp eq i32 %532, 14, !dbg !6882
  %537 = zext i1 %536 to i32, !dbg !6882
  %538 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %500, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.408, i64 0, i64 0), i8* nonnull %501, i32 %533, i8* %531, i32 %535, i32 %537, i64 %534) #9, !dbg !6883
  %539 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6884, !tbaa !3994
  %540 = icmp eq i32 %539, 14, !dbg !6886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6887
  br i1 %540, label %541, label %551, !dbg !6887

; <label>:541:                                    ; preds = %530
  %542 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 203), align 8, !dbg !6888, !tbaa !6890
  %543 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 204), align 8, !dbg !6891, !tbaa !6892
  %544 = sub nsw i64 %542, %543, !dbg !6893
  %545 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !6894, !tbaa !2619
  %546 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 209), align 8, !dbg !6895, !tbaa !6896
  %547 = sub nsw i64 %545, %546, !dbg !6897
  %548 = trunc i64 %547 to i32, !dbg !6898
  %549 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %538, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.411, i64 0, i64 0), i64 %544, i32 %548) #9, !dbg !6899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6900
  %550 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6901, !tbaa !3994
  br label %551, !dbg !6900

; <label>:551:                                    ; preds = %541, %530
  %552 = phi i32 [ %550, %541 ], [ %539, %530 ], !dbg !6901
  %553 = phi i8* [ %549, %541 ], [ %538, %530 ], !dbg !6903
  %554 = icmp eq i32 %552, 15, !dbg !6904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6905
  br i1 %554, label %560, label %555, !dbg !6905

; <label>:555:                                    ; preds = %551
  %556 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !6906, !tbaa !2619
  %557 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 213), align 8, !dbg !6908, !tbaa !4006
  %558 = sub nsw i64 %556, %557, !dbg !6909
  %559 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %553, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.412, i64 0, i64 0), i64 %558) #9, !dbg !6910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6911
  br label %560, !dbg !6911

; <label>:560:                                    ; preds = %551, %555
  %561 = phi i8* [ %559, %555 ], [ %553, %551 ], !dbg !6912
  %562 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 215), align 4, !dbg !6913, !tbaa !4022
  %563 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 211), align 4, !dbg !6914, !tbaa !4000
  %564 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %561, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.413, i64 0, i64 0), i32 %562, i32 %563) #9, !dbg !6915
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6916
  br label %565, !dbg !6916

; <label>:565:                                    ; preds = %494, %560
  %566 = phi i8* [ %564, %560 ], [ %500, %494 ], !dbg !6917
  %567 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !6918, !tbaa !3255
  %568 = getelementptr inbounds %struct.list, %struct.list* %567, i64 0, i32 5, !dbg !6918
  %569 = load i64, i64* %568, align 8, !dbg !6918, !tbaa !2811
  %570 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %566, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.414, i64 0, i64 0), i64 %569) #9, !dbg !6919
  %571 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 190), align 8, !dbg !6920, !tbaa !4018
  %572 = icmp ne i32 %571, 0, !dbg !6922
  %573 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 191), align 4, !dbg !6923
  %574 = icmp ne i32 %573, 0, !dbg !6924
  %575 = and i1 %572, %574, !dbg !6925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6925
  br i1 %575, label %576, label %579, !dbg !6925

; <label>:576:                                    ; preds = %565
  %577 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 192), align 8, !dbg !6926, !tbaa !4883
  %578 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %570, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.415, i64 0, i64 0), i32 %577) #9, !dbg !6928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6929
  br label %579, !dbg !6929

; <label>:579:                                    ; preds = %576, %565
  %580 = phi i8* [ %578, %576 ], [ %570, %565 ], !dbg !6917
  %581 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !6930, !tbaa !3255
  %582 = getelementptr inbounds %struct.list, %struct.list* %581, i64 0, i32 5, !dbg !6930
  %583 = load i64, i64* %582, align 8, !dbg !6930, !tbaa !2811
  %584 = icmp eq i64 %583, 0, !dbg !6930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6931
  br i1 %584, label %639, label %585, !dbg !6931

; <label>:585:                                    ; preds = %579
  %586 = bitcast %struct.listIter* %13 to i8*, !dbg !6933
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %586) #4, !dbg !6933
  call void @listRewind(%struct.list* %581, %struct.listIter* nonnull %13) #9, !dbg !6935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6936
  %587 = call %struct.listNode* @listNext(%struct.listIter* nonnull %13) #9, !dbg !6937
  %588 = icmp eq %struct.listNode* %587, null, !dbg !6936
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6936
  br i1 %588, label %637, label %589, !dbg !6936

; <label>:589:                                    ; preds = %585
  %590 = getelementptr inbounds [46 x i8], [46 x i8]* %14, i64 0, i64 0
  %591 = bitcast i32* %15 to i8*
  br label %592, !dbg !6936

; <label>:592:                                    ; preds = %589, %632
  %593 = phi %struct.listNode* [ %587, %589 ], [ %635, %632 ]
  %594 = phi i8* [ %580, %589 ], [ %634, %632 ]
  %595 = phi i32 [ 0, %589 ], [ %633, %632 ]
  %596 = getelementptr inbounds %struct.listNode, %struct.listNode* %593, i64 0, i32 2, !dbg !6939
  %597 = bitcast i8** %596 to %struct.client**, !dbg !6939
  %598 = load %struct.client*, %struct.client** %597, align 8, !dbg !6939, !tbaa !2858
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %590) #4, !dbg !6942
  %599 = getelementptr inbounds %struct.client, %struct.client* %598, i64 0, i32 36, i64 0, !dbg !6944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %591) #4, !dbg !6946
  %600 = load i8, i8* %599, align 1, !dbg !6948, !tbaa !1382
  %601 = icmp eq i8 %600, 0, !dbg !6950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6951
  br i1 %601, label %602, label %607, !dbg !6951

; <label>:602:                                    ; preds = %592
  %603 = getelementptr inbounds %struct.client, %struct.client* %598, i64 0, i32 1, !dbg !6952
  %604 = load i32, i32* %603, align 8, !dbg !6952, !tbaa !6955
  %605 = call i32 @anetPeerToString(i32 %604, i8* nonnull %590, i64 46, i32* nonnull %15) #9, !dbg !6957
  %606 = icmp eq i32 %605, -1, !dbg !6958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6960
  br i1 %606, label %632, label %607, !dbg !6959, !llvm.loop !6961

; <label>:607:                                    ; preds = %602, %592
  %608 = phi i8* [ %599, %592 ], [ %590, %602 ], !dbg !6963
  %609 = getelementptr inbounds %struct.client, %struct.client* %598, i64 0, i32 23, !dbg !6964
  %610 = load i32, i32* %609, align 8, !dbg !6964, !tbaa !6965
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6966
  switch i32 %610, label %612 [
    i32 6, label %613
    i32 7, label %613
    i32 8, label %611
    i32 9, label %615
  ], !dbg !6966

; <label>:611:                                    ; preds = %607
  br label %613, !dbg !6967

; <label>:612:                                    ; preds = %607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6969
  br label %629, !dbg !6970, !llvm.loop !6961

; <label>:613:                                    ; preds = %607, %607, %611
  %614 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.417, i64 0, i64 0), %611 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.416, i64 0, i64 0), %607 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.416, i64 0, i64 0), %607 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6972
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6969
  br label %620, !dbg !6973

; <label>:615:                                    ; preds = %607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6974
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6973
  %616 = call i64 @time(i64* null) #9, !dbg !6975
  %617 = getelementptr inbounds %struct.client, %struct.client* %598, i64 0, i32 32, !dbg !6977
  %618 = load i64, i64* %617, align 8, !dbg !6977, !tbaa !6978
  %619 = sub nsw i64 %616, %618, !dbg !6979
  br label %620, !dbg !6980

; <label>:620:                                    ; preds = %613, %615
  %621 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.418, i64 0, i64 0), %615 ], [ %614, %613 ]
  %622 = phi i64 [ %619, %615 ], [ 0, %613 ], !dbg !6963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6981
  %623 = getelementptr inbounds %struct.client, %struct.client* %598, i64 0, i32 35, !dbg !6982
  %624 = load i32, i32* %623, align 4, !dbg !6982, !tbaa !6983
  %625 = getelementptr inbounds %struct.client, %struct.client* %598, i64 0, i32 31, !dbg !6984
  %626 = load i64, i64* %625, align 8, !dbg !6984, !tbaa !6985
  %627 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %594, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.419, i64 0, i64 0), i32 %595, i8* nonnull %608, i32 %624, i8* nonnull %621, i64 %626, i64 %622) #9, !dbg !6986
  %628 = add nsw i32 %595, 1, !dbg !6987
  br label %629, !dbg !6962

; <label>:629:                                    ; preds = %612, %620
  %630 = phi i32 [ %628, %620 ], [ %595, %612 ]
  %631 = phi i8* [ %627, %620 ], [ %594, %612 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6988
  br label %632, !dbg !6962

; <label>:632:                                    ; preds = %629, %602
  %633 = phi i32 [ %595, %602 ], [ %630, %629 ], !dbg !6963
  %634 = phi i8* [ %594, %602 ], [ %631, %629 ], !dbg !6963
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %591) #4, !dbg !6962
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %590) #4, !dbg !6962
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %635 = call %struct.listNode* @listNext(%struct.listIter* nonnull %13) #9, !dbg !6937
  %636 = icmp eq %struct.listNode* %635, null, !dbg !6936
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6936
  br i1 %636, label %637, label %592, !dbg !6936

; <label>:637:                                    ; preds = %632, %585
  %638 = phi i8* [ %580, %585 ], [ %634, %632 ], !dbg !6989
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %586) #4, !dbg !6990
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6991
  br label %639, !dbg !6991

; <label>:639:                                    ; preds = %637, %579
  %640 = phi i8* [ %638, %637 ], [ %580, %579 ], !dbg !6989
  %641 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !6992, !tbaa !4028
  %642 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 180), align 8, !dbg !6993, !tbaa !6994
  %643 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !6995, !tbaa !4030
  %644 = icmp ne i8* %643, null, !dbg !6996
  %645 = zext i1 %644 to i32, !dbg !6996
  %646 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 184), align 8, !dbg !6997, !tbaa !6998
  %647 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 187), align 8, !dbg !6999, !tbaa !7000
  %648 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 185), align 8, !dbg !7001, !tbaa !7002
  %649 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %640, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @.str.420, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 177, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 178, i64 0), i64 %641, i64 %642, i32 %645, i64 %646, i64 %647, i64 %648) #9, !dbg !7003
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6843
  br i1 %32, label %655, label %650, !dbg !6843

; <label>:650:                                    ; preds = %486, %639
  %651 = phi i8* [ %482, %486 ], [ %649, %639 ]
  %652 = phi i32 [ %483, %486 ], [ %495, %639 ]
  %653 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.421, i64 0, i64 0)) #11, !dbg !7005
  %654 = icmp eq i32 %653, 0, !dbg !7005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7006
  br i1 %654, label %655, label %681, !dbg !7006

; <label>:655:                                    ; preds = %650, %639
  %656 = phi i8* [ %651, %650 ], [ %649, %639 ]
  %657 = phi i32 [ %652, %650 ], [ %495, %639 ]
  %658 = add nsw i32 %657, 1, !dbg !7007
  %659 = icmp eq i32 %657, 0, !dbg !7007
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7010
  br i1 %659, label %662, label %660, !dbg !7010

; <label>:660:                                    ; preds = %655
  %661 = call i8* @sdscat(i8* %656, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !7011
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7012
  br label %662, !dbg !7012

; <label>:662:                                    ; preds = %655, %660
  %663 = phi i8* [ %661, %660 ], [ %656, %655 ], !dbg !6917
  %664 = getelementptr inbounds %struct.rusage, %struct.rusage* %2, i64 0, i32 1, i32 0, !dbg !7013
  %665 = load i64, i64* %664, align 8, !dbg !7013, !tbaa !7014
  %666 = getelementptr inbounds %struct.rusage, %struct.rusage* %2, i64 0, i32 1, i32 1, !dbg !7016
  %667 = load i64, i64* %666, align 8, !dbg !7016, !tbaa !7017
  %668 = getelementptr inbounds %struct.rusage, %struct.rusage* %2, i64 0, i32 0, i32 0, !dbg !7018
  %669 = load i64, i64* %668, align 8, !dbg !7018, !tbaa !7019
  %670 = getelementptr inbounds %struct.rusage, %struct.rusage* %2, i64 0, i32 0, i32 1, !dbg !7020
  %671 = load i64, i64* %670, align 8, !dbg !7020, !tbaa !7021
  %672 = getelementptr inbounds %struct.rusage, %struct.rusage* %3, i64 0, i32 1, i32 0, !dbg !7022
  %673 = load i64, i64* %672, align 8, !dbg !7022, !tbaa !7014
  %674 = getelementptr inbounds %struct.rusage, %struct.rusage* %3, i64 0, i32 1, i32 1, !dbg !7023
  %675 = load i64, i64* %674, align 8, !dbg !7023, !tbaa !7017
  %676 = getelementptr inbounds %struct.rusage, %struct.rusage* %3, i64 0, i32 0, i32 0, !dbg !7024
  %677 = load i64, i64* %676, align 8, !dbg !7024, !tbaa !7019
  %678 = getelementptr inbounds %struct.rusage, %struct.rusage* %3, i64 0, i32 0, i32 1, !dbg !7025
  %679 = load i64, i64* %678, align 8, !dbg !7025, !tbaa !7021
  %680 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %663, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @.str.422, i64 0, i64 0), i64 %665, i64 %667, i64 %669, i64 %671, i64 %673, i64 %675, i64 %677, i64 %679) #9, !dbg !7026
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7027
  br label %681, !dbg !7027

; <label>:681:                                    ; preds = %650, %662
  %682 = phi i32 [ %658, %662 ], [ %652, %650 ], !dbg !7028
  %683 = phi i8* [ %680, %662 ], [ %651, %650 ], !dbg !6917
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7029
  br i1 %27, label %687, label %684, !dbg !7029

; <label>:684:                                    ; preds = %681
  %685 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.423, i64 0, i64 0)) #11, !dbg !7030
  %686 = icmp eq i32 %685, 0, !dbg !7030
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7031
  br i1 %686, label %687, label %720, !dbg !7031

; <label>:687:                                    ; preds = %684, %681
  %688 = add nsw i32 %682, 1, !dbg !7032
  %689 = icmp eq i32 %682, 0, !dbg !7032
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7034
  br i1 %689, label %692, label %690, !dbg !7034

; <label>:690:                                    ; preds = %687
  %691 = call i8* @sdscat(i8* %683, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !7035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7036
  br label %692, !dbg !7036

; <label>:692:                                    ; preds = %687, %690
  %693 = phi i8* [ %691, %690 ], [ %683, %687 ], !dbg !7037
  %694 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %693, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.424, i64 0, i64 0)) #9, !dbg !7038
  %695 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !7039, !tbaa !1369
  %696 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %695) #9, !dbg !7040
  br label %697, !dbg !7042

; <label>:697:                                    ; preds = %709, %692
  %698 = phi i8* [ %718, %709 ], [ %694, %692 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7042
  br label %699, !dbg !7043

; <label>:699:                                    ; preds = %697, %702
  %700 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %696) #9, !dbg !7043
  %701 = icmp eq %struct.dictEntry* %700, null, !dbg !7045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7042
  br i1 %701, label %719, label %702, !dbg !7042

; <label>:702:                                    ; preds = %699
  %703 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %700, i64 0, i32 1, i32 0, !dbg !7046
  %704 = bitcast i8** %703 to %struct.redisCommand**, !dbg !7046
  %705 = load %struct.redisCommand*, %struct.redisCommand** %704, align 8, !dbg !7046, !tbaa !1382
  %706 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %705, i64 0, i32 10, !dbg !7049
  %707 = load i64, i64* %706, align 8, !dbg !7049, !tbaa !7051
  %708 = icmp eq i64 %707, 0, !dbg !7052
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7053
  br i1 %708, label %699, label %709, !dbg !7053, !llvm.loop !7054

; <label>:709:                                    ; preds = %702
  %710 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %705, i64 0, i32 0, !dbg !7056
  %711 = load i8*, i8** %710, align 8, !dbg !7056, !tbaa !1210
  %712 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %705, i64 0, i32 9, !dbg !7057
  %713 = load i64, i64* %712, align 8, !dbg !7057, !tbaa !7058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7059
  %714 = sitofp i64 %713 to float, !dbg !7060
  %715 = sitofp i64 %707 to float, !dbg !7061
  %716 = fdiv float %714, %715, !dbg !7062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7059
  %717 = fpext float %716 to double, !dbg !7059
  %718 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %698, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.425, i64 0, i64 0), i8* %711, i64 %707, i64 %713, double %717) #9, !dbg !7063
  br label %697, !dbg !7042, !llvm.loop !7054

; <label>:719:                                    ; preds = %699
  call void @dictReleaseIterator(%struct.dictIterator* %696) #9, !dbg !7064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7065
  br label %720, !dbg !7065

; <label>:720:                                    ; preds = %684, %719
  %721 = phi i32 [ %688, %719 ], [ %682, %684 ], !dbg !7066
  %722 = phi i8* [ %698, %719 ], [ %683, %684 ], !dbg !7037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7067
  br i1 %32, label %727, label %723, !dbg !7067

; <label>:723:                                    ; preds = %720
  %724 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0)) #11, !dbg !7069
  %725 = icmp eq i32 %724, 0, !dbg !7069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7070
  br i1 %725, label %727, label %726, !dbg !7070

; <label>:726:                                    ; preds = %723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7071
  br label %736, !dbg !7071

; <label>:727:                                    ; preds = %723, %720
  %728 = add nsw i32 %721, 1, !dbg !7072
  %729 = icmp eq i32 %721, 0, !dbg !7072
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7075
  br i1 %729, label %732, label %730, !dbg !7075

; <label>:730:                                    ; preds = %727
  %731 = call i8* @sdscat(i8* %722, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !7076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7077
  br label %732, !dbg !7077

; <label>:732:                                    ; preds = %730, %727
  %733 = phi i8* [ %731, %730 ], [ %722, %727 ], !dbg !7078
  %734 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7079, !tbaa !2593
  %735 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %733, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.426, i64 0, i64 0), i32 %734) #9, !dbg !7080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7071
  br i1 %32, label %741, label %736, !dbg !7071

; <label>:736:                                    ; preds = %726, %732
  %737 = phi i8* [ %722, %726 ], [ %735, %732 ]
  %738 = phi i32 [ %721, %726 ], [ %728, %732 ]
  %739 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.427, i64 0, i64 0)) #11, !dbg !7082
  %740 = icmp eq i32 %739, 0, !dbg !7082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7083
  br i1 %740, label %741, label %785, !dbg !7083

; <label>:741:                                    ; preds = %736, %732
  %742 = phi i8* [ %737, %736 ], [ %735, %732 ]
  %743 = phi i32 [ %738, %736 ], [ %728, %732 ]
  %744 = icmp eq i32 %743, 0, !dbg !7084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7086
  br i1 %744, label %747, label %745, !dbg !7086

; <label>:745:                                    ; preds = %741
  %746 = call i8* @sdscat(i8* %742, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.258, i64 0, i64 0)) #9, !dbg !7087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7088
  br label %747, !dbg !7088

; <label>:747:                                    ; preds = %741, %745
  %748 = phi i8* [ %746, %745 ], [ %742, %741 ], !dbg !7089
  %749 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %748, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.428, i64 0, i64 0)) #9, !dbg !7090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7092
  %750 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !7093, !tbaa !2929
  %751 = icmp sgt i32 %750, 0, !dbg !7094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7095
  br i1 %751, label %752, label %785, !dbg !7095

; <label>:752:                                    ; preds = %747, %779
  %753 = phi i32 [ %780, %779 ], [ %750, %747 ]
  %754 = phi i64 [ %782, %779 ], [ 0, %747 ]
  %755 = phi i8* [ %781, %779 ], [ %749, %747 ]
  %756 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !7096, !tbaa !2369
  %757 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %756, i64 %754, i32 0, !dbg !7096
  %758 = load %struct.dict*, %struct.dict** %757, align 8, !dbg !7096, !tbaa !2372
  %759 = getelementptr inbounds %struct.dict, %struct.dict* %758, i64 0, i32 2, i64 0, i32 3, !dbg !7096
  %760 = load i64, i64* %759, align 8, !dbg !7096, !tbaa !1370
  %761 = getelementptr inbounds %struct.dict, %struct.dict* %758, i64 0, i32 2, i64 1, i32 3, !dbg !7096
  %762 = load i64, i64* %761, align 8, !dbg !7096, !tbaa !1370
  %763 = add i64 %762, %760, !dbg !7096
  %764 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %756, i64 %754, i32 1, !dbg !7098
  %765 = load %struct.dict*, %struct.dict** %764, align 8, !dbg !7098, !tbaa !2391
  %766 = getelementptr inbounds %struct.dict, %struct.dict* %765, i64 0, i32 2, i64 0, i32 3, !dbg !7098
  %767 = load i64, i64* %766, align 8, !dbg !7098, !tbaa !1370
  %768 = getelementptr inbounds %struct.dict, %struct.dict* %765, i64 0, i32 2, i64 1, i32 3, !dbg !7098
  %769 = load i64, i64* %768, align 8, !dbg !7098, !tbaa !1370
  %770 = add i64 %769, %767, !dbg !7098
  %771 = or i64 %770, %763, !dbg !7100
  %772 = icmp eq i64 %771, 0, !dbg !7100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7100
  br i1 %772, label %779, label %773, !dbg !7100

; <label>:773:                                    ; preds = %752
  %774 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %756, i64 %754, i32 6, !dbg !7102
  %775 = load i64, i64* %774, align 8, !dbg !7102, !tbaa !4825
  %776 = trunc i64 %754 to i32, !dbg !7104
  %777 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %755, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.429, i64 0, i64 0), i32 %776, i64 %763, i64 %770, i64 %775) #9, !dbg !7104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7105
  %778 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !7093, !tbaa !2929
  br label %779, !dbg !7105

; <label>:779:                                    ; preds = %752, %773
  %780 = phi i32 [ %778, %773 ], [ %753, %752 ], !dbg !7093
  %781 = phi i8* [ %777, %773 ], [ %755, %752 ], !dbg !7106
  %782 = add nuw nsw i64 %754, 1, !dbg !7107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7108
  %783 = sext i32 %780 to i64, !dbg !7094
  %784 = icmp slt i64 %782, %783, !dbg !7094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7095
  br i1 %784, label %752, label %785, !dbg !7095, !llvm.loop !7109

; <label>:785:                                    ; preds = %779, %747, %736
  %786 = phi i8* [ %737, %736 ], [ %749, %747 ], [ %781, %779 ], !dbg !7089
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %21) #4, !dbg !7111
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %20) #4, !dbg !7111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7112
  ret i8* %786, !dbg !7112
}

; Function Attrs: noredzone
declare dso_local i32 @getrusage(i32, %struct.rusage*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @sdscat(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @uname(%struct.utsname*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @redisGitSHA1() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @redisGitDirty() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @redisBuildId() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @aeGetApiName() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @evictPolicyToString() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.redisMemOverhead* @getMemoryOverheadData() local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define internal fastcc void @bytesToHuman(i8*, i64) unnamed_addr #1 !dbg !7113 {
  %3 = icmp ult i64 %1, 1024, !dbg !7122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7124
  br i1 %3, label %4, label %6, !dbg !7124

; <label>:4:                                      ; preds = %2
  %5 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.488, i64 0, i64 0), i64 %1) #9, !dbg !7125
  br label %38, !dbg !7127

; <label>:6:                                      ; preds = %2
  %7 = icmp ult i64 %1, 1048576, !dbg !7128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7130
  br i1 %7, label %8, label %12, !dbg !7130

; <label>:8:                                      ; preds = %6
  %9 = uitofp i64 %1 to double, !dbg !7131
  %10 = fmul double %9, 0x3F50000000000000, !dbg !7133
  %11 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.489, i64 0, i64 0), double %10) #9, !dbg !7135
  br label %38, !dbg !7136

; <label>:12:                                     ; preds = %6
  %13 = icmp ult i64 %1, 1073741824, !dbg !7137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7139
  br i1 %13, label %14, label %18, !dbg !7139

; <label>:14:                                     ; preds = %12
  %15 = uitofp i64 %1 to double, !dbg !7140
  %16 = fmul double %15, 0x3EB0000000000000, !dbg !7142
  %17 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.490, i64 0, i64 0), double %16) #9, !dbg !7143
  br label %38, !dbg !7144

; <label>:18:                                     ; preds = %12
  %19 = icmp ult i64 %1, 1099511627776, !dbg !7145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7147
  br i1 %19, label %20, label %24, !dbg !7147

; <label>:20:                                     ; preds = %18
  %21 = uitofp i64 %1 to double, !dbg !7148
  %22 = fmul double %21, 0x3E10000000000000, !dbg !7150
  %23 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.491, i64 0, i64 0), double %22) #9, !dbg !7151
  br label %38, !dbg !7152

; <label>:24:                                     ; preds = %18
  %25 = icmp ult i64 %1, 1125899906842624, !dbg !7153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7155
  br i1 %25, label %26, label %30, !dbg !7155

; <label>:26:                                     ; preds = %24
  %27 = uitofp i64 %1 to double, !dbg !7156
  %28 = fmul double %27, 0x3D70000000000000, !dbg !7158
  %29 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.492, i64 0, i64 0), double %28) #9, !dbg !7159
  br label %38, !dbg !7160

; <label>:30:                                     ; preds = %24
  %31 = icmp ult i64 %1, 1152921504606846976, !dbg !7161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7163
  br i1 %31, label %32, label %36, !dbg !7163

; <label>:32:                                     ; preds = %30
  %33 = uitofp i64 %1 to double, !dbg !7164
  %34 = fmul double %33, 0x3CD0000000000000, !dbg !7166
  %35 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.493, i64 0, i64 0), double %34) #9, !dbg !7167
  br label %38, !dbg !7168

; <label>:36:                                     ; preds = %30
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.488, i64 0, i64 0), i64 %1) #9, !dbg !7169
  br label %38

; <label>:38:                                     ; preds = %8, %20, %32, %36, %26, %14, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7171
  ret void, !dbg !7171
}

; Function Attrs: noredzone
declare dso_local i64 @freeMemoryGetNotCountedMemory(...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @lazyfreeGetPendingObjectsCount() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @freeMemoryOverheadData(%struct.redisMemOverhead*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @aofRewriteBufferSize() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @bioPendingJobsOfType(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i64 @getSlaveKeyWithExpireCount() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @anetPeerToString(i32, i8*, i64, i32*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @addReplyBulkSds(%struct.client*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeTail(%struct.list*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @createPidFile() local_unnamed_addr #1 !dbg !7172 {
  %1 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !7175, !tbaa !3913
  %2 = icmp eq i8* %1, null, !dbg !7177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7178
  br i1 %2, label %3, label %5, !dbg !7178

; <label>:3:                                      ; preds = %0
  %4 = tail call i8* @zstrdup(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.430, i64 0, i64 0)) #9, !dbg !7179
  store i8* %4, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !7180, !tbaa !3913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7181
  br label %5, !dbg !7181

; <label>:5:                                      ; preds = %0, %3
  %6 = phi i8* [ %1, %0 ], [ %4, %3 ], !dbg !7182
  %7 = tail call %struct.__sFILE* @fopen(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !7183
  %8 = icmp eq %struct.__sFILE* %7, null, !dbg !7185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7187
  br i1 %8, label %13, label %9, !dbg !7187

; <label>:9:                                      ; preds = %5
  %10 = tail call i32 @getpid() #9, !dbg !7188
  %11 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.431, i64 0, i64 0), i32 %10) #9, !dbg !7190
  %12 = tail call i32 @fclose(%struct.__sFILE* nonnull %7) #9, !dbg !7191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7192
  br label %13, !dbg !7192

; <label>:13:                                     ; preds = %5, %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7193
  ret void, !dbg !7193
}

; Function Attrs: noredzone nounwind
define dso_local void @daemonize() local_unnamed_addr #1 !dbg !7194 {
  %1 = tail call i32 @fork() #9, !dbg !7197
  %2 = icmp eq i32 %1, 0, !dbg !7199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7200
  br i1 %2, label %4, label %3, !dbg !7200

; <label>:3:                                      ; preds = %0
  tail call void @exit(i32 0) #12, !dbg !7201
  unreachable

; <label>:4:                                      ; preds = %0
  %5 = tail call i32 @setsid() #9, !dbg !7202
  %6 = tail call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.432, i64 0, i64 0), i32 2, i32 0) #9, !dbg !7203
  %7 = icmp eq i32 %6, -1, !dbg !7206
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7207
  br i1 %7, label %15, label %8, !dbg !7207

; <label>:8:                                      ; preds = %4
  %9 = tail call i32 @dup2(i32 %6, i32 0) #9, !dbg !7208
  %10 = tail call i32 @dup2(i32 %6, i32 1) #9, !dbg !7210
  %11 = tail call i32 @dup2(i32 %6, i32 2) #9, !dbg !7211
  %12 = icmp sgt i32 %6, 2, !dbg !7212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7214
  br i1 %12, label %13, label %15, !dbg !7214

; <label>:13:                                     ; preds = %8
  %14 = tail call i32 @close(i32 %6) #9, !dbg !7215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7215
  br label %15, !dbg !7215

; <label>:15:                                     ; preds = %4, %8, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7216
  ret void, !dbg !7216
}

; Function Attrs: noredzone
declare dso_local i32 @fork() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @setsid() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @dup2(i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone noreturn nounwind
define dso_local void @version() local_unnamed_addr #5 !dbg !7217 {
  %1 = tail call i8* @redisGitSHA1() #9, !dbg !7218
  %2 = tail call i8* @redisGitDirty() #9, !dbg !7219
  %3 = tail call i32 @atoi(i8* %2) #9, !dbg !7220
  %4 = icmp sgt i32 %3, 0, !dbg !7221
  %5 = zext i1 %4 to i32, !dbg !7221
  %6 = tail call i64 @redisBuildId() #9, !dbg !7222
  %7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.433, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.390, i64 0, i64 0), i8* %1, i32 %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.395, i64 0, i64 0), i32 64, i64 %6) #9, !dbg !7223
  tail call void @exit(i32 0) #12, !dbg !7224
  unreachable
}

; Function Attrs: noredzone
declare dso_local i32 @printf(i8*, ...) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @atoi(i8*) local_unnamed_addr #0

; Function Attrs: noredzone noreturn nounwind
define dso_local void @usage() local_unnamed_addr #5 !dbg !7225 {
  %1 = tail call %struct._reent* @__getreent() #9, !dbg !7226
  %2 = getelementptr inbounds %struct._reent, %struct._reent* %1, i64 0, i32 3, !dbg !7226
  %3 = load %struct.__sFILE*, %struct.__sFILE** %2, align 8, !dbg !7226, !tbaa !7227
  %4 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.434, i64 0, i64 0)) #9, !dbg !7228
  %5 = tail call %struct._reent* @__getreent() #9, !dbg !7229
  %6 = getelementptr inbounds %struct._reent, %struct._reent* %5, i64 0, i32 3, !dbg !7229
  %7 = load %struct.__sFILE*, %struct.__sFILE** %6, align 8, !dbg !7229, !tbaa !7227
  %8 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.435, i64 0, i64 0)) #9, !dbg !7230
  %9 = tail call %struct._reent* @__getreent() #9, !dbg !7231
  %10 = getelementptr inbounds %struct._reent, %struct._reent* %9, i64 0, i32 3, !dbg !7231
  %11 = load %struct.__sFILE*, %struct.__sFILE** %10, align 8, !dbg !7231, !tbaa !7227
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.436, i64 0, i64 0)) #9, !dbg !7232
  %13 = tail call %struct._reent* @__getreent() #9, !dbg !7233
  %14 = getelementptr inbounds %struct._reent, %struct._reent* %13, i64 0, i32 3, !dbg !7233
  %15 = load %struct.__sFILE*, %struct.__sFILE** %14, align 8, !dbg !7233, !tbaa !7227
  %16 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.437, i64 0, i64 0)) #9, !dbg !7234
  %17 = tail call %struct._reent* @__getreent() #9, !dbg !7235
  %18 = getelementptr inbounds %struct._reent, %struct._reent* %17, i64 0, i32 3, !dbg !7235
  %19 = load %struct.__sFILE*, %struct.__sFILE** %18, align 8, !dbg !7235, !tbaa !7227
  %20 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %19, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.438, i64 0, i64 0)) #9, !dbg !7236
  %21 = tail call %struct._reent* @__getreent() #9, !dbg !7237
  %22 = getelementptr inbounds %struct._reent, %struct._reent* %21, i64 0, i32 3, !dbg !7237
  %23 = load %struct.__sFILE*, %struct.__sFILE** %22, align 8, !dbg !7237, !tbaa !7227
  %24 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.439, i64 0, i64 0)) #9, !dbg !7238
  %25 = tail call %struct._reent* @__getreent() #9, !dbg !7239
  %26 = getelementptr inbounds %struct._reent, %struct._reent* %25, i64 0, i32 3, !dbg !7239
  %27 = load %struct.__sFILE*, %struct.__sFILE** %26, align 8, !dbg !7239, !tbaa !7227
  %28 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %27, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.440, i64 0, i64 0)) #9, !dbg !7240
  %29 = tail call %struct._reent* @__getreent() #9, !dbg !7241
  %30 = getelementptr inbounds %struct._reent, %struct._reent* %29, i64 0, i32 3, !dbg !7241
  %31 = load %struct.__sFILE*, %struct.__sFILE** %30, align 8, !dbg !7241, !tbaa !7227
  %32 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %31, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.441, i64 0, i64 0)) #9, !dbg !7242
  %33 = tail call %struct._reent* @__getreent() #9, !dbg !7243
  %34 = getelementptr inbounds %struct._reent, %struct._reent* %33, i64 0, i32 3, !dbg !7243
  %35 = load %struct.__sFILE*, %struct.__sFILE** %34, align 8, !dbg !7243, !tbaa !7227
  %36 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.442, i64 0, i64 0)) #9, !dbg !7244
  %37 = tail call %struct._reent* @__getreent() #9, !dbg !7245
  %38 = getelementptr inbounds %struct._reent, %struct._reent* %37, i64 0, i32 3, !dbg !7245
  %39 = load %struct.__sFILE*, %struct.__sFILE** %38, align 8, !dbg !7245, !tbaa !7227
  %40 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %39, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.443, i64 0, i64 0)) #9, !dbg !7246
  %41 = tail call %struct._reent* @__getreent() #9, !dbg !7247
  %42 = getelementptr inbounds %struct._reent, %struct._reent* %41, i64 0, i32 3, !dbg !7247
  %43 = load %struct.__sFILE*, %struct.__sFILE** %42, align 8, !dbg !7247, !tbaa !7227
  %44 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %43, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.444, i64 0, i64 0)) #9, !dbg !7248
  %45 = tail call %struct._reent* @__getreent() #9, !dbg !7249
  %46 = getelementptr inbounds %struct._reent, %struct._reent* %45, i64 0, i32 3, !dbg !7249
  %47 = load %struct.__sFILE*, %struct.__sFILE** %46, align 8, !dbg !7249, !tbaa !7227
  %48 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %47, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.445, i64 0, i64 0)) #9, !dbg !7250
  %49 = tail call %struct._reent* @__getreent() #9, !dbg !7251
  %50 = getelementptr inbounds %struct._reent, %struct._reent* %49, i64 0, i32 3, !dbg !7251
  %51 = load %struct.__sFILE*, %struct.__sFILE** %50, align 8, !dbg !7251, !tbaa !7227
  %52 = tail call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %51, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.446, i64 0, i64 0)) #9, !dbg !7252
  tail call void @exit(i32 1) #12, !dbg !7253
  unreachable
}

; Function Attrs: noredzone nounwind
define dso_local void @redisAsciiArt() local_unnamed_addr #1 !dbg !7254 {
  %1 = tail call i8* @zmalloc(i64 16384) #9, !dbg !7263
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7265, !tbaa !2593
  %3 = icmp eq i32 %2, 0, !dbg !7267
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7268
  br i1 %3, label %5, label %4, !dbg !7268

; <label>:4:                                      ; preds = %0
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7270
  br label %9, !dbg !7270

; <label>:5:                                      ; preds = %0
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !7271, !tbaa !1803
  %7 = icmp eq i32 %6, 0, !dbg !7273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7274
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %8 = select i1 %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.388, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.387, i64 0, i64 0)
  br label %9

; <label>:9:                                      ; preds = %5, %4
  %10 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.178, i64 0, i64 0), %4 ], [ %8, %5 ], !dbg !7275
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 174), align 8, !dbg !7276, !tbaa !1827
  %12 = icmp eq i32 %11, 0, !dbg !7277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7278
  br i1 %12, label %13, label %24, !dbg !7278

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 173), align 8, !dbg !7279, !tbaa !1744
  %15 = load i8, i8* %14, align 1, !dbg !7280, !tbaa !1382
  %16 = icmp eq i8 %15, 0, !dbg !7281
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7282
  br i1 %16, label %17, label %24, !dbg !7282

; <label>:17:                                     ; preds = %13
  %18 = tail call %struct._reent* @__getreent() #9, !dbg !7283
  %19 = getelementptr inbounds %struct._reent, %struct._reent* %18, i64 0, i32 2, !dbg !7283
  %20 = load %struct.__sFILE*, %struct.__sFILE** %19, align 8, !dbg !7283, !tbaa !1756
  %21 = tail call i32 @fileno(%struct.__sFILE* %20) #9, !dbg !7284
  %22 = tail call i32 @isatty(i32 %21) #9, !dbg !7285
  %23 = icmp eq i32 %22, 0, !dbg !7285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7286
  br i1 %23, label %24, label %29, !dbg !7286

; <label>:24:                                     ; preds = %17, %9, %13
  %25 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 22), align 8, !dbg !7287, !tbaa !3977
  %26 = icmp eq i32 %25, 0, !dbg !7286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7288
  br i1 %26, label %27, label %30, !dbg !7288

; <label>:27:                                     ; preds = %24
  %28 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !7289, !tbaa !3840
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.448, i64 0, i64 0), i8* %10, i32 %28) #10, !dbg !7292
  br label %40, !dbg !7293

; <label>:29:                                     ; preds = %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7288
  br label %30

; <label>:30:                                     ; preds = %24, %29
  %31 = tail call i8* @redisGitSHA1() #9, !dbg !7294
  %32 = tail call i8* @redisGitDirty() #9, !dbg !7296
  %33 = tail call i64 @strtol(i8* %32, i8** null, i32 10) #9, !dbg !7297
  %34 = icmp sgt i64 %33, 0, !dbg !7298
  %35 = zext i1 %34 to i32, !dbg !7298
  %36 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !7299, !tbaa !3840
  %37 = tail call i32 @getpid() #9, !dbg !7300
  %38 = sext i32 %37 to i64, !dbg !7301
  %39 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 16384, i8* getelementptr inbounds ([1133 x i8], [1133 x i8]* @.str.447, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.390, i64 0, i64 0), i8* %31, i32 %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.449, i64 0, i64 0), i8* %10, i32 %36, i64 %38) #9, !dbg !7302
  tail call void @serverLogRaw(i32 1026, i8* %1) #10, !dbg !7303
  br label %40

; <label>:40:                                     ; preds = %30, %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  tail call void @zfree(i8* %1) #9, !dbg !7304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7305
  ret void, !dbg !7305
}

; Function Attrs: noredzone
declare dso_local i32 @isatty(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @fileno(%struct.__sFILE*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @sigemptyset(i64*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define internal void @sigShutdownHandler(i32) #1 !dbg !7306 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7311
  switch i32 %0, label %3 [
    i32 2, label %4
    i32 15, label %2
  ], !dbg !7311

; <label>:2:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7315
  br label %12, !dbg !7315

; <label>:3:                                      ; preds = %1
  br label %4, !dbg !7317

; <label>:4:                                      ; preds = %1, %3
  %5 = phi i8* [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.496, i64 0, i64 0), %3 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.494, i64 0, i64 0), %1 ], !dbg !7318
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7318
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 4, !dbg !7319, !tbaa !3210
  %7 = icmp ne i32 %6, 0, !dbg !7320
  %8 = icmp eq i32 %0, 2, !dbg !7321
  %9 = and i1 %8, %7, !dbg !7315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7315
  br i1 %9, label %10, label %12, !dbg !7315

; <label>:10:                                     ; preds = %4
  tail call void @serverLogFromHandler(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.497, i64 0, i64 0)) #10, !dbg !7322
  %11 = tail call i32 @getpid() #9, !dbg !7324
  tail call void @rdbRemoveTempFile(i32 %11) #9, !dbg !7325
  tail call void @exit(i32 1) #12, !dbg !7326
  unreachable

; <label>:12:                                     ; preds = %2, %4
  %13 = phi i8* [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.495, i64 0, i64 0), %2 ], [ %5, %4 ]
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !7327, !tbaa !3866
  %15 = icmp eq i32 %14, 0, !dbg !7329
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7330
  br i1 %15, label %17, label %16, !dbg !7330

; <label>:16:                                     ; preds = %12
  tail call void @serverLogFromHandler(i32 3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.498, i64 0, i64 0)) #10, !dbg !7331
  tail call void @exit(i32 0) #12, !dbg !7333
  unreachable

; <label>:17:                                     ; preds = %12
  tail call void @serverLogFromHandler(i32 3, i8* %13) #10, !dbg !7334
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 12), align 4, !dbg !7335, !tbaa !3210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7336
  ret void, !dbg !7336
}

; Function Attrs: noredzone
declare dso_local i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @checkForSentinelMode(i32, i8** nocapture readonly) local_unnamed_addr #1 !dbg !7337 {
  %3 = load i8*, i8** %1, align 8, !dbg !7346, !tbaa !1178
  %4 = tail call i8* @strstr(i8* %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.450, i64 0, i64 0)) #9, !dbg !7348
  %5 = icmp eq i8* %4, null, !dbg !7349
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7351
  br i1 %5, label %6, label %21, !dbg !7350

; <label>:6:                                      ; preds = %2
  %7 = icmp sgt i32 %0, 1, !dbg !7353
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7356
  br i1 %7, label %8, label %19, !dbg !7356

; <label>:8:                                      ; preds = %6
  %9 = sext i32 %0 to i64, !dbg !7357
  br label %10, !dbg !7357

; <label>:10:                                     ; preds = %8, %16
  %11 = phi i64 [ 1, %8 ], [ %17, %16 ]
  %12 = getelementptr inbounds i8*, i8** %1, i64 %11, !dbg !7357
  %13 = load i8*, i8** %12, align 8, !dbg !7357, !tbaa !1178
  %14 = tail call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.451, i64 0, i64 0)) #9, !dbg !7359
  %15 = icmp eq i32 %14, 0, !dbg !7359
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7360
  br i1 %15, label %19, label %16, !dbg !7360

; <label>:16:                                     ; preds = %10
  %17 = add nuw nsw i64 %11, 1, !dbg !7361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7362
  %18 = icmp slt i64 %17, %9, !dbg !7353
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7356
  br i1 %18, label %10, label %19, !dbg !7356, !llvm.loop !7363

; <label>:19:                                     ; preds = %16, %10, %6
  %20 = phi i32 [ 0, %6 ], [ 0, %16 ], [ 1, %10 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7365
  br label %21, !dbg !7366

; <label>:21:                                     ; preds = %19, %2
  %22 = phi i32 [ 1, %2 ], [ %20, %19 ], !dbg !7367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7366
  ret i32 %22, !dbg !7366
}

; Function Attrs: noredzone
declare dso_local i8* @strstr(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local void @loadDataFromDisk() local_unnamed_addr #1 !dbg !7368 {
  %1 = alloca %struct.timeval, align 8
  %2 = alloca %struct.timeval, align 8
  %3 = alloca %struct.timeval, align 8
  %4 = alloca %struct.rdbSaveInfo, align 8
  %5 = bitcast %struct.timeval* %3 to i8*, !dbg !7379
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4, !dbg !7379
  %6 = ptrtoint %struct.timeval* %3 to i64, !dbg !7380
  %7 = add i64 %6, 65536, !dbg !7381
  %8 = inttoptr i64 %7 to %struct.timeval*, !dbg !7382
  %9 = call i32 @gettimeofday(%struct.timeval* %8, i8* null) #9, !dbg !7384
  %10 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i64 0, i32 0, !dbg !7386
  %11 = load i64, i64* %10, align 8, !dbg !7386, !tbaa !1316
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i64 0, i32 1, !dbg !7387
  %13 = load i64, i64* %12, align 8, !dbg !7387, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4, !dbg !7388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7389
  %14 = mul nsw i64 %11, 1000000, !dbg !7390
  %15 = add nsw i64 %14, %13, !dbg !7392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7393
  %16 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !7395, !tbaa !3371
  %17 = icmp eq i32 %16, 1, !dbg !7396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7397
  br i1 %17, label %18, label %38, !dbg !7397

; <label>:18:                                     ; preds = %0
  %19 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 119), align 8, !dbg !7398, !tbaa !3918
  %20 = call i32 @loadAppendOnlyFile(i8* %19) #9, !dbg !7401
  %21 = icmp eq i32 %20, 0, !dbg !7402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7403
  br i1 %21, label %22, label %101, !dbg !7403

; <label>:22:                                     ; preds = %18
  %23 = bitcast %struct.timeval* %2 to i8*, !dbg !7409
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #4, !dbg !7409
  %24 = ptrtoint %struct.timeval* %2 to i64, !dbg !7410
  %25 = add i64 %24, 65536, !dbg !7411
  %26 = inttoptr i64 %25 to %struct.timeval*, !dbg !7412
  %27 = call i32 @gettimeofday(%struct.timeval* %26, i8* null) #9, !dbg !7414
  %28 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i64 0, i32 0, !dbg !7416
  %29 = load i64, i64* %28, align 8, !dbg !7416, !tbaa !1316
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i64 0, i32 1, !dbg !7417
  %31 = load i64, i64* %30, align 8, !dbg !7417, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #4, !dbg !7418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7419
  %32 = mul nsw i64 %29, 1000000, !dbg !7420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7422
  %33 = sub i64 %31, %15, !dbg !7423
  %34 = add i64 %33, %32, !dbg !7424
  %35 = sitofp i64 %34 to float, !dbg !7425
  %36 = fdiv float %35, 1.000000e+06, !dbg !7426
  %37 = fpext float %36 to double, !dbg !7425
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.452, i64 0, i64 0), double %37) #10, !dbg !7427
  br label %100, !dbg !7427

; <label>:38:                                     ; preds = %0
  %39 = bitcast %struct.rdbSaveInfo* %4 to i8*, !dbg !7428
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %39) #4, !dbg !7428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%struct.rdbSaveInfo* @loadDataFromDisk.rsi to i8*), i64 64, i1 false), !dbg !7429
  %40 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !7430, !tbaa !3362
  %41 = call i32 @rdbLoad(i8* %40, %struct.rdbSaveInfo* nonnull %4) #9, !dbg !7432
  %42 = icmp eq i32 %41, 0, !dbg !7433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7434
  br i1 %42, label %43, label %91, !dbg !7434

; <label>:43:                                     ; preds = %38
  %44 = bitcast %struct.timeval* %1 to i8*, !dbg !7441
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #4, !dbg !7441
  %45 = ptrtoint %struct.timeval* %1 to i64, !dbg !7442
  %46 = add i64 %45, 65536, !dbg !7443
  %47 = inttoptr i64 %46 to %struct.timeval*, !dbg !7444
  %48 = call i32 @gettimeofday(%struct.timeval* %47, i8* null) #9, !dbg !7446
  %49 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i64 0, i32 0, !dbg !7448
  %50 = load i64, i64* %49, align 8, !dbg !7448, !tbaa !1316
  %51 = getelementptr inbounds %struct.timeval, %struct.timeval* %47, i64 0, i32 1, !dbg !7449
  %52 = load i64, i64* %51, align 8, !dbg !7449, !tbaa !1319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #4, !dbg !7450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7451
  %53 = mul nsw i64 %50, 1000000, !dbg !7452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7454
  %54 = sub i64 %52, %15, !dbg !7455
  %55 = add i64 %54, %53, !dbg !7456
  %56 = sitofp i64 %55 to float, !dbg !7457
  %57 = fdiv float %56, 1.000000e+06, !dbg !7458
  %58 = fpext float %57 to double, !dbg !7457
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.453, i64 0, i64 0), double %58) #10, !dbg !7459
  %59 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7460, !tbaa !1813
  %60 = icmp eq i8* %59, null, !dbg !7462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7463
  br i1 %60, label %61, label %72, !dbg !7463

; <label>:61:                                     ; preds = %43
  %62 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7464, !tbaa !2593
  %63 = icmp eq i32 %62, 0, !dbg !7465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7466
  br i1 %63, label %99, label %64, !dbg !7466

; <label>:64:                                     ; preds = %61
  %65 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7467, !tbaa !5713
  %66 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %65, i64 0, i32 0, !dbg !7467
  %67 = load %struct.clusterNode*, %struct.clusterNode** %66, align 8, !dbg !7467, !tbaa !5715
  %68 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 2, !dbg !7467
  %69 = load i32, i32* %68, align 8, !dbg !7467, !tbaa !7468
  %70 = and i32 %69, 2, !dbg !7467
  %71 = icmp eq i32 %70, 0, !dbg !7467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7470
  br i1 %71, label %99, label %72, !dbg !7470

; <label>:72:                                     ; preds = %64, %43
  %73 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %4, i64 0, i32 1, !dbg !7471
  %74 = load i32, i32* %73, align 4, !dbg !7471, !tbaa !7472
  %75 = icmp eq i32 %74, 0, !dbg !7474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7475
  br i1 %75, label %99, label %76, !dbg !7475

; <label>:76:                                     ; preds = %72
  %77 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %4, i64 0, i32 3, !dbg !7476
  %78 = load i64, i64* %77, align 8, !dbg !7476, !tbaa !7477
  %79 = icmp eq i64 %78, -1, !dbg !7478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7479
  br i1 %79, label %99, label %80, !dbg !7479

; <label>:80:                                     ; preds = %76
  %81 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %4, i64 0, i32 0, !dbg !7480
  %82 = load i32, i32* %81, align 8, !dbg !7480, !tbaa !7481
  %83 = icmp eq i32 %82, -1, !dbg !7482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7483
  br i1 %83, label %99, label %84, !dbg !7483

; <label>:84:                                     ; preds = %80
  %85 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %4, i64 0, i32 2, i64 0, !dbg !7484
  %86 = call i8* @memcpy(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 177, i64 0), i8* nonnull %85, i64 41) #9, !dbg !7486
  %87 = load i64, i64* %77, align 8, !dbg !7487, !tbaa !7477
  store i64 %87, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !7488, !tbaa !4028
  call void @replicationCacheMasterUsingMyself() #9, !dbg !7489
  %88 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !7490, !tbaa !6865
  %89 = load i32, i32* %81, align 8, !dbg !7491, !tbaa !7481
  %90 = call i32 @selectDb(%struct.client* %88, i32 %89) #9, !dbg !7492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7493
  br label %99, !dbg !7493

; <label>:91:                                     ; preds = %38
  %92 = call i32* @__errno() #9, !dbg !7494
  %93 = load i32, i32* %92, align 4, !dbg !7494, !tbaa !1482
  %94 = icmp eq i32 %93, 2, !dbg !7496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7497
  br i1 %94, label %99, label %95, !dbg !7497

; <label>:95:                                     ; preds = %91
  %96 = call i32* @__errno() #9, !dbg !7498
  %97 = load i32, i32* %96, align 4, !dbg !7498, !tbaa !1482
  %98 = call i8* @strerror(i32 %97) #9, !dbg !7500
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.454, i64 0, i64 0), i8* %98) #10, !dbg !7501
  call void @exit(i32 1) #12, !dbg !7502
  unreachable

; <label>:99:                                     ; preds = %80, %76, %72, %64, %61, %91, %84
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %39) #4, !dbg !7503
  br label %100

; <label>:100:                                    ; preds = %99, %22
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %101, !dbg !7504

; <label>:101:                                    ; preds = %100, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7504
  ret void, !dbg !7504
}

; Function Attrs: noredzone
declare dso_local i32 @loadAppendOnlyFile(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @rdbLoad(i8*, %struct.rdbSaveInfo*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @replicationCacheMasterUsingMyself() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @selectDb(%struct.client*, i32) local_unnamed_addr #0

; Function Attrs: noredzone noreturn nounwind
define dso_local void @redisOutOfMemoryHandler(i64) #5 !dbg !7505 {
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.455, i64 0, i64 0), i64 %0) #10, !dbg !7511
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i64 0, i64 0), i32 3913, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.456, i64 0, i64 0)) #9, !dbg !7512
  tail call void @_exit(i32 1) #12, !dbg !7512
  unreachable
}

; Function Attrs: noredzone nounwind
define dso_local void @redisSetProcTitle(i8* nocapture readnone) local_unnamed_addr #1 !dbg !7513 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7519
  ret void, !dbg !7519
}

; Function Attrs: noredzone nounwind
define dso_local i32 @redisSupervisedUpstart() local_unnamed_addr #1 !dbg !7520 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7523
  %2 = icmp eq i8* %1, null, !dbg !7525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7527
  br i1 %2, label %3, label %4, !dbg !7527

; <label>:3:                                      ; preds = %0
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.458, i64 0, i64 0)) #10, !dbg !7528
  br label %7, !dbg !7530

; <label>:4:                                      ; preds = %0
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.459, i64 0, i64 0)) #10, !dbg !7531
  %5 = tail call i32 @raise(i32 19) #9, !dbg !7532
  %6 = tail call i32 @unsetenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7533
  br label %7, !dbg !7534

; <label>:7:                                      ; preds = %4, %3
  %8 = phi i32 [ 1, %4 ], [ 0, %3 ], !dbg !7535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7536
  ret i32 %8, !dbg !7536
}

; Function Attrs: noredzone
declare dso_local i8* @getenv(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @raise(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @unsetenv(i8*) local_unnamed_addr #0

; Function Attrs: noredzone nounwind
define dso_local i32 @redisSupervisedSystemd() local_unnamed_addr #1 !dbg !7537 {
  %1 = alloca %struct.sockaddr_un, align 1
  %2 = alloca %struct.iovec, align 8
  %3 = alloca %struct.msghdr, align 8
  %4 = alloca i32, align 4
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.460, i64 0, i64 0)) #9, !dbg !7583
  %6 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %1, i64 0, i32 0, !dbg !7586
  call void @llvm.lifetime.start.p0i8(i64 109, i8* nonnull %6) #4, !dbg !7586
  %7 = bitcast %struct.iovec* %2 to i8*, !dbg !7587
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4, !dbg !7587
  %8 = bitcast %struct.msghdr* %3 to i8*, !dbg !7588
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #4, !dbg !7588
  %9 = icmp eq i8* %5, null, !dbg !7590
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7592
  br i1 %9, label %10, label %11, !dbg !7592

; <label>:10:                                     ; preds = %0
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.461, i64 0, i64 0)) #10, !dbg !7593
  br label %73, !dbg !7595

; <label>:11:                                     ; preds = %0
  %12 = load i8, i8* %5, align 1, !dbg !7596, !tbaa !1382
  %13 = sext i8 %12 to i32, !dbg !7596
  %14 = tail call i8* @strchr(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.462, i64 0, i64 0), i32 %13) #9, !dbg !7598
  %15 = icmp eq i8* %14, null, !dbg !7599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7600
  br i1 %15, label %73, label %16, !dbg !7600

; <label>:16:                                     ; preds = %11
  %17 = tail call i64 @strlen(i8* nonnull %5) #9, !dbg !7601
  %18 = icmp ult i64 %17, 2, !dbg !7602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7603
  br i1 %18, label %73, label %19, !dbg !7603

; <label>:19:                                     ; preds = %16
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.463, i64 0, i64 0)) #10, !dbg !7604
  %20 = tail call i32 @socket(i32 1, i32 2, i32 0) #9, !dbg !7605
  %21 = icmp eq i32 %20, -1, !dbg !7607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7608
  br i1 %21, label %22, label %23, !dbg !7608

; <label>:22:                                     ; preds = %19
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.464, i64 0, i64 0), i8* nonnull %5) #10, !dbg !7609
  br label %73, !dbg !7611

; <label>:23:                                     ; preds = %19
  %24 = call i8* @memset(i8* nonnull %6, i32 0, i64 109) #9, !dbg !7612
  store i8 1, i8* %6, align 1, !dbg !7613, !tbaa !7614
  %25 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %1, i64 0, i32 1, i64 0, !dbg !7616
  %26 = call i8* @strncpy(i8* nonnull %25, i8* nonnull %5, i64 107) #9, !dbg !7617
  %27 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %1, i64 0, i32 1, i64 107, !dbg !7618
  store i8 0, i8* %27, align 1, !dbg !7619, !tbaa !1382
  %28 = load i8, i8* %5, align 1, !dbg !7620, !tbaa !1382
  %29 = icmp eq i8 %28, 64, !dbg !7622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7623
  br i1 %29, label %30, label %31, !dbg !7623

; <label>:30:                                     ; preds = %23
  store i8 0, i8* %25, align 1, !dbg !7624, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7625
  br label %31, !dbg !7625

; <label>:31:                                     ; preds = %30, %23
  %32 = call i8* @memset(i8* nonnull %7, i32 0, i64 16) #9, !dbg !7626
  %33 = getelementptr inbounds %struct.iovec, %struct.iovec* %2, i64 0, i32 0, !dbg !7627
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.465, i64 0, i64 0), i8** %33, align 8, !dbg !7628, !tbaa !7629
  %34 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.465, i64 0, i64 0)) #9, !dbg !7631
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %2, i64 0, i32 1, !dbg !7632
  store i64 %34, i64* %35, align 8, !dbg !7633, !tbaa !7634
  %36 = call i8* @memset(i8* nonnull %8, i32 0, i64 48) #9, !dbg !7635
  %37 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i64 0, i32 0, !dbg !7636
  store i8* %6, i8** %37, align 8, !dbg !7637, !tbaa !7638
  %38 = call i64 @strlen(i8* nonnull %5) #9, !dbg !7640
  %39 = trunc i64 %38 to i32, !dbg !7641
  %40 = add i32 %39, 1, !dbg !7641
  %41 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i64 0, i32 1, !dbg !7642
  store i32 %40, i32* %41, align 8, !dbg !7643, !tbaa !7644
  %42 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i64 0, i32 2, !dbg !7645
  store %struct.iovec* %2, %struct.iovec** %42, align 8, !dbg !7646, !tbaa !7647
  %43 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i64 0, i32 3, !dbg !7648
  store i32 1, i32* %43, align 8, !dbg !7649, !tbaa !7650
  %44 = call i32 @unsetenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.460, i64 0, i64 0)) #9, !dbg !7651
  %45 = bitcast i32* %4 to i8*, !dbg !7652
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #4, !dbg !7652
  %46 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #4, !dbg !7653, !srcloc !7661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7663
  %47 = icmp ult i64 %46, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7664
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7664
  br i1 %47, label %53, label %48, !dbg !7664

; <label>:48:                                     ; preds = %31
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #4, !dbg !7665, !srcloc !7661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7668
  %50 = icmp ugt i64 %49, ptrtoint ([0 x i8]* @_end to i64), !dbg !7664
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7669
  br i1 %50, label %53, label %51, !dbg !7669

; <label>:51:                                     ; preds = %48
  %52 = call i32 @sendmsg(i32 %20, %struct.msghdr* nonnull %3, i32 0) #9, !dbg !7671
  store i32 %52, i32* %4, align 4, !dbg !7671, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7671
  br label %64, !dbg !7671

; <label>:53:                                     ; preds = %48, %31
  %54 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #4, !dbg !7674, !srcloc !7661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7682
  %55 = and i64 %54, -65536, !dbg !7684
  %56 = or i64 %55, 4097, !dbg !7684
  %57 = add nsw i64 %56, -1, !dbg !7684
  %58 = inttoptr i64 %57 to i32*, !dbg !7685
  %59 = load i32, i32* %58, align 4096, !dbg !7686, !tbaa !1482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7687
  %60 = sext i32 %20 to i64, !dbg !7688
  %61 = ptrtoint %struct.msghdr* %3 to i64, !dbg !7688
  %62 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sendmsg\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %60, i64 %61, i64 0, i32 %59, i32 (i32, %struct.msghdr*, i32)* nonnull @sendmsg) #4, !dbg !7688, !srcloc !7689
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i64 %62) #4, !dbg !7690, !srcloc !7693
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %63 = load i32, i32* %4, align 4, !dbg !7694, !tbaa !1482
  br label %64

; <label>:64:                                     ; preds = %53, %51
  %65 = phi i32 [ %63, %53 ], [ %52, %51 ], !dbg !7694
  %66 = icmp slt i32 %65, 0, !dbg !7696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7697
  br i1 %66, label %67, label %69, !dbg !7697

; <label>:67:                                     ; preds = %64
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.466, i64 0, i64 0)) #10, !dbg !7698
  %68 = call i32 @close(i32 %20) #9, !dbg !7700
  br label %71, !dbg !7701

; <label>:69:                                     ; preds = %64
  %70 = call i32 @close(i32 %20) #9, !dbg !7702
  br label %71, !dbg !7703

; <label>:71:                                     ; preds = %69, %67
  %72 = phi i32 [ 0, %67 ], [ 1, %69 ], !dbg !7704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7705
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #4, !dbg !7706
  br label %73

; <label>:73:                                     ; preds = %11, %16, %71, %22, %10
  %74 = phi i32 [ 0, %22 ], [ %72, %71 ], [ 0, %10 ], [ 0, %16 ], [ 0, %11 ], !dbg !7707
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #4, !dbg !7706
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4, !dbg !7706
  call void @llvm.lifetime.end.p0i8(i64 109, i8* nonnull %6) #4, !dbg !7706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7706
  ret i32 %74, !dbg !7706
}

; Function Attrs: noredzone
declare dso_local i32 @socket(i32, i32, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @sendmsg(i32, %struct.msghdr*, i32) #0

; Function Attrs: noredzone nounwind
define dso_local i32 @redisIsSupervised(i32) local_unnamed_addr #1 !dbg !7708 {
  %2 = icmp eq i32 %0, 1, !dbg !7716
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7717
  br i1 %2, label %3, label %21, !dbg !7717

; <label>:3:                                      ; preds = %1
  %4 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7718
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.460, i64 0, i64 0)) #9, !dbg !7720
  %6 = icmp eq i8* %4, null, !dbg !7722
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7724
  br i1 %6, label %15, label %7, !dbg !7724

; <label>:7:                                      ; preds = %3
  %8 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7725
  %9 = icmp eq i8* %8, null, !dbg !7729
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7730
  br i1 %9, label %10, label %11, !dbg !7730

; <label>:10:                                     ; preds = %7
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.458, i64 0, i64 0)) #9, !dbg !7731
  br label %14, !dbg !7732

; <label>:11:                                     ; preds = %7
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.459, i64 0, i64 0)) #9, !dbg !7733
  %12 = tail call i32 @raise(i32 19) #9, !dbg !7734
  %13 = tail call i32 @unsetenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7735
  br label %14, !dbg !7736

; <label>:14:                                     ; preds = %10, %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7738
  br label %19, !dbg !7739

; <label>:15:                                     ; preds = %3
  %16 = icmp eq i8* %5, null, !dbg !7740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7742
  br i1 %16, label %20, label %17, !dbg !7742

; <label>:17:                                     ; preds = %15
  %18 = tail call i32 @redisSupervisedSystemd() #10, !dbg !7743
  br label %19, !dbg !7745

; <label>:19:                                     ; preds = %14, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7737
  br label %20, !dbg !7746

; <label>:20:                                     ; preds = %19, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7746
  br label %36, !dbg !7746

; <label>:21:                                     ; preds = %1
  %22 = icmp eq i32 %0, 3, !dbg !7747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7749
  br i1 %22, label %23, label %32, !dbg !7749

; <label>:23:                                     ; preds = %21
  %24 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7750
  %25 = icmp eq i8* %24, null, !dbg !7754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %25, label %26, label %27, !dbg !7755

; <label>:26:                                     ; preds = %23
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.458, i64 0, i64 0)) #9, !dbg !7756
  br label %30, !dbg !7757

; <label>:27:                                     ; preds = %23
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.459, i64 0, i64 0)) #9, !dbg !7758
  %28 = tail call i32 @raise(i32 19) #9, !dbg !7759
  %29 = tail call i32 @unsetenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.457, i64 0, i64 0)) #9, !dbg !7760
  br label %30, !dbg !7761

; <label>:30:                                     ; preds = %26, %27
  %31 = phi i32 [ 1, %27 ], [ 0, %26 ], !dbg !7762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7764
  br label %36, !dbg !7765

; <label>:32:                                     ; preds = %21
  %33 = icmp eq i32 %0, 2, !dbg !7766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7768
  br i1 %33, label %34, label %36, !dbg !7768

; <label>:34:                                     ; preds = %32
  %35 = tail call i32 @redisSupervisedSystemd() #10, !dbg !7769
  br label %36, !dbg !7771

; <label>:36:                                     ; preds = %20, %32, %34, %30
  %37 = phi i32 [ %31, %30 ], [ %35, %34 ], [ 0, %32 ], [ 0, %20 ], !dbg !7772
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7773
  ret i32 %37, !dbg !7773
}

; Function Attrs: noredzone nounwind
define dso_local i32 @redis_server_main(i32, i8**) local_unnamed_addr #1 !dbg !7774 {
  %3 = alloca %struct.timeval, align 8
  %4 = alloca [16 x i8], align 16
  %5 = tail call i8* @setlocale(i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.309, i64 0, i64 0)) #9, !dbg !7789
  tail call void @tzset() #9, !dbg !7790
  tail call void @zmalloc_set_oom_handler(void (i64)* nonnull @redisOutOfMemoryHandler) #9, !dbg !7791
  %6 = tail call i64 @time(i64* null) #9, !dbg !7792
  %7 = tail call i32 @getpid() #9, !dbg !7793
  %8 = trunc i64 %6 to i32, !dbg !7792
  %9 = xor i32 %7, %8, !dbg !7792
  tail call void @srand(i32 %9) #9, !dbg !7794
  %10 = bitcast %struct.timeval* %3 to i8*, !dbg !7799
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4, !dbg !7799
  %11 = ptrtoint %struct.timeval* %3 to i64, !dbg !7800
  %12 = add i64 %11, 65536, !dbg !7801
  %13 = inttoptr i64 %12 to %struct.timeval*, !dbg !7802
  %14 = call i32 @gettimeofday(%struct.timeval* %13, i8* null) #9, !dbg !7804
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4, !dbg !7806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7807
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0, !dbg !7808
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #4, !dbg !7808
  call void @getRandomHexChars(i8* nonnull %15, i64 16) #9, !dbg !7810
  call void @dictSetHashFunctionSeed(i8* nonnull %15) #9, !dbg !7811
  %16 = load i8*, i8** %1, align 8, !dbg !7815, !tbaa !1178
  %17 = call i8* @strstr(i8* %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.450, i64 0, i64 0)) #9, !dbg !7816
  %18 = icmp eq i8* %17, null, !dbg !7817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7819
  br i1 %18, label %19, label %34, !dbg !7818

; <label>:19:                                     ; preds = %2
  %20 = icmp sgt i32 %0, 1, !dbg !7821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7822
  br i1 %20, label %21, label %32, !dbg !7822

; <label>:21:                                     ; preds = %19
  %22 = sext i32 %0 to i64, !dbg !7823
  br label %23, !dbg !7823

; <label>:23:                                     ; preds = %29, %21
  %24 = phi i64 [ 1, %21 ], [ %30, %29 ]
  %25 = getelementptr inbounds i8*, i8** %1, i64 %24, !dbg !7823
  %26 = load i8*, i8** %25, align 8, !dbg !7823, !tbaa !1178
  %27 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.451, i64 0, i64 0)) #9, !dbg !7824
  %28 = icmp eq i32 %27, 0, !dbg !7824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7825
  br i1 %28, label %32, label %29, !dbg !7825

; <label>:29:                                     ; preds = %23
  %30 = add nuw nsw i64 %24, 1, !dbg !7826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7827
  %31 = icmp slt i64 %30, %22, !dbg !7821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7822
  br i1 %31, label %23, label %32, !dbg !7822, !llvm.loop !7363

; <label>:32:                                     ; preds = %29, %23, %19
  %33 = phi i32 [ 0, %19 ], [ 0, %29 ], [ 1, %23 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7828
  br label %34, !dbg !7829

; <label>:34:                                     ; preds = %32, %2
  %35 = phi i32 [ 1, %2 ], [ %33, %32 ], !dbg !7830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7829
  store i32 %35, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !7831, !tbaa !1803
  call void @initServerConfig() #10, !dbg !7832
  call void @moduleInitModulesSystem() #9, !dbg !7833
  %36 = load i8*, i8** %1, align 8, !dbg !7834, !tbaa !1178
  %37 = call i8* @getAbsolutePath(i8* %36) #9, !dbg !7835
  store i8* %37, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 2), align 8, !dbg !7836, !tbaa !4300
  %38 = add nsw i32 %0, 1, !dbg !7837
  %39 = sext i32 %38 to i64, !dbg !7838
  %40 = shl nsw i64 %39, 3, !dbg !7839
  %41 = call i8* @zmalloc(i64 %40) #9, !dbg !7840
  %42 = bitcast i8* %41 to i8**, !dbg !7840
  store i8* %41, i8** bitcast (i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3) to i8**), align 8, !dbg !7841, !tbaa !4351
  %43 = sext i32 %0 to i64, !dbg !7842
  %44 = getelementptr inbounds i8*, i8** %42, i64 %43, !dbg !7842
  store i8* null, i8** %44, align 8, !dbg !7843, !tbaa !1178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7845
  %45 = icmp sgt i32 %0, 0, !dbg !7847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7849
  br i1 %45, label %46, label %57, !dbg !7849

; <label>:46:                                     ; preds = %34
  %47 = zext i32 %0 to i64
  br label %48, !dbg !7850

; <label>:48:                                     ; preds = %48, %46
  %49 = phi i64 [ 0, %46 ], [ %55, %48 ]
  %50 = getelementptr inbounds i8*, i8** %1, i64 %49, !dbg !7850
  %51 = load i8*, i8** %50, align 8, !dbg !7850, !tbaa !1178
  %52 = call i8* @zstrdup(i8* %51) #9, !dbg !7851
  %53 = load i8**, i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !7852, !tbaa !4351
  %54 = getelementptr inbounds i8*, i8** %53, i64 %49, !dbg !7853
  store i8* %52, i8** %54, align 8, !dbg !7854, !tbaa !1178
  %55 = add nuw nsw i64 %49, 1, !dbg !7855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7849
  %56 = icmp eq i64 %55, %47, !dbg !7847
  br i1 %56, label %57, label %48, !dbg !7849, !llvm.loop !7857

; <label>:57:                                     ; preds = %48, %34
  %58 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !7859, !tbaa !1803
  %59 = icmp eq i32 %58, 0, !dbg !7861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7862
  br i1 %59, label %61, label %60, !dbg !7862

; <label>:60:                                     ; preds = %57
  call void @initSentinelConfig() #9, !dbg !7863
  call void @initSentinel() #9, !dbg !7865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7866
  br label %61, !dbg !7866

; <label>:61:                                     ; preds = %57, %60
  %62 = load i8*, i8** %1, align 8, !dbg !7867, !tbaa !1178
  %63 = call i8* @strstr(i8* %62, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.467, i64 0, i64 0)) #9, !dbg !7869
  %64 = icmp eq i8* %63, null, !dbg !7870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7871
  br i1 %64, label %67, label %65, !dbg !7871

; <label>:65:                                     ; preds = %61
  %66 = call i32 @redis_check_rdb_main(i32 %0, i8** nonnull %1, %struct.__sFILE* null) #9, !dbg !7872
  br label %73, !dbg !7872

; <label>:67:                                     ; preds = %61
  %68 = load i8*, i8** %1, align 8, !dbg !7873, !tbaa !1178
  %69 = call i8* @strstr(i8* %68, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i64 0, i64 0)) #9, !dbg !7875
  %70 = icmp eq i8* %69, null, !dbg !7876
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7877
  br i1 %70, label %74, label %71, !dbg !7877

; <label>:71:                                     ; preds = %67
  %72 = call i32 @redis_check_aof_main(i32 %0, i8** nonnull %1) #9, !dbg !7878
  br label %73, !dbg !7878

; <label>:73:                                     ; preds = %65, %71
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7879
  br label %74, !dbg !7880

; <label>:74:                                     ; preds = %73, %67
  %75 = icmp sgt i32 %0, 1, !dbg !7880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7881
  br i1 %75, label %76, label %217, !dbg !7881

; <label>:76:                                     ; preds = %74
  %77 = call i8* @sdsempty() #9, !dbg !7882
  %78 = getelementptr inbounds i8*, i8** %1, i64 1, !dbg !7885
  %79 = load i8*, i8** %78, align 8, !dbg !7885, !tbaa !1178
  %80 = call i32 @strcmp(i8* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.469, i64 0, i64 0)) #9, !dbg !7887
  %81 = icmp eq i32 %80, 0, !dbg !7888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7889
  br i1 %81, label %86, label %82, !dbg !7889

; <label>:82:                                     ; preds = %76
  %83 = load i8*, i8** %78, align 8, !dbg !7890, !tbaa !1178
  %84 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.470, i64 0, i64 0)) #9, !dbg !7891
  %85 = icmp eq i32 %84, 0, !dbg !7892
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7893
  br i1 %85, label %86, label %87, !dbg !7893

; <label>:86:                                     ; preds = %82, %76
  call void @version() #10, !dbg !7894
  unreachable

; <label>:87:                                     ; preds = %82
  %88 = load i8*, i8** %78, align 8, !dbg !7895, !tbaa !1178
  %89 = call i32 @strcmp(i8* %88, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.471, i64 0, i64 0)) #9, !dbg !7897
  %90 = icmp eq i32 %89, 0, !dbg !7898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7899
  br i1 %90, label %95, label %91, !dbg !7899

; <label>:91:                                     ; preds = %87
  %92 = load i8*, i8** %78, align 8, !dbg !7900, !tbaa !1178
  %93 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.472, i64 0, i64 0)) #9, !dbg !7901
  %94 = icmp eq i32 %93, 0, !dbg !7902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7903
  br i1 %94, label %95, label %96, !dbg !7903

; <label>:95:                                     ; preds = %91, %87
  call void @usage() #10, !dbg !7904
  unreachable

; <label>:96:                                     ; preds = %91
  %97 = load i8*, i8** %78, align 8, !dbg !7905, !tbaa !1178
  %98 = call i32 @strcmp(i8* %97, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.473, i64 0, i64 0)) #9, !dbg !7907
  %99 = icmp eq i32 %98, 0, !dbg !7908
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7909
  br i1 %99, label %100, label %116, !dbg !7909

; <label>:100:                                    ; preds = %96
  %101 = icmp eq i32 %0, 3, !dbg !7910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7913
  br i1 %101, label %102, label %107, !dbg !7913

; <label>:102:                                    ; preds = %100
  %103 = getelementptr inbounds i8*, i8** %1, i64 2, !dbg !7914
  %104 = load i8*, i8** %103, align 8, !dbg !7914, !tbaa !1178
  %105 = call i32 @atoi(i8* %104) #9, !dbg !7916
  %106 = sext i32 %105 to i64, !dbg !7916
  call void @memtest(i64 %106, i32 50) #9, !dbg !7917
  call void @exit(i32 0) #12, !dbg !7918
  unreachable

; <label>:107:                                    ; preds = %100
  %108 = call %struct._reent* @__getreent() #9, !dbg !7919
  %109 = getelementptr inbounds %struct._reent, %struct._reent* %108, i64 0, i32 3, !dbg !7919
  %110 = load %struct.__sFILE*, %struct.__sFILE** %109, align 8, !dbg !7919, !tbaa !7227
  %111 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %110, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.474, i64 0, i64 0)) #9, !dbg !7921
  %112 = call %struct._reent* @__getreent() #9, !dbg !7922
  %113 = getelementptr inbounds %struct._reent, %struct._reent* %112, i64 0, i32 3, !dbg !7922
  %114 = load %struct.__sFILE*, %struct.__sFILE** %113, align 8, !dbg !7922, !tbaa !7227
  %115 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* %114, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.475, i64 0, i64 0)) #9, !dbg !7923
  call void @exit(i32 1) #12, !dbg !7924
  unreachable

; <label>:116:                                    ; preds = %96
  %117 = load i8*, i8** %78, align 8, !dbg !7925, !tbaa !1178
  %118 = load i8, i8* %117, align 1, !dbg !7925, !tbaa !1382
  %119 = icmp eq i8 %118, 45, !dbg !7927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7928
  br i1 %119, label %120, label %124, !dbg !7928

; <label>:120:                                    ; preds = %116
  %121 = getelementptr inbounds i8, i8* %117, i64 1, !dbg !7929
  %122 = load i8, i8* %121, align 1, !dbg !7929, !tbaa !1382
  %123 = icmp eq i8 %122, 45, !dbg !7930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7931
  br i1 %123, label %133, label %124, !dbg !7931

; <label>:124:                                    ; preds = %120, %116
  %125 = call i8* @getAbsolutePath(i8* %117) #9, !dbg !7932
  store i8* %125, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !7934, !tbaa !6496
  %126 = load i8**, i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !7935, !tbaa !4351
  %127 = getelementptr inbounds i8*, i8** %126, i64 1, !dbg !7936
  %128 = load i8*, i8** %127, align 8, !dbg !7936, !tbaa !1178
  call void @zfree(i8* %128) #9, !dbg !7937
  %129 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 1), align 8, !dbg !7938, !tbaa !6496
  %130 = call i8* @zstrdup(i8* %129) #9, !dbg !7939
  %131 = load i8**, i8*** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 3), align 8, !dbg !7940, !tbaa !4351
  %132 = getelementptr inbounds i8*, i8** %131, i64 1, !dbg !7941
  store i8* %130, i8** %132, align 8, !dbg !7942, !tbaa !1178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7943
  br label %133, !dbg !7943

; <label>:133:                                    ; preds = %120, %124
  %134 = phi i8* [ %117, %124 ], [ null, %120 ], !dbg !7944
  %135 = phi i32 [ 2, %124 ], [ 1, %120 ], !dbg !7944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7945
  %136 = icmp eq i32 %135, %0, !dbg !7946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7945
  br i1 %136, label %206, label %137, !dbg !7945

; <label>:137:                                    ; preds = %133, %200
  %138 = phi i32 [ %204, %200 ], [ %135, %133 ]
  %139 = phi i8* [ %202, %200 ], [ %77, %133 ]
  %140 = sext i32 %138 to i64, !dbg !7945
  br label %141, !dbg !7945

; <label>:141:                                    ; preds = %137, %154
  %142 = phi i64 [ %140, %137 ], [ %155, %154 ]
  %143 = getelementptr inbounds i8*, i8** %1, i64 %142, !dbg !7947
  %144 = load i8*, i8** %143, align 8, !dbg !7947, !tbaa !1178
  %145 = load i8, i8* %144, align 1, !dbg !7947, !tbaa !1382
  %146 = icmp eq i8 %145, 45, !dbg !7950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7951
  br i1 %146, label %147, label %197, !dbg !7951

; <label>:147:                                    ; preds = %141
  %148 = getelementptr inbounds i8, i8* %144, i64 1, !dbg !7952
  %149 = load i8, i8* %148, align 1, !dbg !7952, !tbaa !1382
  %150 = icmp eq i8 %149, 45, !dbg !7953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7954
  br i1 %150, label %151, label %197, !dbg !7954

; <label>:151:                                    ; preds = %147
  %152 = call i32 @strcmp(i8* nonnull %144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.476, i64 0, i64 0)) #9, !dbg !7955
  %153 = icmp eq i32 %152, 0, !dbg !7955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7958
  br i1 %153, label %154, label %158, !dbg !7958

; <label>:154:                                    ; preds = %151
  %155 = add nsw i64 %142, 1, !dbg !7959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7961
  %156 = trunc i64 %155 to i32, !dbg !7946
  %157 = icmp eq i32 %156, %0, !dbg !7946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7945
  br i1 %157, label %206, label %141, !dbg !7945, !llvm.loop !7962

; <label>:158:                                    ; preds = %151
  %159 = getelementptr inbounds i8*, i8** %1, i64 %142, !dbg !7947
  %160 = getelementptr inbounds i8, i8* %139, i64 -1, !dbg !7967
  %161 = load i8, i8* %160, align 1, !dbg !7967, !tbaa !1382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7969
  %162 = trunc i8 %161 to i3, !dbg !7969
  switch i3 %162, label %184 [
    i3 0, label %163
    i3 1, label %166
    i3 2, label %170
    i3 3, label %175
    i3 -4, label %180
  ], !dbg !7969

; <label>:163:                                    ; preds = %158
  %164 = lshr i8 %161, 3, !dbg !7970
  %165 = zext i8 %164 to i64, !dbg !7970
  br label %185, !dbg !7971

; <label>:166:                                    ; preds = %158
  %167 = getelementptr inbounds i8, i8* %139, i64 -3, !dbg !7972
  %168 = load i8, i8* %167, align 1, !dbg !7973, !tbaa !1382
  %169 = zext i8 %168 to i64, !dbg !7972
  br label %185, !dbg !7974

; <label>:170:                                    ; preds = %158
  %171 = getelementptr inbounds i8, i8* %139, i64 -5, !dbg !7975
  %172 = bitcast i8* %171 to i16*, !dbg !7976
  %173 = load i16, i16* %172, align 1, !dbg !7976, !tbaa !2037
  %174 = zext i16 %173 to i64, !dbg !7975
  br label %185, !dbg !7977

; <label>:175:                                    ; preds = %158
  %176 = getelementptr inbounds i8, i8* %139, i64 -9, !dbg !7978
  %177 = bitcast i8* %176 to i32*, !dbg !7979
  %178 = load i32, i32* %177, align 1, !dbg !7979, !tbaa !1482
  %179 = zext i32 %178 to i64, !dbg !7978
  br label %185, !dbg !7980

; <label>:180:                                    ; preds = %158
  %181 = getelementptr inbounds i8, i8* %139, i64 -17, !dbg !7981
  %182 = bitcast i8* %181 to i64*, !dbg !7982
  %183 = load i64, i64* %182, align 1, !dbg !7982, !tbaa !2045
  br label %185, !dbg !7983

; <label>:184:                                    ; preds = %158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7984
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7985
  br label %190, !dbg !7986

; <label>:185:                                    ; preds = %163, %166, %170, %175, %180
  %186 = phi i64 [ %183, %180 ], [ %179, %175 ], [ %174, %170 ], [ %169, %166 ], [ %165, %163 ], !dbg !7987
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7988
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7985
  %187 = icmp eq i64 %186, 0, !dbg !7989
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7986
  br i1 %187, label %192, label %188, !dbg !7986

; <label>:188:                                    ; preds = %185
  %189 = call i8* @sdscat(i8* nonnull %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.246, i64 0, i64 0)) #9, !dbg !7990
  br label %190, !dbg !7991

; <label>:190:                                    ; preds = %188, %184
  %191 = phi i8* [ %139, %184 ], [ %189, %188 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7988
  br label %192, !dbg !7992

; <label>:192:                                    ; preds = %190, %185
  %193 = phi i8* [ %139, %185 ], [ %191, %190 ], !dbg !7944
  %194 = load i8*, i8** %159, align 8, !dbg !7992, !tbaa !1178
  %195 = getelementptr inbounds i8, i8* %194, i64 2, !dbg !7993
  %196 = call i8* @sdscat(i8* %193, i8* nonnull %195) #9, !dbg !7994
  br label %200, !dbg !7995

; <label>:197:                                    ; preds = %147, %141
  %198 = call i64 @strlen(i8* %144) #9, !dbg !7996
  %199 = call i8* @sdscatrepr(i8* %139, i8* %144, i64 %198) #9, !dbg !7998
  br label %200

; <label>:200:                                    ; preds = %197, %192
  %201 = phi i8* [ %199, %197 ], [ %196, %192 ]
  %202 = call i8* @sdscat(i8* %201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.287, i64 0, i64 0)) #9, !dbg !7999
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %203 = trunc i64 %142 to i32, !dbg !7951
  %204 = add nsw i32 %203, 1, !dbg !8000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7945
  %205 = icmp eq i32 %204, %0, !dbg !7946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7945
  br i1 %205, label %206, label %137, !dbg !7945, !llvm.loop !7962

; <label>:206:                                    ; preds = %200, %154, %133
  %207 = phi i8* [ %77, %133 ], [ %139, %154 ], [ %202, %200 ]
  %208 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !8001, !tbaa !1803
  %209 = icmp ne i32 %208, 0, !dbg !8003
  %210 = icmp ne i8* %134, null, !dbg !8004
  %211 = and i1 %210, %209, !dbg !8005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8005
  br i1 %211, label %212, label %216, !dbg !8005

; <label>:212:                                    ; preds = %206
  %213 = load i8, i8* %134, align 1, !dbg !8006, !tbaa !1382
  %214 = icmp eq i8 %213, 45, !dbg !8007
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8008
  br i1 %214, label %215, label %216, !dbg !8008

; <label>:215:                                    ; preds = %212
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.477, i64 0, i64 0)) #10, !dbg !8009
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.478, i64 0, i64 0)) #10, !dbg !8011
  call void @exit(i32 1) #12, !dbg !8012
  unreachable

; <label>:216:                                    ; preds = %212, %206
  call void @resetServerSaveParams() #9, !dbg !8013
  call void @loadServerConfig(i8* %134, i8* %207) #9, !dbg !8014
  call void @sdsfree(i8* %207) #9, !dbg !8015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8016
  br label %217, !dbg !8016

; <label>:217:                                    ; preds = %216, %74
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.479, i64 0, i64 0)) #10, !dbg !8017
  %218 = call i8* @redisGitSHA1() #9, !dbg !8018
  %219 = call i8* @redisGitDirty() #9, !dbg !8019
  %220 = call i64 @strtol(i8* %219, i8** null, i32 10) #9, !dbg !8020
  %221 = icmp sgt i64 %220, 0, !dbg !8021
  %222 = zext i1 %221 to i32, !dbg !8021
  %223 = call i32 @getpid() #9, !dbg !8022
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.480, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.390, i64 0, i64 0), i32 64, i8* %218, i32 %222, i32 %223) #10, !dbg !8023
  %224 = icmp eq i32 %0, 1, !dbg !8024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8026
  br i1 %224, label %225, label %230, !dbg !8026

; <label>:225:                                    ; preds = %217
  %226 = load i8*, i8** %1, align 8, !dbg !8027, !tbaa !1178
  %227 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !8029, !tbaa !1803
  %228 = icmp eq i32 %227, 0, !dbg !8030
  %229 = select i1 %228, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.310, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.387, i64 0, i64 0), !dbg !8030
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.481, i64 0, i64 0), i8* %226, i8* %229) #10, !dbg !8031
  br label %231, !dbg !8032

; <label>:230:                                    ; preds = %217
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.482, i64 0, i64 0)) #10, !dbg !8033
  br label %231

; <label>:231:                                    ; preds = %230, %225
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %232 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 114), align 8, !dbg !8035, !tbaa !3880
  %233 = call i32 @redisIsSupervised(i32 %232) #10, !dbg !8036
  store i32 %233, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 113), align 4, !dbg !8037, !tbaa !3878
  %234 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 115), align 4, !dbg !8038, !tbaa !3876
  %235 = icmp eq i32 %234, 0, !dbg !8039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8040
  br i1 %235, label %239, label %236, !dbg !8040

; <label>:236:                                    ; preds = %231
  %237 = icmp eq i32 %233, 0, !dbg !8041
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8042
  br i1 %237, label %238, label %241, !dbg !8042

; <label>:238:                                    ; preds = %236
  call void @daemonize() #10, !dbg !8043
  br label %239, !dbg !8043

; <label>:239:                                    ; preds = %231, %238
  %240 = phi i1 [ true, %238 ], [ false, %231 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8045
  br label %241, !dbg !8046

; <label>:241:                                    ; preds = %239, %236
  %242 = phi i1 [ false, %236 ], [ %240, %239 ]
  call void @initServer() #10, !dbg !8046
  %243 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !8047
  %244 = icmp ne i8* %243, null, !dbg !8049
  %245 = or i1 %242, %244, !dbg !8050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8050
  br i1 %245, label %246, label %259, !dbg !8050

; <label>:246:                                    ; preds = %241
  %247 = icmp eq i8* %243, null, !dbg !8051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8053
  br i1 %247, label %248, label %250, !dbg !8053

; <label>:248:                                    ; preds = %246
  %249 = call i8* @zstrdup(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.430, i64 0, i64 0)) #9, !dbg !8054
  store i8* %249, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 16), align 8, !dbg !8055, !tbaa !3913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8056
  br label %250, !dbg !8056

; <label>:250:                                    ; preds = %248, %246
  %251 = phi i8* [ %243, %246 ], [ %249, %248 ], !dbg !8057
  %252 = call %struct.__sFILE* @fopen(i8* %251, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !8058
  %253 = icmp eq %struct.__sFILE* %252, null, !dbg !8060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8061
  br i1 %253, label %258, label %254, !dbg !8061

; <label>:254:                                    ; preds = %250
  %255 = call i32 @getpid() #9, !dbg !8062
  %256 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE* nonnull %252, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.431, i64 0, i64 0), i32 %255) #9, !dbg !8063
  %257 = call i32 @fclose(%struct.__sFILE* nonnull %252) #9, !dbg !8064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8065
  br label %258, !dbg !8065

; <label>:258:                                    ; preds = %250, %254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8067
  br label %259, !dbg !8067

; <label>:259:                                    ; preds = %241, %258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8070
  call void @redisAsciiArt() #10, !dbg !8071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8072
  %260 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 20), align 4, !dbg !8074, !tbaa !1803
  %261 = icmp eq i32 %260, 0, !dbg !8076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8077
  br i1 %261, label %262, label %278, !dbg !8077

; <label>:262:                                    ; preds = %259
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.483, i64 0, i64 0)) #10, !dbg !8078
  call void @moduleLoadFromQueue() #9, !dbg !8080
  call void @loadDataFromDisk() #10, !dbg !8081
  %263 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !8082, !tbaa !2593
  %264 = icmp eq i32 %263, 0, !dbg !8084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8085
  br i1 %264, label %269, label %265, !dbg !8085

; <label>:265:                                    ; preds = %262
  %266 = call i32 @verifyClusterConfigWithData() #9, !dbg !8086
  %267 = icmp eq i32 %266, -1, !dbg !8089
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8090
  br i1 %267, label %268, label %269, !dbg !8090

; <label>:268:                                    ; preds = %265
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.484, i64 0, i64 0)) #10, !dbg !8091
  call void @exit(i32 1) #12, !dbg !8093
  unreachable

; <label>:269:                                    ; preds = %262, %265
  %270 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 34), align 4, !dbg !8094, !tbaa !3850
  %271 = icmp sgt i32 %270, 0, !dbg !8096
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8097
  br i1 %271, label %272, label %273, !dbg !8097

; <label>:272:                                    ; preds = %269
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.485, i64 0, i64 0)) #10, !dbg !8098
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8098
  br label %273, !dbg !8098

; <label>:273:                                    ; preds = %272, %269
  %274 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 35), align 8, !dbg !8099, !tbaa !3852
  %275 = icmp sgt i32 %274, 0, !dbg !8101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8102
  br i1 %275, label %276, label %280, !dbg !8102

; <label>:276:                                    ; preds = %273
  %277 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 31), align 8, !dbg !8103, !tbaa !3846
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.486, i64 0, i64 0), i8* %277) #10, !dbg !8104
  br label %279, !dbg !8104

; <label>:278:                                    ; preds = %259
  call void @sentinelIsRunning() #9, !dbg !8105
  br label %279

; <label>:279:                                    ; preds = %278, %276
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %280, !dbg !8107

; <label>:280:                                    ; preds = %279, %273
  %281 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !8107, !tbaa !3937
  %282 = add i64 %281, -1, !dbg !8109
  %283 = icmp ult i64 %282, 1048575, !dbg !8109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8109
  br i1 %283, label %284, label %285, !dbg !8109

; <label>:284:                                    ; preds = %280
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.487, i64 0, i64 0), i64 %281) #10, !dbg !8110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8112
  br label %285, !dbg !8112

; <label>:285:                                    ; preds = %284, %280
  %286 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8113, !tbaa !4739
  call void @aeSetBeforeSleepProc(%struct.aeEventLoop* %286, void (%struct.aeEventLoop*)* nonnull @beforeSleep) #9, !dbg !8114
  %287 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8115, !tbaa !4739
  call void @aeSetAfterSleepProc(%struct.aeEventLoop* %287, void (%struct.aeEventLoop*)* nonnull @afterSleep) #9, !dbg !8116
  %288 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8117, !tbaa !4739
  call void @aeMain(%struct.aeEventLoop* %288) #9, !dbg !8118
  %289 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8119, !tbaa !4739
  call void @aeDeleteEventLoop(%struct.aeEventLoop* %289) #9, !dbg !8120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #4, !dbg !8121
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8122
  ret i32 0, !dbg !8122
}

; Function Attrs: noredzone
declare dso_local i8* @setlocale(i32, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @tzset() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @zmalloc_set_oom_handler(void (i64)*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @srand(i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @dictSetHashFunctionSeed(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @moduleInitModulesSystem() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @getAbsolutePath(i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @initSentinelConfig() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @initSentinel() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @redis_check_rdb_main(i32, i8**, %struct.__sFILE*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @redis_check_aof_main(i32, i8**) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @memtest(i64, i32) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i8* @sdscatrepr(i8*, i8*, i64) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @loadServerConfig(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @moduleLoadFromQueue() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @verifyClusterConfigWithData() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @sentinelIsRunning() local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @aeSetBeforeSleepProc(%struct.aeEventLoop*, void (%struct.aeEventLoop*)*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @aeSetAfterSleepProc(%struct.aeEventLoop*, void (%struct.aeEventLoop*)*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @aeMain(%struct.aeEventLoop*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local void @aeDeleteEventLoop(%struct.aeEventLoop*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @gettimeofday(%struct.timeval*, i8*) local_unnamed_addr #0

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #0

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { noredzone noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin noredzone nounwind }
attributes #10 = { nobuiltin noredzone }
attributes #11 = { nobuiltin noredzone nounwind readonly }
attributes #12 = { nobuiltin noredzone noreturn nounwind }

!llvm.module.flags = !{!1144, !1145, !1146}
!llvm.ident = !{!1147}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "redisCommandTable", scope: !2, file: !3, line: 147, type: !1140, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !315)
!3 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{}
!5 = !{!6, !7, !8, !9, !38, !42, !40, !44, !55, !56, !57, !60, !265, !37, !137, !267, !74, !268, !271, !277, !279, !289, !299, !308, !259}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !11, line: 54, baseType: !12)
!11 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!12 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !11, line: 47, size: 384, elements: !13)
!13 = !{!14, !23, !24, !28, !32, !36}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12, file: !11, line: 48, baseType: !15, size: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !11, line: 40, baseType: !17)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !11, line: 36, size: 192, elements: !18)
!18 = !{!19, !21, !22}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !17, file: !11, line: 37, baseType: !20, size: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !17, file: !11, line: 38, baseType: !20, size: 64, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !17, file: !11, line: 39, baseType: !6, size: 64, offset: 128)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12, file: !11, line: 49, baseType: !15, size: 64, offset: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !12, file: !11, line: 50, baseType: !25, size: 64, offset: 128)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DISubroutineType(types: !27)
!27 = !{!6, !6}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !12, file: !11, line: 51, baseType: !29, size: 64, offset: 192)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!30 = !DISubroutineType(types: !31)
!31 = !{null, !6}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !12, file: !11, line: 52, baseType: !33, size: 64, offset: 256)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!34 = !DISubroutineType(types: !35)
!35 = !{!7, !6, !6}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !12, file: !11, line: 53, baseType: !37, size: 64, offset: 320)
!37 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !39, line: 43, baseType: !40)
!39 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!41 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !46, line: 622, baseType: !47)
!46 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!47 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !46, line: 614, size: 128, elements: !48)
!48 = !{!49, !51, !52, !53, !54}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !47, file: !46, line: 615, baseType: !50, size: 4, flags: DIFlagBitField, extraData: i64 0)
!50 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !47, file: !46, line: 616, baseType: !50, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !47, file: !46, line: 617, baseType: !50, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !47, file: !46, line: 620, baseType: !7, size: 32, offset: 32)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !47, file: !46, line: 621, baseType: !6, size: 64, offset: 64)
!55 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!56 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = !DISubroutineType(types: !59)
!59 = !{null, !7}
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !46, line: 1307, size: 640, elements: !62)
!62 = !{!63, !64, !251, !252, !253, !254, !260, !261, !262, !263, !264}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !61, file: !46, line: 1308, baseType: !40, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !61, file: !46, line: 1309, baseType: !65, size: 64, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !46, line: 1305, baseType: !67)
!67 = !DISubroutineType(types: !68)
!68 = !{null, !69}
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !46, line: 780, baseType: !71)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !46, line: 723, size: 135360, elements: !72)
!72 = !{!73, !78, !79, !154, !155, !156, !161, !162, !163, !164, !166, !167, !168, !169, !170, !171, !172, !173, !174, !177, !178, !179, !180, !181, !182, !183, !184, !189, !190, !191, !192, !193, !194, !195, !196, !200, !201, !205, !206, !222, !223, !240, !241, !242, !243, !244, !245, !246, !247}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !71, file: !46, line: 724, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !75, line: 60, baseType: !76)
!75 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !77, line: 105, baseType: !37)
!77 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!78 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !71, file: !46, line: 725, baseType: !7, size: 32, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !71, file: !46, line: 726, baseType: !80, size: 64, offset: 128)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !46, line: 656, baseType: !82)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !46, line: 647, size: 512, elements: !83)
!83 = !{!84, !147, !148, !149, !150, !151, !152, !153}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !82, file: !46, line: 648, baseType: !85, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !87, line: 82, baseType: !88)
!87 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !87, line: 76, size: 768, elements: !89)
!89 = !{!90, !115, !116, !145, !146}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !88, file: !87, line: 77, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !87, line: 65, baseType: !93)
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !87, line: 58, size: 384, elements: !94)
!94 = !{!95, !101, !105, !106, !110, !114}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !93, file: !87, line: 59, baseType: !96, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DISubroutineType(types: !98)
!98 = !{!74, !99}
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !93, file: !87, line: 60, baseType: !102, size: 64, offset: 64)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DISubroutineType(types: !104)
!104 = !{!6, !6, !99}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !93, file: !87, line: 61, baseType: !102, size: 64, offset: 128)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !93, file: !87, line: 62, baseType: !107, size: 64, offset: 192)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DISubroutineType(types: !109)
!109 = !{!7, !6, !99, !99}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !93, file: !87, line: 63, baseType: !111, size: 64, offset: 256)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!112 = !DISubroutineType(types: !113)
!113 = !{null, !6, !6}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !93, file: !87, line: 64, baseType: !111, size: 64, offset: 320)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !88, file: !87, line: 78, baseType: !6, size: 64, offset: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !88, file: !87, line: 79, baseType: !117, size: 512, offset: 128)
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 512, elements: !143)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !87, line: 74, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !87, line: 69, size: 256, elements: !120)
!120 = !{!121, !140, !141, !142}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !119, file: !87, line: 70, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !87, line: 56, baseType: !125)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !87, line: 47, size: 192, elements: !126)
!126 = !{!127, !128, !138}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !125, file: !87, line: 48, baseType: !6, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !125, file: !87, line: 54, baseType: !129, size: 64, offset: 64)
!129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !87, line: 49, size: 64, elements: !130)
!130 = !{!131, !132, !133, !136}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !129, file: !87, line: 50, baseType: !6, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !129, file: !87, line: 51, baseType: !74, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !129, file: !87, line: 52, baseType: !134, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !75, line: 56, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !77, line: 103, baseType: !55)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !129, file: !87, line: 53, baseType: !137, size: 64)
!137 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !125, file: !87, line: 55, baseType: !139, size: 64, offset: 128)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !119, file: !87, line: 71, baseType: !37, size: 64, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !119, file: !87, line: 72, baseType: !37, size: 64, offset: 128)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !119, file: !87, line: 73, baseType: !37, size: 64, offset: 192)
!143 = !{!144}
!144 = !DISubrange(count: 2)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !88, file: !87, line: 80, baseType: !55, size: 64, offset: 640)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !88, file: !87, line: 81, baseType: !37, size: 64, offset: 704)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !82, file: !46, line: 649, baseType: !85, size: 64, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !82, file: !46, line: 650, baseType: !85, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !82, file: !46, line: 651, baseType: !85, size: 64, offset: 192)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !82, file: !46, line: 652, baseType: !85, size: 64, offset: 256)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !82, file: !46, line: 653, baseType: !7, size: 32, offset: 320)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !82, file: !46, line: 654, baseType: !8, size: 64, offset: 384)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !82, file: !46, line: 655, baseType: !9, size: 64, offset: 448)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !71, file: !46, line: 727, baseType: !44, size: 64, offset: 192)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !71, file: !46, line: 728, baseType: !38, size: 64, offset: 256)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !71, file: !46, line: 729, baseType: !157, size: 64, offset: 320)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !158, line: 40, baseType: !159)
!158 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !160, line: 129, baseType: !37)
!160 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!161 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !71, file: !46, line: 730, baseType: !38, size: 64, offset: 384)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !71, file: !46, line: 734, baseType: !157, size: 64, offset: 448)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !71, file: !46, line: 735, baseType: !7, size: 32, offset: 512)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !71, file: !46, line: 736, baseType: !165, size: 64, offset: 576)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !71, file: !46, line: 737, baseType: !60, size: 64, offset: 640)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !71, file: !46, line: 737, baseType: !60, size: 64, offset: 704)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !71, file: !46, line: 738, baseType: !7, size: 32, offset: 768)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !71, file: !46, line: 739, baseType: !7, size: 32, offset: 800)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !71, file: !46, line: 740, baseType: !55, size: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !71, file: !46, line: 741, baseType: !9, size: 64, offset: 896)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !71, file: !46, line: 742, baseType: !56, size: 64, offset: 960)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !71, file: !46, line: 743, baseType: !157, size: 64, offset: 1024)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !71, file: !46, line: 745, baseType: !175, size: 64, offset: 1088)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !176, line: 34, baseType: !55)
!176 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!177 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !71, file: !46, line: 746, baseType: !175, size: 64, offset: 1152)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !71, file: !46, line: 747, baseType: !175, size: 64, offset: 1216)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !71, file: !46, line: 748, baseType: !7, size: 32, offset: 1280)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !71, file: !46, line: 749, baseType: !7, size: 32, offset: 1312)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !71, file: !46, line: 750, baseType: !7, size: 32, offset: 1344)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !71, file: !46, line: 751, baseType: !7, size: 32, offset: 1376)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !71, file: !46, line: 752, baseType: !7, size: 32, offset: 1408)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !71, file: !46, line: 753, baseType: !185, size: 64, offset: 1472)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !186, line: 173, baseType: !187)
!186 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !160, line: 100, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !160, line: 44, baseType: !55)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !71, file: !46, line: 754, baseType: !185, size: 64, offset: 1536)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !71, file: !46, line: 755, baseType: !38, size: 64, offset: 1600)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !71, file: !46, line: 756, baseType: !8, size: 64, offset: 1664)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !71, file: !46, line: 757, baseType: !8, size: 64, offset: 1728)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !71, file: !46, line: 758, baseType: !8, size: 64, offset: 1792)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !71, file: !46, line: 759, baseType: !8, size: 64, offset: 1856)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !71, file: !46, line: 760, baseType: !8, size: 64, offset: 1920)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !71, file: !46, line: 763, baseType: !197, size: 328, offset: 1984)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 328, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 41)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !71, file: !46, line: 764, baseType: !7, size: 32, offset: 2336)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !71, file: !46, line: 765, baseType: !202, size: 368, offset: 2368)
!202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 368, elements: !203)
!203 = !{!204}
!204 = !DISubrange(count: 46)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !71, file: !46, line: 766, baseType: !7, size: 32, offset: 2752)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !71, file: !46, line: 767, baseType: !207, size: 256, offset: 2816)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !46, line: 673, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !46, line: 665, size: 256, elements: !209)
!209 = !{!210, !218, !219, !220, !221}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !208, file: !46, line: 666, baseType: !211, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !46, line: 663, baseType: !213)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !46, line: 659, size: 192, elements: !214)
!214 = !{!215, !216, !217}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !213, file: !46, line: 660, baseType: !165, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !213, file: !46, line: 661, baseType: !7, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !213, file: !46, line: 662, baseType: !60, size: 64, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !208, file: !46, line: 667, baseType: !7, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !208, file: !46, line: 668, baseType: !7, size: 32, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !208, file: !46, line: 671, baseType: !7, size: 32, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !208, file: !46, line: 672, baseType: !175, size: 64, offset: 192)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !71, file: !46, line: 768, baseType: !7, size: 32, offset: 3072)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !71, file: !46, line: 769, baseType: !224, size: 704, offset: 3136)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !46, line: 703, baseType: !225)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !46, line: 677, size: 704, elements: !226)
!226 = !{!227, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !225, file: !46, line: 679, baseType: !228, size: 64)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !46, line: 52, baseType: !8)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !225, file: !46, line: 683, baseType: !85, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !225, file: !46, line: 685, baseType: !44, size: 64, offset: 128)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !225, file: !46, line: 689, baseType: !157, size: 64, offset: 192)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !225, file: !46, line: 690, baseType: !44, size: 64, offset: 256)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !225, file: !46, line: 691, baseType: !44, size: 64, offset: 320)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !225, file: !46, line: 692, baseType: !228, size: 64, offset: 384)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !225, file: !46, line: 692, baseType: !228, size: 64, offset: 448)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !225, file: !46, line: 693, baseType: !7, size: 32, offset: 512)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !225, file: !46, line: 696, baseType: !7, size: 32, offset: 544)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !225, file: !46, line: 697, baseType: !8, size: 64, offset: 576)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !225, file: !46, line: 700, baseType: !6, size: 64, offset: 640)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !71, file: !46, line: 770, baseType: !8, size: 64, offset: 3840)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !71, file: !46, line: 771, baseType: !9, size: 64, offset: 3904)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !71, file: !46, line: 772, baseType: !85, size: 64, offset: 3968)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !71, file: !46, line: 773, baseType: !9, size: 64, offset: 4032)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !71, file: !46, line: 774, baseType: !38, size: 64, offset: 4096)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !71, file: !46, line: 775, baseType: !15, size: 64, offset: 4160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !71, file: !46, line: 778, baseType: !7, size: 32, offset: 4224)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !71, file: !46, line: 779, baseType: !248, size: 131072, offset: 4256)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 131072, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 16384)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !61, file: !46, line: 1310, baseType: !7, size: 32, offset: 128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !61, file: !46, line: 1311, baseType: !40, size: 64, offset: 192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !61, file: !46, line: 1312, baseType: !7, size: 32, offset: 256)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !61, file: !46, line: 1315, baseType: !255, size: 64, offset: 320)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !46, line: 1306, baseType: !257)
!257 = !DISubroutineType(types: !258)
!258 = !{!259, !60, !165, !7, !259}
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !61, file: !46, line: 1317, baseType: !7, size: 32, offset: 384)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !61, file: !46, line: 1318, baseType: !7, size: 32, offset: 416)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !61, file: !46, line: 1319, baseType: !7, size: 32, offset: 448)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !61, file: !46, line: 1320, baseType: !8, size: 64, offset: 512)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !61, file: !46, line: 1320, baseType: !8, size: 64, offset: 576)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !75, line: 67, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !77, line: 214, baseType: !55)
!267 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !75, line: 24, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !77, line: 43, baseType: !43)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !176, line: 44, size: 128, elements: !273)
!273 = !{!274, !275}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !272, file: !176, line: 45, baseType: !175, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !272, file: !176, line: 46, baseType: !276, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "suseconds_t", file: !176, line: 39, baseType: !55)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !75, line: 82, baseType: !278)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !77, line: 232, baseType: !37)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !39, line: 51, size: 24, elements: !281)
!281 = !{!282, !283, !284, !285}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !280, file: !39, line: 52, baseType: !269, size: 8)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !280, file: !39, line: 53, baseType: !269, size: 8, offset: 8)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !280, file: !39, line: 54, baseType: !43, size: 8, offset: 16)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !280, file: !39, line: 55, baseType: !286, offset: 24)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, elements: !287)
!287 = !{!288}
!288 = !DISubrange(count: -1)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !39, line: 57, size: 40, elements: !291)
!291 = !{!292, !296, !297, !298}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !290, file: !39, line: 58, baseType: !293, size: 16)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !75, line: 36, baseType: !294)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !77, line: 57, baseType: !295)
!295 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !290, file: !39, line: 59, baseType: !293, size: 16, offset: 16)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !290, file: !39, line: 60, baseType: !43, size: 8, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !290, file: !39, line: 61, baseType: !286, offset: 40)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !39, line: 63, size: 72, elements: !301)
!301 = !{!302, !305, !306, !307}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !300, file: !39, line: 64, baseType: !303, size: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !75, line: 48, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !77, line: 79, baseType: !50)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !300, file: !39, line: 65, baseType: !303, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !300, file: !39, line: 66, baseType: !43, size: 8, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !300, file: !39, line: 67, baseType: !286, offset: 72)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !39, line: 69, size: 136, elements: !310)
!310 = !{!311, !312, !313, !314}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !309, file: !39, line: 70, baseType: !74, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !309, file: !39, line: 71, baseType: !74, size: 64, offset: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !309, file: !39, line: 72, baseType: !43, size: 8, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !309, file: !39, line: 73, baseType: !286, offset: 136)
!315 = !{!0, !316, !318, !320, !322, !324, !326, !328, !330, !332, !334, !336, !338, !340, !342, !344, !346, !362, !364, !517, !531, !596, !598, !600, !602, !604, !1130, !1133, !1138}
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "objectKeyPointerValueDictType", scope: !2, file: !3, line: 591, type: !92, isLocal: false, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "objectKeyHeapPointerValueDictType", scope: !2, file: !3, line: 602, type: !92, isLocal: false, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "setDictType", scope: !2, file: !3, line: 612, type: !92, isLocal: false, isDefinition: true)
!322 = !DIGlobalVariableExpression(var: !323, expr: !DIExpression())
!323 = distinct !DIGlobalVariable(name: "zsetDictType", scope: !2, file: !3, line: 622, type: !92, isLocal: false, isDefinition: true)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "dbDictType", scope: !2, file: !3, line: 632, type: !92, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "shaScriptObjectDictType", scope: !2, file: !3, line: 642, type: !92, isLocal: false, isDefinition: true)
!328 = !DIGlobalVariableExpression(var: !329, expr: !DIExpression())
!329 = distinct !DIGlobalVariable(name: "keyptrDictType", scope: !2, file: !3, line: 652, type: !92, isLocal: false, isDefinition: true)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "commandTableDictType", scope: !2, file: !3, line: 662, type: !92, isLocal: false, isDefinition: true)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "hashDictType", scope: !2, file: !3, line: 672, type: !92, isLocal: false, isDefinition: true)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "keylistDictType", scope: !2, file: !3, line: 684, type: !92, isLocal: false, isDefinition: true)
!336 = !DIGlobalVariableExpression(var: !337, expr: !DIExpression())
!337 = distinct !DIGlobalVariable(name: "clusterNodesDictType", scope: !2, file: !3, line: 695, type: !92, isLocal: false, isDefinition: true)
!338 = !DIGlobalVariableExpression(var: !339, expr: !DIExpression())
!339 = distinct !DIGlobalVariable(name: "clusterNodesBlackListDictType", scope: !2, file: !3, line: 707, type: !92, isLocal: false, isDefinition: true)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "modulesDictType", scope: !2, file: !3, line: 719, type: !92, isLocal: false, isDefinition: true)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "migrateCacheDictType", scope: !2, file: !3, line: 729, type: !92, isLocal: false, isDefinition: true)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "replScriptCacheDictType", scope: !2, file: !3, line: 741, type: !92, isLocal: false, isDefinition: true)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "resize_db", scope: !348, file: !3, line: 1042, type: !50, isLocal: true, isDefinition: true)
!348 = distinct !DISubprogram(name: "databasesCron", scope: !3, file: !3, line: 1020, type: !349, isLocal: false, isDefinition: true, scopeLine: 1020, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !351)
!349 = !DISubroutineType(types: !350)
!350 = !{null}
!351 = !{!352, !355, !356}
!352 = !DILocalVariable(name: "dbs_per_call", scope: !353, file: !3, line: 1044, type: !7)
!353 = distinct !DILexicalBlock(scope: !354, file: !3, line: 1038, column: 67)
!354 = distinct !DILexicalBlock(scope: !348, file: !3, line: 1038, column: 9)
!355 = !DILocalVariable(name: "j", scope: !353, file: !3, line: 1045, type: !7)
!356 = !DILocalVariable(name: "work_done", scope: !357, file: !3, line: 1059, type: !7)
!357 = distinct !DILexicalBlock(scope: !358, file: !3, line: 1058, column: 48)
!358 = distinct !DILexicalBlock(scope: !359, file: !3, line: 1058, column: 13)
!359 = distinct !DILexicalBlock(scope: !360, file: !3, line: 1058, column: 13)
!360 = distinct !DILexicalBlock(scope: !361, file: !3, line: 1057, column: 37)
!361 = distinct !DILexicalBlock(scope: !353, file: !3, line: 1057, column: 13)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "rehash_db", scope: !348, file: !3, line: 1043, type: !50, isLocal: true, isDefinition: true)
!364 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression())
!365 = distinct !DIGlobalVariable(name: "call_uname", scope: !366, file: !3, line: 3128, type: !7, isLocal: true, isDefinition: true)
!366 = distinct !DISubprogram(name: "genRedisInfoString", scope: !3, file: !3, line: 3111, type: !367, isLocal: false, isDefinition: true, scopeLine: 3111, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !369)
!367 = !DISubroutineType(types: !368)
!368 = !{!38, !40}
!369 = !{!370, !371, !372, !373, !374, !398, !399, !400, !401, !402, !405, !406, !409, !410, !416, !417, !418, !419, !420, !421, !422, !423, !424, !427, !428, !464, !469, !470, !471, !472, !477, !480, !481, !487, !489, !490, !491, !492, !493, !494, !497, !498, !510, !516}
!370 = !DILocalVariable(name: "section", arg: 1, scope: !366, file: !3, line: 3111, type: !40)
!371 = !DILocalVariable(name: "info", scope: !366, file: !3, line: 3112, type: !38)
!372 = !DILocalVariable(name: "uptime", scope: !366, file: !3, line: 3113, type: !175)
!373 = !DILocalVariable(name: "j", scope: !366, file: !3, line: 3114, type: !7)
!374 = !DILocalVariable(name: "self_ru", scope: !366, file: !3, line: 3115, type: !375)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rusage", file: !376, line: 26, size: 2176, elements: !377)
!376 = !DIFile(filename: "/root/.unikraft/unikraft/lib/posix-process/musl-imported/include/sys/resource.h", directory: "/root/.unikraft/apps/redis/build")
!377 = !{!378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "ru_utime", scope: !375, file: !376, line: 27, baseType: !272, size: 128)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ru_stime", scope: !375, file: !376, line: 28, baseType: !272, size: 128, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "ru_maxrss", scope: !375, file: !376, line: 30, baseType: !55, size: 64, offset: 256)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ru_ixrss", scope: !375, file: !376, line: 31, baseType: !55, size: 64, offset: 320)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ru_idrss", scope: !375, file: !376, line: 32, baseType: !55, size: 64, offset: 384)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ru_isrss", scope: !375, file: !376, line: 33, baseType: !55, size: 64, offset: 448)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "ru_minflt", scope: !375, file: !376, line: 34, baseType: !55, size: 64, offset: 512)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "ru_majflt", scope: !375, file: !376, line: 35, baseType: !55, size: 64, offset: 576)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nswap", scope: !375, file: !376, line: 36, baseType: !55, size: 64, offset: 640)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "ru_inblock", scope: !375, file: !376, line: 37, baseType: !55, size: 64, offset: 704)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "ru_oublock", scope: !375, file: !376, line: 38, baseType: !55, size: 64, offset: 768)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgsnd", scope: !375, file: !376, line: 39, baseType: !55, size: 64, offset: 832)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgrcv", scope: !375, file: !376, line: 40, baseType: !55, size: 64, offset: 896)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nsignals", scope: !375, file: !376, line: 41, baseType: !55, size: 64, offset: 960)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nvcsw", scope: !375, file: !376, line: 42, baseType: !55, size: 64, offset: 1024)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nivcsw", scope: !375, file: !376, line: 43, baseType: !55, size: 64, offset: 1088)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved", scope: !375, file: !376, line: 45, baseType: !395, size: 1024, offset: 1152)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 1024, elements: !396)
!396 = !{!397}
!397 = !DISubrange(count: 16)
!398 = !DILocalVariable(name: "c_ru", scope: !366, file: !3, line: 3115, type: !375)
!399 = !DILocalVariable(name: "allsections", scope: !366, file: !3, line: 3116, type: !7)
!400 = !DILocalVariable(name: "defsections", scope: !366, file: !3, line: 3116, type: !7)
!401 = !DILocalVariable(name: "sections", scope: !366, file: !3, line: 3117, type: !7)
!402 = !DILocalVariable(name: "mode", scope: !403, file: !3, line: 3130, type: !40)
!403 = distinct !DILexicalBlock(scope: !404, file: !3, line: 3127, column: 70)
!404 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3127, column: 9)
!405 = !DILocalVariable(name: "lruclock", scope: !403, file: !3, line: 3144, type: !50)
!406 = !DILocalVariable(name: "maxin", scope: !407, file: !3, line: 3196, type: !157)
!407 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3195, column: 71)
!408 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3195, column: 9)
!409 = !DILocalVariable(name: "maxout", scope: !407, file: !3, line: 3196, type: !157)
!410 = !DILocalVariable(name: "hmem", scope: !411, file: !3, line: 3212, type: !413)
!411 = distinct !DILexicalBlock(scope: !412, file: !3, line: 3211, column: 70)
!412 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3211, column: 9)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 512, elements: !414)
!414 = !{!415}
!415 = !DISubrange(count: 64)
!416 = !DILocalVariable(name: "peak_hmem", scope: !411, file: !3, line: 3213, type: !413)
!417 = !DILocalVariable(name: "total_system_hmem", scope: !411, file: !3, line: 3214, type: !413)
!418 = !DILocalVariable(name: "used_memory_lua_hmem", scope: !411, file: !3, line: 3215, type: !413)
!419 = !DILocalVariable(name: "used_memory_scripts_hmem", scope: !411, file: !3, line: 3216, type: !413)
!420 = !DILocalVariable(name: "used_memory_rss_hmem", scope: !411, file: !3, line: 3217, type: !413)
!421 = !DILocalVariable(name: "maxmemory_hmem", scope: !411, file: !3, line: 3218, type: !413)
!422 = !DILocalVariable(name: "zmalloc_used", scope: !411, file: !3, line: 3219, type: !157)
!423 = !DILocalVariable(name: "total_system_mem", scope: !411, file: !3, line: 3220, type: !157)
!424 = !DILocalVariable(name: "evict_policy", scope: !411, file: !3, line: 3221, type: !425)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !41)
!427 = !DILocalVariable(name: "memory_lua", scope: !411, file: !3, line: 3222, type: !8)
!428 = !DILocalVariable(name: "mh", scope: !411, file: !3, line: 3223, type: !429)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisMemOverhead", file: !46, line: 865, size: 1472, elements: !431)
!431 = !{!432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !450, !451, !452, !453, !454, !455, !456, !457}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "peak_allocated", scope: !430, file: !46, line: 866, baseType: !157, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocated", scope: !430, file: !46, line: 867, baseType: !157, size: 64, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "startup_allocated", scope: !430, file: !46, line: 868, baseType: !157, size: 64, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog", scope: !430, file: !46, line: 869, baseType: !157, size: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "clients_slaves", scope: !430, file: !46, line: 870, baseType: !157, size: 64, offset: 256)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "clients_normal", scope: !430, file: !46, line: 871, baseType: !157, size: 64, offset: 320)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "aof_buffer", scope: !430, file: !46, line: 872, baseType: !157, size: 64, offset: 384)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "lua_caches", scope: !430, file: !46, line: 873, baseType: !157, size: 64, offset: 448)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "overhead_total", scope: !430, file: !46, line: 874, baseType: !157, size: 64, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !430, file: !46, line: 875, baseType: !157, size: 64, offset: 576)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "total_keys", scope: !430, file: !46, line: 876, baseType: !157, size: 64, offset: 640)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_per_key", scope: !430, file: !46, line: 877, baseType: !157, size: 64, offset: 704)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "dataset_perc", scope: !430, file: !46, line: 878, baseType: !267, size: 32, offset: 768)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "peak_perc", scope: !430, file: !46, line: 879, baseType: !267, size: 32, offset: 800)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "total_frag", scope: !430, file: !46, line: 880, baseType: !267, size: 32, offset: 832)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "total_frag_bytes", scope: !430, file: !46, line: 881, baseType: !448, size: 64, offset: 896)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !186, line: 200, baseType: !449)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !160, line: 145, baseType: !55)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_frag", scope: !430, file: !46, line: 882, baseType: !267, size: 32, offset: 960)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_frag_bytes", scope: !430, file: !46, line: 883, baseType: !448, size: 64, offset: 1024)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_rss", scope: !430, file: !46, line: 884, baseType: !267, size: 32, offset: 1088)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_rss_bytes", scope: !430, file: !46, line: 885, baseType: !448, size: 64, offset: 1152)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "rss_extra", scope: !430, file: !46, line: 886, baseType: !267, size: 32, offset: 1216)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "rss_extra_bytes", scope: !430, file: !46, line: 887, baseType: !157, size: 64, offset: 1280)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "num_dbs", scope: !430, file: !46, line: 888, baseType: !157, size: 64, offset: 1344)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !430, file: !46, line: 893, baseType: !458, size: 64, offset: 1408)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !430, file: !46, line: 889, size: 192, elements: !460)
!460 = !{!461, !462, !463}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "dbid", scope: !459, file: !46, line: 890, baseType: !157, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "overhead_ht_main", scope: !459, file: !46, line: 891, baseType: !157, size: 64, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "overhead_ht_expires", scope: !459, file: !46, line: 892, baseType: !157, size: 64, offset: 128)
!464 = !DILocalVariable(name: "perc", scope: !465, file: !3, line: 3386, type: !137)
!465 = distinct !DILexicalBlock(scope: !466, file: !3, line: 3385, column: 29)
!466 = distinct !DILexicalBlock(scope: !467, file: !3, line: 3385, column: 13)
!467 = distinct !DILexicalBlock(scope: !468, file: !3, line: 3328, column: 75)
!468 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3328, column: 9)
!469 = !DILocalVariable(name: "eta", scope: !465, file: !3, line: 3387, type: !175)
!470 = !DILocalVariable(name: "elapsed", scope: !465, file: !3, line: 3387, type: !175)
!471 = !DILocalVariable(name: "remaining_bytes", scope: !465, file: !3, line: 3388, type: !185)
!472 = !DILocalVariable(name: "slave_repl_offset", scope: !473, file: !3, line: 3484, type: !8)
!473 = distinct !DILexicalBlock(scope: !474, file: !3, line: 3483, column: 32)
!474 = distinct !DILexicalBlock(scope: !475, file: !3, line: 3483, column: 13)
!475 = distinct !DILexicalBlock(scope: !476, file: !3, line: 3477, column: 75)
!476 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3477, column: 9)
!477 = !DILocalVariable(name: "slaveid", scope: !478, file: !3, line: 3544, type: !7)
!478 = distinct !DILexicalBlock(scope: !479, file: !3, line: 3543, column: 40)
!479 = distinct !DILexicalBlock(scope: !475, file: !3, line: 3543, column: 13)
!480 = !DILocalVariable(name: "ln", scope: !478, file: !3, line: 3545, type: !15)
!481 = !DILocalVariable(name: "li", scope: !478, file: !3, line: 3546, type: !482)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !11, line: 45, baseType: !483)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !11, line: 42, size: 128, elements: !484)
!484 = !{!485, !486}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !483, file: !11, line: 43, baseType: !15, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !483, file: !11, line: 44, baseType: !7, size: 32, offset: 64)
!487 = !DILocalVariable(name: "slave", scope: !488, file: !3, line: 3550, type: !69)
!488 = distinct !DILexicalBlock(scope: !478, file: !3, line: 3549, column: 41)
!489 = !DILocalVariable(name: "state", scope: !488, file: !3, line: 3551, type: !40)
!490 = !DILocalVariable(name: "ip", scope: !488, file: !3, line: 3552, type: !202)
!491 = !DILocalVariable(name: "slaveip", scope: !488, file: !3, line: 3552, type: !40)
!492 = !DILocalVariable(name: "port", scope: !488, file: !3, line: 3553, type: !7)
!493 = !DILocalVariable(name: "lag", scope: !488, file: !3, line: 3554, type: !55)
!494 = !DILocalVariable(name: "c", scope: !495, file: !3, line: 3624, type: !60)
!495 = distinct !DILexicalBlock(scope: !496, file: !3, line: 3620, column: 61)
!496 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3620, column: 9)
!497 = !DILocalVariable(name: "de", scope: !495, file: !3, line: 3625, type: !123)
!498 = !DILocalVariable(name: "di", scope: !495, file: !3, line: 3626, type: !499)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !87, line: 95, baseType: !501)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !87, line: 88, size: 384, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !501, file: !87, line: 89, baseType: !85, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !501, file: !87, line: 90, baseType: !55, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !501, file: !87, line: 91, baseType: !7, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !501, file: !87, line: 91, baseType: !7, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !501, file: !87, line: 92, baseType: !123, size: 64, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !501, file: !87, line: 92, baseType: !123, size: 64, offset: 256)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !501, file: !87, line: 94, baseType: !8, size: 64, offset: 320)
!510 = !DILocalVariable(name: "keys", scope: !511, file: !3, line: 3653, type: !8)
!511 = distinct !DILexicalBlock(scope: !512, file: !3, line: 3652, column: 44)
!512 = distinct !DILexicalBlock(scope: !513, file: !3, line: 3652, column: 9)
!513 = distinct !DILexicalBlock(scope: !514, file: !3, line: 3652, column: 9)
!514 = distinct !DILexicalBlock(scope: !515, file: !3, line: 3649, column: 72)
!515 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3649, column: 9)
!516 = !DILocalVariable(name: "vkeys", scope: !511, file: !3, line: 3653, type: !8)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "name", scope: !366, file: !3, line: 3129, type: !519, isLocal: true, isDefinition: true)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "utsname", file: !520, line: 43, size: 3120, elements: !521)
!520 = !DIFile(filename: "/root/.unikraft/unikraft/lib/posix-sysinfo/include/sys/utsname.h", directory: "/root/.unikraft/apps/redis/build")
!521 = !{!522, !526, !527, !528, !529, !530}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !519, file: !520, line: 44, baseType: !523, size: 520)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 520, elements: !524)
!524 = !{!525}
!525 = !DISubrange(count: 65)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !519, file: !520, line: 45, baseType: !523, size: 520, offset: 520)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !519, file: !520, line: 46, baseType: !523, size: 520, offset: 1040)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !519, file: !520, line: 47, baseType: !523, size: 520, offset: 1560)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !519, file: !520, line: 48, baseType: !523, size: 520, offset: 2080)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "domainname", scope: !519, file: !520, line: 49, baseType: !523, size: 520, offset: 2600)
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(name: "shared", scope: !2, file: !3, line: 81, type: !533, isLocal: false, isDefinition: true)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sharedObjectsStruct", file: !46, line: 793, size: 647808, elements: !534)
!534 = !{!535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !585, !589, !593, !594, !595}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "crlf", scope: !533, file: !46, line: 794, baseType: !44, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "err", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "emptybulk", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "czero", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 256)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "cone", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 320)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "cnegone", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 384)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "pong", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 448)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !533, file: !46, line: 794, baseType: !44, size: 64, offset: 512)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "colon", scope: !533, file: !46, line: 795, baseType: !44, size: 64, offset: 576)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "nullbulk", scope: !533, file: !46, line: 795, baseType: !44, size: 64, offset: 640)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "nullmultibulk", scope: !533, file: !46, line: 795, baseType: !44, size: 64, offset: 704)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !533, file: !46, line: 795, baseType: !44, size: 64, offset: 768)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "emptymultibulk", scope: !533, file: !46, line: 796, baseType: !44, size: 64, offset: 832)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "wrongtypeerr", scope: !533, file: !46, line: 796, baseType: !44, size: 64, offset: 896)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "nokeyerr", scope: !533, file: !46, line: 796, baseType: !44, size: 64, offset: 960)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "syntaxerr", scope: !533, file: !46, line: 796, baseType: !44, size: 64, offset: 1024)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "sameobjecterr", scope: !533, file: !46, line: 796, baseType: !44, size: 64, offset: 1088)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "outofrangeerr", scope: !533, file: !46, line: 797, baseType: !44, size: 64, offset: 1152)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "noscripterr", scope: !533, file: !46, line: 797, baseType: !44, size: 64, offset: 1216)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "loadingerr", scope: !533, file: !46, line: 797, baseType: !44, size: 64, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "slowscripterr", scope: !533, file: !46, line: 797, baseType: !44, size: 64, offset: 1344)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "bgsaveerr", scope: !533, file: !46, line: 797, baseType: !44, size: 64, offset: 1408)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "masterdownerr", scope: !533, file: !46, line: 798, baseType: !44, size: 64, offset: 1472)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "roslaveerr", scope: !533, file: !46, line: 798, baseType: !44, size: 64, offset: 1536)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "execaborterr", scope: !533, file: !46, line: 798, baseType: !44, size: 64, offset: 1600)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "noautherr", scope: !533, file: !46, line: 798, baseType: !44, size: 64, offset: 1664)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "noreplicaserr", scope: !533, file: !46, line: 798, baseType: !44, size: 64, offset: 1728)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "busykeyerr", scope: !533, file: !46, line: 799, baseType: !44, size: 64, offset: 1792)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "oomerr", scope: !533, file: !46, line: 799, baseType: !44, size: 64, offset: 1856)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "plus", scope: !533, file: !46, line: 799, baseType: !44, size: 64, offset: 1920)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "messagebulk", scope: !533, file: !46, line: 799, baseType: !44, size: 64, offset: 1984)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "pmessagebulk", scope: !533, file: !46, line: 799, baseType: !44, size: 64, offset: 2048)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "subscribebulk", scope: !533, file: !46, line: 799, baseType: !44, size: 64, offset: 2112)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "unsubscribebulk", scope: !533, file: !46, line: 800, baseType: !44, size: 64, offset: 2176)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "psubscribebulk", scope: !533, file: !46, line: 800, baseType: !44, size: 64, offset: 2240)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "punsubscribebulk", scope: !533, file: !46, line: 800, baseType: !44, size: 64, offset: 2304)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "del", scope: !533, file: !46, line: 800, baseType: !44, size: 64, offset: 2368)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !533, file: !46, line: 800, baseType: !44, size: 64, offset: 2432)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rpop", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2496)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "lpop", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2560)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "lpush", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2624)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rpoplpush", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2688)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "zpopmin", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2752)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "zpopmax", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2816)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "emptyscan", scope: !533, file: !46, line: 801, baseType: !44, size: 64, offset: 2880)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !533, file: !46, line: 802, baseType: !582, size: 640, offset: 2944)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 640, elements: !583)
!583 = !{!584}
!584 = !DISubrange(count: 10)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "integers", scope: !533, file: !46, line: 803, baseType: !586, size: 640000, offset: 3584)
!586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 640000, elements: !587)
!587 = !{!588}
!588 = !DISubrange(count: 10000)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "mbulkhdr", scope: !533, file: !46, line: 804, baseType: !590, size: 2048, offset: 643584)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 2048, elements: !591)
!591 = !{!592}
!592 = !DISubrange(count: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "bulkhdr", scope: !533, file: !46, line: 805, baseType: !590, size: 2048, offset: 645632)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "minstring", scope: !533, file: !46, line: 806, baseType: !38, size: 64, offset: 647680)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "maxstring", scope: !533, file: !46, line: 806, baseType: !38, size: 64, offset: 647744)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "R_Zero", scope: !2, file: !3, line: 87, type: !137, isLocal: false, isDefinition: true)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "R_PosInf", scope: !2, file: !3, line: 87, type: !137, isLocal: false, isDefinition: true)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "R_NegInf", scope: !2, file: !3, line: 87, type: !137, isLocal: false, isDefinition: true)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "R_Nan", scope: !2, file: !3, line: 87, type: !137, isLocal: false, isDefinition: true)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "server", scope: !2, file: !3, line: 92, type: !606, isLocal: false, isDefinition: true)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisServer", file: !46, line: 940, size: 25408, elements: !607)
!607 = !{!608, !611, !612, !613, !615, !616, !617, !618, !619, !620, !621, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !699, !700, !701, !703, !704, !705, !708, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !739, !740, !741, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !799, !800, !801, !802, !803, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !903, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1128, !1129}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !606, file: !46, line: 942, baseType: !609, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !610, line: 61, baseType: !7)
!610 = !DIFile(filename: "/root/.unikraft/libs/newlib/musl-imported/include/signal.h", directory: "/root/.unikraft/apps/redis/build")
!611 = !DIDerivedType(tag: DW_TAG_member, name: "configfile", scope: !606, file: !46, line: 943, baseType: !40, size: 64, offset: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "executable", scope: !606, file: !46, line: 944, baseType: !40, size: 64, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "exec_argv", scope: !606, file: !46, line: 945, baseType: !614, size: 64, offset: 192)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_hz", scope: !606, file: !46, line: 946, baseType: !7, size: 32, offset: 256)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "config_hz", scope: !606, file: !46, line: 947, baseType: !7, size: 32, offset: 288)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "hz", scope: !606, file: !46, line: 950, baseType: !7, size: 32, offset: 320)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !606, file: !46, line: 951, baseType: !80, size: 64, offset: 384)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !606, file: !46, line: 952, baseType: !85, size: 64, offset: 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "orig_commands", scope: !606, file: !46, line: 953, baseType: !85, size: 64, offset: 512)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "el", scope: !606, file: !46, line: 954, baseType: !622, size: 64, offset: 576)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventLoop", file: !624, line: 109, baseType: !625)
!624 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/ae.h", directory: "/root/.unikraft/apps/redis/build")
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeEventLoop", file: !624, line: 97, size: 640, elements: !626)
!626 = !{!627, !628, !629, !630, !631, !645, !652, !674, !675, !676, !681}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !625, file: !624, line: 98, baseType: !7, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "setsize", scope: !625, file: !624, line: 99, baseType: !7, size: 32, offset: 32)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventNextId", scope: !625, file: !624, line: 100, baseType: !8, size: 64, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "lastTime", scope: !625, file: !624, line: 101, baseType: !175, size: 64, offset: 128)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !625, file: !624, line: 102, baseType: !632, size: 64, offset: 192)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileEvent", file: !624, line: 76, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFileEvent", file: !624, line: 71, size: 256, elements: !635)
!635 = !{!636, !637, !643, !644}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !634, file: !624, line: 72, baseType: !7, size: 32)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "rfileProc", scope: !634, file: !624, line: 73, baseType: !638, size: 64, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileProc", file: !624, line: 65, baseType: !640)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !642, !7, !6, !7}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "wfileProc", scope: !634, file: !624, line: 74, baseType: !638, size: 64, offset: 128)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !634, file: !624, line: 75, baseType: !6, size: 64, offset: 192)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "fired", scope: !625, file: !624, line: 103, baseType: !646, size: 64, offset: 256)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFiredEvent", file: !624, line: 94, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFiredEvent", file: !624, line: 91, size: 64, elements: !649)
!649 = !{!650, !651}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !648, file: !624, line: 92, baseType: !7, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !648, file: !624, line: 93, baseType: !7, size: 32, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventHead", scope: !625, file: !624, line: 104, baseType: !653, size: 64, offset: 320)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeEvent", file: !624, line: 88, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeTimeEvent", file: !624, line: 79, size: 512, elements: !656)
!656 = !{!657, !658, !659, !660, !665, !670, !671, !673}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !655, file: !624, line: 80, baseType: !8, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "when_sec", scope: !655, file: !624, line: 81, baseType: !55, size: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "when_ms", scope: !655, file: !624, line: 82, baseType: !55, size: 64, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "timeProc", scope: !655, file: !624, line: 83, baseType: !661, size: 64, offset: 192)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeProc", file: !624, line: 66, baseType: !663)
!663 = !DISubroutineType(types: !664)
!664 = !{!7, !642, !8, !6}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "finalizerProc", scope: !655, file: !624, line: 84, baseType: !666, size: 64, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventFinalizerProc", file: !624, line: 67, baseType: !668)
!668 = !DISubroutineType(types: !669)
!669 = !{null, !642, !6}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !655, file: !624, line: 85, baseType: !6, size: 64, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !655, file: !624, line: 86, baseType: !672, size: 64, offset: 384)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !655, file: !624, line: 87, baseType: !672, size: 64, offset: 448)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !625, file: !624, line: 105, baseType: !7, size: 32, offset: 384)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "apidata", scope: !625, file: !624, line: 106, baseType: !6, size: 64, offset: 448)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "beforesleep", scope: !625, file: !624, line: 107, baseType: !677, size: 64, offset: 512)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeBeforeSleepProc", file: !624, line: 68, baseType: !679)
!679 = !DISubroutineType(types: !680)
!680 = !{null, !642}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "aftersleep", scope: !625, file: !624, line: 108, baseType: !677, size: 64, offset: 576)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "lruclock", scope: !606, file: !46, line: 955, baseType: !50, size: 32, offset: 640)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_asap", scope: !606, file: !46, line: 956, baseType: !7, size: 32, offset: 672)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "activerehashing", scope: !606, file: !46, line: 957, baseType: !7, size: 32, offset: 704)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_running", scope: !606, file: !46, line: 958, baseType: !7, size: 32, offset: 736)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "requirepass", scope: !606, file: !46, line: 959, baseType: !40, size: 64, offset: 768)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "pidfile", scope: !606, file: !46, line: 960, baseType: !40, size: 64, offset: 832)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "arch_bits", scope: !606, file: !46, line: 961, baseType: !7, size: 32, offset: 896)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "cronloops", scope: !606, file: !46, line: 962, baseType: !7, size: 32, offset: 928)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "runid", scope: !606, file: !46, line: 963, baseType: !197, size: 328, offset: 960)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel_mode", scope: !606, file: !46, line: 964, baseType: !7, size: 32, offset: 1312)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "initial_memory_usage", scope: !606, file: !46, line: 965, baseType: !157, size: 64, offset: 1344)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "always_show_logo", scope: !606, file: !46, line: 966, baseType: !7, size: 32, offset: 1408)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "moduleapi", scope: !606, file: !46, line: 968, baseType: !85, size: 64, offset: 1472)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "sharedapi", scope: !606, file: !46, line: 969, baseType: !85, size: 64, offset: 1536)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "loadmodule_queue", scope: !606, file: !46, line: 971, baseType: !9, size: 64, offset: 1600)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_pipe", scope: !606, file: !46, line: 972, baseType: !698, size: 64, offset: 1664)
!698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !143)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !606, file: !46, line: 976, baseType: !7, size: 32, offset: 1728)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_backlog", scope: !606, file: !46, line: 977, baseType: !7, size: 32, offset: 1760)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "bindaddr", scope: !606, file: !46, line: 978, baseType: !702, size: 1024, offset: 1792)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 1024, elements: !396)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "bindaddr_count", scope: !606, file: !46, line: 979, baseType: !7, size: 32, offset: 2816)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "unixsocket", scope: !606, file: !46, line: 980, baseType: !40, size: 64, offset: 2880)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "unixsocketperm", scope: !606, file: !46, line: 981, baseType: !706, size: 32, offset: 2944)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !186, line: 205, baseType: !707)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !160, line: 88, baseType: !304)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "ipfd", scope: !606, file: !46, line: 982, baseType: !709, size: 512, offset: 2976)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !396)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "ipfd_count", scope: !606, file: !46, line: 983, baseType: !7, size: 32, offset: 3488)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "sofd", scope: !606, file: !46, line: 984, baseType: !7, size: 32, offset: 3520)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "cfd", scope: !606, file: !46, line: 985, baseType: !709, size: 512, offset: 3552)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "cfd_count", scope: !606, file: !46, line: 986, baseType: !7, size: 32, offset: 4064)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "clients", scope: !606, file: !46, line: 987, baseType: !9, size: 64, offset: 4096)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "clients_to_close", scope: !606, file: !46, line: 988, baseType: !9, size: 64, offset: 4160)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "clients_pending_write", scope: !606, file: !46, line: 989, baseType: !9, size: 64, offset: 4224)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !606, file: !46, line: 990, baseType: !9, size: 64, offset: 4288)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "monitors", scope: !606, file: !46, line: 990, baseType: !9, size: 64, offset: 4352)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "current_client", scope: !606, file: !46, line: 991, baseType: !69, size: 64, offset: 4416)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "clients_index", scope: !606, file: !46, line: 992, baseType: !721, size: 64, offset: 4480)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "rax", file: !723, line: 137, baseType: !724)
!723 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rax.h", directory: "/root/.unikraft/apps/redis/build")
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rax", file: !723, line: 133, size: 192, elements: !725)
!725 = !{!726, !737, !738}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !724, file: !723, line: 134, baseType: !727, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNode", file: !723, line: 131, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxNode", file: !723, line: 98, size: 32, elements: !730)
!730 = !{!731, !732, !733, !734, !735}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "iskey", scope: !729, file: !723, line: 99, baseType: !303, size: 1, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "isnull", scope: !729, file: !723, line: 100, baseType: !303, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "iscompr", scope: !729, file: !723, line: 101, baseType: !303, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !729, file: !723, line: 102, baseType: !303, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !729, file: !723, line: 130, baseType: !736, offset: 32)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, elements: !287)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "numele", scope: !724, file: !723, line: 135, baseType: !74, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "numnodes", scope: !724, file: !723, line: 136, baseType: !74, size: 64, offset: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "clients_paused", scope: !606, file: !46, line: 993, baseType: !7, size: 32, offset: 4544)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "clients_pause_end_time", scope: !606, file: !46, line: 994, baseType: !228, size: 64, offset: 4608)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "neterr", scope: !606, file: !46, line: 995, baseType: !742, size: 2048, offset: 4672)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 2048, elements: !743)
!743 = !{!744}
!744 = !DISubrange(count: 256)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_cached_sockets", scope: !606, file: !46, line: 996, baseType: !85, size: 64, offset: 6720)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "next_client_id", scope: !606, file: !46, line: 997, baseType: !74, size: 64, offset: 6784)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "protected_mode", scope: !606, file: !46, line: 998, baseType: !7, size: 32, offset: 6848)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "loading", scope: !606, file: !46, line: 1000, baseType: !7, size: 32, offset: 6880)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "loading_total_bytes", scope: !606, file: !46, line: 1001, baseType: !185, size: 64, offset: 6912)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "loading_loaded_bytes", scope: !606, file: !46, line: 1002, baseType: !185, size: 64, offset: 6976)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "loading_start_time", scope: !606, file: !46, line: 1003, baseType: !175, size: 64, offset: 7040)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "loading_process_events_interval_bytes", scope: !606, file: !46, line: 1004, baseType: !185, size: 64, offset: 7104)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "delCommand", scope: !606, file: !46, line: 1006, baseType: !60, size: 64, offset: 7168)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "multiCommand", scope: !606, file: !46, line: 1006, baseType: !60, size: 64, offset: 7232)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "lpushCommand", scope: !606, file: !46, line: 1006, baseType: !60, size: 64, offset: 7296)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "lpopCommand", scope: !606, file: !46, line: 1007, baseType: !60, size: 64, offset: 7360)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rpopCommand", scope: !606, file: !46, line: 1007, baseType: !60, size: 64, offset: 7424)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "zpopminCommand", scope: !606, file: !46, line: 1007, baseType: !60, size: 64, offset: 7488)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "zpopmaxCommand", scope: !606, file: !46, line: 1008, baseType: !60, size: 64, offset: 7552)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "sremCommand", scope: !606, file: !46, line: 1008, baseType: !60, size: 64, offset: 7616)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "execCommand", scope: !606, file: !46, line: 1008, baseType: !60, size: 64, offset: 7680)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "expireCommand", scope: !606, file: !46, line: 1009, baseType: !60, size: 64, offset: 7744)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "pexpireCommand", scope: !606, file: !46, line: 1009, baseType: !60, size: 64, offset: 7808)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "xclaimCommand", scope: !606, file: !46, line: 1009, baseType: !60, size: 64, offset: 7872)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "xgroupCommand", scope: !606, file: !46, line: 1010, baseType: !60, size: 64, offset: 7936)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "stat_starttime", scope: !606, file: !46, line: 1012, baseType: !175, size: 64, offset: 8000)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "stat_numcommands", scope: !606, file: !46, line: 1013, baseType: !8, size: 64, offset: 8064)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "stat_numconnections", scope: !606, file: !46, line: 1014, baseType: !8, size: 64, offset: 8128)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "stat_expiredkeys", scope: !606, file: !46, line: 1015, baseType: !8, size: 64, offset: 8192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "stat_expired_stale_perc", scope: !606, file: !46, line: 1016, baseType: !137, size: 64, offset: 8256)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "stat_expired_time_cap_reached_count", scope: !606, file: !46, line: 1017, baseType: !8, size: 64, offset: 8320)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "stat_evictedkeys", scope: !606, file: !46, line: 1018, baseType: !8, size: 64, offset: 8384)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "stat_keyspace_hits", scope: !606, file: !46, line: 1019, baseType: !8, size: 64, offset: 8448)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "stat_keyspace_misses", scope: !606, file: !46, line: 1020, baseType: !8, size: 64, offset: 8512)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "stat_active_defrag_hits", scope: !606, file: !46, line: 1021, baseType: !8, size: 64, offset: 8576)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "stat_active_defrag_misses", scope: !606, file: !46, line: 1022, baseType: !8, size: 64, offset: 8640)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "stat_active_defrag_key_hits", scope: !606, file: !46, line: 1023, baseType: !8, size: 64, offset: 8704)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "stat_active_defrag_key_misses", scope: !606, file: !46, line: 1024, baseType: !8, size: 64, offset: 8768)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "stat_active_defrag_scanned", scope: !606, file: !46, line: 1025, baseType: !8, size: 64, offset: 8832)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "stat_peak_memory", scope: !606, file: !46, line: 1026, baseType: !157, size: 64, offset: 8896)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "stat_fork_time", scope: !606, file: !46, line: 1027, baseType: !8, size: 64, offset: 8960)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "stat_fork_rate", scope: !606, file: !46, line: 1028, baseType: !137, size: 64, offset: 9024)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "stat_rejected_conn", scope: !606, file: !46, line: 1029, baseType: !8, size: 64, offset: 9088)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "stat_sync_full", scope: !606, file: !46, line: 1030, baseType: !8, size: 64, offset: 9152)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "stat_sync_partial_ok", scope: !606, file: !46, line: 1031, baseType: !8, size: 64, offset: 9216)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "stat_sync_partial_err", scope: !606, file: !46, line: 1032, baseType: !8, size: 64, offset: 9280)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "slowlog", scope: !606, file: !46, line: 1033, baseType: !9, size: 64, offset: 9344)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "slowlog_entry_id", scope: !606, file: !46, line: 1034, baseType: !8, size: 64, offset: 9408)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "slowlog_log_slower_than", scope: !606, file: !46, line: 1035, baseType: !8, size: 64, offset: 9472)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "slowlog_max_len", scope: !606, file: !46, line: 1036, baseType: !37, size: 64, offset: 9536)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "cron_malloc_stats", scope: !606, file: !46, line: 1037, baseType: !792, size: 320, offset: 9600)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "malloc_stats", file: !46, line: 916, size: 320, elements: !793)
!793 = !{!794, !795, !796, !797, !798}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "zmalloc_used", scope: !792, file: !46, line: 917, baseType: !157, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "process_rss", scope: !792, file: !46, line: 918, baseType: !157, size: 64, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_allocated", scope: !792, file: !46, line: 919, baseType: !157, size: 64, offset: 128)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_active", scope: !792, file: !46, line: 920, baseType: !157, size: 64, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "allocator_resident", scope: !792, file: !46, line: 921, baseType: !157, size: 64, offset: 256)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "stat_net_input_bytes", scope: !606, file: !46, line: 1038, baseType: !8, size: 64, offset: 9920)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "stat_net_output_bytes", scope: !606, file: !46, line: 1039, baseType: !8, size: 64, offset: 9984)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "stat_rdb_cow_bytes", scope: !606, file: !46, line: 1040, baseType: !157, size: 64, offset: 10048)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "stat_aof_cow_bytes", scope: !606, file: !46, line: 1041, baseType: !157, size: 64, offset: 10112)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "inst_metric", scope: !606, file: !46, line: 1049, baseType: !804, size: 3648, offset: 10176)
!804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !805, size: 3648, elements: !812)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !46, line: 1044, size: 1216, elements: !806)
!806 = !{!807, !808, !809, !811}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "last_sample_time", scope: !805, file: !46, line: 1045, baseType: !8, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "last_sample_count", scope: !805, file: !46, line: 1046, baseType: !8, size: 64, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !805, file: !46, line: 1047, baseType: !810, size: 1024, offset: 128)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1024, elements: !396)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !805, file: !46, line: 1048, baseType: !7, size: 32, offset: 1152)
!812 = !{!813}
!813 = !DISubrange(count: 3)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "verbosity", scope: !606, file: !46, line: 1051, baseType: !7, size: 32, offset: 13824)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "maxidletime", scope: !606, file: !46, line: 1052, baseType: !7, size: 32, offset: 13856)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "tcpkeepalive", scope: !606, file: !46, line: 1053, baseType: !7, size: 32, offset: 13888)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "active_expire_enabled", scope: !606, file: !46, line: 1054, baseType: !7, size: 32, offset: 13920)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_enabled", scope: !606, file: !46, line: 1055, baseType: !7, size: 32, offset: 13952)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_ignore_bytes", scope: !606, file: !46, line: 1056, baseType: !157, size: 64, offset: 14016)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_threshold_lower", scope: !606, file: !46, line: 1057, baseType: !7, size: 32, offset: 14080)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_threshold_upper", scope: !606, file: !46, line: 1058, baseType: !7, size: 32, offset: 14112)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_cycle_min", scope: !606, file: !46, line: 1059, baseType: !7, size: 32, offset: 14144)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_cycle_max", scope: !606, file: !46, line: 1060, baseType: !7, size: 32, offset: 14176)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "active_defrag_max_scan_fields", scope: !606, file: !46, line: 1061, baseType: !37, size: 64, offset: 14208)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "client_max_querybuf_len", scope: !606, file: !46, line: 1062, baseType: !157, size: 64, offset: 14272)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "dbnum", scope: !606, file: !46, line: 1063, baseType: !7, size: 32, offset: 14336)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "supervised", scope: !606, file: !46, line: 1064, baseType: !7, size: 32, offset: 14368)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "supervised_mode", scope: !606, file: !46, line: 1065, baseType: !7, size: 32, offset: 14400)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "daemonize", scope: !606, file: !46, line: 1066, baseType: !7, size: 32, offset: 14432)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "client_obuf_limits", scope: !606, file: !46, line: 1067, baseType: !831, size: 576, offset: 14464)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !832, size: 576, elements: !812)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "clientBufferLimitsConfig", file: !46, line: 835, baseType: !833)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clientBufferLimitsConfig", file: !46, line: 831, size: 192, elements: !834)
!834 = !{!835, !836, !837}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "hard_limit_bytes", scope: !833, file: !46, line: 832, baseType: !56, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "soft_limit_bytes", scope: !833, file: !46, line: 833, baseType: !56, size: 64, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "soft_limit_seconds", scope: !833, file: !46, line: 834, baseType: !175, size: 64, offset: 128)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "aof_state", scope: !606, file: !46, line: 1069, baseType: !7, size: 32, offset: 15040)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "aof_fsync", scope: !606, file: !46, line: 1070, baseType: !7, size: 32, offset: 15072)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "aof_filename", scope: !606, file: !46, line: 1071, baseType: !40, size: 64, offset: 15104)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "aof_no_fsync_on_rewrite", scope: !606, file: !46, line: 1072, baseType: !7, size: 32, offset: 15168)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_perc", scope: !606, file: !46, line: 1073, baseType: !7, size: 32, offset: 15200)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_min_size", scope: !606, file: !46, line: 1074, baseType: !185, size: 64, offset: 15232)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_base_size", scope: !606, file: !46, line: 1075, baseType: !185, size: 64, offset: 15296)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "aof_current_size", scope: !606, file: !46, line: 1076, baseType: !185, size: 64, offset: 15360)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "aof_fsync_offset", scope: !606, file: !46, line: 1077, baseType: !185, size: 64, offset: 15424)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_scheduled", scope: !606, file: !46, line: 1078, baseType: !7, size: 32, offset: 15488)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "aof_child_pid", scope: !606, file: !46, line: 1079, baseType: !609, size: 32, offset: 15520)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_buf_blocks", scope: !606, file: !46, line: 1080, baseType: !9, size: 64, offset: 15552)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "aof_buf", scope: !606, file: !46, line: 1081, baseType: !38, size: 64, offset: 15616)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "aof_fd", scope: !606, file: !46, line: 1082, baseType: !7, size: 32, offset: 15680)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "aof_selected_db", scope: !606, file: !46, line: 1083, baseType: !7, size: 32, offset: 15712)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "aof_flush_postponed_start", scope: !606, file: !46, line: 1084, baseType: !175, size: 64, offset: 15744)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "aof_last_fsync", scope: !606, file: !46, line: 1085, baseType: !175, size: 64, offset: 15808)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_time_last", scope: !606, file: !46, line: 1086, baseType: !175, size: 64, offset: 15872)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_time_start", scope: !606, file: !46, line: 1087, baseType: !175, size: 64, offset: 15936)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "aof_lastbgrewrite_status", scope: !606, file: !46, line: 1088, baseType: !7, size: 32, offset: 16000)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "aof_delayed_fsync", scope: !606, file: !46, line: 1089, baseType: !37, size: 64, offset: 16064)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite_incremental_fsync", scope: !606, file: !46, line: 1090, baseType: !7, size: 32, offset: 16128)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save_incremental_fsync", scope: !606, file: !46, line: 1091, baseType: !7, size: 32, offset: 16160)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "aof_last_write_status", scope: !606, file: !46, line: 1092, baseType: !7, size: 32, offset: 16192)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "aof_last_write_errno", scope: !606, file: !46, line: 1093, baseType: !7, size: 32, offset: 16224)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "aof_load_truncated", scope: !606, file: !46, line: 1094, baseType: !7, size: 32, offset: 16256)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "aof_use_rdb_preamble", scope: !606, file: !46, line: 1095, baseType: !7, size: 32, offset: 16288)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "aof_pipe_write_data_to_child", scope: !606, file: !46, line: 1097, baseType: !7, size: 32, offset: 16320)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "aof_pipe_read_data_from_parent", scope: !606, file: !46, line: 1098, baseType: !7, size: 32, offset: 16352)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "aof_pipe_write_ack_to_parent", scope: !606, file: !46, line: 1099, baseType: !7, size: 32, offset: 16384)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "aof_pipe_read_ack_from_child", scope: !606, file: !46, line: 1100, baseType: !7, size: 32, offset: 16416)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "aof_pipe_write_ack_to_child", scope: !606, file: !46, line: 1101, baseType: !7, size: 32, offset: 16448)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "aof_pipe_read_ack_from_parent", scope: !606, file: !46, line: 1102, baseType: !7, size: 32, offset: 16480)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "aof_stop_sending_diff", scope: !606, file: !46, line: 1103, baseType: !7, size: 32, offset: 16512)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "aof_child_diff", scope: !606, file: !46, line: 1105, baseType: !38, size: 64, offset: 16576)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !606, file: !46, line: 1107, baseType: !8, size: 64, offset: 16640)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_before_bgsave", scope: !606, file: !46, line: 1108, baseType: !8, size: 64, offset: 16704)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_child_pid", scope: !606, file: !46, line: 1109, baseType: !609, size: 32, offset: 16768)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "saveparams", scope: !606, file: !46, line: 1110, baseType: !877, size: 64, offset: 16832)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saveparam", file: !46, line: 782, size: 128, elements: !879)
!879 = !{!880, !881}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !878, file: !46, line: 783, baseType: !175, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "changes", scope: !878, file: !46, line: 784, baseType: !7, size: 32, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "saveparamslen", scope: !606, file: !46, line: 1111, baseType: !7, size: 32, offset: 16896)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_filename", scope: !606, file: !46, line: 1112, baseType: !40, size: 64, offset: 16960)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_compression", scope: !606, file: !46, line: 1113, baseType: !7, size: 32, offset: 17024)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_checksum", scope: !606, file: !46, line: 1114, baseType: !7, size: 32, offset: 17056)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "lastsave", scope: !606, file: !46, line: 1115, baseType: !175, size: 64, offset: 17088)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "lastbgsave_try", scope: !606, file: !46, line: 1116, baseType: !175, size: 64, offset: 17152)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save_time_last", scope: !606, file: !46, line: 1117, baseType: !175, size: 64, offset: 17216)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save_time_start", scope: !606, file: !46, line: 1118, baseType: !175, size: 64, offset: 17280)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_bgsave_scheduled", scope: !606, file: !46, line: 1119, baseType: !7, size: 32, offset: 17344)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_child_type", scope: !606, file: !46, line: 1120, baseType: !7, size: 32, offset: 17376)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "lastbgsave_status", scope: !606, file: !46, line: 1121, baseType: !7, size: 32, offset: 17408)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "stop_writes_on_bgsave_err", scope: !606, file: !46, line: 1122, baseType: !7, size: 32, offset: 17440)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_pipe_write_result_to_parent", scope: !606, file: !46, line: 1123, baseType: !7, size: 32, offset: 17472)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_pipe_read_result_from_child", scope: !606, file: !46, line: 1124, baseType: !7, size: 32, offset: 17504)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "child_info_pipe", scope: !606, file: !46, line: 1126, baseType: !698, size: 64, offset: 17536)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "child_info_data", scope: !606, file: !46, line: 1131, baseType: !898, size: 192, offset: 17600)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !606, file: !46, line: 1127, size: 192, elements: !899)
!899 = !{!900, !901, !902}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "process_type", scope: !898, file: !46, line: 1128, baseType: !7, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "cow_size", scope: !898, file: !46, line: 1129, baseType: !157, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !898, file: !46, line: 1130, baseType: !56, size: 64, offset: 128)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "also_propagate", scope: !606, file: !46, line: 1133, baseType: !904, size: 128, offset: 17792)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisOpArray", file: !46, line: 861, baseType: !905)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisOpArray", file: !46, line: 858, size: 128, elements: !906)
!906 = !{!907, !917}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !905, file: !46, line: 859, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisOp", file: !46, line: 849, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisOp", file: !46, line: 845, size: 256, elements: !911)
!911 = !{!912, !913, !914, !915, !916}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !910, file: !46, line: 846, baseType: !165, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !910, file: !46, line: 847, baseType: !7, size: 32, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "dbid", scope: !910, file: !46, line: 847, baseType: !7, size: 32, offset: 96)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !910, file: !46, line: 847, baseType: !7, size: 32, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !910, file: !46, line: 848, baseType: !60, size: 64, offset: 192)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "numops", scope: !905, file: !46, line: 860, baseType: !7, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "logfile", scope: !606, file: !46, line: 1135, baseType: !40, size: 64, offset: 17920)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "syslog_enabled", scope: !606, file: !46, line: 1136, baseType: !7, size: 32, offset: 17984)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "syslog_ident", scope: !606, file: !46, line: 1137, baseType: !40, size: 64, offset: 18048)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "syslog_facility", scope: !606, file: !46, line: 1138, baseType: !7, size: 32, offset: 18112)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !606, file: !46, line: 1140, baseType: !197, size: 328, offset: 18144)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "replid2", scope: !606, file: !46, line: 1141, baseType: !197, size: 328, offset: 18472)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "master_repl_offset", scope: !606, file: !46, line: 1142, baseType: !8, size: 64, offset: 18816)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "second_replid_offset", scope: !606, file: !46, line: 1143, baseType: !8, size: 64, offset: 18880)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "slaveseldb", scope: !606, file: !46, line: 1144, baseType: !7, size: 32, offset: 18944)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ping_slave_period", scope: !606, file: !46, line: 1145, baseType: !7, size: 32, offset: 18976)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog", scope: !606, file: !46, line: 1146, baseType: !40, size: 64, offset: 19008)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog_size", scope: !606, file: !46, line: 1147, baseType: !8, size: 64, offset: 19072)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog_histlen", scope: !606, file: !46, line: 1148, baseType: !8, size: 64, offset: 19136)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog_idx", scope: !606, file: !46, line: 1149, baseType: !8, size: 64, offset: 19200)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog_off", scope: !606, file: !46, line: 1151, baseType: !8, size: 64, offset: 19264)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "repl_backlog_time_limit", scope: !606, file: !46, line: 1153, baseType: !175, size: 64, offset: 19328)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "repl_no_slaves_since", scope: !606, file: !46, line: 1155, baseType: !175, size: 64, offset: 19392)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "repl_min_slaves_to_write", scope: !606, file: !46, line: 1157, baseType: !7, size: 32, offset: 19456)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "repl_min_slaves_max_lag", scope: !606, file: !46, line: 1158, baseType: !7, size: 32, offset: 19488)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "repl_good_slaves_count", scope: !606, file: !46, line: 1159, baseType: !7, size: 32, offset: 19520)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "repl_diskless_sync", scope: !606, file: !46, line: 1160, baseType: !7, size: 32, offset: 19552)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "repl_diskless_sync_delay", scope: !606, file: !46, line: 1161, baseType: !7, size: 32, offset: 19584)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "masterauth", scope: !606, file: !46, line: 1163, baseType: !40, size: 64, offset: 19648)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "masterhost", scope: !606, file: !46, line: 1164, baseType: !40, size: 64, offset: 19712)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "masterport", scope: !606, file: !46, line: 1165, baseType: !7, size: 32, offset: 19776)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "repl_timeout", scope: !606, file: !46, line: 1166, baseType: !7, size: 32, offset: 19808)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !606, file: !46, line: 1167, baseType: !69, size: 64, offset: 19840)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "cached_master", scope: !606, file: !46, line: 1168, baseType: !69, size: 64, offset: 19904)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "repl_syncio_timeout", scope: !606, file: !46, line: 1169, baseType: !7, size: 32, offset: 19968)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "repl_state", scope: !606, file: !46, line: 1170, baseType: !7, size: 32, offset: 20000)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_size", scope: !606, file: !46, line: 1171, baseType: !185, size: 64, offset: 20032)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_read", scope: !606, file: !46, line: 1172, baseType: !185, size: 64, offset: 20096)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_last_fsync_off", scope: !606, file: !46, line: 1173, baseType: !185, size: 64, offset: 20160)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_s", scope: !606, file: !46, line: 1174, baseType: !7, size: 32, offset: 20224)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_fd", scope: !606, file: !46, line: 1175, baseType: !7, size: 32, offset: 20256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_tmpfile", scope: !606, file: !46, line: 1176, baseType: !40, size: 64, offset: 20288)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "repl_transfer_lastio", scope: !606, file: !46, line: 1177, baseType: !175, size: 64, offset: 20352)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "repl_serve_stale_data", scope: !606, file: !46, line: 1178, baseType: !7, size: 32, offset: 20416)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "repl_slave_ro", scope: !606, file: !46, line: 1179, baseType: !7, size: 32, offset: 20448)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "repl_slave_ignore_maxmemory", scope: !606, file: !46, line: 1180, baseType: !7, size: 32, offset: 20480)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "repl_down_since", scope: !606, file: !46, line: 1181, baseType: !175, size: 64, offset: 20544)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "repl_disable_tcp_nodelay", scope: !606, file: !46, line: 1182, baseType: !7, size: 32, offset: 20608)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "slave_priority", scope: !606, file: !46, line: 1183, baseType: !7, size: 32, offset: 20640)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "slave_announce_port", scope: !606, file: !46, line: 1184, baseType: !7, size: 32, offset: 20672)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "slave_announce_ip", scope: !606, file: !46, line: 1185, baseType: !40, size: 64, offset: 20736)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "master_replid", scope: !606, file: !46, line: 1189, baseType: !197, size: 328, offset: 20800)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "master_initial_offset", scope: !606, file: !46, line: 1190, baseType: !8, size: 64, offset: 21184)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "repl_slave_lazy_flush", scope: !606, file: !46, line: 1191, baseType: !7, size: 32, offset: 21248)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "repl_scriptcache_dict", scope: !606, file: !46, line: 1193, baseType: !85, size: 64, offset: 21312)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "repl_scriptcache_fifo", scope: !606, file: !46, line: 1194, baseType: !9, size: 64, offset: 21376)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "repl_scriptcache_size", scope: !606, file: !46, line: 1195, baseType: !50, size: 32, offset: 21440)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "clients_waiting_acks", scope: !606, file: !46, line: 1197, baseType: !9, size: 64, offset: 21504)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "get_ack_from_slaves", scope: !606, file: !46, line: 1198, baseType: !7, size: 32, offset: 21568)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "maxclients", scope: !606, file: !46, line: 1200, baseType: !50, size: 32, offset: 21600)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "maxmemory", scope: !606, file: !46, line: 1201, baseType: !56, size: 64, offset: 21632)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "maxmemory_policy", scope: !606, file: !46, line: 1202, baseType: !7, size: 32, offset: 21696)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "maxmemory_samples", scope: !606, file: !46, line: 1203, baseType: !7, size: 32, offset: 21728)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "lfu_log_factor", scope: !606, file: !46, line: 1204, baseType: !7, size: 32, offset: 21760)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "lfu_decay_time", scope: !606, file: !46, line: 1205, baseType: !7, size: 32, offset: 21792)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "proto_max_bulk_len", scope: !606, file: !46, line: 1206, baseType: !8, size: 64, offset: 21824)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_clients", scope: !606, file: !46, line: 1208, baseType: !50, size: 32, offset: 21888)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_clients_by_type", scope: !606, file: !46, line: 1209, baseType: !980, size: 192, offset: 21920)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 192, elements: !981)
!981 = !{!982}
!982 = !DISubrange(count: 6)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "unblocked_clients", scope: !606, file: !46, line: 1210, baseType: !9, size: 64, offset: 22144)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !606, file: !46, line: 1211, baseType: !9, size: 64, offset: 22208)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "sort_desc", scope: !606, file: !46, line: 1214, baseType: !7, size: 32, offset: 22272)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "sort_alpha", scope: !606, file: !46, line: 1215, baseType: !7, size: 32, offset: 22304)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "sort_bypattern", scope: !606, file: !46, line: 1216, baseType: !7, size: 32, offset: 22336)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "sort_store", scope: !606, file: !46, line: 1217, baseType: !7, size: 32, offset: 22368)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "hash_max_ziplist_entries", scope: !606, file: !46, line: 1219, baseType: !157, size: 64, offset: 22400)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "hash_max_ziplist_value", scope: !606, file: !46, line: 1220, baseType: !157, size: 64, offset: 22464)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "set_max_intset_entries", scope: !606, file: !46, line: 1221, baseType: !157, size: 64, offset: 22528)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "zset_max_ziplist_entries", scope: !606, file: !46, line: 1222, baseType: !157, size: 64, offset: 22592)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "zset_max_ziplist_value", scope: !606, file: !46, line: 1223, baseType: !157, size: 64, offset: 22656)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "hll_sparse_max_bytes", scope: !606, file: !46, line: 1224, baseType: !157, size: 64, offset: 22720)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "stream_node_max_bytes", scope: !606, file: !46, line: 1225, baseType: !157, size: 64, offset: 22784)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "stream_node_max_entries", scope: !606, file: !46, line: 1226, baseType: !134, size: 64, offset: 22848)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "list_max_ziplist_size", scope: !606, file: !46, line: 1228, baseType: !7, size: 32, offset: 22912)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "list_compress_depth", scope: !606, file: !46, line: 1229, baseType: !7, size: 32, offset: 22944)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "unixtime", scope: !606, file: !46, line: 1231, baseType: !175, size: 64, offset: 22976)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "timezone", scope: !606, file: !46, line: 1232, baseType: !175, size: 64, offset: 23040)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "daylight_active", scope: !606, file: !46, line: 1233, baseType: !7, size: 32, offset: 23104)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "mstime", scope: !606, file: !46, line: 1234, baseType: !8, size: 64, offset: 23168)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !606, file: !46, line: 1236, baseType: !85, size: 64, offset: 23232)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !606, file: !46, line: 1237, baseType: !9, size: 64, offset: 23296)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "notify_keyspace_events", scope: !606, file: !46, line: 1238, baseType: !7, size: 32, offset: 23360)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_enabled", scope: !606, file: !46, line: 1241, baseType: !7, size: 32, offset: 23392)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_node_timeout", scope: !606, file: !46, line: 1242, baseType: !228, size: 64, offset: 23424)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_configfile", scope: !606, file: !46, line: 1243, baseType: !40, size: 64, offset: 23488)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "cluster", scope: !606, file: !46, line: 1244, baseType: !1010, size: 64, offset: 23552)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterState", file: !1012, line: 143, size: 4196736, elements: !1013)
!1012 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.h", directory: "/root/.unikraft/apps/redis/build")
!1013 = !{!1014, !1057, !1058, !1059, !1060, !1061, !1062, !1064, !1065, !1066, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1083, !1084}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "myself", scope: !1011, file: !1012, line: 144, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNode", file: !1012, line: 141, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNode", file: !1012, line: 116, size: 18112, elements: !1018)
!1018 = !{!1019, !1020, !1024, !1025, !1026, !1030, !1031, !1032, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1056}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1017, file: !1012, line: 117, baseType: !228, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1017, file: !1012, line: 118, baseType: !1021, size: 320, offset: 64)
!1021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 320, elements: !1022)
!1022 = !{!1023}
!1023 = !DISubrange(count: 40)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1017, file: !1012, line: 119, baseType: !7, size: 32, offset: 384)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !1017, file: !1012, line: 120, baseType: !74, size: 64, offset: 448)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !1017, file: !1012, line: 121, baseType: !1027, size: 16384, offset: 512)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 16384, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 2048)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "numslots", scope: !1017, file: !1012, line: 122, baseType: !7, size: 32, offset: 16896)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "numslaves", scope: !1017, file: !1012, line: 123, baseType: !7, size: 32, offset: 16928)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !1017, file: !1012, line: 124, baseType: !1033, size: 64, offset: 16960)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !1017, file: !1012, line: 125, baseType: !1034, size: 64, offset: 17024)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !1017, file: !1012, line: 129, baseType: !228, size: 64, offset: 17088)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !1017, file: !1012, line: 130, baseType: !228, size: 64, offset: 17152)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "fail_time", scope: !1017, file: !1012, line: 131, baseType: !228, size: 64, offset: 17216)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "voted_time", scope: !1017, file: !1012, line: 132, baseType: !228, size: 64, offset: 17280)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset_time", scope: !1017, file: !1012, line: 133, baseType: !228, size: 64, offset: 17344)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "orphaned_time", scope: !1017, file: !1012, line: 134, baseType: !228, size: 64, offset: 17408)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !1017, file: !1012, line: 135, baseType: !8, size: 64, offset: 17472)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1017, file: !1012, line: 136, baseType: !202, size: 368, offset: 17536)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1017, file: !1012, line: 137, baseType: !7, size: 32, offset: 17920)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !1017, file: !1012, line: 138, baseType: !7, size: 32, offset: 17952)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1017, file: !1012, line: 139, baseType: !1047, size: 64, offset: 17984)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterLink", file: !1012, line: 47, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterLink", file: !1012, line: 41, size: 320, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1049, file: !1012, line: 42, baseType: !228, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1049, file: !1012, line: 43, baseType: !7, size: 32, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf", scope: !1049, file: !1012, line: 44, baseType: !38, size: 64, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "rcvbuf", scope: !1049, file: !1012, line: 45, baseType: !38, size: 64, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1049, file: !1012, line: 46, baseType: !1034, size: 64, offset: 256)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "fail_reports", scope: !1017, file: !1012, line: 140, baseType: !9, size: 64, offset: 18048)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "currentEpoch", scope: !1011, file: !1012, line: 145, baseType: !74, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1011, file: !1012, line: 146, baseType: !7, size: 32, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1011, file: !1012, line: 147, baseType: !7, size: 32, offset: 160)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1011, file: !1012, line: 148, baseType: !85, size: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "nodes_black_list", scope: !1011, file: !1012, line: 149, baseType: !85, size: 64, offset: 256)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "migrating_slots_to", scope: !1011, file: !1012, line: 150, baseType: !1063, size: 1048576, offset: 320)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1015, size: 1048576, elements: !249)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "importing_slots_from", scope: !1011, file: !1012, line: 151, baseType: !1063, size: 1048576, offset: 1048896)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !1011, file: !1012, line: 152, baseType: !1063, size: 1048576, offset: 2097472)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "slots_keys_count", scope: !1011, file: !1012, line: 153, baseType: !1067, size: 1048576, offset: 3146048)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 1048576, elements: !249)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "slots_to_keys", scope: !1011, file: !1012, line: 154, baseType: !721, size: 64, offset: 4194624)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "failover_auth_time", scope: !1011, file: !1012, line: 156, baseType: !228, size: 64, offset: 4194688)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "failover_auth_count", scope: !1011, file: !1012, line: 157, baseType: !7, size: 32, offset: 4194752)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "failover_auth_sent", scope: !1011, file: !1012, line: 158, baseType: !7, size: 32, offset: 4194784)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "failover_auth_rank", scope: !1011, file: !1012, line: 159, baseType: !7, size: 32, offset: 4194816)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "failover_auth_epoch", scope: !1011, file: !1012, line: 160, baseType: !74, size: 64, offset: 4194880)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "cant_failover_reason", scope: !1011, file: !1012, line: 161, baseType: !7, size: 32, offset: 4194944)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "mf_end", scope: !1011, file: !1012, line: 164, baseType: !228, size: 64, offset: 4195008)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "mf_slave", scope: !1011, file: !1012, line: 167, baseType: !1015, size: 64, offset: 4195072)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mf_master_offset", scope: !1011, file: !1012, line: 169, baseType: !8, size: 64, offset: 4195136)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "mf_can_start", scope: !1011, file: !1012, line: 171, baseType: !7, size: 32, offset: 4195200)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "lastVoteEpoch", scope: !1011, file: !1012, line: 174, baseType: !74, size: 64, offset: 4195264)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "todo_before_sleep", scope: !1011, file: !1012, line: 175, baseType: !7, size: 32, offset: 4195328)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "stats_bus_messages_sent", scope: !1011, file: !1012, line: 177, baseType: !1082, size: 640, offset: 4195392)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 640, elements: !583)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "stats_bus_messages_received", scope: !1011, file: !1012, line: 178, baseType: !1082, size: 640, offset: 4196032)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "stats_pfail_nodes", scope: !1011, file: !1012, line: 179, baseType: !8, size: 64, offset: 4196672)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_migration_barrier", scope: !606, file: !46, line: 1245, baseType: !7, size: 32, offset: 23616)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_slave_validity_factor", scope: !606, file: !46, line: 1246, baseType: !7, size: 32, offset: 23648)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_require_full_coverage", scope: !606, file: !46, line: 1247, baseType: !7, size: 32, offset: 23680)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_slave_no_failover", scope: !606, file: !46, line: 1249, baseType: !7, size: 32, offset: 23712)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_announce_ip", scope: !606, file: !46, line: 1251, baseType: !40, size: 64, offset: 23744)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_announce_port", scope: !606, file: !46, line: 1252, baseType: !7, size: 32, offset: 23808)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_announce_bus_port", scope: !606, file: !46, line: 1253, baseType: !7, size: 32, offset: 23840)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_module_flags", scope: !606, file: !46, line: 1254, baseType: !7, size: 32, offset: 23872)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "lua", scope: !606, file: !46, line: 1259, baseType: !1094, size: 64, offset: 23936)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "lua_State", file: !1096, line: 50, baseType: !1097)
!1096 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/deps/lua/src/lua.h", directory: "/root/.unikraft/apps/redis/build")
!1097 = !DICompositeType(tag: DW_TAG_structure_type, name: "lua_State", file: !1096, line: 50, flags: DIFlagFwdDecl)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "lua_client", scope: !606, file: !46, line: 1260, baseType: !69, size: 64, offset: 24000)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "lua_caller", scope: !606, file: !46, line: 1261, baseType: !69, size: 64, offset: 24064)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "lua_scripts", scope: !606, file: !46, line: 1262, baseType: !85, size: 64, offset: 24128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "lua_scripts_mem", scope: !606, file: !46, line: 1263, baseType: !56, size: 64, offset: 24192)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "lua_time_limit", scope: !606, file: !46, line: 1264, baseType: !228, size: 64, offset: 24256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lua_time_start", scope: !606, file: !46, line: 1265, baseType: !228, size: 64, offset: 24320)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "lua_write_dirty", scope: !606, file: !46, line: 1266, baseType: !7, size: 32, offset: 24384)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "lua_random_dirty", scope: !606, file: !46, line: 1268, baseType: !7, size: 32, offset: 24416)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "lua_replicate_commands", scope: !606, file: !46, line: 1270, baseType: !7, size: 32, offset: 24448)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "lua_multi_emitted", scope: !606, file: !46, line: 1271, baseType: !7, size: 32, offset: 24480)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "lua_repl", scope: !606, file: !46, line: 1272, baseType: !7, size: 32, offset: 24512)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "lua_timedout", scope: !606, file: !46, line: 1273, baseType: !7, size: 32, offset: 24544)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "lua_kill", scope: !606, file: !46, line: 1275, baseType: !7, size: 32, offset: 24576)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "lua_always_replicate_commands", scope: !606, file: !46, line: 1276, baseType: !7, size: 32, offset: 24608)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "lazyfree_lazy_eviction", scope: !606, file: !46, line: 1278, baseType: !7, size: 32, offset: 24640)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "lazyfree_lazy_expire", scope: !606, file: !46, line: 1279, baseType: !7, size: 32, offset: 24672)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "lazyfree_lazy_server_del", scope: !606, file: !46, line: 1280, baseType: !7, size: 32, offset: 24704)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "latency_monitor_threshold", scope: !606, file: !46, line: 1282, baseType: !8, size: 64, offset: 24768)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "latency_events", scope: !606, file: !46, line: 1283, baseType: !85, size: 64, offset: 24832)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "assert_failed", scope: !606, file: !46, line: 1285, baseType: !425, size: 64, offset: 24896)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "assert_file", scope: !606, file: !46, line: 1286, baseType: !425, size: 64, offset: 24960)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "assert_line", scope: !606, file: !46, line: 1287, baseType: !7, size: 32, offset: 25024)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "bug_report_start", scope: !606, file: !46, line: 1288, baseType: !7, size: 32, offset: 25056)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_period", scope: !606, file: !46, line: 1289, baseType: !7, size: 32, offset: 25088)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "system_memory_size", scope: !606, file: !46, line: 1291, baseType: !157, size: 64, offset: 25152)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "lruclock_mutex", scope: !606, file: !46, line: 1295, baseType: !1124, size: 64, offset: 25216)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !1125, line: 417, baseType: !1126)
!1125 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libpthread-embedded/origin/pthread-embedded-44b41d760a433915d70a7be9809651b0a65e001d/pthread.h", directory: "/root/.unikraft/apps/redis/build")
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "pthread_mutex_t_", file: !1125, line: 417, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "next_client_id_mutex", scope: !606, file: !46, line: 1296, baseType: !1124, size: 64, offset: 25280)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "unixtime_mutex", scope: !606, file: !46, line: 1297, baseType: !1124, size: 64, offset: 25344)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "lru_clock", scope: !2, file: !3, line: 93, type: !1132, isLocal: false, isDefinition: true)
!1132 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !37)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "ClientsPeakMemInput", scope: !2, file: !3, line: 924, type: !1135, isLocal: false, isDefinition: true)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 512, elements: !1136)
!1136 = !{!1137}
!1137 = !DISubrange(count: 8)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "ClientsPeakMemOutput", scope: !2, file: !3, line: 925, type: !1135, isLocal: false, isDefinition: true)
!1140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 128000, elements: !1141)
!1141 = !{!1142}
!1142 = !DISubrange(count: 200)
!1143 = !DIGlobalVariableExpression(var: !365, expr: !DIExpression(DW_OP_deref, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1144 = !{i32 2, !"Dwarf Version", i32 4}
!1145 = !{i32 2, !"Debug Info Version", i32 3}
!1146 = !{i32 1, !"wchar_size", i32 4}
!1147 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!1148 = distinct !DISubprogram(name: "authCommand", scope: !3, file: !3, line: 2920, type: !67, isLocal: false, isDefinition: true, scopeLine: 2920, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1149)
!1149 = !{!1150}
!1150 = !DILocalVariable(name: "c", arg: 1, scope: !1148, file: !3, line: 2920, type: !69)
!1151 = !DILocation(line: 2920, column: 26, scope: !1148)
!1152 = !DILocation(line: 2921, column: 17, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1148, file: !3, line: 2921, column: 9)
!1154 = !{!1155, !1159, i64 96}
!1155 = !{!"redisServer", !1156, i64 0, !1159, i64 8, !1159, i64 16, !1159, i64 24, !1156, i64 32, !1156, i64 36, !1156, i64 40, !1159, i64 48, !1159, i64 56, !1159, i64 64, !1159, i64 72, !1156, i64 80, !1156, i64 84, !1156, i64 88, !1156, i64 92, !1159, i64 96, !1159, i64 104, !1156, i64 112, !1156, i64 116, !1157, i64 120, !1156, i64 164, !1160, i64 168, !1156, i64 176, !1159, i64 184, !1159, i64 192, !1159, i64 200, !1157, i64 208, !1156, i64 216, !1156, i64 220, !1157, i64 224, !1156, i64 352, !1159, i64 360, !1156, i64 368, !1157, i64 372, !1156, i64 436, !1156, i64 440, !1157, i64 444, !1156, i64 508, !1159, i64 512, !1159, i64 520, !1159, i64 528, !1159, i64 536, !1159, i64 544, !1159, i64 552, !1159, i64 560, !1156, i64 568, !1161, i64 576, !1157, i64 584, !1159, i64 840, !1160, i64 848, !1156, i64 856, !1156, i64 860, !1160, i64 864, !1160, i64 872, !1160, i64 880, !1160, i64 888, !1159, i64 896, !1159, i64 904, !1159, i64 912, !1159, i64 920, !1159, i64 928, !1159, i64 936, !1159, i64 944, !1159, i64 952, !1159, i64 960, !1159, i64 968, !1159, i64 976, !1159, i64 984, !1159, i64 992, !1160, i64 1000, !1161, i64 1008, !1161, i64 1016, !1161, i64 1024, !1162, i64 1032, !1161, i64 1040, !1161, i64 1048, !1161, i64 1056, !1161, i64 1064, !1161, i64 1072, !1161, i64 1080, !1161, i64 1088, !1161, i64 1096, !1161, i64 1104, !1160, i64 1112, !1161, i64 1120, !1162, i64 1128, !1161, i64 1136, !1161, i64 1144, !1161, i64 1152, !1161, i64 1160, !1159, i64 1168, !1161, i64 1176, !1161, i64 1184, !1160, i64 1192, !1163, i64 1200, !1161, i64 1240, !1161, i64 1248, !1160, i64 1256, !1160, i64 1264, !1157, i64 1272, !1156, i64 1728, !1156, i64 1732, !1156, i64 1736, !1156, i64 1740, !1156, i64 1744, !1160, i64 1752, !1156, i64 1760, !1156, i64 1764, !1156, i64 1768, !1156, i64 1772, !1160, i64 1776, !1160, i64 1784, !1156, i64 1792, !1156, i64 1796, !1156, i64 1800, !1156, i64 1804, !1157, i64 1808, !1156, i64 1880, !1156, i64 1884, !1159, i64 1888, !1156, i64 1896, !1156, i64 1900, !1160, i64 1904, !1160, i64 1912, !1160, i64 1920, !1160, i64 1928, !1156, i64 1936, !1156, i64 1940, !1159, i64 1944, !1159, i64 1952, !1156, i64 1960, !1156, i64 1964, !1160, i64 1968, !1160, i64 1976, !1160, i64 1984, !1160, i64 1992, !1156, i64 2000, !1160, i64 2008, !1156, i64 2016, !1156, i64 2020, !1156, i64 2024, !1156, i64 2028, !1156, i64 2032, !1156, i64 2036, !1156, i64 2040, !1156, i64 2044, !1156, i64 2048, !1156, i64 2052, !1156, i64 2056, !1156, i64 2060, !1156, i64 2064, !1159, i64 2072, !1161, i64 2080, !1161, i64 2088, !1156, i64 2096, !1159, i64 2104, !1156, i64 2112, !1159, i64 2120, !1156, i64 2128, !1156, i64 2132, !1160, i64 2136, !1160, i64 2144, !1160, i64 2152, !1160, i64 2160, !1156, i64 2168, !1156, i64 2172, !1156, i64 2176, !1156, i64 2180, !1156, i64 2184, !1156, i64 2188, !1157, i64 2192, !1164, i64 2200, !1165, i64 2224, !1159, i64 2240, !1156, i64 2248, !1159, i64 2256, !1156, i64 2264, !1157, i64 2268, !1157, i64 2309, !1161, i64 2352, !1161, i64 2360, !1156, i64 2368, !1156, i64 2372, !1159, i64 2376, !1161, i64 2384, !1161, i64 2392, !1161, i64 2400, !1161, i64 2408, !1160, i64 2416, !1160, i64 2424, !1156, i64 2432, !1156, i64 2436, !1156, i64 2440, !1156, i64 2444, !1156, i64 2448, !1159, i64 2456, !1159, i64 2464, !1156, i64 2472, !1156, i64 2476, !1159, i64 2480, !1159, i64 2488, !1156, i64 2496, !1156, i64 2500, !1160, i64 2504, !1160, i64 2512, !1160, i64 2520, !1156, i64 2528, !1156, i64 2532, !1159, i64 2536, !1160, i64 2544, !1156, i64 2552, !1156, i64 2556, !1156, i64 2560, !1160, i64 2568, !1156, i64 2576, !1156, i64 2580, !1156, i64 2584, !1159, i64 2592, !1157, i64 2600, !1161, i64 2648, !1156, i64 2656, !1159, i64 2664, !1159, i64 2672, !1156, i64 2680, !1159, i64 2688, !1156, i64 2696, !1156, i64 2700, !1161, i64 2704, !1156, i64 2712, !1156, i64 2716, !1156, i64 2720, !1156, i64 2724, !1161, i64 2728, !1156, i64 2736, !1157, i64 2740, !1159, i64 2768, !1159, i64 2776, !1156, i64 2784, !1156, i64 2788, !1156, i64 2792, !1156, i64 2796, !1160, i64 2800, !1160, i64 2808, !1160, i64 2816, !1160, i64 2824, !1160, i64 2832, !1160, i64 2840, !1160, i64 2848, !1160, i64 2856, !1156, i64 2864, !1156, i64 2868, !1160, i64 2872, !1160, i64 2880, !1156, i64 2888, !1161, i64 2896, !1159, i64 2904, !1159, i64 2912, !1156, i64 2920, !1156, i64 2924, !1161, i64 2928, !1159, i64 2936, !1159, i64 2944, !1156, i64 2952, !1156, i64 2956, !1156, i64 2960, !1156, i64 2964, !1159, i64 2968, !1156, i64 2976, !1156, i64 2980, !1156, i64 2984, !1159, i64 2992, !1159, i64 3000, !1159, i64 3008, !1159, i64 3016, !1161, i64 3024, !1161, i64 3032, !1161, i64 3040, !1156, i64 3048, !1156, i64 3052, !1156, i64 3056, !1156, i64 3060, !1156, i64 3064, !1156, i64 3068, !1156, i64 3072, !1156, i64 3076, !1156, i64 3080, !1156, i64 3084, !1156, i64 3088, !1161, i64 3096, !1159, i64 3104, !1159, i64 3112, !1159, i64 3120, !1156, i64 3128, !1156, i64 3132, !1156, i64 3136, !1160, i64 3144, !1159, i64 3152, !1159, i64 3160, !1159, i64 3168}
!1156 = !{!"int", !1157, i64 0}
!1157 = !{!"omnipotent char", !1158, i64 0}
!1158 = !{!"Simple C/C++ TBAA"}
!1159 = !{!"any pointer", !1157, i64 0}
!1160 = !{!"long", !1157, i64 0}
!1161 = !{!"long long", !1157, i64 0}
!1162 = !{!"double", !1157, i64 0}
!1163 = !{!"malloc_stats", !1160, i64 0, !1160, i64 8, !1160, i64 16, !1160, i64 24, !1160, i64 32}
!1164 = !{!"", !1156, i64 0, !1160, i64 8, !1161, i64 16}
!1165 = !{!"redisOpArray", !1159, i64 0, !1156, i64 8}
!1166 = !DILocation(line: 2921, column: 10, scope: !1153)
!1167 = !DILocation(line: 2921, column: 9, scope: !1148)
!1168 = !DILocation(line: 2922, column: 9, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1153, file: !3, line: 2921, column: 30)
!1170 = !DILocation(line: 2923, column: 5, scope: !1169)
!1171 = !DILocation(line: 2923, column: 44, scope: !1172)
!1172 = distinct !DILexicalBlock(scope: !1153, file: !3, line: 2923, column: 16)
!1173 = !{!1174, !1159, i64 72}
!1174 = !{!"client", !1160, i64 0, !1156, i64 8, !1159, i64 16, !1159, i64 24, !1159, i64 32, !1160, i64 40, !1159, i64 48, !1160, i64 56, !1156, i64 64, !1159, i64 72, !1159, i64 80, !1159, i64 88, !1156, i64 96, !1156, i64 100, !1160, i64 104, !1159, i64 112, !1161, i64 120, !1160, i64 128, !1160, i64 136, !1160, i64 144, !1160, i64 152, !1156, i64 160, !1156, i64 164, !1156, i64 168, !1156, i64 172, !1156, i64 176, !1160, i64 184, !1160, i64 192, !1159, i64 200, !1161, i64 208, !1161, i64 216, !1161, i64 224, !1161, i64 232, !1161, i64 240, !1157, i64 248, !1156, i64 292, !1157, i64 296, !1156, i64 344, !1175, i64 352, !1156, i64 384, !1176, i64 392, !1161, i64 480, !1159, i64 488, !1159, i64 496, !1159, i64 504, !1159, i64 512, !1159, i64 520, !1156, i64 528, !1157, i64 532}
!1175 = !{!"multiState", !1159, i64 0, !1156, i64 8, !1156, i64 12, !1156, i64 16, !1160, i64 24}
!1176 = !{!"blockingState", !1161, i64 0, !1159, i64 8, !1159, i64 16, !1160, i64 24, !1159, i64 32, !1159, i64 40, !1161, i64 48, !1161, i64 56, !1156, i64 64, !1156, i64 68, !1161, i64 72, !1159, i64 80}
!1177 = !DILocation(line: 2923, column: 41, scope: !1172)
!1178 = !{!1159, !1159, i64 0}
!1179 = !DILocation(line: 2923, column: 53, scope: !1172)
!1180 = !{!1181, !1159, i64 8}
!1181 = !{!"redisObject", !1156, i64 0, !1156, i64 0, !1156, i64 1, !1156, i64 4, !1159, i64 8}
!1182 = !DILocation(line: 2923, column: 17, scope: !1172)
!1183 = !DILocation(line: 0, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1172, file: !3, line: 2923, column: 79)
!1185 = !DILocation(line: 2923, column: 16, scope: !1153)
!1186 = !DILocation(line: 2924, column: 24, scope: !1184)
!1187 = !{!1174, !1156, i64 164}
!1188 = !DILocation(line: 2925, column: 25, scope: !1184)
!1189 = !{!1190, !1159, i64 8}
!1190 = !{!"sharedObjectsStruct", !1159, i64 0, !1159, i64 8, !1159, i64 16, !1159, i64 24, !1159, i64 32, !1159, i64 40, !1159, i64 48, !1159, i64 56, !1159, i64 64, !1159, i64 72, !1159, i64 80, !1159, i64 88, !1159, i64 96, !1159, i64 104, !1159, i64 112, !1159, i64 120, !1159, i64 128, !1159, i64 136, !1159, i64 144, !1159, i64 152, !1159, i64 160, !1159, i64 168, !1159, i64 176, !1159, i64 184, !1159, i64 192, !1159, i64 200, !1159, i64 208, !1159, i64 216, !1159, i64 224, !1159, i64 232, !1159, i64 240, !1159, i64 248, !1159, i64 256, !1159, i64 264, !1159, i64 272, !1159, i64 280, !1159, i64 288, !1159, i64 296, !1159, i64 304, !1159, i64 312, !1159, i64 320, !1159, i64 328, !1159, i64 336, !1159, i64 344, !1159, i64 352, !1159, i64 360, !1157, i64 368, !1157, i64 448, !1157, i64 80448, !1157, i64 80704, !1159, i64 80960, !1159, i64 80968}
!1191 = !DILocation(line: 2925, column: 7, scope: !1184)
!1192 = !DILocation(line: 2926, column: 5, scope: !1184)
!1193 = !DILocation(line: 2927, column: 24, scope: !1194)
!1194 = distinct !DILexicalBlock(scope: !1172, file: !3, line: 2926, column: 12)
!1195 = !DILocation(line: 2928, column: 7, scope: !1194)
!1196 = !DILocation(line: 2930, column: 1, scope: !1148)
!1197 = distinct !DISubprogram(name: "pingCommand", scope: !3, file: !3, line: 2934, type: !67, isLocal: false, isDefinition: true, scopeLine: 2934, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1198)
!1198 = !{!1199}
!1199 = !DILocalVariable(name: "c", arg: 1, scope: !1197, file: !3, line: 2934, type: !69)
!1200 = !DILocation(line: 2934, column: 26, scope: !1197)
!1201 = !DILocation(line: 2936, column: 12, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2936, column: 9)
!1203 = !{!1174, !1156, i64 64}
!1204 = !DILocation(line: 2936, column: 17, scope: !1202)
!1205 = !DILocation(line: 2936, column: 9, scope: !1197)
!1206 = !DILocation(line: 2938, column: 16, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1202, file: !3, line: 2936, column: 22)
!1208 = !{!1174, !1159, i64 80}
!1209 = !DILocation(line: 2938, column: 21, scope: !1207)
!1210 = !{!1211, !1159, i64 0}
!1211 = !{!"redisCommand", !1159, i64 0, !1159, i64 8, !1156, i64 16, !1159, i64 24, !1156, i64 32, !1159, i64 40, !1156, i64 48, !1156, i64 52, !1156, i64 56, !1161, i64 64, !1161, i64 72}
!1212 = !DILocation(line: 2937, column: 9, scope: !1207)
!1213 = !DILocation(line: 2939, column: 9, scope: !1207)
!1214 = !DILocation(line: 2942, column: 12, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1197, file: !3, line: 2942, column: 9)
!1216 = !{!1174, !1156, i64 160}
!1217 = !DILocation(line: 2942, column: 18, scope: !1215)
!1218 = !DILocation(line: 2942, column: 9, scope: !1197)
!1219 = !DILocation(line: 2943, column: 20, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1215, file: !3, line: 2942, column: 35)
!1221 = !DILocation(line: 2943, column: 9, scope: !1220)
!1222 = !DILocation(line: 2944, column: 9, scope: !1220)
!1223 = !DILocation(line: 2945, column: 16, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1220, file: !3, line: 2945, column: 13)
!1225 = !DILocation(line: 2945, column: 21, scope: !1224)
!1226 = !DILocation(line: 2945, column: 13, scope: !1220)
!1227 = !DILocation(line: 2946, column: 13, scope: !1224)
!1228 = !DILocation(line: 2948, column: 31, scope: !1224)
!1229 = !DILocation(line: 2948, column: 28, scope: !1224)
!1230 = !DILocation(line: 2948, column: 13, scope: !1224)
!1231 = !DILocation(line: 2950, column: 21, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 2950, column: 13)
!1233 = distinct !DILexicalBlock(scope: !1215, file: !3, line: 2949, column: 12)
!1234 = !DILocation(line: 2950, column: 13, scope: !1233)
!1235 = !DILocation(line: 2951, column: 31, scope: !1232)
!1236 = !{!1190, !1159, i64 56}
!1237 = !DILocation(line: 2951, column: 13, scope: !1232)
!1238 = !DILocation(line: 2953, column: 31, scope: !1232)
!1239 = !DILocation(line: 2953, column: 28, scope: !1232)
!1240 = !DILocation(line: 2953, column: 13, scope: !1232)
!1241 = !DILocation(line: 2955, column: 1, scope: !1197)
!1242 = distinct !DISubprogram(name: "echoCommand", scope: !3, file: !3, line: 2957, type: !67, isLocal: false, isDefinition: true, scopeLine: 2957, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1243)
!1243 = !{!1244}
!1244 = !DILocalVariable(name: "c", arg: 1, scope: !1242, file: !3, line: 2957, type: !69)
!1245 = !DILocation(line: 2957, column: 26, scope: !1242)
!1246 = !DILocation(line: 2958, column: 23, scope: !1242)
!1247 = !DILocation(line: 2958, column: 20, scope: !1242)
!1248 = !DILocation(line: 2958, column: 5, scope: !1242)
!1249 = !DILocation(line: 2959, column: 1, scope: !1242)
!1250 = distinct !DISubprogram(name: "infoCommand", scope: !3, file: !3, line: 3667, type: !67, isLocal: false, isDefinition: true, scopeLine: 3667, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1251)
!1251 = !{!1252, !1253}
!1252 = !DILocalVariable(name: "c", arg: 1, scope: !1250, file: !3, line: 3667, type: !69)
!1253 = !DILocalVariable(name: "section", scope: !1250, file: !3, line: 3668, type: !40)
!1254 = !DILocation(line: 3667, column: 26, scope: !1250)
!1255 = !DILocation(line: 3668, column: 24, scope: !1250)
!1256 = !DILocation(line: 3668, column: 29, scope: !1250)
!1257 = !DILocation(line: 3668, column: 21, scope: !1250)
!1258 = !DILocation(line: 3668, column: 39, scope: !1250)
!1259 = !DILocation(line: 3668, column: 36, scope: !1250)
!1260 = !DILocation(line: 3668, column: 48, scope: !1250)
!1261 = !DILocation(line: 3668, column: 11, scope: !1250)
!1262 = !DILocation(line: 3670, column: 9, scope: !1250)
!1263 = !DILocation(line: 3670, column: 17, scope: !1264)
!1264 = distinct !DILexicalBlock(scope: !1250, file: !3, line: 3670, column: 9)
!1265 = !DILocation(line: 3671, column: 27, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1264, file: !3, line: 3670, column: 22)
!1267 = !{!1190, !1159, i64 128}
!1268 = !DILocation(line: 3671, column: 9, scope: !1266)
!1269 = !DILocation(line: 3672, column: 9, scope: !1266)
!1270 = !DILocation(line: 3674, column: 24, scope: !1250)
!1271 = !DILocation(line: 3674, column: 5, scope: !1250)
!1272 = !DILocation(line: 3675, column: 1, scope: !1250)
!1273 = !DILocation(line: 0, scope: !1266)
!1274 = distinct !DISubprogram(name: "monitorCommand", scope: !3, file: !3, line: 3677, type: !67, isLocal: false, isDefinition: true, scopeLine: 3677, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1275)
!1275 = !{!1276}
!1276 = !DILocalVariable(name: "c", arg: 1, scope: !1274, file: !3, line: 3677, type: !69)
!1277 = !DILocation(line: 3677, column: 29, scope: !1274)
!1278 = !DILocation(line: 3679, column: 12, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1274, file: !3, line: 3679, column: 9)
!1280 = !DILocation(line: 3679, column: 18, scope: !1279)
!1281 = !DILocation(line: 3679, column: 9, scope: !1274)
!1282 = !DILocation(line: 3681, column: 14, scope: !1274)
!1283 = !DILocation(line: 3682, column: 28, scope: !1274)
!1284 = !{!1155, !1159, i64 544}
!1285 = !DILocation(line: 3682, column: 37, scope: !1274)
!1286 = !DILocation(line: 3682, column: 5, scope: !1274)
!1287 = !DILocation(line: 3683, column: 23, scope: !1274)
!1288 = !DILocation(line: 3683, column: 5, scope: !1274)
!1289 = !DILocation(line: 3684, column: 1, scope: !1274)
!1290 = distinct !DISubprogram(name: "timeCommand", scope: !3, file: !3, line: 2961, type: !67, isLocal: false, isDefinition: true, scopeLine: 2961, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1291)
!1291 = !{!1292, !1293}
!1292 = !DILocalVariable(name: "c", arg: 1, scope: !1290, file: !3, line: 2961, type: !69)
!1293 = !DILocalVariable(name: "tv", scope: !1290, file: !3, line: 2962, type: !272)
!1294 = !DILocation(line: 2961, column: 26, scope: !1290)
!1295 = !DILocation(line: 2962, column: 20, scope: !1290)
!1296 = !DILocalVariable(name: "tv", arg: 1, scope: !1297, file: !3, line: 62, type: !271)
!1297 = distinct !DISubprogram(name: "gettimeofday_wrapper", scope: !3, file: !3, line: 62, type: !1298, isLocal: true, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1300)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!7, !271, !6}
!1300 = !{!1296, !1301, !1302, !1303, !1304}
!1301 = !DILocalVariable(name: "tz", arg: 2, scope: !1297, file: !3, line: 62, type: !6)
!1302 = !DILocalVariable(name: "now", scope: !1297, file: !3, line: 64, type: !7)
!1303 = !DILocalVariable(name: "_ptimeval", scope: !1297, file: !3, line: 65, type: !272)
!1304 = !DILocalVariable(name: "_dss__ptimeval", scope: !1297, file: !3, line: 66, type: !271)
!1305 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !1306)
!1306 = distinct !DILocation(line: 2966, column: 5, scope: !1290)
!1307 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !1306)
!1308 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !1306)
!1309 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !1306)
!1310 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !1306)
!1311 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !1306)
!1312 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !1306)
!1313 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !1306)
!1314 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !1306)
!1315 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !1306)
!1316 = !{!1317, !1160, i64 0}
!1317 = !{!"timeval", !1160, i64 0, !1160, i64 8}
!1318 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !1306)
!1319 = !{!1317, !1160, i64 8}
!1320 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !1306)
!1321 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !1306)
!1322 = !DILocation(line: 2967, column: 5, scope: !1290)
!1323 = !DILocation(line: 2968, column: 5, scope: !1290)
!1324 = !DILocation(line: 2969, column: 5, scope: !1290)
!1325 = !DILocation(line: 2970, column: 1, scope: !1290)
!1326 = distinct !DISubprogram(name: "commandCommand", scope: !3, file: !3, line: 3021, type: !67, isLocal: false, isDefinition: true, scopeLine: 3021, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1327)
!1327 = !{!1328, !1329, !1330, !1331, !1337, !1341, !1345, !1346, !1347}
!1328 = !DILocalVariable(name: "c", arg: 1, scope: !1326, file: !3, line: 3021, type: !69)
!1329 = !DILocalVariable(name: "di", scope: !1326, file: !3, line: 3022, type: !499)
!1330 = !DILocalVariable(name: "de", scope: !1326, file: !3, line: 3023, type: !123)
!1331 = !DILocalVariable(name: "help", scope: !1332, file: !3, line: 3026, type: !1334)
!1332 = distinct !DILexicalBlock(scope: !1333, file: !3, line: 3025, column: 62)
!1333 = distinct !DILexicalBlock(scope: !1326, file: !3, line: 3025, column: 9)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !425, size: 320, elements: !1335)
!1335 = !{!1336}
!1336 = !DISubrange(count: 5)
!1337 = !DILocalVariable(name: "i", scope: !1338, file: !3, line: 3042, type: !7)
!1338 = distinct !DILexicalBlock(scope: !1339, file: !3, line: 3041, column: 54)
!1339 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 3041, column: 16)
!1340 = distinct !DILexicalBlock(scope: !1333, file: !3, line: 3034, column: 16)
!1341 = !DILocalVariable(name: "cmd", scope: !1342, file: !3, line: 3050, type: !60)
!1342 = distinct !DILexicalBlock(scope: !1343, file: !3, line: 3049, column: 72)
!1343 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 3049, column: 16)
!1344 = distinct !DILexicalBlock(scope: !1339, file: !3, line: 3047, column: 16)
!1345 = !DILocalVariable(name: "keys", scope: !1342, file: !3, line: 3051, type: !259)
!1346 = !DILocalVariable(name: "numkeys", scope: !1342, file: !3, line: 3051, type: !7)
!1347 = !DILocalVariable(name: "j", scope: !1342, file: !3, line: 3051, type: !7)
!1348 = !DILocation(line: 3021, column: 29, scope: !1326)
!1349 = !DILocation(line: 3025, column: 12, scope: !1333)
!1350 = !DILocation(line: 3025, column: 17, scope: !1333)
!1351 = !DILocation(line: 3025, column: 22, scope: !1333)
!1352 = !DILocation(line: 3025, column: 40, scope: !1333)
!1353 = !DILocation(line: 3025, column: 37, scope: !1333)
!1354 = !DILocation(line: 3025, column: 49, scope: !1333)
!1355 = !DILocation(line: 3025, column: 26, scope: !1333)
!1356 = !DILocation(line: 3025, column: 9, scope: !1326)
!1357 = !DILocation(line: 3034, column: 16, scope: !1333)
!1358 = !DILocation(line: 3026, column: 9, scope: !1332)
!1359 = !DILocation(line: 3026, column: 21, scope: !1332)
!1360 = !DILocation(line: 3033, column: 9, scope: !1332)
!1361 = !DILocation(line: 3034, column: 5, scope: !1333)
!1362 = !DILocation(line: 3034, column: 5, scope: !1332)
!1363 = !DILocation(line: 3034, column: 24, scope: !1340)
!1364 = !DILocation(line: 3041, column: 31, scope: !1339)
!1365 = !DILocation(line: 3041, column: 28, scope: !1339)
!1366 = !DILocation(line: 3041, column: 40, scope: !1339)
!1367 = !DILocation(line: 3035, column: 33, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1340, file: !3, line: 3034, column: 30)
!1369 = !{!1155, !1159, i64 56}
!1370 = !{!1371, !1160, i64 24}
!1371 = !{!"dictht", !1159, i64 0, !1160, i64 8, !1160, i64 16, !1160, i64 24}
!1372 = !DILocation(line: 3035, column: 9, scope: !1368)
!1373 = !DILocation(line: 3036, column: 37, scope: !1368)
!1374 = !DILocation(line: 3036, column: 14, scope: !1368)
!1375 = !DILocation(line: 3022, column: 19, scope: !1326)
!1376 = !DILocation(line: 3037, column: 9, scope: !1368)
!1377 = !DILocation(line: 3037, column: 22, scope: !1368)
!1378 = !DILocation(line: 3023, column: 16, scope: !1326)
!1379 = !DILocation(line: 3037, column: 36, scope: !1368)
!1380 = !DILocation(line: 3038, column: 32, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1368, file: !3, line: 3037, column: 45)
!1382 = !{!1157, !1157, i64 0}
!1383 = !DILocation(line: 3038, column: 13, scope: !1381)
!1384 = distinct !{!1384, !1376, !1385}
!1385 = !DILocation(line: 3039, column: 9, scope: !1368)
!1386 = !DILocation(line: 3040, column: 9, scope: !1368)
!1387 = !DILocation(line: 3041, column: 5, scope: !1368)
!1388 = !DILocation(line: 3041, column: 17, scope: !1339)
!1389 = !DILocation(line: 3041, column: 16, scope: !1340)
!1390 = !DILocation(line: 3043, column: 40, scope: !1338)
!1391 = !DILocation(line: 3043, column: 33, scope: !1338)
!1392 = !DILocation(line: 3043, column: 9, scope: !1338)
!1393 = !DILocation(line: 3042, column: 13, scope: !1338)
!1394 = !DILocation(line: 3044, column: 14, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1338, file: !3, line: 3044, column: 9)
!1396 = !DILocation(line: 3044, column: 28, scope: !1397)
!1397 = distinct !DILexicalBlock(scope: !1395, file: !3, line: 3044, column: 9)
!1398 = !DILocation(line: 3044, column: 23, scope: !1397)
!1399 = !DILocation(line: 3044, column: 9, scope: !1395)
!1400 = !DILocation(line: 3045, column: 54, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1397, file: !3, line: 3044, column: 39)
!1402 = !DILocation(line: 3045, column: 67, scope: !1401)
!1403 = !DILocation(line: 3045, column: 64, scope: !1401)
!1404 = !DILocation(line: 3045, column: 76, scope: !1401)
!1405 = !DILocation(line: 3045, column: 32, scope: !1401)
!1406 = !DILocation(line: 3045, column: 13, scope: !1401)
!1407 = !DILocation(line: 3044, column: 35, scope: !1397)
!1408 = !DILocation(line: 3044, column: 9, scope: !1397)
!1409 = distinct !{!1409, !1399, !1410}
!1410 = !DILocation(line: 3046, column: 9, scope: !1395)
!1411 = !DILocation(line: 3047, column: 17, scope: !1344)
!1412 = !DILocation(line: 3047, column: 54, scope: !1344)
!1413 = !DILocation(line: 3047, column: 16, scope: !1339)
!1414 = !DILocation(line: 3048, column: 29, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 3047, column: 71)
!1416 = !DILocation(line: 3048, column: 9, scope: !1415)
!1417 = !DILocation(line: 3049, column: 5, scope: !1415)
!1418 = !DILocation(line: 3049, column: 17, scope: !1343)
!1419 = !DILocation(line: 3049, column: 55, scope: !1343)
!1420 = !DILocation(line: 3049, column: 66, scope: !1343)
!1421 = !DILocation(line: 3049, column: 16, scope: !1344)
!1422 = !DILocation(line: 3050, column: 50, scope: !1342)
!1423 = !DILocation(line: 3050, column: 62, scope: !1342)
!1424 = !DILocalVariable(name: "name", arg: 1, scope: !1425, file: !3, line: 2299, type: !38)
!1425 = distinct !DISubprogram(name: "lookupCommand", scope: !3, file: !3, line: 2299, type: !1426, isLocal: false, isDefinition: true, scopeLine: 2299, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1428)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!60, !38}
!1428 = !{!1424}
!1429 = !DILocation(line: 2299, column: 40, scope: !1425, inlinedAt: !1430)
!1430 = distinct !DILocation(line: 3050, column: 36, scope: !1342)
!1431 = !DILocation(line: 2300, column: 34, scope: !1425, inlinedAt: !1430)
!1432 = !DILocation(line: 2300, column: 12, scope: !1425, inlinedAt: !1430)
!1433 = !DILocation(line: 2300, column: 5, scope: !1425, inlinedAt: !1430)
!1434 = !DILocation(line: 3050, column: 30, scope: !1342)
!1435 = !DILocation(line: 3051, column: 9, scope: !1342)
!1436 = !DILocation(line: 3053, column: 14, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1342, file: !3, line: 3053, column: 13)
!1438 = !DILocation(line: 3053, column: 13, scope: !1342)
!1439 = !DILocation(line: 3054, column: 13, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !1437, file: !3, line: 3053, column: 19)
!1441 = !DILocation(line: 3055, column: 13, scope: !1440)
!1442 = !DILocation(line: 3074, column: 5, scope: !1343)
!1443 = !DILocation(line: 3056, column: 25, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1437, file: !3, line: 3056, column: 20)
!1445 = !{!1211, !1159, i64 40}
!1446 = !DILocation(line: 3056, column: 38, scope: !1444)
!1447 = !DILocation(line: 3056, column: 46, scope: !1444)
!1448 = !DILocation(line: 3056, column: 54, scope: !1444)
!1449 = !{!1211, !1156, i64 48}
!1450 = !DILocation(line: 3056, column: 63, scope: !1444)
!1451 = !DILocation(line: 3056, column: 20, scope: !1437)
!1452 = !DILocation(line: 3057, column: 13, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 3056, column: 69)
!1454 = !DILocation(line: 3058, column: 13, scope: !1453)
!1455 = !DILocation(line: 3059, column: 26, scope: !1456)
!1456 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 3059, column: 20)
!1457 = !{!1211, !1156, i64 16}
!1458 = !DILocation(line: 3059, column: 32, scope: !1456)
!1459 = !DILocation(line: 3059, column: 36, scope: !1456)
!1460 = !DILocation(line: 0, scope: !1456)
!1461 = !DILocation(line: 3059, column: 50, scope: !1456)
!1462 = !DILocation(line: 3059, column: 64, scope: !1456)
!1463 = !DILocation(line: 3060, column: 35, scope: !1456)
!1464 = !DILocation(line: 3060, column: 33, scope: !1456)
!1465 = !DILocation(line: 3059, column: 20, scope: !1444)
!1466 = !DILocation(line: 3062, column: 13, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 3061, column: 9)
!1468 = !DILocation(line: 3063, column: 13, scope: !1467)
!1469 = !DILocation(line: 3066, column: 42, scope: !1342)
!1470 = !DILocation(line: 3066, column: 46, scope: !1342)
!1471 = !DILocation(line: 3051, column: 20, scope: !1342)
!1472 = !DILocation(line: 3066, column: 16, scope: !1342)
!1473 = !DILocation(line: 3051, column: 14, scope: !1342)
!1474 = !DILocation(line: 3067, column: 14, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1342, file: !3, line: 3067, column: 13)
!1476 = !DILocation(line: 3067, column: 13, scope: !1342)
!1477 = !DILocation(line: 3068, column: 13, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1475, file: !3, line: 3067, column: 20)
!1479 = !DILocation(line: 3069, column: 9, scope: !1478)
!1480 = !DILocation(line: 3070, column: 36, scope: !1481)
!1481 = distinct !DILexicalBlock(scope: !1475, file: !3, line: 3069, column: 16)
!1482 = !{!1156, !1156, i64 0}
!1483 = !DILocation(line: 3070, column: 13, scope: !1481)
!1484 = !DILocation(line: 3051, column: 29, scope: !1342)
!1485 = !DILocation(line: 3071, column: 18, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1481, file: !3, line: 3071, column: 13)
!1487 = !DILocation(line: 3071, column: 29, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1486, file: !3, line: 3071, column: 13)
!1489 = !DILocation(line: 3071, column: 27, scope: !1488)
!1490 = !DILocation(line: 3071, column: 13, scope: !1486)
!1491 = !DILocation(line: 3071, column: 61, scope: !1488)
!1492 = !DILocation(line: 3071, column: 66, scope: !1488)
!1493 = !DILocation(line: 3071, column: 73, scope: !1488)
!1494 = !DILocation(line: 3071, column: 58, scope: !1488)
!1495 = !DILocation(line: 3071, column: 43, scope: !1488)
!1496 = !DILocation(line: 3071, column: 39, scope: !1488)
!1497 = !DILocation(line: 3071, column: 13, scope: !1488)
!1498 = distinct !{!1498, !1490, !1499}
!1499 = !DILocation(line: 3071, column: 76, scope: !1486)
!1500 = !DILocation(line: 3072, column: 13, scope: !1481)
!1501 = !DILocation(line: 3075, column: 9, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1343, file: !3, line: 3074, column: 12)
!1503 = !DILocation(line: 3077, column: 1, scope: !1326)
!1504 = distinct !DISubprogram(name: "serverLogRaw", scope: !3, file: !3, line: 358, type: !1505, isLocal: false, isDefinition: true, scopeLine: 358, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1507)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{null, !7, !425}
!1507 = !{!1508, !1509, !1510, !1515, !1516, !1712, !1713, !1714, !1715, !1718, !1719, !1720, !1721}
!1508 = !DILocalVariable(name: "level", arg: 1, scope: !1504, file: !3, line: 358, type: !7)
!1509 = !DILocalVariable(name: "msg", arg: 2, scope: !1504, file: !3, line: 358, type: !425)
!1510 = !DILocalVariable(name: "syslogLevelMap", scope: !1504, file: !3, line: 359, type: !1511)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1512, size: 128, elements: !1513)
!1512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1513 = !{!1514}
!1514 = !DISubrange(count: 4)
!1515 = !DILocalVariable(name: "c", scope: !1504, file: !3, line: 360, type: !425)
!1516 = !DILocalVariable(name: "fp", scope: !1504, file: !3, line: 361, type: !1517)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1519, line: 66, baseType: !1520)
!1519 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1521, line: 287, baseType: !1522)
!1521 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1521, line: 181, size: 1408, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1529, !1530, !1535, !1536, !1537, !1682, !1686, !1691, !1695, !1696, !1697, !1698, !1700, !1702, !1703, !1704, !1705, !1706, !1710, !1711}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1522, file: !1521, line: 182, baseType: !42, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1522, file: !1521, line: 183, baseType: !7, size: 32, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1522, file: !1521, line: 184, baseType: !7, size: 32, offset: 96)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1522, file: !1521, line: 185, baseType: !1528, size: 16, offset: 128)
!1528 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1522, file: !1521, line: 186, baseType: !1528, size: 16, offset: 144)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1522, file: !1521, line: 187, baseType: !1531, size: 128, offset: 192)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1521, line: 117, size: 128, elements: !1532)
!1532 = !{!1533, !1534}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1531, file: !1521, line: 118, baseType: !42, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1531, file: !1521, line: 119, baseType: !7, size: 32, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1522, file: !1521, line: 188, baseType: !7, size: 32, offset: 320)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1522, file: !1521, line: 195, baseType: !6, size: 64, offset: 384)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1522, file: !1521, line: 197, baseType: !1538, size: 64, offset: 448)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!449, !1541, !6, !40, !7}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1521, line: 569, size: 14912, elements: !1543)
!1543 = !{!1544, !1545, !1547, !1548, !1549, !1550, !1554, !1555, !1558, !1559, !1563, !1577, !1578, !1579, !1581, !1582, !1583, !1653, !1670, !1671, !1673, !1680}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1542, file: !1521, line: 571, baseType: !7, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1542, file: !1521, line: 576, baseType: !1546, size: 64, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1542, file: !1521, line: 576, baseType: !1546, size: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1542, file: !1521, line: 576, baseType: !1546, size: 64, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1542, file: !1521, line: 578, baseType: !7, size: 32, offset: 256)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1542, file: !1521, line: 579, baseType: !1551, size: 200, offset: 288)
!1551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 200, elements: !1552)
!1552 = !{!1553}
!1553 = !DISubrange(count: 25)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1542, file: !1521, line: 582, baseType: !7, size: 32, offset: 512)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1542, file: !1521, line: 583, baseType: !1556, size: 64, offset: 576)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1521, line: 40, flags: DIFlagFwdDecl)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1542, file: !1521, line: 585, baseType: !7, size: 32, offset: 640)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1542, file: !1521, line: 587, baseType: !1560, size: 64, offset: 704)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !1541}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1542, file: !1521, line: 590, baseType: !1564, size: 64, offset: 768)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1521, line: 47, size: 256, elements: !1566)
!1566 = !{!1567, !1568, !1569, !1570, !1571, !1572}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1565, file: !1521, line: 49, baseType: !1564, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1565, file: !1521, line: 50, baseType: !7, size: 32, offset: 64)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1565, file: !1521, line: 50, baseType: !7, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1565, file: !1521, line: 50, baseType: !7, size: 32, offset: 128)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1565, file: !1521, line: 50, baseType: !7, size: 32, offset: 160)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1565, file: !1521, line: 51, baseType: !1573, size: 32, offset: 192)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 32, elements: !1575)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1521, line: 25, baseType: !50)
!1575 = !{!1576}
!1576 = !DISubrange(count: 1)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1542, file: !1521, line: 591, baseType: !7, size: 32, offset: 832)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1542, file: !1521, line: 592, baseType: !1564, size: 64, offset: 896)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1542, file: !1521, line: 593, baseType: !1580, size: 64, offset: 960)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1542, file: !1521, line: 596, baseType: !7, size: 32, offset: 1024)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1542, file: !1521, line: 597, baseType: !40, size: 64, offset: 1088)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !1542, file: !1521, line: 632, baseType: !1584, size: 2880, offset: 1152)
!1584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1542, file: !1521, line: 599, size: 2880, elements: !1585)
!1585 = !{!1586, !1644}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !1584, file: !1521, line: 622, baseType: !1587, size: 1728)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1584, file: !1521, line: 601, size: 1728, elements: !1588)
!1588 = !{!1589, !1590, !1591, !1595, !1607, !1608, !1609, !1616, !1629, !1630, !1631, !1633, !1637, !1638, !1639, !1640, !1641, !1642, !1643}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !1587, file: !1521, line: 603, baseType: !50, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1587, file: !1521, line: 604, baseType: !40, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1587, file: !1521, line: 605, baseType: !1592, size: 208, offset: 128)
!1592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 208, elements: !1593)
!1593 = !{!1594}
!1594 = !DISubrange(count: 26)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1587, file: !1521, line: 606, baseType: !1596, size: 288, offset: 352)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1521, line: 55, size: 288, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1596, file: !1521, line: 57, baseType: !7, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1596, file: !1521, line: 58, baseType: !7, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1596, file: !1521, line: 59, baseType: !7, size: 32, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1596, file: !1521, line: 60, baseType: !7, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1596, file: !1521, line: 61, baseType: !7, size: 32, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1596, file: !1521, line: 62, baseType: !7, size: 32, offset: 160)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1596, file: !1521, line: 63, baseType: !7, size: 32, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1596, file: !1521, line: 64, baseType: !7, size: 32, offset: 224)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1596, file: !1521, line: 65, baseType: !7, size: 32, offset: 256)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1587, file: !1521, line: 607, baseType: !7, size: 32, offset: 640)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1587, file: !1521, line: 608, baseType: !56, size: 64, offset: 704)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1587, file: !1521, line: 609, baseType: !1610, size: 112, offset: 768)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1521, line: 319, size: 112, elements: !1611)
!1611 = !{!1612, !1614, !1615}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1610, file: !1521, line: 320, baseType: !1613, size: 48)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 48, elements: !812)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1610, file: !1521, line: 321, baseType: !1613, size: 48, offset: 48)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1610, file: !1521, line: 322, baseType: !295, size: 16, offset: 96)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1587, file: !1521, line: 610, baseType: !1617, size: 64, offset: 896)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !160, line: 171, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 163, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1618, file: !160, line: 165, baseType: !7, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1618, file: !160, line: 170, baseType: !1622, size: 32, offset: 32)
!1622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1618, file: !160, line: 166, size: 32, elements: !1623)
!1623 = !{!1624, !1627}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1622, file: !160, line: 168, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1626, line: 124, baseType: !50)
!1626 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1622, file: !160, line: 169, baseType: !1628, size: 32)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 32, elements: !1513)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1587, file: !1521, line: 611, baseType: !1617, size: 64, offset: 960)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1587, file: !1521, line: 612, baseType: !1617, size: 64, offset: 1024)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1587, file: !1521, line: 613, baseType: !1632, size: 64, offset: 1088)
!1632 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 64, elements: !1136)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1587, file: !1521, line: 614, baseType: !1634, size: 192, offset: 1152)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 192, elements: !1635)
!1635 = !{!1636}
!1636 = !DISubrange(count: 24)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1587, file: !1521, line: 615, baseType: !7, size: 32, offset: 1344)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1587, file: !1521, line: 616, baseType: !1617, size: 64, offset: 1376)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1587, file: !1521, line: 617, baseType: !1617, size: 64, offset: 1440)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1587, file: !1521, line: 618, baseType: !1617, size: 64, offset: 1504)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1587, file: !1521, line: 619, baseType: !1617, size: 64, offset: 1568)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1587, file: !1521, line: 620, baseType: !1617, size: 64, offset: 1632)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !1587, file: !1521, line: 621, baseType: !7, size: 32, offset: 1696)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1584, file: !1521, line: 631, baseType: !1645, size: 2880)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1584, file: !1521, line: 626, size: 2880, elements: !1646)
!1646 = !{!1647, !1651}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !1645, file: !1521, line: 629, baseType: !1648, size: 1920)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 1920, elements: !1649)
!1649 = !{!1650}
!1650 = !DISubrange(count: 30)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !1645, file: !1521, line: 630, baseType: !1652, size: 960, offset: 1920)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !50, size: 960, elements: !1649)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1542, file: !1521, line: 636, baseType: !1654, size: 64, offset: 4032)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1521, line: 93, size: 6336, elements: !1656)
!1656 = !{!1657, !1658, !1659, !1662}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1655, file: !1521, line: 94, baseType: !1654, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1655, file: !1521, line: 95, baseType: !7, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1655, file: !1521, line: 97, baseType: !1660, size: 2048, offset: 128)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1661, size: 2048, elements: !591)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !1655, file: !1521, line: 98, baseType: !1663, size: 4160, offset: 2176)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1521, line: 74, size: 4160, elements: !1664)
!1664 = !{!1665, !1667, !1668, !1669}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1663, file: !1521, line: 75, baseType: !1666, size: 2048)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, elements: !591)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1663, file: !1521, line: 76, baseType: !1666, size: 2048, offset: 2048)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1663, file: !1521, line: 78, baseType: !1574, size: 32, offset: 4096)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1663, file: !1521, line: 81, baseType: !1574, size: 32, offset: 4128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1542, file: !1521, line: 637, baseType: !1655, size: 6336, offset: 4096)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1542, file: !1521, line: 641, baseType: !1672, size: 64, offset: 10432)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1542, file: !1521, line: 646, baseType: !1674, size: 192, offset: 10496)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1521, line: 291, size: 192, elements: !1675)
!1675 = !{!1676, !1678, !1679}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1674, file: !1521, line: 293, baseType: !1677, size: 64)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1674, file: !1521, line: 294, baseType: !7, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1674, file: !1521, line: 295, baseType: !1546, size: 64, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1542, file: !1521, line: 648, baseType: !1681, size: 4224, offset: 10688)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1520, size: 4224, elements: !812)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1522, file: !1521, line: 199, baseType: !1683, size: 64, offset: 512)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DISubroutineType(types: !1685)
!1685 = !{!449, !1541, !6, !425, !7}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1522, file: !1521, line: 202, baseType: !1687, size: 64, offset: 576)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!1690, !1541, !6, !1690, !7}
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !160, line: 114, baseType: !55)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1522, file: !1521, line: 203, baseType: !1692, size: 64, offset: 640)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!7, !1541, !6}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1522, file: !1521, line: 206, baseType: !1531, size: 128, offset: 704)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1522, file: !1521, line: 207, baseType: !42, size: 64, offset: 832)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1522, file: !1521, line: 208, baseType: !7, size: 32, offset: 896)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1522, file: !1521, line: 211, baseType: !1699, size: 24, offset: 928)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 24, elements: !812)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1522, file: !1521, line: 212, baseType: !1701, size: 8, offset: 952)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 8, elements: !1575)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1522, file: !1521, line: 215, baseType: !1531, size: 128, offset: 960)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1522, file: !1521, line: 218, baseType: !7, size: 32, offset: 1088)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1522, file: !1521, line: 219, baseType: !188, size: 64, offset: 1152)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1522, file: !1521, line: 222, baseType: !1541, size: 64, offset: 1216)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1522, file: !1521, line: 226, baseType: !1707, size: 32, offset: 1280)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !160, line: 175, baseType: !1708)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !1709, line: 12, baseType: !7)
!1709 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1522, file: !1521, line: 228, baseType: !1617, size: 64, offset: 1312)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1522, file: !1521, line: 229, baseType: !7, size: 32, offset: 1376)
!1712 = !DILocalVariable(name: "buf", scope: !1504, file: !3, line: 362, type: !413)
!1713 = !DILocalVariable(name: "rawmode", scope: !1504, file: !3, line: 363, type: !7)
!1714 = !DILocalVariable(name: "log_to_stdout", scope: !1504, file: !3, line: 364, type: !7)
!1715 = !DILocalVariable(name: "off", scope: !1716, file: !3, line: 375, type: !7)
!1716 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 374, column: 12)
!1717 = distinct !DILexicalBlock(scope: !1504, file: !3, line: 372, column: 9)
!1718 = !DILocalVariable(name: "tv", scope: !1716, file: !3, line: 376, type: !272)
!1719 = !DILocalVariable(name: "role_char", scope: !1716, file: !3, line: 377, type: !7)
!1720 = !DILocalVariable(name: "pid", scope: !1716, file: !3, line: 378, type: !609)
!1721 = !DILocalVariable(name: "tm", scope: !1716, file: !3, line: 381, type: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !1723, line: 31, size: 448, elements: !1724)
!1723 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/musl-imported/include/time.h", directory: "/root/.unikraft/apps/redis/build")
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !1722, file: !1723, line: 32, baseType: !7, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !1722, file: !1723, line: 33, baseType: !7, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !1722, file: !1723, line: 34, baseType: !7, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !1722, file: !1723, line: 35, baseType: !7, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !1722, file: !1723, line: 36, baseType: !7, size: 32, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !1722, file: !1723, line: 37, baseType: !7, size: 32, offset: 160)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !1722, file: !1723, line: 38, baseType: !7, size: 32, offset: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !1722, file: !1723, line: 39, baseType: !7, size: 32, offset: 224)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !1722, file: !1723, line: 40, baseType: !7, size: 32, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !1722, file: !1723, line: 41, baseType: !55, size: 64, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !1722, file: !1723, line: 42, baseType: !425, size: 64, offset: 384)
!1736 = !DILocation(line: 358, column: 23, scope: !1504)
!1737 = !DILocation(line: 358, column: 42, scope: !1504)
!1738 = !DILocation(line: 359, column: 15, scope: !1504)
!1739 = !DILocation(line: 362, column: 5, scope: !1504)
!1740 = !DILocation(line: 362, column: 10, scope: !1504)
!1741 = !DILocation(line: 363, column: 26, scope: !1504)
!1742 = !DILocation(line: 363, column: 9, scope: !1504)
!1743 = !DILocation(line: 364, column: 32, scope: !1504)
!1744 = !{!1155, !1159, i64 2240}
!1745 = !DILocation(line: 364, column: 25, scope: !1504)
!1746 = !DILocation(line: 364, column: 43, scope: !1504)
!1747 = !DILocation(line: 366, column: 11, scope: !1504)
!1748 = !DILocation(line: 367, column: 24, scope: !1749)
!1749 = distinct !DILexicalBlock(scope: !1504, file: !3, line: 367, column: 9)
!1750 = !{!1155, !1156, i64 1728}
!1751 = !DILocation(line: 367, column: 15, scope: !1749)
!1752 = !DILocation(line: 367, column: 9, scope: !1504)
!1753 = !DILocation(line: 0, scope: !1504)
!1754 = !DILocation(line: 369, column: 10, scope: !1504)
!1755 = !DILocation(line: 369, column: 26, scope: !1504)
!1756 = !{!1757, !1159, i64 16}
!1757 = !{!"_reent", !1156, i64 0, !1159, i64 8, !1159, i64 16, !1159, i64 24, !1156, i64 32, !1157, i64 36, !1156, i64 64, !1159, i64 72, !1156, i64 80, !1159, i64 88, !1159, i64 96, !1156, i64 104, !1159, i64 112, !1159, i64 120, !1156, i64 128, !1159, i64 136, !1157, i64 144, !1159, i64 504, !1758, i64 512, !1159, i64 1304, !1760, i64 1312, !1157, i64 1336}
!1758 = !{!"_atexit", !1159, i64 0, !1156, i64 8, !1157, i64 16, !1759, i64 272}
!1759 = !{!"_on_exit_args", !1157, i64 0, !1157, i64 256, !1156, i64 512, !1156, i64 516}
!1760 = !{!"_glue", !1159, i64 0, !1156, i64 8, !1159, i64 16}
!1761 = !DILocation(line: 369, column: 35, scope: !1504)
!1762 = !DILocation(line: 361, column: 11, scope: !1504)
!1763 = !DILocation(line: 370, column: 10, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1504, file: !3, line: 370, column: 9)
!1765 = !DILocation(line: 370, column: 9, scope: !1504)
!1766 = !DILocation(line: 372, column: 9, scope: !1717)
!1767 = !DILocation(line: 372, column: 9, scope: !1504)
!1768 = !DILocation(line: 373, column: 9, scope: !1769)
!1769 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 372, column: 18)
!1770 = !DILocation(line: 374, column: 5, scope: !1769)
!1771 = !DILocation(line: 378, column: 21, scope: !1716)
!1772 = !DILocation(line: 378, column: 15, scope: !1716)
!1773 = !DILocation(line: 376, column: 24, scope: !1716)
!1774 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !1775)
!1775 = distinct !DILocation(line: 380, column: 9, scope: !1716)
!1776 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !1775)
!1777 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !1775)
!1778 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !1775)
!1779 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !1775)
!1780 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !1775)
!1781 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !1775)
!1782 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !1775)
!1783 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !1775)
!1784 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !1775)
!1785 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !1775)
!1786 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !1775)
!1787 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !1775)
!1788 = !DILocation(line: 381, column: 9, scope: !1716)
!1789 = !DILocation(line: 382, column: 48, scope: !1716)
!1790 = !{!1155, !1160, i64 2880}
!1791 = !DILocation(line: 382, column: 64, scope: !1716)
!1792 = !{!1155, !1156, i64 2888}
!1793 = !DILocation(line: 381, column: 19, scope: !1716)
!1794 = !DILocation(line: 382, column: 9, scope: !1716)
!1795 = !DILocation(line: 383, column: 15, scope: !1716)
!1796 = !DILocation(line: 384, column: 21, scope: !1716)
!1797 = !DILocation(line: 384, column: 37, scope: !1716)
!1798 = !DILocation(line: 384, column: 49, scope: !1716)
!1799 = !DILocation(line: 384, column: 64, scope: !1716)
!1800 = !DILocation(line: 384, column: 9, scope: !1716)
!1801 = !DILocation(line: 385, column: 20, scope: !1802)
!1802 = distinct !DILexicalBlock(scope: !1716, file: !3, line: 385, column: 13)
!1803 = !{!1155, !1156, i64 164}
!1804 = !DILocation(line: 385, column: 13, scope: !1802)
!1805 = !DILocation(line: 385, column: 13, scope: !1716)
!1806 = !DILocation(line: 387, column: 34, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1802, file: !3, line: 387, column: 20)
!1808 = !{!1155, !1156, i64 0}
!1809 = !DILocation(line: 387, column: 24, scope: !1807)
!1810 = !DILocation(line: 387, column: 20, scope: !1802)
!1811 = !DILocation(line: 390, column: 33, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1807, file: !3, line: 389, column: 16)
!1813 = !{!1155, !1159, i64 2464}
!1814 = !DILocation(line: 390, column: 26, scope: !1812)
!1815 = !DILocation(line: 377, column: 13, scope: !1716)
!1816 = !DILocation(line: 0, scope: !1812)
!1817 = !DILocation(line: 393, column: 18, scope: !1716)
!1818 = !DILocation(line: 393, column: 42, scope: !1716)
!1819 = !DILocation(line: 392, column: 9, scope: !1716)
!1820 = !DILocation(line: 394, column: 5, scope: !1717)
!1821 = !DILocation(line: 395, column: 5, scope: !1504)
!1822 = !DILocation(line: 397, column: 9, scope: !1504)
!1823 = !DILocation(line: 397, column: 25, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1504, file: !3, line: 397, column: 9)
!1825 = !DILocation(line: 398, column: 16, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1504, file: !3, line: 398, column: 9)
!1827 = !{!1155, !1156, i64 2248}
!1828 = !DILocation(line: 398, column: 9, scope: !1826)
!1829 = !DILocation(line: 398, column: 9, scope: !1504)
!1830 = !DILocation(line: 398, column: 39, scope: !1826)
!1831 = !DILocation(line: 398, column: 32, scope: !1826)
!1832 = !DILocation(line: 0, scope: !1764)
!1833 = !DILocation(line: 399, column: 1, scope: !1504)
!1834 = distinct !DISubprogram(name: "serverLog", scope: !3, file: !3, line: 404, type: !1835, isLocal: false, isDefinition: true, scopeLine: 404, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1837)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !7, !425, null}
!1837 = !{!1838, !1839, !1840, !1852}
!1838 = !DILocalVariable(name: "level", arg: 1, scope: !1834, file: !3, line: 404, type: !7)
!1839 = !DILocalVariable(name: "fmt", arg: 2, scope: !1834, file: !3, line: 404, type: !425)
!1840 = !DILocalVariable(name: "ap", scope: !1834, file: !3, line: 405, type: !1841)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1519, line: 46, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1843, line: 51, baseType: !1844)
!1843 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 405, baseType: !1845)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1846, size: 192, elements: !1575)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 405, size: 192, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1846, file: !3, line: 405, baseType: !50, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1846, file: !3, line: 405, baseType: !50, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1846, file: !3, line: 405, baseType: !6, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1846, file: !3, line: 405, baseType: !6, size: 64, offset: 128)
!1852 = !DILocalVariable(name: "msg", scope: !1834, file: !3, line: 406, type: !1853)
!1853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 8192, elements: !1854)
!1854 = !{!1855}
!1855 = !DISubrange(count: 1024)
!1856 = !DILocation(line: 404, column: 20, scope: !1834)
!1857 = !DILocation(line: 404, column: 39, scope: !1834)
!1858 = !DILocation(line: 405, column: 5, scope: !1834)
!1859 = !DILocation(line: 405, column: 13, scope: !1834)
!1860 = !DILocation(line: 406, column: 5, scope: !1834)
!1861 = !DILocation(line: 406, column: 10, scope: !1834)
!1862 = !DILocation(line: 408, column: 15, scope: !1863)
!1863 = distinct !DILexicalBlock(scope: !1834, file: !3, line: 408, column: 9)
!1864 = !DILocation(line: 408, column: 31, scope: !1863)
!1865 = !DILocation(line: 408, column: 22, scope: !1863)
!1866 = !DILocation(line: 408, column: 9, scope: !1834)
!1867 = !DILocation(line: 410, column: 5, scope: !1834)
!1868 = !DILocation(line: 411, column: 5, scope: !1834)
!1869 = !DILocation(line: 412, column: 5, scope: !1834)
!1870 = !DILocation(line: 414, column: 5, scope: !1834)
!1871 = !DILocation(line: 415, column: 1, scope: !1834)
!1872 = !DILocation(line: 0, scope: !1863)
!1873 = distinct !DISubprogram(name: "serverLogFromHandler", scope: !3, file: !3, line: 423, type: !1505, isLocal: false, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1874)
!1874 = !{!1875, !1876, !1877, !1878, !1879}
!1875 = !DILocalVariable(name: "level", arg: 1, scope: !1873, file: !3, line: 423, type: !7)
!1876 = !DILocalVariable(name: "msg", arg: 2, scope: !1873, file: !3, line: 423, type: !425)
!1877 = !DILocalVariable(name: "fd", scope: !1873, file: !3, line: 424, type: !7)
!1878 = !DILocalVariable(name: "log_to_stdout", scope: !1873, file: !3, line: 425, type: !7)
!1879 = !DILocalVariable(name: "buf", scope: !1873, file: !3, line: 426, type: !413)
!1880 = !DILocation(line: 423, column: 31, scope: !1873)
!1881 = !DILocation(line: 423, column: 50, scope: !1873)
!1882 = !DILocation(line: 425, column: 32, scope: !1873)
!1883 = !DILocation(line: 425, column: 25, scope: !1873)
!1884 = !DILocation(line: 425, column: 43, scope: !1873)
!1885 = !DILocation(line: 426, column: 5, scope: !1873)
!1886 = !DILocation(line: 426, column: 10, scope: !1873)
!1887 = !DILocation(line: 428, column: 15, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 428, column: 9)
!1889 = !DILocation(line: 428, column: 31, scope: !1888)
!1890 = !DILocation(line: 428, column: 22, scope: !1888)
!1891 = !DILocation(line: 428, column: 41, scope: !1888)
!1892 = !DILocation(line: 428, column: 69, scope: !1888)
!1893 = !DILocation(line: 428, column: 62, scope: !1888)
!1894 = !DILocation(line: 428, column: 59, scope: !1888)
!1895 = !DILocation(line: 430, column: 10, scope: !1873)
!1896 = !DILocation(line: 424, column: 9, scope: !1873)
!1897 = !DILocation(line: 432, column: 9, scope: !1873)
!1898 = !DILocation(line: 431, column: 26, scope: !1873)
!1899 = !DILocation(line: 432, column: 12, scope: !1900)
!1900 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 432, column: 9)
!1901 = !DILocation(line: 433, column: 31, scope: !1873)
!1902 = !DILocation(line: 433, column: 5, scope: !1873)
!1903 = !DILocation(line: 434, column: 22, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 434, column: 9)
!1905 = !DILocation(line: 434, column: 9, scope: !1904)
!1906 = !DILocation(line: 434, column: 35, scope: !1904)
!1907 = !DILocation(line: 434, column: 9, scope: !1873)
!1908 = !DILocation(line: 435, column: 9, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 435, column: 9)
!1910 = !DILocation(line: 435, column: 42, scope: !1909)
!1911 = !DILocation(line: 435, column: 9, scope: !1873)
!1912 = !DILocation(line: 436, column: 31, scope: !1873)
!1913 = !DILocation(line: 436, column: 5, scope: !1873)
!1914 = !DILocation(line: 437, column: 22, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 437, column: 9)
!1916 = !DILocation(line: 437, column: 9, scope: !1915)
!1917 = !DILocation(line: 437, column: 35, scope: !1915)
!1918 = !DILocation(line: 437, column: 9, scope: !1873)
!1919 = !DILocation(line: 438, column: 9, scope: !1920)
!1920 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 438, column: 9)
!1921 = !DILocation(line: 438, column: 26, scope: !1920)
!1922 = !DILocation(line: 438, column: 9, scope: !1873)
!1923 = !DILocation(line: 439, column: 22, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 439, column: 9)
!1925 = !DILocation(line: 439, column: 9, scope: !1924)
!1926 = !DILocation(line: 439, column: 35, scope: !1924)
!1927 = !DILocation(line: 439, column: 9, scope: !1873)
!1928 = !DILocation(line: 440, column: 9, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 440, column: 9)
!1930 = !DILocation(line: 440, column: 33, scope: !1929)
!1931 = !DILocation(line: 442, column: 9, scope: !1873)
!1932 = !DILocation(line: 442, column: 25, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1873, file: !3, line: 442, column: 9)
!1934 = !DILocation(line: 0, scope: !1888)
!1935 = !DILocation(line: 443, column: 1, scope: !1873)
!1936 = distinct !DISubprogram(name: "ustime", scope: !3, file: !3, line: 446, type: !1937, isLocal: false, isDefinition: true, scopeLine: 446, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!8}
!1939 = !{!1940, !1941}
!1940 = !DILocalVariable(name: "tv", scope: !1936, file: !3, line: 447, type: !272)
!1941 = !DILocalVariable(name: "ust", scope: !1936, file: !3, line: 448, type: !8)
!1942 = !DILocation(line: 447, column: 20, scope: !1936)
!1943 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !1944)
!1944 = distinct !DILocation(line: 450, column: 5, scope: !1936)
!1945 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !1944)
!1946 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !1944)
!1947 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !1944)
!1948 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !1944)
!1949 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !1944)
!1950 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !1944)
!1951 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !1944)
!1952 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !1944)
!1953 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !1944)
!1954 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !1944)
!1955 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !1944)
!1956 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !1944)
!1957 = !DILocation(line: 451, column: 33, scope: !1936)
!1958 = !DILocation(line: 448, column: 15, scope: !1936)
!1959 = !DILocation(line: 452, column: 9, scope: !1936)
!1960 = !DILocation(line: 453, column: 5, scope: !1936)
!1961 = distinct !DISubprogram(name: "mstime", scope: !3, file: !3, line: 457, type: !1937, isLocal: false, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1962 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !1963)
!1963 = distinct !DILocation(line: 458, column: 12, scope: !1961)
!1964 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !1965)
!1965 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !1963)
!1966 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !1965)
!1967 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !1965)
!1968 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !1965)
!1969 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !1965)
!1970 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !1965)
!1971 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !1965)
!1972 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !1965)
!1973 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !1965)
!1974 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !1965)
!1975 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !1965)
!1976 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !1965)
!1977 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !1965)
!1978 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !1963)
!1979 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !1963)
!1980 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !1963)
!1981 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !1963)
!1982 = !DILocation(line: 458, column: 20, scope: !1961)
!1983 = !DILocation(line: 458, column: 5, scope: !1961)
!1984 = distinct !DISubprogram(name: "exitFromChild", scope: !3, file: !3, line: 465, type: !58, isLocal: false, isDefinition: true, scopeLine: 465, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1985)
!1985 = !{!1986}
!1986 = !DILocalVariable(name: "retcode", arg: 1, scope: !1984, file: !3, line: 465, type: !7)
!1987 = !DILocation(line: 465, column: 24, scope: !1984)
!1988 = !DILocation(line: 469, column: 5, scope: !1984)
!1989 = distinct !DISubprogram(name: "dictVanillaFree", scope: !3, file: !3, line: 479, type: !112, isLocal: false, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1990)
!1990 = !{!1991, !1992}
!1991 = !DILocalVariable(name: "privdata", arg: 1, scope: !1989, file: !3, line: 479, type: !6)
!1992 = !DILocalVariable(name: "val", arg: 2, scope: !1989, file: !3, line: 479, type: !6)
!1993 = !DILocation(line: 479, column: 28, scope: !1989)
!1994 = !DILocation(line: 479, column: 44, scope: !1989)
!1995 = !DILocation(line: 482, column: 5, scope: !1989)
!1996 = !DILocation(line: 483, column: 1, scope: !1989)
!1997 = distinct !DISubprogram(name: "dictListDestructor", scope: !3, file: !3, line: 485, type: !112, isLocal: false, isDefinition: true, scopeLine: 486, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1998)
!1998 = !{!1999, !2000}
!1999 = !DILocalVariable(name: "privdata", arg: 1, scope: !1997, file: !3, line: 485, type: !6)
!2000 = !DILocalVariable(name: "val", arg: 2, scope: !1997, file: !3, line: 485, type: !6)
!2001 = !DILocation(line: 485, column: 31, scope: !1997)
!2002 = !DILocation(line: 485, column: 47, scope: !1997)
!2003 = !DILocation(line: 488, column: 17, scope: !1997)
!2004 = !DILocation(line: 488, column: 5, scope: !1997)
!2005 = !DILocation(line: 489, column: 1, scope: !1997)
!2006 = distinct !DISubprogram(name: "dictSdsKeyCompare", scope: !3, file: !3, line: 491, type: !108, isLocal: false, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2007)
!2007 = !{!2008, !2009, !2010, !2011, !2012}
!2008 = !DILocalVariable(name: "privdata", arg: 1, scope: !2006, file: !3, line: 491, type: !6)
!2009 = !DILocalVariable(name: "key1", arg: 2, scope: !2006, file: !3, line: 491, type: !99)
!2010 = !DILocalVariable(name: "key2", arg: 3, scope: !2006, file: !3, line: 492, type: !99)
!2011 = !DILocalVariable(name: "l1", scope: !2006, file: !3, line: 494, type: !7)
!2012 = !DILocalVariable(name: "l2", scope: !2006, file: !3, line: 494, type: !7)
!2013 = !DILocation(line: 491, column: 29, scope: !2006)
!2014 = !DILocation(line: 491, column: 51, scope: !2006)
!2015 = !DILocation(line: 492, column: 21, scope: !2006)
!2016 = !DILocalVariable(name: "s", arg: 1, scope: !2017, file: !39, line: 87, type: !2021)
!2017 = distinct !DISubprogram(name: "sdslen", scope: !39, file: !39, line: 87, type: !2018, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2022)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1626, line: 58, baseType: !37)
!2021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !38)
!2022 = !{!2016, !2023}
!2023 = !DILocalVariable(name: "flags", scope: !2017, file: !39, line: 88, type: !43)
!2024 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2025)
!2025 = distinct !DILocation(line: 497, column: 10, scope: !2006)
!2026 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2025)
!2027 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2025)
!2028 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2025)
!2029 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2025)
!2030 = distinct !DILexicalBlock(scope: !2017, file: !39, line: 89, column: 33)
!2031 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2025)
!2032 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2025)
!2033 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2025)
!2034 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2025)
!2035 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2025)
!2036 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2025)
!2037 = !{!2038, !2038, i64 0}
!2038 = !{!"short", !1157, i64 0}
!2039 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2025)
!2040 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2025)
!2041 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2025)
!2042 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2025)
!2043 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2025)
!2044 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2025)
!2045 = !{!1160, !1160, i64 0}
!2046 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2025)
!2047 = !DILocation(line: 0, scope: !2030, inlinedAt: !2025)
!2048 = !DILocation(line: 0, scope: !2006)
!2049 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2025)
!2050 = !DILocation(line: 497, column: 10, scope: !2006)
!2051 = !DILocation(line: 494, column: 9, scope: !2006)
!2052 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2053)
!2053 = distinct !DILocation(line: 498, column: 10, scope: !2006)
!2054 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2053)
!2055 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2053)
!2056 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2053)
!2057 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2053)
!2058 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2053)
!2059 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2053)
!2060 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2053)
!2061 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2053)
!2062 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2053)
!2063 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2053)
!2064 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2053)
!2065 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2053)
!2066 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2053)
!2067 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2053)
!2068 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2053)
!2069 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2053)
!2070 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2053)
!2071 = !DILocation(line: 0, scope: !2030, inlinedAt: !2053)
!2072 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2053)
!2073 = !DILocation(line: 498, column: 10, scope: !2006)
!2074 = !DILocation(line: 494, column: 12, scope: !2006)
!2075 = !DILocation(line: 499, column: 12, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 499, column: 9)
!2077 = !DILocation(line: 499, column: 9, scope: !2006)
!2078 = !DILocation(line: 500, column: 31, scope: !2006)
!2079 = !DILocation(line: 500, column: 12, scope: !2006)
!2080 = !DILocation(line: 500, column: 35, scope: !2006)
!2081 = !DILocation(line: 500, column: 5, scope: !2006)
!2082 = !DILocation(line: 0, scope: !2076)
!2083 = !DILocation(line: 501, column: 1, scope: !2006)
!2084 = distinct !DISubprogram(name: "dictSdsKeyCaseCompare", scope: !3, file: !3, line: 505, type: !108, isLocal: false, isDefinition: true, scopeLine: 507, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2085)
!2085 = !{!2086, !2087, !2088}
!2086 = !DILocalVariable(name: "privdata", arg: 1, scope: !2084, file: !3, line: 505, type: !6)
!2087 = !DILocalVariable(name: "key1", arg: 2, scope: !2084, file: !3, line: 505, type: !99)
!2088 = !DILocalVariable(name: "key2", arg: 3, scope: !2084, file: !3, line: 506, type: !99)
!2089 = !DILocation(line: 505, column: 33, scope: !2084)
!2090 = !DILocation(line: 505, column: 55, scope: !2084)
!2091 = !DILocation(line: 506, column: 21, scope: !2084)
!2092 = !DILocation(line: 510, column: 12, scope: !2084)
!2093 = !DILocation(line: 510, column: 35, scope: !2084)
!2094 = !DILocation(line: 510, column: 5, scope: !2084)
!2095 = distinct !DISubprogram(name: "dictObjectDestructor", scope: !3, file: !3, line: 513, type: !112, isLocal: false, isDefinition: true, scopeLine: 514, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2096)
!2096 = !{!2097, !2098}
!2097 = !DILocalVariable(name: "privdata", arg: 1, scope: !2095, file: !3, line: 513, type: !6)
!2098 = !DILocalVariable(name: "val", arg: 2, scope: !2095, file: !3, line: 513, type: !6)
!2099 = !DILocation(line: 513, column: 33, scope: !2095)
!2100 = !DILocation(line: 513, column: 49, scope: !2095)
!2101 = !DILocation(line: 517, column: 13, scope: !2102)
!2102 = distinct !DILexicalBlock(scope: !2095, file: !3, line: 517, column: 9)
!2103 = !DILocation(line: 517, column: 9, scope: !2095)
!2104 = !DILocation(line: 518, column: 18, scope: !2095)
!2105 = !DILocation(line: 518, column: 5, scope: !2095)
!2106 = !DILocation(line: 519, column: 1, scope: !2095)
!2107 = distinct !DISubprogram(name: "dictSdsDestructor", scope: !3, file: !3, line: 521, type: !112, isLocal: false, isDefinition: true, scopeLine: 522, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2108)
!2108 = !{!2109, !2110}
!2109 = !DILocalVariable(name: "privdata", arg: 1, scope: !2107, file: !3, line: 521, type: !6)
!2110 = !DILocalVariable(name: "val", arg: 2, scope: !2107, file: !3, line: 521, type: !6)
!2111 = !DILocation(line: 521, column: 30, scope: !2107)
!2112 = !DILocation(line: 521, column: 46, scope: !2107)
!2113 = !DILocation(line: 525, column: 5, scope: !2107)
!2114 = !DILocation(line: 526, column: 1, scope: !2107)
!2115 = distinct !DISubprogram(name: "dictObjKeyCompare", scope: !3, file: !3, line: 528, type: !108, isLocal: false, isDefinition: true, scopeLine: 530, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2116)
!2116 = !{!2117, !2118, !2119, !2120, !2123}
!2117 = !DILocalVariable(name: "privdata", arg: 1, scope: !2115, file: !3, line: 528, type: !6)
!2118 = !DILocalVariable(name: "key1", arg: 2, scope: !2115, file: !3, line: 528, type: !99)
!2119 = !DILocalVariable(name: "key2", arg: 3, scope: !2115, file: !3, line: 529, type: !99)
!2120 = !DILocalVariable(name: "o1", scope: !2115, file: !3, line: 531, type: !2121)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!2123 = !DILocalVariable(name: "o2", scope: !2115, file: !3, line: 531, type: !2121)
!2124 = !DILocation(line: 528, column: 29, scope: !2115)
!2125 = !DILocation(line: 528, column: 51, scope: !2115)
!2126 = !DILocation(line: 529, column: 21, scope: !2115)
!2127 = !DILocation(line: 531, column: 17, scope: !2115)
!2128 = !DILocation(line: 531, column: 29, scope: !2115)
!2129 = !DILocation(line: 532, column: 43, scope: !2115)
!2130 = !DILocation(line: 532, column: 51, scope: !2115)
!2131 = !DILocation(line: 532, column: 12, scope: !2115)
!2132 = !DILocation(line: 532, column: 5, scope: !2115)
!2133 = distinct !DISubprogram(name: "dictObjHash", scope: !3, file: !3, line: 535, type: !97, isLocal: false, isDefinition: true, scopeLine: 535, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2134)
!2134 = !{!2135, !2136}
!2135 = !DILocalVariable(name: "key", arg: 1, scope: !2133, file: !3, line: 535, type: !99)
!2136 = !DILocalVariable(name: "o", scope: !2133, file: !3, line: 536, type: !2121)
!2137 = !DILocation(line: 535, column: 34, scope: !2133)
!2138 = !DILocation(line: 536, column: 17, scope: !2133)
!2139 = !DILocation(line: 537, column: 35, scope: !2133)
!2140 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2141)
!2141 = distinct !DILocation(line: 537, column: 40, scope: !2133)
!2142 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2141)
!2143 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2141)
!2144 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2141)
!2145 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2141)
!2146 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2141)
!2147 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2141)
!2148 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2141)
!2149 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2141)
!2150 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2141)
!2151 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2141)
!2152 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2141)
!2153 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2141)
!2154 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2141)
!2155 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2141)
!2156 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2141)
!2157 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2141)
!2158 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2141)
!2159 = !DILocation(line: 0, scope: !2030, inlinedAt: !2141)
!2160 = !DILocation(line: 0, scope: !2133)
!2161 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2141)
!2162 = !DILocation(line: 537, column: 40, scope: !2133)
!2163 = !DILocation(line: 537, column: 12, scope: !2133)
!2164 = !DILocation(line: 537, column: 5, scope: !2133)
!2165 = distinct !DISubprogram(name: "dictSdsHash", scope: !3, file: !3, line: 540, type: !97, isLocal: false, isDefinition: true, scopeLine: 540, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2166)
!2166 = !{!2167}
!2167 = !DILocalVariable(name: "key", arg: 1, scope: !2165, file: !3, line: 540, type: !99)
!2168 = !DILocation(line: 540, column: 34, scope: !2165)
!2169 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2170)
!2170 = distinct !DILocation(line: 541, column: 53, scope: !2165)
!2171 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2170)
!2172 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2170)
!2173 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2170)
!2174 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2170)
!2175 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2170)
!2176 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2170)
!2177 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2170)
!2178 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2170)
!2179 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2170)
!2180 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2170)
!2181 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2170)
!2182 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2170)
!2183 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2170)
!2184 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2170)
!2185 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2170)
!2186 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2170)
!2187 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2170)
!2188 = !DILocation(line: 0, scope: !2030, inlinedAt: !2170)
!2189 = !DILocation(line: 0, scope: !2165)
!2190 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2170)
!2191 = !DILocation(line: 541, column: 53, scope: !2165)
!2192 = !DILocation(line: 541, column: 12, scope: !2165)
!2193 = !DILocation(line: 541, column: 5, scope: !2165)
!2194 = distinct !DISubprogram(name: "dictSdsCaseHash", scope: !3, file: !3, line: 544, type: !97, isLocal: false, isDefinition: true, scopeLine: 544, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2195)
!2195 = !{!2196}
!2196 = !DILocalVariable(name: "key", arg: 1, scope: !2194, file: !3, line: 544, type: !99)
!2197 = !DILocation(line: 544, column: 38, scope: !2194)
!2198 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2199)
!2199 = distinct !DILocation(line: 545, column: 57, scope: !2194)
!2200 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2199)
!2201 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2199)
!2202 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2199)
!2203 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2199)
!2204 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2199)
!2205 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2199)
!2206 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2199)
!2207 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2199)
!2208 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2199)
!2209 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2199)
!2210 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2199)
!2211 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2199)
!2212 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2199)
!2213 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2199)
!2214 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2199)
!2215 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2199)
!2216 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2199)
!2217 = !DILocation(line: 0, scope: !2030, inlinedAt: !2199)
!2218 = !DILocation(line: 0, scope: !2194)
!2219 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2199)
!2220 = !DILocation(line: 545, column: 57, scope: !2194)
!2221 = !DILocation(line: 545, column: 12, scope: !2194)
!2222 = !DILocation(line: 545, column: 5, scope: !2194)
!2223 = distinct !DISubprogram(name: "dictEncObjKeyCompare", scope: !3, file: !3, line: 548, type: !108, isLocal: false, isDefinition: true, scopeLine: 550, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2229, !2230}
!2225 = !DILocalVariable(name: "privdata", arg: 1, scope: !2223, file: !3, line: 548, type: !6)
!2226 = !DILocalVariable(name: "key1", arg: 2, scope: !2223, file: !3, line: 548, type: !99)
!2227 = !DILocalVariable(name: "key2", arg: 3, scope: !2223, file: !3, line: 549, type: !99)
!2228 = !DILocalVariable(name: "o1", scope: !2223, file: !3, line: 551, type: !44)
!2229 = !DILocalVariable(name: "o2", scope: !2223, file: !3, line: 551, type: !44)
!2230 = !DILocalVariable(name: "cmp", scope: !2223, file: !3, line: 552, type: !7)
!2231 = !DILocation(line: 548, column: 32, scope: !2223)
!2232 = !DILocation(line: 548, column: 54, scope: !2223)
!2233 = !DILocation(line: 549, column: 21, scope: !2223)
!2234 = !DILocation(line: 551, column: 16, scope: !2223)
!2235 = !DILocation(line: 551, column: 11, scope: !2223)
!2236 = !DILocation(line: 551, column: 36, scope: !2223)
!2237 = !DILocation(line: 551, column: 31, scope: !2223)
!2238 = !DILocation(line: 554, column: 13, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2223, file: !3, line: 554, column: 9)
!2240 = !DILocation(line: 554, column: 22, scope: !2239)
!2241 = !DILocation(line: 554, column: 42, scope: !2239)
!2242 = !DILocation(line: 555, column: 13, scope: !2239)
!2243 = !DILocation(line: 555, column: 22, scope: !2239)
!2244 = !DILocation(line: 554, column: 9, scope: !2223)
!2245 = !DILocation(line: 556, column: 24, scope: !2239)
!2246 = !DILocation(line: 556, column: 35, scope: !2239)
!2247 = !DILocation(line: 556, column: 28, scope: !2239)
!2248 = !DILocation(line: 556, column: 13, scope: !2239)
!2249 = !DILocation(line: 558, column: 10, scope: !2223)
!2250 = !DILocation(line: 559, column: 10, scope: !2223)
!2251 = !DILocation(line: 560, column: 42, scope: !2223)
!2252 = !DILocation(line: 560, column: 50, scope: !2223)
!2253 = !DILocation(line: 560, column: 11, scope: !2223)
!2254 = !DILocation(line: 552, column: 9, scope: !2223)
!2255 = !DILocation(line: 561, column: 5, scope: !2223)
!2256 = !DILocation(line: 562, column: 5, scope: !2223)
!2257 = !DILocation(line: 563, column: 5, scope: !2223)
!2258 = !DILocation(line: 0, scope: !2223)
!2259 = !DILocation(line: 0, scope: !2239)
!2260 = !DILocation(line: 564, column: 1, scope: !2223)
!2261 = distinct !DISubprogram(name: "dictEncObjHash", scope: !3, file: !3, line: 566, type: !97, isLocal: false, isDefinition: true, scopeLine: 566, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2262)
!2262 = !{!2263, !2264, !2265, !2271, !2272}
!2263 = !DILocalVariable(name: "key", arg: 1, scope: !2261, file: !3, line: 566, type: !99)
!2264 = !DILocalVariable(name: "o", scope: !2261, file: !3, line: 567, type: !44)
!2265 = !DILocalVariable(name: "buf", scope: !2266, file: !3, line: 573, type: !2270)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 572, column: 46)
!2267 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 572, column: 13)
!2268 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 571, column: 12)
!2269 = distinct !DILexicalBlock(scope: !2261, file: !3, line: 569, column: 9)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 256, elements: !591)
!2271 = !DILocalVariable(name: "len", scope: !2266, file: !3, line: 574, type: !7)
!2272 = !DILocalVariable(name: "hash", scope: !2273, file: !3, line: 579, type: !74)
!2273 = distinct !DILexicalBlock(scope: !2267, file: !3, line: 578, column: 16)
!2274 = !DILocation(line: 566, column: 37, scope: !2261)
!2275 = !DILocation(line: 567, column: 15, scope: !2261)
!2276 = !DILocation(line: 567, column: 11, scope: !2261)
!2277 = !DILocation(line: 569, column: 9, scope: !2269)
!2278 = !DILocation(line: 569, column: 9, scope: !2261)
!2279 = !DILocation(line: 570, column: 39, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 569, column: 30)
!2281 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2282)
!2282 = distinct !DILocation(line: 570, column: 44, scope: !2280)
!2283 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2282)
!2284 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2282)
!2285 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2282)
!2286 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2282)
!2287 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2282)
!2288 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2282)
!2289 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2282)
!2290 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2282)
!2291 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2282)
!2292 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2282)
!2293 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2282)
!2294 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2282)
!2295 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2282)
!2296 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2282)
!2297 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2282)
!2298 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2282)
!2299 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2282)
!2300 = !DILocation(line: 0, scope: !2030, inlinedAt: !2282)
!2301 = !DILocation(line: 0, scope: !2280)
!2302 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2282)
!2303 = !DILocation(line: 570, column: 44, scope: !2280)
!2304 = !DILocation(line: 570, column: 16, scope: !2280)
!2305 = !DILocation(line: 570, column: 9, scope: !2280)
!2306 = !DILocation(line: 572, column: 25, scope: !2267)
!2307 = !DILocation(line: 572, column: 13, scope: !2268)
!2308 = !DILocation(line: 573, column: 13, scope: !2266)
!2309 = !DILocation(line: 573, column: 18, scope: !2266)
!2310 = !DILocation(line: 576, column: 45, scope: !2266)
!2311 = !DILocation(line: 576, column: 19, scope: !2266)
!2312 = !DILocation(line: 574, column: 17, scope: !2266)
!2313 = !DILocation(line: 577, column: 20, scope: !2266)
!2314 = !DILocation(line: 578, column: 9, scope: !2267)
!2315 = !DILocation(line: 581, column: 17, scope: !2273)
!2316 = !DILocation(line: 582, column: 43, scope: !2273)
!2317 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2318)
!2318 = distinct !DILocation(line: 582, column: 48, scope: !2273)
!2319 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2318)
!2320 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2318)
!2321 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2318)
!2322 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2318)
!2323 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2318)
!2324 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2318)
!2325 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2318)
!2326 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2318)
!2327 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2318)
!2328 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2318)
!2329 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2318)
!2330 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2318)
!2331 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2318)
!2332 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2318)
!2333 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2318)
!2334 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2318)
!2335 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2318)
!2336 = !DILocation(line: 0, scope: !2030, inlinedAt: !2318)
!2337 = !DILocation(line: 0, scope: !2273)
!2338 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2318)
!2339 = !DILocation(line: 582, column: 48, scope: !2273)
!2340 = !DILocation(line: 582, column: 20, scope: !2273)
!2341 = !DILocation(line: 579, column: 22, scope: !2273)
!2342 = !DILocation(line: 583, column: 13, scope: !2273)
!2343 = !DILocation(line: 587, column: 1, scope: !2261)
!2344 = distinct !DISubprogram(name: "htNeedsResize", scope: !3, file: !3, line: 750, type: !2345, isLocal: false, isDefinition: true, scopeLine: 750, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2347)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!7, !85}
!2347 = !{!2348, !2349, !2350}
!2348 = !DILocalVariable(name: "dict", arg: 1, scope: !2344, file: !3, line: 750, type: !85)
!2349 = !DILocalVariable(name: "size", scope: !2344, file: !3, line: 751, type: !8)
!2350 = !DILocalVariable(name: "used", scope: !2344, file: !3, line: 751, type: !8)
!2351 = !DILocation(line: 750, column: 25, scope: !2344)
!2352 = !DILocation(line: 753, column: 12, scope: !2344)
!2353 = !{!1371, !1160, i64 8}
!2354 = !DILocation(line: 751, column: 15, scope: !2344)
!2355 = !DILocation(line: 754, column: 12, scope: !2344)
!2356 = !DILocation(line: 755, column: 18, scope: !2344)
!2357 = !DILocation(line: 755, column: 41, scope: !2344)
!2358 = !DILocation(line: 751, column: 21, scope: !2344)
!2359 = !DILocation(line: 756, column: 18, scope: !2344)
!2360 = !DILocation(line: 756, column: 22, scope: !2344)
!2361 = !DILocation(line: 756, column: 28, scope: !2344)
!2362 = !DILocation(line: 755, column: 5, scope: !2344)
!2363 = distinct !DISubprogram(name: "tryResizeHashTables", scope: !3, file: !3, line: 761, type: !58, isLocal: false, isDefinition: true, scopeLine: 761, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2364)
!2364 = !{!2365}
!2365 = !DILocalVariable(name: "dbid", arg: 1, scope: !2363, file: !3, line: 761, type: !7)
!2366 = !DILocation(line: 761, column: 30, scope: !2363)
!2367 = !DILocation(line: 762, column: 30, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 762, column: 9)
!2369 = !{!1155, !1159, i64 48}
!2370 = !DILocation(line: 762, column: 23, scope: !2368)
!2371 = !DILocation(line: 762, column: 39, scope: !2368)
!2372 = !{!2373, !1159, i64 0}
!2373 = !{!"redisDb", !1159, i64 0, !1159, i64 8, !1159, i64 16, !1159, i64 24, !1159, i64 32, !1156, i64 40, !1161, i64 48, !1159, i64 56}
!2374 = !DILocation(line: 750, column: 25, scope: !2344, inlinedAt: !2375)
!2375 = distinct !DILocation(line: 762, column: 9, scope: !2368)
!2376 = !DILocation(line: 753, column: 12, scope: !2344, inlinedAt: !2375)
!2377 = !DILocation(line: 751, column: 15, scope: !2344, inlinedAt: !2375)
!2378 = !DILocation(line: 754, column: 12, scope: !2344, inlinedAt: !2375)
!2379 = !DILocation(line: 755, column: 18, scope: !2344, inlinedAt: !2375)
!2380 = !DILocation(line: 755, column: 41, scope: !2344, inlinedAt: !2375)
!2381 = !DILocation(line: 755, column: 5, scope: !2344, inlinedAt: !2375)
!2382 = !DILocation(line: 762, column: 9, scope: !2363)
!2383 = !DILocation(line: 751, column: 21, scope: !2344, inlinedAt: !2375)
!2384 = !DILocation(line: 756, column: 18, scope: !2344, inlinedAt: !2375)
!2385 = !DILocation(line: 756, column: 22, scope: !2344, inlinedAt: !2375)
!2386 = !DILocation(line: 756, column: 28, scope: !2344, inlinedAt: !2375)
!2387 = !DILocation(line: 763, column: 9, scope: !2368)
!2388 = !DILocation(line: 764, column: 30, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 764, column: 9)
!2390 = !DILocation(line: 764, column: 39, scope: !2389)
!2391 = !{!2373, !1159, i64 8}
!2392 = !DILocation(line: 750, column: 25, scope: !2344, inlinedAt: !2393)
!2393 = distinct !DILocation(line: 764, column: 9, scope: !2389)
!2394 = !DILocation(line: 753, column: 12, scope: !2344, inlinedAt: !2393)
!2395 = !DILocation(line: 751, column: 15, scope: !2344, inlinedAt: !2393)
!2396 = !DILocation(line: 754, column: 12, scope: !2344, inlinedAt: !2393)
!2397 = !DILocation(line: 755, column: 18, scope: !2344, inlinedAt: !2393)
!2398 = !DILocation(line: 755, column: 41, scope: !2344, inlinedAt: !2393)
!2399 = !DILocation(line: 755, column: 5, scope: !2344, inlinedAt: !2393)
!2400 = !DILocation(line: 764, column: 9, scope: !2363)
!2401 = !DILocation(line: 751, column: 21, scope: !2344, inlinedAt: !2393)
!2402 = !DILocation(line: 756, column: 18, scope: !2344, inlinedAt: !2393)
!2403 = !DILocation(line: 756, column: 22, scope: !2344, inlinedAt: !2393)
!2404 = !DILocation(line: 756, column: 28, scope: !2344, inlinedAt: !2393)
!2405 = !DILocation(line: 765, column: 9, scope: !2389)
!2406 = !DILocation(line: 0, scope: !2389)
!2407 = !DILocation(line: 766, column: 1, scope: !2363)
!2408 = distinct !DISubprogram(name: "incrementallyRehash", scope: !3, file: !3, line: 775, type: !2409, isLocal: false, isDefinition: true, scopeLine: 775, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2411)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{!7, !7}
!2411 = !{!2412}
!2412 = !DILocalVariable(name: "dbid", arg: 1, scope: !2408, file: !3, line: 775, type: !7)
!2413 = !DILocation(line: 775, column: 29, scope: !2408)
!2414 = !DILocation(line: 777, column: 9, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 777, column: 9)
!2416 = !{!2417, !1160, i64 80}
!2417 = !{!"dict", !1159, i64 0, !1159, i64 8, !1157, i64 16, !1160, i64 80, !1160, i64 88}
!2418 = !DILocation(line: 777, column: 9, scope: !2408)
!2419 = !DILocation(line: 778, column: 9, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2415, file: !3, line: 777, column: 48)
!2421 = !DILocation(line: 779, column: 9, scope: !2420)
!2422 = !DILocation(line: 782, column: 9, scope: !2423)
!2423 = distinct !DILexicalBlock(scope: !2408, file: !3, line: 782, column: 9)
!2424 = !DILocation(line: 782, column: 9, scope: !2408)
!2425 = !DILocation(line: 783, column: 9, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 782, column: 51)
!2427 = !DILocation(line: 784, column: 9, scope: !2426)
!2428 = !DILocation(line: 0, scope: !2408)
!2429 = !DILocation(line: 0, scope: !2420)
!2430 = !DILocation(line: 787, column: 1, scope: !2408)
!2431 = distinct !DISubprogram(name: "updateDictResizePolicy", scope: !3, file: !3, line: 795, type: !349, isLocal: false, isDefinition: true, scopeLine: 795, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!2432 = !DILocation(line: 796, column: 16, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 796, column: 9)
!2434 = !{!1155, !1156, i64 2096}
!2435 = !DILocation(line: 796, column: 46, scope: !2433)
!2436 = !DILocation(line: 796, column: 36, scope: !2433)
!2437 = !DILocation(line: 797, column: 9, scope: !2433)
!2438 = !DILocation(line: 799, column: 9, scope: !2433)
!2439 = !DILocation(line: 800, column: 1, scope: !2431)
!2440 = distinct !DISubprogram(name: "trackInstantaneousMetric", scope: !3, file: !3, line: 805, type: !2441, isLocal: false, isDefinition: true, scopeLine: 805, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2443)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{null, !7, !8}
!2443 = !{!2444, !2445, !2446, !2447, !2448}
!2444 = !DILocalVariable(name: "metric", arg: 1, scope: !2440, file: !3, line: 805, type: !7)
!2445 = !DILocalVariable(name: "current_reading", arg: 2, scope: !2440, file: !3, line: 805, type: !8)
!2446 = !DILocalVariable(name: "t", scope: !2440, file: !3, line: 806, type: !8)
!2447 = !DILocalVariable(name: "ops", scope: !2440, file: !3, line: 807, type: !8)
!2448 = !DILocalVariable(name: "ops_sec", scope: !2440, file: !3, line: 809, type: !8)
!2449 = !DILocation(line: 805, column: 35, scope: !2440)
!2450 = !DILocation(line: 805, column: 53, scope: !2440)
!2451 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !2452)
!2452 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !2453)
!2453 = distinct !DILocation(line: 806, column: 19, scope: !2440)
!2454 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !2455)
!2455 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !2452)
!2456 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !2455)
!2457 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !2455)
!2458 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !2455)
!2459 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !2455)
!2460 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !2455)
!2461 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !2455)
!2462 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !2455)
!2463 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !2455)
!2464 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !2455)
!2465 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !2455)
!2466 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !2455)
!2467 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !2455)
!2468 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !2452)
!2469 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !2452)
!2470 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !2452)
!2471 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !2452)
!2472 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !2453)
!2473 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !2453)
!2474 = !DILocation(line: 806, column: 30, scope: !2440)
!2475 = !DILocation(line: 806, column: 57, scope: !2440)
!2476 = !{!2477, !1161, i64 0}
!2477 = !{!"", !1161, i64 0, !1161, i64 8, !1157, i64 16, !1156, i64 144}
!2478 = !DILocation(line: 806, column: 28, scope: !2440)
!2479 = !DILocation(line: 806, column: 15, scope: !2440)
!2480 = !DILocation(line: 808, column: 48, scope: !2440)
!2481 = !{!2477, !1161, i64 8}
!2482 = !DILocation(line: 811, column: 17, scope: !2440)
!2483 = !DILocation(line: 811, column: 15, scope: !2440)
!2484 = !DILocation(line: 807, column: 37, scope: !2440)
!2485 = !DILocation(line: 807, column: 15, scope: !2440)
!2486 = !DILocation(line: 811, column: 27, scope: !2440)
!2487 = !DILocation(line: 811, column: 32, scope: !2440)
!2488 = !DILocation(line: 809, column: 15, scope: !2440)
!2489 = !DILocation(line: 813, column: 67, scope: !2440)
!2490 = !{!2477, !1156, i64 144}
!2491 = !DILocation(line: 813, column: 5, scope: !2440)
!2492 = !DILocation(line: 813, column: 72, scope: !2440)
!2493 = !{!1161, !1161, i64 0}
!2494 = !DILocation(line: 815, column: 35, scope: !2440)
!2495 = !DILocation(line: 816, column: 36, scope: !2440)
!2496 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !2497)
!2497 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !2498)
!2498 = distinct !DILocation(line: 817, column: 51, scope: !2440)
!2499 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !2500)
!2500 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !2497)
!2501 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !2500)
!2502 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !2500)
!2503 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !2500)
!2504 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !2500)
!2505 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !2500)
!2506 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !2500)
!2507 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !2500)
!2508 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !2500)
!2509 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !2500)
!2510 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !2500)
!2511 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !2500)
!2512 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !2500)
!2513 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !2497)
!2514 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !2497)
!2515 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !2497)
!2516 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !2497)
!2517 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !2498)
!2518 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !2498)
!2519 = !DILocation(line: 817, column: 49, scope: !2440)
!2520 = !DILocation(line: 818, column: 50, scope: !2440)
!2521 = !DILocation(line: 819, column: 1, scope: !2440)
!2522 = distinct !DISubprogram(name: "getInstantaneousMetric", scope: !3, file: !3, line: 822, type: !2523, isLocal: false, isDefinition: true, scopeLine: 822, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2525)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!8, !7}
!2525 = !{!2526, !2527, !2528}
!2526 = !DILocalVariable(name: "metric", arg: 1, scope: !2522, file: !3, line: 822, type: !7)
!2527 = !DILocalVariable(name: "j", scope: !2522, file: !3, line: 823, type: !7)
!2528 = !DILocalVariable(name: "sum", scope: !2522, file: !3, line: 824, type: !8)
!2529 = !DILocation(line: 822, column: 38, scope: !2522)
!2530 = !DILocation(line: 824, column: 15, scope: !2522)
!2531 = !DILocation(line: 823, column: 9, scope: !2522)
!2532 = !DILocation(line: 826, column: 10, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 826, column: 5)
!2534 = !DILocation(line: 826, column: 5, scope: !2533)
!2535 = !DILocation(line: 827, column: 16, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 826, column: 5)
!2537 = !DILocation(line: 826, column: 5, scope: !2536)
!2538 = !DILocation(line: 827, column: 13, scope: !2536)
!2539 = !DILocation(line: 828, column: 16, scope: !2522)
!2540 = !DILocation(line: 828, column: 5, scope: !2522)
!2541 = distinct !DISubprogram(name: "clientsCronHandleTimeout", scope: !3, file: !3, line: 835, type: !2542, isLocal: false, isDefinition: true, scopeLine: 835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2544)
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!7, !69, !228}
!2544 = !{!2545, !2546, !2547}
!2545 = !DILocalVariable(name: "c", arg: 1, scope: !2541, file: !3, line: 835, type: !69)
!2546 = !DILocalVariable(name: "now_ms", arg: 2, scope: !2541, file: !3, line: 835, type: !228)
!2547 = !DILocalVariable(name: "now", scope: !2541, file: !3, line: 836, type: !175)
!2548 = !DILocation(line: 835, column: 38, scope: !2541)
!2549 = !DILocation(line: 835, column: 50, scope: !2541)
!2550 = !DILocation(line: 836, column: 24, scope: !2541)
!2551 = !DILocation(line: 836, column: 12, scope: !2541)
!2552 = !DILocation(line: 838, column: 16, scope: !2553)
!2553 = distinct !DILexicalBlock(scope: !2541, file: !3, line: 838, column: 9)
!2554 = !{!1155, !1156, i64 1732}
!2555 = !DILocation(line: 838, column: 9, scope: !2553)
!2556 = !DILocation(line: 838, column: 28, scope: !2553)
!2557 = !DILocation(line: 0, scope: !2553)
!2558 = !DILocation(line: 839, column: 20, scope: !2553)
!2559 = !DILocation(line: 839, column: 36, scope: !2553)
!2560 = !DILocation(line: 840, column: 20, scope: !2553)
!2561 = !DILocation(line: 840, column: 37, scope: !2553)
!2562 = !DILocation(line: 841, column: 20, scope: !2553)
!2563 = !DILocation(line: 841, column: 38, scope: !2553)
!2564 = !DILocation(line: 842, column: 20, scope: !2553)
!2565 = !DILocation(line: 842, column: 37, scope: !2553)
!2566 = !DILocation(line: 843, column: 19, scope: !2553)
!2567 = !{!1174, !1160, i64 144}
!2568 = !DILocation(line: 843, column: 14, scope: !2553)
!2569 = !DILocation(line: 843, column: 37, scope: !2553)
!2570 = !DILocation(line: 843, column: 35, scope: !2553)
!2571 = !DILocation(line: 838, column: 9, scope: !2541)
!2572 = !DILocation(line: 845, column: 9, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2553, file: !3, line: 844, column: 5)
!2574 = !DILocation(line: 846, column: 9, scope: !2573)
!2575 = !DILocation(line: 847, column: 9, scope: !2573)
!2576 = !DILocation(line: 848, column: 25, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2553, file: !3, line: 848, column: 16)
!2578 = !DILocation(line: 848, column: 16, scope: !2553)
!2579 = !DILocation(line: 853, column: 21, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2581, file: !3, line: 853, column: 13)
!2581 = distinct !DILexicalBlock(scope: !2577, file: !3, line: 848, column: 43)
!2582 = !{!1174, !1161, i64 392}
!2583 = !DILocation(line: 853, column: 29, scope: !2580)
!2584 = !DILocation(line: 853, column: 34, scope: !2580)
!2585 = !DILocation(line: 853, column: 53, scope: !2580)
!2586 = !DILocation(line: 853, column: 13, scope: !2581)
!2587 = !DILocation(line: 855, column: 13, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 853, column: 63)
!2589 = !DILocation(line: 856, column: 13, scope: !2588)
!2590 = !DILocation(line: 857, column: 9, scope: !2588)
!2591 = !DILocation(line: 857, column: 27, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 857, column: 20)
!2593 = !{!1155, !1156, i64 2924}
!2594 = !DILocation(line: 857, column: 20, scope: !2592)
!2595 = !DILocation(line: 857, column: 20, scope: !2580)
!2596 = !DILocation(line: 860, column: 17, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2598, file: !3, line: 860, column: 17)
!2598 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 857, column: 44)
!2599 = !DILocation(line: 860, column: 17, scope: !2598)
!2600 = !DILocation(line: 861, column: 17, scope: !2597)
!2601 = !DILocation(line: 0, scope: !2573)
!2602 = !DILocation(line: 865, column: 1, scope: !2541)
!2603 = distinct !DISubprogram(name: "clientsCronResizeQueryBuffer", scope: !3, file: !3, line: 871, type: !2604, isLocal: false, isDefinition: true, scopeLine: 871, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2606)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!7, !69}
!2606 = !{!2607, !2608, !2609, !2610}
!2607 = !DILocalVariable(name: "c", arg: 1, scope: !2603, file: !3, line: 871, type: !69)
!2608 = !DILocalVariable(name: "querybuf_size", scope: !2603, file: !3, line: 872, type: !157)
!2609 = !DILocalVariable(name: "idletime", scope: !2603, file: !3, line: 873, type: !175)
!2610 = !DILocalVariable(name: "pending_querybuf_size", scope: !2611, file: !3, line: 901, type: !157)
!2611 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 897, column: 35)
!2612 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 897, column: 9)
!2613 = !DILocation(line: 871, column: 42, scope: !2603)
!2614 = !DILocation(line: 872, column: 44, scope: !2603)
!2615 = !{!1174, !1159, i64 32}
!2616 = !DILocation(line: 872, column: 28, scope: !2603)
!2617 = !DILocation(line: 872, column: 12, scope: !2603)
!2618 = !DILocation(line: 873, column: 30, scope: !2603)
!2619 = !{!1155, !1160, i64 2872}
!2620 = !DILocation(line: 873, column: 44, scope: !2603)
!2621 = !DILocation(line: 878, column: 23, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 878, column: 9)
!2623 = !DILocation(line: 878, column: 45, scope: !2622)
!2624 = !DILocation(line: 890, column: 8, scope: !2603)
!2625 = !DILocation(line: 873, column: 39, scope: !2603)
!2626 = !DILocation(line: 873, column: 12, scope: !2603)
!2627 = !DILocation(line: 879, column: 30, scope: !2622)
!2628 = !{!1174, !1160, i64 56}
!2629 = !DILocation(line: 879, column: 43, scope: !2622)
!2630 = !DILocation(line: 879, column: 25, scope: !2622)
!2631 = !DILocation(line: 879, column: 48, scope: !2622)
!2632 = !DILocation(line: 880, column: 20, scope: !2622)
!2633 = !DILocation(line: 879, column: 52, scope: !2622)
!2634 = !DILocation(line: 884, column: 25, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2636, file: !3, line: 884, column: 13)
!2636 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 881, column: 5)
!2637 = !DILocalVariable(name: "s", arg: 1, scope: !2638, file: !39, line: 104, type: !2021)
!2638 = distinct !DISubprogram(name: "sdsavail", scope: !39, file: !39, line: 104, type: !2018, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2639)
!2639 = !{!2637, !2640, !2641, !2644, !2646, !2648}
!2640 = !DILocalVariable(name: "flags", scope: !2638, file: !39, line: 105, type: !43)
!2641 = !DILocalVariable(name: "sh", scope: !2642, file: !39, line: 111, type: !279)
!2642 = distinct !DILexicalBlock(scope: !2643, file: !39, line: 110, column: 26)
!2643 = distinct !DILexicalBlock(scope: !2638, file: !39, line: 106, column: 33)
!2644 = !DILocalVariable(name: "sh", scope: !2645, file: !39, line: 115, type: !289)
!2645 = distinct !DILexicalBlock(scope: !2643, file: !39, line: 114, column: 27)
!2646 = !DILocalVariable(name: "sh", scope: !2647, file: !39, line: 119, type: !299)
!2647 = distinct !DILexicalBlock(scope: !2643, file: !39, line: 118, column: 27)
!2648 = !DILocalVariable(name: "sh", scope: !2649, file: !39, line: 123, type: !308)
!2649 = distinct !DILexicalBlock(scope: !2643, file: !39, line: 122, column: 27)
!2650 = !DILocation(line: 104, column: 41, scope: !2638, inlinedAt: !2651)
!2651 = distinct !DILocation(line: 884, column: 13, scope: !2635)
!2652 = !DILocation(line: 105, column: 27, scope: !2638, inlinedAt: !2651)
!2653 = !DILocation(line: 105, column: 19, scope: !2638, inlinedAt: !2651)
!2654 = !DILocation(line: 106, column: 5, scope: !2638, inlinedAt: !2651)
!2655 = !DILocation(line: 111, column: 13, scope: !2642, inlinedAt: !2651)
!2656 = !DILocation(line: 112, column: 24, scope: !2642, inlinedAt: !2651)
!2657 = !DILocation(line: 112, column: 20, scope: !2642, inlinedAt: !2651)
!2658 = !DILocation(line: 112, column: 36, scope: !2642, inlinedAt: !2651)
!2659 = !DILocation(line: 112, column: 32, scope: !2642, inlinedAt: !2651)
!2660 = !DILocation(line: 112, column: 30, scope: !2642, inlinedAt: !2651)
!2661 = !DILocation(line: 115, column: 13, scope: !2645, inlinedAt: !2651)
!2662 = !DILocation(line: 116, column: 24, scope: !2645, inlinedAt: !2651)
!2663 = !DILocation(line: 116, column: 20, scope: !2645, inlinedAt: !2651)
!2664 = !DILocation(line: 116, column: 36, scope: !2645, inlinedAt: !2651)
!2665 = !DILocation(line: 116, column: 32, scope: !2645, inlinedAt: !2651)
!2666 = !DILocation(line: 116, column: 30, scope: !2645, inlinedAt: !2651)
!2667 = !DILocation(line: 119, column: 13, scope: !2647, inlinedAt: !2651)
!2668 = !DILocation(line: 120, column: 24, scope: !2647, inlinedAt: !2651)
!2669 = !DILocation(line: 120, column: 36, scope: !2647, inlinedAt: !2651)
!2670 = !DILocation(line: 120, column: 30, scope: !2647, inlinedAt: !2651)
!2671 = !DILocation(line: 120, column: 20, scope: !2647, inlinedAt: !2651)
!2672 = !DILocation(line: 123, column: 13, scope: !2649, inlinedAt: !2651)
!2673 = !DILocation(line: 124, column: 24, scope: !2649, inlinedAt: !2651)
!2674 = !DILocation(line: 124, column: 36, scope: !2649, inlinedAt: !2651)
!2675 = !DILocation(line: 124, column: 30, scope: !2649, inlinedAt: !2651)
!2676 = !DILocation(line: 0, scope: !2635)
!2677 = !DILocation(line: 128, column: 1, scope: !2638, inlinedAt: !2651)
!2678 = !DILocation(line: 884, column: 13, scope: !2636)
!2679 = !DILocation(line: 0, scope: !2680, inlinedAt: !2651)
!2680 = distinct !DILexicalBlock(scope: !2643, file: !39, line: 107, column: 26)
!2681 = !DILocation(line: 884, column: 35, scope: !2635)
!2682 = !DILocation(line: 885, column: 27, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2635, file: !3, line: 884, column: 45)
!2684 = !DILocation(line: 885, column: 25, scope: !2683)
!2685 = !DILocation(line: 886, column: 9, scope: !2683)
!2686 = !DILocation(line: 890, column: 22, scope: !2603)
!2687 = !DILocation(line: 897, column: 12, scope: !2612)
!2688 = !DILocation(line: 897, column: 18, scope: !2612)
!2689 = !DILocation(line: 897, column: 9, scope: !2603)
!2690 = !DILocation(line: 901, column: 56, scope: !2611)
!2691 = !{!1174, !1159, i64 48}
!2692 = !DILocation(line: 901, column: 40, scope: !2611)
!2693 = !DILocation(line: 901, column: 16, scope: !2611)
!2694 = !DILocation(line: 902, column: 34, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2611, file: !3, line: 902, column: 12)
!2696 = !DILocation(line: 902, column: 59, scope: !2695)
!2697 = !DILocation(line: 903, column: 22, scope: !2695)
!2698 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !2699)
!2699 = distinct !DILocation(line: 903, column: 12, scope: !2695)
!2700 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !2699)
!2701 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !2699)
!2702 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !2699)
!2703 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !2699)
!2704 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !2699)
!2705 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !2699)
!2706 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !2699)
!2707 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !2699)
!2708 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !2699)
!2709 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !2699)
!2710 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !2699)
!2711 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !2699)
!2712 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !2699)
!2713 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !2699)
!2714 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !2699)
!2715 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !2699)
!2716 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !2699)
!2717 = !DILocation(line: 0, scope: !2030, inlinedAt: !2699)
!2718 = !DILocation(line: 0, scope: !2695)
!2719 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !2699)
!2720 = !DILocation(line: 903, column: 64, scope: !2695)
!2721 = !DILocation(line: 903, column: 40, scope: !2695)
!2722 = !DILocation(line: 902, column: 12, scope: !2611)
!2723 = !DILocation(line: 905, column: 35, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2695, file: !3, line: 904, column: 9)
!2725 = !DILocation(line: 905, column: 33, scope: !2724)
!2726 = !DILocation(line: 906, column: 9, scope: !2724)
!2727 = !DILocation(line: 907, column: 5, scope: !2611)
!2728 = !DILocation(line: 908, column: 5, scope: !2603)
!2729 = distinct !DISubprogram(name: "clientsCronTrackExpansiveClients", scope: !3, file: !3, line: 927, type: !2604, isLocal: false, isDefinition: true, scopeLine: 927, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2730)
!2730 = !{!2731, !2732, !2733, !2734, !2735}
!2731 = !DILocalVariable(name: "c", arg: 1, scope: !2729, file: !3, line: 927, type: !69)
!2732 = !DILocalVariable(name: "in_usage", scope: !2729, file: !3, line: 928, type: !157)
!2733 = !DILocalVariable(name: "out_usage", scope: !2729, file: !3, line: 929, type: !157)
!2734 = !DILocalVariable(name: "i", scope: !2729, file: !3, line: 930, type: !7)
!2735 = !DILocalVariable(name: "zeroidx", scope: !2729, file: !3, line: 931, type: !7)
!2736 = !DILocation(line: 927, column: 46, scope: !2729)
!2737 = !DILocation(line: 928, column: 39, scope: !2729)
!2738 = !DILocation(line: 928, column: 23, scope: !2729)
!2739 = !DILocation(line: 928, column: 12, scope: !2729)
!2740 = !DILocation(line: 929, column: 24, scope: !2729)
!2741 = !DILocation(line: 929, column: 12, scope: !2729)
!2742 = !DILocation(line: 930, column: 20, scope: !2729)
!2743 = !DILocation(line: 930, column: 29, scope: !2729)
!2744 = !DILocation(line: 930, column: 13, scope: !2729)
!2745 = !DILocation(line: 930, column: 9, scope: !2729)
!2746 = !DILocation(line: 931, column: 21, scope: !2729)
!2747 = !DILocation(line: 931, column: 25, scope: !2729)
!2748 = !DILocation(line: 931, column: 9, scope: !2729)
!2749 = !DILocation(line: 944, column: 5, scope: !2729)
!2750 = !DILocation(line: 944, column: 34, scope: !2729)
!2751 = !DILocation(line: 945, column: 5, scope: !2729)
!2752 = !DILocation(line: 945, column: 35, scope: !2729)
!2753 = !DILocation(line: 948, column: 20, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2729, file: !3, line: 948, column: 9)
!2755 = !DILocation(line: 948, column: 18, scope: !2754)
!2756 = !DILocation(line: 948, column: 9, scope: !2729)
!2757 = !DILocation(line: 948, column: 67, scope: !2754)
!2758 = !DILocation(line: 948, column: 44, scope: !2754)
!2759 = !DILocation(line: 949, column: 21, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2729, file: !3, line: 949, column: 9)
!2761 = !DILocation(line: 949, column: 19, scope: !2760)
!2762 = !DILocation(line: 949, column: 9, scope: !2729)
!2763 = !DILocation(line: 949, column: 70, scope: !2760)
!2764 = !DILocation(line: 949, column: 46, scope: !2760)
!2765 = !DILocation(line: 951, column: 5, scope: !2729)
!2766 = distinct !DISubprogram(name: "getExpansiveClientsInfo", scope: !3, file: !3, line: 956, type: !2767, isLocal: false, isDefinition: true, scopeLine: 956, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2770)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{null, !2769, !2769}
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!2770 = !{!2771, !2772, !2773, !2774, !2775}
!2771 = !DILocalVariable(name: "in_usage", arg: 1, scope: !2766, file: !3, line: 956, type: !2769)
!2772 = !DILocalVariable(name: "out_usage", arg: 2, scope: !2766, file: !3, line: 956, type: !2769)
!2773 = !DILocalVariable(name: "i", scope: !2766, file: !3, line: 957, type: !157)
!2774 = !DILocalVariable(name: "o", scope: !2766, file: !3, line: 957, type: !157)
!2775 = !DILocalVariable(name: "j", scope: !2776, file: !3, line: 958, type: !7)
!2776 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 958, column: 5)
!2777 = !DILocation(line: 956, column: 38, scope: !2766)
!2778 = !DILocation(line: 956, column: 56, scope: !2766)
!2779 = !DILocation(line: 957, column: 12, scope: !2766)
!2780 = !DILocation(line: 957, column: 19, scope: !2766)
!2781 = !DILocation(line: 958, column: 14, scope: !2776)
!2782 = !DILocation(line: 958, column: 10, scope: !2776)
!2783 = !DILocation(line: 958, column: 5, scope: !2776)
!2784 = !DILocation(line: 959, column: 13, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 959, column: 13)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 958, column: 60)
!2787 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 958, column: 5)
!2788 = !DILocation(line: 959, column: 36, scope: !2785)
!2789 = !DILocation(line: 959, column: 13, scope: !2786)
!2790 = !DILocation(line: 959, column: 41, scope: !2785)
!2791 = !DILocation(line: 960, column: 13, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 960, column: 13)
!2793 = !DILocation(line: 960, column: 37, scope: !2792)
!2794 = !DILocation(line: 960, column: 13, scope: !2786)
!2795 = !DILocation(line: 960, column: 42, scope: !2792)
!2796 = !DILocation(line: 958, column: 5, scope: !2787)
!2797 = !DILocation(line: 0, scope: !2766)
!2798 = !DILocation(line: 962, column: 15, scope: !2766)
!2799 = !DILocation(line: 963, column: 16, scope: !2766)
!2800 = !DILocation(line: 964, column: 1, scope: !2766)
!2801 = distinct !DISubprogram(name: "clientsCron", scope: !3, file: !3, line: 982, type: !349, isLocal: false, isDefinition: true, scopeLine: 982, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2802)
!2802 = !{!2803, !2804, !2805, !2806, !2808}
!2803 = !DILocalVariable(name: "numclients", scope: !2801, file: !3, line: 987, type: !7)
!2804 = !DILocalVariable(name: "iterations", scope: !2801, file: !3, line: 988, type: !7)
!2805 = !DILocalVariable(name: "now", scope: !2801, file: !3, line: 989, type: !228)
!2806 = !DILocalVariable(name: "c", scope: !2807, file: !3, line: 999, type: !69)
!2807 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 998, column: 55)
!2808 = !DILocalVariable(name: "head", scope: !2807, file: !3, line: 1000, type: !15)
!2809 = !DILocation(line: 987, column: 22, scope: !2801)
!2810 = !{!1155, !1159, i64 512}
!2811 = !{!2812, !1160, i64 40}
!2812 = !{!"list", !1159, i64 0, !1159, i64 8, !1159, i64 16, !1159, i64 24, !1159, i64 32, !1160, i64 40}
!2813 = !DILocation(line: 987, column: 9, scope: !2801)
!2814 = !DILocation(line: 988, column: 40, scope: !2801)
!2815 = !{!1155, !1156, i64 40}
!2816 = !DILocation(line: 988, column: 32, scope: !2801)
!2817 = !DILocation(line: 988, column: 9, scope: !2801)
!2818 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !2819)
!2819 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !2820)
!2820 = distinct !DILocation(line: 989, column: 20, scope: !2801)
!2821 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !2822)
!2822 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !2819)
!2823 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !2822)
!2824 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !2822)
!2825 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !2822)
!2826 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !2822)
!2827 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !2822)
!2828 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !2822)
!2829 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !2822)
!2830 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !2822)
!2831 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !2822)
!2832 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !2822)
!2833 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !2822)
!2834 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !2822)
!2835 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !2819)
!2836 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !2819)
!2837 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !2819)
!2838 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !2819)
!2839 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !2820)
!2840 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !2820)
!2841 = !DILocation(line: 989, column: 14, scope: !2801)
!2842 = !DILocation(line: 994, column: 20, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 994, column: 9)
!2844 = !DILocation(line: 994, column: 9, scope: !2801)
!2845 = !DILocation(line: 995, column: 34, scope: !2843)
!2846 = !DILocation(line: 995, column: 22, scope: !2843)
!2847 = !DILocation(line: 995, column: 9, scope: !2843)
!2848 = !DILocation(line: 0, scope: !2801)
!2849 = !DILocation(line: 998, column: 5, scope: !2801)
!2850 = !DILocation(line: 998, column: 11, scope: !2801)
!2851 = !DILocation(line: 998, column: 38, scope: !2801)
!2852 = !DILocation(line: 998, column: 51, scope: !2801)
!2853 = !DILocation(line: 1005, column: 9, scope: !2807)
!2854 = !DILocation(line: 1006, column: 16, scope: !2807)
!2855 = !{!2812, !1159, i64 0}
!2856 = !DILocation(line: 1000, column: 19, scope: !2807)
!2857 = !DILocation(line: 1007, column: 13, scope: !2807)
!2858 = !{!2859, !1159, i64 16}
!2859 = !{!"listNode", !1159, i64 0, !1159, i64 8, !1159, i64 16}
!2860 = !DILocation(line: 999, column: 17, scope: !2807)
!2861 = !DILocation(line: 1011, column: 13, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 1011, column: 13)
!2863 = !DILocation(line: 1011, column: 13, scope: !2807)
!2864 = distinct !{!2864, !2849, !2865}
!2865 = !DILocation(line: 1014, column: 5, scope: !2801)
!2866 = !DILocation(line: 1012, column: 13, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 1012, column: 13)
!2868 = !DILocation(line: 1012, column: 13, scope: !2807)
!2869 = !DILocation(line: 927, column: 46, scope: !2729, inlinedAt: !2870)
!2870 = distinct !DILocation(line: 1013, column: 13, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 1013, column: 13)
!2872 = !DILocation(line: 928, column: 39, scope: !2729, inlinedAt: !2870)
!2873 = !DILocation(line: 928, column: 23, scope: !2729, inlinedAt: !2870)
!2874 = !DILocation(line: 928, column: 12, scope: !2729, inlinedAt: !2870)
!2875 = !DILocation(line: 929, column: 24, scope: !2729, inlinedAt: !2870)
!2876 = !DILocation(line: 929, column: 12, scope: !2729, inlinedAt: !2870)
!2877 = !DILocation(line: 930, column: 20, scope: !2729, inlinedAt: !2870)
!2878 = !DILocation(line: 930, column: 29, scope: !2729, inlinedAt: !2870)
!2879 = !DILocation(line: 930, column: 13, scope: !2729, inlinedAt: !2870)
!2880 = !DILocation(line: 930, column: 9, scope: !2729, inlinedAt: !2870)
!2881 = !DILocation(line: 931, column: 21, scope: !2729, inlinedAt: !2870)
!2882 = !DILocation(line: 931, column: 25, scope: !2729, inlinedAt: !2870)
!2883 = !DILocation(line: 931, column: 9, scope: !2729, inlinedAt: !2870)
!2884 = !DILocation(line: 944, column: 5, scope: !2729, inlinedAt: !2870)
!2885 = !DILocation(line: 944, column: 34, scope: !2729, inlinedAt: !2870)
!2886 = !DILocation(line: 945, column: 5, scope: !2729, inlinedAt: !2870)
!2887 = !DILocation(line: 945, column: 35, scope: !2729, inlinedAt: !2870)
!2888 = !DILocation(line: 948, column: 20, scope: !2754, inlinedAt: !2870)
!2889 = !DILocation(line: 948, column: 18, scope: !2754, inlinedAt: !2870)
!2890 = !DILocation(line: 948, column: 9, scope: !2729, inlinedAt: !2870)
!2891 = !DILocation(line: 948, column: 67, scope: !2754, inlinedAt: !2870)
!2892 = !DILocation(line: 948, column: 44, scope: !2754, inlinedAt: !2870)
!2893 = !DILocation(line: 949, column: 21, scope: !2760, inlinedAt: !2870)
!2894 = !DILocation(line: 949, column: 19, scope: !2760, inlinedAt: !2870)
!2895 = !DILocation(line: 949, column: 9, scope: !2729, inlinedAt: !2870)
!2896 = !DILocation(line: 949, column: 70, scope: !2760, inlinedAt: !2870)
!2897 = !DILocation(line: 949, column: 46, scope: !2760, inlinedAt: !2870)
!2898 = !DILocation(line: 951, column: 5, scope: !2729, inlinedAt: !2870)
!2899 = !DILocation(line: 1013, column: 13, scope: !2807)
!2900 = !DILocation(line: 0, scope: !2862)
!2901 = !DILocation(line: 1015, column: 1, scope: !2801)
!2902 = !DILocation(line: 1023, column: 16, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !348, file: !3, line: 1023, column: 9)
!2904 = !{!1155, !1156, i64 1740}
!2905 = !DILocation(line: 1023, column: 9, scope: !2903)
!2906 = !DILocation(line: 1023, column: 9, scope: !348)
!2907 = !DILocation(line: 1024, column: 20, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 1024, column: 13)
!2909 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 1023, column: 39)
!2910 = !DILocation(line: 1024, column: 31, scope: !2908)
!2911 = !DILocation(line: 1024, column: 13, scope: !2909)
!2912 = !DILocation(line: 1025, column: 13, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1024, column: 40)
!2914 = !DILocation(line: 1026, column: 9, scope: !2913)
!2915 = !DILocation(line: 1027, column: 13, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 1026, column: 16)
!2917 = !DILocation(line: 1032, column: 16, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !348, file: !3, line: 1032, column: 9)
!2919 = !{!1155, !1156, i64 1744}
!2920 = !DILocation(line: 1032, column: 9, scope: !2918)
!2921 = !DILocation(line: 1032, column: 9, scope: !348)
!2922 = !DILocation(line: 1033, column: 9, scope: !2918)
!2923 = !DILocation(line: 1038, column: 16, scope: !354)
!2924 = !DILocation(line: 1038, column: 46, scope: !354)
!2925 = !DILocation(line: 1038, column: 36, scope: !354)
!2926 = !DILocation(line: 1044, column: 13, scope: !353)
!2927 = !DILocation(line: 1048, column: 35, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !353, file: !3, line: 1048, column: 13)
!2929 = !{!1155, !1156, i64 1792}
!2930 = !DILocation(line: 1048, column: 26, scope: !2928)
!2931 = !DILocation(line: 1048, column: 13, scope: !353)
!2932 = !DILocation(line: 0, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !353, file: !3, line: 1051, column: 9)
!2934 = !DILocation(line: 1045, column: 13, scope: !353)
!2935 = !DILocation(line: 1051, column: 23, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2933, file: !3, line: 1051, column: 9)
!2937 = !DILocation(line: 1051, column: 9, scope: !2933)
!2938 = !DILocation(line: 1052, column: 33, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 1051, column: 44)
!2940 = !DILocation(line: 1052, column: 43, scope: !2939)
!2941 = !DILocation(line: 1052, column: 13, scope: !2939)
!2942 = !DILocation(line: 1053, column: 22, scope: !2939)
!2943 = !DILocation(line: 1051, column: 9, scope: !2936)
!2944 = distinct !{!2944, !2937, !2945}
!2945 = !DILocation(line: 1054, column: 9, scope: !2933)
!2946 = !DILocation(line: 1052, column: 52, scope: !2939)
!2947 = !DILocation(line: 1051, column: 40, scope: !2936)
!2948 = !DILocation(line: 1057, column: 20, scope: !361)
!2949 = !{!1155, !1156, i64 88}
!2950 = !DILocation(line: 1057, column: 13, scope: !361)
!2951 = !DILocation(line: 1057, column: 13, scope: !353)
!2952 = !DILocation(line: 1058, column: 18, scope: !359)
!2953 = !DILocation(line: 1058, column: 13, scope: !359)
!2954 = !DILocation(line: 1059, column: 53, scope: !357)
!2955 = !DILocation(line: 775, column: 29, scope: !2408, inlinedAt: !2956)
!2956 = distinct !DILocation(line: 1059, column: 33, scope: !357)
!2957 = !DILocation(line: 777, column: 9, scope: !2415, inlinedAt: !2956)
!2958 = !DILocation(line: 777, column: 9, scope: !2408, inlinedAt: !2956)
!2959 = !DILocation(line: 778, column: 9, scope: !2420, inlinedAt: !2956)
!2960 = !DILocation(line: 779, column: 9, scope: !2420, inlinedAt: !2956)
!2961 = !DILocation(line: 782, column: 9, scope: !2423, inlinedAt: !2956)
!2962 = !DILocation(line: 782, column: 9, scope: !2408, inlinedAt: !2956)
!2963 = !DILocation(line: 783, column: 9, scope: !2426, inlinedAt: !2956)
!2964 = !DILocation(line: 784, column: 9, scope: !2426, inlinedAt: !2956)
!2965 = !DILocation(line: 0, scope: !357)
!2966 = !DILocation(line: 787, column: 1, scope: !2408, inlinedAt: !2956)
!2967 = !DILocation(line: 1059, column: 21, scope: !357)
!2968 = !DILocation(line: 1060, column: 21, scope: !357)
!2969 = !DILocation(line: 1063, column: 21, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 1060, column: 32)
!2971 = distinct !DILexicalBlock(scope: !357, file: !3, line: 1060, column: 21)
!2972 = !DILocation(line: 786, column: 5, scope: !2408, inlinedAt: !2956)
!2973 = !DILocation(line: 1066, column: 30, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 1064, column: 24)
!2975 = !DILocation(line: 1067, column: 31, scope: !2974)
!2976 = !DILocation(line: 1069, column: 13, scope: !358)
!2977 = !DILocation(line: 1058, column: 44, scope: !358)
!2978 = !DILocation(line: 1058, column: 13, scope: !358)
!2979 = !DILocation(line: 1058, column: 27, scope: !358)
!2980 = distinct !{!2980, !2953, !2981}
!2981 = !DILocation(line: 1069, column: 13, scope: !359)
!2982 = !DILocation(line: 1071, column: 5, scope: !353)
!2983 = !DILocation(line: 1072, column: 1, scope: !348)
!2984 = distinct !DISubprogram(name: "updateCachedTime", scope: !3, file: !3, line: 1078, type: !349, isLocal: false, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2985)
!2985 = !{!2986, !2987}
!2986 = !DILocalVariable(name: "unixtime", scope: !2984, file: !3, line: 1079, type: !175)
!2987 = !DILocalVariable(name: "tm", scope: !2984, file: !3, line: 1087, type: !1722)
!2988 = !DILocation(line: 1079, column: 23, scope: !2984)
!2989 = !DILocation(line: 1079, column: 12, scope: !2984)
!2990 = !DILocation(line: 1080, column: 5, scope: !2984)
!2991 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !2992)
!2992 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !2993)
!2993 = distinct !DILocation(line: 1081, column: 21, scope: !2984)
!2994 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !2995)
!2995 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !2992)
!2996 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !2995)
!2997 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !2995)
!2998 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !2995)
!2999 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !2995)
!3000 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !2995)
!3001 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !2995)
!3002 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !2995)
!3003 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !2995)
!3004 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !2995)
!3005 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !2995)
!3006 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !2995)
!3007 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !2995)
!3008 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !2992)
!3009 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !2992)
!3010 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !2992)
!3011 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !2992)
!3012 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !2993)
!3013 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !2993)
!3014 = !DILocation(line: 1081, column: 19, scope: !2984)
!3015 = !{!1155, !1161, i64 2896}
!3016 = !DILocation(line: 1087, column: 5, scope: !2984)
!3017 = !DILocation(line: 1087, column: 15, scope: !2984)
!3018 = !DILocation(line: 1088, column: 5, scope: !2984)
!3019 = !DILocation(line: 1089, column: 33, scope: !2984)
!3020 = !{!3021, !1156, i64 32}
!3021 = !{!"tm", !1156, i64 0, !1156, i64 4, !1156, i64 8, !1156, i64 12, !1156, i64 16, !1156, i64 20, !1156, i64 24, !1156, i64 28, !1156, i64 32, !1160, i64 40, !1159, i64 48}
!3022 = !DILocation(line: 1089, column: 28, scope: !2984)
!3023 = !DILocation(line: 1090, column: 1, scope: !2984)
!3024 = distinct !DISubprogram(name: "serverCron", scope: !3, file: !3, line: 1111, type: !663, isLocal: false, isDefinition: true, scopeLine: 1111, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3025)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3036, !3042, !3043, !3044, !3047, !3048, !3051, !3052, !3057, !3067, !3069, !3072, !3073, !3076}
!3026 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !3024, file: !3, line: 1111, type: !642)
!3027 = !DILocalVariable(name: "id", arg: 2, scope: !3024, file: !3, line: 1111, type: !8)
!3028 = !DILocalVariable(name: "clientData", arg: 3, scope: !3024, file: !3, line: 1111, type: !6)
!3029 = !DILocalVariable(name: "j", scope: !3024, file: !3, line: 1112, type: !7)
!3030 = !DILocalVariable(name: "lruclock", scope: !3024, file: !3, line: 1158, type: !37)
!3031 = !DILocalVariable(name: "lua_memory", scope: !3032, file: !3, line: 1184, type: !157)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 1180, column: 59)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 1180, column: 13)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1165, column: 26)
!3035 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1165, column: 5)
!3036 = !DILocalVariable(name: "size", scope: !3037, file: !3, line: 1204, type: !8)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 1203, column: 44)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 1203, column: 9)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 1203, column: 9)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 1202, column: 27)
!3041 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1202, column: 5)
!3042 = !DILocalVariable(name: "used", scope: !3037, file: !3, line: 1204, type: !8)
!3043 = !DILocalVariable(name: "vkeys", scope: !3037, file: !3, line: 1204, type: !8)
!3044 = !DILocalVariable(name: "statloc", scope: !3045, file: !3, line: 1245, type: !7)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 1244, column: 5)
!3046 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1242, column: 9)
!3047 = !DILocalVariable(name: "pid", scope: !3045, file: !3, line: 1246, type: !609)
!3048 = !DILocalVariable(name: "exitcode", scope: !3049, file: !3, line: 1249, type: !7)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 1248, column: 56)
!3050 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 1248, column: 13)
!3051 = !DILocalVariable(name: "bysignal", scope: !3049, file: !3, line: 1250, type: !7)
!3052 = !DILocalVariable(name: "sp", scope: !3053, file: !3, line: 1280, type: !877)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 1279, column: 52)
!3054 = distinct !DILexicalBlock(scope: !3055, file: !3, line: 1279, column: 9)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1279, column: 9)
!3056 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 1276, column: 12)
!3057 = !DILocalVariable(name: "rsi", scope: !3058, file: !3, line: 1294, type: !3060)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 1291, column: 13)
!3059 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 1286, column: 17)
!3060 = !DIDerivedType(tag: DW_TAG_typedef, name: "rdbSaveInfo", file: !46, line: 912, baseType: !3061)
!3061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdbSaveInfo", file: !46, line: 904, size: 512, elements: !3062)
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "repl_stream_db", scope: !3061, file: !46, line: 906, baseType: !7, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "repl_id_is_set", scope: !3061, file: !46, line: 909, baseType: !7, size: 32, offset: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "repl_id", scope: !3061, file: !46, line: 910, baseType: !197, size: 328, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !3061, file: !46, line: 911, baseType: !8, size: 64, offset: 448)
!3067 = !DILocalVariable(name: "rsiptr", scope: !3058, file: !3, line: 1294, type: !3068)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3069 = !DILocalVariable(name: "base", scope: !3070, file: !3, line: 1308, type: !8)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !3, line: 1307, column: 9)
!3071 = distinct !DILexicalBlock(scope: !3056, file: !3, line: 1302, column: 13)
!3072 = !DILocalVariable(name: "growth", scope: !3070, file: !3, line: 1310, type: !8)
!3073 = !DILocalVariable(name: "rsi", scope: !3074, file: !3, line: 1367, type: !3060)
!3074 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 1366, column: 5)
!3075 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1362, column: 9)
!3076 = !DILocalVariable(name: "rsiptr", scope: !3074, file: !3, line: 1367, type: !3068)
!3077 = !DILocation(line: 1111, column: 36, scope: !3024)
!3078 = !DILocation(line: 1111, column: 57, scope: !3024)
!3079 = !DILocation(line: 1111, column: 67, scope: !3024)
!3080 = !DILocation(line: 1119, column: 16, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1119, column: 9)
!3082 = !{!1155, !1156, i64 3136}
!3083 = !DILocation(line: 1119, column: 9, scope: !3081)
!3084 = !DILocation(line: 1119, column: 9, scope: !3024)
!3085 = !DILocation(line: 1119, column: 33, scope: !3081)
!3086 = !DILocation(line: 1079, column: 23, scope: !2984, inlinedAt: !3087)
!3087 = distinct !DILocation(line: 1122, column: 5, scope: !3024)
!3088 = !DILocation(line: 1079, column: 12, scope: !2984, inlinedAt: !3087)
!3089 = !DILocation(line: 1080, column: 5, scope: !2984, inlinedAt: !3087)
!3090 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !3091)
!3091 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !3092)
!3092 = distinct !DILocation(line: 1081, column: 21, scope: !2984, inlinedAt: !3087)
!3093 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !3094)
!3094 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !3091)
!3095 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !3094)
!3096 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !3094)
!3097 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !3094)
!3098 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !3094)
!3099 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !3094)
!3100 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !3094)
!3101 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !3094)
!3102 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !3094)
!3103 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !3094)
!3104 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !3094)
!3105 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !3094)
!3106 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !3094)
!3107 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !3091)
!3108 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !3091)
!3109 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !3091)
!3110 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !3091)
!3111 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !3092)
!3112 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !3092)
!3113 = !DILocation(line: 1081, column: 19, scope: !2984, inlinedAt: !3087)
!3114 = !DILocation(line: 1087, column: 5, scope: !2984, inlinedAt: !3087)
!3115 = !DILocation(line: 1087, column: 15, scope: !2984, inlinedAt: !3087)
!3116 = !DILocation(line: 1088, column: 5, scope: !2984, inlinedAt: !3087)
!3117 = !DILocation(line: 1089, column: 33, scope: !2984, inlinedAt: !3087)
!3118 = !DILocation(line: 1089, column: 28, scope: !2984, inlinedAt: !3087)
!3119 = !DILocation(line: 1090, column: 1, scope: !2984, inlinedAt: !3087)
!3120 = !DILocation(line: 1124, column: 24, scope: !3024)
!3121 = !{!1155, !1156, i64 36}
!3122 = !DILocation(line: 1124, column: 15, scope: !3024)
!3123 = !DILocation(line: 1127, column: 16, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1127, column: 9)
!3125 = !{!1155, !1156, i64 32}
!3126 = !DILocation(line: 1127, column: 9, scope: !3124)
!3127 = !DILocation(line: 1127, column: 9, scope: !3024)
!3128 = !DILocation(line: 1128, column: 16, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3124, file: !3, line: 1127, column: 28)
!3130 = !DILocation(line: 1128, column: 52, scope: !3129)
!3131 = !DILocation(line: 1128, column: 45, scope: !3129)
!3132 = !DILocation(line: 1128, column: 43, scope: !3129)
!3133 = !DILocation(line: 1128, column: 55, scope: !3129)
!3134 = !DILocation(line: 1128, column: 9, scope: !3129)
!3135 = !DILocation(line: 1131, column: 23, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3129, file: !3, line: 1130, column: 9)
!3137 = !DILocation(line: 1132, column: 27, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3136, file: !3, line: 1132, column: 17)
!3139 = !DILocation(line: 1132, column: 17, scope: !3136)
!3140 = distinct !{!3140, !3134, !3141}
!3141 = !DILocation(line: 1136, column: 9, scope: !3129)
!3142 = !DILocation(line: 1133, column: 27, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 1132, column: 44)
!3144 = !DILocation(line: 1134, column: 17, scope: !3143)
!3145 = !DILocation(line: 1139, column: 5, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1139, column: 5)
!3147 = !{!1155, !1156, i64 116}
!3148 = !DILocation(line: 1139, column: 5, scope: !3024)
!3149 = !DILocation(line: 1140, column: 62, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 1139, column: 26)
!3151 = !{!1155, !1161, i64 1008}
!3152 = !DILocation(line: 1140, column: 9, scope: !3150)
!3153 = !DILocation(line: 1142, column: 24, scope: !3150)
!3154 = !{!1155, !1161, i64 1240}
!3155 = !DILocation(line: 1141, column: 9, scope: !3150)
!3156 = !DILocation(line: 1144, column: 24, scope: !3150)
!3157 = !{!1155, !1161, i64 1248}
!3158 = !DILocation(line: 1143, column: 9, scope: !3150)
!3159 = !DILocation(line: 1145, column: 5, scope: !3150)
!3160 = !DILocation(line: 1158, column: 30, scope: !3024)
!3161 = !DILocation(line: 1159, column: 5, scope: !3024)
!3162 = !DILocation(line: 1162, column: 9, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1162, column: 9)
!3164 = !DILocation(line: 1162, column: 40, scope: !3163)
!3165 = !{!1155, !1160, i64 1112}
!3166 = !DILocation(line: 1162, column: 31, scope: !3163)
!3167 = !DILocation(line: 1162, column: 9, scope: !3024)
!3168 = !DILocation(line: 1163, column: 35, scope: !3163)
!3169 = !DILocation(line: 1163, column: 33, scope: !3163)
!3170 = !DILocation(line: 1163, column: 9, scope: !3163)
!3171 = !DILocation(line: 1165, column: 5, scope: !3035)
!3172 = !DILocation(line: 1165, column: 5, scope: !3024)
!3173 = !DILocation(line: 1169, column: 48, scope: !3034)
!3174 = !DILocation(line: 1169, column: 46, scope: !3034)
!3175 = !{!1155, !1160, i64 1208}
!3176 = !DILocation(line: 1170, column: 49, scope: !3034)
!3177 = !DILocation(line: 1170, column: 47, scope: !3034)
!3178 = !{!1155, !1160, i64 1200}
!3179 = !DILocation(line: 1175, column: 9, scope: !3034)
!3180 = !DILocation(line: 1180, column: 39, scope: !3033)
!3181 = !{!1155, !1160, i64 1232}
!3182 = !DILocation(line: 1180, column: 14, scope: !3033)
!3183 = !DILocation(line: 1180, column: 13, scope: !3034)
!3184 = !DILocation(line: 1184, column: 47, scope: !3032)
!3185 = !{!1155, !1159, i64 2992}
!3186 = !DILocation(line: 1184, column: 33, scope: !3032)
!3187 = !DILocation(line: 1184, column: 65, scope: !3032)
!3188 = !DILocation(line: 1184, column: 20, scope: !3032)
!3189 = !DILocation(line: 1185, column: 84, scope: !3032)
!3190 = !DILocation(line: 1185, column: 96, scope: !3032)
!3191 = !DILocation(line: 1185, column: 57, scope: !3032)
!3192 = !DILocation(line: 1186, column: 9, scope: !3032)
!3193 = !DILocation(line: 1187, column: 39, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 1187, column: 13)
!3195 = !{!1155, !1160, i64 1224}
!3196 = !DILocation(line: 1187, column: 14, scope: !3194)
!3197 = !DILocation(line: 1187, column: 13, scope: !3034)
!3198 = !DILocation(line: 1188, column: 55, scope: !3194)
!3199 = !DILocation(line: 1188, column: 13, scope: !3194)
!3200 = !DILocation(line: 1189, column: 39, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 1189, column: 13)
!3202 = !{!1155, !1160, i64 1216}
!3203 = !DILocation(line: 1189, column: 14, scope: !3201)
!3204 = !DILocation(line: 1189, column: 13, scope: !3034)
!3205 = !DILocation(line: 1190, column: 85, scope: !3201)
!3206 = !DILocation(line: 1190, column: 58, scope: !3201)
!3207 = !DILocation(line: 1190, column: 13, scope: !3201)
!3208 = !DILocation(line: 1195, column: 16, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1195, column: 9)
!3210 = !{!1155, !1156, i64 84}
!3211 = !DILocation(line: 1195, column: 9, scope: !3209)
!3212 = !DILocation(line: 1195, column: 9, scope: !3024)
!3213 = !DILocation(line: 1196, column: 13, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 1196, column: 13)
!3215 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1195, column: 31)
!3216 = !DILocation(line: 1196, column: 50, scope: !3214)
!3217 = !DILocation(line: 1196, column: 13, scope: !3215)
!3218 = !DILocation(line: 1196, column: 59, scope: !3214)
!3219 = !DILocation(line: 1197, column: 9, scope: !3215)
!3220 = !DILocation(line: 1198, column: 30, scope: !3215)
!3221 = !DILocation(line: 1199, column: 5, scope: !3215)
!3222 = !DILocation(line: 1202, column: 5, scope: !3041)
!3223 = !DILocation(line: 1202, column: 5, scope: !3024)
!3224 = !DILocation(line: 1112, column: 9, scope: !3024)
!3225 = !DILocation(line: 1203, column: 14, scope: !3039)
!3226 = !DILocation(line: 1203, column: 32, scope: !3038)
!3227 = !DILocation(line: 1203, column: 23, scope: !3038)
!3228 = !DILocation(line: 1203, column: 9, scope: !3039)
!3229 = !DILocation(line: 1206, column: 20, scope: !3037)
!3230 = !DILocation(line: 1207, column: 20, scope: !3037)
!3231 = !DILocation(line: 1204, column: 29, scope: !3037)
!3232 = !DILocation(line: 1208, column: 21, scope: !3037)
!3233 = !DILocation(line: 1204, column: 35, scope: !3037)
!3234 = !DILocation(line: 1209, column: 22, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 1209, column: 17)
!3236 = !DILocation(line: 1204, column: 23, scope: !3037)
!3237 = !DILocation(line: 1210, column: 17, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 1209, column: 32)
!3239 = !DILocation(line: 1212, column: 13, scope: !3238)
!3240 = !DILocation(line: 1203, column: 40, scope: !3038)
!3241 = !DILocation(line: 1203, column: 9, scope: !3038)
!3242 = distinct !{!3242, !3228, !3243}
!3243 = !DILocation(line: 1213, column: 9, scope: !3039)
!3244 = !DILocation(line: 1217, column: 17, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1217, column: 9)
!3246 = !DILocation(line: 1217, column: 10, scope: !3245)
!3247 = !DILocation(line: 1217, column: 9, scope: !3024)
!3248 = !DILocation(line: 1218, column: 9, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 1218, column: 9)
!3250 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 1217, column: 32)
!3251 = !DILocation(line: 1218, column: 9, scope: !3250)
!3252 = !DILocation(line: 1221, column: 17, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 1218, column: 31)
!3254 = !DILocation(line: 1221, column: 44, scope: !3253)
!3255 = !{!1155, !1159, i64 536}
!3256 = !DILocation(line: 1221, column: 43, scope: !3253)
!3257 = !DILocation(line: 1223, column: 17, scope: !3253)
!3258 = !DILocation(line: 1219, column: 13, scope: !3253)
!3259 = !DILocation(line: 1224, column: 9, scope: !3253)
!3260 = !DILocation(line: 1228, column: 5, scope: !3024)
!3261 = !DILocation(line: 1231, column: 5, scope: !3024)
!3262 = !DILocation(line: 1235, column: 16, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1235, column: 9)
!3264 = !DILocation(line: 1235, column: 46, scope: !3263)
!3265 = !DILocation(line: 1235, column: 36, scope: !3263)
!3266 = !DILocation(line: 1236, column: 16, scope: !3263)
!3267 = !DILocation(line: 1236, column: 9, scope: !3263)
!3268 = !DILocation(line: 1238, column: 9, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 1237, column: 5)
!3270 = !DILocation(line: 1239, column: 5, scope: !3269)
!3271 = !DILocation(line: 1242, column: 16, scope: !3046)
!3272 = !DILocation(line: 1242, column: 46, scope: !3046)
!3273 = !DILocation(line: 1242, column: 36, scope: !3046)
!3274 = !DILocation(line: 1243, column: 9, scope: !3046)
!3275 = !DILocation(line: 1242, column: 9, scope: !3024)
!3276 = !DILocation(line: 1245, column: 9, scope: !3045)
!3277 = !DILocation(line: 1245, column: 13, scope: !3045)
!3278 = !DILocation(line: 1248, column: 20, scope: !3050)
!3279 = !DILocation(line: 1246, column: 15, scope: !3045)
!3280 = !DILocation(line: 1248, column: 50, scope: !3050)
!3281 = !DILocation(line: 1248, column: 13, scope: !3045)
!3282 = !DILocation(line: 1249, column: 28, scope: !3049)
!3283 = !DILocation(line: 1249, column: 17, scope: !3049)
!3284 = !DILocation(line: 1250, column: 17, scope: !3049)
!3285 = !DILocation(line: 1252, column: 17, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 1252, column: 17)
!3287 = !DILocation(line: 1252, column: 17, scope: !3049)
!3288 = !DILocation(line: 1252, column: 39, scope: !3286)
!3289 = !DILocation(line: 0, scope: !3049)
!3290 = !DILocation(line: 1254, column: 21, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 1254, column: 17)
!3292 = !DILocation(line: 1254, column: 17, scope: !3049)
!3293 = !DILocation(line: 1257, column: 30, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 1254, column: 28)
!3295 = !DILocation(line: 1257, column: 21, scope: !3294)
!3296 = !DILocation(line: 1258, column: 34, scope: !3294)
!3297 = !DILocation(line: 1259, column: 34, scope: !3294)
!3298 = !{!1155, !1156, i64 1940}
!3299 = !DILocation(line: 1255, column: 17, scope: !3294)
!3300 = !DILocation(line: 1260, column: 13, scope: !3294)
!3301 = !DILocation(line: 1260, column: 38, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 1260, column: 24)
!3303 = !DILocation(line: 1260, column: 28, scope: !3302)
!3304 = !DILocation(line: 1260, column: 24, scope: !3291)
!3305 = !DILocation(line: 1261, column: 17, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 1260, column: 53)
!3307 = !DILocation(line: 1262, column: 31, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 1262, column: 21)
!3309 = !DILocation(line: 1262, column: 49, scope: !3308)
!3310 = !DILocation(line: 1263, column: 38, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 1263, column: 24)
!3312 = !DILocation(line: 1263, column: 28, scope: !3311)
!3313 = !DILocation(line: 1263, column: 24, scope: !3302)
!3314 = !DILocation(line: 1264, column: 17, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 1263, column: 53)
!3316 = !DILocation(line: 1265, column: 31, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 1265, column: 21)
!3318 = !DILocation(line: 1265, column: 49, scope: !3317)
!3319 = !DILocation(line: 1267, column: 22, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 1267, column: 21)
!3321 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 1266, column: 20)
!3322 = !DILocation(line: 1267, column: 21, scope: !3321)
!3323 = !DILocation(line: 1270, column: 25, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 1267, column: 43)
!3325 = !DILocation(line: 1268, column: 21, scope: !3324)
!3326 = !DILocation(line: 1271, column: 17, scope: !3324)
!3327 = !DILocation(line: 796, column: 16, scope: !2433, inlinedAt: !3328)
!3328 = distinct !DILocation(line: 1273, column: 13, scope: !3049)
!3329 = !DILocation(line: 796, column: 46, scope: !2433, inlinedAt: !3328)
!3330 = !DILocation(line: 796, column: 36, scope: !2433, inlinedAt: !3328)
!3331 = !DILocation(line: 797, column: 9, scope: !2433, inlinedAt: !3328)
!3332 = !DILocation(line: 799, column: 9, scope: !2433, inlinedAt: !3328)
!3333 = !DILocation(line: 800, column: 1, scope: !2431, inlinedAt: !3328)
!3334 = !DILocation(line: 1274, column: 13, scope: !3049)
!3335 = !DILocation(line: 1275, column: 9, scope: !3049)
!3336 = !DILocation(line: 1276, column: 5, scope: !3046)
!3337 = !DILocation(line: 1276, column: 5, scope: !3045)
!3338 = !DILocation(line: 1279, column: 14, scope: !3055)
!3339 = !DILocation(line: 1279, column: 32, scope: !3054)
!3340 = !{!1155, !1156, i64 2112}
!3341 = !DILocation(line: 1279, column: 23, scope: !3054)
!3342 = !DILocation(line: 1279, column: 9, scope: !3055)
!3343 = !{!1155, !1159, i64 2104}
!3344 = !DILocation(line: 1286, column: 37, scope: !3059)
!3345 = !{!3346, !1156, i64 8}
!3346 = !{!"saveparam", !1160, i64 0, !1156, i64 8}
!3347 = !DILocation(line: 1286, column: 33, scope: !3059)
!3348 = !DILocation(line: 1286, column: 30, scope: !3059)
!3349 = !DILocation(line: 1286, column: 45, scope: !3059)
!3350 = !DILocation(line: 1287, column: 55, scope: !3059)
!3351 = !{!3346, !1160, i64 0}
!3352 = !DILocation(line: 1287, column: 49, scope: !3059)
!3353 = !DILocation(line: 1287, column: 63, scope: !3059)
!3354 = !DILocation(line: 1289, column: 44, scope: !3059)
!3355 = !DILocation(line: 1293, column: 34, scope: !3058)
!3356 = !DILocation(line: 1292, column: 17, scope: !3058)
!3357 = !DILocation(line: 1294, column: 17, scope: !3058)
!3358 = !DILocation(line: 1294, column: 29, scope: !3058)
!3359 = !DILocation(line: 1295, column: 26, scope: !3058)
!3360 = !DILocation(line: 1294, column: 35, scope: !3058)
!3361 = !DILocation(line: 1296, column: 42, scope: !3058)
!3362 = !{!1155, !1159, i64 2120}
!3363 = !DILocation(line: 1296, column: 17, scope: !3058)
!3364 = !DILocation(line: 1298, column: 13, scope: !3059)
!3365 = !DILocation(line: 1299, column: 9, scope: !3054)
!3366 = !DILocation(line: 1279, column: 48, scope: !3054)
!3367 = !DILocation(line: 1279, column: 9, scope: !3054)
!3368 = distinct !{!3368, !3342, !3369}
!3369 = !DILocation(line: 1299, column: 9, scope: !3055)
!3370 = !DILocation(line: 1302, column: 20, scope: !3071)
!3371 = !{!1155, !1156, i64 1880}
!3372 = !DILocation(line: 1302, column: 30, scope: !3071)
!3373 = !DILocation(line: 1303, column: 20, scope: !3071)
!3374 = !DILocation(line: 1304, column: 20, scope: !3071)
!3375 = !DILocation(line: 1302, column: 40, scope: !3071)
!3376 = !DILocation(line: 1305, column: 20, scope: !3071)
!3377 = !DILocation(line: 1305, column: 13, scope: !3071)
!3378 = !DILocation(line: 1306, column: 20, scope: !3071)
!3379 = !{!1155, !1160, i64 1920}
!3380 = !DILocation(line: 1306, column: 46, scope: !3071)
!3381 = !{!1155, !1160, i64 1904}
!3382 = !DILocation(line: 1306, column: 37, scope: !3071)
!3383 = !DILocation(line: 1302, column: 13, scope: !3056)
!3384 = !DILocation(line: 1308, column: 37, scope: !3070)
!3385 = !{!1155, !1160, i64 1912}
!3386 = !DILocation(line: 1308, column: 30, scope: !3070)
!3387 = !DILocation(line: 1308, column: 23, scope: !3070)
!3388 = !DILocation(line: 1310, column: 56, scope: !3070)
!3389 = !DILocation(line: 1310, column: 60, scope: !3070)
!3390 = !DILocation(line: 1310, column: 67, scope: !3070)
!3391 = !DILocation(line: 1310, column: 23, scope: !3070)
!3392 = !DILocation(line: 1311, column: 27, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1311, column: 17)
!3394 = !DILocation(line: 1311, column: 24, scope: !3393)
!3395 = !DILocation(line: 1311, column: 17, scope: !3070)
!3396 = !DILocation(line: 1312, column: 17, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 1311, column: 52)
!3398 = !DILocation(line: 1313, column: 17, scope: !3397)
!3399 = !DILocation(line: 1314, column: 13, scope: !3397)
!3400 = !DILocation(line: 1315, column: 9, scope: !3070)
!3401 = !DILocation(line: 1321, column: 16, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1321, column: 9)
!3403 = !{!1155, !1160, i64 1968}
!3404 = !DILocation(line: 1321, column: 9, scope: !3402)
!3405 = !DILocation(line: 1321, column: 9, scope: !3024)
!3406 = !DILocation(line: 1321, column: 43, scope: !3402)
!3407 = !DILocation(line: 1327, column: 5, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1327, column: 5)
!3409 = !DILocation(line: 1328, column: 20, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 1328, column: 13)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 1327, column: 27)
!3412 = !DILocation(line: 1328, column: 42, scope: !3410)
!3413 = !DILocation(line: 1327, column: 5, scope: !3024)
!3414 = !{!1155, !1156, i64 2024}
!3415 = !DILocation(line: 1328, column: 13, scope: !3411)
!3416 = !DILocation(line: 1329, column: 13, scope: !3410)
!3417 = !DILocation(line: 1333, column: 5, scope: !3024)
!3418 = !DILocation(line: 1336, column: 5, scope: !3024)
!3419 = !DILocation(line: 1340, column: 5, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1340, column: 5)
!3421 = !DILocation(line: 1340, column: 5, scope: !3024)
!3422 = !DILocation(line: 1340, column: 27, scope: !3420)
!3423 = !DILocation(line: 1343, column: 5, scope: !3424)
!3424 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1343, column: 5)
!3425 = !DILocation(line: 1344, column: 20, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 1344, column: 13)
!3427 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 1343, column: 26)
!3428 = !DILocation(line: 1344, column: 13, scope: !3426)
!3429 = !DILocation(line: 1343, column: 5, scope: !3024)
!3430 = !DILocation(line: 1344, column: 13, scope: !3427)
!3431 = !DILocation(line: 1344, column: 37, scope: !3426)
!3432 = !DILocation(line: 1348, column: 16, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1348, column: 9)
!3434 = !DILocation(line: 1348, column: 9, scope: !3433)
!3435 = !DILocation(line: 1348, column: 9, scope: !3024)
!3436 = !DILocation(line: 1348, column: 31, scope: !3433)
!3437 = !DILocation(line: 1351, column: 5, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1351, column: 5)
!3439 = !DILocation(line: 1351, column: 5, scope: !3024)
!3440 = !DILocation(line: 1352, column: 9, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1351, column: 27)
!3442 = !DILocation(line: 1353, column: 5, scope: !3441)
!3443 = !DILocation(line: 1362, column: 16, scope: !3075)
!3444 = !DILocation(line: 1362, column: 46, scope: !3075)
!3445 = !DILocation(line: 1362, column: 36, scope: !3075)
!3446 = !DILocation(line: 1363, column: 16, scope: !3075)
!3447 = !DILocation(line: 1363, column: 9, scope: !3075)
!3448 = !DILocation(line: 1364, column: 17, scope: !3075)
!3449 = !DILocation(line: 1364, column: 33, scope: !3075)
!3450 = !{!1155, !1160, i64 2144}
!3451 = !DILocation(line: 1364, column: 25, scope: !3075)
!3452 = !DILocation(line: 1364, column: 48, scope: !3075)
!3453 = !DILocation(line: 1365, column: 17, scope: !3075)
!3454 = !DILocation(line: 1365, column: 35, scope: !3075)
!3455 = !DILocation(line: 1364, column: 76, scope: !3075)
!3456 = !DILocation(line: 1367, column: 9, scope: !3074)
!3457 = !DILocation(line: 1367, column: 21, scope: !3074)
!3458 = !DILocation(line: 1368, column: 18, scope: !3074)
!3459 = !DILocation(line: 1367, column: 27, scope: !3074)
!3460 = !DILocation(line: 1369, column: 38, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 1369, column: 13)
!3462 = !DILocation(line: 1369, column: 13, scope: !3461)
!3463 = !DILocation(line: 1369, column: 59, scope: !3461)
!3464 = !DILocation(line: 1369, column: 13, scope: !3074)
!3465 = !DILocation(line: 1370, column: 41, scope: !3461)
!3466 = !{!1155, !1156, i64 2168}
!3467 = !DILocation(line: 1370, column: 13, scope: !3461)
!3468 = !DILocation(line: 1371, column: 5, scope: !3075)
!3469 = !DILocation(line: 1371, column: 5, scope: !3074)
!3470 = !DILocation(line: 1373, column: 21, scope: !3024)
!3471 = !DILocation(line: 1374, column: 24, scope: !3024)
!3472 = !DILocation(line: 1374, column: 16, scope: !3024)
!3473 = !DILocation(line: 1374, column: 5, scope: !3024)
!3474 = distinct !DISubprogram(name: "beforeSleep", scope: !3, file: !3, line: 1380, type: !679, isLocal: false, isDefinition: true, scopeLine: 1380, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3475)
!3475 = !{!3476, !3477}
!3476 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !3474, file: !3, line: 1380, type: !642)
!3477 = !DILocalVariable(name: "argv", scope: !3478, file: !3, line: 1397, type: !3480)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 1396, column: 37)
!3479 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1396, column: 9)
!3480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 192, elements: !812)
!3481 = !DILocation(line: 1380, column: 38, scope: !3474)
!3482 = !DILocation(line: 1387, column: 16, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1387, column: 9)
!3484 = !DILocation(line: 1387, column: 9, scope: !3483)
!3485 = !DILocation(line: 1387, column: 9, scope: !3474)
!3486 = !DILocation(line: 1387, column: 33, scope: !3483)
!3487 = !DILocation(line: 1391, column: 16, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1391, column: 9)
!3489 = !DILocation(line: 1391, column: 9, scope: !3488)
!3490 = !DILocation(line: 1391, column: 48, scope: !3488)
!3491 = !DILocation(line: 1391, column: 59, scope: !3488)
!3492 = !DILocation(line: 1391, column: 38, scope: !3488)
!3493 = !DILocation(line: 1392, column: 9, scope: !3488)
!3494 = !DILocation(line: 1396, column: 16, scope: !3479)
!3495 = !{!1155, !1156, i64 2696}
!3496 = !DILocation(line: 1396, column: 9, scope: !3479)
!3497 = !DILocation(line: 1396, column: 9, scope: !3474)
!3498 = !DILocation(line: 1397, column: 9, scope: !3478)
!3499 = !DILocation(line: 1397, column: 15, scope: !3478)
!3500 = !DILocation(line: 1399, column: 19, scope: !3478)
!3501 = !DILocation(line: 1399, column: 9, scope: !3478)
!3502 = !DILocation(line: 1399, column: 17, scope: !3478)
!3503 = !DILocation(line: 1400, column: 19, scope: !3478)
!3504 = !DILocation(line: 1400, column: 9, scope: !3478)
!3505 = !DILocation(line: 1400, column: 17, scope: !3478)
!3506 = !DILocation(line: 1401, column: 19, scope: !3478)
!3507 = !DILocation(line: 1401, column: 9, scope: !3478)
!3508 = !DILocation(line: 1401, column: 17, scope: !3478)
!3509 = !DILocation(line: 1402, column: 38, scope: !3478)
!3510 = !DILocation(line: 1402, column: 53, scope: !3478)
!3511 = !{!1155, !1156, i64 2368}
!3512 = !DILocation(line: 1402, column: 9, scope: !3478)
!3513 = !DILocation(line: 1403, column: 22, scope: !3478)
!3514 = !DILocation(line: 1403, column: 9, scope: !3478)
!3515 = !DILocation(line: 1404, column: 22, scope: !3478)
!3516 = !DILocation(line: 1404, column: 9, scope: !3478)
!3517 = !DILocation(line: 1405, column: 22, scope: !3478)
!3518 = !DILocation(line: 1405, column: 9, scope: !3478)
!3519 = !DILocation(line: 1406, column: 36, scope: !3478)
!3520 = !DILocation(line: 1407, column: 5, scope: !3479)
!3521 = !DILocation(line: 1407, column: 5, scope: !3478)
!3522 = !DILocation(line: 1411, column: 9, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1411, column: 9)
!3524 = !{!1155, !1159, i64 2688}
!3525 = !DILocation(line: 1411, column: 9, scope: !3474)
!3526 = !DILocation(line: 1412, column: 9, scope: !3523)
!3527 = !DILocation(line: 1416, column: 5, scope: !3474)
!3528 = !DILocation(line: 1419, column: 9, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1419, column: 9)
!3530 = !{!1155, !1159, i64 2768}
!3531 = !DILocation(line: 1419, column: 9, scope: !3474)
!3532 = !DILocation(line: 1420, column: 9, scope: !3529)
!3533 = !DILocation(line: 1423, column: 5, scope: !3474)
!3534 = !DILocation(line: 1426, column: 5, scope: !3474)
!3535 = !DILocation(line: 1431, column: 9, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 1431, column: 9)
!3537 = !DILocation(line: 1431, column: 9, scope: !3474)
!3538 = !DILocation(line: 1431, column: 24, scope: !3536)
!3539 = !DILocation(line: 1432, column: 1, scope: !3474)
!3540 = distinct !DISubprogram(name: "afterSleep", scope: !3, file: !3, line: 1437, type: !679, isLocal: false, isDefinition: true, scopeLine: 1437, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3541)
!3541 = !{!3542}
!3542 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !3540, file: !3, line: 1437, type: !642)
!3543 = !DILocation(line: 1437, column: 37, scope: !3540)
!3544 = !DILocation(line: 1439, column: 9, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 1439, column: 9)
!3546 = !DILocation(line: 1439, column: 9, scope: !3540)
!3547 = !DILocation(line: 1439, column: 24, scope: !3545)
!3548 = !DILocation(line: 1440, column: 1, scope: !3540)
!3549 = distinct !DISubprogram(name: "createSharedObjects", scope: !3, file: !3, line: 1444, type: !349, isLocal: false, isDefinition: true, scopeLine: 1444, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3550)
!3550 = !{!3551, !3552, !3556}
!3551 = !DILocalVariable(name: "j", scope: !3549, file: !3, line: 1445, type: !7)
!3552 = !DILocalVariable(name: "dictid_str", scope: !3553, file: !3, line: 1497, type: !413)
!3553 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1496, column: 52)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !3, line: 1496, column: 5)
!3555 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 1496, column: 5)
!3556 = !DILocalVariable(name: "dictid_len", scope: !3553, file: !3, line: 1498, type: !7)
!3557 = !DILocation(line: 1447, column: 43, scope: !3549)
!3558 = !DILocation(line: 1447, column: 19, scope: !3549)
!3559 = !DILocation(line: 1447, column: 17, scope: !3549)
!3560 = !{!1190, !1159, i64 0}
!3561 = !DILocation(line: 1448, column: 41, scope: !3549)
!3562 = !DILocation(line: 1448, column: 17, scope: !3549)
!3563 = !DILocation(line: 1448, column: 15, scope: !3549)
!3564 = !DILocation(line: 1449, column: 42, scope: !3549)
!3565 = !DILocation(line: 1449, column: 18, scope: !3549)
!3566 = !DILocation(line: 1449, column: 16, scope: !3549)
!3567 = !{!1190, !1159, i64 16}
!3568 = !DILocation(line: 1450, column: 48, scope: !3549)
!3569 = !DILocation(line: 1450, column: 24, scope: !3549)
!3570 = !DILocation(line: 1450, column: 22, scope: !3549)
!3571 = !{!1190, !1159, i64 24}
!3572 = !DILocation(line: 1451, column: 44, scope: !3549)
!3573 = !DILocation(line: 1451, column: 20, scope: !3549)
!3574 = !DILocation(line: 1451, column: 18, scope: !3549)
!3575 = !{!1190, !1159, i64 32}
!3576 = !DILocation(line: 1452, column: 43, scope: !3549)
!3577 = !DILocation(line: 1452, column: 19, scope: !3549)
!3578 = !DILocation(line: 1452, column: 17, scope: !3549)
!3579 = !{!1190, !1159, i64 40}
!3580 = !DILocation(line: 1453, column: 46, scope: !3549)
!3581 = !DILocation(line: 1453, column: 22, scope: !3549)
!3582 = !DILocation(line: 1453, column: 20, scope: !3549)
!3583 = !{!1190, !1159, i64 48}
!3584 = !DILocation(line: 1454, column: 47, scope: !3549)
!3585 = !DILocation(line: 1454, column: 23, scope: !3549)
!3586 = !DILocation(line: 1454, column: 21, scope: !3549)
!3587 = !{!1190, !1159, i64 80}
!3588 = !DILocation(line: 1455, column: 52, scope: !3549)
!3589 = !DILocation(line: 1455, column: 28, scope: !3549)
!3590 = !DILocation(line: 1455, column: 26, scope: !3549)
!3591 = !{!1190, !1159, i64 88}
!3592 = !DILocation(line: 1456, column: 53, scope: !3549)
!3593 = !DILocation(line: 1456, column: 29, scope: !3549)
!3594 = !DILocation(line: 1456, column: 27, scope: !3549)
!3595 = !{!1190, !1159, i64 104}
!3596 = !DILocation(line: 1457, column: 43, scope: !3549)
!3597 = !DILocation(line: 1457, column: 19, scope: !3549)
!3598 = !DILocation(line: 1457, column: 17, scope: !3549)
!3599 = !DILocation(line: 1458, column: 45, scope: !3549)
!3600 = !DILocation(line: 1458, column: 21, scope: !3549)
!3601 = !DILocation(line: 1458, column: 19, scope: !3549)
!3602 = !{!1190, !1159, i64 96}
!3603 = !DILocation(line: 1459, column: 48, scope: !3549)
!3604 = !DILocation(line: 1459, column: 24, scope: !3549)
!3605 = !DILocation(line: 1459, column: 22, scope: !3549)
!3606 = !{!1190, !1159, i64 360}
!3607 = !DILocation(line: 1460, column: 51, scope: !3549)
!3608 = !DILocation(line: 1460, column: 27, scope: !3549)
!3609 = !DILocation(line: 1460, column: 25, scope: !3549)
!3610 = !{!1190, !1159, i64 112}
!3611 = !DILocation(line: 1462, column: 47, scope: !3549)
!3612 = !DILocation(line: 1462, column: 23, scope: !3549)
!3613 = !DILocation(line: 1462, column: 21, scope: !3549)
!3614 = !{!1190, !1159, i64 120}
!3615 = !DILocation(line: 1464, column: 48, scope: !3549)
!3616 = !DILocation(line: 1464, column: 24, scope: !3549)
!3617 = !DILocation(line: 1464, column: 22, scope: !3549)
!3618 = !DILocation(line: 1466, column: 52, scope: !3549)
!3619 = !DILocation(line: 1466, column: 28, scope: !3549)
!3620 = !DILocation(line: 1466, column: 26, scope: !3549)
!3621 = !{!1190, !1159, i64 136}
!3622 = !DILocation(line: 1468, column: 52, scope: !3549)
!3623 = !DILocation(line: 1468, column: 28, scope: !3549)
!3624 = !DILocation(line: 1468, column: 26, scope: !3549)
!3625 = !{!1190, !1159, i64 144}
!3626 = !DILocation(line: 1470, column: 50, scope: !3549)
!3627 = !DILocation(line: 1470, column: 26, scope: !3549)
!3628 = !DILocation(line: 1470, column: 24, scope: !3549)
!3629 = !{!1190, !1159, i64 152}
!3630 = !DILocation(line: 1472, column: 49, scope: !3549)
!3631 = !DILocation(line: 1472, column: 25, scope: !3549)
!3632 = !DILocation(line: 1472, column: 23, scope: !3549)
!3633 = !{!1190, !1159, i64 160}
!3634 = !DILocation(line: 1474, column: 52, scope: !3549)
!3635 = !DILocation(line: 1474, column: 28, scope: !3549)
!3636 = !DILocation(line: 1474, column: 26, scope: !3549)
!3637 = !{!1190, !1159, i64 168}
!3638 = !DILocation(line: 1476, column: 52, scope: !3549)
!3639 = !DILocation(line: 1476, column: 28, scope: !3549)
!3640 = !DILocation(line: 1476, column: 26, scope: !3549)
!3641 = !{!1190, !1159, i64 184}
!3642 = !DILocation(line: 1478, column: 48, scope: !3549)
!3643 = !DILocation(line: 1478, column: 24, scope: !3549)
!3644 = !DILocation(line: 1478, column: 22, scope: !3549)
!3645 = !{!1190, !1159, i64 176}
!3646 = !DILocation(line: 1480, column: 49, scope: !3549)
!3647 = !DILocation(line: 1480, column: 25, scope: !3549)
!3648 = !DILocation(line: 1480, column: 23, scope: !3549)
!3649 = !{!1190, !1159, i64 192}
!3650 = !DILocation(line: 1482, column: 48, scope: !3549)
!3651 = !DILocation(line: 1482, column: 24, scope: !3549)
!3652 = !DILocation(line: 1482, column: 22, scope: !3549)
!3653 = !{!1190, !1159, i64 208}
!3654 = !DILocation(line: 1484, column: 45, scope: !3549)
!3655 = !DILocation(line: 1484, column: 21, scope: !3549)
!3656 = !DILocation(line: 1484, column: 19, scope: !3549)
!3657 = !{!1190, !1159, i64 232}
!3658 = !DILocation(line: 1486, column: 51, scope: !3549)
!3659 = !DILocation(line: 1486, column: 27, scope: !3549)
!3660 = !DILocation(line: 1486, column: 25, scope: !3549)
!3661 = !{!1190, !1159, i64 200}
!3662 = !DILocation(line: 1488, column: 52, scope: !3549)
!3663 = !DILocation(line: 1488, column: 28, scope: !3549)
!3664 = !DILocation(line: 1488, column: 26, scope: !3549)
!3665 = !{!1190, !1159, i64 216}
!3666 = !DILocation(line: 1490, column: 49, scope: !3549)
!3667 = !DILocation(line: 1490, column: 25, scope: !3549)
!3668 = !DILocation(line: 1490, column: 23, scope: !3549)
!3669 = !{!1190, !1159, i64 224}
!3670 = !DILocation(line: 1492, column: 44, scope: !3549)
!3671 = !DILocation(line: 1492, column: 20, scope: !3549)
!3672 = !DILocation(line: 1492, column: 18, scope: !3549)
!3673 = !{!1190, !1159, i64 64}
!3674 = !DILocation(line: 1493, column: 44, scope: !3549)
!3675 = !DILocation(line: 1493, column: 20, scope: !3549)
!3676 = !DILocation(line: 1493, column: 18, scope: !3549)
!3677 = !{!1190, !1159, i64 72}
!3678 = !DILocation(line: 1494, column: 43, scope: !3549)
!3679 = !DILocation(line: 1494, column: 19, scope: !3549)
!3680 = !DILocation(line: 1494, column: 17, scope: !3549)
!3681 = !{!1190, !1159, i64 240}
!3682 = !DILocation(line: 1445, column: 9, scope: !3549)
!3683 = !DILocation(line: 1496, column: 10, scope: !3555)
!3684 = !DILocation(line: 1496, column: 5, scope: !3555)
!3685 = !DILocation(line: 1497, column: 9, scope: !3553)
!3686 = !DILocation(line: 1497, column: 14, scope: !3553)
!3687 = !DILocation(line: 1500, column: 22, scope: !3553)
!3688 = !DILocation(line: 1498, column: 13, scope: !3553)
!3689 = !DILocation(line: 1502, column: 26, scope: !3553)
!3690 = !DILocation(line: 1502, column: 13, scope: !3553)
!3691 = !DILocation(line: 1501, column: 28, scope: !3553)
!3692 = !DILocation(line: 1501, column: 9, scope: !3553)
!3693 = !DILocation(line: 1501, column: 26, scope: !3553)
!3694 = !DILocation(line: 1505, column: 5, scope: !3554)
!3695 = !DILocation(line: 1496, column: 48, scope: !3554)
!3696 = !DILocation(line: 1496, column: 5, scope: !3554)
!3697 = !DILocation(line: 1496, column: 19, scope: !3554)
!3698 = distinct !{!3698, !3684, !3699}
!3699 = !DILocation(line: 1505, column: 5, scope: !3555)
!3700 = !DILocation(line: 1506, column: 26, scope: !3549)
!3701 = !DILocation(line: 1506, column: 24, scope: !3549)
!3702 = !{!1190, !1159, i64 248}
!3703 = !DILocation(line: 1507, column: 27, scope: !3549)
!3704 = !DILocation(line: 1507, column: 25, scope: !3549)
!3705 = !{!1190, !1159, i64 256}
!3706 = !DILocation(line: 1508, column: 28, scope: !3549)
!3707 = !DILocation(line: 1508, column: 26, scope: !3549)
!3708 = !{!1190, !1159, i64 264}
!3709 = !DILocation(line: 1509, column: 30, scope: !3549)
!3710 = !DILocation(line: 1509, column: 28, scope: !3549)
!3711 = !{!1190, !1159, i64 272}
!3712 = !DILocation(line: 1510, column: 29, scope: !3549)
!3713 = !DILocation(line: 1510, column: 27, scope: !3549)
!3714 = !{!1190, !1159, i64 280}
!3715 = !DILocation(line: 1511, column: 31, scope: !3549)
!3716 = !DILocation(line: 1511, column: 29, scope: !3549)
!3717 = !{!1190, !1159, i64 288}
!3718 = !DILocation(line: 1512, column: 18, scope: !3549)
!3719 = !DILocation(line: 1512, column: 16, scope: !3549)
!3720 = !{!1190, !1159, i64 296}
!3721 = !DILocation(line: 1513, column: 21, scope: !3549)
!3722 = !DILocation(line: 1513, column: 19, scope: !3549)
!3723 = !{!1190, !1159, i64 304}
!3724 = !DILocation(line: 1514, column: 19, scope: !3549)
!3725 = !DILocation(line: 1514, column: 17, scope: !3549)
!3726 = !{!1190, !1159, i64 312}
!3727 = !DILocation(line: 1515, column: 19, scope: !3549)
!3728 = !DILocation(line: 1515, column: 17, scope: !3549)
!3729 = !{!1190, !1159, i64 320}
!3730 = !DILocation(line: 1516, column: 20, scope: !3549)
!3731 = !DILocation(line: 1516, column: 18, scope: !3549)
!3732 = !{!1190, !1159, i64 328}
!3733 = !DILocation(line: 1517, column: 24, scope: !3549)
!3734 = !DILocation(line: 1517, column: 22, scope: !3549)
!3735 = !{!1190, !1159, i64 336}
!3736 = !DILocation(line: 1518, column: 22, scope: !3549)
!3737 = !DILocation(line: 1518, column: 20, scope: !3549)
!3738 = !{!1190, !1159, i64 344}
!3739 = !DILocation(line: 1519, column: 22, scope: !3549)
!3740 = !DILocation(line: 1519, column: 20, scope: !3549)
!3741 = !{!1190, !1159, i64 352}
!3742 = !DILocation(line: 1520, column: 10, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 1520, column: 5)
!3744 = !DILocation(line: 1520, column: 5, scope: !3743)
!3745 = !DILocation(line: 1522, column: 54, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 1520, column: 47)
!3747 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 1520, column: 5)
!3748 = !DILocation(line: 1522, column: 30, scope: !3746)
!3749 = !DILocation(line: 1522, column: 13, scope: !3746)
!3750 = !DILocation(line: 1521, column: 9, scope: !3746)
!3751 = !DILocation(line: 1521, column: 28, scope: !3746)
!3752 = !DILocation(line: 1523, column: 29, scope: !3746)
!3753 = !DILocation(line: 1523, column: 38, scope: !3746)
!3754 = !DILocation(line: 1520, column: 43, scope: !3747)
!3755 = !DILocation(line: 1520, column: 5, scope: !3747)
!3756 = !DILocation(line: 1520, column: 19, scope: !3747)
!3757 = distinct !{!3757, !3744, !3758}
!3758 = !DILocation(line: 1524, column: 5, scope: !3743)
!3759 = !DILocation(line: 1525, column: 10, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 1525, column: 5)
!3761 = !DILocation(line: 1525, column: 5, scope: !3760)
!3762 = !DILocation(line: 1527, column: 26, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 1525, column: 50)
!3764 = distinct !DILexicalBlock(scope: !3760, file: !3, line: 1525, column: 5)
!3765 = !DILocation(line: 1527, column: 13, scope: !3763)
!3766 = !DILocation(line: 1526, column: 30, scope: !3763)
!3767 = !DILocation(line: 1526, column: 9, scope: !3763)
!3768 = !DILocation(line: 1526, column: 28, scope: !3763)
!3769 = !DILocation(line: 1529, column: 26, scope: !3763)
!3770 = !DILocation(line: 1529, column: 13, scope: !3763)
!3771 = !DILocation(line: 1528, column: 29, scope: !3763)
!3772 = !DILocation(line: 1528, column: 9, scope: !3763)
!3773 = !DILocation(line: 1528, column: 27, scope: !3763)
!3774 = !DILocation(line: 1525, column: 46, scope: !3764)
!3775 = !DILocation(line: 1525, column: 5, scope: !3764)
!3776 = !DILocation(line: 1525, column: 19, scope: !3764)
!3777 = distinct !{!3777, !3761, !3778}
!3778 = !DILocation(line: 1530, column: 5, scope: !3760)
!3779 = !DILocation(line: 1535, column: 24, scope: !3549)
!3780 = !DILocation(line: 1535, column: 22, scope: !3549)
!3781 = !{!1190, !1159, i64 80960}
!3782 = !DILocation(line: 1536, column: 24, scope: !3549)
!3783 = !DILocation(line: 1536, column: 22, scope: !3549)
!3784 = !{!1190, !1159, i64 80968}
!3785 = !DILocation(line: 1537, column: 1, scope: !3549)
!3786 = distinct !DISubprogram(name: "initServerConfig", scope: !3, file: !3, line: 1539, type: !349, isLocal: false, isDefinition: true, scopeLine: 1539, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3787)
!3787 = !{!3788, !3789}
!3788 = !DILocalVariable(name: "j", scope: !3786, file: !3, line: 1540, type: !7)
!3789 = !DILocalVariable(name: "lruclock", scope: !3786, file: !3, line: 1657, type: !50)
!3790 = !DILocation(line: 1542, column: 5, scope: !3786)
!3791 = !DILocation(line: 1543, column: 5, scope: !3786)
!3792 = !DILocation(line: 1544, column: 5, scope: !3786)
!3793 = !DILocation(line: 1079, column: 23, scope: !2984, inlinedAt: !3794)
!3794 = distinct !DILocation(line: 1546, column: 5, scope: !3786)
!3795 = !DILocation(line: 1079, column: 12, scope: !2984, inlinedAt: !3794)
!3796 = !DILocation(line: 1080, column: 5, scope: !2984, inlinedAt: !3794)
!3797 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !3798)
!3798 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !3799)
!3799 = distinct !DILocation(line: 1081, column: 21, scope: !2984, inlinedAt: !3794)
!3800 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !3801)
!3801 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !3798)
!3802 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !3801)
!3803 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !3801)
!3804 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !3801)
!3805 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !3801)
!3806 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !3801)
!3807 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !3801)
!3808 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !3801)
!3809 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !3801)
!3810 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !3801)
!3811 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !3801)
!3812 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !3801)
!3813 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !3801)
!3814 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !3798)
!3815 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !3798)
!3816 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !3798)
!3817 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !3798)
!3818 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !3799)
!3819 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !3799)
!3820 = !DILocation(line: 1081, column: 19, scope: !2984, inlinedAt: !3794)
!3821 = !DILocation(line: 1087, column: 5, scope: !2984, inlinedAt: !3794)
!3822 = !DILocation(line: 1087, column: 15, scope: !2984, inlinedAt: !3794)
!3823 = !DILocation(line: 1088, column: 5, scope: !2984, inlinedAt: !3794)
!3824 = !DILocation(line: 1089, column: 33, scope: !2984, inlinedAt: !3794)
!3825 = !DILocation(line: 1089, column: 28, scope: !2984, inlinedAt: !3794)
!3826 = !DILocation(line: 1090, column: 1, scope: !2984, inlinedAt: !3794)
!3827 = !DILocation(line: 1547, column: 5, scope: !3786)
!3828 = !DILocation(line: 1548, column: 38, scope: !3786)
!3829 = !DILocation(line: 1549, column: 5, scope: !3786)
!3830 = !DILocation(line: 1550, column: 5, scope: !3786)
!3831 = !DILocation(line: 1551, column: 23, scope: !3786)
!3832 = !DILocation(line: 1551, column: 21, scope: !3786)
!3833 = !DILocation(line: 1552, column: 23, scope: !3786)
!3834 = !DILocation(line: 1554, column: 34, scope: !3786)
!3835 = !DILocation(line: 1554, column: 15, scope: !3786)
!3836 = !DILocation(line: 1555, column: 23, scope: !3786)
!3837 = !DILocation(line: 1556, column: 22, scope: !3786)
!3838 = !{!1155, !1156, i64 112}
!3839 = !DILocation(line: 1557, column: 17, scope: !3786)
!3840 = !{!1155, !1156, i64 216}
!3841 = !DILocation(line: 1558, column: 24, scope: !3786)
!3842 = !{!1155, !1156, i64 220}
!3843 = !DILocation(line: 1559, column: 27, scope: !3786)
!3844 = !{!1155, !1156, i64 352}
!3845 = !DILocation(line: 1560, column: 23, scope: !3786)
!3846 = !{!1155, !1159, i64 360}
!3847 = !DILocation(line: 1561, column: 27, scope: !3786)
!3848 = !{!1155, !1156, i64 368}
!3849 = !DILocation(line: 1562, column: 23, scope: !3786)
!3850 = !{!1155, !1156, i64 436}
!3851 = !DILocation(line: 1563, column: 17, scope: !3786)
!3852 = !{!1155, !1156, i64 440}
!3853 = !DILocation(line: 1564, column: 27, scope: !3786)
!3854 = !{!1155, !1156, i64 856}
!3855 = !DILocation(line: 1565, column: 18, scope: !3786)
!3856 = !DILocation(line: 1566, column: 22, scope: !3786)
!3857 = !DILocation(line: 1570, column: 34, scope: !3786)
!3858 = !DILocation(line: 1571, column: 39, scope: !3786)
!3859 = !{!1155, !1160, i64 1752}
!3860 = !DILocation(line: 1572, column: 42, scope: !3786)
!3861 = !DILocation(line: 1577, column: 31, scope: !3786)
!3862 = !{!1155, !1161, i64 2728}
!3863 = !DILocation(line: 1576, column: 42, scope: !3786)
!3864 = !DILocation(line: 1579, column: 23, scope: !3786)
!3865 = !DILocation(line: 1580, column: 20, scope: !3786)
!3866 = !{!1155, !1156, i64 860}
!3867 = !DILocation(line: 1581, column: 22, scope: !3786)
!3868 = !DILocation(line: 1581, column: 20, scope: !3786)
!3869 = !DILocation(line: 1582, column: 27, scope: !3786)
!3870 = !DILocation(line: 1583, column: 27, scope: !3786)
!3871 = !DILocation(line: 1583, column: 25, scope: !3786)
!3872 = !{!1155, !1159, i64 2256}
!3873 = !DILocation(line: 1584, column: 28, scope: !3786)
!3874 = !{!1155, !1156, i64 2264}
!3875 = !DILocation(line: 1585, column: 22, scope: !3786)
!3876 = !{!1155, !1156, i64 1804}
!3877 = !DILocation(line: 1586, column: 23, scope: !3786)
!3878 = !{!1155, !1156, i64 1796}
!3879 = !DILocation(line: 1587, column: 28, scope: !3786)
!3880 = !{!1155, !1156, i64 1800}
!3881 = !DILocation(line: 1588, column: 22, scope: !3786)
!3882 = !DILocation(line: 1589, column: 22, scope: !3786)
!3883 = !{!1155, !1156, i64 1884}
!3884 = !DILocation(line: 1590, column: 36, scope: !3786)
!3885 = !{!1155, !1156, i64 1896}
!3886 = !DILocation(line: 1591, column: 29, scope: !3786)
!3887 = !{!1155, !1156, i64 1900}
!3888 = !DILocation(line: 1592, column: 33, scope: !3786)
!3889 = !DILocation(line: 1594, column: 34, scope: !3786)
!3890 = !{!1155, !1156, i64 1936}
!3891 = !DILocation(line: 1595, column: 29, scope: !3786)
!3892 = !DILocation(line: 1595, column: 27, scope: !3786)
!3893 = !{!1155, !1160, i64 1976}
!3894 = !DILocation(line: 1596, column: 34, scope: !3786)
!3895 = !DILocation(line: 1598, column: 37, scope: !3786)
!3896 = !{!1155, !1156, i64 2000}
!3897 = !DILocation(line: 1599, column: 30, scope: !3786)
!3898 = !{!1155, !1160, i64 2008}
!3899 = !DILocation(line: 1600, column: 19, scope: !3786)
!3900 = !{!1155, !1156, i64 1960}
!3901 = !DILocation(line: 1601, column: 28, scope: !3786)
!3902 = !{!1155, !1156, i64 1964}
!3903 = !DILocation(line: 1602, column: 38, scope: !3786)
!3904 = !DILocation(line: 1603, column: 42, scope: !3786)
!3905 = !{!1155, !1156, i64 2016}
!3906 = !DILocation(line: 1604, column: 39, scope: !3786)
!3907 = !{!1155, !1156, i64 2020}
!3908 = !DILocation(line: 1605, column: 31, scope: !3786)
!3909 = !{!1155, !1156, i64 2032}
!3910 = !DILocation(line: 1606, column: 33, scope: !3786)
!3911 = !{!1155, !1156, i64 2036}
!3912 = !DILocation(line: 1607, column: 20, scope: !3786)
!3913 = !{!1155, !1159, i64 104}
!3914 = !DILocation(line: 1608, column: 27, scope: !3786)
!3915 = !DILocation(line: 1608, column: 25, scope: !3786)
!3916 = !DILocation(line: 1609, column: 27, scope: !3786)
!3917 = !DILocation(line: 1609, column: 25, scope: !3786)
!3918 = !{!1155, !1159, i64 1888}
!3919 = !DILocation(line: 1610, column: 24, scope: !3786)
!3920 = !DILocation(line: 1611, column: 28, scope: !3786)
!3921 = !{!1155, !1156, i64 2128}
!3922 = !DILocation(line: 1612, column: 25, scope: !3786)
!3923 = !{!1155, !1156, i64 2132}
!3924 = !DILocation(line: 1613, column: 38, scope: !3786)
!3925 = !{!1155, !1156, i64 2180}
!3926 = !DILocation(line: 1614, column: 28, scope: !3786)
!3927 = !DILocation(line: 1615, column: 34, scope: !3786)
!3928 = !{!1155, !1156, i64 92}
!3929 = !DILocation(line: 1616, column: 35, scope: !3786)
!3930 = !{!1155, !1156, i64 2920}
!3931 = !DILocation(line: 1617, column: 23, scope: !3786)
!3932 = !{!1155, !1156, i64 2700}
!3933 = !DILocation(line: 1618, column: 28, scope: !3786)
!3934 = !{!1155, !1156, i64 2736}
!3935 = !DILocation(line: 1619, column: 5, scope: !3786)
!3936 = !DILocation(line: 1621, column: 22, scope: !3786)
!3937 = !{!1155, !1161, i64 2704}
!3938 = !DILocation(line: 1622, column: 29, scope: !3786)
!3939 = !DILocation(line: 1626, column: 37, scope: !3786)
!3940 = !DILocation(line: 1628, column: 34, scope: !3786)
!3941 = !{!1155, !1156, i64 2864}
!3942 = !DILocation(line: 1629, column: 32, scope: !3786)
!3943 = !{!1155, !1156, i64 2868}
!3944 = !DILocation(line: 1630, column: 35, scope: !3786)
!3945 = !DILocation(line: 1632, column: 35, scope: !3786)
!3946 = !DILocation(line: 1634, column: 34, scope: !3786)
!3947 = !DILocation(line: 1636, column: 26, scope: !3786)
!3948 = !DILocation(line: 1637, column: 28, scope: !3786)
!3949 = !DILocation(line: 1638, column: 33, scope: !3786)
!3950 = !{!1155, !1161, i64 2928}
!3951 = !DILocation(line: 1639, column: 38, scope: !3786)
!3952 = !DILocation(line: 1643, column: 33, scope: !3786)
!3953 = !DILocation(line: 1643, column: 31, scope: !3786)
!3954 = !{!1155, !1159, i64 2936}
!3955 = !DILocation(line: 1644, column: 32, scope: !3786)
!3956 = !{!1155, !1159, i64 2968}
!3957 = !DILocation(line: 1645, column: 34, scope: !3786)
!3958 = !{!1155, !1156, i64 2976}
!3959 = !DILocation(line: 1646, column: 38, scope: !3786)
!3960 = !{!1155, !1156, i64 2980}
!3961 = !DILocation(line: 1647, column: 33, scope: !3786)
!3962 = !{!1155, !1156, i64 2984}
!3963 = !DILocation(line: 1648, column: 37, scope: !3786)
!3964 = !DILocation(line: 1648, column: 35, scope: !3786)
!3965 = !{!1155, !1159, i64 840}
!3966 = !DILocation(line: 1649, column: 27, scope: !3786)
!3967 = !{!1155, !1160, i64 848}
!3968 = !DILocation(line: 1650, column: 50, scope: !3786)
!3969 = !{!1155, !1160, i64 888}
!3970 = !DILocation(line: 1651, column: 35, scope: !3786)
!3971 = !{!1155, !1156, i64 3080}
!3972 = !DILocation(line: 1652, column: 33, scope: !3786)
!3973 = !{!1155, !1156, i64 3084}
!3974 = !DILocation(line: 1653, column: 37, scope: !3786)
!3975 = !{!1155, !1156, i64 3088}
!3976 = !DILocation(line: 1654, column: 29, scope: !3786)
!3977 = !{!1155, !1156, i64 176}
!3978 = !DILocation(line: 1655, column: 27, scope: !3786)
!3979 = !{!1155, !1161, i64 3032}
!3980 = !DILocation(line: 1657, column: 29, scope: !3786)
!3981 = !DILocation(line: 1657, column: 18, scope: !3786)
!3982 = !DILocation(line: 1658, column: 5, scope: !3786)
!3983 = !DILocation(line: 1659, column: 5, scope: !3786)
!3984 = !DILocation(line: 1661, column: 5, scope: !3786)
!3985 = !DILocation(line: 1662, column: 5, scope: !3786)
!3986 = !DILocation(line: 1663, column: 5, scope: !3786)
!3987 = !DILocation(line: 1666, column: 23, scope: !3786)
!3988 = !DILocation(line: 1668, column: 23, scope: !3786)
!3989 = !{!1155, !1156, i64 2472}
!3990 = !DILocation(line: 1669, column: 19, scope: !3786)
!3991 = !DILocation(line: 1671, column: 34, scope: !3786)
!3992 = !{!1155, !1161, i64 2648}
!3993 = !DILocation(line: 1672, column: 23, scope: !3786)
!3994 = !{!1155, !1156, i64 2500}
!3995 = !DILocation(line: 1673, column: 32, scope: !3786)
!3996 = !{!1155, !1156, i64 2496}
!3997 = !DILocation(line: 1674, column: 34, scope: !3786)
!3998 = !{!1155, !1156, i64 2552}
!3999 = !DILocation(line: 1675, column: 26, scope: !3786)
!4000 = !{!1155, !1156, i64 2556}
!4001 = !DILocation(line: 1676, column: 40, scope: !3786)
!4002 = !{!1155, !1156, i64 2560}
!4003 = !DILocation(line: 1677, column: 34, scope: !3786)
!4004 = !{!1155, !1156, i64 2656}
!4005 = !DILocation(line: 1678, column: 28, scope: !3786)
!4006 = !{!1155, !1160, i64 2568}
!4007 = !DILocation(line: 1679, column: 37, scope: !3786)
!4008 = !{!1155, !1156, i64 2576}
!4009 = !DILocation(line: 1680, column: 31, scope: !3786)
!4010 = !{!1155, !1156, i64 2444}
!4011 = !DILocation(line: 1681, column: 37, scope: !3786)
!4012 = !{!1155, !1156, i64 2448}
!4013 = !DILocation(line: 1682, column: 35, scope: !3786)
!4014 = !{!1155, !1156, i64 2372}
!4015 = !DILocation(line: 1683, column: 25, scope: !3786)
!4016 = !{!1155, !1156, i64 2476}
!4017 = !DILocation(line: 1684, column: 37, scope: !3786)
!4018 = !{!1155, !1156, i64 2432}
!4019 = !DILocation(line: 1685, column: 36, scope: !3786)
!4020 = !{!1155, !1156, i64 2436}
!4021 = !DILocation(line: 1686, column: 27, scope: !3786)
!4022 = !{!1155, !1156, i64 2580}
!4023 = !DILocation(line: 1687, column: 30, scope: !3786)
!4024 = !{!1155, !1159, i64 2592}
!4025 = !DILocation(line: 1688, column: 32, scope: !3786)
!4026 = !{!1155, !1156, i64 2584}
!4027 = !DILocation(line: 1689, column: 31, scope: !3786)
!4028 = !{!1155, !1161, i64 2352}
!4029 = !DILocation(line: 1692, column: 25, scope: !3786)
!4030 = !{!1155, !1159, i64 2376}
!4031 = !DILocation(line: 1693, column: 30, scope: !3786)
!4032 = !DILocation(line: 1695, column: 29, scope: !3786)
!4033 = !DILocation(line: 1697, column: 36, scope: !3786)
!4034 = !{!1155, !1160, i64 2416}
!4035 = !DILocation(line: 1698, column: 35, scope: !3786)
!4036 = !DILocation(line: 1698, column: 33, scope: !3786)
!4037 = !{!1155, !1160, i64 2424}
!4038 = !DILocation(line: 1540, column: 9, scope: !3786)
!4039 = !DILocation(line: 1701, column: 10, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 1701, column: 5)
!4041 = !DILocation(line: 1701, column: 5, scope: !4040)
!4042 = !DILocation(line: 1702, column: 40, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 1701, column: 5)
!4044 = !{i64 0, i64 8, !2493, i64 8, i64 8, !2493, i64 16, i64 8, !2045}
!4045 = !DILocation(line: 1701, column: 5, scope: !4043)
!4046 = !DILocation(line: 1705, column: 12, scope: !3786)
!4047 = !{!1162, !1162, i64 0}
!4048 = !DILocation(line: 1706, column: 14, scope: !3786)
!4049 = !DILocation(line: 1707, column: 14, scope: !3786)
!4050 = !DILocation(line: 1708, column: 11, scope: !3786)
!4051 = !DILocation(line: 1713, column: 23, scope: !3786)
!4052 = !DILocation(line: 1713, column: 21, scope: !3786)
!4053 = !DILocation(line: 1714, column: 28, scope: !3786)
!4054 = !DILocation(line: 1714, column: 26, scope: !3786)
!4055 = !{!1155, !1159, i64 64}
!4056 = !DILocation(line: 1715, column: 5, scope: !3786)
!4057 = !DILocalVariable(name: "s", arg: 1, scope: !4058, file: !3, line: 2303, type: !40)
!4058 = distinct !DISubprogram(name: "lookupCommandByCString", scope: !3, file: !3, line: 2303, type: !4059, isLocal: false, isDefinition: true, scopeLine: 2303, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4061)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!60, !40}
!4061 = !{!4057, !4062, !4063}
!4062 = !DILocalVariable(name: "cmd", scope: !4058, file: !3, line: 2304, type: !60)
!4063 = !DILocalVariable(name: "name", scope: !4058, file: !3, line: 2305, type: !38)
!4064 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4065)
!4065 = distinct !DILocation(line: 1716, column: 25, scope: !3786)
!4066 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4065)
!4067 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4065)
!4068 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4065)
!4069 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4065)
!4070 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4065)
!4071 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4065)
!4072 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4065)
!4073 = !DILocation(line: 1716, column: 23, scope: !3786)
!4074 = !{!1155, !1159, i64 896}
!4075 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4076)
!4076 = distinct !DILocation(line: 1717, column: 27, scope: !3786)
!4077 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4076)
!4078 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4076)
!4079 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4076)
!4080 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4076)
!4081 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4076)
!4082 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4076)
!4083 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4076)
!4084 = !DILocation(line: 1717, column: 25, scope: !3786)
!4085 = !{!1155, !1159, i64 904}
!4086 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4087)
!4087 = distinct !DILocation(line: 1718, column: 27, scope: !3786)
!4088 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4087)
!4089 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4087)
!4090 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4087)
!4091 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4087)
!4092 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4087)
!4093 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4087)
!4094 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4087)
!4095 = !DILocation(line: 1718, column: 25, scope: !3786)
!4096 = !{!1155, !1159, i64 912}
!4097 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4098)
!4098 = distinct !DILocation(line: 1719, column: 26, scope: !3786)
!4099 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4098)
!4100 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4098)
!4101 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4098)
!4102 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4098)
!4103 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4098)
!4104 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4098)
!4105 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4098)
!4106 = !DILocation(line: 1719, column: 24, scope: !3786)
!4107 = !{!1155, !1159, i64 920}
!4108 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4109)
!4109 = distinct !DILocation(line: 1720, column: 26, scope: !3786)
!4110 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4109)
!4111 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4109)
!4112 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4109)
!4113 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4109)
!4114 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4109)
!4115 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4109)
!4116 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4109)
!4117 = !DILocation(line: 1720, column: 24, scope: !3786)
!4118 = !{!1155, !1159, i64 928}
!4119 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4120)
!4120 = distinct !DILocation(line: 1721, column: 29, scope: !3786)
!4121 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4120)
!4122 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4120)
!4123 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4120)
!4124 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4120)
!4125 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4120)
!4126 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4120)
!4127 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4120)
!4128 = !DILocation(line: 1721, column: 27, scope: !3786)
!4129 = !{!1155, !1159, i64 936}
!4130 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4131)
!4131 = distinct !DILocation(line: 1722, column: 29, scope: !3786)
!4132 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4131)
!4133 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4131)
!4134 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4131)
!4135 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4131)
!4136 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4131)
!4137 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4131)
!4138 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4131)
!4139 = !DILocation(line: 1722, column: 27, scope: !3786)
!4140 = !{!1155, !1159, i64 944}
!4141 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4142)
!4142 = distinct !DILocation(line: 1723, column: 26, scope: !3786)
!4143 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4142)
!4144 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4142)
!4145 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4142)
!4146 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4142)
!4147 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4142)
!4148 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4142)
!4149 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4142)
!4150 = !DILocation(line: 1723, column: 24, scope: !3786)
!4151 = !{!1155, !1159, i64 952}
!4152 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4153)
!4153 = distinct !DILocation(line: 1724, column: 26, scope: !3786)
!4154 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4153)
!4155 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4153)
!4156 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4153)
!4157 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4153)
!4158 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4153)
!4159 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4153)
!4160 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4153)
!4161 = !DILocation(line: 1724, column: 24, scope: !3786)
!4162 = !{!1155, !1159, i64 960}
!4163 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4164)
!4164 = distinct !DILocation(line: 1725, column: 28, scope: !3786)
!4165 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4164)
!4166 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4164)
!4167 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4164)
!4168 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4164)
!4169 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4164)
!4170 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4164)
!4171 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4164)
!4172 = !DILocation(line: 1725, column: 26, scope: !3786)
!4173 = !{!1155, !1159, i64 968}
!4174 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4175)
!4175 = distinct !DILocation(line: 1726, column: 29, scope: !3786)
!4176 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4175)
!4177 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4175)
!4178 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4175)
!4179 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4175)
!4180 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4175)
!4181 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4175)
!4182 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4175)
!4183 = !DILocation(line: 1726, column: 27, scope: !3786)
!4184 = !{!1155, !1159, i64 976}
!4185 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4186)
!4186 = distinct !DILocation(line: 1727, column: 28, scope: !3786)
!4187 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4186)
!4188 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4186)
!4189 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4186)
!4190 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4186)
!4191 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4186)
!4192 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4186)
!4193 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4186)
!4194 = !DILocation(line: 1727, column: 26, scope: !3786)
!4195 = !{!1155, !1159, i64 984}
!4196 = !DILocation(line: 2303, column: 51, scope: !4058, inlinedAt: !4197)
!4197 = distinct !DILocation(line: 1728, column: 28, scope: !3786)
!4198 = !DILocation(line: 2305, column: 16, scope: !4058, inlinedAt: !4197)
!4199 = !DILocation(line: 2305, column: 9, scope: !4058, inlinedAt: !4197)
!4200 = !DILocation(line: 2307, column: 33, scope: !4058, inlinedAt: !4197)
!4201 = !DILocation(line: 2307, column: 11, scope: !4058, inlinedAt: !4197)
!4202 = !DILocation(line: 2304, column: 26, scope: !4058, inlinedAt: !4197)
!4203 = !DILocation(line: 2308, column: 5, scope: !4058, inlinedAt: !4197)
!4204 = !DILocation(line: 2309, column: 5, scope: !4058, inlinedAt: !4197)
!4205 = !DILocation(line: 1728, column: 26, scope: !3786)
!4206 = !{!1155, !1159, i64 992}
!4207 = !DILocation(line: 1731, column: 36, scope: !3786)
!4208 = !DILocation(line: 1735, column: 38, scope: !3786)
!4209 = !{!1155, !1161, i64 3096}
!4210 = !DILocation(line: 1738, column: 26, scope: !3786)
!4211 = !DILocation(line: 1740, column: 24, scope: !3786)
!4212 = !{!1155, !1156, i64 3128}
!4213 = !DILocation(line: 1741, column: 29, scope: !3786)
!4214 = !{!1155, !1156, i64 3132}
!4215 = !DILocation(line: 1742, column: 28, scope: !3786)
!4216 = !DILocation(line: 1748, column: 42, scope: !3786)
!4217 = !{!1155, !1156, i64 3076}
!4218 = !DILocation(line: 1749, column: 1, scope: !3786)
!4219 = distinct !DISubprogram(name: "populateCommandTable", scope: !3, file: !3, line: 2208, type: !349, isLocal: false, isDefinition: true, scopeLine: 2208, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4220)
!4220 = !{!4221, !4222, !4223, !4227, !4228, !4229}
!4221 = !DILocalVariable(name: "j", scope: !4219, file: !3, line: 2209, type: !7)
!4222 = !DILocalVariable(name: "numcommands", scope: !4219, file: !3, line: 2210, type: !7)
!4223 = !DILocalVariable(name: "c", scope: !4224, file: !3, line: 2213, type: !60)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 2212, column: 39)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 2212, column: 5)
!4226 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 2212, column: 5)
!4227 = !DILocalVariable(name: "f", scope: !4224, file: !3, line: 2214, type: !40)
!4228 = !DILocalVariable(name: "retval1", scope: !4224, file: !3, line: 2215, type: !7)
!4229 = !DILocalVariable(name: "retval2", scope: !4224, file: !3, line: 2215, type: !7)
!4230 = !DILocation(line: 2210, column: 9, scope: !4219)
!4231 = !DILocation(line: 2209, column: 9, scope: !4219)
!4232 = !DILocation(line: 2212, column: 10, scope: !4226)
!4233 = !DILocation(line: 2212, column: 5, scope: !4226)
!4234 = !DILocation(line: 2213, column: 51, scope: !4224)
!4235 = !DILocation(line: 2213, column: 30, scope: !4224)
!4236 = !DILocation(line: 2214, column: 22, scope: !4224)
!4237 = !{!1211, !1159, i64 24}
!4238 = !DILocation(line: 2214, column: 15, scope: !4224)
!4239 = !DILocation(line: 2217, column: 9, scope: !4224)
!4240 = !DILocation(line: 2217, column: 15, scope: !4224)
!4241 = !DILocation(line: 2217, column: 18, scope: !4224)
!4242 = !DILocation(line: 2218, column: 13, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 2217, column: 27)
!4244 = !DILocation(line: 2220, column: 49, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 2218, column: 24)
!4246 = !DILocation(line: 2221, column: 48, scope: !4245)
!4247 = !DILocation(line: 2222, column: 46, scope: !4245)
!4248 = !DILocation(line: 2223, column: 47, scope: !4245)
!4249 = !DILocation(line: 2224, column: 49, scope: !4245)
!4250 = !DILocation(line: 2225, column: 47, scope: !4245)
!4251 = !DILocation(line: 2226, column: 56, scope: !4245)
!4252 = !DILocation(line: 2227, column: 48, scope: !4245)
!4253 = !DILocation(line: 2228, column: 46, scope: !4245)
!4254 = !DILocation(line: 2229, column: 53, scope: !4245)
!4255 = !DILocation(line: 2230, column: 47, scope: !4245)
!4256 = !DILocation(line: 2231, column: 45, scope: !4245)
!4257 = !DILocation(line: 2232, column: 22, scope: !4245)
!4258 = !DILocation(line: 0, scope: !4245)
!4259 = !{!1211, !1156, i64 32}
!4260 = !DILocation(line: 2234, column: 14, scope: !4243)
!4261 = distinct !{!4261, !4239, !4262}
!4262 = !DILocation(line: 2235, column: 9, scope: !4224)
!4263 = !DILocation(line: 2237, column: 34, scope: !4224)
!4264 = !DILocation(line: 2237, column: 54, scope: !4224)
!4265 = !DILocation(line: 2237, column: 44, scope: !4224)
!4266 = !DILocation(line: 2237, column: 61, scope: !4224)
!4267 = !DILocation(line: 2237, column: 19, scope: !4224)
!4268 = !DILocation(line: 2215, column: 13, scope: !4224)
!4269 = !DILocation(line: 2240, column: 34, scope: !4224)
!4270 = !DILocation(line: 2240, column: 59, scope: !4224)
!4271 = !DILocation(line: 2240, column: 49, scope: !4224)
!4272 = !DILocation(line: 2240, column: 19, scope: !4224)
!4273 = !DILocation(line: 2215, column: 22, scope: !4224)
!4274 = !DILocation(line: 2241, column: 9, scope: !4224)
!4275 = !DILocation(line: 2212, column: 35, scope: !4225)
!4276 = !DILocation(line: 2212, column: 5, scope: !4225)
!4277 = !DILocation(line: 2212, column: 19, scope: !4225)
!4278 = distinct !{!4278, !4233, !4279}
!4279 = !DILocation(line: 2242, column: 5, scope: !4226)
!4280 = !DILocation(line: 2243, column: 1, scope: !4219)
!4281 = !DILocation(line: 2303, column: 51, scope: !4058)
!4282 = !DILocation(line: 2305, column: 16, scope: !4058)
!4283 = !DILocation(line: 2305, column: 9, scope: !4058)
!4284 = !DILocation(line: 2307, column: 33, scope: !4058)
!4285 = !DILocation(line: 2307, column: 11, scope: !4058)
!4286 = !DILocation(line: 2304, column: 26, scope: !4058)
!4287 = !DILocation(line: 2308, column: 5, scope: !4058)
!4288 = !DILocation(line: 2309, column: 5, scope: !4058)
!4289 = distinct !DISubprogram(name: "restartServer", scope: !3, file: !3, line: 1768, type: !4290, isLocal: false, isDefinition: true, scopeLine: 1768, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4292)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!7, !7, !228}
!4292 = !{!4293, !4294, !4295}
!4293 = !DILocalVariable(name: "flags", arg: 1, scope: !4289, file: !3, line: 1768, type: !7)
!4294 = !DILocalVariable(name: "delay", arg: 2, scope: !4289, file: !3, line: 1768, type: !228)
!4295 = !DILocalVariable(name: "j", scope: !4289, file: !3, line: 1769, type: !7)
!4296 = !DILocation(line: 1768, column: 23, scope: !4289)
!4297 = !DILocation(line: 1768, column: 39, scope: !4289)
!4298 = !DILocation(line: 1773, column: 23, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1773, column: 9)
!4300 = !{!1155, !1159, i64 16}
!4301 = !DILocation(line: 1773, column: 9, scope: !4299)
!4302 = !DILocation(line: 1773, column: 40, scope: !4299)
!4303 = !DILocation(line: 1773, column: 9, scope: !4289)
!4304 = !DILocation(line: 1775, column: 66, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 1773, column: 47)
!4306 = !DILocation(line: 1774, column: 9, scope: !4305)
!4307 = !DILocation(line: 1776, column: 9, scope: !4305)
!4308 = !DILocation(line: 1780, column: 15, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1780, column: 9)
!4310 = !DILocation(line: 1781, column: 16, scope: !4309)
!4311 = !DILocation(line: 1781, column: 9, scope: !4309)
!4312 = !DILocation(line: 1780, column: 47, scope: !4309)
!4313 = !DILocation(line: 1782, column: 9, scope: !4309)
!4314 = !DILocation(line: 1782, column: 42, scope: !4309)
!4315 = !DILocation(line: 1780, column: 9, scope: !4289)
!4316 = !DILocation(line: 1784, column: 9, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4309, file: !3, line: 1783, column: 5)
!4318 = !DILocation(line: 1786, column: 9, scope: !4317)
!4319 = !DILocation(line: 1790, column: 15, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1790, column: 9)
!4321 = !DILocation(line: 1790, column: 43, scope: !4320)
!4322 = !DILocation(line: 1791, column: 9, scope: !4320)
!4323 = !DILocation(line: 1791, column: 46, scope: !4320)
!4324 = !DILocation(line: 1790, column: 9, scope: !4289)
!4325 = !DILocation(line: 1793, column: 9, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1792, column: 5)
!4327 = !DILocation(line: 1794, column: 9, scope: !4326)
!4328 = !DILocation(line: 1769, column: 9, scope: !4289)
!4329 = !DILocation(line: 1799, column: 10, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1799, column: 5)
!4331 = !DILocation(line: 1799, column: 33, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1799, column: 5)
!4333 = !DILocation(line: 1799, column: 19, scope: !4332)
!4334 = !DILocation(line: 1799, column: 5, scope: !4330)
!4335 = !DILocation(line: 1802, column: 13, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1802, column: 13)
!4337 = distinct !DILexicalBlock(scope: !4332, file: !3, line: 1799, column: 57)
!4338 = !DILocation(line: 1802, column: 30, scope: !4336)
!4339 = !DILocation(line: 1802, column: 13, scope: !4337)
!4340 = !DILocation(line: 1802, column: 37, scope: !4336)
!4341 = !DILocation(line: 1799, column: 53, scope: !4332)
!4342 = !DILocation(line: 1799, column: 5, scope: !4332)
!4343 = distinct !{!4343, !4334, !4344}
!4344 = !DILocation(line: 1803, column: 5, scope: !4330)
!4345 = !DILocation(line: 1806, column: 9, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1806, column: 9)
!4347 = !DILocation(line: 1806, column: 9, scope: !4289)
!4348 = !DILocation(line: 1806, column: 28, scope: !4346)
!4349 = !DILocation(line: 1806, column: 16, scope: !4346)
!4350 = !DILocation(line: 1807, column: 18, scope: !4289)
!4351 = !{!1155, !1159, i64 24}
!4352 = !DILocation(line: 1807, column: 11, scope: !4289)
!4353 = !DILocation(line: 1807, column: 5, scope: !4289)
!4354 = !DILocation(line: 1808, column: 42, scope: !4289)
!4355 = !DILocation(line: 1808, column: 27, scope: !4289)
!4356 = !DILocation(line: 1808, column: 12, scope: !4289)
!4357 = !DILocation(line: 1808, column: 25, scope: !4289)
!4358 = !DILocation(line: 1809, column: 19, scope: !4289)
!4359 = !DILocation(line: 1809, column: 37, scope: !4289)
!4360 = !DILocation(line: 1809, column: 47, scope: !4289)
!4361 = !DILocation(line: 1809, column: 5, scope: !4289)
!4362 = !DILocation(line: 1812, column: 5, scope: !4289)
!4363 = !DILocation(line: 0, scope: !4305)
!4364 = !DILocation(line: 1815, column: 1, scope: !4289)
!4365 = distinct !DISubprogram(name: "adjustOpenFilesLimit", scope: !3, file: !3, line: 1825, type: !349, isLocal: false, isDefinition: true, scopeLine: 1825, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4366)
!4366 = !{!4367, !4369, !4374, !4377, !4380, !4381, !4383}
!4367 = !DILocalVariable(name: "maxfiles", scope: !4365, file: !3, line: 1826, type: !4368)
!4368 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !376, line: 19, baseType: !56)
!4369 = !DILocalVariable(name: "limit", scope: !4365, file: !3, line: 1827, type: !4370)
!4370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !376, line: 21, size: 128, elements: !4371)
!4371 = !{!4372, !4373}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4370, file: !376, line: 22, baseType: !4368, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4370, file: !376, line: 23, baseType: !4368, size: 64, offset: 64)
!4374 = !DILocalVariable(name: "oldlimit", scope: !4375, file: !3, line: 1834, type: !4368)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 1833, column: 12)
!4376 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1829, column: 9)
!4377 = !DILocalVariable(name: "bestlimit", scope: !4378, file: !3, line: 1839, type: !4368)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1838, column: 34)
!4379 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1838, column: 13)
!4380 = !DILocalVariable(name: "setrlimit_error", scope: !4378, file: !3, line: 1840, type: !7)
!4381 = !DILocalVariable(name: "decr_step", scope: !4382, file: !3, line: 1846, type: !4368)
!4382 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 1845, column: 41)
!4383 = !DILocalVariable(name: "old_maxclients", scope: !4384, file: !3, line: 1864, type: !50)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1863, column: 39)
!4385 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 1863, column: 17)
!4386 = !DILocation(line: 1826, column: 30, scope: !4365)
!4387 = !DILocation(line: 1826, column: 40, scope: !4365)
!4388 = !DILocation(line: 1826, column: 23, scope: !4365)
!4389 = !DILocation(line: 1826, column: 12, scope: !4365)
!4390 = !DILocation(line: 1827, column: 5, scope: !4365)
!4391 = !DILocation(line: 1827, column: 19, scope: !4365)
!4392 = !DILocation(line: 1829, column: 9, scope: !4376)
!4393 = !DILocation(line: 1829, column: 41, scope: !4376)
!4394 = !DILocation(line: 1829, column: 9, scope: !4365)
!4395 = !DILocation(line: 1831, column: 22, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 1829, column: 48)
!4397 = !DILocation(line: 1831, column: 13, scope: !4396)
!4398 = !DILocation(line: 1830, column: 9, scope: !4396)
!4399 = !DILocation(line: 1832, column: 27, scope: !4396)
!4400 = !DILocation(line: 1833, column: 5, scope: !4396)
!4401 = !DILocation(line: 1834, column: 33, scope: !4375)
!4402 = !{!4403, !1161, i64 0}
!4403 = !{!"rlimit", !1161, i64 0, !1161, i64 8}
!4404 = !DILocation(line: 1834, column: 16, scope: !4375)
!4405 = !DILocation(line: 1838, column: 22, scope: !4379)
!4406 = !DILocation(line: 1838, column: 13, scope: !4375)
!4407 = !DILocation(line: 1840, column: 17, scope: !4378)
!4408 = !DILocation(line: 1839, column: 20, scope: !4378)
!4409 = !DILocation(line: 1845, column: 13, scope: !4378)
!4410 = !DILocation(line: 1846, column: 24, scope: !4382)
!4411 = !DILocation(line: 1848, column: 32, scope: !4382)
!4412 = !DILocation(line: 1849, column: 32, scope: !4382)
!4413 = !{!4403, !1161, i64 8}
!4414 = !DILocation(line: 1850, column: 21, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 1850, column: 21)
!4416 = !DILocation(line: 1850, column: 53, scope: !4415)
!4417 = !DILocation(line: 1850, column: 21, scope: !4382)
!4418 = !DILocation(line: 1851, column: 35, scope: !4382)
!4419 = !DILocation(line: 1855, column: 31, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 1855, column: 21)
!4421 = !DILocation(line: 1855, column: 21, scope: !4382)
!4422 = !DILocation(line: 0, scope: !4420)
!4423 = !DILocation(line: 1856, column: 27, scope: !4382)
!4424 = !DILocation(line: 1857, column: 13, scope: !4378)
!4425 = !DILocation(line: 1845, column: 29, scope: !4378)
!4426 = !DILocation(line: 1861, column: 27, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 1861, column: 17)
!4428 = !DILocation(line: 1861, column: 17, scope: !4378)
!4429 = !DILocation(line: 1861, column: 39, scope: !4427)
!4430 = !DILocation(line: 0, scope: !4378)
!4431 = !DILocation(line: 1863, column: 27, scope: !4385)
!4432 = !DILocation(line: 1863, column: 17, scope: !4378)
!4433 = !DILocation(line: 1864, column: 54, scope: !4384)
!4434 = !DILocation(line: 1864, column: 30, scope: !4384)
!4435 = !DILocation(line: 1865, column: 37, scope: !4384)
!4436 = !DILocation(line: 1865, column: 35, scope: !4384)
!4437 = !DILocation(line: 1869, column: 31, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 1869, column: 21)
!4439 = !DILocation(line: 1869, column: 21, scope: !4384)
!4440 = !DILocation(line: 1870, column: 21, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4438, file: !3, line: 1869, column: 59)
!4442 = !DILocation(line: 1876, column: 21, scope: !4441)
!4443 = !DILocation(line: 1878, column: 17, scope: !4384)
!4444 = !DILocation(line: 1884, column: 52, scope: !4384)
!4445 = !DILocation(line: 1882, column: 17, scope: !4384)
!4446 = !DILocation(line: 1889, column: 60, scope: !4384)
!4447 = !DILocation(line: 1885, column: 17, scope: !4384)
!4448 = !DILocation(line: 1890, column: 13, scope: !4384)
!4449 = !DILocation(line: 1891, column: 17, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1890, column: 20)
!4451 = !DILocation(line: 1896, column: 9, scope: !4378)
!4452 = !DILocation(line: 1898, column: 1, scope: !4365)
!4453 = distinct !DISubprogram(name: "checkTcpBacklogSettings", scope: !3, file: !3, line: 1902, type: !349, isLocal: false, isDefinition: true, scopeLine: 1902, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!4454 = !DILocation(line: 1915, column: 1, scope: !4453)
!4455 = distinct !DISubprogram(name: "listenToPort", scope: !3, file: !3, line: 1935, type: !4456, isLocal: false, isDefinition: true, scopeLine: 1935, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4458)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!7, !7, !259, !259}
!4458 = !{!4459, !4460, !4461, !4462, !4463}
!4459 = !DILocalVariable(name: "port", arg: 1, scope: !4455, file: !3, line: 1935, type: !7)
!4460 = !DILocalVariable(name: "fds", arg: 2, scope: !4455, file: !3, line: 1935, type: !259)
!4461 = !DILocalVariable(name: "count", arg: 3, scope: !4455, file: !3, line: 1935, type: !259)
!4462 = !DILocalVariable(name: "j", scope: !4455, file: !3, line: 1936, type: !7)
!4463 = !DILocalVariable(name: "unsupported", scope: !4464, file: !3, line: 1943, type: !7)
!4464 = distinct !DILexicalBlock(scope: !4465, file: !3, line: 1942, column: 41)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 1942, column: 13)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 1941, column: 59)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 1941, column: 5)
!4468 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1941, column: 5)
!4469 = !DILocation(line: 1935, column: 22, scope: !4455)
!4470 = !DILocation(line: 1935, column: 33, scope: !4455)
!4471 = !DILocation(line: 1935, column: 43, scope: !4455)
!4472 = !DILocation(line: 1940, column: 16, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 1940, column: 9)
!4474 = !DILocation(line: 1940, column: 31, scope: !4473)
!4475 = !DILocation(line: 1940, column: 9, scope: !4455)
!4476 = !DILocation(line: 1940, column: 56, scope: !4473)
!4477 = !DILocation(line: 1940, column: 37, scope: !4473)
!4478 = !DILocation(line: 1936, column: 9, scope: !4455)
!4479 = !DILocation(line: 1941, column: 10, scope: !4468)
!4480 = !DILocation(line: 1941, column: 5, scope: !4468)
!4481 = !DILocation(line: 1942, column: 13, scope: !4465)
!4482 = !DILocation(line: 1942, column: 32, scope: !4465)
!4483 = !DILocation(line: 1942, column: 13, scope: !4466)
!4484 = !DILocation(line: 1943, column: 17, scope: !4464)
!4485 = !DILocation(line: 1947, column: 24, scope: !4464)
!4486 = !DILocation(line: 1946, column: 27, scope: !4464)
!4487 = !DILocation(line: 1946, column: 17, scope: !4464)
!4488 = !DILocation(line: 1946, column: 13, scope: !4464)
!4489 = !DILocation(line: 1946, column: 25, scope: !4464)
!4490 = !DILocation(line: 1948, column: 21, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 1948, column: 17)
!4492 = !DILocation(line: 1948, column: 17, scope: !4491)
!4493 = !DILocation(line: 1948, column: 29, scope: !4491)
!4494 = !DILocation(line: 1948, column: 17, scope: !4464)
!4495 = !DILocation(line: 1949, column: 17, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1948, column: 42)
!4497 = !DILocation(line: 1950, column: 25, scope: !4496)
!4498 = !DILocation(line: 1951, column: 13, scope: !4496)
!4499 = !DILocation(line: 1951, column: 24, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 1951, column: 24)
!4501 = !DILocation(line: 1951, column: 30, scope: !4500)
!4502 = !DILocation(line: 1951, column: 24, scope: !4491)
!4503 = !DILocation(line: 1956, column: 17, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 1956, column: 17)
!4505 = !DILocation(line: 1953, column: 17, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 1951, column: 47)
!4507 = !DILocation(line: 1954, column: 13, scope: !4506)
!4508 = !DILocation(line: 1956, column: 29, scope: !4504)
!4509 = !DILocation(line: 1956, column: 24, scope: !4504)
!4510 = !DILocation(line: 1959, column: 28, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 1956, column: 45)
!4512 = !DILocation(line: 1958, column: 31, scope: !4511)
!4513 = !DILocation(line: 1958, column: 21, scope: !4511)
!4514 = !DILocation(line: 1958, column: 17, scope: !4511)
!4515 = !DILocation(line: 1958, column: 29, scope: !4511)
!4516 = !DILocation(line: 1960, column: 25, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 1960, column: 21)
!4518 = !DILocation(line: 1960, column: 21, scope: !4517)
!4519 = !DILocation(line: 1960, column: 33, scope: !4517)
!4520 = !DILocation(line: 1960, column: 21, scope: !4511)
!4521 = !DILocation(line: 1961, column: 21, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 1960, column: 46)
!4523 = !DILocation(line: 1962, column: 29, scope: !4522)
!4524 = !DILocation(line: 1963, column: 17, scope: !4522)
!4525 = !DILocation(line: 1963, column: 28, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 1963, column: 28)
!4527 = !DILocation(line: 1963, column: 34, scope: !4526)
!4528 = !DILocation(line: 1963, column: 28, scope: !4517)
!4529 = !DILocation(line: 1964, column: 32, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 1963, column: 51)
!4531 = !DILocation(line: 1965, column: 21, scope: !4530)
!4532 = !DILocation(line: 1966, column: 17, scope: !4530)
!4533 = !DILocation(line: 0, scope: !4464)
!4534 = !DILocation(line: 1971, column: 17, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 1971, column: 17)
!4536 = !DILocation(line: 1971, column: 24, scope: !4535)
!4537 = !DILocation(line: 1971, column: 38, scope: !4535)
!4538 = !DILocation(line: 1971, column: 17, scope: !4464)
!4539 = !DILocation(line: 0, scope: !4465)
!4540 = !DILocation(line: 1972, column: 20, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4465, file: !3, line: 1972, column: 20)
!4542 = !DILocation(line: 0, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 1976, column: 16)
!4544 = !DILocation(line: 1972, column: 20, scope: !4465)
!4545 = !DILocation(line: 1974, column: 27, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 1972, column: 52)
!4547 = !DILocation(line: 1976, column: 9, scope: !4546)
!4548 = !DILocation(line: 1978, column: 27, scope: !4543)
!4549 = !DILocation(line: 1981, column: 17, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4466, file: !3, line: 1981, column: 13)
!4551 = !DILocation(line: 1981, column: 13, scope: !4550)
!4552 = !DILocation(line: 1981, column: 25, scope: !4550)
!4553 = !DILocation(line: 1981, column: 13, scope: !4466)
!4554 = !DILocation(line: 1984, column: 17, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 1981, column: 38)
!4556 = !DILocation(line: 1982, column: 13, scope: !4555)
!4557 = !DILocation(line: 1986, column: 21, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 1986, column: 21)
!4559 = !DILocation(line: 1986, column: 27, scope: !4558)
!4560 = !DILocation(line: 1986, column: 46, scope: !4558)
!4561 = !DILocation(line: 1986, column: 49, scope: !4558)
!4562 = !DILocation(line: 1986, column: 55, scope: !4558)
!4563 = !DILocation(line: 1986, column: 74, scope: !4558)
!4564 = !DILocation(line: 1987, column: 21, scope: !4558)
!4565 = !DILocation(line: 1987, column: 27, scope: !4558)
!4566 = !DILocation(line: 1987, column: 46, scope: !4558)
!4567 = !DILocation(line: 1987, column: 49, scope: !4558)
!4568 = !DILocation(line: 1987, column: 55, scope: !4558)
!4569 = !DILocation(line: 1987, column: 71, scope: !4558)
!4570 = !DILocation(line: 1988, column: 21, scope: !4558)
!4571 = !DILocation(line: 1988, column: 27, scope: !4558)
!4572 = !DILocation(line: 1988, column: 46, scope: !4558)
!4573 = !DILocation(line: 1988, column: 49, scope: !4558)
!4574 = !DILocation(line: 1988, column: 55, scope: !4558)
!4575 = !DILocation(line: 1986, column: 21, scope: !4555)
!4576 = !DILocation(line: 1992, column: 9, scope: !4466)
!4577 = !DILocation(line: 1993, column: 17, scope: !4466)
!4578 = !DILocation(line: 1994, column: 5, scope: !4466)
!4579 = !DILocation(line: 1941, column: 55, scope: !4467)
!4580 = !DILocation(line: 1941, column: 5, scope: !4467)
!4581 = !DILocation(line: 1941, column: 28, scope: !4467)
!4582 = !DILocation(line: 1941, column: 19, scope: !4467)
!4583 = distinct !{!4583, !4480, !4584}
!4584 = !DILocation(line: 1994, column: 5, scope: !4468)
!4585 = !DILocation(line: 0, scope: !4455)
!4586 = !DILocation(line: 0, scope: !4555)
!4587 = !DILocation(line: 1996, column: 1, scope: !4455)
!4588 = distinct !DISubprogram(name: "resetServerStats", scope: !3, file: !3, line: 2001, type: !349, isLocal: false, isDefinition: true, scopeLine: 2001, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4589)
!4589 = !{!4590}
!4590 = !DILocalVariable(name: "j", scope: !4588, file: !3, line: 2002, type: !7)
!4591 = !DILocation(line: 2004, column: 29, scope: !4588)
!4592 = !DILocation(line: 2006, column: 29, scope: !4588)
!4593 = !{!1155, !1161, i64 1024}
!4594 = !DILocation(line: 2007, column: 36, scope: !4588)
!4595 = !{!1155, !1162, i64 1032}
!4596 = !DILocation(line: 2008, column: 48, scope: !4588)
!4597 = !DILocation(line: 2011, column: 31, scope: !4588)
!4598 = !DILocation(line: 2012, column: 36, scope: !4588)
!4599 = !DILocation(line: 2014, column: 40, scope: !4588)
!4600 = !DILocation(line: 2016, column: 39, scope: !4588)
!4601 = !{!1155, !1161, i64 1104}
!4602 = !DILocation(line: 2017, column: 27, scope: !4588)
!4603 = !{!1155, !1161, i64 1120}
!4604 = !DILocation(line: 2018, column: 27, scope: !4588)
!4605 = !{!1155, !1162, i64 1128}
!4606 = !DILocation(line: 2019, column: 31, scope: !4588)
!4607 = !{!1155, !1161, i64 1136}
!4608 = !DILocation(line: 2020, column: 27, scope: !4588)
!4609 = !DILocation(line: 2022, column: 34, scope: !4588)
!4610 = !{!1155, !1161, i64 1160}
!4611 = !DILocation(line: 2002, column: 9, scope: !4588)
!4612 = !DILocation(line: 2023, column: 10, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 2023, column: 5)
!4614 = !DILocation(line: 2023, column: 5, scope: !4613)
!4615 = !DILocation(line: 2024, column: 35, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !3, line: 2023, column: 46)
!4617 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 2023, column: 5)
!4618 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !4619)
!4619 = distinct !DILocation(line: 458, column: 12, scope: !1961, inlinedAt: !4620)
!4620 = distinct !DILocation(line: 2025, column: 50, scope: !4616)
!4621 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !4622)
!4622 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !4619)
!4623 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !4622)
!4624 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !4622)
!4625 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !4622)
!4626 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !4622)
!4627 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !4622)
!4628 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !4622)
!4629 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !4622)
!4630 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !4622)
!4631 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !4622)
!4632 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !4619)
!4633 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !4619)
!4634 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !4619)
!4635 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !4619)
!4636 = !DILocation(line: 458, column: 20, scope: !1961, inlinedAt: !4620)
!4637 = !DILocation(line: 458, column: 5, scope: !1961, inlinedAt: !4620)
!4638 = !DILocation(line: 2025, column: 48, scope: !4616)
!4639 = !DILocation(line: 2026, column: 49, scope: !4616)
!4640 = !DILocation(line: 2027, column: 9, scope: !4616)
!4641 = !DILocation(line: 2023, column: 5, scope: !4617)
!4642 = !DILocation(line: 2030, column: 33, scope: !4588)
!4643 = !DILocation(line: 2032, column: 30, scope: !4588)
!4644 = !DILocation(line: 2033, column: 1, scope: !4588)
!4645 = distinct !DISubprogram(name: "initServer", scope: !3, file: !3, line: 2035, type: !349, isLocal: false, isDefinition: true, scopeLine: 2035, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4646)
!4646 = !{!4647}
!4647 = !DILocalVariable(name: "j", scope: !4645, file: !3, line: 2036, type: !7)
!4648 = !DILocation(line: 2038, column: 5, scope: !4645)
!4649 = !DILocation(line: 2039, column: 5, scope: !4645)
!4650 = !DILocation(line: 3839, column: 5, scope: !4651, inlinedAt: !4676)
!4651 = distinct !DISubprogram(name: "setupSignalHandlers", scope: !3, file: !3, line: 3838, type: !349, isLocal: false, isDefinition: true, scopeLine: 3838, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4652)
!4652 = !{!4653}
!4653 = !DILocalVariable(name: "act", scope: !4651, file: !3, line: 3839, type: !4654)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !610, line: 74, size: 256, elements: !4655)
!4655 = !{!4656, !4671, !4674, !4675}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "__sa_handler", scope: !4654, file: !610, line: 78, baseType: !4657, size: 64)
!4657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4654, file: !610, line: 75, size: 64, elements: !4658)
!4658 = !{!4659, !4660}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4657, file: !610, line: 76, baseType: !57, size: 64)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !4657, file: !610, line: 77, baseType: !4661, size: 64)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{null, !7, !4664, !6}
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !610, line: 72, baseType: !4666)
!4666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !610, line: 68, size: 96, elements: !4667)
!4667 = !{!4668, !4669, !4670}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4666, file: !610, line: 69, baseType: !7, size: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4666, file: !610, line: 70, baseType: !7, size: 32, offset: 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !4666, file: !610, line: 71, baseType: !609, size: 32, offset: 64)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4654, file: !610, line: 79, baseType: !4672, size: 64, offset: 64)
!4672 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !610, line: 64, baseType: !4673)
!4673 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !610, line: 63, baseType: !37)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4654, file: !610, line: 80, baseType: !7, size: 32, offset: 128)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4654, file: !610, line: 81, baseType: !1661, size: 64, offset: 192)
!4676 = distinct !DILocation(line: 2040, column: 5, scope: !4645)
!4677 = !DILocation(line: 3843, column: 22, scope: !4651, inlinedAt: !4676)
!4678 = !DILocation(line: 3843, column: 5, scope: !4651, inlinedAt: !4676)
!4679 = !DILocation(line: 3844, column: 9, scope: !4651, inlinedAt: !4676)
!4680 = !DILocation(line: 3844, column: 18, scope: !4651, inlinedAt: !4676)
!4681 = !{!4682, !1156, i64 16}
!4682 = !{!"sigaction", !1157, i64 0, !1160, i64 8, !1156, i64 16, !1159, i64 24}
!4683 = !DILocation(line: 3845, column: 9, scope: !4651, inlinedAt: !4676)
!4684 = !DILocation(line: 3845, column: 20, scope: !4651, inlinedAt: !4676)
!4685 = !DILocation(line: 3839, column: 22, scope: !4651, inlinedAt: !4676)
!4686 = !DILocation(line: 3846, column: 5, scope: !4651, inlinedAt: !4676)
!4687 = !DILocation(line: 3847, column: 5, scope: !4651, inlinedAt: !4676)
!4688 = !DILocation(line: 3859, column: 1, scope: !4651, inlinedAt: !4676)
!4689 = !DILocation(line: 2042, column: 16, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2042, column: 9)
!4691 = !DILocation(line: 2042, column: 9, scope: !4690)
!4692 = !DILocation(line: 2042, column: 9, scope: !4645)
!4693 = !DILocation(line: 2043, column: 24, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 2042, column: 32)
!4695 = !DILocation(line: 2044, column: 20, scope: !4694)
!4696 = !DILocation(line: 2043, column: 9, scope: !4694)
!4697 = !DILocation(line: 2045, column: 5, scope: !4694)
!4698 = !DILocation(line: 2047, column: 24, scope: !4645)
!4699 = !DILocation(line: 2047, column: 15, scope: !4645)
!4700 = !DILocation(line: 2048, column: 18, scope: !4645)
!4701 = !DILocation(line: 2048, column: 16, scope: !4645)
!4702 = !DILocation(line: 2049, column: 27, scope: !4645)
!4703 = !{!1155, !1159, i64 552}
!4704 = !DILocation(line: 2050, column: 22, scope: !4645)
!4705 = !DILocation(line: 2050, column: 20, scope: !4645)
!4706 = !DILocation(line: 2051, column: 28, scope: !4645)
!4707 = !DILocation(line: 2051, column: 26, scope: !4645)
!4708 = !{!1155, !1159, i64 560}
!4709 = !DILocation(line: 2052, column: 31, scope: !4645)
!4710 = !DILocation(line: 2052, column: 29, scope: !4645)
!4711 = !{!1155, !1159, i64 520}
!4712 = !DILocation(line: 2053, column: 21, scope: !4645)
!4713 = !DILocation(line: 2053, column: 19, scope: !4645)
!4714 = !DILocation(line: 2054, column: 23, scope: !4645)
!4715 = !DILocation(line: 2054, column: 21, scope: !4645)
!4716 = !DILocation(line: 2055, column: 36, scope: !4645)
!4717 = !DILocation(line: 2055, column: 34, scope: !4645)
!4718 = !{!1155, !1159, i64 528}
!4719 = !DILocation(line: 2056, column: 23, scope: !4645)
!4720 = !DILocation(line: 2057, column: 32, scope: !4645)
!4721 = !DILocation(line: 2057, column: 30, scope: !4645)
!4722 = !DILocation(line: 2058, column: 25, scope: !4645)
!4723 = !DILocation(line: 2058, column: 23, scope: !4645)
!4724 = !{!1155, !1159, i64 2776}
!4725 = !DILocation(line: 2059, column: 35, scope: !4645)
!4726 = !DILocation(line: 2059, column: 33, scope: !4645)
!4727 = !DILocation(line: 2060, column: 32, scope: !4645)
!4728 = !DILocation(line: 2061, column: 27, scope: !4645)
!4729 = !{!1155, !1156, i64 568}
!4730 = !DILocation(line: 2062, column: 33, scope: !4645)
!4731 = !DILocation(line: 2062, column: 31, scope: !4645)
!4732 = !{!1155, !1160, i64 3144}
!4733 = !DILocation(line: 2064, column: 5, scope: !4645)
!4734 = !DILocation(line: 2065, column: 5, scope: !4645)
!4735 = !DILocation(line: 2066, column: 42, scope: !4645)
!4736 = !DILocation(line: 2066, column: 52, scope: !4645)
!4737 = !DILocation(line: 2066, column: 17, scope: !4645)
!4738 = !DILocation(line: 2066, column: 15, scope: !4645)
!4739 = !{!1155, !1159, i64 72}
!4740 = !DILocation(line: 2067, column: 19, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2067, column: 9)
!4742 = !DILocation(line: 2067, column: 9, scope: !4645)
!4743 = !DILocation(line: 2070, column: 22, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 2067, column: 28)
!4745 = !DILocation(line: 2070, column: 13, scope: !4744)
!4746 = !DILocation(line: 2068, column: 9, scope: !4744)
!4747 = !DILocation(line: 2071, column: 9, scope: !4744)
!4748 = !DILocation(line: 2073, column: 48, scope: !4645)
!4749 = !DILocation(line: 2073, column: 41, scope: !4645)
!4750 = !DILocation(line: 2073, column: 40, scope: !4645)
!4751 = !DILocation(line: 2073, column: 17, scope: !4645)
!4752 = !DILocation(line: 2073, column: 15, scope: !4645)
!4753 = !DILocation(line: 2076, column: 16, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2076, column: 9)
!4755 = !DILocation(line: 2076, column: 21, scope: !4754)
!4756 = !DILocation(line: 2076, column: 26, scope: !4754)
!4757 = !DILocation(line: 2077, column: 9, scope: !4754)
!4758 = !DILocation(line: 2077, column: 66, scope: !4754)
!4759 = !DILocation(line: 2076, column: 9, scope: !4645)
!4760 = !DILocation(line: 2078, column: 9, scope: !4754)
!4761 = !DILocation(line: 2081, column: 16, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2081, column: 9)
!4763 = !DILocation(line: 2081, column: 27, scope: !4762)
!4764 = !DILocation(line: 2081, column: 9, scope: !4645)
!4765 = !DILocation(line: 2082, column: 9, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 2081, column: 36)
!4767 = !DILocation(line: 2083, column: 59, scope: !4766)
!4768 = !DILocation(line: 2084, column: 20, scope: !4766)
!4769 = !DILocation(line: 2084, column: 43, scope: !4766)
!4770 = !DILocation(line: 2083, column: 23, scope: !4766)
!4771 = !DILocation(line: 2083, column: 21, scope: !4766)
!4772 = !DILocation(line: 2085, column: 25, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2085, column: 13)
!4774 = !DILocation(line: 2085, column: 13, scope: !4766)
!4775 = !DILocation(line: 2086, column: 13, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 2085, column: 38)
!4777 = !DILocation(line: 2087, column: 13, scope: !4776)
!4778 = !DILocation(line: 2089, column: 9, scope: !4766)
!4779 = !DILocation(line: 2090, column: 5, scope: !4766)
!4780 = !DILocation(line: 2093, column: 16, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2093, column: 9)
!4782 = !DILocation(line: 2093, column: 27, scope: !4781)
!4783 = !DILocation(line: 2093, column: 42, scope: !4781)
!4784 = !DILocation(line: 2093, column: 47, scope: !4781)
!4785 = !DILocation(line: 2093, column: 32, scope: !4781)
!4786 = !DILocation(line: 2094, column: 9, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 2093, column: 52)
!4788 = !DILocation(line: 2095, column: 9, scope: !4787)
!4789 = !DILocation(line: 2036, column: 9, scope: !4645)
!4790 = !DILocation(line: 2099, column: 10, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2099, column: 5)
!4792 = !DILocation(line: 2099, column: 28, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2099, column: 5)
!4794 = !DILocation(line: 2099, column: 19, scope: !4793)
!4795 = !DILocation(line: 2099, column: 5, scope: !4791)
!4796 = !DILocation(line: 2100, column: 29, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 2099, column: 40)
!4798 = !DILocation(line: 2100, column: 16, scope: !4797)
!4799 = !DILocation(line: 2100, column: 22, scope: !4797)
!4800 = !DILocation(line: 2100, column: 27, scope: !4797)
!4801 = !DILocation(line: 2101, column: 32, scope: !4797)
!4802 = !DILocation(line: 2101, column: 16, scope: !4797)
!4803 = !DILocation(line: 2101, column: 22, scope: !4797)
!4804 = !DILocation(line: 2101, column: 30, scope: !4797)
!4805 = !DILocation(line: 2102, column: 38, scope: !4797)
!4806 = !DILocation(line: 2102, column: 16, scope: !4797)
!4807 = !DILocation(line: 2102, column: 22, scope: !4797)
!4808 = !DILocation(line: 2102, column: 36, scope: !4797)
!4809 = !{!2373, !1159, i64 16}
!4810 = !DILocation(line: 2103, column: 35, scope: !4797)
!4811 = !DILocation(line: 2103, column: 16, scope: !4797)
!4812 = !DILocation(line: 2103, column: 22, scope: !4797)
!4813 = !DILocation(line: 2103, column: 33, scope: !4797)
!4814 = !{!2373, !1159, i64 24}
!4815 = !DILocation(line: 2104, column: 37, scope: !4797)
!4816 = !DILocation(line: 2104, column: 16, scope: !4797)
!4817 = !DILocation(line: 2104, column: 22, scope: !4797)
!4818 = !DILocation(line: 2104, column: 35, scope: !4797)
!4819 = !{!2373, !1159, i64 32}
!4820 = !DILocation(line: 2105, column: 22, scope: !4797)
!4821 = !DILocation(line: 2105, column: 25, scope: !4797)
!4822 = !{!2373, !1156, i64 40}
!4823 = !DILocation(line: 2106, column: 22, scope: !4797)
!4824 = !DILocation(line: 2106, column: 30, scope: !4797)
!4825 = !{!2373, !1161, i64 48}
!4826 = !DILocation(line: 2107, column: 37, scope: !4797)
!4827 = !DILocation(line: 2107, column: 16, scope: !4797)
!4828 = !DILocation(line: 2107, column: 22, scope: !4797)
!4829 = !DILocation(line: 2107, column: 35, scope: !4797)
!4830 = !{!2373, !1159, i64 56}
!4831 = !DILocation(line: 2099, column: 36, scope: !4793)
!4832 = !DILocation(line: 2099, column: 5, scope: !4793)
!4833 = distinct !{!4833, !4795, !4834}
!4834 = !DILocation(line: 2108, column: 5, scope: !4791)
!4835 = !DILocation(line: 2109, column: 5, scope: !4645)
!4836 = !DILocation(line: 2110, column: 30, scope: !4645)
!4837 = !DILocation(line: 2110, column: 28, scope: !4645)
!4838 = !{!1155, !1159, i64 2904}
!4839 = !DILocation(line: 2111, column: 30, scope: !4645)
!4840 = !DILocation(line: 2111, column: 28, scope: !4645)
!4841 = !{!1155, !1159, i64 2912}
!4842 = !DILocation(line: 2112, column: 5, scope: !4645)
!4843 = !{!2812, !1159, i64 24}
!4844 = !DILocation(line: 2113, column: 5, scope: !4645)
!4845 = !{!2812, !1159, i64 32}
!4846 = !DILocation(line: 2114, column: 22, scope: !4645)
!4847 = !DILocation(line: 2115, column: 26, scope: !4645)
!4848 = !DILocation(line: 2116, column: 26, scope: !4645)
!4849 = !DILocation(line: 2117, column: 27, scope: !4645)
!4850 = !{!1155, !1156, i64 2172}
!4851 = !DILocation(line: 2118, column: 33, scope: !4645)
!4852 = !DILocation(line: 2119, column: 31, scope: !4645)
!4853 = !DILocation(line: 2120, column: 31, scope: !4645)
!4854 = !DILocation(line: 2121, column: 34, scope: !4645)
!4855 = !{!1155, !1161, i64 2216}
!4856 = !DILocation(line: 2122, column: 5, scope: !4645)
!4857 = !DILocation(line: 2123, column: 22, scope: !4645)
!4858 = !DILocation(line: 2123, column: 20, scope: !4645)
!4859 = !{!1155, !1159, i64 1952}
!4860 = !DILocation(line: 2124, column: 23, scope: !4645)
!4861 = !DILocation(line: 2124, column: 21, scope: !4645)
!4862 = !{!1155, !1160, i64 2136}
!4863 = !DILocation(line: 2125, column: 27, scope: !4645)
!4864 = !DILocation(line: 2127, column: 32, scope: !4645)
!4865 = !{!1155, !1160, i64 2160}
!4866 = !DILocation(line: 2128, column: 18, scope: !4645)
!4867 = !{!1155, !1161, i64 2080}
!4868 = !DILocation(line: 2129, column: 5, scope: !4645)
!4869 = !DILocation(line: 2131, column: 29, scope: !4645)
!4870 = !DILocation(line: 2131, column: 27, scope: !4645)
!4871 = !{!1155, !1160, i64 1000}
!4872 = !DILocation(line: 2132, column: 29, scope: !4645)
!4873 = !DILocation(line: 2133, column: 31, scope: !4645)
!4874 = !DILocation(line: 2135, column: 43, scope: !4645)
!4875 = !DILocation(line: 2137, column: 50, scope: !4645)
!4876 = !DILocation(line: 2139, column: 49, scope: !4645)
!4877 = !DILocation(line: 2140, column: 30, scope: !4645)
!4878 = !{!1155, !1156, i64 2176}
!4879 = !DILocation(line: 2141, column: 34, scope: !4645)
!4880 = !DILocation(line: 2142, column: 33, scope: !4645)
!4881 = !{!1155, !1156, i64 2028}
!4882 = !DILocation(line: 2143, column: 35, scope: !4645)
!4883 = !{!1155, !1156, i64 2440}
!4884 = !DILocation(line: 2148, column: 34, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2148, column: 9)
!4886 = !DILocation(line: 2148, column: 9, scope: !4885)
!4887 = !DILocation(line: 2148, column: 65, scope: !4885)
!4888 = !DILocation(line: 2148, column: 9, scope: !4645)
!4889 = !DILocation(line: 2149, column: 9, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 2148, column: 76)
!4891 = !DILocation(line: 2155, column: 10, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2155, column: 5)
!4893 = !DILocation(line: 2155, column: 28, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2155, column: 5)
!4895 = !DILocation(line: 2155, column: 19, scope: !4894)
!4896 = !DILocation(line: 2155, column: 5, scope: !4892)
!4897 = !DILocation(line: 2156, column: 38, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 2156, column: 13)
!4899 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 2155, column: 45)
!4900 = !DILocation(line: 2156, column: 42, scope: !4898)
!4901 = !DILocation(line: 2156, column: 13, scope: !4898)
!4902 = !DILocation(line: 2157, column: 36, scope: !4898)
!4903 = !DILocation(line: 2156, column: 13, scope: !4899)
!4904 = !DILocation(line: 2159, column: 17, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 2158, column: 13)
!4906 = !DILocation(line: 2155, column: 41, scope: !4894)
!4907 = !DILocation(line: 2155, column: 5, scope: !4894)
!4908 = distinct !{!4908, !4896, !4909}
!4909 = !DILocation(line: 2162, column: 5, scope: !4892)
!4910 = !DILocation(line: 2163, column: 16, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2163, column: 9)
!4912 = !DILocation(line: 2163, column: 21, scope: !4911)
!4913 = !DILocation(line: 2163, column: 25, scope: !4911)
!4914 = !DILocation(line: 2163, column: 53, scope: !4911)
!4915 = !DILocation(line: 2163, column: 28, scope: !4911)
!4916 = !DILocation(line: 2164, column: 33, scope: !4911)
!4917 = !DILocation(line: 2163, column: 9, scope: !4645)
!4918 = !DILocation(line: 2164, column: 44, scope: !4911)
!4919 = !DILocation(line: 2169, column: 34, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2169, column: 9)
!4921 = !DILocation(line: 2169, column: 38, scope: !4920)
!4922 = !DILocation(line: 2169, column: 9, scope: !4920)
!4923 = !DILocation(line: 2170, column: 47, scope: !4920)
!4924 = !DILocation(line: 2169, column: 9, scope: !4645)
!4925 = !DILocation(line: 2171, column: 13, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 2170, column: 58)
!4927 = !DILocation(line: 2177, column: 16, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2177, column: 9)
!4929 = !DILocation(line: 2177, column: 26, scope: !4928)
!4930 = !DILocation(line: 2177, column: 9, scope: !4645)
!4931 = !DILocation(line: 2178, column: 37, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 2177, column: 37)
!4933 = !DILocation(line: 2178, column: 25, scope: !4932)
!4934 = !DILocation(line: 2178, column: 23, scope: !4932)
!4935 = !DILocation(line: 2180, column: 27, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 2180, column: 13)
!4937 = !DILocation(line: 2180, column: 13, scope: !4932)
!4938 = !DILocation(line: 2182, column: 26, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 2180, column: 34)
!4940 = !DILocation(line: 2182, column: 17, scope: !4939)
!4941 = !DILocation(line: 2181, column: 13, scope: !4939)
!4942 = !DILocation(line: 2183, column: 13, scope: !4939)
!4943 = !DILocation(line: 2191, column: 16, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2191, column: 9)
!4945 = !DILocation(line: 2191, column: 26, scope: !4944)
!4946 = !DILocation(line: 2191, column: 42, scope: !4944)
!4947 = !DILocation(line: 2191, column: 52, scope: !4944)
!4948 = !DILocation(line: 2191, column: 32, scope: !4944)
!4949 = !DILocation(line: 2192, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 2191, column: 58)
!4951 = !DILocation(line: 2193, column: 26, scope: !4950)
!4952 = !DILocation(line: 2194, column: 33, scope: !4950)
!4953 = !{!1155, !1156, i64 2712}
!4954 = !DILocation(line: 2195, column: 5, scope: !4950)
!4955 = !DILocation(line: 2197, column: 16, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 2197, column: 9)
!4957 = !DILocation(line: 2197, column: 9, scope: !4956)
!4958 = !DILocation(line: 2197, column: 9, scope: !4645)
!4959 = !DILocation(line: 2197, column: 33, scope: !4956)
!4960 = !DILocation(line: 2198, column: 5, scope: !4645)
!4961 = !DILocation(line: 2199, column: 5, scope: !4645)
!4962 = !DILocation(line: 2200, column: 5, scope: !4645)
!4963 = !DILocation(line: 2201, column: 5, scope: !4645)
!4964 = !DILocation(line: 2202, column: 5, scope: !4645)
!4965 = !DILocation(line: 2203, column: 35, scope: !4645)
!4966 = !DILocation(line: 2203, column: 33, scope: !4645)
!4967 = !{!1155, !1160, i64 168}
!4968 = !DILocation(line: 2204, column: 1, scope: !4645)
!4969 = !DILocation(line: 3839, column: 5, scope: !4651)
!4970 = !DILocation(line: 3843, column: 22, scope: !4651)
!4971 = !DILocation(line: 3843, column: 5, scope: !4651)
!4972 = !DILocation(line: 3844, column: 9, scope: !4651)
!4973 = !DILocation(line: 3844, column: 18, scope: !4651)
!4974 = !DILocation(line: 3845, column: 9, scope: !4651)
!4975 = !DILocation(line: 3845, column: 20, scope: !4651)
!4976 = !DILocation(line: 3839, column: 22, scope: !4651)
!4977 = !DILocation(line: 3846, column: 5, scope: !4651)
!4978 = !DILocation(line: 3847, column: 5, scope: !4651)
!4979 = !DILocation(line: 3859, column: 1, scope: !4651)
!4980 = distinct !DISubprogram(name: "resetCommandTableStats", scope: !3, file: !3, line: 2245, type: !349, isLocal: false, isDefinition: true, scopeLine: 2245, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4981)
!4981 = !{!4982, !4983, !4984}
!4982 = !DILocalVariable(name: "c", scope: !4980, file: !3, line: 2246, type: !60)
!4983 = !DILocalVariable(name: "de", scope: !4980, file: !3, line: 2247, type: !123)
!4984 = !DILocalVariable(name: "di", scope: !4980, file: !3, line: 2248, type: !499)
!4985 = !DILocation(line: 2250, column: 37, scope: !4980)
!4986 = !DILocation(line: 2250, column: 10, scope: !4980)
!4987 = !DILocation(line: 2248, column: 19, scope: !4980)
!4988 = !DILocation(line: 2251, column: 5, scope: !4980)
!4989 = !DILocation(line: 2251, column: 17, scope: !4980)
!4990 = !DILocation(line: 2247, column: 16, scope: !4980)
!4991 = !DILocation(line: 2251, column: 31, scope: !4980)
!4992 = !DILocation(line: 2252, column: 37, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 2251, column: 40)
!4994 = !DILocation(line: 2246, column: 26, scope: !4980)
!4995 = !DILocation(line: 2253, column: 12, scope: !4993)
!4996 = !DILocation(line: 2253, column: 25, scope: !4993)
!4997 = distinct !{!4997, !4988, !4998}
!4998 = !DILocation(line: 2255, column: 5, scope: !4980)
!4999 = !DILocation(line: 2256, column: 5, scope: !4980)
!5000 = !DILocation(line: 2258, column: 1, scope: !4980)
!5001 = distinct !DISubprogram(name: "redisOpArrayInit", scope: !3, file: !3, line: 2262, type: !5002, isLocal: false, isDefinition: true, scopeLine: 2262, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5005)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{null, !5004}
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!5005 = !{!5006}
!5006 = !DILocalVariable(name: "oa", arg: 1, scope: !5001, file: !3, line: 2262, type: !5004)
!5007 = !DILocation(line: 2262, column: 37, scope: !5001)
!5008 = !DILocation(line: 2263, column: 9, scope: !5001)
!5009 = !DILocation(line: 2263, column: 13, scope: !5001)
!5010 = !{!1165, !1159, i64 0}
!5011 = !DILocation(line: 2264, column: 9, scope: !5001)
!5012 = !DILocation(line: 2264, column: 16, scope: !5001)
!5013 = !{!1165, !1156, i64 8}
!5014 = !DILocation(line: 2265, column: 1, scope: !5001)
!5015 = distinct !DISubprogram(name: "redisOpArrayAppend", scope: !3, file: !3, line: 2267, type: !5016, isLocal: false, isDefinition: true, scopeLine: 2269, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5018)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!7, !5004, !60, !7, !165, !7, !7}
!5018 = !{!5019, !5020, !5021, !5022, !5023, !5024, !5025}
!5019 = !DILocalVariable(name: "oa", arg: 1, scope: !5015, file: !3, line: 2267, type: !5004)
!5020 = !DILocalVariable(name: "cmd", arg: 2, scope: !5015, file: !3, line: 2267, type: !60)
!5021 = !DILocalVariable(name: "dbid", arg: 3, scope: !5015, file: !3, line: 2267, type: !7)
!5022 = !DILocalVariable(name: "argv", arg: 4, scope: !5015, file: !3, line: 2268, type: !165)
!5023 = !DILocalVariable(name: "argc", arg: 5, scope: !5015, file: !3, line: 2268, type: !7)
!5024 = !DILocalVariable(name: "target", arg: 6, scope: !5015, file: !3, line: 2268, type: !7)
!5025 = !DILocalVariable(name: "op", scope: !5015, file: !3, line: 2270, type: !908)
!5026 = !DILocation(line: 2267, column: 38, scope: !5015)
!5027 = !DILocation(line: 2267, column: 63, scope: !5015)
!5028 = !DILocation(line: 2267, column: 72, scope: !5015)
!5029 = !DILocation(line: 2268, column: 31, scope: !5015)
!5030 = !DILocation(line: 2268, column: 41, scope: !5015)
!5031 = !DILocation(line: 2268, column: 51, scope: !5015)
!5032 = !DILocation(line: 2272, column: 28, scope: !5015)
!5033 = !DILocation(line: 2272, column: 53, scope: !5015)
!5034 = !DILocation(line: 2272, column: 59, scope: !5015)
!5035 = !DILocation(line: 2272, column: 48, scope: !5015)
!5036 = !DILocation(line: 2272, column: 47, scope: !5015)
!5037 = !DILocation(line: 2272, column: 15, scope: !5015)
!5038 = !DILocation(line: 2272, column: 13, scope: !5015)
!5039 = !DILocation(line: 2273, column: 22, scope: !5015)
!5040 = !DILocation(line: 2273, column: 17, scope: !5015)
!5041 = !DILocation(line: 2274, column: 9, scope: !5015)
!5042 = !DILocation(line: 2274, column: 13, scope: !5015)
!5043 = !{!5044, !1159, i64 24}
!5044 = !{!"redisOp", !1159, i64 0, !1156, i64 8, !1156, i64 12, !1156, i64 16, !1159, i64 24}
!5045 = !DILocation(line: 2275, column: 9, scope: !5015)
!5046 = !DILocation(line: 2275, column: 14, scope: !5015)
!5047 = !{!5044, !1156, i64 12}
!5048 = !DILocation(line: 2276, column: 9, scope: !5015)
!5049 = !DILocation(line: 2276, column: 14, scope: !5015)
!5050 = !{!5044, !1159, i64 0}
!5051 = !DILocation(line: 2277, column: 9, scope: !5015)
!5052 = !DILocation(line: 2277, column: 14, scope: !5015)
!5053 = !{!5044, !1156, i64 8}
!5054 = !DILocation(line: 2278, column: 9, scope: !5015)
!5055 = !DILocation(line: 2278, column: 16, scope: !5015)
!5056 = !{!5044, !1156, i64 16}
!5057 = !DILocation(line: 2279, column: 15, scope: !5015)
!5058 = !DILocation(line: 2280, column: 5, scope: !5015)
!5059 = distinct !DISubprogram(name: "redisOpArrayFree", scope: !3, file: !3, line: 2283, type: !5002, isLocal: false, isDefinition: true, scopeLine: 2283, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5060)
!5060 = !{!5061, !5062, !5064}
!5061 = !DILocalVariable(name: "oa", arg: 1, scope: !5059, file: !3, line: 2283, type: !5004)
!5062 = !DILocalVariable(name: "j", scope: !5063, file: !3, line: 2285, type: !7)
!5063 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 2284, column: 23)
!5064 = !DILocalVariable(name: "op", scope: !5063, file: !3, line: 2286, type: !908)
!5065 = !DILocation(line: 2283, column: 37, scope: !5059)
!5066 = !DILocation(line: 2284, column: 5, scope: !5059)
!5067 = !DILocation(line: 2284, column: 15, scope: !5059)
!5068 = !DILocation(line: 2288, column: 19, scope: !5063)
!5069 = !DILocation(line: 2289, column: 18, scope: !5063)
!5070 = !DILocation(line: 2289, column: 21, scope: !5063)
!5071 = !DILocation(line: 2285, column: 13, scope: !5063)
!5072 = !DILocation(line: 2290, column: 14, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 2290, column: 9)
!5074 = !DILocation(line: 2290, column: 29, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 2290, column: 9)
!5076 = !DILocation(line: 2290, column: 23, scope: !5075)
!5077 = !DILocation(line: 0, scope: !5063)
!5078 = !DILocation(line: 2290, column: 9, scope: !5073)
!5079 = !DILocation(line: 2291, column: 26, scope: !5075)
!5080 = !DILocation(line: 2291, column: 13, scope: !5075)
!5081 = !DILocation(line: 2290, column: 36, scope: !5075)
!5082 = !DILocation(line: 2290, column: 9, scope: !5075)
!5083 = distinct !{!5083, !5078, !5084}
!5084 = !DILocation(line: 2291, column: 37, scope: !5073)
!5085 = !DILocation(line: 2292, column: 15, scope: !5063)
!5086 = !DILocation(line: 2292, column: 9, scope: !5063)
!5087 = distinct !{!5087, !5066, !5088}
!5088 = !DILocation(line: 2293, column: 5, scope: !5059)
!5089 = !DILocation(line: 2294, column: 15, scope: !5059)
!5090 = !DILocation(line: 2294, column: 5, scope: !5059)
!5091 = !DILocation(line: 2295, column: 1, scope: !5059)
!5092 = !DILocation(line: 2299, column: 40, scope: !1425)
!5093 = !DILocation(line: 2300, column: 34, scope: !1425)
!5094 = !DILocation(line: 2300, column: 12, scope: !1425)
!5095 = !DILocation(line: 2300, column: 5, scope: !1425)
!5096 = distinct !DISubprogram(name: "lookupCommandOrOriginal", scope: !3, file: !3, line: 2319, type: !1426, isLocal: false, isDefinition: true, scopeLine: 2319, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5097)
!5097 = !{!5098, !5099}
!5098 = !DILocalVariable(name: "name", arg: 1, scope: !5096, file: !3, line: 2319, type: !38)
!5099 = !DILocalVariable(name: "cmd", scope: !5096, file: !3, line: 2320, type: !60)
!5100 = !DILocation(line: 2319, column: 50, scope: !5096)
!5101 = !DILocation(line: 2320, column: 54, scope: !5096)
!5102 = !DILocation(line: 2320, column: 32, scope: !5096)
!5103 = !DILocation(line: 2320, column: 26, scope: !5096)
!5104 = !DILocation(line: 2322, column: 10, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 2322, column: 9)
!5106 = !DILocation(line: 2322, column: 9, scope: !5096)
!5107 = !DILocation(line: 2322, column: 43, scope: !5105)
!5108 = !DILocation(line: 2322, column: 21, scope: !5105)
!5109 = !DILocation(line: 2322, column: 15, scope: !5105)
!5110 = !DILocation(line: 0, scope: !5105)
!5111 = !DILocation(line: 2323, column: 5, scope: !5096)
!5112 = distinct !DISubprogram(name: "propagate", scope: !3, file: !3, line: 2337, type: !5113, isLocal: false, isDefinition: true, scopeLine: 2339, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5115)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{null, !60, !7, !165, !7, !7}
!5115 = !{!5116, !5117, !5118, !5119, !5120}
!5116 = !DILocalVariable(name: "cmd", arg: 1, scope: !5112, file: !3, line: 2337, type: !60)
!5117 = !DILocalVariable(name: "dbid", arg: 2, scope: !5112, file: !3, line: 2337, type: !7)
!5118 = !DILocalVariable(name: "argv", arg: 3, scope: !5112, file: !3, line: 2337, type: !165)
!5119 = !DILocalVariable(name: "argc", arg: 4, scope: !5112, file: !3, line: 2337, type: !7)
!5120 = !DILocalVariable(name: "flags", arg: 5, scope: !5112, file: !3, line: 2338, type: !7)
!5121 = !DILocation(line: 2337, column: 37, scope: !5112)
!5122 = !DILocation(line: 2337, column: 46, scope: !5112)
!5123 = !DILocation(line: 2337, column: 59, scope: !5112)
!5124 = !DILocation(line: 2337, column: 69, scope: !5112)
!5125 = !DILocation(line: 2338, column: 20, scope: !5112)
!5126 = !DILocation(line: 2340, column: 16, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 2340, column: 9)
!5128 = !DILocation(line: 2340, column: 26, scope: !5127)
!5129 = !DILocation(line: 2340, column: 37, scope: !5127)
!5130 = !DILocation(line: 2340, column: 46, scope: !5127)
!5131 = !DILocation(line: 2340, column: 9, scope: !5112)
!5132 = !DILocation(line: 2341, column: 9, scope: !5127)
!5133 = !DILocation(line: 2342, column: 15, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 2342, column: 9)
!5135 = !DILocation(line: 2342, column: 9, scope: !5112)
!5136 = !DILocation(line: 2343, column: 38, scope: !5134)
!5137 = !DILocation(line: 2343, column: 9, scope: !5134)
!5138 = !DILocation(line: 2344, column: 1, scope: !5112)
!5139 = distinct !DISubprogram(name: "alsoPropagate", scope: !3, file: !3, line: 2358, type: !5113, isLocal: false, isDefinition: true, scopeLine: 2360, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5140)
!5140 = !{!5141, !5142, !5143, !5144, !5145, !5146, !5147}
!5141 = !DILocalVariable(name: "cmd", arg: 1, scope: !5139, file: !3, line: 2358, type: !60)
!5142 = !DILocalVariable(name: "dbid", arg: 2, scope: !5139, file: !3, line: 2358, type: !7)
!5143 = !DILocalVariable(name: "argv", arg: 3, scope: !5139, file: !3, line: 2358, type: !165)
!5144 = !DILocalVariable(name: "argc", arg: 4, scope: !5139, file: !3, line: 2358, type: !7)
!5145 = !DILocalVariable(name: "target", arg: 5, scope: !5139, file: !3, line: 2359, type: !7)
!5146 = !DILocalVariable(name: "argvcopy", scope: !5139, file: !3, line: 2361, type: !165)
!5147 = !DILocalVariable(name: "j", scope: !5139, file: !3, line: 2362, type: !7)
!5148 = !DILocation(line: 2358, column: 41, scope: !5139)
!5149 = !DILocation(line: 2358, column: 50, scope: !5139)
!5150 = !DILocation(line: 2358, column: 63, scope: !5139)
!5151 = !DILocation(line: 2358, column: 73, scope: !5139)
!5152 = !DILocation(line: 2359, column: 24, scope: !5139)
!5153 = !DILocation(line: 2364, column: 16, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2364, column: 9)
!5155 = !DILocation(line: 2364, column: 9, scope: !5154)
!5156 = !DILocation(line: 2364, column: 9, scope: !5139)
!5157 = !DILocation(line: 2366, column: 38, scope: !5139)
!5158 = !DILocation(line: 2366, column: 37, scope: !5139)
!5159 = !DILocation(line: 2366, column: 16, scope: !5139)
!5160 = !DILocation(line: 2361, column: 12, scope: !5139)
!5161 = !DILocation(line: 2362, column: 9, scope: !5139)
!5162 = !DILocation(line: 2367, column: 10, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2367, column: 5)
!5164 = !DILocation(line: 2367, column: 19, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 2367, column: 5)
!5166 = !DILocation(line: 2367, column: 5, scope: !5163)
!5167 = !DILocation(line: 2368, column: 23, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2367, column: 32)
!5169 = !DILocation(line: 2368, column: 9, scope: !5168)
!5170 = !DILocation(line: 2368, column: 21, scope: !5168)
!5171 = !DILocation(line: 2369, column: 22, scope: !5168)
!5172 = !DILocation(line: 2369, column: 9, scope: !5168)
!5173 = !DILocation(line: 2367, column: 28, scope: !5165)
!5174 = !DILocation(line: 2367, column: 5, scope: !5165)
!5175 = distinct !{!5175, !5166, !5176}
!5176 = !DILocation(line: 2370, column: 5, scope: !5163)
!5177 = !DILocation(line: 2267, column: 38, scope: !5015, inlinedAt: !5178)
!5178 = distinct !DILocation(line: 2371, column: 5, scope: !5139)
!5179 = !DILocation(line: 2267, column: 63, scope: !5015, inlinedAt: !5178)
!5180 = !DILocation(line: 2267, column: 72, scope: !5015, inlinedAt: !5178)
!5181 = !DILocation(line: 2268, column: 31, scope: !5015, inlinedAt: !5178)
!5182 = !DILocation(line: 2268, column: 41, scope: !5015, inlinedAt: !5178)
!5183 = !DILocation(line: 2268, column: 51, scope: !5015, inlinedAt: !5178)
!5184 = !DILocation(line: 2272, column: 28, scope: !5015, inlinedAt: !5178)
!5185 = !DILocation(line: 2272, column: 53, scope: !5015, inlinedAt: !5178)
!5186 = !DILocation(line: 2272, column: 59, scope: !5015, inlinedAt: !5178)
!5187 = !DILocation(line: 2272, column: 48, scope: !5015, inlinedAt: !5178)
!5188 = !DILocation(line: 2272, column: 47, scope: !5015, inlinedAt: !5178)
!5189 = !DILocation(line: 2272, column: 15, scope: !5015, inlinedAt: !5178)
!5190 = !DILocation(line: 2272, column: 13, scope: !5015, inlinedAt: !5178)
!5191 = !DILocation(line: 2273, column: 22, scope: !5015, inlinedAt: !5178)
!5192 = !DILocation(line: 2273, column: 17, scope: !5015, inlinedAt: !5178)
!5193 = !DILocation(line: 2274, column: 9, scope: !5015, inlinedAt: !5178)
!5194 = !DILocation(line: 2274, column: 13, scope: !5015, inlinedAt: !5178)
!5195 = !DILocation(line: 2275, column: 9, scope: !5015, inlinedAt: !5178)
!5196 = !DILocation(line: 2275, column: 14, scope: !5015, inlinedAt: !5178)
!5197 = !DILocation(line: 2276, column: 9, scope: !5015, inlinedAt: !5178)
!5198 = !DILocation(line: 2276, column: 14, scope: !5015, inlinedAt: !5178)
!5199 = !DILocation(line: 2277, column: 9, scope: !5015, inlinedAt: !5178)
!5200 = !DILocation(line: 2277, column: 14, scope: !5015, inlinedAt: !5178)
!5201 = !DILocation(line: 2278, column: 9, scope: !5015, inlinedAt: !5178)
!5202 = !DILocation(line: 2278, column: 16, scope: !5015, inlinedAt: !5178)
!5203 = !DILocation(line: 2279, column: 15, scope: !5015, inlinedAt: !5178)
!5204 = !DILocation(line: 2280, column: 5, scope: !5015, inlinedAt: !5178)
!5205 = !DILocation(line: 2372, column: 1, scope: !5139)
!5206 = !DILocation(line: 0, scope: !5154)
!5207 = distinct !DISubprogram(name: "forceCommandPropagation", scope: !3, file: !3, line: 2377, type: !5208, isLocal: false, isDefinition: true, scopeLine: 2377, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5210)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{null, !69, !7}
!5210 = !{!5211, !5212}
!5211 = !DILocalVariable(name: "c", arg: 1, scope: !5207, file: !3, line: 2377, type: !69)
!5212 = !DILocalVariable(name: "flags", arg: 2, scope: !5207, file: !3, line: 2377, type: !7)
!5213 = !DILocation(line: 2377, column: 38, scope: !5207)
!5214 = !DILocation(line: 2377, column: 45, scope: !5207)
!5215 = !DILocation(line: 2378, column: 15, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 2378, column: 9)
!5217 = !DILocation(line: 2378, column: 9, scope: !5207)
!5218 = !DILocation(line: 2378, column: 36, scope: !5216)
!5219 = !DILocation(line: 2378, column: 42, scope: !5216)
!5220 = !DILocation(line: 2378, column: 33, scope: !5216)
!5221 = !DILocation(line: 2379, column: 15, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 2379, column: 9)
!5223 = !DILocation(line: 2379, column: 9, scope: !5207)
!5224 = !DILocation(line: 2379, column: 35, scope: !5222)
!5225 = !DILocation(line: 2379, column: 41, scope: !5222)
!5226 = !DILocation(line: 2379, column: 32, scope: !5222)
!5227 = !DILocation(line: 2380, column: 1, scope: !5207)
!5228 = distinct !DISubprogram(name: "preventCommandPropagation", scope: !3, file: !3, line: 2385, type: !67, isLocal: false, isDefinition: true, scopeLine: 2385, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5229)
!5229 = !{!5230}
!5230 = !DILocalVariable(name: "c", arg: 1, scope: !5228, file: !3, line: 2385, type: !69)
!5231 = !DILocation(line: 2385, column: 40, scope: !5228)
!5232 = !DILocation(line: 2386, column: 8, scope: !5228)
!5233 = !DILocation(line: 2386, column: 14, scope: !5228)
!5234 = !DILocation(line: 2387, column: 1, scope: !5228)
!5235 = distinct !DISubprogram(name: "preventCommandAOF", scope: !3, file: !3, line: 2390, type: !67, isLocal: false, isDefinition: true, scopeLine: 2390, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5236)
!5236 = !{!5237}
!5237 = !DILocalVariable(name: "c", arg: 1, scope: !5235, file: !3, line: 2390, type: !69)
!5238 = !DILocation(line: 2390, column: 32, scope: !5235)
!5239 = !DILocation(line: 2391, column: 8, scope: !5235)
!5240 = !DILocation(line: 2391, column: 14, scope: !5235)
!5241 = !DILocation(line: 2392, column: 1, scope: !5235)
!5242 = distinct !DISubprogram(name: "preventCommandReplication", scope: !3, file: !3, line: 2395, type: !67, isLocal: false, isDefinition: true, scopeLine: 2395, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5243)
!5243 = !{!5244}
!5244 = !DILocalVariable(name: "c", arg: 1, scope: !5242, file: !3, line: 2395, type: !69)
!5245 = !DILocation(line: 2395, column: 40, scope: !5242)
!5246 = !DILocation(line: 2396, column: 8, scope: !5242)
!5247 = !DILocation(line: 2396, column: 14, scope: !5242)
!5248 = !DILocation(line: 2397, column: 1, scope: !5242)
!5249 = distinct !DISubprogram(name: "call", scope: !3, file: !3, line: 2436, type: !5208, isLocal: false, isDefinition: true, scopeLine: 2436, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5250)
!5250 = !{!5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5262, !5265, !5268, !5269}
!5251 = !DILocalVariable(name: "c", arg: 1, scope: !5249, file: !3, line: 2436, type: !69)
!5252 = !DILocalVariable(name: "flags", arg: 2, scope: !5249, file: !3, line: 2436, type: !7)
!5253 = !DILocalVariable(name: "dirty", scope: !5249, file: !3, line: 2437, type: !8)
!5254 = !DILocalVariable(name: "start", scope: !5249, file: !3, line: 2437, type: !8)
!5255 = !DILocalVariable(name: "duration", scope: !5249, file: !3, line: 2437, type: !8)
!5256 = !DILocalVariable(name: "client_old_flags", scope: !5249, file: !3, line: 2438, type: !7)
!5257 = !DILocalVariable(name: "real_cmd", scope: !5249, file: !3, line: 2439, type: !60)
!5258 = !DILocalVariable(name: "prev_also_propagate", scope: !5249, file: !3, line: 2453, type: !904)
!5259 = !DILocalVariable(name: "latency_event", scope: !5260, file: !3, line: 2482, type: !40)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 2481, column: 66)
!5261 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2481, column: 9)
!5262 = !DILocalVariable(name: "propagate_flags", scope: !5263, file: !3, line: 2499, type: !7)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 2498, column: 5)
!5264 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2496, column: 9)
!5265 = !DILocalVariable(name: "j", scope: !5266, file: !3, line: 2537, type: !7)
!5266 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 2536, column: 39)
!5267 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2536, column: 9)
!5268 = !DILocalVariable(name: "rop", scope: !5266, file: !3, line: 2538, type: !908)
!5269 = !DILocalVariable(name: "target", scope: !5270, file: !3, line: 2543, type: !7)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 2541, column: 64)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2541, column: 13)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2541, column: 13)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2540, column: 41)
!5274 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 2540, column: 13)
!5275 = !DILocation(line: 2436, column: 19, scope: !5249)
!5276 = !DILocation(line: 2436, column: 26, scope: !5249)
!5277 = !DILocation(line: 2438, column: 31, scope: !5249)
!5278 = !DILocation(line: 2438, column: 9, scope: !5249)
!5279 = !DILocation(line: 2439, column: 40, scope: !5249)
!5280 = !DILocation(line: 2439, column: 26, scope: !5249)
!5281 = !DILocation(line: 2443, column: 9, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2443, column: 9)
!5283 = !DILocation(line: 2444, column: 17, scope: !5282)
!5284 = !DILocation(line: 2444, column: 10, scope: !5282)
!5285 = !DILocation(line: 2443, column: 37, scope: !5282)
!5286 = !DILocation(line: 2445, column: 19, scope: !5282)
!5287 = !DILocation(line: 2445, column: 25, scope: !5282)
!5288 = !DILocation(line: 2443, column: 9, scope: !5249)
!5289 = !DILocation(line: 2447, column: 54, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 2446, column: 5)
!5291 = !{!1174, !1159, i64 16}
!5292 = !DILocation(line: 2447, column: 58, scope: !5290)
!5293 = !DILocation(line: 2447, column: 64, scope: !5290)
!5294 = !DILocation(line: 2447, column: 72, scope: !5290)
!5295 = !DILocation(line: 2447, column: 9, scope: !5290)
!5296 = !DILocation(line: 2448, column: 5, scope: !5290)
!5297 = !DILocation(line: 2452, column: 14, scope: !5249)
!5298 = !DILocation(line: 2453, column: 5, scope: !5249)
!5299 = !DILocation(line: 2453, column: 47, scope: !5249)
!5300 = !{i64 0, i64 8, !1178, i64 8, i64 4, !1482}
!5301 = !DILocation(line: 2262, column: 37, scope: !5001, inlinedAt: !5302)
!5302 = distinct !DILocation(line: 2454, column: 5, scope: !5249)
!5303 = !DILocation(line: 2263, column: 13, scope: !5001, inlinedAt: !5302)
!5304 = !DILocation(line: 2264, column: 16, scope: !5001, inlinedAt: !5302)
!5305 = !DILocation(line: 2265, column: 1, scope: !5001, inlinedAt: !5302)
!5306 = !DILocation(line: 2457, column: 20, scope: !5249)
!5307 = !DILocation(line: 2437, column: 15, scope: !5249)
!5308 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !5309)
!5309 = distinct !DILocation(line: 2458, column: 13, scope: !5249)
!5310 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !5311)
!5311 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !5309)
!5312 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !5311)
!5313 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !5311)
!5314 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !5311)
!5315 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !5311)
!5316 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !5311)
!5317 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !5311)
!5318 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !5311)
!5319 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !5311)
!5320 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !5311)
!5321 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !5311)
!5322 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !5311)
!5323 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !5311)
!5324 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !5309)
!5325 = !DILocation(line: 2459, column: 8, scope: !5249)
!5326 = !DILocation(line: 2459, column: 13, scope: !5249)
!5327 = !{!1211, !1159, i64 8}
!5328 = !DILocation(line: 2459, column: 5, scope: !5249)
!5329 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !5330)
!5330 = distinct !DILocation(line: 2460, column: 16, scope: !5249)
!5331 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !5332)
!5332 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !5330)
!5333 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !5332)
!5334 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !5332)
!5335 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !5332)
!5336 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !5332)
!5337 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !5332)
!5338 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !5332)
!5339 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !5332)
!5340 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !5332)
!5341 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !5332)
!5342 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !5332)
!5343 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !5332)
!5344 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !5332)
!5345 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !5330)
!5346 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !5330)
!5347 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !5330)
!5348 = !DILocation(line: 2460, column: 24, scope: !5249)
!5349 = !DILocation(line: 2437, column: 29, scope: !5249)
!5350 = !DILocation(line: 2461, column: 20, scope: !5249)
!5351 = !DILocation(line: 2462, column: 9, scope: !5249)
!5352 = !DILocation(line: 2466, column: 16, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2466, column: 9)
!5354 = !DILocation(line: 2466, column: 9, scope: !5353)
!5355 = !DILocation(line: 2466, column: 24, scope: !5353)
!5356 = !DILocation(line: 0, scope: !5353)
!5357 = !DILocation(line: 2466, column: 36, scope: !5353)
!5358 = !DILocation(line: 2466, column: 9, scope: !5249)
!5359 = !DILocation(line: 2472, column: 31, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2472, column: 9)
!5361 = !DILocation(line: 2467, column: 15, scope: !5353)
!5362 = !DILocation(line: 2467, column: 9, scope: !5353)
!5363 = !DILocation(line: 2472, column: 18, scope: !5360)
!5364 = !DILocation(line: 2472, column: 41, scope: !5360)
!5365 = !DILocation(line: 2472, column: 34, scope: !5360)
!5366 = !DILocation(line: 2473, column: 22, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2473, column: 13)
!5368 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 2472, column: 53)
!5369 = !DILocation(line: 2473, column: 13, scope: !5368)
!5370 = !DILocation(line: 2474, column: 32, scope: !5367)
!5371 = !DILocation(line: 2474, column: 38, scope: !5367)
!5372 = !DILocation(line: 2474, column: 13, scope: !5367)
!5373 = !DILocation(line: 2475, column: 16, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2475, column: 13)
!5375 = !DILocation(line: 2475, column: 22, scope: !5374)
!5376 = !DILocation(line: 2475, column: 13, scope: !5368)
!5377 = !DILocation(line: 2476, column: 32, scope: !5374)
!5378 = !DILocation(line: 2476, column: 38, scope: !5374)
!5379 = !DILocation(line: 2476, column: 13, scope: !5374)
!5380 = !DILocation(line: 2481, column: 15, scope: !5261)
!5381 = !DILocation(line: 2481, column: 34, scope: !5261)
!5382 = !DILocation(line: 2481, column: 40, scope: !5261)
!5383 = !DILocation(line: 2481, column: 45, scope: !5261)
!5384 = !DILocation(line: 2481, column: 50, scope: !5261)
!5385 = !DILocation(line: 2481, column: 9, scope: !5249)
!5386 = !DILocation(line: 2482, column: 40, scope: !5260)
!5387 = !DILocation(line: 2482, column: 46, scope: !5260)
!5388 = !DILocation(line: 2482, column: 31, scope: !5260)
!5389 = !DILocation(line: 2482, column: 15, scope: !5260)
!5390 = !DILocation(line: 2484, column: 9, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2484, column: 9)
!5392 = !DILocation(line: 2484, column: 9, scope: !5260)
!5393 = !DILocation(line: 2485, column: 39, scope: !5260)
!5394 = !DILocation(line: 2485, column: 47, scope: !5260)
!5395 = !DILocation(line: 2485, column: 9, scope: !5260)
!5396 = !DILocation(line: 2486, column: 5, scope: !5260)
!5397 = !DILocation(line: 2487, column: 15, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2487, column: 9)
!5399 = !DILocation(line: 2487, column: 9, scope: !5249)
!5400 = !DILocation(line: 2491, column: 19, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 2487, column: 33)
!5402 = !DILocation(line: 2491, column: 32, scope: !5401)
!5403 = !DILocation(line: 2493, column: 5, scope: !5401)
!5404 = !DILocation(line: 2496, column: 15, scope: !5264)
!5405 = !DILocation(line: 2496, column: 36, scope: !5264)
!5406 = !DILocation(line: 2497, column: 13, scope: !5264)
!5407 = !DILocation(line: 2497, column: 19, scope: !5264)
!5408 = !DILocation(line: 2497, column: 42, scope: !5264)
!5409 = !DILocation(line: 2496, column: 9, scope: !5249)
!5410 = !DILocation(line: 2499, column: 13, scope: !5263)
!5411 = !DILocation(line: 2503, column: 13, scope: !5263)
!5412 = !DILocation(line: 2503, column: 20, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2503, column: 13)
!5414 = !DILocation(line: 0, scope: !5263)
!5415 = !DILocation(line: 2507, column: 22, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2507, column: 13)
!5417 = !DILocation(line: 2507, column: 13, scope: !5263)
!5418 = !DILocation(line: 2507, column: 59, scope: !5416)
!5419 = !DILocation(line: 2507, column: 43, scope: !5416)
!5420 = !DILocation(line: 0, scope: !5413)
!5421 = !DILocation(line: 2508, column: 22, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2508, column: 13)
!5423 = !DILocation(line: 2508, column: 13, scope: !5263)
!5424 = !DILocation(line: 2508, column: 58, scope: !5422)
!5425 = !DILocation(line: 2508, column: 42, scope: !5422)
!5426 = !DILocation(line: 0, scope: !5416)
!5427 = !DILocation(line: 2513, column: 22, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2513, column: 13)
!5429 = !DILocation(line: 2513, column: 49, scope: !5428)
!5430 = !DILocation(line: 2514, column: 21, scope: !5428)
!5431 = !DILocation(line: 2513, column: 13, scope: !5263)
!5432 = !DILocation(line: 2515, column: 33, scope: !5428)
!5433 = !DILocation(line: 2515, column: 17, scope: !5428)
!5434 = !DILocation(line: 0, scope: !5422)
!5435 = !DILocation(line: 2516, column: 22, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2516, column: 13)
!5437 = !DILocation(line: 2516, column: 48, scope: !5436)
!5438 = !DILocation(line: 2517, column: 21, scope: !5436)
!5439 = !DILocation(line: 2516, column: 13, scope: !5263)
!5440 = !DILocation(line: 2518, column: 33, scope: !5436)
!5441 = !DILocation(line: 2518, column: 17, scope: !5436)
!5442 = !DILocation(line: 0, scope: !5428)
!5443 = !DILocation(line: 2523, column: 29, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 2523, column: 13)
!5445 = !DILocation(line: 2523, column: 47, scope: !5444)
!5446 = !DILocation(line: 2523, column: 55, scope: !5444)
!5447 = !DILocation(line: 2523, column: 60, scope: !5444)
!5448 = !DILocation(line: 2523, column: 66, scope: !5444)
!5449 = !DILocation(line: 2523, column: 13, scope: !5263)
!5450 = !DILocation(line: 2524, column: 33, scope: !5444)
!5451 = !DILocation(line: 2524, column: 37, scope: !5444)
!5452 = !DILocation(line: 2524, column: 43, scope: !5444)
!5453 = !DILocation(line: 2524, column: 51, scope: !5444)
!5454 = !DILocation(line: 2337, column: 37, scope: !5112, inlinedAt: !5455)
!5455 = distinct !DILocation(line: 2524, column: 13, scope: !5444)
!5456 = !DILocation(line: 2337, column: 46, scope: !5112, inlinedAt: !5455)
!5457 = !DILocation(line: 2337, column: 59, scope: !5112, inlinedAt: !5455)
!5458 = !DILocation(line: 2337, column: 69, scope: !5112, inlinedAt: !5455)
!5459 = !DILocation(line: 2338, column: 20, scope: !5112, inlinedAt: !5455)
!5460 = !DILocation(line: 2340, column: 16, scope: !5127, inlinedAt: !5455)
!5461 = !DILocation(line: 2340, column: 26, scope: !5127, inlinedAt: !5455)
!5462 = !DILocation(line: 2340, column: 37, scope: !5127, inlinedAt: !5455)
!5463 = !DILocation(line: 2340, column: 46, scope: !5127, inlinedAt: !5455)
!5464 = !DILocation(line: 2340, column: 9, scope: !5112, inlinedAt: !5455)
!5465 = !DILocation(line: 2341, column: 9, scope: !5127, inlinedAt: !5455)
!5466 = !DILocation(line: 2342, column: 15, scope: !5134, inlinedAt: !5455)
!5467 = !DILocation(line: 2342, column: 9, scope: !5112, inlinedAt: !5455)
!5468 = !DILocation(line: 2343, column: 38, scope: !5134, inlinedAt: !5455)
!5469 = !DILocation(line: 2343, column: 9, scope: !5134, inlinedAt: !5455)
!5470 = !DILocation(line: 2344, column: 1, scope: !5112, inlinedAt: !5455)
!5471 = !DILocation(line: 2524, column: 13, scope: !5444)
!5472 = !DILocation(line: 2525, column: 5, scope: !5263)
!5473 = !DILocation(line: 2529, column: 14, scope: !5249)
!5474 = !DILocation(line: 2530, column: 34, scope: !5249)
!5475 = !DILocation(line: 2530, column: 14, scope: !5249)
!5476 = !DILocation(line: 2536, column: 31, scope: !5267)
!5477 = !{!1155, !1156, i64 2232}
!5478 = !DILocation(line: 2536, column: 9, scope: !5267)
!5479 = !DILocation(line: 2536, column: 9, scope: !5249)
!5480 = !DILocation(line: 2540, column: 13, scope: !5266)
!5481 = !DILocation(line: 2537, column: 13, scope: !5266)
!5482 = !DILocation(line: 2541, column: 18, scope: !5272)
!5483 = !DILocation(line: 2541, column: 27, scope: !5271)
!5484 = !DILocation(line: 2541, column: 13, scope: !5272)
!5485 = !DILocation(line: 2542, column: 46, scope: !5270)
!5486 = !{!1155, !1159, i64 2224}
!5487 = !DILocation(line: 2543, column: 35, scope: !5270)
!5488 = !DILocation(line: 2543, column: 21, scope: !5270)
!5489 = !DILocation(line: 2545, column: 21, scope: !5270)
!5490 = !DILocation(line: 2545, column: 61, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 2545, column: 21)
!5492 = !DILocation(line: 2545, column: 54, scope: !5491)
!5493 = !DILocation(line: 0, scope: !5491)
!5494 = !DILocation(line: 2546, column: 21, scope: !5270)
!5495 = !DILocation(line: 2546, column: 62, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 2546, column: 21)
!5497 = !DILocation(line: 2546, column: 55, scope: !5496)
!5498 = !DILocation(line: 0, scope: !5496)
!5499 = !DILocation(line: 2547, column: 21, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 2547, column: 21)
!5501 = !DILocation(line: 2547, column: 21, scope: !5270)
!5502 = !DILocation(line: 2548, column: 36, scope: !5500)
!5503 = !DILocation(line: 2548, column: 45, scope: !5500)
!5504 = !DILocation(line: 2548, column: 55, scope: !5500)
!5505 = !DILocation(line: 2548, column: 65, scope: !5500)
!5506 = !DILocation(line: 2337, column: 37, scope: !5112, inlinedAt: !5507)
!5507 = distinct !DILocation(line: 2548, column: 21, scope: !5500)
!5508 = !DILocation(line: 2337, column: 46, scope: !5112, inlinedAt: !5507)
!5509 = !DILocation(line: 2337, column: 59, scope: !5112, inlinedAt: !5507)
!5510 = !DILocation(line: 2337, column: 69, scope: !5112, inlinedAt: !5507)
!5511 = !DILocation(line: 2338, column: 20, scope: !5112, inlinedAt: !5507)
!5512 = !DILocation(line: 2340, column: 16, scope: !5127, inlinedAt: !5507)
!5513 = !DILocation(line: 2340, column: 26, scope: !5127, inlinedAt: !5507)
!5514 = !DILocation(line: 2340, column: 37, scope: !5127, inlinedAt: !5507)
!5515 = !DILocation(line: 2340, column: 46, scope: !5127, inlinedAt: !5507)
!5516 = !DILocation(line: 2340, column: 9, scope: !5112, inlinedAt: !5507)
!5517 = !DILocation(line: 2341, column: 9, scope: !5127, inlinedAt: !5507)
!5518 = !DILocation(line: 2342, column: 15, scope: !5134, inlinedAt: !5507)
!5519 = !DILocation(line: 2342, column: 9, scope: !5112, inlinedAt: !5507)
!5520 = !DILocation(line: 2343, column: 38, scope: !5134, inlinedAt: !5507)
!5521 = !DILocation(line: 2343, column: 9, scope: !5134, inlinedAt: !5507)
!5522 = !DILocation(line: 2344, column: 1, scope: !5112, inlinedAt: !5507)
!5523 = !DILocation(line: 2548, column: 21, scope: !5500)
!5524 = !DILocation(line: 2541, column: 51, scope: !5271)
!5525 = !DILocation(line: 2541, column: 60, scope: !5271)
!5526 = !DILocation(line: 2541, column: 13, scope: !5271)
!5527 = distinct !{!5527, !5484, !5528}
!5528 = !DILocation(line: 2549, column: 13, scope: !5272)
!5529 = !DILocation(line: 2551, column: 9, scope: !5266)
!5530 = !DILocation(line: 2552, column: 5, scope: !5266)
!5531 = !DILocation(line: 2553, column: 29, scope: !5249)
!5532 = !DILocation(line: 2554, column: 28, scope: !5249)
!5533 = !DILocation(line: 2555, column: 1, scope: !5249)
!5534 = distinct !DISubprogram(name: "processCommand", scope: !3, file: !3, line: 2565, type: !2604, isLocal: false, isDefinition: true, scopeLine: 2565, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5535)
!5535 = !{!5536, !5537, !5540, !5541, !5544, !5545, !5546, !5549, !5550, !5553}
!5536 = !DILocalVariable(name: "c", arg: 1, scope: !5534, file: !3, line: 2565, type: !69)
!5537 = !DILocalVariable(name: "args", scope: !5538, file: !3, line: 2583, type: !38)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 2581, column: 18)
!5539 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2581, column: 9)
!5540 = !DILocalVariable(name: "i", scope: !5538, file: !3, line: 2584, type: !7)
!5541 = !DILocalVariable(name: "hashslot", scope: !5542, file: !3, line: 2618, type: !7)
!5542 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 2617, column: 5)
!5543 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2611, column: 9)
!5544 = !DILocalVariable(name: "error_code", scope: !5542, file: !3, line: 2619, type: !7)
!5545 = !DILocalVariable(name: "n", scope: !5542, file: !3, line: 2620, type: !1015)
!5546 = !DILocalVariable(name: "out_of_memory", scope: !5547, file: !3, line: 2640, type: !7)
!5547 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 2639, column: 51)
!5548 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2639, column: 9)
!5549 = !DILocalVariable(name: "deny_write_type", scope: !5534, file: !3, line: 2659, type: !7)
!5550 = !DILocalVariable(name: "__x", scope: !5551, file: !3, line: 2735, type: !41)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2735, column: 11)
!5552 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2730, column: 9)
!5553 = !DILocalVariable(name: "__x", scope: !5554, file: !3, line: 2738, type: !41)
!5554 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2738, column: 11)
!5555 = !DILocation(line: 2565, column: 28, scope: !5534)
!5556 = !DILocation(line: 2566, column: 5, scope: !5534)
!5557 = !DILocation(line: 2572, column: 24, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2572, column: 9)
!5559 = !DILocation(line: 2572, column: 21, scope: !5558)
!5560 = !DILocation(line: 2572, column: 33, scope: !5558)
!5561 = !DILocation(line: 2572, column: 10, scope: !5558)
!5562 = !DILocation(line: 2572, column: 9, scope: !5534)
!5563 = !DILocation(line: 2573, column: 27, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 2572, column: 46)
!5565 = !DILocation(line: 2573, column: 9, scope: !5564)
!5566 = !DILocation(line: 2574, column: 12, scope: !5564)
!5567 = !DILocation(line: 2574, column: 18, scope: !5564)
!5568 = !DILocation(line: 2575, column: 9, scope: !5564)
!5569 = !DILocation(line: 2299, column: 40, scope: !1425, inlinedAt: !5570)
!5570 = distinct !DILocation(line: 2580, column: 27, scope: !5534)
!5571 = !DILocation(line: 2300, column: 34, scope: !1425, inlinedAt: !5570)
!5572 = !DILocation(line: 2300, column: 12, scope: !1425, inlinedAt: !5570)
!5573 = !DILocation(line: 2300, column: 5, scope: !1425, inlinedAt: !5570)
!5574 = !DILocation(line: 2580, column: 17, scope: !5534)
!5575 = !DILocation(line: 2580, column: 25, scope: !5534)
!5576 = !{!1174, !1159, i64 88}
!5577 = !DILocation(line: 2580, column: 8, scope: !5534)
!5578 = !DILocation(line: 2580, column: 12, scope: !5534)
!5579 = !DILocation(line: 2581, column: 10, scope: !5539)
!5580 = !DILocation(line: 2581, column: 9, scope: !5534)
!5581 = !DILocation(line: 2582, column: 9, scope: !5538)
!5582 = !DILocation(line: 2583, column: 20, scope: !5538)
!5583 = !DILocation(line: 2583, column: 13, scope: !5538)
!5584 = !DILocation(line: 2584, column: 13, scope: !5538)
!5585 = !DILocation(line: 2585, column: 14, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 2585, column: 9)
!5587 = !DILocation(line: 2585, column: 26, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 2585, column: 9)
!5589 = !DILocation(line: 2585, column: 21, scope: !5588)
!5590 = !DILocation(line: 2585, column: 31, scope: !5588)
!5591 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !5592)
!5592 = distinct !DILocation(line: 2585, column: 34, scope: !5588)
!5593 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !5592)
!5594 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !5592)
!5595 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !5592)
!5596 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !5592)
!5597 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !5592)
!5598 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !5592)
!5599 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !5592)
!5600 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !5592)
!5601 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !5592)
!5602 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !5592)
!5603 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !5592)
!5604 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !5592)
!5605 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !5592)
!5606 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !5592)
!5607 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !5592)
!5608 = !DILocation(line: 0, scope: !5588)
!5609 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !5592)
!5610 = !DILocation(line: 2585, column: 9, scope: !5586)
!5611 = !DILocation(line: 0, scope: !2030, inlinedAt: !5592)
!5612 = !DILocation(line: 2585, column: 47, scope: !5588)
!5613 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !5614)
!5614 = distinct !DILocation(line: 2586, column: 60, scope: !5588)
!5615 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !5614)
!5616 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !5614)
!5617 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !5614)
!5618 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !5614)
!5619 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !5614)
!5620 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !5614)
!5621 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !5614)
!5622 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !5614)
!5623 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !5614)
!5624 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !5614)
!5625 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !5614)
!5626 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !5614)
!5627 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !5614)
!5628 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !5614)
!5629 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !5614)
!5630 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !5614)
!5631 = !DILocation(line: 0, scope: !2030, inlinedAt: !5614)
!5632 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !5614)
!5633 = !DILocation(line: 2586, column: 55, scope: !5588)
!5634 = !DILocation(line: 2586, column: 54, scope: !5588)
!5635 = !DILocation(line: 2586, column: 84, scope: !5588)
!5636 = !DILocation(line: 2586, column: 81, scope: !5588)
!5637 = !DILocation(line: 2586, column: 93, scope: !5588)
!5638 = !DILocation(line: 2586, column: 20, scope: !5588)
!5639 = !DILocation(line: 2585, column: 55, scope: !5588)
!5640 = !DILocation(line: 2585, column: 9, scope: !5588)
!5641 = distinct !{!5641, !5610, !5642}
!5642 = !DILocation(line: 2586, column: 96, scope: !5586)
!5643 = !DILocation(line: 2588, column: 23, scope: !5538)
!5644 = !DILocation(line: 2588, column: 20, scope: !5538)
!5645 = !DILocation(line: 2588, column: 32, scope: !5538)
!5646 = !DILocation(line: 2587, column: 9, scope: !5538)
!5647 = !DILocation(line: 2589, column: 9, scope: !5538)
!5648 = !DILocation(line: 2591, column: 25, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5539, file: !3, line: 2591, column: 16)
!5650 = !DILocation(line: 2591, column: 31, scope: !5649)
!5651 = !DILocation(line: 2591, column: 35, scope: !5649)
!5652 = !DILocation(line: 0, scope: !5649)
!5653 = !DILocation(line: 2591, column: 52, scope: !5649)
!5654 = !DILocation(line: 2591, column: 64, scope: !5649)
!5655 = !DILocation(line: 2592, column: 20, scope: !5649)
!5656 = !DILocation(line: 2592, column: 27, scope: !5649)
!5657 = !DILocation(line: 2592, column: 25, scope: !5649)
!5658 = !DILocation(line: 2591, column: 16, scope: !5539)
!5659 = !DILocation(line: 2593, column: 9, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 2592, column: 44)
!5661 = !DILocation(line: 2595, column: 16, scope: !5660)
!5662 = !DILocation(line: 2595, column: 21, scope: !5660)
!5663 = !DILocation(line: 2594, column: 9, scope: !5660)
!5664 = !DILocation(line: 2596, column: 9, scope: !5660)
!5665 = !DILocation(line: 2600, column: 16, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2600, column: 9)
!5667 = !DILocation(line: 2600, column: 9, scope: !5666)
!5668 = !DILocation(line: 2600, column: 28, scope: !5666)
!5669 = !DILocation(line: 2600, column: 35, scope: !5666)
!5670 = !DILocation(line: 2600, column: 32, scope: !5666)
!5671 = !DILocation(line: 2600, column: 49, scope: !5666)
!5672 = !DILocation(line: 2600, column: 60, scope: !5666)
!5673 = !DILocation(line: 2600, column: 65, scope: !5666)
!5674 = !DILocation(line: 2600, column: 9, scope: !5534)
!5675 = !DILocation(line: 2602, column: 9, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 2601, column: 5)
!5677 = !DILocation(line: 2603, column: 27, scope: !5676)
!5678 = !DILocation(line: 2603, column: 9, scope: !5676)
!5679 = !DILocation(line: 2604, column: 9, scope: !5676)
!5680 = !DILocation(line: 2611, column: 16, scope: !5543)
!5681 = !DILocation(line: 2611, column: 9, scope: !5543)
!5682 = !DILocation(line: 2611, column: 32, scope: !5543)
!5683 = !DILocation(line: 2612, column: 14, scope: !5543)
!5684 = !DILocation(line: 2612, column: 20, scope: !5543)
!5685 = !DILocation(line: 2612, column: 37, scope: !5543)
!5686 = !DILocation(line: 2613, column: 20, scope: !5543)
!5687 = !DILocation(line: 2613, column: 33, scope: !5543)
!5688 = !DILocation(line: 2614, column: 18, scope: !5543)
!5689 = !{!1155, !1159, i64 3008}
!5690 = !DILocation(line: 2614, column: 30, scope: !5543)
!5691 = !DILocation(line: 2614, column: 36, scope: !5543)
!5692 = !DILocation(line: 2614, column: 53, scope: !5543)
!5693 = !DILocation(line: 2615, column: 19, scope: !5543)
!5694 = !DILocation(line: 2615, column: 32, scope: !5543)
!5695 = !DILocation(line: 2615, column: 40, scope: !5543)
!5696 = !DILocation(line: 2615, column: 51, scope: !5543)
!5697 = !DILocation(line: 2615, column: 60, scope: !5543)
!5698 = !DILocation(line: 2615, column: 65, scope: !5543)
!5699 = !DILocation(line: 2616, column: 19, scope: !5543)
!5700 = !DILocation(line: 2616, column: 24, scope: !5543)
!5701 = !DILocation(line: 2611, column: 9, scope: !5534)
!5702 = !DILocation(line: 2618, column: 9, scope: !5542)
!5703 = !DILocation(line: 2619, column: 9, scope: !5542)
!5704 = !DILocation(line: 2620, column: 53, scope: !5542)
!5705 = !DILocation(line: 2618, column: 13, scope: !5542)
!5706 = !DILocation(line: 2619, column: 13, scope: !5542)
!5707 = !DILocation(line: 2620, column: 26, scope: !5542)
!5708 = !DILocation(line: 2620, column: 22, scope: !5542)
!5709 = !DILocation(line: 2622, column: 15, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5542, file: !3, line: 2622, column: 13)
!5711 = !DILocation(line: 2622, column: 23, scope: !5710)
!5712 = !DILocation(line: 2622, column: 38, scope: !5710)
!5713 = !{!1155, !1159, i64 2944}
!5714 = !DILocation(line: 2622, column: 47, scope: !5710)
!5715 = !{!5716, !1159, i64 0}
!5716 = !{!"clusterState", !1159, i64 0, !1160, i64 8, !1156, i64 16, !1156, i64 20, !1159, i64 24, !1159, i64 32, !1157, i64 40, !1157, i64 131112, !1157, i64 262184, !1157, i64 393256, !1159, i64 524328, !1161, i64 524336, !1156, i64 524344, !1156, i64 524348, !1156, i64 524352, !1160, i64 524360, !1156, i64 524368, !1161, i64 524376, !1159, i64 524384, !1161, i64 524392, !1156, i64 524400, !1160, i64 524408, !1156, i64 524416, !1157, i64 524424, !1157, i64 524504, !1161, i64 524584}
!5717 = !DILocation(line: 2622, column: 28, scope: !5710)
!5718 = !DILocation(line: 2622, column: 13, scope: !5542)
!5719 = !DILocation(line: 2623, column: 20, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 2623, column: 17)
!5721 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 2622, column: 55)
!5722 = !DILocation(line: 2623, column: 25, scope: !5720)
!5723 = !DILocation(line: 2623, column: 30, scope: !5720)
!5724 = !DILocation(line: 2623, column: 17, scope: !5721)
!5725 = !DILocation(line: 2624, column: 17, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 2623, column: 46)
!5727 = !DILocation(line: 2625, column: 13, scope: !5726)
!5728 = !DILocation(line: 2626, column: 17, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 2625, column: 20)
!5730 = !DILocation(line: 2628, column: 39, scope: !5721)
!5731 = !DILocation(line: 2628, column: 48, scope: !5721)
!5732 = !DILocation(line: 2628, column: 13, scope: !5721)
!5733 = !DILocation(line: 2629, column: 13, scope: !5721)
!5734 = !DILocation(line: 2631, column: 5, scope: !5543)
!5735 = !DILocation(line: 2639, column: 16, scope: !5548)
!5736 = !DILocation(line: 2639, column: 9, scope: !5548)
!5737 = !DILocation(line: 2639, column: 37, scope: !5548)
!5738 = !DILocation(line: 2639, column: 30, scope: !5548)
!5739 = !DILocation(line: 2639, column: 26, scope: !5548)
!5740 = !DILocation(line: 2640, column: 29, scope: !5547)
!5741 = !DILocation(line: 2643, column: 20, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 2643, column: 13)
!5743 = !DILocation(line: 2643, column: 35, scope: !5742)
!5744 = !DILocation(line: 2643, column: 13, scope: !5547)
!5745 = !DILocation(line: 2640, column: 57, scope: !5547)
!5746 = !DILocation(line: 2648, column: 27, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 2648, column: 13)
!5748 = !DILocation(line: 2649, column: 17, scope: !5747)
!5749 = !DILocation(line: 2649, column: 22, scope: !5747)
!5750 = !DILocation(line: 2649, column: 28, scope: !5747)
!5751 = !DILocation(line: 2649, column: 42, scope: !5747)
!5752 = !DILocation(line: 2650, column: 18, scope: !5747)
!5753 = !DILocation(line: 2650, column: 24, scope: !5747)
!5754 = !DILocation(line: 2650, column: 39, scope: !5747)
!5755 = !DILocation(line: 2650, column: 50, scope: !5747)
!5756 = !DILocation(line: 2650, column: 55, scope: !5747)
!5757 = !DILocation(line: 2648, column: 13, scope: !5547)
!5758 = !DILocation(line: 2651, column: 13, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 2650, column: 73)
!5760 = !DILocation(line: 2652, column: 32, scope: !5759)
!5761 = !DILocation(line: 2652, column: 13, scope: !5759)
!5762 = !DILocation(line: 2653, column: 13, scope: !5759)
!5763 = !DILocation(line: 0, scope: !5759)
!5764 = !DILocation(line: 2655, column: 5, scope: !5548)
!5765 = !DILocation(line: 2864, column: 16, scope: !5766, inlinedAt: !5770)
!5766 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 2864, column: 9)
!5767 = distinct !DISubprogram(name: "writeCommandsDeniedByDiskError", scope: !3, file: !3, line: 2863, type: !5768, isLocal: false, isDefinition: true, scopeLine: 2863, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!5768 = !DISubroutineType(types: !5769)
!5769 = !{!7}
!5770 = distinct !DILocation(line: 2659, column: 27, scope: !5534)
!5771 = !DILocation(line: 2864, column: 9, scope: !5766, inlinedAt: !5770)
!5772 = !DILocation(line: 2865, column: 16, scope: !5766, inlinedAt: !5770)
!5773 = !DILocation(line: 2865, column: 30, scope: !5766, inlinedAt: !5770)
!5774 = !DILocation(line: 2864, column: 42, scope: !5766, inlinedAt: !5770)
!5775 = !DILocation(line: 2866, column: 16, scope: !5766, inlinedAt: !5770)
!5776 = !DILocation(line: 2866, column: 34, scope: !5766, inlinedAt: !5770)
!5777 = !DILocation(line: 2868, column: 9, scope: !5778, inlinedAt: !5770)
!5778 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2867, column: 5)
!5779 = !DILocation(line: 2869, column: 23, scope: !5780, inlinedAt: !5770)
!5780 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 2869, column: 16)
!5781 = !DILocation(line: 2869, column: 33, scope: !5780, inlinedAt: !5770)
!5782 = !DILocation(line: 2870, column: 23, scope: !5780, inlinedAt: !5770)
!5783 = !DILocation(line: 2870, column: 45, scope: !5780, inlinedAt: !5770)
!5784 = !DILocation(line: 2869, column: 44, scope: !5780, inlinedAt: !5770)
!5785 = !DILocation(line: 0, scope: !5786, inlinedAt: !5770)
!5786 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 2873, column: 12)
!5787 = !DILocation(line: 2872, column: 9, scope: !5788, inlinedAt: !5770)
!5788 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 2871, column: 5)
!5789 = !DILocation(line: 2876, column: 1, scope: !5767, inlinedAt: !5770)
!5790 = !DILocation(line: 2659, column: 9, scope: !5534)
!5791 = !DILocation(line: 2660, column: 25, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2660, column: 9)
!5793 = !DILocation(line: 2661, column: 16, scope: !5792)
!5794 = !DILocation(line: 2661, column: 27, scope: !5792)
!5795 = !DILocation(line: 2660, column: 49, scope: !5792)
!5796 = !DILocation(line: 2662, column: 13, scope: !5792)
!5797 = !DILocation(line: 2662, column: 18, scope: !5792)
!5798 = !DILocation(line: 2662, column: 24, scope: !5792)
!5799 = !DILocation(line: 2662, column: 36, scope: !5792)
!5800 = !DILocation(line: 2663, column: 18, scope: !5792)
!5801 = !DILocation(line: 2663, column: 23, scope: !5792)
!5802 = !DILocation(line: 2660, column: 9, scope: !5534)
!5803 = !DILocation(line: 2665, column: 9, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 2664, column: 5)
!5805 = !DILocation(line: 2666, column: 29, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 2666, column: 13)
!5807 = !DILocation(line: 2666, column: 13, scope: !5804)
!5808 = !DILocation(line: 2667, column: 32, scope: !5806)
!5809 = !DILocation(line: 2667, column: 13, scope: !5806)
!5810 = !DILocation(line: 2670, column: 30, scope: !5806)
!5811 = !DILocation(line: 2672, column: 33, scope: !5806)
!5812 = !DILocation(line: 2672, column: 17, scope: !5806)
!5813 = !DILocation(line: 2670, column: 17, scope: !5806)
!5814 = !DILocation(line: 2669, column: 13, scope: !5806)
!5815 = !DILocation(line: 2673, column: 9, scope: !5804)
!5816 = !DILocation(line: 2679, column: 16, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2678, column: 9)
!5818 = !DILocation(line: 2679, column: 9, scope: !5817)
!5819 = !DILocation(line: 2678, column: 35, scope: !5817)
!5820 = !DILocation(line: 2680, column: 16, scope: !5817)
!5821 = !DILocation(line: 2680, column: 9, scope: !5817)
!5822 = !DILocation(line: 2681, column: 12, scope: !5817)
!5823 = !DILocation(line: 2681, column: 17, scope: !5817)
!5824 = !DILocation(line: 2681, column: 23, scope: !5817)
!5825 = !DILocation(line: 2681, column: 35, scope: !5817)
!5826 = !DILocation(line: 2682, column: 16, scope: !5817)
!5827 = !DILocation(line: 2682, column: 39, scope: !5817)
!5828 = !DILocation(line: 2678, column: 9, scope: !5534)
!5829 = !DILocation(line: 2684, column: 9, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 2683, column: 5)
!5831 = !DILocation(line: 2685, column: 28, scope: !5830)
!5832 = !DILocation(line: 2685, column: 9, scope: !5830)
!5833 = !DILocation(line: 2686, column: 9, scope: !5830)
!5834 = !DILocation(line: 2691, column: 27, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2691, column: 9)
!5836 = !DILocation(line: 2691, column: 9, scope: !5835)
!5837 = !DILocation(line: 2691, column: 37, scope: !5835)
!5838 = !DILocation(line: 2691, column: 30, scope: !5835)
!5839 = !DILocation(line: 2692, column: 14, scope: !5835)
!5840 = !DILocation(line: 2692, column: 20, scope: !5835)
!5841 = !DILocation(line: 2692, column: 37, scope: !5835)
!5842 = !DILocation(line: 2693, column: 12, scope: !5835)
!5843 = !DILocation(line: 2693, column: 17, scope: !5835)
!5844 = !DILocation(line: 2693, column: 23, scope: !5835)
!5845 = !DILocation(line: 2691, column: 9, scope: !5534)
!5846 = !DILocation(line: 2695, column: 28, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 2694, column: 5)
!5848 = !DILocation(line: 2695, column: 9, scope: !5847)
!5849 = !DILocation(line: 2696, column: 9, scope: !5847)
!5850 = !DILocation(line: 2700, column: 12, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2700, column: 9)
!5852 = !DILocation(line: 2700, column: 18, scope: !5851)
!5853 = !DILocation(line: 2700, column: 34, scope: !5851)
!5854 = !DILocation(line: 2701, column: 12, scope: !5851)
!5855 = !DILocation(line: 2701, column: 17, scope: !5851)
!5856 = !DILocation(line: 2701, column: 22, scope: !5851)
!5857 = !DILocation(line: 2701, column: 37, scope: !5851)
!5858 = !DILocation(line: 2702, column: 22, scope: !5851)
!5859 = !DILocation(line: 2702, column: 42, scope: !5851)
!5860 = !DILocation(line: 2703, column: 22, scope: !5851)
!5861 = !DILocation(line: 2703, column: 44, scope: !5851)
!5862 = !DILocation(line: 2704, column: 22, scope: !5851)
!5863 = !DILocation(line: 2704, column: 43, scope: !5851)
!5864 = !DILocation(line: 2705, column: 22, scope: !5851)
!5865 = !DILocation(line: 2700, column: 9, scope: !5534)
!5866 = !DILocation(line: 2706, column: 9, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2705, column: 46)
!5868 = !DILocation(line: 2707, column: 9, scope: !5867)
!5869 = !DILocation(line: 2713, column: 37, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2713, column: 9)
!5871 = !DILocation(line: 2713, column: 48, scope: !5870)
!5872 = !DILocation(line: 2713, column: 27, scope: !5870)
!5873 = !DILocation(line: 2714, column: 16, scope: !5870)
!5874 = !DILocation(line: 2714, column: 38, scope: !5870)
!5875 = !DILocation(line: 2715, column: 14, scope: !5870)
!5876 = !DILocation(line: 2715, column: 19, scope: !5870)
!5877 = !DILocation(line: 2715, column: 25, scope: !5870)
!5878 = !DILocation(line: 2713, column: 9, scope: !5534)
!5879 = !DILocation(line: 2717, column: 9, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 2716, column: 5)
!5881 = !DILocation(line: 2718, column: 28, scope: !5880)
!5882 = !DILocation(line: 2718, column: 9, scope: !5880)
!5883 = !DILocation(line: 2719, column: 9, scope: !5880)
!5884 = !DILocation(line: 2724, column: 16, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2724, column: 9)
!5886 = !DILocation(line: 2724, column: 9, scope: !5885)
!5887 = !DILocation(line: 2724, column: 24, scope: !5885)
!5888 = !DILocation(line: 2724, column: 32, scope: !5885)
!5889 = !DILocation(line: 2724, column: 37, scope: !5885)
!5890 = !DILocation(line: 2724, column: 43, scope: !5885)
!5891 = !DILocation(line: 2724, column: 9, scope: !5534)
!5892 = !DILocation(line: 2725, column: 28, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 2724, column: 59)
!5894 = !DILocation(line: 2725, column: 9, scope: !5893)
!5895 = !DILocation(line: 2726, column: 9, scope: !5893)
!5896 = !DILocation(line: 2730, column: 16, scope: !5552)
!5897 = !{!1155, !1156, i64 3068}
!5898 = !DILocation(line: 2730, column: 9, scope: !5552)
!5899 = !DILocation(line: 2730, column: 29, scope: !5552)
!5900 = !DILocation(line: 2731, column: 14, scope: !5552)
!5901 = !DILocation(line: 2731, column: 19, scope: !5552)
!5902 = !DILocation(line: 2731, column: 24, scope: !5552)
!5903 = !DILocation(line: 2731, column: 39, scope: !5552)
!5904 = !DILocation(line: 2732, column: 24, scope: !5552)
!5905 = !DILocation(line: 2732, column: 43, scope: !5552)
!5906 = !DILocation(line: 2733, column: 24, scope: !5552)
!5907 = !DILocation(line: 2733, column: 43, scope: !5552)
!5908 = !DILocation(line: 2734, column: 14, scope: !5552)
!5909 = !DILocation(line: 2734, column: 19, scope: !5552)
!5910 = !DILocation(line: 2734, column: 24, scope: !5552)
!5911 = !DILocation(line: 2736, column: 41, scope: !5552)
!5912 = !DILocation(line: 2735, column: 11, scope: !5551)
!5913 = !DILocation(line: 2735, column: 48, scope: !5552)
!5914 = !DILocation(line: 2735, column: 56, scope: !5552)
!5915 = !DILocation(line: 2736, column: 14, scope: !5552)
!5916 = !DILocation(line: 2736, column: 19, scope: !5552)
!5917 = !DILocation(line: 2736, column: 24, scope: !5552)
!5918 = !DILocation(line: 2737, column: 14, scope: !5552)
!5919 = !DILocation(line: 2737, column: 19, scope: !5552)
!5920 = !DILocation(line: 2737, column: 24, scope: !5552)
!5921 = !DILocation(line: 2738, column: 11, scope: !5554)
!5922 = !DILocation(line: 2738, column: 48, scope: !5552)
!5923 = !DILocation(line: 2730, column: 9, scope: !5534)
!5924 = !DILocation(line: 2740, column: 9, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2739, column: 5)
!5926 = !DILocation(line: 2741, column: 28, scope: !5925)
!5927 = !DILocation(line: 2741, column: 9, scope: !5925)
!5928 = !DILocation(line: 2742, column: 9, scope: !5925)
!5929 = !DILocation(line: 2746, column: 12, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 2746, column: 9)
!5931 = !DILocation(line: 2746, column: 18, scope: !5930)
!5932 = !DILocation(line: 2746, column: 33, scope: !5930)
!5933 = !DILocation(line: 2747, column: 12, scope: !5930)
!5934 = !DILocation(line: 2747, column: 17, scope: !5930)
!5935 = !DILocation(line: 2747, column: 22, scope: !5930)
!5936 = !DILocation(line: 2747, column: 37, scope: !5930)
!5937 = !DILocation(line: 2747, column: 53, scope: !5930)
!5938 = !DILocation(line: 2747, column: 71, scope: !5930)
!5939 = !DILocation(line: 2748, column: 22, scope: !5930)
!5940 = !DILocation(line: 2748, column: 38, scope: !5930)
!5941 = !DILocation(line: 2748, column: 54, scope: !5930)
!5942 = !DILocation(line: 2746, column: 9, scope: !5534)
!5943 = !DILocation(line: 2750, column: 9, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 2749, column: 5)
!5945 = !DILocation(line: 2751, column: 27, scope: !5944)
!5946 = !DILocation(line: 2751, column: 9, scope: !5944)
!5947 = !DILocation(line: 2752, column: 5, scope: !5944)
!5948 = !DILocation(line: 2753, column: 9, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 2752, column: 12)
!5950 = !DILocation(line: 2754, column: 26, scope: !5949)
!5951 = !DILocation(line: 2754, column: 12, scope: !5949)
!5952 = !DILocation(line: 2754, column: 17, scope: !5949)
!5953 = !{!1174, !1161, i64 480}
!5954 = !DILocation(line: 2755, column: 13, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 2755, column: 13)
!5956 = !DILocation(line: 2755, column: 13, scope: !5949)
!5957 = !DILocation(line: 2756, column: 13, scope: !5955)
!5958 = !DILocation(line: 0, scope: !5944)
!5959 = !DILocation(line: 2758, column: 5, scope: !5534)
!5960 = !DILocation(line: 0, scope: !5804)
!5961 = !DILocation(line: 0, scope: !5564)
!5962 = !DILocation(line: 2759, column: 1, scope: !5534)
!5963 = !DILocation(line: 2864, column: 16, scope: !5766)
!5964 = !DILocation(line: 2864, column: 9, scope: !5766)
!5965 = !DILocation(line: 2865, column: 16, scope: !5766)
!5966 = !DILocation(line: 2865, column: 30, scope: !5766)
!5967 = !DILocation(line: 2864, column: 42, scope: !5766)
!5968 = !DILocation(line: 2866, column: 16, scope: !5766)
!5969 = !DILocation(line: 2866, column: 34, scope: !5766)
!5970 = !DILocation(line: 2868, column: 9, scope: !5778)
!5971 = !DILocation(line: 2869, column: 23, scope: !5780)
!5972 = !DILocation(line: 2869, column: 33, scope: !5780)
!5973 = !DILocation(line: 2870, column: 23, scope: !5780)
!5974 = !DILocation(line: 2870, column: 45, scope: !5780)
!5975 = !DILocation(line: 2869, column: 44, scope: !5780)
!5976 = !DILocation(line: 0, scope: !5786)
!5977 = !DILocation(line: 2872, column: 9, scope: !5788)
!5978 = !DILocation(line: 2876, column: 1, scope: !5767)
!5979 = distinct !DISubprogram(name: "closeListeningSockets", scope: !3, file: !3, line: 2765, type: !58, isLocal: false, isDefinition: true, scopeLine: 2765, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5980)
!5980 = !{!5981, !5982}
!5981 = !DILocalVariable(name: "unlink_unix_socket", arg: 1, scope: !5979, file: !3, line: 2765, type: !7)
!5982 = !DILocalVariable(name: "j", scope: !5979, file: !3, line: 2766, type: !7)
!5983 = !DILocation(line: 2765, column: 32, scope: !5979)
!5984 = !DILocation(line: 2766, column: 9, scope: !5979)
!5985 = !DILocation(line: 2768, column: 10, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 2768, column: 5)
!5987 = !DILocation(line: 2768, column: 28, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 2768, column: 5)
!5989 = !DILocation(line: 2768, column: 19, scope: !5988)
!5990 = !DILocation(line: 2768, column: 5, scope: !5986)
!5991 = !DILocation(line: 2768, column: 51, scope: !5988)
!5992 = !DILocation(line: 2768, column: 45, scope: !5988)
!5993 = !DILocation(line: 2768, column: 41, scope: !5988)
!5994 = !DILocation(line: 2768, column: 5, scope: !5988)
!5995 = distinct !{!5995, !5990, !5996}
!5996 = !DILocation(line: 2768, column: 65, scope: !5986)
!5997 = !DILocation(line: 2769, column: 16, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 2769, column: 9)
!5999 = !DILocation(line: 2769, column: 21, scope: !5998)
!6000 = !DILocation(line: 2769, column: 9, scope: !5979)
!6001 = !DILocation(line: 2769, column: 28, scope: !5998)
!6002 = !DILocation(line: 2770, column: 16, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 2770, column: 9)
!6004 = !DILocation(line: 2770, column: 9, scope: !6003)
!6005 = !DILocation(line: 2770, column: 9, scope: !5979)
!6006 = !DILocation(line: 2771, column: 14, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2771, column: 9)
!6008 = !DILocation(line: 2771, column: 32, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 2771, column: 9)
!6010 = !{!1155, !1156, i64 508}
!6011 = !DILocation(line: 2771, column: 23, scope: !6009)
!6012 = !DILocation(line: 2771, column: 9, scope: !6007)
!6013 = !DILocation(line: 2771, column: 54, scope: !6009)
!6014 = !DILocation(line: 2771, column: 48, scope: !6009)
!6015 = !DILocation(line: 2771, column: 44, scope: !6009)
!6016 = !DILocation(line: 2771, column: 9, scope: !6009)
!6017 = distinct !{!6017, !6012, !6018}
!6018 = !DILocation(line: 2771, column: 67, scope: !6007)
!6019 = !DILocation(line: 2772, column: 9, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 2772, column: 9)
!6021 = !DILocation(line: 2772, column: 38, scope: !6020)
!6022 = !DILocation(line: 2772, column: 31, scope: !6020)
!6023 = !DILocation(line: 2772, column: 28, scope: !6020)
!6024 = !DILocation(line: 2773, column: 9, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 2772, column: 50)
!6026 = !DILocation(line: 2774, column: 23, scope: !6025)
!6027 = !DILocation(line: 2774, column: 9, scope: !6025)
!6028 = !DILocation(line: 2775, column: 5, scope: !6025)
!6029 = !DILocation(line: 2776, column: 1, scope: !5979)
!6030 = distinct !DISubprogram(name: "prepareForShutdown", scope: !3, file: !3, line: 2778, type: !2409, isLocal: false, isDefinition: true, scopeLine: 2778, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6031)
!6031 = !{!6032, !6033, !6034, !6035, !6038}
!6032 = !DILocalVariable(name: "flags", arg: 1, scope: !6030, file: !3, line: 2778, type: !7)
!6033 = !DILocalVariable(name: "save", scope: !6030, file: !3, line: 2779, type: !7)
!6034 = !DILocalVariable(name: "nosave", scope: !6030, file: !3, line: 2780, type: !7)
!6035 = !DILocalVariable(name: "rsi", scope: !6036, file: !3, line: 2820, type: !3060)
!6036 = distinct !DILexicalBlock(scope: !6037, file: !3, line: 2817, column: 56)
!6037 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2817, column: 9)
!6038 = !DILocalVariable(name: "rsiptr", scope: !6036, file: !3, line: 2820, type: !3068)
!6039 = !DILocation(line: 2778, column: 28, scope: !6030)
!6040 = !DILocation(line: 2779, column: 22, scope: !6030)
!6041 = !DILocation(line: 2779, column: 9, scope: !6030)
!6042 = !DILocation(line: 2780, column: 24, scope: !6030)
!6043 = !DILocation(line: 2780, column: 9, scope: !6030)
!6044 = !DILocation(line: 2782, column: 5, scope: !6030)
!6045 = !DILocation(line: 2785, column: 5, scope: !6030)
!6046 = !DILocation(line: 2790, column: 16, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2790, column: 9)
!6048 = !DILocation(line: 2790, column: 30, scope: !6047)
!6049 = !DILocation(line: 2790, column: 9, scope: !6030)
!6050 = !DILocation(line: 2791, column: 9, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 2790, column: 37)
!6052 = !DILocation(line: 2792, column: 21, scope: !6051)
!6053 = !DILocation(line: 2792, column: 9, scope: !6051)
!6054 = !DILocation(line: 2793, column: 34, scope: !6051)
!6055 = !DILocation(line: 2793, column: 9, scope: !6051)
!6056 = !DILocation(line: 2794, column: 5, scope: !6051)
!6057 = !DILocation(line: 2796, column: 16, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2796, column: 9)
!6059 = !DILocation(line: 2796, column: 26, scope: !6058)
!6060 = !DILocation(line: 2796, column: 9, scope: !6030)
!6061 = !DILocation(line: 2799, column: 20, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 2799, column: 13)
!6063 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 2796, column: 38)
!6064 = !DILocation(line: 2799, column: 34, scope: !6062)
!6065 = !DILocation(line: 2799, column: 13, scope: !6063)
!6066 = !DILocation(line: 2802, column: 34, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 2802, column: 17)
!6068 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 2799, column: 41)
!6069 = !DILocation(line: 2802, column: 17, scope: !6068)
!6070 = !DILocation(line: 2803, column: 17, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 2802, column: 55)
!6072 = !DILocation(line: 2804, column: 17, scope: !6071)
!6073 = !DILocation(line: 2806, column: 13, scope: !6068)
!6074 = !DILocation(line: 2808, column: 25, scope: !6068)
!6075 = !DILocation(line: 2808, column: 13, scope: !6068)
!6076 = !DILocation(line: 2809, column: 9, scope: !6068)
!6077 = !DILocation(line: 2811, column: 9, scope: !6063)
!6078 = !DILocation(line: 2812, column: 9, scope: !6063)
!6079 = !DILocation(line: 2813, column: 28, scope: !6063)
!6080 = !DILocation(line: 2813, column: 9, scope: !6063)
!6081 = !DILocation(line: 2814, column: 5, scope: !6063)
!6082 = !DILocation(line: 2817, column: 17, scope: !6037)
!6083 = !DILocation(line: 2817, column: 31, scope: !6037)
!6084 = !DILocation(line: 2817, column: 39, scope: !6037)
!6085 = !DILocation(line: 2817, column: 35, scope: !6037)
!6086 = !DILocation(line: 2817, column: 50, scope: !6037)
!6087 = !DILocation(line: 2818, column: 9, scope: !6036)
!6088 = !DILocation(line: 2820, column: 9, scope: !6036)
!6089 = !DILocation(line: 2820, column: 21, scope: !6036)
!6090 = !DILocation(line: 2821, column: 18, scope: !6036)
!6091 = !DILocation(line: 2820, column: 27, scope: !6036)
!6092 = !DILocation(line: 2822, column: 28, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 2822, column: 13)
!6094 = !DILocation(line: 2822, column: 13, scope: !6093)
!6095 = !DILocation(line: 2822, column: 49, scope: !6093)
!6096 = !DILocation(line: 2822, column: 13, scope: !6036)
!6097 = !DILocation(line: 2828, column: 13, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 2822, column: 58)
!6099 = !DILocation(line: 2829, column: 13, scope: !6098)
!6100 = !DILocation(line: 2831, column: 5, scope: !6037)
!6101 = !DILocation(line: 2834, column: 16, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 2834, column: 9)
!6103 = !DILocation(line: 2834, column: 9, scope: !6102)
!6104 = !DILocation(line: 2834, column: 36, scope: !6102)
!6105 = !DILocation(line: 2834, column: 29, scope: !6102)
!6106 = !DILocation(line: 2834, column: 26, scope: !6102)
!6107 = !DILocation(line: 2835, column: 9, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 2834, column: 45)
!6109 = !DILocation(line: 2836, column: 23, scope: !6108)
!6110 = !DILocation(line: 2836, column: 9, scope: !6108)
!6111 = !DILocation(line: 2837, column: 5, scope: !6108)
!6112 = !DILocation(line: 2841, column: 5, scope: !6030)
!6113 = !DILocation(line: 2844, column: 5, scope: !6030)
!6114 = !DILocation(line: 2846, column: 16, scope: !6030)
!6115 = !DILocation(line: 2846, column: 9, scope: !6030)
!6116 = !DILocation(line: 2845, column: 5, scope: !6030)
!6117 = !DILocation(line: 2847, column: 5, scope: !6030)
!6118 = !DILocation(line: 0, scope: !6098)
!6119 = !DILocation(line: 2848, column: 1, scope: !6030)
!6120 = distinct !DISubprogram(name: "time_independent_strcmp", scope: !3, file: !3, line: 2887, type: !6121, isLocal: false, isDefinition: true, scopeLine: 2887, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6123)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{!7, !40, !40}
!6123 = !{!6124, !6125, !6126, !6130, !6131, !6132, !6133, !6134}
!6124 = !DILocalVariable(name: "a", arg: 1, scope: !6120, file: !3, line: 2887, type: !40)
!6125 = !DILocalVariable(name: "b", arg: 2, scope: !6120, file: !3, line: 2887, type: !40)
!6126 = !DILocalVariable(name: "bufa", scope: !6120, file: !3, line: 2888, type: !6127)
!6127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 4096, elements: !6128)
!6128 = !{!6129}
!6129 = !DISubrange(count: 512)
!6130 = !DILocalVariable(name: "bufb", scope: !6120, file: !3, line: 2888, type: !6127)
!6131 = !DILocalVariable(name: "alen", scope: !6120, file: !3, line: 2893, type: !50)
!6132 = !DILocalVariable(name: "blen", scope: !6120, file: !3, line: 2894, type: !50)
!6133 = !DILocalVariable(name: "j", scope: !6120, file: !3, line: 2895, type: !50)
!6134 = !DILocalVariable(name: "diff", scope: !6120, file: !3, line: 2896, type: !7)
!6135 = !DILocation(line: 2887, column: 35, scope: !6120)
!6136 = !DILocation(line: 2887, column: 44, scope: !6120)
!6137 = !DILocation(line: 2888, column: 5, scope: !6120)
!6138 = !DILocation(line: 2888, column: 10, scope: !6120)
!6139 = !DILocation(line: 2888, column: 41, scope: !6120)
!6140 = !DILocation(line: 2893, column: 25, scope: !6120)
!6141 = !DILocation(line: 2894, column: 25, scope: !6120)
!6142 = !DILocation(line: 2896, column: 9, scope: !6120)
!6143 = !DILocation(line: 2901, column: 9, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 2901, column: 9)
!6145 = !DILocation(line: 2901, column: 14, scope: !6144)
!6146 = !DILocation(line: 2901, column: 29, scope: !6144)
!6147 = !DILocation(line: 2901, column: 32, scope: !6144)
!6148 = !DILocation(line: 2901, column: 37, scope: !6144)
!6149 = !DILocation(line: 2901, column: 9, scope: !6120)
!6150 = !DILocation(line: 2903, column: 5, scope: !6120)
!6151 = !DILocation(line: 2904, column: 5, scope: !6120)
!6152 = !DILocation(line: 2907, column: 5, scope: !6120)
!6153 = !DILocation(line: 2908, column: 5, scope: !6120)
!6154 = !DILocation(line: 2895, column: 18, scope: !6120)
!6155 = !DILocation(line: 2912, column: 10, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 2912, column: 5)
!6157 = !DILocation(line: 2912, column: 5, scope: !6156)
!6158 = !DILocation(line: 2913, column: 18, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 2912, column: 40)
!6160 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 2912, column: 5)
!6161 = !DILocation(line: 2913, column: 28, scope: !6159)
!6162 = !DILocation(line: 2913, column: 26, scope: !6159)
!6163 = !DILocation(line: 2913, column: 14, scope: !6159)
!6164 = !DILocation(line: 2912, column: 36, scope: !6160)
!6165 = !DILocation(line: 2912, column: 5, scope: !6160)
!6166 = !DILocation(line: 2912, column: 19, scope: !6160)
!6167 = distinct !{!6167, !6157, !6168}
!6168 = !DILocation(line: 2914, column: 5, scope: !6156)
!6169 = !DILocation(line: 2916, column: 18, scope: !6120)
!6170 = !DILocation(line: 2916, column: 10, scope: !6120)
!6171 = !DILocation(line: 2917, column: 5, scope: !6120)
!6172 = !DILocation(line: 0, scope: !6120)
!6173 = !DILocation(line: 0, scope: !6144)
!6174 = !DILocation(line: 2918, column: 1, scope: !6120)
!6175 = distinct !DISubprogram(name: "addReplyCommandFlag", scope: !3, file: !3, line: 2973, type: !6176, isLocal: false, isDefinition: true, scopeLine: 2973, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6178)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!7, !69, !60, !7, !40}
!6178 = !{!6179, !6180, !6181, !6182}
!6179 = !DILocalVariable(name: "c", arg: 1, scope: !6175, file: !3, line: 2973, type: !69)
!6180 = !DILocalVariable(name: "cmd", arg: 2, scope: !6175, file: !3, line: 2973, type: !60)
!6181 = !DILocalVariable(name: "f", arg: 3, scope: !6175, file: !3, line: 2973, type: !7)
!6182 = !DILocalVariable(name: "reply", arg: 4, scope: !6175, file: !3, line: 2973, type: !40)
!6183 = !DILocation(line: 2973, column: 33, scope: !6175)
!6184 = !DILocation(line: 2973, column: 57, scope: !6175)
!6185 = !DILocation(line: 2973, column: 66, scope: !6175)
!6186 = !DILocation(line: 2973, column: 75, scope: !6175)
!6187 = !DILocation(line: 2974, column: 14, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2974, column: 9)
!6189 = !DILocation(line: 2974, column: 20, scope: !6188)
!6190 = !DILocation(line: 2974, column: 9, scope: !6175)
!6191 = !DILocation(line: 2975, column: 9, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2974, column: 25)
!6193 = !DILocation(line: 2976, column: 9, scope: !6192)
!6194 = !DILocation(line: 0, scope: !6175)
!6195 = !DILocation(line: 0, scope: !6192)
!6196 = !DILocation(line: 2979, column: 1, scope: !6175)
!6197 = distinct !DISubprogram(name: "addReplyCommand", scope: !3, file: !3, line: 2982, type: !6198, isLocal: false, isDefinition: true, scopeLine: 2982, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6200)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{null, !69, !60}
!6200 = !{!6201, !6202, !6203, !6206}
!6201 = !DILocalVariable(name: "c", arg: 1, scope: !6197, file: !3, line: 2982, type: !69)
!6202 = !DILocalVariable(name: "cmd", arg: 2, scope: !6197, file: !3, line: 2982, type: !60)
!6203 = !DILocalVariable(name: "flagcount", scope: !6204, file: !3, line: 2991, type: !7)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 2985, column: 12)
!6205 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 2983, column: 9)
!6206 = !DILocalVariable(name: "flaglen", scope: !6204, file: !3, line: 2992, type: !6)
!6207 = !DILocation(line: 2982, column: 30, scope: !6197)
!6208 = !DILocation(line: 2982, column: 54, scope: !6197)
!6209 = !DILocation(line: 2983, column: 10, scope: !6205)
!6210 = !DILocation(line: 2983, column: 9, scope: !6197)
!6211 = !DILocation(line: 2984, column: 28, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 2983, column: 15)
!6213 = !DILocation(line: 2984, column: 9, scope: !6212)
!6214 = !DILocation(line: 2985, column: 5, scope: !6212)
!6215 = !DILocation(line: 2987, column: 9, scope: !6204)
!6216 = !DILocation(line: 2988, column: 37, scope: !6204)
!6217 = !DILocation(line: 2988, column: 9, scope: !6204)
!6218 = !DILocation(line: 2989, column: 34, scope: !6204)
!6219 = !DILocation(line: 2989, column: 29, scope: !6204)
!6220 = !DILocation(line: 2989, column: 9, scope: !6204)
!6221 = !DILocation(line: 2991, column: 13, scope: !6204)
!6222 = !DILocation(line: 2992, column: 25, scope: !6204)
!6223 = !DILocation(line: 2992, column: 15, scope: !6204)
!6224 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6225)
!6225 = distinct !DILocation(line: 2993, column: 22, scope: !6204)
!6226 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6225)
!6227 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6225)
!6228 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6225)
!6229 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6225)
!6230 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6225)
!6231 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6225)
!6232 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6225)
!6233 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6225)
!6234 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6235)
!6235 = distinct !DILocation(line: 2994, column: 22, scope: !6204)
!6236 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6225)
!6237 = !DILocation(line: 0, scope: !6175, inlinedAt: !6225)
!6238 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6225)
!6239 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6235)
!6240 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6235)
!6241 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6235)
!6242 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6235)
!6243 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6235)
!6244 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6235)
!6245 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6235)
!6246 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6235)
!6247 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6248)
!6248 = distinct !DILocation(line: 2995, column: 22, scope: !6204)
!6249 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6235)
!6250 = !DILocation(line: 0, scope: !6175, inlinedAt: !6235)
!6251 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6235)
!6252 = !DILocation(line: 2994, column: 19, scope: !6204)
!6253 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6248)
!6254 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6248)
!6255 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6248)
!6256 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6248)
!6257 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6248)
!6258 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6248)
!6259 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6248)
!6260 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6248)
!6261 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6262)
!6262 = distinct !DILocation(line: 2996, column: 22, scope: !6204)
!6263 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6248)
!6264 = !DILocation(line: 0, scope: !6175, inlinedAt: !6248)
!6265 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6248)
!6266 = !DILocation(line: 2995, column: 19, scope: !6204)
!6267 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6262)
!6268 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6262)
!6269 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6262)
!6270 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6262)
!6271 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6262)
!6272 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6262)
!6273 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6262)
!6274 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6262)
!6275 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6276)
!6276 = distinct !DILocation(line: 2997, column: 22, scope: !6204)
!6277 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6262)
!6278 = !DILocation(line: 0, scope: !6175, inlinedAt: !6262)
!6279 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6262)
!6280 = !DILocation(line: 2996, column: 19, scope: !6204)
!6281 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6276)
!6282 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6276)
!6283 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6276)
!6284 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6276)
!6285 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6276)
!6286 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6276)
!6287 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6276)
!6288 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6276)
!6289 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6290)
!6290 = distinct !DILocation(line: 2998, column: 22, scope: !6204)
!6291 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6276)
!6292 = !DILocation(line: 0, scope: !6175, inlinedAt: !6276)
!6293 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6276)
!6294 = !DILocation(line: 2997, column: 19, scope: !6204)
!6295 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6290)
!6296 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6290)
!6297 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6290)
!6298 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6290)
!6299 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6290)
!6300 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6290)
!6301 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6290)
!6302 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6290)
!6303 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6304)
!6304 = distinct !DILocation(line: 2999, column: 22, scope: !6204)
!6305 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6290)
!6306 = !DILocation(line: 0, scope: !6175, inlinedAt: !6290)
!6307 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6290)
!6308 = !DILocation(line: 2998, column: 19, scope: !6204)
!6309 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6304)
!6310 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6304)
!6311 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6304)
!6312 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6304)
!6313 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6304)
!6314 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6304)
!6315 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6304)
!6316 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6304)
!6317 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6318)
!6318 = distinct !DILocation(line: 3000, column: 22, scope: !6204)
!6319 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6304)
!6320 = !DILocation(line: 0, scope: !6175, inlinedAt: !6304)
!6321 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6304)
!6322 = !DILocation(line: 2999, column: 19, scope: !6204)
!6323 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6318)
!6324 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6318)
!6325 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6318)
!6326 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6318)
!6327 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6318)
!6328 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6318)
!6329 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6318)
!6330 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6318)
!6331 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6332)
!6332 = distinct !DILocation(line: 3001, column: 22, scope: !6204)
!6333 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6318)
!6334 = !DILocation(line: 0, scope: !6175, inlinedAt: !6318)
!6335 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6318)
!6336 = !DILocation(line: 3000, column: 19, scope: !6204)
!6337 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6332)
!6338 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6332)
!6339 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6332)
!6340 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6332)
!6341 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6332)
!6342 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6332)
!6343 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6332)
!6344 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6332)
!6345 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6346)
!6346 = distinct !DILocation(line: 3002, column: 22, scope: !6204)
!6347 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6332)
!6348 = !DILocation(line: 0, scope: !6175, inlinedAt: !6332)
!6349 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6332)
!6350 = !DILocation(line: 3001, column: 19, scope: !6204)
!6351 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6346)
!6352 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6346)
!6353 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6346)
!6354 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6346)
!6355 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6346)
!6356 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6346)
!6357 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6346)
!6358 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6346)
!6359 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6360)
!6360 = distinct !DILocation(line: 3003, column: 22, scope: !6204)
!6361 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6346)
!6362 = !DILocation(line: 0, scope: !6175, inlinedAt: !6346)
!6363 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6346)
!6364 = !DILocation(line: 3002, column: 19, scope: !6204)
!6365 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6360)
!6366 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6360)
!6367 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6360)
!6368 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6360)
!6369 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6360)
!6370 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6360)
!6371 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6360)
!6372 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6360)
!6373 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6374)
!6374 = distinct !DILocation(line: 3004, column: 22, scope: !6204)
!6375 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6360)
!6376 = !DILocation(line: 0, scope: !6175, inlinedAt: !6360)
!6377 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6360)
!6378 = !DILocation(line: 3003, column: 19, scope: !6204)
!6379 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6374)
!6380 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6374)
!6381 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6374)
!6382 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6374)
!6383 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6374)
!6384 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6374)
!6385 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6374)
!6386 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6374)
!6387 = !DILocation(line: 2974, column: 14, scope: !6188, inlinedAt: !6388)
!6388 = distinct !DILocation(line: 3005, column: 22, scope: !6204)
!6389 = !DILocation(line: 2978, column: 5, scope: !6175, inlinedAt: !6374)
!6390 = !DILocation(line: 0, scope: !6175, inlinedAt: !6374)
!6391 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6374)
!6392 = !DILocation(line: 3004, column: 19, scope: !6204)
!6393 = !DILocation(line: 2973, column: 33, scope: !6175, inlinedAt: !6388)
!6394 = !DILocation(line: 2973, column: 57, scope: !6175, inlinedAt: !6388)
!6395 = !DILocation(line: 2973, column: 66, scope: !6175, inlinedAt: !6388)
!6396 = !DILocation(line: 2973, column: 75, scope: !6175, inlinedAt: !6388)
!6397 = !DILocation(line: 2974, column: 20, scope: !6188, inlinedAt: !6388)
!6398 = !DILocation(line: 2974, column: 9, scope: !6175, inlinedAt: !6388)
!6399 = !DILocation(line: 2975, column: 9, scope: !6192, inlinedAt: !6388)
!6400 = !DILocation(line: 2976, column: 9, scope: !6192, inlinedAt: !6388)
!6401 = !DILocation(line: 0, scope: !6175, inlinedAt: !6388)
!6402 = !DILocation(line: 0, scope: !6204)
!6403 = !DILocation(line: 2979, column: 1, scope: !6175, inlinedAt: !6388)
!6404 = !DILocation(line: 3005, column: 19, scope: !6204)
!6405 = !DILocation(line: 3006, column: 19, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 3006, column: 13)
!6407 = !DILocation(line: 3006, column: 14, scope: !6406)
!6408 = !DILocation(line: 3006, column: 32, scope: !6406)
!6409 = !DILocation(line: 0, scope: !6406)
!6410 = !DILocation(line: 3006, column: 48, scope: !6406)
!6411 = !DILocation(line: 3006, column: 63, scope: !6406)
!6412 = !DILocation(line: 3007, column: 24, scope: !6406)
!6413 = !DILocation(line: 3006, column: 13, scope: !6204)
!6414 = !DILocation(line: 3009, column: 13, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 3008, column: 9)
!6416 = !DILocation(line: 3010, column: 23, scope: !6415)
!6417 = !DILocation(line: 3011, column: 9, scope: !6415)
!6418 = !DILocation(line: 3012, column: 48, scope: !6204)
!6419 = !DILocation(line: 3012, column: 9, scope: !6204)
!6420 = !DILocation(line: 3014, column: 34, scope: !6204)
!6421 = !DILocation(line: 3014, column: 29, scope: !6204)
!6422 = !DILocation(line: 3014, column: 9, scope: !6204)
!6423 = !DILocation(line: 3015, column: 34, scope: !6204)
!6424 = !{!1211, !1156, i64 52}
!6425 = !DILocation(line: 3015, column: 29, scope: !6204)
!6426 = !DILocation(line: 3015, column: 9, scope: !6204)
!6427 = !DILocation(line: 3016, column: 34, scope: !6204)
!6428 = !{!1211, !1156, i64 56}
!6429 = !DILocation(line: 3016, column: 29, scope: !6204)
!6430 = !DILocation(line: 3016, column: 9, scope: !6204)
!6431 = !DILocation(line: 3018, column: 1, scope: !6197)
!6432 = !DILocation(line: 3111, column: 30, scope: !366)
!6433 = !DILocation(line: 3112, column: 16, scope: !366)
!6434 = !DILocation(line: 3112, column: 9, scope: !366)
!6435 = !DILocation(line: 3113, column: 28, scope: !366)
!6436 = !DILocation(line: 3113, column: 44, scope: !366)
!6437 = !DILocation(line: 3113, column: 36, scope: !366)
!6438 = !DILocation(line: 3113, column: 12, scope: !366)
!6439 = !DILocation(line: 3115, column: 5, scope: !366)
!6440 = !DILocation(line: 3116, column: 9, scope: !366)
!6441 = !DILocation(line: 3116, column: 26, scope: !366)
!6442 = !DILocation(line: 3117, column: 9, scope: !366)
!6443 = !DILocation(line: 3119, column: 17, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3119, column: 9)
!6445 = !DILocation(line: 3119, column: 9, scope: !366)
!6446 = !DILocation(line: 3119, column: 26, scope: !6444)
!6447 = !DILocation(line: 3120, column: 19, scope: !366)
!6448 = !DILocation(line: 3120, column: 45, scope: !366)
!6449 = !DILocation(line: 3121, column: 19, scope: !366)
!6450 = !DILocation(line: 3121, column: 49, scope: !366)
!6451 = !DILocation(line: 3115, column: 19, scope: !366)
!6452 = !DILocation(line: 3123, column: 5, scope: !366)
!6453 = !DILocation(line: 3115, column: 28, scope: !366)
!6454 = !DILocation(line: 3124, column: 5, scope: !366)
!6455 = !DILocation(line: 3127, column: 21, scope: !404)
!6456 = !DILocation(line: 3127, column: 40, scope: !404)
!6457 = !DILocation(line: 3127, column: 9, scope: !366)
!6458 = !DILocation(line: 3195, column: 21, scope: !408)
!6459 = !DILocation(line: 3132, column: 20, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !403, file: !3, line: 3132, column: 13)
!6461 = !DILocation(line: 3132, column: 13, scope: !6460)
!6462 = !DILocation(line: 3132, column: 13, scope: !403)
!6463 = !DILocation(line: 3130, column: 15, scope: !403)
!6464 = !DILocation(line: 3132, column: 37, scope: !6460)
!6465 = !DILocation(line: 3133, column: 25, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3133, column: 18)
!6467 = !DILocation(line: 3133, column: 18, scope: !6466)
!6468 = !DILocation(line: 3133, column: 18, scope: !6460)
!6469 = !DILocation(line: 0, scope: !6466)
!6470 = !DILocation(line: 3136, column: 13, scope: !403)
!6471 = !DILocation(line: 3138, column: 13, scope: !403)
!6472 = !DILocation(line: 3140, column: 13, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 3138, column: 25)
!6474 = distinct !DILexicalBlock(scope: !403, file: !3, line: 3138, column: 13)
!6475 = !DILocation(line: 3142, column: 9, scope: !6473)
!6476 = !DILocation(line: 3145, column: 9, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !403, file: !3, line: 3145, column: 9)
!6478 = !DILocation(line: 3144, column: 22, scope: !403)
!6479 = !DILocation(line: 3169, column: 13, scope: !403)
!6480 = !DILocation(line: 3170, column: 20, scope: !403)
!6481 = !DILocation(line: 3170, column: 13, scope: !403)
!6482 = !DILocation(line: 3170, column: 45, scope: !403)
!6483 = !DILocation(line: 3171, column: 34, scope: !403)
!6484 = !DILocation(line: 3174, column: 20, scope: !403)
!6485 = !DILocation(line: 3175, column: 13, scope: !403)
!6486 = !DILocation(line: 3182, column: 20, scope: !403)
!6487 = !DILocation(line: 3182, column: 13, scope: !403)
!6488 = !DILocation(line: 3184, column: 20, scope: !403)
!6489 = !DILocation(line: 3186, column: 30, scope: !403)
!6490 = !DILocation(line: 3187, column: 20, scope: !403)
!6491 = !DILocation(line: 3188, column: 20, scope: !403)
!6492 = !DILocation(line: 3189, column: 13, scope: !403)
!6493 = !DILocation(line: 3190, column: 20, scope: !403)
!6494 = !DILocation(line: 3190, column: 13, scope: !403)
!6495 = !DILocation(line: 3191, column: 20, scope: !403)
!6496 = !{!1155, !1159, i64 8}
!6497 = !DILocation(line: 3191, column: 13, scope: !403)
!6498 = !DILocation(line: 3146, column: 16, scope: !403)
!6499 = !DILocation(line: 3192, column: 5, scope: !403)
!6500 = !DILocation(line: 3195, column: 40, scope: !408)
!6501 = !DILocation(line: 3195, column: 9, scope: !366)
!6502 = !DILocation(line: 3211, column: 21, scope: !412)
!6503 = !DILocation(line: 3196, column: 9, scope: !407)
!6504 = !DILocation(line: 3196, column: 16, scope: !407)
!6505 = !DILocation(line: 3196, column: 23, scope: !407)
!6506 = !DILocation(line: 3197, column: 9, scope: !407)
!6507 = !DILocation(line: 3198, column: 21, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !407, file: !3, line: 3198, column: 13)
!6509 = !DILocation(line: 3198, column: 13, scope: !407)
!6510 = !DILocation(line: 3198, column: 32, scope: !6508)
!6511 = !DILocation(line: 3198, column: 25, scope: !6508)
!6512 = !DILocation(line: 0, scope: !403)
!6513 = !DILocation(line: 3205, column: 13, scope: !407)
!6514 = !DILocation(line: 3205, column: 40, scope: !407)
!6515 = !DILocation(line: 3205, column: 39, scope: !407)
!6516 = !DILocation(line: 3206, column: 13, scope: !407)
!6517 = !DILocation(line: 3206, column: 20, scope: !407)
!6518 = !DILocation(line: 3207, column: 20, scope: !407)
!6519 = !DILocation(line: 3199, column: 16, scope: !407)
!6520 = !DILocation(line: 3208, column: 5, scope: !408)
!6521 = !DILocation(line: 3208, column: 5, scope: !407)
!6522 = !DILocation(line: 3211, column: 40, scope: !412)
!6523 = !DILocation(line: 3211, column: 9, scope: !366)
!6524 = !DILocation(line: 3328, column: 21, scope: !468)
!6525 = !DILocation(line: 3212, column: 9, scope: !411)
!6526 = !DILocation(line: 3212, column: 14, scope: !411)
!6527 = !DILocation(line: 3213, column: 9, scope: !411)
!6528 = !DILocation(line: 3213, column: 14, scope: !411)
!6529 = !DILocation(line: 3214, column: 9, scope: !411)
!6530 = !DILocation(line: 3214, column: 14, scope: !411)
!6531 = !DILocation(line: 3215, column: 9, scope: !411)
!6532 = !DILocation(line: 3215, column: 14, scope: !411)
!6533 = !DILocation(line: 3216, column: 9, scope: !411)
!6534 = !DILocation(line: 3216, column: 14, scope: !411)
!6535 = !DILocation(line: 3217, column: 9, scope: !411)
!6536 = !DILocation(line: 3217, column: 14, scope: !411)
!6537 = !DILocation(line: 3218, column: 9, scope: !411)
!6538 = !DILocation(line: 3218, column: 14, scope: !411)
!6539 = !DILocation(line: 3219, column: 31, scope: !411)
!6540 = !DILocation(line: 3219, column: 16, scope: !411)
!6541 = !DILocation(line: 3220, column: 42, scope: !411)
!6542 = !DILocation(line: 3220, column: 16, scope: !411)
!6543 = !DILocation(line: 3221, column: 36, scope: !411)
!6544 = !DILocation(line: 3221, column: 21, scope: !411)
!6545 = !DILocation(line: 3222, column: 57, scope: !411)
!6546 = !DILocation(line: 3222, column: 43, scope: !411)
!6547 = !DILocation(line: 3222, column: 32, scope: !411)
!6548 = !DILocation(line: 3222, column: 75, scope: !411)
!6549 = !DILocation(line: 3222, column: 19, scope: !411)
!6550 = !DILocation(line: 3223, column: 39, scope: !411)
!6551 = !DILocation(line: 3223, column: 34, scope: !411)
!6552 = !DILocation(line: 3229, column: 35, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !411, file: !3, line: 3229, column: 13)
!6554 = !DILocation(line: 3229, column: 26, scope: !6553)
!6555 = !DILocation(line: 3229, column: 13, scope: !411)
!6556 = !DILocation(line: 3230, column: 37, scope: !6553)
!6557 = !DILocation(line: 3230, column: 13, scope: !6553)
!6558 = !DILocation(line: 3232, column: 9, scope: !411)
!6559 = !DILocation(line: 3233, column: 39, scope: !411)
!6560 = !DILocation(line: 3233, column: 9, scope: !411)
!6561 = !DILocation(line: 3234, column: 9, scope: !411)
!6562 = !DILocation(line: 3235, column: 9, scope: !411)
!6563 = !DILocation(line: 3236, column: 51, scope: !411)
!6564 = !{!6565, !1160, i64 56}
!6565 = !{!"redisMemOverhead", !1160, i64 0, !1160, i64 8, !1160, i64 16, !1160, i64 24, !1160, i64 32, !1160, i64 40, !1160, i64 48, !1160, i64 56, !1160, i64 64, !1160, i64 72, !1160, i64 80, !1160, i64 88, !6566, i64 96, !6566, i64 100, !6566, i64 104, !1160, i64 112, !6566, i64 120, !1160, i64 128, !6566, i64 136, !1160, i64 144, !6566, i64 152, !1160, i64 160, !1160, i64 168, !1159, i64 176}
!6566 = !{!"float", !1157, i64 0}
!6567 = !DILocation(line: 3236, column: 9, scope: !411)
!6568 = !DILocation(line: 3237, column: 68, scope: !411)
!6569 = !DILocation(line: 3237, column: 9, scope: !411)
!6570 = !DILocation(line: 3238, column: 44, scope: !411)
!6571 = !DILocation(line: 3238, column: 9, scope: !411)
!6572 = !DILocation(line: 3240, column: 21, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !411, file: !3, line: 3240, column: 13)
!6574 = !DILocation(line: 3240, column: 13, scope: !411)
!6575 = !DILocation(line: 3240, column: 32, scope: !6573)
!6576 = !DILocation(line: 3240, column: 25, scope: !6573)
!6577 = !DILocation(line: 0, scope: !407)
!6578 = !DILocation(line: 3285, column: 38, scope: !411)
!6579 = !DILocation(line: 3287, column: 20, scope: !411)
!6580 = !DILocation(line: 3289, column: 17, scope: !411)
!6581 = !{!6565, !6566, i64 100}
!6582 = !DILocation(line: 3289, column: 13, scope: !411)
!6583 = !DILocation(line: 3290, column: 17, scope: !411)
!6584 = !{!6565, !1160, i64 64}
!6585 = !DILocation(line: 3291, column: 17, scope: !411)
!6586 = !{!6565, !1160, i64 16}
!6587 = !DILocation(line: 3292, column: 17, scope: !411)
!6588 = !{!6565, !1160, i64 72}
!6589 = !DILocation(line: 3293, column: 17, scope: !411)
!6590 = !{!6565, !6566, i64 96}
!6591 = !DILocation(line: 3293, column: 13, scope: !411)
!6592 = !DILocation(line: 3294, column: 38, scope: !411)
!6593 = !DILocation(line: 3295, column: 38, scope: !411)
!6594 = !DILocation(line: 3296, column: 38, scope: !411)
!6595 = !DILocation(line: 3301, column: 29, scope: !411)
!6596 = !DILocation(line: 3303, column: 13, scope: !411)
!6597 = !{!1155, !1159, i64 3016}
!6598 = !DILocation(line: 3304, column: 20, scope: !411)
!6599 = !DILocation(line: 3307, column: 17, scope: !411)
!6600 = !{!6565, !6566, i64 120}
!6601 = !DILocation(line: 3307, column: 13, scope: !411)
!6602 = !DILocation(line: 3308, column: 17, scope: !411)
!6603 = !{!6565, !1160, i64 128}
!6604 = !DILocation(line: 3309, column: 17, scope: !411)
!6605 = !{!6565, !6566, i64 136}
!6606 = !DILocation(line: 3309, column: 13, scope: !411)
!6607 = !DILocation(line: 3310, column: 17, scope: !411)
!6608 = !{!6565, !1160, i64 144}
!6609 = !DILocation(line: 3311, column: 17, scope: !411)
!6610 = !{!6565, !6566, i64 152}
!6611 = !DILocation(line: 3311, column: 13, scope: !411)
!6612 = !DILocation(line: 3312, column: 17, scope: !411)
!6613 = !{!6565, !1160, i64 160}
!6614 = !DILocation(line: 3313, column: 17, scope: !411)
!6615 = !{!6565, !6566, i64 104}
!6616 = !DILocation(line: 3313, column: 13, scope: !411)
!6617 = !DILocation(line: 3314, column: 17, scope: !411)
!6618 = !{!6565, !1160, i64 112}
!6619 = !DILocation(line: 3315, column: 13, scope: !411)
!6620 = !DILocation(line: 3316, column: 17, scope: !411)
!6621 = !{!6565, !1160, i64 24}
!6622 = !DILocation(line: 3317, column: 17, scope: !411)
!6623 = !{!6565, !1160, i64 32}
!6624 = !DILocation(line: 3318, column: 17, scope: !411)
!6625 = !{!6565, !1160, i64 40}
!6626 = !DILocation(line: 3319, column: 17, scope: !411)
!6627 = !{!6565, !1160, i64 48}
!6628 = !DILocation(line: 3321, column: 20, scope: !411)
!6629 = !DILocation(line: 3322, column: 13, scope: !411)
!6630 = !DILocation(line: 3241, column: 16, scope: !411)
!6631 = !DILocation(line: 3324, column: 9, scope: !411)
!6632 = !DILocation(line: 3325, column: 5, scope: !412)
!6633 = !DILocation(line: 3325, column: 5, scope: !411)
!6634 = !DILocation(line: 3329, column: 13, scope: !467)
!6635 = !DILocation(line: 3328, column: 40, scope: !468)
!6636 = !DILocation(line: 3328, column: 9, scope: !366)
!6637 = !DILocation(line: 3418, column: 21, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3418, column: 9)
!6639 = !DILocation(line: 3329, column: 21, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !467, file: !3, line: 3329, column: 13)
!6641 = !DILocation(line: 3329, column: 32, scope: !6640)
!6642 = !DILocation(line: 3329, column: 25, scope: !6640)
!6643 = !DILocation(line: 0, scope: !411)
!6644 = !DILocation(line: 3348, column: 20, scope: !467)
!6645 = !DILocation(line: 3349, column: 20, scope: !467)
!6646 = !DILocation(line: 3350, column: 20, scope: !467)
!6647 = !DILocation(line: 3350, column: 34, scope: !467)
!6648 = !DILocation(line: 3351, column: 30, scope: !467)
!6649 = !DILocation(line: 3352, column: 21, scope: !467)
!6650 = !DILocation(line: 3352, column: 39, scope: !467)
!6651 = !DILocation(line: 3352, column: 13, scope: !467)
!6652 = !DILocation(line: 3353, column: 30, scope: !467)
!6653 = !{!1155, !1160, i64 2152}
!6654 = !DILocation(line: 3354, column: 46, scope: !467)
!6655 = !DILocation(line: 3354, column: 24, scope: !467)
!6656 = !DILocation(line: 3355, column: 22, scope: !467)
!6657 = !DILocation(line: 3355, column: 40, scope: !467)
!6658 = !DILocation(line: 3355, column: 32, scope: !467)
!6659 = !DILocation(line: 3356, column: 20, scope: !467)
!6660 = !{!1155, !1160, i64 1256}
!6661 = !DILocation(line: 3357, column: 20, scope: !467)
!6662 = !DILocation(line: 3357, column: 30, scope: !467)
!6663 = !DILocation(line: 3358, column: 20, scope: !467)
!6664 = !DILocation(line: 3358, column: 34, scope: !467)
!6665 = !DILocation(line: 3359, column: 20, scope: !467)
!6666 = !DILocation(line: 3360, column: 30, scope: !467)
!6667 = !{!1155, !1160, i64 1984}
!6668 = !DILocation(line: 3361, column: 46, scope: !467)
!6669 = !DILocation(line: 3361, column: 24, scope: !467)
!6670 = !DILocation(line: 3362, column: 22, scope: !467)
!6671 = !DILocation(line: 3362, column: 40, scope: !467)
!6672 = !{!1155, !1160, i64 1992}
!6673 = !DILocation(line: 3362, column: 32, scope: !467)
!6674 = !DILocation(line: 3363, column: 21, scope: !467)
!6675 = !DILocation(line: 3363, column: 46, scope: !467)
!6676 = !DILocation(line: 3363, column: 13, scope: !467)
!6677 = !DILocation(line: 3364, column: 21, scope: !467)
!6678 = !DILocation(line: 3364, column: 43, scope: !467)
!6679 = !DILocation(line: 3364, column: 13, scope: !467)
!6680 = !DILocation(line: 3365, column: 20, scope: !467)
!6681 = !{!1155, !1160, i64 1264}
!6682 = !DILocation(line: 3330, column: 16, scope: !467)
!6683 = !DILocation(line: 3367, column: 20, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !467, file: !3, line: 3367, column: 13)
!6685 = !DILocation(line: 3367, column: 30, scope: !6684)
!6686 = !DILocation(line: 3367, column: 13, scope: !467)
!6687 = !DILocation(line: 3376, column: 36, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 3367, column: 42)
!6689 = !DILocation(line: 3377, column: 36, scope: !6688)
!6690 = !DILocation(line: 3378, column: 24, scope: !6688)
!6691 = !DILocation(line: 3379, column: 31, scope: !6688)
!6692 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !6693)
!6693 = distinct !DILocation(line: 3379, column: 17, scope: !6688)
!6694 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !6693)
!6695 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !6693)
!6696 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !6693)
!6697 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !6693)
!6698 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !6693)
!6699 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !6693)
!6700 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !6693)
!6701 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !6693)
!6702 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !6693)
!6703 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !6693)
!6704 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !6693)
!6705 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !6693)
!6706 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !6693)
!6707 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !6693)
!6708 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !6693)
!6709 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !6693)
!6710 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !6693)
!6711 = !DILocation(line: 0, scope: !2030, inlinedAt: !6693)
!6712 = !DILocation(line: 0, scope: !6688)
!6713 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !6693)
!6714 = !DILocation(line: 3380, column: 17, scope: !6688)
!6715 = !DILocation(line: 3381, column: 17, scope: !6688)
!6716 = !DILocation(line: 3382, column: 24, scope: !6688)
!6717 = !DILocation(line: 3368, column: 20, scope: !6688)
!6718 = !DILocation(line: 3383, column: 9, scope: !6688)
!6719 = !DILocation(line: 0, scope: !467)
!6720 = !DILocation(line: 3385, column: 20, scope: !466)
!6721 = !DILocation(line: 3385, column: 13, scope: !466)
!6722 = !DILocation(line: 3385, column: 13, scope: !467)
!6723 = !DILocation(line: 3388, column: 44, scope: !465)
!6724 = !{!1155, !1160, i64 864}
!6725 = !DILocation(line: 3389, column: 44, scope: !465)
!6726 = !{!1155, !1160, i64 872}
!6727 = !DILocation(line: 3391, column: 21, scope: !465)
!6728 = !DILocation(line: 3392, column: 47, scope: !465)
!6729 = !DILocation(line: 3392, column: 20, scope: !465)
!6730 = !DILocation(line: 3391, column: 57, scope: !465)
!6731 = !DILocation(line: 3392, column: 52, scope: !465)
!6732 = !DILocation(line: 3386, column: 20, scope: !465)
!6733 = !DILocation(line: 3394, column: 23, scope: !465)
!6734 = !DILocation(line: 3394, column: 41, scope: !465)
!6735 = !{!1155, !1160, i64 880}
!6736 = !DILocation(line: 3394, column: 33, scope: !465)
!6737 = !DILocation(line: 3387, column: 25, scope: !465)
!6738 = !DILocation(line: 3395, column: 25, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !465, file: !3, line: 3395, column: 17)
!6740 = !DILocation(line: 3395, column: 17, scope: !465)
!6741 = !DILocation(line: 3387, column: 20, scope: !465)
!6742 = !DILocation(line: 3398, column: 13, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 3395, column: 31)
!6744 = !DILocation(line: 3410, column: 45, scope: !465)
!6745 = !DILocation(line: 3388, column: 63, scope: !465)
!6746 = !DILocation(line: 3388, column: 19, scope: !465)
!6747 = !DILocation(line: 3399, column: 31, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 3398, column: 20)
!6749 = !DILocation(line: 3399, column: 57, scope: !6748)
!6750 = !DILocation(line: 3399, column: 77, scope: !6748)
!6751 = !DILocation(line: 3399, column: 48, scope: !6748)
!6752 = !DILocation(line: 0, scope: !6748)
!6753 = !DILocation(line: 3409, column: 45, scope: !465)
!6754 = !DILocation(line: 3402, column: 20, scope: !465)
!6755 = !DILocation(line: 3414, column: 9, scope: !465)
!6756 = !DILocation(line: 3419, column: 13, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 3418, column: 69)
!6758 = !DILocation(line: 3418, column: 40, scope: !6638)
!6759 = !DILocation(line: 3418, column: 9, scope: !366)
!6760 = !DILocation(line: 3477, column: 21, scope: !476)
!6761 = !DILocation(line: 3419, column: 21, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 3419, column: 13)
!6763 = !DILocation(line: 3419, column: 32, scope: !6762)
!6764 = !DILocation(line: 3419, column: 25, scope: !6762)
!6765 = !DILocation(line: 0, scope: !465)
!6766 = !DILocation(line: 3448, column: 20, scope: !6757)
!6767 = !{!1155, !1161, i64 1016}
!6768 = !DILocation(line: 3449, column: 20, scope: !6757)
!6769 = !DILocation(line: 822, column: 38, scope: !2522, inlinedAt: !6770)
!6770 = distinct !DILocation(line: 3450, column: 13, scope: !6757)
!6771 = !DILocation(line: 824, column: 15, scope: !2522, inlinedAt: !6770)
!6772 = !DILocation(line: 823, column: 9, scope: !2522, inlinedAt: !6770)
!6773 = !DILocation(line: 826, column: 10, scope: !2533, inlinedAt: !6770)
!6774 = !DILocation(line: 826, column: 5, scope: !2533, inlinedAt: !6770)
!6775 = !DILocation(line: 827, column: 16, scope: !2536, inlinedAt: !6770)
!6776 = !DILocation(line: 826, column: 5, scope: !2536, inlinedAt: !6770)
!6777 = !DILocation(line: 827, column: 13, scope: !2536, inlinedAt: !6770)
!6778 = !DILocation(line: 828, column: 16, scope: !2522, inlinedAt: !6770)
!6779 = !DILocation(line: 828, column: 5, scope: !2522, inlinedAt: !6770)
!6780 = !DILocation(line: 3451, column: 20, scope: !6757)
!6781 = !DILocation(line: 3452, column: 20, scope: !6757)
!6782 = !DILocation(line: 822, column: 38, scope: !2522, inlinedAt: !6783)
!6783 = distinct !DILocation(line: 3453, column: 20, scope: !6757)
!6784 = !DILocation(line: 824, column: 15, scope: !2522, inlinedAt: !6783)
!6785 = !DILocation(line: 823, column: 9, scope: !2522, inlinedAt: !6783)
!6786 = !DILocation(line: 826, column: 10, scope: !2533, inlinedAt: !6783)
!6787 = !DILocation(line: 826, column: 5, scope: !2533, inlinedAt: !6783)
!6788 = !DILocation(line: 827, column: 16, scope: !2536, inlinedAt: !6783)
!6789 = !DILocation(line: 826, column: 5, scope: !2536, inlinedAt: !6783)
!6790 = !DILocation(line: 827, column: 13, scope: !2536, inlinedAt: !6783)
!6791 = !DILocation(line: 828, column: 16, scope: !2522, inlinedAt: !6783)
!6792 = !DILocation(line: 828, column: 5, scope: !2522, inlinedAt: !6783)
!6793 = !DILocation(line: 3453, column: 13, scope: !6757)
!6794 = !DILocation(line: 3453, column: 66, scope: !6757)
!6795 = !DILocation(line: 822, column: 38, scope: !2522, inlinedAt: !6796)
!6796 = distinct !DILocation(line: 3454, column: 20, scope: !6757)
!6797 = !DILocation(line: 824, column: 15, scope: !2522, inlinedAt: !6796)
!6798 = !DILocation(line: 823, column: 9, scope: !2522, inlinedAt: !6796)
!6799 = !DILocation(line: 826, column: 10, scope: !2533, inlinedAt: !6796)
!6800 = !DILocation(line: 826, column: 5, scope: !2533, inlinedAt: !6796)
!6801 = !DILocation(line: 827, column: 16, scope: !2536, inlinedAt: !6796)
!6802 = !DILocation(line: 826, column: 5, scope: !2536, inlinedAt: !6796)
!6803 = !DILocation(line: 827, column: 13, scope: !2536, inlinedAt: !6796)
!6804 = !DILocation(line: 828, column: 16, scope: !2522, inlinedAt: !6796)
!6805 = !DILocation(line: 828, column: 5, scope: !2522, inlinedAt: !6796)
!6806 = !DILocation(line: 3454, column: 13, scope: !6757)
!6807 = !DILocation(line: 3454, column: 67, scope: !6757)
!6808 = !DILocation(line: 3455, column: 20, scope: !6757)
!6809 = !DILocation(line: 3456, column: 20, scope: !6757)
!6810 = !{!1155, !1161, i64 1144}
!6811 = !DILocation(line: 3457, column: 20, scope: !6757)
!6812 = !{!1155, !1161, i64 1152}
!6813 = !DILocation(line: 3458, column: 20, scope: !6757)
!6814 = !DILocation(line: 3459, column: 20, scope: !6757)
!6815 = !DILocation(line: 3460, column: 20, scope: !6757)
!6816 = !DILocation(line: 3460, column: 43, scope: !6757)
!6817 = !DILocation(line: 3461, column: 20, scope: !6757)
!6818 = !{!1155, !1161, i64 1040}
!6819 = !DILocation(line: 3462, column: 20, scope: !6757)
!6820 = !{!1155, !1161, i64 1048}
!6821 = !DILocation(line: 3463, column: 20, scope: !6757)
!6822 = !{!1155, !1161, i64 1056}
!6823 = !DILocation(line: 3464, column: 20, scope: !6757)
!6824 = !{!1155, !1161, i64 1064}
!6825 = !DILocation(line: 3465, column: 13, scope: !6757)
!6826 = !DILocation(line: 3466, column: 13, scope: !6757)
!6827 = !DILocation(line: 3467, column: 20, scope: !6757)
!6828 = !DILocation(line: 3468, column: 13, scope: !6757)
!6829 = !DILocation(line: 3469, column: 13, scope: !6757)
!6830 = !DILocation(line: 3470, column: 20, scope: !6757)
!6831 = !{!1155, !1161, i64 1072}
!6832 = !DILocation(line: 3471, column: 20, scope: !6757)
!6833 = !{!1155, !1161, i64 1080}
!6834 = !DILocation(line: 3472, column: 20, scope: !6757)
!6835 = !{!1155, !1161, i64 1088}
!6836 = !DILocation(line: 3473, column: 20, scope: !6757)
!6837 = !{!1155, !1161, i64 1096}
!6838 = !DILocation(line: 3420, column: 16, scope: !6757)
!6839 = !DILocation(line: 3474, column: 5, scope: !6757)
!6840 = !DILocation(line: 3478, column: 13, scope: !475)
!6841 = !DILocation(line: 3477, column: 40, scope: !476)
!6842 = !DILocation(line: 3477, column: 9, scope: !366)
!6843 = !DILocation(line: 3605, column: 21, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3605, column: 9)
!6845 = !DILocation(line: 3478, column: 21, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !475, file: !3, line: 3478, column: 13)
!6847 = !DILocation(line: 3478, column: 32, scope: !6846)
!6848 = !DILocation(line: 3478, column: 25, scope: !6846)
!6849 = !DILocation(line: 0, scope: !6757)
!6850 = !DILocation(line: 3482, column: 20, scope: !475)
!6851 = !DILocation(line: 3482, column: 31, scope: !475)
!6852 = !DILocation(line: 3482, column: 13, scope: !475)
!6853 = !DILocation(line: 3479, column: 16, scope: !475)
!6854 = !DILocation(line: 3483, column: 20, scope: !474)
!6855 = !DILocation(line: 3483, column: 13, scope: !474)
!6856 = !DILocation(line: 3483, column: 13, scope: !475)
!6857 = !DILocation(line: 3484, column: 23, scope: !473)
!6858 = !DILocation(line: 3486, column: 24, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !473, file: !3, line: 3486, column: 17)
!6860 = !{!1155, !1159, i64 2480}
!6861 = !DILocation(line: 3486, column: 17, scope: !6859)
!6862 = !DILocation(line: 3486, column: 17, scope: !473)
!6863 = !DILocation(line: 3488, column: 29, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 3488, column: 22)
!6865 = !{!1155, !1159, i64 2488}
!6866 = !DILocation(line: 3488, column: 22, scope: !6864)
!6867 = !DILocation(line: 3488, column: 22, scope: !6859)
!6868 = !DILocation(line: 3489, column: 59, scope: !6864)
!6869 = !{!1174, !1161, i64 216}
!6870 = !DILocation(line: 3489, column: 17, scope: !6864)
!6871 = !DILocation(line: 3499, column: 24, scope: !473)
!6872 = !DILocation(line: 3500, column: 25, scope: !473)
!6873 = !DILocation(line: 3500, column: 36, scope: !473)
!6874 = !DILocation(line: 3500, column: 17, scope: !473)
!6875 = !DILocation(line: 3502, column: 17, scope: !473)
!6876 = !DILocation(line: 3487, column: 52, scope: !6859)
!6877 = !DILocation(line: 3487, column: 17, scope: !6859)
!6878 = !DILocation(line: 3503, column: 31, scope: !473)
!6879 = !DILocation(line: 3503, column: 55, scope: !473)
!6880 = !DILocation(line: 3503, column: 39, scope: !473)
!6881 = !DILocation(line: 3503, column: 18, scope: !473)
!6882 = !DILocation(line: 3504, column: 35, scope: !473)
!6883 = !DILocation(line: 3491, column: 20, scope: !473)
!6884 = !DILocation(line: 3508, column: 24, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !473, file: !3, line: 3508, column: 17)
!6886 = !DILocation(line: 3508, column: 35, scope: !6885)
!6887 = !DILocation(line: 3508, column: 17, scope: !473)
!6888 = !DILocation(line: 3513, column: 33, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 3508, column: 59)
!6890 = !{!1155, !1160, i64 2504}
!6891 = !DILocation(line: 3513, column: 61, scope: !6889)
!6892 = !{!1155, !1160, i64 2512}
!6893 = !DILocation(line: 3513, column: 52, scope: !6889)
!6894 = !DILocation(line: 3514, column: 34, scope: !6889)
!6895 = !DILocation(line: 3514, column: 50, scope: !6889)
!6896 = !{!1155, !1160, i64 2544}
!6897 = !DILocation(line: 3514, column: 42, scope: !6889)
!6898 = !DILocation(line: 3514, column: 21, scope: !6889)
!6899 = !DILocation(line: 3509, column: 24, scope: !6889)
!6900 = !DILocation(line: 3516, column: 13, scope: !6889)
!6901 = !DILocation(line: 3518, column: 24, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !473, file: !3, line: 3518, column: 17)
!6903 = !DILocation(line: 0, scope: !473)
!6904 = !DILocation(line: 3518, column: 35, scope: !6902)
!6905 = !DILocation(line: 3518, column: 17, scope: !473)
!6906 = !DILocation(line: 3521, column: 38, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 3518, column: 60)
!6908 = !DILocation(line: 3521, column: 54, scope: !6907)
!6909 = !DILocation(line: 3521, column: 46, scope: !6907)
!6910 = !DILocation(line: 3519, column: 24, scope: !6907)
!6911 = !DILocation(line: 3522, column: 13, scope: !6907)
!6912 = !DILocation(line: 0, scope: !6889)
!6913 = !DILocation(line: 3526, column: 24, scope: !473)
!6914 = !DILocation(line: 3527, column: 24, scope: !473)
!6915 = !DILocation(line: 3523, column: 20, scope: !473)
!6916 = !DILocation(line: 3528, column: 9, scope: !473)
!6917 = !DILocation(line: 0, scope: !475)
!6918 = !DILocation(line: 3532, column: 13, scope: !475)
!6919 = !DILocation(line: 3530, column: 16, scope: !475)
!6920 = !DILocation(line: 3536, column: 20, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !475, file: !3, line: 3536, column: 13)
!6922 = !DILocation(line: 3536, column: 13, scope: !6921)
!6923 = !DILocation(line: 3537, column: 20, scope: !6921)
!6924 = !DILocation(line: 3537, column: 13, scope: !6921)
!6925 = !DILocation(line: 3536, column: 45, scope: !6921)
!6926 = !DILocation(line: 3540, column: 24, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 3537, column: 45)
!6928 = !DILocation(line: 3538, column: 20, scope: !6927)
!6929 = !DILocation(line: 3541, column: 9, scope: !6927)
!6930 = !DILocation(line: 3543, column: 13, scope: !479)
!6931 = !DILocation(line: 3543, column: 13, scope: !475)
!6932 = !DILocation(line: 3544, column: 17, scope: !478)
!6933 = !DILocation(line: 3546, column: 13, scope: !478)
!6934 = !DILocation(line: 3546, column: 22, scope: !478)
!6935 = !DILocation(line: 3548, column: 13, scope: !478)
!6936 = !DILocation(line: 3549, column: 13, scope: !478)
!6937 = !DILocation(line: 3549, column: 25, scope: !478)
!6938 = !DILocation(line: 3545, column: 23, scope: !478)
!6939 = !DILocation(line: 3550, column: 33, scope: !488)
!6940 = !DILocation(line: 3550, column: 25, scope: !488)
!6941 = !DILocation(line: 3551, column: 23, scope: !488)
!6942 = !DILocation(line: 3552, column: 17, scope: !488)
!6943 = !DILocation(line: 3552, column: 22, scope: !488)
!6944 = !DILocation(line: 3552, column: 53, scope: !488)
!6945 = !DILocation(line: 3552, column: 43, scope: !488)
!6946 = !DILocation(line: 3553, column: 17, scope: !488)
!6947 = !DILocation(line: 3554, column: 22, scope: !488)
!6948 = !DILocation(line: 3556, column: 21, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3556, column: 21)
!6950 = !DILocation(line: 3556, column: 32, scope: !6949)
!6951 = !DILocation(line: 3556, column: 21, scope: !488)
!6952 = !DILocation(line: 3557, column: 49, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 3557, column: 25)
!6954 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3556, column: 41)
!6955 = !{!1174, !1156, i64 8}
!6956 = !DILocation(line: 3553, column: 21, scope: !488)
!6957 = !DILocation(line: 3557, column: 25, scope: !6953)
!6958 = !DILocation(line: 3557, column: 73, scope: !6953)
!6959 = !DILocation(line: 3557, column: 25, scope: !6954)
!6960 = !DILocation(line: 0, scope: !6954)
!6961 = distinct !{!6961, !6936, !6962}
!6962 = !DILocation(line: 3583, column: 13, scope: !478)
!6963 = !DILocation(line: 0, scope: !488)
!6964 = !DILocation(line: 3561, column: 31, scope: !488)
!6965 = !{!1174, !1156, i64 168}
!6966 = !DILocation(line: 3561, column: 17, scope: !488)
!6967 = !DILocation(line: 3568, column: 21, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3561, column: 42)
!6969 = !DILocation(line: 3573, column: 21, scope: !488)
!6970 = !DILocation(line: 3573, column: 36, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3573, column: 21)
!6972 = !DILocation(line: 0, scope: !6968)
!6973 = !DILocation(line: 3574, column: 21, scope: !488)
!6974 = !DILocation(line: 3571, column: 21, scope: !6968)
!6975 = !DILocation(line: 3575, column: 27, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3574, column: 21)
!6977 = !DILocation(line: 3575, column: 47, scope: !6976)
!6978 = !{!1174, !1161, i64 232}
!6979 = !DILocation(line: 3575, column: 38, scope: !6976)
!6980 = !DILocation(line: 3575, column: 21, scope: !6976)
!6981 = !DILocation(line: 0, scope: !6976)
!6982 = !DILocation(line: 3580, column: 44, scope: !488)
!6983 = !{!1174, !1156, i64 292}
!6984 = !DILocation(line: 3581, column: 28, scope: !488)
!6985 = !{!1174, !1161, i64 224}
!6986 = !DILocation(line: 3577, column: 24, scope: !488)
!6987 = !DILocation(line: 3582, column: 24, scope: !488)
!6988 = !DILocation(line: 0, scope: !6971)
!6989 = !DILocation(line: 3538, column: 18, scope: !6927)
!6990 = !DILocation(line: 3584, column: 9, scope: !479)
!6991 = !DILocation(line: 3584, column: 9, scope: !478)
!6992 = !DILocation(line: 3596, column: 20, scope: !475)
!6993 = !DILocation(line: 3597, column: 20, scope: !475)
!6994 = !{!1155, !1161, i64 2360}
!6995 = !DILocation(line: 3598, column: 20, scope: !475)
!6996 = !DILocation(line: 3598, column: 33, scope: !475)
!6997 = !DILocation(line: 3599, column: 20, scope: !475)
!6998 = !{!1155, !1161, i64 2384}
!6999 = !DILocation(line: 3600, column: 20, scope: !475)
!7000 = !{!1155, !1161, i64 2408}
!7001 = !DILocation(line: 3601, column: 20, scope: !475)
!7002 = !{!1155, !1161, i64 2392}
!7003 = !DILocation(line: 3585, column: 16, scope: !475)
!7004 = !DILocation(line: 3602, column: 5, scope: !475)
!7005 = !DILocation(line: 3605, column: 40, scope: !6844)
!7006 = !DILocation(line: 3605, column: 9, scope: !366)
!7007 = !DILocation(line: 3606, column: 21, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 3606, column: 13)
!7009 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 3605, column: 67)
!7010 = !DILocation(line: 3606, column: 13, scope: !7009)
!7011 = !DILocation(line: 3606, column: 32, scope: !7008)
!7012 = !DILocation(line: 3606, column: 25, scope: !7008)
!7013 = !DILocation(line: 3613, column: 32, scope: !7009)
!7014 = !{!7015, !1160, i64 16}
!7015 = !{!"rusage", !1317, i64 0, !1317, i64 16, !1160, i64 32, !1160, i64 40, !1160, i64 48, !1160, i64 56, !1160, i64 64, !1160, i64 72, !1160, i64 80, !1160, i64 88, !1160, i64 96, !1160, i64 104, !1160, i64 112, !1160, i64 120, !1160, i64 128, !1160, i64 136, !1157, i64 144}
!7016 = !DILocation(line: 3613, column: 63, scope: !7009)
!7017 = !{!7015, !1160, i64 24}
!7018 = !DILocation(line: 3614, column: 32, scope: !7009)
!7019 = !{!7015, !1160, i64 0}
!7020 = !DILocation(line: 3614, column: 63, scope: !7009)
!7021 = !{!7015, !1160, i64 8}
!7022 = !DILocation(line: 3615, column: 29, scope: !7009)
!7023 = !DILocation(line: 3615, column: 57, scope: !7009)
!7024 = !DILocation(line: 3616, column: 29, scope: !7009)
!7025 = !DILocation(line: 3616, column: 57, scope: !7009)
!7026 = !DILocation(line: 3607, column: 16, scope: !7009)
!7027 = !DILocation(line: 3617, column: 5, scope: !7009)
!7028 = !DILocation(line: 0, scope: !6846)
!7029 = !DILocation(line: 3620, column: 21, scope: !496)
!7030 = !DILocation(line: 3620, column: 25, scope: !496)
!7031 = !DILocation(line: 3620, column: 9, scope: !366)
!7032 = !DILocation(line: 3621, column: 21, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !495, file: !3, line: 3621, column: 13)
!7034 = !DILocation(line: 3621, column: 13, scope: !495)
!7035 = !DILocation(line: 3621, column: 32, scope: !7033)
!7036 = !DILocation(line: 3621, column: 25, scope: !7033)
!7037 = !DILocation(line: 0, scope: !7009)
!7038 = !DILocation(line: 3622, column: 16, scope: !495)
!7039 = !DILocation(line: 3627, column: 41, scope: !495)
!7040 = !DILocation(line: 3627, column: 14, scope: !495)
!7041 = !DILocation(line: 3626, column: 23, scope: !495)
!7042 = !DILocation(line: 3628, column: 9, scope: !495)
!7043 = !DILocation(line: 3628, column: 21, scope: !495)
!7044 = !DILocation(line: 3625, column: 20, scope: !495)
!7045 = !DILocation(line: 3628, column: 35, scope: !495)
!7046 = !DILocation(line: 3629, column: 41, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !495, file: !3, line: 3628, column: 44)
!7048 = !DILocation(line: 3624, column: 30, scope: !495)
!7049 = !DILocation(line: 3630, column: 21, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 3630, column: 17)
!7051 = !{!1211, !1161, i64 72}
!7052 = !DILocation(line: 3630, column: 18, scope: !7050)
!7053 = !DILocation(line: 3630, column: 17, scope: !7047)
!7054 = distinct !{!7054, !7042, !7055}
!7055 = !DILocation(line: 3635, column: 9, scope: !495)
!7056 = !DILocation(line: 3633, column: 20, scope: !7047)
!7057 = !DILocation(line: 3633, column: 39, scope: !7047)
!7058 = !{!1211, !1161, i64 64}
!7059 = !DILocation(line: 3634, column: 17, scope: !7047)
!7060 = !DILocation(line: 3634, column: 40, scope: !7047)
!7061 = !DILocation(line: 3634, column: 63, scope: !7047)
!7062 = !DILocation(line: 3634, column: 62, scope: !7047)
!7063 = !DILocation(line: 3631, column: 20, scope: !7047)
!7064 = !DILocation(line: 3636, column: 9, scope: !495)
!7065 = !DILocation(line: 3637, column: 5, scope: !495)
!7066 = !DILocation(line: 0, scope: !7008)
!7067 = !DILocation(line: 3640, column: 21, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !366, file: !3, line: 3640, column: 9)
!7069 = !DILocation(line: 3640, column: 40, scope: !7068)
!7070 = !DILocation(line: 3640, column: 9, scope: !366)
!7071 = !DILocation(line: 3649, column: 21, scope: !515)
!7072 = !DILocation(line: 3641, column: 21, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 3641, column: 13)
!7074 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3640, column: 71)
!7075 = !DILocation(line: 3641, column: 13, scope: !7074)
!7076 = !DILocation(line: 3641, column: 32, scope: !7073)
!7077 = !DILocation(line: 3641, column: 25, scope: !7073)
!7078 = !DILocation(line: 0, scope: !495)
!7079 = !DILocation(line: 3645, column: 16, scope: !7074)
!7080 = !DILocation(line: 3642, column: 16, scope: !7074)
!7081 = !DILocation(line: 3646, column: 5, scope: !7074)
!7082 = !DILocation(line: 3649, column: 40, scope: !515)
!7083 = !DILocation(line: 3649, column: 9, scope: !366)
!7084 = !DILocation(line: 3650, column: 21, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !514, file: !3, line: 3650, column: 13)
!7086 = !DILocation(line: 3650, column: 13, scope: !514)
!7087 = !DILocation(line: 3650, column: 32, scope: !7085)
!7088 = !DILocation(line: 3650, column: 25, scope: !7085)
!7089 = !DILocation(line: 0, scope: !7074)
!7090 = !DILocation(line: 3651, column: 16, scope: !514)
!7091 = !DILocation(line: 3114, column: 9, scope: !366)
!7092 = !DILocation(line: 3652, column: 14, scope: !513)
!7093 = !DILocation(line: 3652, column: 32, scope: !512)
!7094 = !DILocation(line: 3652, column: 23, scope: !512)
!7095 = !DILocation(line: 3652, column: 9, scope: !513)
!7096 = !DILocation(line: 3655, column: 20, scope: !511)
!7097 = !DILocation(line: 3653, column: 23, scope: !511)
!7098 = !DILocation(line: 3656, column: 21, scope: !511)
!7099 = !DILocation(line: 3653, column: 29, scope: !511)
!7100 = !DILocation(line: 3657, column: 22, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !511, file: !3, line: 3657, column: 17)
!7102 = !DILocation(line: 3660, column: 50, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7101, file: !3, line: 3657, column: 32)
!7104 = !DILocation(line: 3658, column: 24, scope: !7103)
!7105 = !DILocation(line: 3661, column: 13, scope: !7103)
!7106 = !DILocation(line: 0, scope: !514)
!7107 = !DILocation(line: 3652, column: 40, scope: !512)
!7108 = !DILocation(line: 3652, column: 9, scope: !512)
!7109 = distinct !{!7109, !7095, !7110}
!7110 = !DILocation(line: 3662, column: 9, scope: !513)
!7111 = !DILocation(line: 3665, column: 1, scope: !366)
!7112 = !DILocation(line: 3664, column: 5, scope: !366)
!7113 = distinct !DISubprogram(name: "bytesToHuman", scope: !3, file: !3, line: 3081, type: !7114, isLocal: true, isDefinition: true, scopeLine: 3081, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7116)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{null, !40, !56}
!7116 = !{!7117, !7118, !7119}
!7117 = !DILocalVariable(name: "s", arg: 1, scope: !7113, file: !3, line: 3081, type: !40)
!7118 = !DILocalVariable(name: "n", arg: 2, scope: !7113, file: !3, line: 3081, type: !56)
!7119 = !DILocalVariable(name: "d", scope: !7113, file: !3, line: 3082, type: !137)
!7120 = !DILocation(line: 3081, column: 32, scope: !7113)
!7121 = !DILocation(line: 3081, column: 54, scope: !7113)
!7122 = !DILocation(line: 3084, column: 11, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 3084, column: 9)
!7124 = !DILocation(line: 3084, column: 9, scope: !7113)
!7125 = !DILocation(line: 3086, column: 9, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 3084, column: 19)
!7127 = !DILocation(line: 3087, column: 5, scope: !7126)
!7128 = !DILocation(line: 3087, column: 18, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 3087, column: 16)
!7130 = !DILocation(line: 3087, column: 16, scope: !7123)
!7131 = !DILocation(line: 3088, column: 13, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 3087, column: 33)
!7133 = !DILocation(line: 3088, column: 22, scope: !7132)
!7134 = !DILocation(line: 3082, column: 12, scope: !7113)
!7135 = !DILocation(line: 3089, column: 9, scope: !7132)
!7136 = !DILocation(line: 3090, column: 5, scope: !7132)
!7137 = !DILocation(line: 3090, column: 18, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 3090, column: 16)
!7139 = !DILocation(line: 3090, column: 16, scope: !7129)
!7140 = !DILocation(line: 3091, column: 13, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 3090, column: 40)
!7142 = !DILocation(line: 3091, column: 22, scope: !7141)
!7143 = !DILocation(line: 3092, column: 9, scope: !7141)
!7144 = !DILocation(line: 3093, column: 5, scope: !7141)
!7145 = !DILocation(line: 3093, column: 18, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 3093, column: 16)
!7147 = !DILocation(line: 3093, column: 16, scope: !7138)
!7148 = !DILocation(line: 3094, column: 13, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 3093, column: 45)
!7150 = !DILocation(line: 3094, column: 22, scope: !7149)
!7151 = !DILocation(line: 3095, column: 9, scope: !7149)
!7152 = !DILocation(line: 3096, column: 5, scope: !7149)
!7153 = !DILocation(line: 3096, column: 18, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 3096, column: 16)
!7155 = !DILocation(line: 3096, column: 16, scope: !7146)
!7156 = !DILocation(line: 3097, column: 13, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3096, column: 50)
!7158 = !DILocation(line: 3097, column: 22, scope: !7157)
!7159 = !DILocation(line: 3098, column: 9, scope: !7157)
!7160 = !DILocation(line: 3099, column: 5, scope: !7157)
!7161 = !DILocation(line: 3099, column: 18, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 3099, column: 16)
!7163 = !DILocation(line: 3099, column: 16, scope: !7154)
!7164 = !DILocation(line: 3100, column: 13, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 3099, column: 55)
!7166 = !DILocation(line: 3100, column: 22, scope: !7165)
!7167 = !DILocation(line: 3101, column: 9, scope: !7165)
!7168 = !DILocation(line: 3102, column: 5, scope: !7165)
!7169 = !DILocation(line: 3104, column: 9, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 3102, column: 12)
!7171 = !DILocation(line: 3106, column: 1, scope: !7113)
!7172 = distinct !DISubprogram(name: "createPidFile", scope: !3, file: !3, line: 3713, type: !349, isLocal: false, isDefinition: true, scopeLine: 3713, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7173)
!7173 = !{!7174}
!7174 = !DILocalVariable(name: "fp", scope: !7172, file: !3, line: 3719, type: !1517)
!7175 = !DILocation(line: 3716, column: 17, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 3716, column: 9)
!7177 = !DILocation(line: 3716, column: 10, scope: !7176)
!7178 = !DILocation(line: 3716, column: 9, scope: !7172)
!7179 = !DILocation(line: 3716, column: 43, scope: !7176)
!7180 = !DILocation(line: 3716, column: 41, scope: !7176)
!7181 = !DILocation(line: 3716, column: 26, scope: !7176)
!7182 = !DILocation(line: 3719, column: 29, scope: !7172)
!7183 = !DILocation(line: 3719, column: 16, scope: !7172)
!7184 = !DILocation(line: 3719, column: 11, scope: !7172)
!7185 = !DILocation(line: 3720, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 3720, column: 9)
!7187 = !DILocation(line: 3720, column: 9, scope: !7172)
!7188 = !DILocation(line: 3721, column: 32, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 3720, column: 13)
!7190 = !DILocation(line: 3721, column: 9, scope: !7189)
!7191 = !DILocation(line: 3722, column: 9, scope: !7189)
!7192 = !DILocation(line: 3723, column: 5, scope: !7189)
!7193 = !DILocation(line: 3724, column: 1, scope: !7172)
!7194 = distinct !DISubprogram(name: "daemonize", scope: !3, file: !3, line: 3726, type: !349, isLocal: false, isDefinition: true, scopeLine: 3726, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7195)
!7195 = !{!7196}
!7196 = !DILocalVariable(name: "fd", scope: !7194, file: !3, line: 3727, type: !7)
!7197 = !DILocation(line: 3729, column: 9, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 3729, column: 9)
!7199 = !DILocation(line: 3729, column: 16, scope: !7198)
!7200 = !DILocation(line: 3729, column: 9, scope: !7194)
!7201 = !DILocation(line: 3729, column: 22, scope: !7198)
!7202 = !DILocation(line: 3730, column: 5, scope: !7194)
!7203 = !DILocation(line: 3735, column: 15, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 3735, column: 9)
!7205 = !DILocation(line: 3727, column: 9, scope: !7194)
!7206 = !DILocation(line: 3735, column: 45, scope: !7204)
!7207 = !DILocation(line: 3735, column: 9, scope: !7194)
!7208 = !DILocation(line: 3736, column: 9, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 3735, column: 52)
!7210 = !DILocation(line: 3737, column: 9, scope: !7209)
!7211 = !DILocation(line: 3738, column: 9, scope: !7209)
!7212 = !DILocation(line: 3739, column: 16, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 3739, column: 13)
!7214 = !DILocation(line: 3739, column: 13, scope: !7209)
!7215 = !DILocation(line: 3739, column: 33, scope: !7213)
!7216 = !DILocation(line: 3741, column: 1, scope: !7194)
!7217 = distinct !DISubprogram(name: "version", scope: !3, file: !3, line: 3743, type: !349, isLocal: false, isDefinition: true, scopeLine: 3743, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7218 = !DILocation(line: 3746, column: 9, scope: !7217)
!7219 = !DILocation(line: 3747, column: 14, scope: !7217)
!7220 = !DILocation(line: 3747, column: 9, scope: !7217)
!7221 = !DILocation(line: 3747, column: 31, scope: !7217)
!7222 = !DILocation(line: 3750, column: 30, scope: !7217)
!7223 = !DILocation(line: 3744, column: 5, scope: !7217)
!7224 = !DILocation(line: 3751, column: 5, scope: !7217)
!7225 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 3754, type: !349, isLocal: false, isDefinition: true, scopeLine: 3754, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7226 = !DILocation(line: 3755, column: 13, scope: !7225)
!7227 = !{!1757, !1159, i64 24}
!7228 = !DILocation(line: 3755, column: 5, scope: !7225)
!7229 = !DILocation(line: 3756, column: 13, scope: !7225)
!7230 = !DILocation(line: 3756, column: 5, scope: !7225)
!7231 = !DILocation(line: 3757, column: 13, scope: !7225)
!7232 = !DILocation(line: 3757, column: 5, scope: !7225)
!7233 = !DILocation(line: 3758, column: 13, scope: !7225)
!7234 = !DILocation(line: 3758, column: 5, scope: !7225)
!7235 = !DILocation(line: 3759, column: 13, scope: !7225)
!7236 = !DILocation(line: 3759, column: 5, scope: !7225)
!7237 = !DILocation(line: 3760, column: 13, scope: !7225)
!7238 = !DILocation(line: 3760, column: 5, scope: !7225)
!7239 = !DILocation(line: 3761, column: 13, scope: !7225)
!7240 = !DILocation(line: 3761, column: 5, scope: !7225)
!7241 = !DILocation(line: 3762, column: 13, scope: !7225)
!7242 = !DILocation(line: 3762, column: 5, scope: !7225)
!7243 = !DILocation(line: 3763, column: 13, scope: !7225)
!7244 = !DILocation(line: 3763, column: 5, scope: !7225)
!7245 = !DILocation(line: 3764, column: 13, scope: !7225)
!7246 = !DILocation(line: 3764, column: 5, scope: !7225)
!7247 = !DILocation(line: 3765, column: 13, scope: !7225)
!7248 = !DILocation(line: 3765, column: 5, scope: !7225)
!7249 = !DILocation(line: 3766, column: 13, scope: !7225)
!7250 = !DILocation(line: 3766, column: 5, scope: !7225)
!7251 = !DILocation(line: 3767, column: 13, scope: !7225)
!7252 = !DILocation(line: 3767, column: 5, scope: !7225)
!7253 = !DILocation(line: 3768, column: 5, scope: !7225)
!7254 = distinct !DISubprogram(name: "redisAsciiArt", scope: !3, file: !3, line: 3771, type: !349, isLocal: false, isDefinition: true, scopeLine: 3771, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7255)
!7255 = !{!7256, !7259, !7261, !7262}
!7256 = !DILocalVariable(name: "ascii_logo", scope: !7257, file: !7258, line: 30, type: !40)
!7257 = !DILexicalBlockFile(scope: !7254, file: !7258, discriminator: 0)
!7258 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/asciilogo.h", directory: "/root/.unikraft/apps/redis/build")
!7259 = !DILocalVariable(name: "buf", scope: !7260, file: !3, line: 3773, type: !40)
!7260 = !DILexicalBlockFile(scope: !7254, file: !3, discriminator: 0)
!7261 = !DILocalVariable(name: "mode", scope: !7260, file: !3, line: 3774, type: !40)
!7262 = !DILocalVariable(name: "show_logo", scope: !7260, file: !3, line: 3783, type: !7)
!7263 = !DILocation(line: 3773, column: 17, scope: !7260)
!7264 = !DILocation(line: 3773, column: 11, scope: !7260)
!7265 = !DILocation(line: 3776, column: 16, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3776, column: 9)
!7267 = !DILocation(line: 3776, column: 9, scope: !7266)
!7268 = !DILocation(line: 3776, column: 9, scope: !7260)
!7269 = !DILocation(line: 3774, column: 11, scope: !7260)
!7270 = !DILocation(line: 3776, column: 33, scope: !7266)
!7271 = !DILocation(line: 3777, column: 21, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3777, column: 14)
!7273 = !DILocation(line: 3777, column: 14, scope: !7272)
!7274 = !DILocation(line: 3777, column: 14, scope: !7266)
!7275 = !DILocation(line: 0, scope: !7272)
!7276 = !DILocation(line: 3783, column: 31, scope: !7260)
!7277 = !DILocation(line: 3783, column: 24, scope: !7260)
!7278 = !DILocation(line: 3783, column: 46, scope: !7260)
!7279 = !DILocation(line: 3784, column: 30, scope: !7260)
!7280 = !DILocation(line: 3784, column: 23, scope: !7260)
!7281 = !DILocation(line: 3784, column: 41, scope: !7260)
!7282 = !DILocation(line: 3784, column: 49, scope: !7260)
!7283 = !DILocation(line: 3785, column: 37, scope: !7260)
!7284 = !DILocation(line: 3785, column: 30, scope: !7260)
!7285 = !DILocation(line: 3785, column: 23, scope: !7260)
!7286 = !DILocation(line: 3785, column: 47, scope: !7260)
!7287 = !DILocation(line: 3786, column: 29, scope: !7260)
!7288 = !DILocation(line: 3788, column: 9, scope: !7260)
!7289 = !DILocation(line: 3791, column: 26, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 3788, column: 21)
!7291 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3788, column: 9)
!7292 = !DILocation(line: 3789, column: 9, scope: !7290)
!7293 = !DILocation(line: 3793, column: 5, scope: !7290)
!7294 = !DILocation(line: 3796, column: 13, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 3793, column: 12)
!7296 = !DILocation(line: 3797, column: 20, scope: !7295)
!7297 = !DILocation(line: 3797, column: 13, scope: !7295)
!7298 = !DILocation(line: 3797, column: 45, scope: !7295)
!7299 = !DILocation(line: 3799, column: 26, scope: !7295)
!7300 = !DILocation(line: 3800, column: 20, scope: !7295)
!7301 = !DILocation(line: 3800, column: 13, scope: !7295)
!7302 = !DILocation(line: 3794, column: 9, scope: !7295)
!7303 = !DILocation(line: 3802, column: 9, scope: !7295)
!7304 = !DILocation(line: 3804, column: 5, scope: !7260)
!7305 = !DILocation(line: 3805, column: 1, scope: !7260)
!7306 = distinct !DISubprogram(name: "sigShutdownHandler", scope: !3, file: !3, line: 3807, type: !58, isLocal: true, isDefinition: true, scopeLine: 3807, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7307)
!7307 = !{!7308, !7309}
!7308 = !DILocalVariable(name: "sig", arg: 1, scope: !7306, file: !3, line: 3807, type: !7)
!7309 = !DILocalVariable(name: "msg", scope: !7306, file: !3, line: 3808, type: !40)
!7310 = !DILocation(line: 3807, column: 36, scope: !7306)
!7311 = !DILocation(line: 3810, column: 5, scope: !7306)
!7312 = !DILocation(line: 3816, column: 9, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3810, column: 18)
!7314 = !DILocation(line: 3808, column: 11, scope: !7306)
!7315 = !DILocation(line: 3825, column: 30, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 3825, column: 9)
!7317 = !DILocation(line: 3819, column: 5, scope: !7313)
!7318 = !DILocation(line: 0, scope: !7313)
!7319 = !DILocation(line: 3825, column: 16, scope: !7316)
!7320 = !DILocation(line: 3825, column: 9, scope: !7316)
!7321 = !DILocation(line: 3825, column: 37, scope: !7316)
!7322 = !DILocation(line: 3826, column: 9, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 3825, column: 48)
!7324 = !DILocation(line: 3827, column: 27, scope: !7323)
!7325 = !DILocation(line: 3827, column: 9, scope: !7323)
!7326 = !DILocation(line: 3828, column: 9, scope: !7323)
!7327 = !DILocation(line: 3829, column: 23, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 3829, column: 16)
!7329 = !DILocation(line: 3829, column: 16, scope: !7328)
!7330 = !DILocation(line: 3829, column: 16, scope: !7316)
!7331 = !DILocation(line: 3830, column: 9, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 3829, column: 32)
!7333 = !DILocation(line: 3831, column: 9, scope: !7332)
!7334 = !DILocation(line: 3834, column: 5, scope: !7306)
!7335 = !DILocation(line: 3835, column: 26, scope: !7306)
!7336 = !DILocation(line: 3836, column: 1, scope: !7306)
!7337 = distinct !DISubprogram(name: "checkForSentinelMode", scope: !3, file: !3, line: 3865, type: !7338, isLocal: false, isDefinition: true, scopeLine: 3865, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7340)
!7338 = !DISubroutineType(types: !7339)
!7339 = !{!7, !7, !614}
!7340 = !{!7341, !7342, !7343}
!7341 = !DILocalVariable(name: "argc", arg: 1, scope: !7337, file: !3, line: 3865, type: !7)
!7342 = !DILocalVariable(name: "argv", arg: 2, scope: !7337, file: !3, line: 3865, type: !614)
!7343 = !DILocalVariable(name: "j", scope: !7337, file: !3, line: 3866, type: !7)
!7344 = !DILocation(line: 3865, column: 30, scope: !7337)
!7345 = !DILocation(line: 3865, column: 43, scope: !7337)
!7346 = !DILocation(line: 3868, column: 16, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3868, column: 9)
!7348 = !DILocation(line: 3868, column: 9, scope: !7347)
!7349 = !DILocation(line: 3868, column: 42, scope: !7347)
!7350 = !DILocation(line: 3868, column: 9, scope: !7337)
!7351 = !DILocation(line: 0, scope: !7347)
!7352 = !DILocation(line: 3866, column: 9, scope: !7337)
!7353 = !DILocation(line: 3869, column: 19, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 3869, column: 5)
!7355 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3869, column: 5)
!7356 = !DILocation(line: 3869, column: 5, scope: !7355)
!7357 = !DILocation(line: 3870, column: 21, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 3870, column: 13)
!7359 = !DILocation(line: 3870, column: 14, scope: !7358)
!7360 = !DILocation(line: 3870, column: 13, scope: !7354)
!7361 = !DILocation(line: 3869, column: 28, scope: !7354)
!7362 = !DILocation(line: 3869, column: 5, scope: !7354)
!7363 = distinct !{!7363, !7356, !7364}
!7364 = !DILocation(line: 3870, column: 51, scope: !7355)
!7365 = !DILocation(line: 0, scope: !7358)
!7366 = !DILocation(line: 3872, column: 1, scope: !7337)
!7367 = !DILocation(line: 0, scope: !7337)
!7368 = distinct !DISubprogram(name: "loadDataFromDisk", scope: !3, file: !3, line: 3875, type: !349, isLocal: false, isDefinition: true, scopeLine: 3875, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7369)
!7369 = !{!7370, !7371}
!7370 = !DILocalVariable(name: "start", scope: !7368, file: !3, line: 3876, type: !8)
!7371 = !DILocalVariable(name: "rsi", scope: !7372, file: !3, line: 3881, type: !3060)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 3880, column: 12)
!7373 = distinct !DILexicalBlock(scope: !7368, file: !3, line: 3877, column: 9)
!7374 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !7375)
!7375 = distinct !DILocation(line: 3876, column: 23, scope: !7368)
!7376 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !7377)
!7377 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !7375)
!7378 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !7377)
!7379 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !7377)
!7380 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !7377)
!7381 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !7377)
!7382 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !7377)
!7383 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !7377)
!7384 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !7377)
!7385 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !7377)
!7386 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !7377)
!7387 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !7377)
!7388 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !7377)
!7389 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !7377)
!7390 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !7375)
!7391 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !7375)
!7392 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !7375)
!7393 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !7375)
!7394 = !DILocation(line: 3876, column: 15, scope: !7368)
!7395 = !DILocation(line: 3877, column: 16, scope: !7373)
!7396 = !DILocation(line: 3877, column: 26, scope: !7373)
!7397 = !DILocation(line: 3877, column: 9, scope: !7368)
!7398 = !DILocation(line: 3878, column: 39, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 3878, column: 13)
!7400 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 3877, column: 37)
!7401 = !DILocation(line: 3878, column: 13, scope: !7399)
!7402 = !DILocation(line: 3878, column: 53, scope: !7399)
!7403 = !DILocation(line: 3878, column: 13, scope: !7400)
!7404 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !7405)
!7405 = distinct !DILocation(line: 3879, column: 89, scope: !7399)
!7406 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !7407)
!7407 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !7405)
!7408 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !7407)
!7409 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !7407)
!7410 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !7407)
!7411 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !7407)
!7412 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !7407)
!7413 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !7407)
!7414 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !7407)
!7415 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !7407)
!7416 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !7407)
!7417 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !7407)
!7418 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !7407)
!7419 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !7407)
!7420 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !7405)
!7421 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !7405)
!7422 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !7405)
!7423 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !7405)
!7424 = !DILocation(line: 3879, column: 97, scope: !7399)
!7425 = !DILocation(line: 3879, column: 81, scope: !7399)
!7426 = !DILocation(line: 3879, column: 104, scope: !7399)
!7427 = !DILocation(line: 3879, column: 13, scope: !7399)
!7428 = !DILocation(line: 3881, column: 9, scope: !7372)
!7429 = !DILocation(line: 3881, column: 21, scope: !7372)
!7430 = !DILocation(line: 3882, column: 28, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 3882, column: 13)
!7432 = !DILocation(line: 3882, column: 13, scope: !7431)
!7433 = !DILocation(line: 3882, column: 47, scope: !7431)
!7434 = !DILocation(line: 3882, column: 13, scope: !7372)
!7435 = !DILocation(line: 447, column: 20, scope: !1936, inlinedAt: !7436)
!7436 = distinct !DILocation(line: 3884, column: 25, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 3882, column: 56)
!7438 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !7439)
!7439 = distinct !DILocation(line: 450, column: 5, scope: !1936, inlinedAt: !7436)
!7440 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !7439)
!7441 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !7439)
!7442 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !7439)
!7443 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !7439)
!7444 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !7439)
!7445 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !7439)
!7446 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !7439)
!7447 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !7439)
!7448 = !DILocation(line: 71, column: 33, scope: !1297, inlinedAt: !7439)
!7449 = !DILocation(line: 72, column: 34, scope: !1297, inlinedAt: !7439)
!7450 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !7439)
!7451 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !7439)
!7452 = !DILocation(line: 451, column: 33, scope: !1936, inlinedAt: !7436)
!7453 = !DILocation(line: 448, column: 15, scope: !1936, inlinedAt: !7436)
!7454 = !DILocation(line: 453, column: 5, scope: !1936, inlinedAt: !7436)
!7455 = !DILocation(line: 452, column: 9, scope: !1936, inlinedAt: !7436)
!7456 = !DILocation(line: 3884, column: 33, scope: !7437)
!7457 = !DILocation(line: 3884, column: 17, scope: !7437)
!7458 = !DILocation(line: 3884, column: 40, scope: !7437)
!7459 = !DILocation(line: 3883, column: 13, scope: !7437)
!7460 = !DILocation(line: 3887, column: 25, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3887, column: 17)
!7462 = !DILocation(line: 3887, column: 18, scope: !7461)
!7463 = !DILocation(line: 3887, column: 36, scope: !7461)
!7464 = !DILocation(line: 3887, column: 47, scope: !7461)
!7465 = !DILocation(line: 3887, column: 40, scope: !7461)
!7466 = !DILocation(line: 3887, column: 63, scope: !7461)
!7467 = !DILocation(line: 3887, column: 66, scope: !7461)
!7468 = !{!7469, !1156, i64 48}
!7469 = !{!"clusterNode", !1161, i64 0, !1157, i64 8, !1156, i64 48, !1160, i64 56, !1157, i64 64, !1156, i64 2112, !1156, i64 2116, !1159, i64 2120, !1159, i64 2128, !1161, i64 2136, !1161, i64 2144, !1161, i64 2152, !1161, i64 2160, !1161, i64 2168, !1161, i64 2176, !1161, i64 2184, !1157, i64 2192, !1156, i64 2240, !1156, i64 2244, !1159, i64 2248, !1159, i64 2256}
!7470 = !DILocation(line: 3887, column: 103, scope: !7461)
!7471 = !DILocation(line: 3888, column: 21, scope: !7461)
!7472 = !{!7473, !1156, i64 4}
!7473 = !{!"rdbSaveInfo", !1156, i64 0, !1156, i64 4, !1157, i64 8, !1161, i64 56}
!7474 = !DILocation(line: 3888, column: 17, scope: !7461)
!7475 = !DILocation(line: 3888, column: 36, scope: !7461)
!7476 = !DILocation(line: 3889, column: 21, scope: !7461)
!7477 = !{!7473, !1161, i64 56}
!7478 = !DILocation(line: 3889, column: 33, scope: !7461)
!7479 = !DILocation(line: 3889, column: 39, scope: !7461)
!7480 = !DILocation(line: 3893, column: 21, scope: !7461)
!7481 = !{!7473, !1156, i64 0}
!7482 = !DILocation(line: 3893, column: 36, scope: !7461)
!7483 = !DILocation(line: 3887, column: 17, scope: !7437)
!7484 = !DILocation(line: 3895, column: 38, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 3894, column: 13)
!7486 = !DILocation(line: 3895, column: 17, scope: !7485)
!7487 = !DILocation(line: 3896, column: 49, scope: !7485)
!7488 = !DILocation(line: 3896, column: 43, scope: !7485)
!7489 = !DILocation(line: 3900, column: 17, scope: !7485)
!7490 = !DILocation(line: 3901, column: 33, scope: !7485)
!7491 = !DILocation(line: 3901, column: 51, scope: !7485)
!7492 = !DILocation(line: 3901, column: 17, scope: !7485)
!7493 = !DILocation(line: 3902, column: 13, scope: !7485)
!7494 = !DILocation(line: 3903, column: 20, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 3903, column: 20)
!7496 = !DILocation(line: 3903, column: 26, scope: !7495)
!7497 = !DILocation(line: 3903, column: 20, scope: !7431)
!7498 = !DILocation(line: 3904, column: 86, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 3903, column: 37)
!7500 = !DILocation(line: 3904, column: 77, scope: !7499)
!7501 = !DILocation(line: 3904, column: 13, scope: !7499)
!7502 = !DILocation(line: 3905, column: 13, scope: !7499)
!7503 = !DILocation(line: 3907, column: 5, scope: !7373)
!7504 = !DILocation(line: 3908, column: 1, scope: !7368)
!7505 = distinct !DISubprogram(name: "redisOutOfMemoryHandler", scope: !3, file: !3, line: 3910, type: !7506, isLocal: false, isDefinition: true, scopeLine: 3910, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7508)
!7506 = !DISubroutineType(types: !7507)
!7507 = !{null, !157}
!7508 = !{!7509}
!7509 = !DILocalVariable(name: "allocation_size", arg: 1, scope: !7505, file: !3, line: 3910, type: !157)
!7510 = !DILocation(line: 3910, column: 37, scope: !7505)
!7511 = !DILocation(line: 3911, column: 5, scope: !7505)
!7512 = !DILocation(line: 3913, column: 5, scope: !7505)
!7513 = distinct !DISubprogram(name: "redisSetProcTitle", scope: !3, file: !3, line: 3916, type: !7514, isLocal: false, isDefinition: true, scopeLine: 3916, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7516)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{null, !40}
!7516 = !{!7517}
!7517 = !DILocalVariable(name: "title", arg: 1, scope: !7513, file: !3, line: 3916, type: !40)
!7518 = !DILocation(line: 3916, column: 30, scope: !7513)
!7519 = !DILocation(line: 3930, column: 1, scope: !7513)
!7520 = distinct !DISubprogram(name: "redisSupervisedUpstart", scope: !3, file: !3, line: 3936, type: !5768, isLocal: false, isDefinition: true, scopeLine: 3936, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7521)
!7521 = !{!7522}
!7522 = !DILocalVariable(name: "upstart_job", scope: !7520, file: !3, line: 3937, type: !425)
!7523 = !DILocation(line: 3937, column: 31, scope: !7520)
!7524 = !DILocation(line: 3937, column: 17, scope: !7520)
!7525 = !DILocation(line: 3939, column: 10, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 3939, column: 9)
!7527 = !DILocation(line: 3939, column: 9, scope: !7520)
!7528 = !DILocation(line: 3940, column: 9, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 3939, column: 23)
!7530 = !DILocation(line: 3942, column: 9, scope: !7529)
!7531 = !DILocation(line: 3945, column: 5, scope: !7520)
!7532 = !DILocation(line: 3946, column: 5, scope: !7520)
!7533 = !DILocation(line: 3947, column: 5, scope: !7520)
!7534 = !DILocation(line: 3948, column: 5, scope: !7520)
!7535 = !DILocation(line: 0, scope: !7529)
!7536 = !DILocation(line: 3949, column: 1, scope: !7520)
!7537 = distinct !DISubprogram(name: "redisSupervisedSystemd", scope: !3, file: !3, line: 3951, type: !5768, isLocal: false, isDefinition: true, scopeLine: 3951, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7538)
!7538 = !{!7539, !7540, !7541, !7554, !7560, !7573, !7574, !7575, !7581, !7582}
!7539 = !DILocalVariable(name: "notify_socket", scope: !7537, file: !3, line: 3952, type: !425)
!7540 = !DILocalVariable(name: "fd", scope: !7537, file: !3, line: 3953, type: !7)
!7541 = !DILocalVariable(name: "su", scope: !7537, file: !3, line: 3954, type: !7542)
!7542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !7543, line: 17, size: 872, elements: !7544)
!7543 = !DIFile(filename: "/root/.unikraft/libs/newlib/musl-imported/include/sys/un.h", directory: "/root/.unikraft/apps/redis/build")
!7544 = !{!7545, !7550}
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !7542, file: !7543, line: 18, baseType: !7546, size: 8)
!7546 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !7547, line: 63, baseType: !7548)
!7547 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/sockets.h", directory: "/root/.unikraft/apps/redis/build")
!7548 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8_t", file: !7549, line: 125, baseType: !269)
!7549 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/arch.h", directory: "/root/.unikraft/apps/redis/build")
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !7542, file: !7543, line: 19, baseType: !7551, size: 864, offset: 8)
!7551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 864, elements: !7552)
!7552 = !{!7553}
!7553 = !DISubrange(count: 108)
!7554 = !DILocalVariable(name: "iov", scope: !7537, file: !3, line: 3955, type: !7555)
!7555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !7556, line: 47, size: 128, elements: !7557)
!7556 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/uio.h", directory: "/root/.unikraft/apps/redis/build")
!7557 = !{!7558, !7559}
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !7555, file: !7556, line: 48, baseType: !6, size: 64)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !7555, file: !7556, line: 49, baseType: !157, size: 64, offset: 64)
!7560 = !DILocalVariable(name: "hdr", scope: !7537, file: !3, line: 3956, type: !7561)
!7561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !7547, line: 129, size: 384, elements: !7562)
!7562 = !{!7563, !7564, !7567, !7569, !7570, !7571, !7572}
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !7561, file: !7547, line: 130, baseType: !6, size: 64)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !7561, file: !7547, line: 131, baseType: !7565, size: 32, offset: 64)
!7565 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !7547, line: 113, baseType: !7566)
!7566 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32_t", file: !7549, line: 129, baseType: !303)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !7561, file: !7547, line: 132, baseType: !7568, size: 64, offset: 128)
!7568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 64)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !7561, file: !7547, line: 133, baseType: !7, size: 32, offset: 192)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7561, file: !7547, line: 134, baseType: !6, size: 64, offset: 256)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !7561, file: !7547, line: 135, baseType: !7565, size: 32, offset: 320)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !7561, file: !7547, line: 136, baseType: !7, size: 32, offset: 352)
!7573 = !DILocalVariable(name: "sendto_flags", scope: !7537, file: !3, line: 3957, type: !7)
!7574 = !DILocalVariable(name: "ret", scope: !7537, file: !3, line: 3999, type: !7)
!7575 = !DILocalVariable(name: "tid", scope: !7576, file: !3, line: 4000, type: !303)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 4000, column: 5)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 4000, column: 5)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 4000, column: 5)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 4000, column: 5)
!7580 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 4000, column: 5)
!7581 = !DILocalVariable(name: "_ret", scope: !7576, file: !3, line: 4000, type: !74)
!7582 = !DILocalVariable(name: "_arg3", scope: !7576, file: !3, line: 4000, type: !74)
!7583 = !DILocation(line: 3952, column: 33, scope: !7537)
!7584 = !DILocation(line: 3952, column: 17, scope: !7537)
!7585 = !DILocation(line: 3953, column: 9, scope: !7537)
!7586 = !DILocation(line: 3954, column: 5, scope: !7537)
!7587 = !DILocation(line: 3955, column: 5, scope: !7537)
!7588 = !DILocation(line: 3956, column: 5, scope: !7537)
!7589 = !DILocation(line: 3957, column: 9, scope: !7537)
!7590 = !DILocation(line: 3959, column: 10, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 3959, column: 9)
!7592 = !DILocation(line: 3959, column: 9, scope: !7537)
!7593 = !DILocation(line: 3960, column: 9, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 3959, column: 25)
!7595 = !DILocation(line: 3962, column: 9, scope: !7594)
!7596 = !DILocation(line: 3965, column: 23, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 3965, column: 9)
!7598 = !DILocation(line: 3965, column: 10, scope: !7597)
!7599 = !DILocation(line: 3965, column: 42, scope: !7597)
!7600 = !DILocation(line: 3965, column: 50, scope: !7597)
!7601 = !DILocation(line: 3965, column: 53, scope: !7597)
!7602 = !DILocation(line: 3965, column: 75, scope: !7597)
!7603 = !DILocation(line: 3965, column: 9, scope: !7537)
!7604 = !DILocation(line: 3969, column: 5, scope: !7537)
!7605 = !DILocation(line: 3970, column: 15, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 3970, column: 9)
!7607 = !DILocation(line: 3970, column: 47, scope: !7606)
!7608 = !DILocation(line: 3970, column: 9, scope: !7537)
!7609 = !DILocation(line: 3971, column: 9, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 3970, column: 54)
!7611 = !DILocation(line: 3973, column: 9, scope: !7610)
!7612 = !DILocation(line: 3976, column: 5, scope: !7537)
!7613 = !DILocation(line: 3977, column: 19, scope: !7537)
!7614 = !{!7615, !1157, i64 0}
!7615 = !{!"sockaddr_un", !1157, i64 0, !1157, i64 1}
!7616 = !DILocation(line: 3978, column: 14, scope: !7537)
!7617 = !DILocation(line: 3978, column: 5, scope: !7537)
!7618 = !DILocation(line: 3979, column: 5, scope: !7537)
!7619 = !DILocation(line: 3979, column: 42, scope: !7537)
!7620 = !DILocation(line: 3981, column: 9, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 3981, column: 9)
!7622 = !DILocation(line: 3981, column: 26, scope: !7621)
!7623 = !DILocation(line: 3981, column: 9, scope: !7537)
!7624 = !DILocation(line: 3982, column: 24, scope: !7621)
!7625 = !DILocation(line: 3982, column: 9, scope: !7621)
!7626 = !DILocation(line: 3984, column: 5, scope: !7537)
!7627 = !DILocation(line: 3985, column: 9, scope: !7537)
!7628 = !DILocation(line: 3985, column: 18, scope: !7537)
!7629 = !{!7630, !1159, i64 0}
!7630 = !{!"iovec", !1159, i64 0, !1160, i64 8}
!7631 = !DILocation(line: 3986, column: 19, scope: !7537)
!7632 = !DILocation(line: 3986, column: 9, scope: !7537)
!7633 = !DILocation(line: 3986, column: 17, scope: !7537)
!7634 = !{!7630, !1160, i64 8}
!7635 = !DILocation(line: 3988, column: 5, scope: !7537)
!7636 = !DILocation(line: 3989, column: 9, scope: !7537)
!7637 = !DILocation(line: 3989, column: 18, scope: !7537)
!7638 = !{!7639, !1159, i64 0}
!7639 = !{!"msghdr", !1159, i64 0, !1156, i64 8, !1159, i64 16, !1156, i64 24, !1159, i64 32, !1156, i64 40, !1156, i64 44}
!7640 = !DILocation(line: 3991, column: 9, scope: !7537)
!7641 = !DILocation(line: 3990, column: 23, scope: !7537)
!7642 = !DILocation(line: 3990, column: 9, scope: !7537)
!7643 = !DILocation(line: 3990, column: 21, scope: !7537)
!7644 = !{!7639, !1156, i64 8}
!7645 = !DILocation(line: 3992, column: 9, scope: !7537)
!7646 = !DILocation(line: 3992, column: 17, scope: !7537)
!7647 = !{!7639, !1159, i64 16}
!7648 = !DILocation(line: 3993, column: 9, scope: !7537)
!7649 = !DILocation(line: 3993, column: 20, scope: !7537)
!7650 = !{!7639, !1156, i64 24}
!7651 = !DILocation(line: 3995, column: 5, scope: !7537)
!7652 = !DILocation(line: 3999, column: 5, scope: !7537)
!7653 = !DILocation(line: 120, column: 2, scope: !7654, inlinedAt: !7660)
!7654 = distinct !DISubprogram(name: "ukarch_read_sp", scope: !7655, file: !7655, line: 116, type: !7656, isLocal: true, isDefinition: true, scopeLine: 117, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7658)
!7655 = !DIFile(filename: "/root/.unikraft/unikraft/arch/x86/x86_64/include/uk/asm/lcpu.h", directory: "/root/.unikraft/apps/redis/build")
!7656 = !DISubroutineType(types: !7657)
!7657 = !{!37}
!7658 = !{!7659}
!7659 = !DILocalVariable(name: "sp", scope: !7654, file: !7655, line: 118, type: !37)
!7660 = distinct !DILocation(line: 4000, column: 5, scope: !7579)
!7661 = !{i32 1004954}
!7662 = !DILocation(line: 118, column: 16, scope: !7654, inlinedAt: !7660)
!7663 = !DILocation(line: 121, column: 2, scope: !7654, inlinedAt: !7660)
!7664 = !DILocation(line: 4000, column: 5, scope: !7579)
!7665 = !DILocation(line: 120, column: 2, scope: !7654, inlinedAt: !7666)
!7666 = distinct !DILocation(line: 4000, column: 5, scope: !7579)
!7667 = !DILocation(line: 118, column: 16, scope: !7654, inlinedAt: !7666)
!7668 = !DILocation(line: 121, column: 2, scope: !7654, inlinedAt: !7666)
!7669 = !DILocation(line: 4000, column: 5, scope: !7580)
!7670 = !DILocation(line: 3956, column: 19, scope: !7537)
!7671 = !DILocation(line: 4000, column: 5, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 4000, column: 5)
!7673 = !DILocation(line: 3999, column: 9, scope: !7537)
!7674 = !DILocation(line: 120, column: 2, scope: !7654, inlinedAt: !7675)
!7675 = distinct !DILocation(line: 49, column: 21, scope: !7676, inlinedAt: !7680)
!7676 = distinct !DISubprogram(name: "uk_thread_get_tid", scope: !7677, file: !7677, line: 47, type: !5768, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7678)
!7677 = !DIFile(filename: "/root/.unikraft/unikraft/lib/flexos-core/include/flexos/impl/intelpku-impl.h", directory: "/root/.unikraft/apps/redis/build")
!7678 = !{!7679}
!7679 = !DILocalVariable(name: "sp", scope: !7676, file: !7677, line: 49, type: !37)
!7680 = distinct !DILocation(line: 4000, column: 5, scope: !7576)
!7681 = !DILocation(line: 118, column: 16, scope: !7654, inlinedAt: !7675)
!7682 = !DILocation(line: 121, column: 2, scope: !7654, inlinedAt: !7675)
!7683 = !DILocation(line: 49, column: 16, scope: !7676, inlinedAt: !7680)
!7684 = !DILocation(line: 50, column: 19, scope: !7676, inlinedAt: !7680)
!7685 = !DILocation(line: 50, column: 11, scope: !7676, inlinedAt: !7680)
!7686 = !DILocation(line: 50, column: 9, scope: !7676, inlinedAt: !7680)
!7687 = !DILocation(line: 50, column: 2, scope: !7676, inlinedAt: !7680)
!7688 = !DILocation(line: 4000, column: 5, scope: !7576)
!7689 = !{i32 -2145688526, i32 -2145688513, i32 -2145688488, i32 -2145688464, i32 -2145688439, i32 -2145688364, i32 -2145688339, i32 -2145688195, i32 -2145684984, i32 -2145684895, i32 -2145684774, i32 -2145684679, i32 -2145684578, i32 -2145684551, i32 -2145684468, i32 -2145684379, i32 -2145684258, i32 -2145684158, i32 -2145684052, i32 -2145683944, i32 -2145687865, i32 -2145687812, i32 -2145687781, i32 -2145687750, i32 -2145687729, i32 -2145687707, i32 -2145687658, i32 -2145687637, i32 -2145687534, i32 -2145683861, i32 -2145683772, i32 -2145683651, i32 -2145683552, i32 -2145683446, i32 -2145683344, i32 -2145683311, i32 -2145683238, i32 -2145683170, i32 -2145687344, i32 -2145687285, i32 -2145687232, i32 -2145687201, i32 -2145687170, i32 -2145687149, i32 -2145687127, i32 -2145687078, i32 -2145687057, i32 -2145683127, i32 -2145683038, i32 -2145682917, i32 -2145682818, i32 -2145682712, i32 -2145682610, i32 -2145682577, i32 -2145682494, i32 -2145682405, i32 -2145682284, i32 -2145682184, i32 -2145682158, i32 -2145682055, i32 -2145682029, i32 -2145686799, i32 -2145686732, i32 -2145686707, i32 -2145686643, i32 -2145686561, i32 -2145686538, i32 -2145686513, i32 -2145686488}
!7690 = !DILocation(line: 4000, column: 5, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4000, column: 5)
!7692 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 4000, column: 5)
!7693 = !{i32 -2145685450, i32 -2145685433}
!7694 = !DILocation(line: 4001, column: 9, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 4001, column: 9)
!7696 = !DILocation(line: 4001, column: 13, scope: !7695)
!7697 = !DILocation(line: 4001, column: 9, scope: !7537)
!7698 = !DILocation(line: 4002, column: 9, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 4001, column: 18)
!7700 = !DILocation(line: 4003, column: 9, scope: !7699)
!7701 = !DILocation(line: 4004, column: 9, scope: !7699)
!7702 = !DILocation(line: 4006, column: 5, scope: !7537)
!7703 = !DILocation(line: 4007, column: 5, scope: !7537)
!7704 = !DILocation(line: 0, scope: !7537)
!7705 = !DILocation(line: 0, scope: !7699)
!7706 = !DILocation(line: 4008, column: 1, scope: !7537)
!7707 = !DILocation(line: 0, scope: !7594)
!7708 = distinct !DISubprogram(name: "redisIsSupervised", scope: !3, file: !3, line: 4010, type: !2409, isLocal: false, isDefinition: true, scopeLine: 4010, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7709)
!7709 = !{!7710, !7711, !7714}
!7710 = !DILocalVariable(name: "mode", arg: 1, scope: !7708, file: !3, line: 4010, type: !7)
!7711 = !DILocalVariable(name: "upstart_job", scope: !7712, file: !3, line: 4012, type: !425)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 4011, column: 40)
!7713 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 4011, column: 9)
!7714 = !DILocalVariable(name: "notify_socket", scope: !7712, file: !3, line: 4013, type: !425)
!7715 = !DILocation(line: 4010, column: 27, scope: !7708)
!7716 = !DILocation(line: 4011, column: 14, scope: !7713)
!7717 = !DILocation(line: 4011, column: 9, scope: !7708)
!7718 = !DILocation(line: 4012, column: 35, scope: !7712)
!7719 = !DILocation(line: 4012, column: 21, scope: !7712)
!7720 = !DILocation(line: 4013, column: 37, scope: !7712)
!7721 = !DILocation(line: 4013, column: 21, scope: !7712)
!7722 = !DILocation(line: 4015, column: 13, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 4015, column: 13)
!7724 = !DILocation(line: 4015, column: 13, scope: !7712)
!7725 = !DILocation(line: 3937, column: 31, scope: !7520, inlinedAt: !7726)
!7726 = distinct !DILocation(line: 4016, column: 13, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 4015, column: 26)
!7728 = !DILocation(line: 3937, column: 17, scope: !7520, inlinedAt: !7726)
!7729 = !DILocation(line: 3939, column: 10, scope: !7526, inlinedAt: !7726)
!7730 = !DILocation(line: 3939, column: 9, scope: !7520, inlinedAt: !7726)
!7731 = !DILocation(line: 3940, column: 9, scope: !7529, inlinedAt: !7726)
!7732 = !DILocation(line: 3942, column: 9, scope: !7529, inlinedAt: !7726)
!7733 = !DILocation(line: 3945, column: 5, scope: !7520, inlinedAt: !7726)
!7734 = !DILocation(line: 3946, column: 5, scope: !7520, inlinedAt: !7726)
!7735 = !DILocation(line: 3947, column: 5, scope: !7520, inlinedAt: !7726)
!7736 = !DILocation(line: 3948, column: 5, scope: !7520, inlinedAt: !7726)
!7737 = !DILocation(line: 0, scope: !7727)
!7738 = !DILocation(line: 3949, column: 1, scope: !7520, inlinedAt: !7726)
!7739 = !DILocation(line: 4017, column: 9, scope: !7727)
!7740 = !DILocation(line: 4017, column: 20, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 4017, column: 20)
!7742 = !DILocation(line: 4017, column: 20, scope: !7723)
!7743 = !DILocation(line: 4018, column: 13, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 4017, column: 35)
!7745 = !DILocation(line: 4019, column: 9, scope: !7744)
!7746 = !DILocation(line: 4020, column: 5, scope: !7712)
!7747 = !DILocation(line: 4020, column: 21, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 4020, column: 16)
!7749 = !DILocation(line: 4020, column: 16, scope: !7713)
!7750 = !DILocation(line: 3937, column: 31, scope: !7520, inlinedAt: !7751)
!7751 = distinct !DILocation(line: 4021, column: 16, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 4020, column: 44)
!7753 = !DILocation(line: 3937, column: 17, scope: !7520, inlinedAt: !7751)
!7754 = !DILocation(line: 3939, column: 10, scope: !7526, inlinedAt: !7751)
!7755 = !DILocation(line: 3939, column: 9, scope: !7520, inlinedAt: !7751)
!7756 = !DILocation(line: 3940, column: 9, scope: !7529, inlinedAt: !7751)
!7757 = !DILocation(line: 3942, column: 9, scope: !7529, inlinedAt: !7751)
!7758 = !DILocation(line: 3945, column: 5, scope: !7520, inlinedAt: !7751)
!7759 = !DILocation(line: 3946, column: 5, scope: !7520, inlinedAt: !7751)
!7760 = !DILocation(line: 3947, column: 5, scope: !7520, inlinedAt: !7751)
!7761 = !DILocation(line: 3948, column: 5, scope: !7520, inlinedAt: !7751)
!7762 = !DILocation(line: 0, scope: !7529, inlinedAt: !7751)
!7763 = !DILocation(line: 0, scope: !7752)
!7764 = !DILocation(line: 3949, column: 1, scope: !7520, inlinedAt: !7751)
!7765 = !DILocation(line: 4021, column: 9, scope: !7752)
!7766 = !DILocation(line: 4022, column: 21, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 4022, column: 16)
!7768 = !DILocation(line: 4022, column: 16, scope: !7748)
!7769 = !DILocation(line: 4023, column: 16, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 4022, column: 44)
!7771 = !DILocation(line: 4023, column: 9, scope: !7770)
!7772 = !DILocation(line: 0, scope: !7770)
!7773 = !DILocation(line: 4027, column: 1, scope: !7708)
!7774 = distinct !DISubprogram(name: "redis_server_main", scope: !3, file: !3, line: 4030, type: !7338, isLocal: false, isDefinition: true, scopeLine: 4030, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7775)
!7775 = !{!7776, !7777, !7778, !7779, !7780, !7782, !7785, !7786}
!7776 = !DILocalVariable(name: "argc", arg: 1, scope: !7774, file: !3, line: 4030, type: !7)
!7777 = !DILocalVariable(name: "argv", arg: 2, scope: !7774, file: !3, line: 4030, type: !614)
!7778 = !DILocalVariable(name: "tv", scope: !7774, file: !3, line: 4031, type: !272)
!7779 = !DILocalVariable(name: "j", scope: !7774, file: !3, line: 4032, type: !7)
!7780 = !DILocalVariable(name: "hashseed", scope: !7774, file: !3, line: 4070, type: !7781)
!7781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 128, elements: !396)
!7782 = !DILocalVariable(name: "options", scope: !7783, file: !3, line: 4102, type: !38)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 4100, column: 20)
!7784 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4100, column: 9)
!7785 = !DILocalVariable(name: "configfile", scope: !7783, file: !3, line: 4103, type: !40)
!7786 = !DILocalVariable(name: "background", scope: !7774, file: !3, line: 4182, type: !7)
!7787 = !DILocation(line: 4030, column: 14, scope: !7774)
!7788 = !DILocation(line: 4030, column: 27, scope: !7774)
!7789 = !DILocation(line: 4064, column: 5, scope: !7774)
!7790 = !DILocation(line: 4065, column: 5, scope: !7774)
!7791 = !DILocation(line: 4066, column: 5, scope: !7774)
!7792 = !DILocation(line: 4067, column: 11, scope: !7774)
!7793 = !DILocation(line: 4067, column: 22, scope: !7774)
!7794 = !DILocation(line: 4067, column: 5, scope: !7774)
!7795 = !DILocation(line: 4031, column: 20, scope: !7774)
!7796 = !DILocation(line: 62, column: 56, scope: !1297, inlinedAt: !7797)
!7797 = distinct !DILocation(line: 4068, column: 5, scope: !7774)
!7798 = !DILocation(line: 62, column: 66, scope: !1297, inlinedAt: !7797)
!7799 = !DILocation(line: 65, column: 2, scope: !1297, inlinedAt: !7797)
!7800 = !DILocation(line: 66, column: 55, scope: !1297, inlinedAt: !7797)
!7801 = !DILocation(line: 66, column: 80, scope: !1297, inlinedAt: !7797)
!7802 = !DILocation(line: 66, column: 35, scope: !1297, inlinedAt: !7797)
!7803 = !DILocation(line: 66, column: 18, scope: !1297, inlinedAt: !7797)
!7804 = !DILocation(line: 70, column: 2, scope: !1297, inlinedAt: !7797)
!7805 = !DILocation(line: 64, column: 6, scope: !1297, inlinedAt: !7797)
!7806 = !DILocation(line: 75, column: 1, scope: !1297, inlinedAt: !7797)
!7807 = !DILocation(line: 74, column: 2, scope: !1297, inlinedAt: !7797)
!7808 = !DILocation(line: 4070, column: 5, scope: !7774)
!7809 = !DILocation(line: 4070, column: 10, scope: !7774)
!7810 = !DILocation(line: 4071, column: 5, scope: !7774)
!7811 = !DILocation(line: 4072, column: 5, scope: !7774)
!7812 = !DILocation(line: 3865, column: 30, scope: !7337, inlinedAt: !7813)
!7813 = distinct !DILocation(line: 4073, column: 28, scope: !7774)
!7814 = !DILocation(line: 3865, column: 43, scope: !7337, inlinedAt: !7813)
!7815 = !DILocation(line: 3868, column: 16, scope: !7347, inlinedAt: !7813)
!7816 = !DILocation(line: 3868, column: 9, scope: !7347, inlinedAt: !7813)
!7817 = !DILocation(line: 3868, column: 42, scope: !7347, inlinedAt: !7813)
!7818 = !DILocation(line: 3868, column: 9, scope: !7337, inlinedAt: !7813)
!7819 = !DILocation(line: 0, scope: !7347, inlinedAt: !7813)
!7820 = !DILocation(line: 3866, column: 9, scope: !7337, inlinedAt: !7813)
!7821 = !DILocation(line: 3869, column: 19, scope: !7354, inlinedAt: !7813)
!7822 = !DILocation(line: 3869, column: 5, scope: !7355, inlinedAt: !7813)
!7823 = !DILocation(line: 3870, column: 21, scope: !7358, inlinedAt: !7813)
!7824 = !DILocation(line: 3870, column: 14, scope: !7358, inlinedAt: !7813)
!7825 = !DILocation(line: 3870, column: 13, scope: !7354, inlinedAt: !7813)
!7826 = !DILocation(line: 3869, column: 28, scope: !7354, inlinedAt: !7813)
!7827 = !DILocation(line: 3869, column: 5, scope: !7354, inlinedAt: !7813)
!7828 = !DILocation(line: 0, scope: !7774)
!7829 = !DILocation(line: 3872, column: 1, scope: !7337, inlinedAt: !7813)
!7830 = !DILocation(line: 0, scope: !7337, inlinedAt: !7813)
!7831 = !DILocation(line: 4073, column: 26, scope: !7774)
!7832 = !DILocation(line: 4074, column: 5, scope: !7774)
!7833 = !DILocation(line: 4075, column: 5, scope: !7774)
!7834 = !DILocation(line: 4079, column: 41, scope: !7774)
!7835 = !DILocation(line: 4079, column: 25, scope: !7774)
!7836 = !DILocation(line: 4079, column: 23, scope: !7774)
!7837 = !DILocation(line: 4080, column: 51, scope: !7774)
!7838 = !DILocation(line: 4080, column: 46, scope: !7774)
!7839 = !DILocation(line: 4080, column: 45, scope: !7774)
!7840 = !DILocation(line: 4080, column: 24, scope: !7774)
!7841 = !DILocation(line: 4080, column: 22, scope: !7774)
!7842 = !DILocation(line: 4081, column: 5, scope: !7774)
!7843 = !DILocation(line: 4081, column: 28, scope: !7774)
!7844 = !DILocation(line: 4032, column: 9, scope: !7774)
!7845 = !DILocation(line: 4082, column: 10, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4082, column: 5)
!7847 = !DILocation(line: 4082, column: 19, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7846, file: !3, line: 4082, column: 5)
!7849 = !DILocation(line: 4082, column: 5, scope: !7846)
!7850 = !DILocation(line: 4082, column: 62, scope: !7848)
!7851 = !DILocation(line: 4082, column: 54, scope: !7848)
!7852 = !DILocation(line: 4082, column: 39, scope: !7848)
!7853 = !DILocation(line: 4082, column: 32, scope: !7848)
!7854 = !DILocation(line: 4082, column: 52, scope: !7848)
!7855 = !DILocation(line: 4082, column: 28, scope: !7848)
!7856 = !DILocation(line: 4082, column: 5, scope: !7848)
!7857 = distinct !{!7857, !7849, !7858}
!7858 = !DILocation(line: 4082, column: 69, scope: !7846)
!7859 = !DILocation(line: 4087, column: 16, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4087, column: 9)
!7861 = !DILocation(line: 4087, column: 9, scope: !7860)
!7862 = !DILocation(line: 4087, column: 9, scope: !7774)
!7863 = !DILocation(line: 4088, column: 9, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 4087, column: 31)
!7865 = !DILocation(line: 4089, column: 9, scope: !7864)
!7866 = !DILocation(line: 4090, column: 5, scope: !7864)
!7867 = !DILocation(line: 4095, column: 16, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4095, column: 9)
!7869 = !DILocation(line: 4095, column: 9, scope: !7868)
!7870 = !DILocation(line: 4095, column: 43, scope: !7868)
!7871 = !DILocation(line: 4095, column: 9, scope: !7774)
!7872 = !DILocation(line: 4096, column: 9, scope: !7868)
!7873 = !DILocation(line: 4097, column: 21, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 4097, column: 14)
!7875 = !DILocation(line: 4097, column: 14, scope: !7874)
!7876 = !DILocation(line: 4097, column: 48, scope: !7874)
!7877 = !DILocation(line: 4097, column: 14, scope: !7868)
!7878 = !DILocation(line: 4098, column: 9, scope: !7874)
!7879 = !DILocation(line: 0, scope: !7868)
!7880 = !DILocation(line: 4100, column: 14, scope: !7784)
!7881 = !DILocation(line: 4100, column: 9, scope: !7774)
!7882 = !DILocation(line: 4102, column: 23, scope: !7783)
!7883 = !DILocation(line: 4102, column: 13, scope: !7783)
!7884 = !DILocation(line: 4103, column: 15, scope: !7783)
!7885 = !DILocation(line: 4106, column: 20, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4106, column: 13)
!7887 = !DILocation(line: 4106, column: 13, scope: !7886)
!7888 = !DILocation(line: 4106, column: 35, scope: !7886)
!7889 = !DILocation(line: 4106, column: 40, scope: !7886)
!7890 = !DILocation(line: 4107, column: 20, scope: !7886)
!7891 = !DILocation(line: 4107, column: 13, scope: !7886)
!7892 = !DILocation(line: 4107, column: 42, scope: !7886)
!7893 = !DILocation(line: 4106, column: 13, scope: !7783)
!7894 = !DILocation(line: 4107, column: 48, scope: !7886)
!7895 = !DILocation(line: 4108, column: 20, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4108, column: 13)
!7897 = !DILocation(line: 4108, column: 13, scope: !7896)
!7898 = !DILocation(line: 4108, column: 39, scope: !7896)
!7899 = !DILocation(line: 4108, column: 44, scope: !7896)
!7900 = !DILocation(line: 4109, column: 20, scope: !7896)
!7901 = !DILocation(line: 4109, column: 13, scope: !7896)
!7902 = !DILocation(line: 4109, column: 35, scope: !7896)
!7903 = !DILocation(line: 4108, column: 13, scope: !7783)
!7904 = !DILocation(line: 4109, column: 41, scope: !7896)
!7905 = !DILocation(line: 4110, column: 20, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4110, column: 13)
!7907 = !DILocation(line: 4110, column: 13, scope: !7906)
!7908 = !DILocation(line: 4110, column: 46, scope: !7906)
!7909 = !DILocation(line: 4110, column: 13, scope: !7783)
!7910 = !DILocation(line: 4111, column: 22, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 4111, column: 17)
!7912 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 4110, column: 52)
!7913 = !DILocation(line: 4111, column: 17, scope: !7912)
!7914 = !DILocation(line: 4112, column: 30, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 4111, column: 28)
!7916 = !DILocation(line: 4112, column: 25, scope: !7915)
!7917 = !DILocation(line: 4112, column: 17, scope: !7915)
!7918 = !DILocation(line: 4113, column: 17, scope: !7915)
!7919 = !DILocation(line: 4115, column: 25, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 4114, column: 20)
!7921 = !DILocation(line: 4115, column: 17, scope: !7920)
!7922 = !DILocation(line: 4116, column: 25, scope: !7920)
!7923 = !DILocation(line: 4116, column: 17, scope: !7920)
!7924 = !DILocation(line: 4117, column: 17, scope: !7920)
!7925 = !DILocation(line: 4122, column: 13, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4122, column: 13)
!7927 = !DILocation(line: 4122, column: 24, scope: !7926)
!7928 = !DILocation(line: 4122, column: 31, scope: !7926)
!7929 = !DILocation(line: 4122, column: 34, scope: !7926)
!7930 = !DILocation(line: 4122, column: 45, scope: !7926)
!7931 = !DILocation(line: 4122, column: 13, scope: !7783)
!7932 = !DILocation(line: 4124, column: 33, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 4122, column: 53)
!7934 = !DILocation(line: 4124, column: 31, scope: !7933)
!7935 = !DILocation(line: 4127, column: 26, scope: !7933)
!7936 = !DILocation(line: 4127, column: 19, scope: !7933)
!7937 = !DILocation(line: 4127, column: 13, scope: !7933)
!7938 = !DILocation(line: 4128, column: 50, scope: !7933)
!7939 = !DILocation(line: 4128, column: 35, scope: !7933)
!7940 = !DILocation(line: 4128, column: 20, scope: !7933)
!7941 = !DILocation(line: 4128, column: 13, scope: !7933)
!7942 = !DILocation(line: 4128, column: 33, scope: !7933)
!7943 = !DILocation(line: 4130, column: 9, scope: !7933)
!7944 = !DILocation(line: 0, scope: !7783)
!7945 = !DILocation(line: 4136, column: 9, scope: !7783)
!7946 = !DILocation(line: 4136, column: 17, scope: !7783)
!7947 = !DILocation(line: 4137, column: 17, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 4137, column: 17)
!7949 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4136, column: 26)
!7950 = !DILocation(line: 4137, column: 28, scope: !7948)
!7951 = !DILocation(line: 4137, column: 35, scope: !7948)
!7952 = !DILocation(line: 4137, column: 38, scope: !7948)
!7953 = !DILocation(line: 4137, column: 49, scope: !7948)
!7954 = !DILocation(line: 4137, column: 17, scope: !7949)
!7955 = !DILocation(line: 4139, column: 22, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 4139, column: 21)
!7957 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 4137, column: 57)
!7958 = !DILocation(line: 4139, column: 21, scope: !7957)
!7959 = !DILocation(line: 4141, column: 22, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 4139, column: 54)
!7961 = !DILocation(line: 4142, column: 21, scope: !7960)
!7962 = distinct !{!7962, !7945, !7963}
!7963 = !DILocation(line: 4153, column: 9, scope: !7783)
!7964 = !DILocation(line: 87, column: 39, scope: !2017, inlinedAt: !7965)
!7965 = distinct !DILocation(line: 4144, column: 21, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 4144, column: 21)
!7967 = !DILocation(line: 88, column: 27, scope: !2017, inlinedAt: !7965)
!7968 = !DILocation(line: 88, column: 19, scope: !2017, inlinedAt: !7965)
!7969 = !DILocation(line: 89, column: 5, scope: !2017, inlinedAt: !7965)
!7970 = !DILocation(line: 91, column: 20, scope: !2030, inlinedAt: !7965)
!7971 = !DILocation(line: 91, column: 13, scope: !2030, inlinedAt: !7965)
!7972 = !DILocation(line: 93, column: 20, scope: !2030, inlinedAt: !7965)
!7973 = !DILocation(line: 93, column: 34, scope: !2030, inlinedAt: !7965)
!7974 = !DILocation(line: 93, column: 13, scope: !2030, inlinedAt: !7965)
!7975 = !DILocation(line: 95, column: 20, scope: !2030, inlinedAt: !7965)
!7976 = !DILocation(line: 95, column: 35, scope: !2030, inlinedAt: !7965)
!7977 = !DILocation(line: 95, column: 13, scope: !2030, inlinedAt: !7965)
!7978 = !DILocation(line: 97, column: 20, scope: !2030, inlinedAt: !7965)
!7979 = !DILocation(line: 97, column: 35, scope: !2030, inlinedAt: !7965)
!7980 = !DILocation(line: 97, column: 13, scope: !2030, inlinedAt: !7965)
!7981 = !DILocation(line: 99, column: 20, scope: !2030, inlinedAt: !7965)
!7982 = !DILocation(line: 99, column: 35, scope: !2030, inlinedAt: !7965)
!7983 = !DILocation(line: 99, column: 13, scope: !2030, inlinedAt: !7965)
!7984 = !DILocation(line: 101, column: 5, scope: !2017, inlinedAt: !7965)
!7985 = !DILocation(line: 102, column: 1, scope: !2017, inlinedAt: !7965)
!7986 = !DILocation(line: 4144, column: 21, scope: !7957)
!7987 = !DILocation(line: 0, scope: !2030, inlinedAt: !7965)
!7988 = !DILocation(line: 0, scope: !7966)
!7989 = !DILocation(line: 4144, column: 21, scope: !7966)
!7990 = !DILocation(line: 4144, column: 48, scope: !7966)
!7991 = !DILocation(line: 4144, column: 38, scope: !7966)
!7992 = !DILocation(line: 4145, column: 42, scope: !7957)
!7993 = !DILocation(line: 4145, column: 49, scope: !7957)
!7994 = !DILocation(line: 4145, column: 27, scope: !7957)
!7995 = !DILocation(line: 4147, column: 13, scope: !7957)
!7996 = !DILocation(line: 4149, column: 54, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 4147, column: 20)
!7998 = !DILocation(line: 4149, column: 27, scope: !7997)
!7999 = !DILocation(line: 0, scope: !7957)
!8000 = !DILocation(line: 4152, column: 14, scope: !7949)
!8001 = !DILocation(line: 4154, column: 20, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4154, column: 13)
!8003 = !DILocation(line: 4154, column: 13, scope: !8002)
!8004 = !DILocation(line: 4154, column: 37, scope: !8002)
!8005 = !DILocation(line: 4154, column: 34, scope: !8002)
!8006 = !DILocation(line: 4154, column: 51, scope: !8002)
!8007 = !DILocation(line: 4154, column: 63, scope: !8002)
!8008 = !DILocation(line: 4154, column: 13, scope: !7783)
!8009 = !DILocation(line: 4155, column: 13, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 4154, column: 71)
!8011 = !DILocation(line: 4157, column: 13, scope: !8010)
!8012 = !DILocation(line: 4159, column: 13, scope: !8010)
!8013 = !DILocation(line: 4161, column: 9, scope: !7783)
!8014 = !DILocation(line: 4162, column: 9, scope: !7783)
!8015 = !DILocation(line: 4163, column: 9, scope: !7783)
!8016 = !DILocation(line: 4164, column: 5, scope: !7783)
!8017 = !DILocation(line: 4166, column: 5, scope: !7774)
!8018 = !DILocation(line: 4171, column: 13, scope: !7774)
!8019 = !DILocation(line: 4172, column: 20, scope: !7774)
!8020 = !DILocation(line: 4172, column: 13, scope: !7774)
!8021 = !DILocation(line: 4172, column: 45, scope: !7774)
!8022 = !DILocation(line: 4173, column: 18, scope: !7774)
!8023 = !DILocation(line: 4167, column: 5, scope: !7774)
!8024 = !DILocation(line: 4175, column: 14, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4175, column: 9)
!8026 = !DILocation(line: 4175, column: 9, scope: !7774)
!8027 = !DILocation(line: 4176, column: 153, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 4175, column: 20)
!8029 = !DILocation(line: 4176, column: 169, scope: !8028)
!8030 = !DILocation(line: 4176, column: 162, scope: !8028)
!8031 = !DILocation(line: 4176, column: 9, scope: !8028)
!8032 = !DILocation(line: 4177, column: 5, scope: !8028)
!8033 = !DILocation(line: 4178, column: 9, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 4177, column: 12)
!8035 = !DILocation(line: 4181, column: 50, scope: !7774)
!8036 = !DILocation(line: 4181, column: 25, scope: !7774)
!8037 = !DILocation(line: 4181, column: 23, scope: !7774)
!8038 = !DILocation(line: 4182, column: 29, scope: !7774)
!8039 = !DILocation(line: 4182, column: 22, scope: !7774)
!8040 = !DILocation(line: 4182, column: 39, scope: !7774)
!8041 = !DILocation(line: 4182, column: 42, scope: !7774)
!8042 = !DILocation(line: 4183, column: 9, scope: !7774)
!8043 = !DILocation(line: 4183, column: 21, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4183, column: 9)
!8045 = !DILocation(line: 0, scope: !8044)
!8046 = !DILocation(line: 4185, column: 5, scope: !7774)
!8047 = !DILocation(line: 4186, column: 30, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4186, column: 9)
!8049 = !DILocation(line: 4186, column: 23, scope: !8048)
!8050 = !DILocation(line: 4186, column: 20, scope: !8048)
!8051 = !DILocation(line: 3716, column: 10, scope: !7176, inlinedAt: !8052)
!8052 = distinct !DILocation(line: 4186, column: 39, scope: !8048)
!8053 = !DILocation(line: 3716, column: 9, scope: !7172, inlinedAt: !8052)
!8054 = !DILocation(line: 3716, column: 43, scope: !7176, inlinedAt: !8052)
!8055 = !DILocation(line: 3716, column: 41, scope: !7176, inlinedAt: !8052)
!8056 = !DILocation(line: 3716, column: 26, scope: !7176, inlinedAt: !8052)
!8057 = !DILocation(line: 3719, column: 29, scope: !7172, inlinedAt: !8052)
!8058 = !DILocation(line: 3719, column: 16, scope: !7172, inlinedAt: !8052)
!8059 = !DILocation(line: 3719, column: 11, scope: !7172, inlinedAt: !8052)
!8060 = !DILocation(line: 3720, column: 9, scope: !7186, inlinedAt: !8052)
!8061 = !DILocation(line: 3720, column: 9, scope: !7172, inlinedAt: !8052)
!8062 = !DILocation(line: 3721, column: 32, scope: !7189, inlinedAt: !8052)
!8063 = !DILocation(line: 3721, column: 9, scope: !7189, inlinedAt: !8052)
!8064 = !DILocation(line: 3722, column: 9, scope: !7189, inlinedAt: !8052)
!8065 = !DILocation(line: 3723, column: 5, scope: !7189, inlinedAt: !8052)
!8066 = !DILocation(line: 3724, column: 1, scope: !7172, inlinedAt: !8052)
!8067 = !DILocation(line: 4186, column: 39, scope: !8048)
!8068 = !DILocation(line: 3916, column: 30, scope: !7513, inlinedAt: !8069)
!8069 = distinct !DILocation(line: 4187, column: 5, scope: !7774)
!8070 = !DILocation(line: 3930, column: 1, scope: !7513, inlinedAt: !8069)
!8071 = !DILocation(line: 4188, column: 5, scope: !7774)
!8072 = !DILocation(line: 1915, column: 1, scope: !4453, inlinedAt: !8073)
!8073 = distinct !DILocation(line: 4189, column: 5, scope: !7774)
!8074 = !DILocation(line: 4191, column: 17, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4191, column: 9)
!8076 = !DILocation(line: 4191, column: 10, scope: !8075)
!8077 = !DILocation(line: 4191, column: 9, scope: !7774)
!8078 = !DILocation(line: 4193, column: 9, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 4191, column: 32)
!8080 = !DILocation(line: 4197, column: 9, scope: !8079)
!8081 = !DILocation(line: 4198, column: 9, scope: !8079)
!8082 = !DILocation(line: 4199, column: 20, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 4199, column: 13)
!8084 = !DILocation(line: 4199, column: 13, scope: !8083)
!8085 = !DILocation(line: 4199, column: 13, scope: !8079)
!8086 = !DILocation(line: 4200, column: 17, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 4200, column: 17)
!8088 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 4199, column: 37)
!8089 = !DILocation(line: 4200, column: 47, scope: !8087)
!8090 = !DILocation(line: 4200, column: 17, scope: !8088)
!8091 = !DILocation(line: 4201, column: 17, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 4200, column: 57)
!8093 = !DILocation(line: 4204, column: 17, scope: !8092)
!8094 = !DILocation(line: 4207, column: 20, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 4207, column: 13)
!8096 = !DILocation(line: 4207, column: 31, scope: !8095)
!8097 = !DILocation(line: 4207, column: 13, scope: !8079)
!8098 = !DILocation(line: 4208, column: 13, scope: !8095)
!8099 = !DILocation(line: 4209, column: 20, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 4209, column: 13)
!8101 = !DILocation(line: 4209, column: 25, scope: !8100)
!8102 = !DILocation(line: 4209, column: 13, scope: !8079)
!8103 = !DILocation(line: 4210, column: 95, scope: !8100)
!8104 = !DILocation(line: 4210, column: 13, scope: !8100)
!8105 = !DILocation(line: 4212, column: 9, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 4211, column: 12)
!8107 = !DILocation(line: 4216, column: 16, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 4216, column: 9)
!8109 = !DILocation(line: 4216, column: 30, scope: !8108)
!8110 = !DILocation(line: 4217, column: 9, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 4216, column: 63)
!8112 = !DILocation(line: 4218, column: 5, scope: !8111)
!8113 = !DILocation(line: 4220, column: 33, scope: !7774)
!8114 = !DILocation(line: 4220, column: 5, scope: !7774)
!8115 = !DILocation(line: 4221, column: 32, scope: !7774)
!8116 = !DILocation(line: 4221, column: 5, scope: !7774)
!8117 = !DILocation(line: 4222, column: 19, scope: !7774)
!8118 = !DILocation(line: 4222, column: 5, scope: !7774)
!8119 = !DILocation(line: 4223, column: 30, scope: !7774)
!8120 = !DILocation(line: 4223, column: 5, scope: !7774)
!8121 = !DILocation(line: 4225, column: 1, scope: !7774)
!8122 = !DILocation(line: 4224, column: 5, scope: !7774)
