; ModuleID = '/root/.unikraft/libs/lwip/sockets.c'
source_filename = "/root/.unikraft/libs/lwip/sockets.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.uk_alloc = type { i8* (%struct.uk_alloc*, i64)*, {}*, i8* (%struct.uk_alloc*, i8*, i64)*, i32 (%struct.uk_alloc*, i8**, i64, i64)*, {}*, void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)*, i8* (%struct.uk_alloc*, i64)*, i8* (%struct.uk_alloc*, i64)*, void (%struct.uk_alloc*, i8*, i64)*, i32 (%struct.uk_alloc*, i8*, i64)*, i64, %struct.uk_alloc*, [0 x i8] }
%struct.uk_thread_status_block = type { i64, i64 }
%struct.lwip_sock = type { %struct.netconn*, %union.lwip_sock_lastdata, i16, i16, i16, i8 }
%struct.netconn = type { i32, i32, %union.anon.4, i8, %struct.sys_sem_t, %struct.sys_mbox_t, %struct.sys_mbox_t, i32, i8, %struct.api_msg*, void (%struct.netconn*, i32, i16)* }
%union.anon.4 = type { %struct.ip_pcb* }
%struct.ip_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8 }
%struct.ip_addr = type { %union.anon.5, i8 }
%union.anon.5 = type { %struct.ip6_addr }
%struct.ip6_addr = type { [4 x i32], i8 }
%struct.sys_sem_t = type { %struct.uk_semaphore, i32 }
%struct.uk_semaphore = type { i64, %struct.uk_waitq }
%struct.uk_waitq = type { %struct.uk_waitq_entry*, %struct.uk_waitq_entry** }
%struct.uk_waitq_entry = type { i32, %struct.uk_thread*, %struct.anon.0 }
%struct.uk_thread = type { i8*, i8*, i8*, i8*, %struct.anon, i32, i64, i8, %struct.uk_waitq, %struct.uk_sched*, i8*, i32, %struct._reent*, %struct.uk_thread_sig* }
%struct.anon = type { %struct.uk_thread*, %struct.uk_thread** }
%struct.uk_sched = type { void (%struct.uk_sched*)*, i32 (%struct.uk_sched*, %struct.uk_thread*, %struct.uk_thread_attr*)*, void (%struct.uk_sched*, %struct.uk_thread*)*, void (%struct.uk_sched*, %struct.uk_thread*)*, void (%struct.uk_sched*, %struct.uk_thread*)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32*)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32)*, i32 (%struct.uk_sched*, %struct.uk_thread*, i32*)*, i8, %struct.uk_thread, %struct.uk_thread_list, %struct.ukplat_ctx_callbacks, %struct.uk_alloc*, %struct.uk_sched*, i8* }
%struct.uk_thread_attr = type { i8, i32, i64 }
%struct.uk_thread_list = type { %struct.uk_thread*, %struct.uk_thread** }
%struct.ukplat_ctx_callbacks = type { i8* (%struct.uk_alloc*, i64, i64)*, void (i8*)*, void (i8*, i8*)* }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.1, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.1 = type { %struct.anon.3 }
%struct.anon.3 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.uk_thread_sig = type { i64, i64, %struct.uk_list_head, %struct.uk_thread_sig_wait, %struct.uk_list_head }
%struct.uk_thread_sig_wait = type { i32, i64, %struct.siginfo_t }
%struct.siginfo_t = type { i32, i32, i32 }
%struct.uk_list_head = type { %struct.uk_list_head*, %struct.uk_list_head* }
%struct.anon.0 = type { %struct.uk_waitq_entry* }
%struct.sys_mbox_t = type { %struct.uk_alloc*, %struct.uk_mbox*, i32 }
%struct.uk_mbox = type opaque
%struct.api_msg = type opaque
%union.lwip_sock_lastdata = type { %struct.netbuf* }
%struct.netbuf = type { %struct.pbuf*, %struct.pbuf*, %struct.ip_addr, i16 }
%struct.pbuf = type { %struct.pbuf*, i8*, i16, i16, i8, i8, i8, i8 }
%struct.sys_mutex_t = type { %struct.uk_mutex, i32 }
%struct.uk_mutex = type { i32, %struct.uk_thread*, %struct.uk_waitq }
%struct.mount = type { %struct.vfsops*, i32, i32, [1024 x i8], [1024 x i8], %struct.device*, %struct.dentry*, %struct.dentry*, i8*, %struct.uk_list_head, %struct.__fsid_t }
%struct.vfsops = type { i32 (%struct.mount*, i8*, i32, i8*)*, i32 (%struct.mount*, i32)*, i32 (%struct.mount*)*, i32 (%struct.mount*, %struct.vnode*)*, i32 (%struct.mount*, %struct.statfs*)*, %struct.vnops* }
%struct.vnode = type { i64, %struct.uk_list_head, %struct.mount*, %struct.vnops*, i32, i32, i32, i32, i64, %struct.uk_mutex, %struct.uk_list_head, i8* }
%struct.statfs = type { i64, i64, i64, i64, i64, i32, i32, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.vnops = type { i32 (%struct.vfscore_file*)*, {}*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)*, {}*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)*, i32 (%struct.vnode*, i8*, %struct.vnode**)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*)*, i32 (%struct.vnode*, i64)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)*, i32 (%struct.vnode*, i32, i64, i64)*, i32 (%struct.vnode*, %struct.uio*)*, i32 (%struct.vnode*, i8*, i8*)* }
%struct.vfscore_file = type { i32, i32, i32, i64, i8*, i32, %struct.dentry*, %struct.uk_mutex }
%struct.uio = type { %struct.iovec*, i32, i64, i64, i32 }
%struct.iovec = type { i8*, i64 }
%struct.dirent = type { i16, i64, i16, i8, [256 x i8] }
%struct.vattr = type { i32, i32, i32, i16, i16, i16, i16, i16, %struct.timespec, %struct.timespec, %struct.timespec, i16, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.device = type opaque
%struct.dentry = type { %struct.uk_hlist_node, i32, i8*, %struct.vnode*, %struct.mount*, %struct.dentry*, %struct.uk_list_head, %struct.uk_mutex, %struct.uk_list_head, %struct.uk_list_head }
%struct.uk_hlist_node = type { %struct.uk_hlist_node*, %struct.uk_hlist_node** }
%struct.__fsid_t = type { [2 x i32] }
%struct.lwip_select_cb = type { %struct.lwip_select_cb*, %struct.lwip_select_cb*, %struct._types_fd_set*, %struct._types_fd_set*, %struct._types_fd_set*, %struct.pollfd*, i32, i32, %struct.sys_sem_t }
%struct._types_fd_set = type { [1 x i64] }
%struct.pollfd = type { i32, i16, i16 }
%struct.lwip_socket_multicast_mld6_pair = type { %struct.lwip_sock*, i8, %struct.ip6_addr }
%struct.sock_net_file = type { %struct.vfscore_file*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i32, i8*, i32, i32 }
%struct.sockaddr = type { i8, i8, [14 x i8] }
%union.sockaddr_aligned = type { %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i8, i8, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.6 }
%union.anon.6 = type { [4 x i32] }
%struct.timeval = type { i64, i64 }
%struct.tcp_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.tcp_pcb*, i8*, i32, i8, i16, i16, i16, i8, i8, i8, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, %struct.tcp_seg*, %struct.tcp_seg*, %struct.tcp_seg*, %struct.pbuf*, %struct.tcp_pcb_listen*, i8 (i8*, %struct.tcp_pcb*, i16)*, i8 (i8*, %struct.tcp_pcb*, %struct.pbuf*, i8)*, i8 (i8*, %struct.tcp_pcb*, i8)*, i8 (i8*, %struct.tcp_pcb*)*, void (i8*, i8)*, i32, i8, i8, i8, i8, i8, i8 }
%struct.tcp_seg = type opaque
%struct.tcp_pcb_listen = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.tcp_pcb_listen*, i8*, i32, i8, i16, i8 (i8*, %struct.tcp_pcb*, i8)* }
%struct.udp_pcb = type { %struct.ip_addr, %struct.ip_addr, i8, i8, i8, i8, %struct.udp_pcb*, i8, i16, i16, %struct.ip4_addr, i8, i8, void (i8*, %struct.udp_pcb*, %struct.pbuf*, %struct.ip_addr*, i16)*, i8* }
%struct.ip4_addr = type { i32 }
%struct.netif = type { %struct.netif*, %struct.ip_addr, %struct.ip_addr, %struct.ip_addr, [3 x %struct.ip_addr], [3 x i8], [3 x i32], [3 x i32], i8 (%struct.pbuf*, %struct.netif*)*, i8 (%struct.netif*, %struct.pbuf*, %struct.ip4_addr*)*, i8 (%struct.netif*, %struct.pbuf*)*, i8 (%struct.netif*, %struct.pbuf*, %struct.ip6_addr*)*, void (%struct.netif*)*, void (%struct.netif*)*, i8*, [1 x i8*], i16, i16, i16, [6 x i8], i8, i8, [2 x i8], i8, i8, i8, i8 (%struct.netif*, %struct.ip6_addr*, i32)* }
%struct.netvector = type { i8*, i64 }

@.str = private unnamed_addr constant [23 x i8] c"Assertion failure: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"s_vnode->v_refcnt == 1\00", align 1
@flexos_shared_alloc = external dso_local local_unnamed_addr global %struct.uk_alloc*, align 8
@_intrstack_start = external dso_local global [0 x i8], align 1
@_end = external dso_local global [0 x i8], align 1
@tsb_comp1 = external dso_local global [32 x %struct.uk_thread_status_block], align 16
@tsb_comp0 = external dso_local global [32 x %struct.uk_thread_status_block], align 16
@.str.2 = private unnamed_addr constant [16 x i8] c"newconn != NULL\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"!(1)\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"invalid socket index\00", align 1
@sockets = internal global [64 x %struct.lwip_sock] zeroinitializer, align 16, !dbg !0
@lock_tcpip_core = external dso_local global %struct.sys_mutex_t, align 8
@.str.5 = private unnamed_addr constant [27 x i8] c"lwip_bind: invalid address\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"sock->lastdata == NULL\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"lwip_connect: invalid address\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"lwip_recvmsg: invalid message pointer\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"lwip_recvmsg: unsupported flags\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"lwip_sendmsg: invalid msghdr\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"lwip_sendmsg: invalid msghdr iov\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c"lwip_sendmsg: maximum iovs exceeded\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"lwip_sendmsg: unsupported flags\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"lwip_sendmsg: invalid msghdr name\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"lwip_sendto: invalid address\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"sock->select_waiting > 0\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"lwip_poll: invalid fds\00", align 1
@uk_pr_crit.__str = internal global [8 x i8] c"liblwip\00", section ".data_shared", align 1, !dbg !1043
@uk_pr_crit.__str.20 = internal global [10 x i8] c"sockets.c\00", section ".data_shared", align 1, !dbg !1062
@.str.21 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@s_mount = internal global %struct.mount { %struct.vfsops* @sock_net_vfsops, i32 0, i32 0, [1024 x i8] zeroinitializer, [1024 x i8] zeroinitializer, %struct.device* null, %struct.dentry* null, %struct.dentry* null, i8* null, %struct.uk_list_head zeroinitializer, %struct.__fsid_t zeroinitializer }, section ".data_shared", align 8, !dbg !1149
@s_inode = internal unnamed_addr global i64 0, section ".data_shared", align 8, !dbg !1155
@.str.22 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@sock_fd_alloc.__str = internal global [2 x i8] c"/\00", section ".data_shared", align 1, !dbg !1067
@sock_fd_alloc.__str.23 = internal global [2 x i8] c"/\00", section ".data_shared", align 1, !dbg !1147
@.str.24 = private unnamed_addr constant [8 x i8] c"ret < 0\00", align 1
@sock_net_vfsops = internal global %struct.vfsops { i32 (%struct.mount*, i8*, i32, i8*)* null, i32 (%struct.mount*, i32)* null, i32 (%struct.mount*)* null, i32 (%struct.mount*, %struct.vnode*)* bitcast (i32 ()* @vfscore_vop_nullop to i32 (%struct.mount*, %struct.vnode*)*), i32 (%struct.mount*, %struct.statfs*)* null, %struct.vnops* bitcast ({ i32 (%struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)*, i32 (%struct.vnode*, i8*, %struct.vnode**)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*)*, i32 (%struct.vnode*, i64)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)*, i32 (%struct.vnode*, i32, i64, i64)*, i32 (%struct.vnode*, %struct.uio*)*, i32 (%struct.vnode*, i8*, i8*)* }* @sock_net_vnops to %struct.vnops*) }, section ".data_shared", align 8, !dbg !1151
@sock_net_vnops = internal global { i32 (%struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.uio*, i32)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)*, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)*, i32 (%struct.vnode*, i8*, %struct.vnode**)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, i8*, i32)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*, %struct.vattr*)*, i32 (%struct.vnode*)*, i32 (%struct.vnode*, i64)*, i32 (%struct.vnode*, %struct.vnode*, i8*)*, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)*, i32 (%struct.vnode*, i32, i64, i64)*, i32 (%struct.vnode*, %struct.uio*)*, i32 (%struct.vnode*, i8*, i8*)* } { i32 (%struct.vfscore_file*)* null, i32 (%struct.vnode*, %struct.vfscore_file*)* @sock_net_close, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)* @sock_net_read, i32 (%struct.vnode*, %struct.uio*, i32)* @sock_net_write, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i64)* null, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)* @sock_net_ioctl, i32 (%struct.vnode*, %struct.vfscore_file*)* null, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.dirent*)* null, i32 (%struct.vnode*, i8*, %struct.vnode**)* null, i32 (%struct.vnode*, i8*, i32)* null, i32 (%struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, %struct.vnode*, i8*, %struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, i8*, i32)* null, i32 (%struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, %struct.vattr*)* bitcast (i32 ()* @vfscore_vop_einval to i32 (%struct.vnode*, %struct.vattr*)*), i32 (%struct.vnode*, %struct.vattr*)* null, i32 (%struct.vnode*)* bitcast (i32 ()* @vfscore_vop_nullop to i32 (%struct.vnode*)*), i32 (%struct.vnode*, i64)* null, i32 (%struct.vnode*, %struct.vnode*, i8*)* null, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*)* null, i32 (%struct.vnode*, i32, i64, i64)* null, i32 (%struct.vnode*, %struct.uio*)* null, i32 (%struct.vnode*, i8*, i8*)* null }, section ".data_shared", align 8, !dbg !1153
@.str.26 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"m->lock_count > 0\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"sockets[i].select_waiting == 0\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"no socket given\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"this should be checked internally\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"p != NULL\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"invalid copylen, len would underflow\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"invalid copylen\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"fromaddr != NULL\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"from != NULL\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"fromlen != NULL\00", align 1
@.str.37 = private unnamed_addr constant [41 x i8] c"lwip_recvfrom_udp_raw: invalid arguments\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"buf != NULL\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"nready >= 0\00", align 1
@select_cb_list = internal unnamed_addr global %struct.lwip_select_cb* null, align 8, !dbg !1157
@.str.40 = private unnamed_addr constant [24 x i8] c"select_cb->prev == NULL\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"select_cb->prev != NULL\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"unknown event\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"Unknown socket option\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"Unhandled netconn type in SO_BINDTODEVICE\00", align 1
@.str.45 = private unnamed_addr constant [20 x i8] c"Invalid netif index\00", align 1
@socket_ipv6_multicast_memberships = internal unnamed_addr global [64 x %struct.lwip_socket_multicast_mld6_pair] zeroinitializer, align 16, !dbg !1159
@__A_VARIABLE = internal global i32 0

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_close(%struct.vnode* nocapture readonly, %struct.vfscore_file* nocapture readnone) #0 !dbg !1392 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !1401
  %5 = load i8*, i8** %4, align 8, !dbg !1401, !tbaa !1402
  %6 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 4, !dbg !1412
  %7 = load i32, i32* %6, align 8, !dbg !1412, !tbaa !1415
  %8 = icmp eq i32 %7, 1, !dbg !1412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1416
  br i1 %8, label %10, label %9, !dbg !1416, !prof !1417

; <label>:9:                                      ; preds = %2
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #8, !dbg !1418
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1418
  unreachable

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !1420
  %12 = bitcast i8* %11 to i32*, !dbg !1420
  %13 = load i32, i32* %12, align 8, !dbg !1420, !tbaa !1421
  %14 = tail call i32 @lwip_close(i32 %13) #8, !dbg !1423
  %15 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !1425, !tbaa !1426
  %16 = icmp eq %struct.uk_alloc* %15, null, !dbg !1441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1444
  br i1 %16, label %17, label %18, !dbg !1444, !prof !1445

; <label>:17:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !1446
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1446
  unreachable

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %15, i64 0, i32 5, !dbg !1448
  %20 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %19, align 8, !dbg !1448, !tbaa !1426
  tail call void %20(%struct.uk_alloc* nonnull %15, i8* nonnull %5) #10, !dbg !1449
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1451
  %21 = icmp slt i32 %14, 0, !dbg !1452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1454
  br i1 %21, label %22, label %43, !dbg !1454

; <label>:22:                                     ; preds = %18
  %23 = bitcast i32* %3 to i8*, !dbg !1455
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #6, !dbg !1455
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1470, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1480
  %25 = icmp ult i64 %24, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1481
  br i1 %25, label %32, label %26, !dbg !1481

; <label>:26:                                     ; preds = %22
  %27 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1482, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1485
  %28 = icmp ugt i64 %27, ptrtoint ([0 x i8]* @_end to i64), !dbg !1481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1486
  br i1 %28, label %32, label %29, !dbg !1486

; <label>:29:                                     ; preds = %26
  %30 = tail call i32* @__errno() #10, !dbg !1487
  %31 = load i32, i32* %30, align 4, !dbg !1487, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1493
  store i32 %31, i32* %3, align 4, !dbg !1495, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1495
  br label %41, !dbg !1495

; <label>:32:                                     ; preds = %26, %22
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1496, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1504
  %34 = and i64 %33, -65536, !dbg !1506
  %35 = or i64 %34, 4097, !dbg !1506
  %36 = add nsw i64 %35, -1, !dbg !1506
  %37 = inttoptr i64 %36 to i32*, !dbg !1507
  %38 = load i32, i32* %37, align 4096, !dbg !1508, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1509
  %39 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_GET_ERRNO\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %38, i32 ()* nonnull @_SOCK_NET_GET_ERRNO) #6, !dbg !1510, !srcloc !1511
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %3, i64 %39) #6, !dbg !1512, !srcloc !1515
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %40 = load i32, i32* %3, align 4, !dbg !1516, !tbaa !1492
  br label %41

; <label>:41:                                     ; preds = %29, %32
  %42 = phi i32 [ %40, %32 ], [ %31, %29 ], !dbg !1516
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #6, !dbg !1517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1518
  br label %43, !dbg !1519

; <label>:43:                                     ; preds = %18, %41
  %44 = phi i32 [ %42, %41 ], [ %14, %18 ], !dbg !1520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1522
  ret i32 %44, !dbg !1522
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: inlinehint noredzone nounwind
define internal void @uk_pr_crit(i8*, ...) unnamed_addr #3 !dbg !1045 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*, !dbg !1524
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #6, !dbg !1524
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, !dbg !1526
  call void @llvm.va_start(i8* nonnull %3), !dbg !1526
  call void @_uk_vprintk(i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @uk_pr_crit.__str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @uk_pr_crit.__str.20, i64 0, i64 0), i32 198, i8* %0, %struct.__va_list_tag* nonnull %4) #10, !dbg !1527
  call void @llvm.va_end(i8* nonnull %3), !dbg !1530
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #6, !dbg !1531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1531
  ret void, !dbg !1531
}

; Function Attrs: noredzone noreturn
declare dso_local void @ukplat_terminate(i32) local_unnamed_addr #4

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_close(i32) local_unnamed_addr #0 !dbg !1532 {
  %2 = alloca %struct.ip_addr, align 16
  %3 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !1556
  %4 = icmp eq %struct.lwip_sock* %3, null, !dbg !1558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1560
  br i1 %4, label %90, label %5, !dbg !1560

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %3, i64 0, i32 0, !dbg !1561
  %7 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !1561, !tbaa !1563
  %8 = icmp eq %struct.netconn* %7, null, !dbg !1566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1567
  br i1 %8, label %15, label %9, !dbg !1567

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.netconn, %struct.netconn* %7, i64 0, i32 0, !dbg !1568
  %11 = load i32, i32* %10, align 8, !dbg !1568, !tbaa !1570
  %12 = and i32 %11, 240, !dbg !1568
  %13 = icmp eq i32 %12, 16, !dbg !1575
  %14 = zext i1 %13 to i32, !dbg !1575
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1576
  br label %21, !dbg !1576

; <label>:15:                                     ; preds = %5
  %16 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %3, i64 0, i32 1, !dbg !1577
  %17 = bitcast %union.lwip_sock_lastdata* %16 to %struct.pbuf**, !dbg !1577
  %18 = load %struct.pbuf*, %struct.pbuf** %17, align 8, !dbg !1577, !tbaa !1581
  %19 = icmp eq %struct.pbuf* %18, null, !dbg !1577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1582
  br i1 %19, label %21, label %20, !dbg !1582

; <label>:20:                                     ; preds = %15
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0)) #8, !dbg !1583
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !1586
  tail call void @ukplat_terminate(i32 3) #9, !dbg !1586
  unreachable

; <label>:21:                                     ; preds = %15, %9
  %22 = phi i32 [ %14, %9 ], [ 0, %15 ], !dbg !1590
  %23 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #10, !dbg !1605
  %24 = icmp eq %struct.lwip_sock* %23, null, !dbg !1607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1610
  br i1 %24, label %51, label %25, !dbg !1609

; <label>:25:                                     ; preds = %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1612
  %26 = bitcast %struct.ip_addr* %2 to i8*
  %27 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %2, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %2, i64 0, i32 1
  %29 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %23, i64 0, i32 0
  %30 = bitcast %struct.ip_addr* %2 to <4 x i32>*
  br label %31, !dbg !1612

; <label>:31:                                     ; preds = %47, %25
  %32 = phi i64 [ 0, %25 ], [ %48, %47 ]
  %33 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %32, i32 0, !dbg !1613
  %34 = load %struct.lwip_sock*, %struct.lwip_sock** %33, align 16, !dbg !1613, !tbaa !1614
  %35 = icmp eq %struct.lwip_sock* %34, %23, !dbg !1617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1618
  br i1 %35, label %36, label %47, !dbg !1618

; <label>:36:                                     ; preds = %31
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #6, !dbg !1619
  %37 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %32, i32 2, i32 0, i64 0, !dbg !1620
  %38 = bitcast i32* %37 to <4 x i32>*, !dbg !1620
  %39 = load <4 x i32>, <4 x i32>* %38, align 4, !dbg !1620, !tbaa !1492
  store <4 x i32> %39, <4 x i32>* %30, align 16, !dbg !1620, !tbaa !1581
  %40 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %32, i32 2, i32 1, !dbg !1620
  %41 = load i8, i8* %40, align 4, !dbg !1620, !tbaa !1623
  store i8 %41, i8* %27, align 16, !dbg !1620, !tbaa !1581
  store i8 6, i8* %28, align 4, !dbg !1624, !tbaa !1626
  %42 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %32, i32 1, !dbg !1628
  %43 = load i8, i8* %42, align 8, !dbg !1628, !tbaa !1629
  store %struct.lwip_sock* null, %struct.lwip_sock** %33, align 16, !dbg !1631, !tbaa !1614
  store i8 0, i8* %42, align 8, !dbg !1632, !tbaa !1629
  %44 = bitcast i32* %37 to <4 x i32>*, !dbg !1633
  store <4 x i32> zeroinitializer, <4 x i32>* %44, align 4, !dbg !1633, !tbaa !1492
  store i8 0, i8* %40, align 4, !dbg !1633, !tbaa !1623
  %45 = load %struct.netconn*, %struct.netconn** %29, align 8, !dbg !1635, !tbaa !1563
  %46 = call signext i8 @netconn_join_leave_group_netif(%struct.netconn* %45, %struct.ip_addr* nonnull %2, i8 zeroext %43, i32 1) #10, !dbg !1637
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #6, !dbg !1638
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1639
  br label %47, !dbg !1639

; <label>:47:                                     ; preds = %36, %31
  %48 = add nuw nsw i64 %32, 1, !dbg !1640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1612
  %49 = icmp eq i64 %48, 64, !dbg !1642
  br i1 %49, label %50, label %31, !dbg !1612, !llvm.loop !1643

; <label>:50:                                     ; preds = %47
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1646
  br label %51, !dbg !1646

; <label>:51:                                     ; preds = %21, %50
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1646
  %52 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !1647, !tbaa !1563
  %53 = call signext i8 @netconn_prepare_delete(%struct.netconn* %52) #10, !dbg !1648
  %54 = icmp eq i8 %53, 0, !dbg !1650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1651
  br i1 %54, label %73, label %55, !dbg !1651

; <label>:55:                                     ; preds = %51
  %56 = call i32 @err_to_errno(i8 signext %53) #10, !dbg !1652
  %57 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1653, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1656
  %58 = icmp ult i64 %57, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1657
  br i1 %58, label %64, label %59, !dbg !1657

; <label>:59:                                     ; preds = %55
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1658, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1661
  %61 = icmp ugt i64 %60, ptrtoint ([0 x i8]* @_end to i64), !dbg !1657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1662
  br i1 %61, label %64, label %62, !dbg !1662

; <label>:62:                                     ; preds = %59
  %63 = call i32* @__errno() #10, !dbg !1663
  store i32 %56, i32* %63, align 4, !dbg !1669, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1670
  br label %88, !dbg !1671

; <label>:64:                                     ; preds = %59, %55
  %65 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1672, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1676
  %66 = and i64 %65, -65536, !dbg !1678
  %67 = or i64 %66, 4097, !dbg !1678
  %68 = add nsw i64 %67, -1, !dbg !1678
  %69 = inttoptr i64 %68 to i32*, !dbg !1679
  %70 = load i32, i32* %69, align 4096, !dbg !1680, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1681
  %71 = sub nsw i32 0, %56, !dbg !1682
  %72 = sext i32 %71 to i64, !dbg !1682
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %72, i32 %70, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !1682, !srcloc !1683
  br label %88

; <label>:73:                                     ; preds = %51
  call fastcc void @free_socket(%struct.lwip_sock* nonnull %3, i32 %22) #8, !dbg !1684
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1685, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1688
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1689
  br i1 %75, label %81, label %76, !dbg !1689

; <label>:76:                                     ; preds = %73
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1690, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1693
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !1689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1694
  br i1 %78, label %81, label %79, !dbg !1694

; <label>:79:                                     ; preds = %76
  %80 = call i32* @__errno() #10, !dbg !1698
  store i32 0, i32* %80, align 4, !dbg !1699, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1700
  br label %88, !dbg !1701

; <label>:81:                                     ; preds = %76, %73
  %82 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1702, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1706
  %83 = and i64 %82, -65536, !dbg !1708
  %84 = or i64 %83, 4097, !dbg !1708
  %85 = add nsw i64 %84, -1, !dbg !1708
  %86 = inttoptr i64 %85 to i32*, !dbg !1709
  %87 = load i32, i32* %86, align 4096, !dbg !1710, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1711
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %87, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !1712, !srcloc !1713
  br label %88

; <label>:88:                                     ; preds = %79, %81, %62, %64
  %89 = phi i32 [ -1, %64 ], [ -1, %62 ], [ 0, %81 ], [ 0, %79 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %90, !dbg !1714

; <label>:90:                                     ; preds = %88, %1
  %91 = phi i32 [ -1, %1 ], [ %89, %88 ], !dbg !1714
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1714
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1716
  ret i32 %91, !dbg !1716
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_write(%struct.vnode* nocapture readonly, %struct.uio* nocapture, i32) #0 !dbg !1717 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.msghdr, align 8
  %6 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !1729
  %7 = bitcast i8** %6 to %struct.sock_net_file**, !dbg !1729
  %8 = load %struct.sock_net_file*, %struct.sock_net_file** %7, align 8, !dbg !1729, !tbaa !1402
  %9 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %8, i64 0, i32 1, !dbg !1730
  %10 = load i32, i32* %9, align 8, !dbg !1730, !tbaa !1421
  %11 = bitcast %struct.uio* %1 to i64*, !dbg !1731
  %12 = load i64, i64* %11, align 8, !dbg !1731, !tbaa !1732
  %13 = getelementptr inbounds %struct.uio, %struct.uio* %1, i64 0, i32 1, !dbg !1734
  %14 = load i32, i32* %13, align 8, !dbg !1734, !tbaa !1735
  %15 = bitcast %struct.msghdr* %5 to i8*, !dbg !1760
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #6, !dbg !1760
  %16 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 0, !dbg !1761
  store i8* null, i8** %16, align 8, !dbg !1762, !tbaa !1763
  %17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 1, !dbg !1765
  store i32 0, i32* %17, align 8, !dbg !1766, !tbaa !1767
  %18 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 2, !dbg !1768
  %19 = bitcast %struct.iovec** %18 to i64*, !dbg !1769
  store i64 %12, i64* %19, align 8, !dbg !1769, !tbaa !1770
  %20 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 3, !dbg !1771
  store i32 %14, i32* %20, align 8, !dbg !1772, !tbaa !1773
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 4, !dbg !1774
  store i8* null, i8** %21, align 8, !dbg !1775, !tbaa !1776
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 5, !dbg !1777
  store i32 0, i32* %22, align 8, !dbg !1778, !tbaa !1779
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 6, !dbg !1780
  store i32 0, i32* %23, align 4, !dbg !1781, !tbaa !1782
  %24 = call i64 @lwip_sendmsg(i32 %10, %struct.msghdr* nonnull %5, i32 0) #10, !dbg !1784
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #6, !dbg !1785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1786
  %25 = trunc i64 %24 to i32, !dbg !1787
  %26 = icmp slt i32 %25, 0, !dbg !1788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1790
  br i1 %26, label %27, label %48, !dbg !1790

; <label>:27:                                     ; preds = %3
  %28 = bitcast i32* %4 to i8*, !dbg !1791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6, !dbg !1791
  %29 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1794, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1797
  %30 = icmp ult i64 %29, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1798
  br i1 %30, label %37, label %31, !dbg !1798

; <label>:31:                                     ; preds = %27
  %32 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1799, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1802
  %33 = icmp ugt i64 %32, ptrtoint ([0 x i8]* @_end to i64), !dbg !1798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1803
  br i1 %33, label %37, label %34, !dbg !1803

; <label>:34:                                     ; preds = %31
  %35 = call i32* @__errno() #10, !dbg !1804
  %36 = load i32, i32* %35, align 4, !dbg !1804, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1806
  store i32 %36, i32* %4, align 4, !dbg !1808, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1808
  br label %46, !dbg !1808

; <label>:37:                                     ; preds = %31, %27
  %38 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1809, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1813
  %39 = and i64 %38, -65536, !dbg !1815
  %40 = or i64 %39, 4097, !dbg !1815
  %41 = add nsw i64 %40, -1, !dbg !1815
  %42 = inttoptr i64 %41 to i32*, !dbg !1816
  %43 = load i32, i32* %42, align 4096, !dbg !1817, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1818
  %44 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_GET_ERRNO\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %43, i32 ()* nonnull @_SOCK_NET_GET_ERRNO) #6, !dbg !1819, !srcloc !1511
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i64 %44) #6, !dbg !1820, !srcloc !1515
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %45 = load i32, i32* %4, align 4, !dbg !1821, !tbaa !1492
  br label %46

; <label>:46:                                     ; preds = %34, %37
  %47 = phi i32 [ %45, %37 ], [ %36, %34 ], !dbg !1821
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6, !dbg !1822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1823
  br label %54, !dbg !1824

; <label>:48:                                     ; preds = %3
  %49 = shl i64 %24, 32, !dbg !1825
  %50 = ashr exact i64 %49, 32, !dbg !1825
  %51 = getelementptr inbounds %struct.uio, %struct.uio* %1, i64 0, i32 3, !dbg !1826
  %52 = load i64, i64* %51, align 8, !dbg !1827, !tbaa !1828
  %53 = sub nsw i64 %52, %50, !dbg !1827
  store i64 %53, i64* %51, align 8, !dbg !1827, !tbaa !1828
  br label %54, !dbg !1829

; <label>:54:                                     ; preds = %48, %46
  %55 = phi i32 [ %47, %46 ], [ 0, %48 ], !dbg !1830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1832
  ret i32 %55, !dbg !1832
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_writev(i32, %struct.iovec*, i32) local_unnamed_addr #0 !dbg !1737 {
  %4 = alloca %struct.msghdr, align 8
  %5 = bitcast %struct.msghdr* %4 to i8*, !dbg !1836
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6, !dbg !1836
  %6 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 0, !dbg !1837
  store i8* null, i8** %6, align 8, !dbg !1838, !tbaa !1763
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 1, !dbg !1839
  store i32 0, i32* %7, align 8, !dbg !1840, !tbaa !1767
  %8 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 2, !dbg !1841
  store %struct.iovec* %1, %struct.iovec** %8, align 8, !dbg !1842, !tbaa !1770
  %9 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 3, !dbg !1843
  store i32 %2, i32* %9, align 8, !dbg !1844, !tbaa !1773
  %10 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 4, !dbg !1845
  store i8* null, i8** %10, align 8, !dbg !1846, !tbaa !1776
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 5, !dbg !1847
  store i32 0, i32* %11, align 8, !dbg !1848, !tbaa !1779
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 6, !dbg !1849
  store i32 0, i32* %12, align 4, !dbg !1850, !tbaa !1782
  %13 = call i64 @lwip_sendmsg(i32 %0, %struct.msghdr* nonnull %4, i32 0) #8, !dbg !1852
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6, !dbg !1853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1854
  ret i64 %13, !dbg !1854
}

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_read(%struct.vnode* nocapture readonly, %struct.vfscore_file* nocapture readnone, %struct.uio* nocapture, i32) #0 !dbg !1855 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.msghdr, align 8
  %7 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !1869
  %8 = bitcast i8** %7 to %struct.sock_net_file**, !dbg !1869
  %9 = load %struct.sock_net_file*, %struct.sock_net_file** %8, align 8, !dbg !1869, !tbaa !1402
  %10 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %9, i64 0, i32 1, !dbg !1870
  %11 = load i32, i32* %10, align 8, !dbg !1870, !tbaa !1421
  %12 = bitcast %struct.uio* %2 to i64*, !dbg !1871
  %13 = load i64, i64* %12, align 8, !dbg !1871, !tbaa !1732
  %14 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 1, !dbg !1872
  %15 = load i32, i32* %14, align 8, !dbg !1872, !tbaa !1735
  %16 = bitcast %struct.msghdr* %6 to i8*, !dbg !1883
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #6, !dbg !1883
  %17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 0, !dbg !1884
  store i8* null, i8** %17, align 8, !dbg !1885, !tbaa !1763
  %18 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 1, !dbg !1886
  store i32 0, i32* %18, align 8, !dbg !1887, !tbaa !1767
  %19 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 2, !dbg !1888
  %20 = bitcast %struct.iovec** %19 to i64*, !dbg !1889
  store i64 %13, i64* %20, align 8, !dbg !1889, !tbaa !1770
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 3, !dbg !1890
  store i32 %15, i32* %21, align 8, !dbg !1891, !tbaa !1773
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 4, !dbg !1892
  store i8* null, i8** %22, align 8, !dbg !1893, !tbaa !1776
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 5, !dbg !1894
  store i32 0, i32* %23, align 8, !dbg !1895, !tbaa !1779
  %24 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 6, !dbg !1896
  store i32 0, i32* %24, align 4, !dbg !1897, !tbaa !1782
  %25 = call i64 @lwip_recvmsg(i32 %11, %struct.msghdr* nonnull %6, i32 0) #10, !dbg !1899
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #6, !dbg !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1901
  %26 = trunc i64 %25 to i32, !dbg !1902
  %27 = icmp slt i32 %26, 0, !dbg !1903
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1905
  br i1 %27, label %28, label %49, !dbg !1905

; <label>:28:                                     ; preds = %4
  %29 = bitcast i32* %5 to i8*, !dbg !1906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #6, !dbg !1906
  %30 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1909, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1912
  %31 = icmp ult i64 %30, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !1913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1913
  br i1 %31, label %38, label %32, !dbg !1913

; <label>:32:                                     ; preds = %28
  %33 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1914, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1917
  %34 = icmp ugt i64 %33, ptrtoint ([0 x i8]* @_end to i64), !dbg !1913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1918
  br i1 %34, label %38, label %35, !dbg !1918

; <label>:35:                                     ; preds = %32
  %36 = call i32* @__errno() #10, !dbg !1919
  %37 = load i32, i32* %36, align 4, !dbg !1919, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1921
  store i32 %37, i32* %5, align 4, !dbg !1923, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1923
  br label %47, !dbg !1923

; <label>:38:                                     ; preds = %32, %28
  %39 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !1924, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1928
  %40 = and i64 %39, -65536, !dbg !1930
  %41 = or i64 %40, 4097, !dbg !1930
  %42 = add nsw i64 %41, -1, !dbg !1930
  %43 = inttoptr i64 %42 to i32*, !dbg !1931
  %44 = load i32, i32* %43, align 4096, !dbg !1932, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1933
  %45 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_GET_ERRNO\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %44, i32 ()* nonnull @_SOCK_NET_GET_ERRNO) #6, !dbg !1934, !srcloc !1511
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %5, i64 %45) #6, !dbg !1935, !srcloc !1515
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %46 = load i32, i32* %5, align 4, !dbg !1936, !tbaa !1492
  br label %47

; <label>:47:                                     ; preds = %35, %38
  %48 = phi i32 [ %46, %38 ], [ %37, %35 ], !dbg !1936
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #6, !dbg !1937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1938
  br label %55, !dbg !1939

; <label>:49:                                     ; preds = %4
  %50 = shl i64 %25, 32, !dbg !1940
  %51 = ashr exact i64 %50, 32, !dbg !1940
  %52 = getelementptr inbounds %struct.uio, %struct.uio* %2, i64 0, i32 3, !dbg !1941
  %53 = load i64, i64* %52, align 8, !dbg !1942, !tbaa !1828
  %54 = sub nsw i64 %53, %51, !dbg !1942
  store i64 %54, i64* %52, align 8, !dbg !1942, !tbaa !1828
  br label %55, !dbg !1943

; <label>:55:                                     ; preds = %49, %47
  %56 = phi i32 [ %48, %47 ], [ 0, %49 ], !dbg !1944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1945
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1946
  ret i32 %56, !dbg !1946
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_readv(i32, %struct.iovec*, i32) local_unnamed_addr #0 !dbg !1874 {
  %4 = alloca %struct.msghdr, align 8
  %5 = bitcast %struct.msghdr* %4 to i8*, !dbg !1950
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #6, !dbg !1950
  %6 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 0, !dbg !1951
  store i8* null, i8** %6, align 8, !dbg !1952, !tbaa !1763
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 1, !dbg !1953
  store i32 0, i32* %7, align 8, !dbg !1954, !tbaa !1767
  %8 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 2, !dbg !1955
  store %struct.iovec* %1, %struct.iovec** %8, align 8, !dbg !1956, !tbaa !1770
  %9 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 3, !dbg !1957
  store i32 %2, i32* %9, align 8, !dbg !1958, !tbaa !1773
  %10 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 4, !dbg !1959
  store i8* null, i8** %10, align 8, !dbg !1960, !tbaa !1776
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 5, !dbg !1961
  store i32 0, i32* %11, align 8, !dbg !1962, !tbaa !1779
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 0, i32 6, !dbg !1963
  store i32 0, i32* %12, align 4, !dbg !1964, !tbaa !1782
  %13 = call i64 @lwip_recvmsg(i32 %0, %struct.msghdr* nonnull %4, i32 0) #8, !dbg !1966
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #6, !dbg !1967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1968
  ret i64 %13, !dbg !1968
}

; Function Attrs: noredzone nounwind
define dso_local i32 @_sock_net_ioctl(%struct.vnode* nocapture readonly, %struct.vfscore_file* nocapture readnone, i64, i8* readonly) #0 !dbg !1969 {
  %5 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !1982
  %6 = bitcast i8** %5 to %struct.sock_net_file**, !dbg !1982
  %7 = load %struct.sock_net_file*, %struct.sock_net_file** %6, align 8, !dbg !1982, !tbaa !1402
  %8 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %7, i64 0, i32 1, !dbg !1983
  %9 = load i32, i32* %8, align 8, !dbg !1983, !tbaa !1421
  %10 = tail call i32 @lwip_ioctl(i32 %9, i64 %2, i8* %3) #8, !dbg !1984
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1986
  ret i32 %10, !dbg !1986
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_ioctl(i32, i64, i8* readonly) local_unnamed_addr #0 !dbg !1987 {
  %4 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !2016
  %5 = icmp eq %struct.lwip_sock* %4, null, !dbg !2018
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2020
  br i1 %5, label %58, label %6, !dbg !2020

; <label>:6:                                      ; preds = %3
  %7 = icmp eq i64 %1, 21537, !dbg !2021
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2021
  br i1 %7, label %8, label %41, !dbg !2021

; <label>:8:                                      ; preds = %6
  %9 = icmp eq i8* %2, null, !dbg !2023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2025
  br i1 %9, label %20, label %10, !dbg !2025

; <label>:10:                                     ; preds = %8
  %11 = bitcast i8* %2 to i32*, !dbg !2026
  %12 = load i32, i32* %11, align 4, !dbg !2027, !tbaa !1492
  %13 = icmp eq i32 %12, 0, !dbg !2027
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2028
  br i1 %13, label %20, label %14, !dbg !2028

; <label>:14:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2029
  %15 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %4, i64 0, i32 0, !dbg !2031
  %16 = load %struct.netconn*, %struct.netconn** %15, align 8, !dbg !2031, !tbaa !1563
  %17 = getelementptr inbounds %struct.netconn, %struct.netconn* %16, i64 0, i32 8, !dbg !2031
  %18 = load i8, i8* %17, align 4, !dbg !2031, !tbaa !2036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2037
  %19 = or i8 %18, 2, !dbg !2031
  store i8 %19, i8* %17, align 4, !dbg !2031, !tbaa !2036
  br label %26, !dbg !2038

; <label>:20:                                     ; preds = %10, %8
  %21 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %4, i64 0, i32 0, !dbg !2031
  %22 = load %struct.netconn*, %struct.netconn** %21, align 8, !dbg !2031, !tbaa !1563
  %23 = getelementptr inbounds %struct.netconn, %struct.netconn* %22, i64 0, i32 8, !dbg !2031
  %24 = load i8, i8* %23, align 4, !dbg !2031, !tbaa !2036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2037
  %25 = and i8 %24, -3, !dbg !2039
  store i8 %25, i8* %23, align 4, !dbg !2039, !tbaa !2036
  br label %26

; <label>:26:                                     ; preds = %14, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %27 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2043, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2046
  %28 = icmp ult i64 %27, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2047
  br i1 %28, label %34, label %29, !dbg !2047

; <label>:29:                                     ; preds = %26
  %30 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2048, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2051
  %31 = icmp ugt i64 %30, ptrtoint ([0 x i8]* @_end to i64), !dbg !2047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2052
  br i1 %31, label %34, label %32, !dbg !2052

; <label>:32:                                     ; preds = %29
  %33 = tail call i32* @__errno() #10, !dbg !2056
  store i32 0, i32* %33, align 4, !dbg !2057, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2058
  br label %56, !dbg !2059

; <label>:34:                                     ; preds = %29, %26
  %35 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2060, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2064
  %36 = and i64 %35, -65536, !dbg !2066
  %37 = or i64 %36, 4097, !dbg !2066
  %38 = add nsw i64 %37, -1, !dbg !2066
  %39 = inttoptr i64 %38 to i32*, !dbg !2067
  %40 = load i32, i32* %39, align 4096, !dbg !2068, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2069
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %40, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2070, !srcloc !2071
  br label %56

; <label>:41:                                     ; preds = %6
  %42 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2073, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2076
  %43 = icmp ult i64 %42, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2077
  br i1 %43, label %49, label %44, !dbg !2077

; <label>:44:                                     ; preds = %41
  %45 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2078, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2081
  %46 = icmp ugt i64 %45, ptrtoint ([0 x i8]* @_end to i64), !dbg !2077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2082
  br i1 %46, label %49, label %47, !dbg !2082

; <label>:47:                                     ; preds = %44
  %48 = tail call i32* @__errno() #10, !dbg !2086
  store i32 88, i32* %48, align 4, !dbg !2087, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2088
  br label %56, !dbg !2089

; <label>:49:                                     ; preds = %44, %41
  %50 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2090, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2094
  %51 = and i64 %50, -65536, !dbg !2096
  %52 = or i64 %51, 4097, !dbg !2096
  %53 = add nsw i64 %52, -1, !dbg !2096
  %54 = inttoptr i64 %53 to i32*, !dbg !2097
  %55 = load i32, i32* %54, align 4096, !dbg !2098, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2099
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -88, i32 %55, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2100, !srcloc !2101
  br label %56

; <label>:56:                                     ; preds = %47, %49, %32, %34
  %57 = phi i32 [ 0, %34 ], [ 0, %32 ], [ -1, %49 ], [ -1, %47 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %58, !dbg !2102

; <label>:58:                                     ; preds = %56, %3
  %59 = phi i32 [ -1, %3 ], [ %57, %56 ], !dbg !2102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2104
  ret i32 %59, !dbg !2104
}

; Function Attrs: noredzone nounwind
define dso_local i32 @socket(i32, i32, i32) local_unnamed_addr #0 !dbg !2105 {
  %4 = tail call i32 @lwip_socket(i32 %0, i32 %1, i32 %2) #8, !dbg !2130
  %5 = icmp slt i32 %4, 0, !dbg !2131
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2133
  br i1 %5, label %26, label %6, !dbg !2133

; <label>:6:                                      ; preds = %3
  %7 = tail call fastcc i32 @sock_fd_alloc(i32 %4) #8, !dbg !2134
  %8 = icmp slt i32 %7, 0, !dbg !2135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2136
  br i1 %8, label %9, label %26, !dbg !2136

; <label>:9:                                      ; preds = %6
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2137, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2140
  %11 = icmp ult i64 %10, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2141
  br i1 %11, label %18, label %12, !dbg !2141

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2142, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2145
  %14 = icmp ugt i64 %13, ptrtoint ([0 x i8]* @_end to i64), !dbg !2141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2146
  br i1 %14, label %18, label %15, !dbg !2146

; <label>:15:                                     ; preds = %12
  %16 = sub nsw i32 0, %7, !dbg !2150
  %17 = tail call i32* @__errno() #10, !dbg !2151
  store i32 %16, i32* %17, align 4, !dbg !2152, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2153
  br label %28, !dbg !2154

; <label>:18:                                     ; preds = %12, %9
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2155, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2159
  %20 = and i64 %19, -65536, !dbg !2161
  %21 = or i64 %20, 4097, !dbg !2161
  %22 = add nsw i64 %21, -1, !dbg !2161
  %23 = inttoptr i64 %22 to i32*, !dbg !2162
  %24 = load i32, i32* %23, align 4096, !dbg !2163, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2164
  %25 = sext i32 %7 to i64, !dbg !2165
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %25, i32 %24, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2165, !srcloc !2166
  br label %28

; <label>:26:                                     ; preds = %6, %3, %28
  %27 = phi i32 [ -1, %28 ], [ -1, %3 ], [ %7, %6 ], !dbg !2167
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2168
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2170
  ret i32 %27, !dbg !2170

; <label>:28:                                     ; preds = %15, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %29 = tail call i32 @lwip_close(i32 %4) #8, !dbg !2171
  br label %26, !dbg !2172
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_socket(i32, i32, i32) local_unnamed_addr #0 !dbg !2173 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2212
  switch i32 %1, label %20 [
    i32 3, label %4
    i32 2, label %9
    i32 1, label %16
  ], !dbg !2212

; <label>:4:                                      ; preds = %3
  %5 = icmp eq i32 %0, 2, !dbg !2213
  %6 = select i1 %5, i32 64, i32 72, !dbg !2213
  %7 = trunc i32 %2 to i8, !dbg !2214
  %8 = tail call %struct.netconn* @netconn_new_with_proto_and_callback(i32 %6, i8 zeroext %7, void (%struct.netconn*, i32, i16)* nonnull @event_callback) #10, !dbg !2215
  br label %35, !dbg !2217

; <label>:9:                                      ; preds = %3
  %10 = icmp eq i32 %0, 2, !dbg !2218
  %11 = icmp eq i32 %2, 136, !dbg !2218
  %12 = select i1 %11, i32 33, i32 32, !dbg !2218
  %13 = or i32 %12, 8, !dbg !2218
  %14 = select i1 %10, i32 %12, i32 %13, !dbg !2218
  %15 = tail call %struct.netconn* @netconn_new_with_proto_and_callback(i32 %14, i8 zeroext 0, void (%struct.netconn*, i32, i16)* nonnull @event_callback) #10, !dbg !2218
  br label %35, !dbg !2219

; <label>:16:                                     ; preds = %3
  %17 = icmp eq i32 %0, 2, !dbg !2220
  %18 = select i1 %17, i32 16, i32 24, !dbg !2220
  %19 = tail call %struct.netconn* @netconn_new_with_proto_and_callback(i32 %18, i8 zeroext 0, void (%struct.netconn*, i32, i16)* nonnull @event_callback) #10, !dbg !2220
  br label %35, !dbg !2221

; <label>:20:                                     ; preds = %3
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2222, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2225
  %22 = icmp ult i64 %21, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2226
  br i1 %22, label %28, label %23, !dbg !2226

; <label>:23:                                     ; preds = %20
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2227, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2230
  %25 = icmp ugt i64 %24, ptrtoint ([0 x i8]* @_end to i64), !dbg !2226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2231
  br i1 %25, label %28, label %26, !dbg !2231

; <label>:26:                                     ; preds = %23
  %27 = tail call i32* @__errno() #10, !dbg !2235
  store i32 22, i32* %27, align 4, !dbg !2236, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2237
  br label %88, !dbg !2238

; <label>:28:                                     ; preds = %23, %20
  %29 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2239, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2243
  %30 = and i64 %29, -65536, !dbg !2245
  %31 = or i64 %30, 4097, !dbg !2245
  %32 = add nsw i64 %31, -1, !dbg !2245
  %33 = inttoptr i64 %32 to i32*, !dbg !2246
  %34 = load i32, i32* %33, align 4096, !dbg !2247, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2248
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %34, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2249, !srcloc !2250
  br label %88

; <label>:35:                                     ; preds = %16, %9, %4
  %36 = phi %struct.netconn* [ %19, %16 ], [ %15, %9 ], [ %8, %4 ], !dbg !2251
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2251
  %37 = icmp eq %struct.netconn* %36, null, !dbg !2252
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2253
  br i1 %37, label %38, label %53, !dbg !2253

; <label>:38:                                     ; preds = %35
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2254, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2257
  %40 = icmp ult i64 %39, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2258
  br i1 %40, label %46, label %41, !dbg !2258

; <label>:41:                                     ; preds = %38
  %42 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2259, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2262
  %43 = icmp ugt i64 %42, ptrtoint ([0 x i8]* @_end to i64), !dbg !2258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2263
  br i1 %43, label %46, label %44, !dbg !2263

; <label>:44:                                     ; preds = %41
  %45 = tail call i32* @__errno() #10, !dbg !2267
  store i32 105, i32* %45, align 4, !dbg !2268, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2269
  br label %88, !dbg !2270

; <label>:46:                                     ; preds = %41, %38
  %47 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2271, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2275
  %48 = and i64 %47, -65536, !dbg !2277
  %49 = or i64 %48, 4097, !dbg !2277
  %50 = add nsw i64 %49, -1, !dbg !2277
  %51 = inttoptr i64 %50 to i32*, !dbg !2278
  %52 = load i32, i32* %51, align 4096, !dbg !2279, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2280
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -105, i32 %52, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2281, !srcloc !2282
  br label %88

; <label>:53:                                     ; preds = %35
  %54 = tail call fastcc i32 @alloc_socket(%struct.netconn* nonnull %36, i32 0) #8, !dbg !2283
  %55 = icmp eq i32 %54, -1, !dbg !2285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2286
  br i1 %55, label %56, label %72, !dbg !2286

; <label>:56:                                     ; preds = %53
  %57 = tail call signext i8 @netconn_delete(%struct.netconn* nonnull %36) #10, !dbg !2287
  %58 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2288, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2291
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2292
  br i1 %59, label %65, label %60, !dbg !2292

; <label>:60:                                     ; preds = %56
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2293, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2296
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !2292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2297
  br i1 %62, label %65, label %63, !dbg !2297

; <label>:63:                                     ; preds = %60
  %64 = tail call i32* @__errno() #10, !dbg !2301
  store i32 23, i32* %64, align 4, !dbg !2302, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2303
  br label %88, !dbg !2304

; <label>:65:                                     ; preds = %60, %56
  %66 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2305, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2309
  %67 = and i64 %66, -65536, !dbg !2311
  %68 = or i64 %67, 4097, !dbg !2311
  %69 = add nsw i64 %68, -1, !dbg !2311
  %70 = inttoptr i64 %69 to i32*, !dbg !2312
  %71 = load i32, i32* %70, align 4096, !dbg !2313, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2314
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -23, i32 %71, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2315, !srcloc !2316
  br label %88

; <label>:72:                                     ; preds = %53
  %73 = getelementptr inbounds %struct.netconn, %struct.netconn* %36, i64 0, i32 7, !dbg !2317
  store i32 %54, i32* %73, align 8, !dbg !2318, !tbaa !2319
  %74 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2320, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2323
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2324
  br i1 %75, label %81, label %76, !dbg !2324

; <label>:76:                                     ; preds = %72
  %77 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2325, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2328
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !2324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2329
  br i1 %78, label %81, label %79, !dbg !2329

; <label>:79:                                     ; preds = %76
  %80 = tail call i32* @__errno() #10, !dbg !2333
  store i32 0, i32* %80, align 4, !dbg !2334, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2335
  br label %88, !dbg !2336

; <label>:81:                                     ; preds = %76, %72
  %82 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2337, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2341
  %83 = and i64 %82, -65536, !dbg !2343
  %84 = or i64 %83, 4097, !dbg !2343
  %85 = add nsw i64 %84, -1, !dbg !2343
  %86 = inttoptr i64 %85 to i32*, !dbg !2344
  %87 = load i32, i32* %86, align 4096, !dbg !2345, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2346
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %87, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2347, !srcloc !2348
  br label %88

; <label>:88:                                     ; preds = %79, %81, %63, %65, %44, %46, %26, %28
  %89 = phi i32 [ -1, %28 ], [ -1, %26 ], [ -1, %46 ], [ -1, %44 ], [ -1, %65 ], [ -1, %63 ], [ %54, %81 ], [ %54, %79 ], !dbg !2349
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2251
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2350
  ret i32 %89, !dbg !2350
}

; Function Attrs: noredzone nounwind
define internal fastcc i32 @sock_fd_alloc(i32) unnamed_addr #0 !dbg !1069 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.dentry*, align 8
  %5 = alloca %struct.vnode*, align 8
  %6 = bitcast i32* %2 to i8*, !dbg !2352
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !2352
  store i32 0, i32* %2, align 4, !dbg !2353, !tbaa !1492
  %7 = bitcast i32* %3 to i8*, !dbg !2354
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #6, !dbg !2354
  %8 = bitcast %struct.dentry** %4 to i8*, !dbg !2357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !2357
  %9 = bitcast %struct.vnode** %5 to i8*, !dbg !2358
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !2358
  %10 = ptrtoint %struct.vnode** %5 to i64, !dbg !2359
  %11 = add i64 %10, 65536, !dbg !2360
  %12 = inttoptr i64 %11 to %struct.vnode**, !dbg !2361
  %13 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2363, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2366
  %14 = icmp ult i64 %13, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2367
  br i1 %14, label %20, label %15, !dbg !2367

; <label>:15:                                     ; preds = %1
  %16 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2368, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2371
  %17 = icmp ugt i64 %16, ptrtoint ([0 x i8]* @_end to i64), !dbg !2367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2372
  br i1 %17, label %20, label %18, !dbg !2372

; <label>:18:                                     ; preds = %15
  %19 = call i32 @vfscore_alloc_fd() #10, !dbg !2373
  store i32 %19, i32* %3, align 4, !dbg !2373, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2373
  br label %29, !dbg !2373

; <label>:20:                                     ; preds = %15, %1
  %21 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2376, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2380
  %22 = and i64 %21, -65536, !dbg !2382
  %23 = or i64 %22, 4097, !dbg !2382
  %24 = add nsw i64 %23, -1, !dbg !2382
  %25 = inttoptr i64 %24 to i32*, !dbg !2383
  %26 = load i32, i32* %25, align 4096, !dbg !2384, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2385
  %27 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_alloc_fd\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i32 %26, i32 ()* nonnull @vfscore_alloc_fd) #6, !dbg !2386, !srcloc !2387
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %3, i64 %27) #6, !dbg !2388, !srcloc !2391
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %28 = load i32, i32* %3, align 4, !dbg !2392, !tbaa !1492
  br label %29

; <label>:29:                                     ; preds = %20, %18
  %30 = phi i32 [ %28, %20 ], [ %19, %18 ], !dbg !2392
  %31 = icmp slt i32 %30, 0, !dbg !2394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2395
  br i1 %31, label %32, label %33, !dbg !2395

; <label>:32:                                     ; preds = %29
  store i32 -23, i32* %2, align 4, !dbg !2396, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2399
  br label %263, !dbg !2399

; <label>:33:                                     ; preds = %29
  %34 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2401, !tbaa !1426
  %35 = icmp eq %struct.uk_alloc* %34, null, !dbg !2411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2413
  br i1 %35, label %36, label %38, !dbg !2413, !prof !1445

; <label>:36:                                     ; preds = %33
  %37 = call i32* @__errno() #10, !dbg !2414
  store i32 12, i32* %37, align 4, !dbg !2416, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2417
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2419
  br label %44, !dbg !2419

; <label>:38:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2429
  %39 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %34, i64 0, i32 1, !dbg !2431
  %40 = bitcast {}** %39 to i8* (%struct.uk_alloc*, i64, i64)**, !dbg !2431
  %41 = load i8* (%struct.uk_alloc*, i64, i64)*, i8* (%struct.uk_alloc*, i64, i64)** %40, align 8, !dbg !2431, !tbaa !1426
  %42 = call i8* %41(%struct.uk_alloc* nonnull %34, i64 1, i64 16) #10, !dbg !2432
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2418
  %43 = icmp eq i8* %42, null, !dbg !2435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2419
  br i1 %43, label %44, label %45, !dbg !2419

; <label>:44:                                     ; preds = %36, %38
  store i32 -12, i32* %2, align 4, !dbg !2437, !tbaa !1492
  br label %241, !dbg !2439

; <label>:45:                                     ; preds = %38
  %46 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2440, !tbaa !1426
  %47 = icmp eq %struct.uk_alloc* %46, null, !dbg !2445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2446
  br i1 %47, label %48, label %50, !dbg !2446, !prof !1445

; <label>:48:                                     ; preds = %45
  %49 = call i32* @__errno() #10, !dbg !2447
  store i32 12, i32* %49, align 4, !dbg !2448, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2449
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2451
  br label %56, !dbg !2451

; <label>:50:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2456
  %51 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %46, i64 0, i32 1, !dbg !2457
  %52 = bitcast {}** %51 to i8* (%struct.uk_alloc*, i64, i64)**, !dbg !2457
  %53 = load i8* (%struct.uk_alloc*, i64, i64)*, i8* (%struct.uk_alloc*, i64, i64)** %52, align 8, !dbg !2457, !tbaa !1426
  %54 = call i8* %53(%struct.uk_alloc* nonnull %46, i64 1, i64 80) #10, !dbg !2458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2460
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2450
  %55 = icmp eq i8* %54, null, !dbg !2461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2451
  br i1 %55, label %56, label %57, !dbg !2451

; <label>:56:                                     ; preds = %48, %50
  store i32 -12, i32* %2, align 4, !dbg !2463, !tbaa !1492
  br label %234, !dbg !2465

; <label>:57:                                     ; preds = %50
  %58 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2466, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2469
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2470
  br i1 %59, label %67, label %60, !dbg !2470

; <label>:60:                                     ; preds = %57
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2471, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2474
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !2470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2475
  br i1 %62, label %67, label %63, !dbg !2475

; <label>:63:                                     ; preds = %60
  %64 = load i64, i64* @s_inode, align 8, !dbg !2476, !tbaa !2478
  %65 = add i64 %64, 1, !dbg !2476
  store i64 %65, i64* @s_inode, align 8, !dbg !2476, !tbaa !2478
  %66 = call i32 @vfscore_vget(%struct.mount* nonnull @s_mount, i64 %64, %struct.vnode** %12) #10, !dbg !2476
  store i32 %66, i32* %2, align 4, !dbg !2476, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2476
  br label %78, !dbg !2476

; <label>:67:                                     ; preds = %60, %57
  %68 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2479, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2483
  %69 = and i64 %68, -65536, !dbg !2485
  %70 = or i64 %69, 4097, !dbg !2485
  %71 = add nsw i64 %70, -1, !dbg !2485
  %72 = inttoptr i64 %71 to i32*, !dbg !2486
  %73 = load i32, i32* %72, align 4096, !dbg !2487, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2488
  %74 = load i64, i64* @s_inode, align 8, !dbg !2489, !tbaa !2478
  %75 = add i64 %74, 1, !dbg !2489
  store i64 %75, i64* @s_inode, align 8, !dbg !2489, !tbaa !2478
  %76 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_vget\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 ptrtoint (%struct.mount* @s_mount to i64), i64 %74, i64 %11, i32 %73, i32 (%struct.mount*, i64, %struct.vnode**)* nonnull @vfscore_vget) #6, !dbg !2489, !srcloc !2490
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %2, i64 %76) #6, !dbg !2491, !srcloc !2494
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %77 = load i32, i32* %2, align 4, !dbg !2495, !tbaa !1492
  br label %78

; <label>:78:                                     ; preds = %63, %67
  %79 = phi i32 [ %66, %63 ], [ %77, %67 ], !dbg !2495
  %80 = icmp eq i32 %79, 0, !dbg !2495
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2498
  br i1 %80, label %82, label %81, !dbg !2498, !prof !1417

; <label>:81:                                     ; preds = %78
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !2499
  call void @ukplat_terminate(i32 3) #9, !dbg !2499
  unreachable

; <label>:82:                                     ; preds = %78
  %83 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2501, !tbaa !1426
  %84 = icmp eq %struct.vnode* %83, null, !dbg !2503
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2504
  br i1 %84, label %85, label %86, !dbg !2504

; <label>:85:                                     ; preds = %82
  store i32 -12, i32* %2, align 4, !dbg !2505, !tbaa !1492
  br label %227, !dbg !2507

; <label>:86:                                     ; preds = %82
  %87 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2508, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2511
  %88 = icmp ult i64 %87, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2512
  br i1 %88, label %95, label %89, !dbg !2512

; <label>:89:                                     ; preds = %86
  %90 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2513, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2516
  %91 = icmp ugt i64 %90, ptrtoint ([0 x i8]* @_end to i64), !dbg !2512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2517
  br i1 %91, label %95, label %92, !dbg !2517

; <label>:92:                                     ; preds = %89
  %93 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2518, !tbaa !1426
  %94 = getelementptr inbounds %struct.vnode, %struct.vnode* %93, i64 0, i32 9, !dbg !2518
  call void @uk_mutex_unlock(%struct.uk_mutex* nonnull %94) #8, !dbg !2518
  br label %105, !dbg !2518

; <label>:95:                                     ; preds = %89, %86
  %96 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2520, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2524
  %97 = and i64 %96, -65536, !dbg !2526
  %98 = or i64 %97, 4097, !dbg !2526
  %99 = add nsw i64 %98, -1, !dbg !2526
  %100 = inttoptr i64 %99 to i32*, !dbg !2527
  %101 = load i32, i32* %100, align 4096, !dbg !2528, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2529
  %102 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2530, !tbaa !1426
  %103 = getelementptr inbounds %struct.vnode, %struct.vnode* %102, i64 0, i32 9, !dbg !2530
  %104 = ptrtoint %struct.uk_mutex* %103 to i64, !dbg !2530
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call uk_mutex_unlock\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %104, i32 %101, void (%struct.uk_mutex*)* nonnull @uk_mutex_unlock) #6, !dbg !2530, !srcloc !2531
  br label %105

; <label>:105:                                    ; preds = %92, %95
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %106 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2532, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2535
  %107 = icmp ult i64 %106, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2536
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2536
  br i1 %107, label %114, label %108, !dbg !2536

; <label>:108:                                    ; preds = %105
  %109 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2537, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2540
  %110 = icmp ugt i64 %109, ptrtoint ([0 x i8]* @_end to i64), !dbg !2536
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2541
  br i1 %110, label %114, label %111, !dbg !2541

; <label>:111:                                    ; preds = %108
  %112 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2542, !tbaa !1426
  %113 = call %struct.dentry* @dentry_alloc(%struct.dentry* null, %struct.vnode* %112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @sock_fd_alloc.__str, i64 0, i64 0)) #10, !dbg !2542
  store %struct.dentry* %113, %struct.dentry** %4, align 8, !dbg !2542, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2542
  br label %125, !dbg !2542

; <label>:114:                                    ; preds = %108, %105
  %115 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2545, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2549
  %116 = and i64 %115, -65536, !dbg !2551
  %117 = or i64 %116, 4097, !dbg !2551
  %118 = add nsw i64 %117, -1, !dbg !2551
  %119 = inttoptr i64 %118 to i32*, !dbg !2552
  %120 = load i32, i32* %119, align 4096, !dbg !2553, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2554
  %121 = inttoptr i64 %11 to i64*, !dbg !2555
  %122 = load i64, i64* %121, align 8, !dbg !2555, !tbaa !1426
  %123 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call dentry_alloc\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i64 %122, i64 ptrtoint ([2 x i8]* @sock_fd_alloc.__str.23 to i64), i32 %120, %struct.dentry* (%struct.dentry*, %struct.vnode*, i8*)* nonnull @dentry_alloc) #6, !dbg !2555, !srcloc !2556
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.dentry** nonnull %4, i64 %123) #6, !dbg !2557, !srcloc !2561
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %124 = load %struct.dentry*, %struct.dentry** %4, align 8, !dbg !2562, !tbaa !1426
  br label %125

; <label>:125:                                    ; preds = %114, %111
  %126 = phi %struct.dentry* [ %124, %114 ], [ %113, %111 ]
  %127 = icmp eq %struct.dentry* %126, null, !dbg !2562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2564
  br i1 %127, label %128, label %129, !dbg !2564

; <label>:128:                                    ; preds = %125
  store i32 -12, i32* %2, align 4, !dbg !2565, !tbaa !1492
  br label %210, !dbg !2567

; <label>:129:                                    ; preds = %125
  %130 = ptrtoint %struct.dentry* %126 to i64
  %131 = load i32, i32* %3, align 4, !dbg !2568, !tbaa !1492
  %132 = bitcast i8* %54 to i32*, !dbg !2569
  store i32 %131, i32* %132, align 8, !dbg !2570, !tbaa !2571
  %133 = getelementptr inbounds i8, i8* %54, i64 4, !dbg !2573
  %134 = bitcast i8* %133 to i32*, !dbg !2573
  store i32 3, i32* %134, align 4, !dbg !2574, !tbaa !2575
  %135 = getelementptr inbounds i8, i8* %54, i64 8, !dbg !2576
  %136 = bitcast i8* %135 to i32*, !dbg !2576
  store i32 1, i32* %136, align 8, !dbg !2577, !tbaa !2578
  %137 = getelementptr inbounds i8, i8* %54, i64 24, !dbg !2579
  %138 = bitcast i8* %137 to i8**, !dbg !2579
  store i8* %42, i8** %138, align 8, !dbg !2580, !tbaa !2581
  %139 = bitcast %struct.dentry** %4 to i64*, !dbg !2582
  %140 = getelementptr inbounds i8, i8* %54, i64 40, !dbg !2583
  %141 = bitcast i8* %140 to i64*, !dbg !2584
  store i64 %130, i64* %141, align 8, !dbg !2584, !tbaa !2585
  %142 = getelementptr inbounds i8, i8* %54, i64 32, !dbg !2586
  %143 = bitcast i8* %142 to i32*, !dbg !2586
  store i32 1, i32* %143, align 8, !dbg !2587, !tbaa !2588
  %144 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2589, !tbaa !1426
  %145 = getelementptr inbounds %struct.vnode, %struct.vnode* %144, i64 0, i32 11, !dbg !2590
  store i8* %42, i8** %145, align 8, !dbg !2591, !tbaa !1402
  %146 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2592, !tbaa !1426
  %147 = getelementptr inbounds %struct.vnode, %struct.vnode* %146, i64 0, i32 5, !dbg !2593
  store i32 6, i32* %147, align 4, !dbg !2594, !tbaa !2595
  %148 = bitcast i8* %42 to %struct.vfscore_file**, !dbg !2596
  %149 = bitcast i8* %42 to i8**, !dbg !2597
  store i8* %54, i8** %149, align 8, !dbg !2597, !tbaa !2598
  %150 = getelementptr inbounds i8, i8* %42, i64 8, !dbg !2599
  %151 = bitcast i8* %150 to i32*, !dbg !2599
  store i32 %0, i32* %151, align 8, !dbg !2600, !tbaa !1421
  %152 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2601, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2604
  %153 = icmp ult i64 %152, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2605
  br i1 %153, label %161, label %154, !dbg !2605

; <label>:154:                                    ; preds = %129
  %155 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2606, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2609
  %156 = icmp ugt i64 %155, ptrtoint ([0 x i8]* @_end to i64), !dbg !2605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2610
  br i1 %156, label %161, label %157, !dbg !2610

; <label>:157:                                    ; preds = %154
  %158 = load i32, i32* %3, align 4, !dbg !2611, !tbaa !1492
  %159 = load %struct.vfscore_file*, %struct.vfscore_file** %148, align 8, !dbg !2611, !tbaa !2598
  %160 = call i32 @vfscore_install_fd(i32 %158, %struct.vfscore_file* %159) #10, !dbg !2611
  store i32 %160, i32* %2, align 4, !dbg !2611, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2611
  br label %174, !dbg !2611

; <label>:161:                                    ; preds = %154, %129
  %162 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2613, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2617
  %163 = and i64 %162, -65536, !dbg !2619
  %164 = or i64 %163, 4097, !dbg !2619
  %165 = add nsw i64 %164, -1, !dbg !2619
  %166 = inttoptr i64 %165 to i32*, !dbg !2620
  %167 = load i32, i32* %166, align 4096, !dbg !2621, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2622
  %168 = load i32, i32* %3, align 4, !dbg !2623, !tbaa !1492
  %169 = sext i32 %168 to i64, !dbg !2623
  %170 = bitcast i8* %42 to i64*, !dbg !2623
  %171 = load i64, i64* %170, align 8, !dbg !2623, !tbaa !2598
  %172 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_install_fd\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %169, i64 %171, i32 %167, i32 (i32, %struct.vfscore_file*)* nonnull @vfscore_install_fd) #6, !dbg !2623, !srcloc !2624
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %2, i64 %172) #6, !dbg !2625, !srcloc !2628
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %173 = load i32, i32* %2, align 4, !dbg !2629, !tbaa !1492
  br label %174

; <label>:174:                                    ; preds = %161, %157
  %175 = phi i32 [ %173, %161 ], [ %160, %157 ], !dbg !2629
  %176 = icmp eq i32 %175, 0, !dbg !2629
  %177 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2631, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2634
  %178 = icmp uge i64 %177, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2637
  br i1 %176, label %179, label %196, !dbg !2636

; <label>:179:                                    ; preds = %174
  br i1 %178, label %180, label %185, !dbg !2638

; <label>:180:                                    ; preds = %179
  %181 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2639, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2642
  %182 = icmp ugt i64 %181, ptrtoint ([0 x i8]* @_end to i64), !dbg !2638
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2643
  br i1 %182, label %185, label %183, !dbg !2643

; <label>:183:                                    ; preds = %180
  %184 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2644, !tbaa !1426
  call void @vrele(%struct.vnode* %184) #10, !dbg !2644
  br label %194, !dbg !2644

; <label>:185:                                    ; preds = %180, %179
  %186 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2646, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2650
  %187 = and i64 %186, -65536, !dbg !2652
  %188 = or i64 %187, 4097, !dbg !2652
  %189 = add nsw i64 %188, -1, !dbg !2652
  %190 = inttoptr i64 %189 to i32*, !dbg !2653
  %191 = load i32, i32* %190, align 4096, !dbg !2654, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2655
  %192 = inttoptr i64 %11 to i64*, !dbg !2656
  %193 = load i64, i64* %192, align 8, !dbg !2656, !tbaa !1426
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vrele\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %193, i32 %191, void (%struct.vnode*)* nonnull @vrele) #6, !dbg !2656, !srcloc !2657
  br label %194

; <label>:194:                                    ; preds = %185, %183
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %195 = load i32, i32* %3, align 4, !dbg !2658, !tbaa !1492
  br label %263, !dbg !2659

; <label>:196:                                    ; preds = %174
  br i1 %178, label %197, label %202, !dbg !2660

; <label>:197:                                    ; preds = %196
  %198 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2661, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2664
  %199 = icmp ugt i64 %198, ptrtoint ([0 x i8]* @_end to i64), !dbg !2660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2665
  br i1 %199, label %202, label %200, !dbg !2665

; <label>:200:                                    ; preds = %197
  %201 = load %struct.dentry*, %struct.dentry** %4, align 8, !dbg !2666, !tbaa !1426
  call void @drele(%struct.dentry* %201) #10, !dbg !2666
  br label %210, !dbg !2666

; <label>:202:                                    ; preds = %197, %196
  %203 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2668, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2672
  %204 = and i64 %203, -65536, !dbg !2674
  %205 = or i64 %204, 4097, !dbg !2674
  %206 = add nsw i64 %205, -1, !dbg !2674
  %207 = inttoptr i64 %206 to i32*, !dbg !2675
  %208 = load i32, i32* %207, align 4096, !dbg !2676, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2677
  %209 = load i64, i64* %139, align 8, !dbg !2678, !tbaa !1426
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call drele\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %209, i32 %208, void (%struct.dentry*)* nonnull @drele) #6, !dbg !2678, !srcloc !2679
  br label %210

; <label>:210:                                    ; preds = %128, %202, %200
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %211 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2680, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2683
  %212 = icmp ult i64 %211, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2684
  br i1 %212, label %218, label %213, !dbg !2684

; <label>:213:                                    ; preds = %210
  %214 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2685, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2688
  %215 = icmp ugt i64 %214, ptrtoint ([0 x i8]* @_end to i64), !dbg !2684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2689
  br i1 %215, label %218, label %216, !dbg !2689

; <label>:216:                                    ; preds = %213
  %217 = load %struct.vnode*, %struct.vnode** %12, align 8, !dbg !2690, !tbaa !1426
  call void @vrele(%struct.vnode* %217) #10, !dbg !2690
  br label %227, !dbg !2690

; <label>:218:                                    ; preds = %213, %210
  %219 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2692, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2696
  %220 = and i64 %219, -65536, !dbg !2698
  %221 = or i64 %220, 4097, !dbg !2698
  %222 = add nsw i64 %221, -1, !dbg !2698
  %223 = inttoptr i64 %222 to i32*, !dbg !2699
  %224 = load i32, i32* %223, align 4096, !dbg !2700, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2701
  %225 = inttoptr i64 %11 to i64*, !dbg !2702
  %226 = load i64, i64* %225, align 8, !dbg !2702, !tbaa !1426
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vrele\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %226, i32 %224, void (%struct.vnode*)* nonnull @vrele) #6, !dbg !2702, !srcloc !2703
  br label %227

; <label>:227:                                    ; preds = %216, %218, %85
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %228 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2704, !tbaa !1426
  %229 = icmp eq %struct.uk_alloc* %228, null, !dbg !2711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2712
  br i1 %229, label %230, label %231, !dbg !2712, !prof !1445

; <label>:230:                                    ; preds = %227
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !2713
  call void @ukplat_terminate(i32 3) #9, !dbg !2713
  unreachable

; <label>:231:                                    ; preds = %227
  %232 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %228, i64 0, i32 5, !dbg !2714
  %233 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %232, align 8, !dbg !2714, !tbaa !1426
  call void %233(%struct.uk_alloc* nonnull %228, i8* nonnull %54) #10, !dbg !2715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2716
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2717
  br label %234, !dbg !2718

; <label>:234:                                    ; preds = %231, %56
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2719
  %235 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !2720, !tbaa !1426
  %236 = icmp eq %struct.uk_alloc* %235, null, !dbg !2727
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2728
  br i1 %236, label %237, label %238, !dbg !2728, !prof !1445

; <label>:237:                                    ; preds = %234
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !2729
  call void @ukplat_terminate(i32 3) #9, !dbg !2729
  unreachable

; <label>:238:                                    ; preds = %234
  %239 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %235, i64 0, i32 5, !dbg !2730
  %240 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %239, align 8, !dbg !2730, !tbaa !1426
  call void %240(%struct.uk_alloc* nonnull %235, i8* nonnull %42) #10, !dbg !2731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2732
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2733
  br label %241, !dbg !2734

; <label>:241:                                    ; preds = %44, %238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2735
  %242 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2736, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2739
  %243 = icmp ult i64 %242, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2740
  br i1 %243, label %250, label %244, !dbg !2740

; <label>:244:                                    ; preds = %241
  %245 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2741, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2744
  %246 = icmp ugt i64 %245, ptrtoint ([0 x i8]* @_end to i64), !dbg !2740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2745
  br i1 %246, label %250, label %247, !dbg !2745

; <label>:247:                                    ; preds = %244
  %248 = load i32, i32* %3, align 4, !dbg !2746, !tbaa !1492
  %249 = call i32 @vfscore_put_fd(i32 %248) #10, !dbg !2746
  br label %259, !dbg !2746

; <label>:250:                                    ; preds = %244, %241
  %251 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2748, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2752
  %252 = and i64 %251, -65536, !dbg !2754
  %253 = or i64 %252, 4097, !dbg !2754
  %254 = add nsw i64 %253, -1, !dbg !2754
  %255 = inttoptr i64 %254 to i32*, !dbg !2755
  %256 = load i32, i32* %255, align 4096, !dbg !2756, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2757
  %257 = load i32, i32* %3, align 4, !dbg !2758, !tbaa !1492
  %258 = sext i32 %257 to i64, !dbg !2758
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_fd\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %258, i32 %256, i32 (i32)* nonnull @vfscore_put_fd) #6, !dbg !2758, !srcloc !2759
  br label %259

; <label>:259:                                    ; preds = %250, %247
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %260 = load i32, i32* %2, align 4, !dbg !2760, !tbaa !1492
  %261 = icmp sgt i32 %260, -1, !dbg !2760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2399
  br i1 %261, label %262, label %263, !dbg !2399, !prof !1445

; <label>:262:                                    ; preds = %259
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #8, !dbg !2762
  call void @ukplat_terminate(i32 3) #9, !dbg !2762
  unreachable

; <label>:263:                                    ; preds = %259, %32, %194
  %264 = phi i32 [ %195, %194 ], [ -23, %32 ], [ %260, %259 ], !dbg !2735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2735
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !2764
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !2764
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #6, !dbg !2764
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !2764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2764
  ret i32 %264, !dbg !2764
}

; Function Attrs: inlinehint noredzone nounwind
define internal void @_SOCK_NET_SET_ERRNO(i32) #3 !dbg !1664 {
  %2 = sub nsw i32 0, %0, !dbg !2766
  %3 = tail call i32* @__errno() #10, !dbg !2767
  store i32 %2, i32* %3, align 4, !dbg !2768, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2769
  ret void, !dbg !2769
}

; Function Attrs: noredzone nounwind
define dso_local i32 @accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !2770 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !2817
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !2817
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2818, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2821
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2822
  br i1 %7, label %30, label %8, !dbg !2822

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2823, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2826
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !2822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2827
  br i1 %10, label %30, label %11, !dbg !2827

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !2839
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !2841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2843
  br i1 %13, label %26, label %14, !dbg !2843

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !2844
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !2844, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !2846
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !2846, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !2850
  %20 = load i32, i32* %19, align 4, !dbg !2850, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !2851
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2852
  br i1 %21, label %22, label %26, !dbg !2852

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !2853
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !2853
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !2853, !tbaa !2581
  br label %26, !dbg !2854

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !2855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2858
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !2860, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2860
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !2860
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !2861
  br label %42, !dbg !2860

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2862, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2866
  %32 = and i64 %31, -65536, !dbg !2868
  %33 = or i64 %32, 4097, !dbg !2868
  %34 = add nsw i64 %33, -1, !dbg !2868
  %35 = inttoptr i64 %34 to i32*, !dbg !2869
  %36 = load i32, i32* %35, align 4096, !dbg !2870, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2871
  %37 = sext i32 %0 to i64, !dbg !2872
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !2872, !srcloc !2873
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !2874, !srcloc !2878
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !2861, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !2861
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !2861
  %46 = icmp slt i64 %45, 1, !dbg !2861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2861
  br i1 %46, label %47, label %70, !dbg !2861

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !2861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2879
  br i1 %48, label %49, label %70, !dbg !2879

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2880, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2883
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2884
  br i1 %51, label %60, label %52, !dbg !2884

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2885, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2888
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !2884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2889
  br i1 %54, label %60, label %55, !dbg !2889

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !2890, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !2890
  %58 = sub nsw i32 0, %57, !dbg !2894
  %59 = call i32* @__errno() #10, !dbg !2895
  store i32 %58, i32* %59, align 4, !dbg !2896, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2897
  br label %116, !dbg !2890

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2898, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2902
  %62 = and i64 %61, -65536, !dbg !2904
  %63 = or i64 %62, 4097, !dbg !2904
  %64 = add nsw i64 %63, -1, !dbg !2904
  %65 = inttoptr i64 %64 to i32*, !dbg !2905
  %66 = load i32, i32* %65, align 4096, !dbg !2906, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2907
  %67 = load i64, i64* %43, align 8, !dbg !2908, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !2908
  %69 = ashr exact i64 %68, 32, !dbg !2908
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2908, !srcloc !2909
  br label %116

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !2910
  %72 = load i32, i32* %71, align 8, !dbg !2910, !tbaa !1421
  %73 = call i32 @lwip_accept(i32 %72, %struct.sockaddr* %1, i32* %2) #8, !dbg !2911
  %74 = icmp slt i32 %73, 0, !dbg !2913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2915
  br i1 %74, label %95, label %75, !dbg !2915

; <label>:75:                                     ; preds = %70
  %76 = call fastcc i32 @sock_fd_alloc(i32 %73) #8, !dbg !2916
  %77 = icmp slt i32 %76, 0, !dbg !2918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2919
  br i1 %77, label %78, label %95, !dbg !2919

; <label>:78:                                     ; preds = %75
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2920, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2923
  %80 = icmp ult i64 %79, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2924
  br i1 %80, label %87, label %81, !dbg !2924

; <label>:81:                                     ; preds = %78
  %82 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2925, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2928
  %83 = icmp ugt i64 %82, ptrtoint ([0 x i8]* @_end to i64), !dbg !2924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2929
  br i1 %83, label %87, label %84, !dbg !2929

; <label>:84:                                     ; preds = %81
  %85 = sub nsw i32 0, %76, !dbg !2933
  %86 = call i32* @__errno() #10, !dbg !2934
  store i32 %85, i32* %86, align 4, !dbg !2935, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2936
  br label %118, !dbg !2937

; <label>:87:                                     ; preds = %81, %78
  %88 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2938, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2942
  %89 = and i64 %88, -65536, !dbg !2944
  %90 = or i64 %89, 4097, !dbg !2944
  %91 = add nsw i64 %90, -1, !dbg !2944
  %92 = inttoptr i64 %91 to i32*, !dbg !2945
  %93 = load i32, i32* %92, align 4096, !dbg !2946, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2947
  %94 = sext i32 %76 to i64, !dbg !2948
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %94, i32 %93, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !2948, !srcloc !2949
  br label %118

; <label>:95:                                     ; preds = %75, %70, %118
  %96 = phi i32 [ -1, %118 ], [ -1, %70 ], [ %76, %75 ], !dbg !2950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2950
  %97 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2951, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2954
  %98 = icmp ult i64 %97, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !2955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2955
  br i1 %98, label %106, label %99, !dbg !2955

; <label>:99:                                     ; preds = %95
  %100 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2956, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2959
  %101 = icmp ugt i64 %100, ptrtoint ([0 x i8]* @_end to i64), !dbg !2955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2960
  br i1 %101, label %106, label %102, !dbg !2960

; <label>:102:                                    ; preds = %99
  %103 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !2961, !tbaa !1426
  %104 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %103, i64 0, i32 0, !dbg !2961
  %105 = load %struct.vfscore_file*, %struct.vfscore_file** %104, align 8, !dbg !2961, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %105) #10, !dbg !2961
  br label %116, !dbg !2961

; <label>:106:                                    ; preds = %99, %95
  %107 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !2963, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2967
  %108 = and i64 %107, -65536, !dbg !2969
  %109 = or i64 %108, 4097, !dbg !2969
  %110 = add nsw i64 %109, -1, !dbg !2969
  %111 = inttoptr i64 %110 to i32*, !dbg !2970
  %112 = load i32, i32* %111, align 4096, !dbg !2971, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2972
  %113 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !2973
  %114 = load i64*, i64** %113, align 8, !dbg !2973, !tbaa !1426
  %115 = load i64, i64* %114, align 8, !dbg !2973, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %115, i32 %112, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !2973, !srcloc !2974
  br label %116

; <label>:116:                                    ; preds = %102, %106, %55, %60
  %117 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %96, %102 ], [ %96, %106 ], !dbg !2975
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !2977
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2978
  ret i32 %117, !dbg !2978

; <label>:118:                                    ; preds = %84, %87
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %119 = call i32 @lwip_close(i32 %73) #8, !dbg !2979
  br label %95, !dbg !2980
}

; Function Attrs: inlinehint noredzone nounwind
define internal %struct.sock_net_file* @sock_net_file_get(i32) #3 !dbg !2829 {
  %2 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !2983
  %3 = icmp eq %struct.vfscore_file* %2, null, !dbg !2985
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2986
  br i1 %3, label %16, label %4, !dbg !2986

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %2, i64 0, i32 6, !dbg !2987
  %6 = load %struct.dentry*, %struct.dentry** %5, align 8, !dbg !2987, !tbaa !2585
  %7 = getelementptr inbounds %struct.dentry, %struct.dentry* %6, i64 0, i32 3, !dbg !2988
  %8 = load %struct.vnode*, %struct.vnode** %7, align 8, !dbg !2988, !tbaa !2847
  %9 = getelementptr inbounds %struct.vnode, %struct.vnode* %8, i64 0, i32 5, !dbg !2989
  %10 = load i32, i32* %9, align 4, !dbg !2989, !tbaa !2595
  %11 = icmp eq i32 %10, 6, !dbg !2990
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2991
  br i1 %11, label %12, label %16, !dbg !2991

; <label>:12:                                     ; preds = %4
  %13 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %2, i64 0, i32 4, !dbg !2992
  %14 = bitcast i8** %13 to %struct.sock_net_file**, !dbg !2992
  %15 = load %struct.sock_net_file*, %struct.sock_net_file** %14, align 8, !dbg !2992, !tbaa !2581
  br label %16, !dbg !2993

; <label>:16:                                     ; preds = %4, %1, %12
  %17 = phi %struct.sock_net_file* [ %15, %12 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %1 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %4 ], !dbg !2994
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2994
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2995
  ret %struct.sock_net_file* %17, !dbg !2995
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_accept(i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !2996 {
  %4 = alloca %struct.netconn*, align 8
  %5 = alloca %struct.ip_addr, align 16
  %6 = alloca i16, align 2
  %7 = alloca %union.sockaddr_aligned, align 4
  %8 = bitcast %struct.netconn** %4 to i8*, !dbg !3080
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !3080
  %9 = bitcast %struct.ip_addr* %5 to i8*, !dbg !3081
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3081
  %10 = bitcast i16* %6 to i8*, !dbg !3082
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #6, !dbg !3082
  store i16 0, i16* %6, align 2, !dbg !3083, !tbaa !3084
  %11 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !3085
  %12 = icmp eq %struct.lwip_sock* %11, null, !dbg !3087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3089
  br i1 %12, label %229, label %13, !dbg !3089

; <label>:13:                                     ; preds = %3
  %14 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %11, i64 0, i32 0, !dbg !3090
  %15 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !3090, !tbaa !1563
  %16 = call signext i8 @netconn_accept(%struct.netconn* %15, %struct.netconn** nonnull %4) #10, !dbg !3092
  %17 = icmp eq i8 %16, 0, !dbg !3094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3095
  br i1 %17, label %75, label %18, !dbg !3095

; <label>:18:                                     ; preds = %13
  %19 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !3096, !tbaa !1563
  %20 = getelementptr inbounds %struct.netconn, %struct.netconn* %19, i64 0, i32 0, !dbg !3096
  %21 = load i32, i32* %20, align 8, !dbg !3096, !tbaa !1570
  %22 = and i32 %21, 240, !dbg !3096
  %23 = icmp eq i32 %22, 16, !dbg !3097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3098
  br i1 %23, label %39, label %24, !dbg !3098

; <label>:24:                                     ; preds = %18
  %25 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3100, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3103
  %26 = icmp ult i64 %25, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3104
  br i1 %26, label %32, label %27, !dbg !3104

; <label>:27:                                     ; preds = %24
  %28 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3105, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3108
  %29 = icmp ugt i64 %28, ptrtoint ([0 x i8]* @_end to i64), !dbg !3104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3109
  br i1 %29, label %32, label %30, !dbg !3109

; <label>:30:                                     ; preds = %27
  %31 = call i32* @__errno() #10, !dbg !3113
  store i32 95, i32* %31, align 4, !dbg !3114, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3115
  br label %74, !dbg !3116

; <label>:32:                                     ; preds = %27, %24
  %33 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3117, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3121
  %34 = and i64 %33, -65536, !dbg !3123
  %35 = or i64 %34, 4097, !dbg !3123
  %36 = add nsw i64 %35, -1, !dbg !3123
  %37 = inttoptr i64 %36 to i32*, !dbg !3124
  %38 = load i32, i32* %37, align 4096, !dbg !3125, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3126
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -95, i32 %38, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3127, !srcloc !3128
  br label %74

; <label>:39:                                     ; preds = %18
  %40 = icmp eq i8 %16, -15, !dbg !3129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3130
  br i1 %40, label %41, label %56, !dbg !3130

; <label>:41:                                     ; preds = %39
  %42 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3132, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3135
  %43 = icmp ult i64 %42, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3136
  br i1 %43, label %49, label %44, !dbg !3136

; <label>:44:                                     ; preds = %41
  %45 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3137, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3140
  %46 = icmp ugt i64 %45, ptrtoint ([0 x i8]* @_end to i64), !dbg !3136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3141
  br i1 %46, label %49, label %47, !dbg !3141

; <label>:47:                                     ; preds = %44
  %48 = call i32* @__errno() #10, !dbg !3145
  store i32 22, i32* %48, align 4, !dbg !3146, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3147
  br label %74, !dbg !3148

; <label>:49:                                     ; preds = %44, %41
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3149, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3153
  %51 = and i64 %50, -65536, !dbg !3155
  %52 = or i64 %51, 4097, !dbg !3155
  %53 = add nsw i64 %52, -1, !dbg !3155
  %54 = inttoptr i64 %53 to i32*, !dbg !3156
  %55 = load i32, i32* %54, align 4096, !dbg !3157, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3158
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %55, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3159, !srcloc !3160
  br label %74

; <label>:56:                                     ; preds = %39
  %57 = call i32 @err_to_errno(i8 signext %16) #10, !dbg !3161
  %58 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3162, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3165
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3166
  br i1 %59, label %65, label %60, !dbg !3166

; <label>:60:                                     ; preds = %56
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3167, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3170
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !3166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3171
  br i1 %62, label %65, label %63, !dbg !3171

; <label>:63:                                     ; preds = %60
  %64 = call i32* @__errno() #10, !dbg !3172
  store i32 %57, i32* %64, align 4, !dbg !3175, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3176
  br label %74, !dbg !3177

; <label>:65:                                     ; preds = %60, %56
  %66 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3178, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3182
  %67 = and i64 %66, -65536, !dbg !3184
  %68 = or i64 %67, 4097, !dbg !3184
  %69 = add nsw i64 %68, -1, !dbg !3184
  %70 = inttoptr i64 %69 to i32*, !dbg !3185
  %71 = load i32, i32* %70, align 4096, !dbg !3186, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3187
  %72 = sub nsw i32 0, %57, !dbg !3188
  %73 = sext i32 %72 to i64, !dbg !3188
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %73, i32 %71, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3188, !srcloc !3189
  br label %74

; <label>:74:                                     ; preds = %63, %65, %47, %49, %30, %32
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %229, !dbg !3190

; <label>:75:                                     ; preds = %13
  %76 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3191, !tbaa !1426
  %77 = icmp eq %struct.netconn* %76, null, !dbg !3191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3194
  br i1 %77, label %78, label %79, !dbg !3194

; <label>:78:                                     ; preds = %75
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !3195
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !3198
  call void @ukplat_terminate(i32 3) #9, !dbg !3198
  unreachable

; <label>:79:                                     ; preds = %75
  %80 = call fastcc i32 @alloc_socket(%struct.netconn* nonnull %76, i32 1) #8, !dbg !3202
  %81 = icmp eq i32 %80, -1, !dbg !3204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3205
  br i1 %81, label %82, label %100, !dbg !3205

; <label>:82:                                     ; preds = %79
  %83 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3206, !tbaa !1426
  %84 = call signext i8 @netconn_delete(%struct.netconn* %83) #10, !dbg !3207
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3209, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3212
  %86 = icmp ult i64 %85, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3213
  br i1 %86, label %92, label %87, !dbg !3213

; <label>:87:                                     ; preds = %82
  %88 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3214, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3217
  %89 = icmp ugt i64 %88, ptrtoint ([0 x i8]* @_end to i64), !dbg !3213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3218
  br i1 %89, label %92, label %90, !dbg !3218

; <label>:90:                                     ; preds = %87
  %91 = call i32* @__errno() #10, !dbg !3222
  store i32 23, i32* %91, align 4, !dbg !3223, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3224
  br label %99, !dbg !3225

; <label>:92:                                     ; preds = %87, %82
  %93 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3226, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3230
  %94 = and i64 %93, -65536, !dbg !3232
  %95 = or i64 %94, 4097, !dbg !3232
  %96 = add nsw i64 %95, -1, !dbg !3232
  %97 = inttoptr i64 %96 to i32*, !dbg !3233
  %98 = load i32, i32* %97, align 4096, !dbg !3234, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3235
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -23, i32 %98, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3236, !srcloc !3237
  br label %99

; <label>:99:                                     ; preds = %92, %90
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %229, !dbg !3238

; <label>:100:                                    ; preds = %79
  %101 = icmp ult i32 %80, 64, !dbg !3239
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3239
  br i1 %101, label %103, label %102, !dbg !3239

; <label>:102:                                    ; preds = %100
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #8, !dbg !3242
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !3245
  call void @ukplat_terminate(i32 3) #9, !dbg !3245
  unreachable

; <label>:103:                                    ; preds = %100
  %104 = sext i32 %80 to i64, !dbg !3249
  %105 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !3250
  %106 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3253, !tbaa !1426
  %107 = getelementptr inbounds %struct.netconn, %struct.netconn* %106, i64 0, i32 7, !dbg !3254
  %108 = load i32, i32* %107, align 8, !dbg !3254, !tbaa !2319
  store i32 %80, i32* %107, align 8, !dbg !3255, !tbaa !2319
  call void @ukplat_lcpu_restore_irqf(i64 %105) #10, !dbg !3256
  %109 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3257, !tbaa !1426
  %110 = getelementptr inbounds %struct.netconn, %struct.netconn* %109, i64 0, i32 10, !dbg !3259
  %111 = load void (%struct.netconn*, i32, i16)*, void (%struct.netconn*, i32, i16)** %110, align 8, !dbg !3259, !tbaa !3260
  %112 = icmp eq void (%struct.netconn*, i32, i16)* %111, null, !dbg !3257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3261
  br i1 %112, label %127, label %113, !dbg !3261

; <label>:113:                                    ; preds = %103
  %114 = shl i32 %108, 16, !dbg !3262
  %115 = xor i32 %114, -65536, !dbg !3262
  call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !3263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3265
  %116 = icmp sgt i32 %115, 0, !dbg !3266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3265
  br i1 %116, label %117, label %126, !dbg !3265

; <label>:117:                                    ; preds = %113
  %118 = lshr exact i32 %115, 16
  br label %119, !dbg !3268

; <label>:119:                                    ; preds = %117, %119
  %120 = phi i32 [ %121, %119 ], [ %118, %117 ]
  %121 = add nsw i32 %120, -1, !dbg !3268
  %122 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3270, !tbaa !1426
  %123 = getelementptr inbounds %struct.netconn, %struct.netconn* %122, i64 0, i32 10, !dbg !3271
  %124 = load void (%struct.netconn*, i32, i16)*, void (%struct.netconn*, i32, i16)** %123, align 8, !dbg !3271, !tbaa !3260
  call void %124(%struct.netconn* %122, i32 0, i16 zeroext 0) #10, !dbg !3270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3265
  %125 = icmp sgt i32 %120, 1, !dbg !3266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3265
  br i1 %125, label %119, label %126, !dbg !3265, !llvm.loop !3272

; <label>:126:                                    ; preds = %119, %113
  call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !3274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3275
  br label %127, !dbg !3275

; <label>:127:                                    ; preds = %103, %126
  %128 = icmp ne %struct.sockaddr* %1, null, !dbg !3276
  %129 = icmp ne i32* %2, null, !dbg !3277
  %130 = and i1 %128, %129, !dbg !3278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3278
  br i1 %130, label %131, label %213, !dbg !3278

; <label>:131:                                    ; preds = %127
  %132 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 0, !dbg !3279
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %132) #6, !dbg !3279
  %133 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3280, !tbaa !1426
  %134 = call signext i8 @netconn_getaddr(%struct.netconn* %133, %struct.ip_addr* nonnull %5, i16* nonnull %6, i8 zeroext 0) #10, !dbg !3280
  %135 = icmp eq i8 %134, 0, !dbg !3282
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3283
  br i1 %135, label %171, label %136, !dbg !3283

; <label>:136:                                    ; preds = %131
  %137 = load %struct.netconn*, %struct.netconn** %4, align 8, !dbg !3284, !tbaa !1426
  %138 = call signext i8 @netconn_delete(%struct.netconn* %137) #10, !dbg !3285
  %139 = call i64 @ukplat_lcpu_save_irqf() #10, !dbg !3298
  %140 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %104, i32 1, !dbg !3317
  %141 = bitcast %union.lwip_sock_lastdata* %140 to %struct.pbuf**, !dbg !3317
  %142 = load %struct.pbuf*, %struct.pbuf** %141, align 8, !dbg !3317
  store %struct.pbuf* null, %struct.pbuf** %141, align 8, !dbg !3318, !tbaa !1581
  %143 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %104, i32 0, !dbg !3319
  %144 = load %struct.netconn*, %struct.netconn** %143, align 8, !dbg !3319, !tbaa !1563
  store %struct.netconn* null, %struct.netconn** %143, align 8, !dbg !3320, !tbaa !1563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3321
  call void @ukplat_lcpu_restore_irqf(i64 %139) #10, !dbg !3323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3324
  %145 = icmp eq %struct.pbuf* %142, null, !dbg !3338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3340
  br i1 %145, label %148, label %146, !dbg !3340

; <label>:146:                                    ; preds = %136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3341
  %147 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %142) #10, !dbg !3343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3346
  br label %148, !dbg !3346

; <label>:148:                                    ; preds = %146, %136
  %149 = icmp eq %struct.netconn* %144, null, !dbg !3347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3349
  br i1 %149, label %152, label %150, !dbg !3349

; <label>:150:                                    ; preds = %148
  %151 = call signext i8 @netconn_delete(%struct.netconn* nonnull %144) #10, !dbg !3350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3352
  br label %152, !dbg !3352

; <label>:152:                                    ; preds = %148, %150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3353
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3354
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3355
  %153 = call i32 @err_to_errno(i8 signext %134) #10, !dbg !3356
  %154 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3357, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3360
  %155 = icmp ult i64 %154, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3361
  br i1 %155, label %161, label %156, !dbg !3361

; <label>:156:                                    ; preds = %152
  %157 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3362, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3365
  %158 = icmp ugt i64 %157, ptrtoint ([0 x i8]* @_end to i64), !dbg !3361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3366
  br i1 %158, label %161, label %159, !dbg !3366

; <label>:159:                                    ; preds = %156
  %160 = call i32* @__errno() #10, !dbg !3367
  store i32 %153, i32* %160, align 4, !dbg !3370, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3371
  br label %170, !dbg !3372

; <label>:161:                                    ; preds = %156, %152
  %162 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3373, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3377
  %163 = and i64 %162, -65536, !dbg !3379
  %164 = or i64 %163, 4097, !dbg !3379
  %165 = add nsw i64 %164, -1, !dbg !3379
  %166 = inttoptr i64 %165 to i32*, !dbg !3380
  %167 = load i32, i32* %166, align 4096, !dbg !3381, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3382
  %168 = sub nsw i32 0, %153, !dbg !3383
  %169 = sext i32 %168 to i64, !dbg !3383
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %169, i32 %167, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3383, !srcloc !3384
  br label %170

; <label>:170:                                    ; preds = %161, %159
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3385
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %132) #6, !dbg !3386
  br label %229

; <label>:171:                                    ; preds = %131
  %172 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %5, i64 0, i32 1, !dbg !3387
  %173 = load i8, i8* %172, align 4, !dbg !3387, !tbaa !1626
  %174 = icmp eq i8 %173, 46, !dbg !3387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3387
  br i1 %174, label %177, label %175, !dbg !3387

; <label>:175:                                    ; preds = %171
  %176 = icmp eq i8 %173, 6, !dbg !3387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3390
  br i1 %176, label %177, label %191, !dbg !3390

; <label>:177:                                    ; preds = %171, %175
  store i8 28, i8* %132, align 4, !dbg !3391, !tbaa !3394
  %178 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 1, !dbg !3391
  store i8 10, i8* %178, align 1, !dbg !3391, !tbaa !3397
  %179 = load i16, i16* %6, align 2, !dbg !3391, !tbaa !3084
  %180 = call zeroext i16 @lwip_htons(i16 zeroext %179) #10, !dbg !3391
  %181 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 2, !dbg !3391
  store i16 %180, i16* %181, align 2, !dbg !3391, !tbaa !3398
  %182 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 3, !dbg !3391
  store i32 0, i32* %182, align 4, !dbg !3391, !tbaa !3399
  %183 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 4, i32 0, i32 0, i64 0, !dbg !3400
  %184 = bitcast %struct.ip_addr* %5 to <4 x i32>*, !dbg !3400
  %185 = load <4 x i32>, <4 x i32>* %184, align 16, !dbg !3400, !tbaa !1581
  %186 = bitcast i32* %183 to <4 x i32>*, !dbg !3400
  store <4 x i32> %185, <4 x i32>* %186, align 4, !dbg !3400, !tbaa !1581
  %187 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %5, i64 0, i32 0, i32 0, i32 1, !dbg !3391
  %188 = load i8, i8* %187, align 16, !dbg !3391, !tbaa !1581
  %189 = zext i8 %188 to i32, !dbg !3391
  %190 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 5, !dbg !3391
  store i32 %189, i32* %190, align 4, !dbg !3391, !tbaa !3402
  br label %202, !dbg !3403

; <label>:191:                                    ; preds = %175
  store i8 16, i8* %132, align 4, !dbg !3404, !tbaa !3407
  %192 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 1, !dbg !3404
  store i8 2, i8* %192, align 1, !dbg !3404, !tbaa !3410
  %193 = load i16, i16* %6, align 2, !dbg !3404, !tbaa !3084
  %194 = call zeroext i16 @lwip_htons(i16 zeroext %193) #10, !dbg !3404
  %195 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 2, !dbg !3404
  store i16 %194, i16* %195, align 2, !dbg !3404, !tbaa !3411
  %196 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %5, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !3404
  %197 = load i32, i32* %196, align 16, !dbg !3404, !tbaa !1581
  %198 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 3, !dbg !3404
  store i32 %197, i32* %198, align 4, !dbg !3404, !tbaa !3412
  %199 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %7, i64 0, i32 0, i32 4, !dbg !3404
  %200 = bitcast %struct.in6_addr* %199 to i8*, !dbg !3404
  %201 = call i8* @memset(i8* nonnull %200, i32 0, i64 8) #10, !dbg !3404
  br label %202

; <label>:202:                                    ; preds = %191, %177
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %203 = load i32, i32* %2, align 4, !dbg !3413, !tbaa !1492
  %204 = load i8, i8* %132, align 4, !dbg !3415, !tbaa !1581
  %205 = zext i8 %204 to i32, !dbg !3416
  %206 = icmp ugt i32 %203, %205, !dbg !3417
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3418
  br i1 %206, label %207, label %208, !dbg !3418

; <label>:207:                                    ; preds = %202
  store i32 %205, i32* %2, align 4, !dbg !3419, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3421
  br label %208, !dbg !3421

; <label>:208:                                    ; preds = %207, %202
  %209 = phi i32 [ %205, %207 ], [ %203, %202 ], !dbg !3422
  %210 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0, !dbg !3422
  %211 = zext i32 %209 to i64, !dbg !3422
  %212 = call i8* @memcpy(i8* %210, i8* nonnull %132, i64 %211) #10, !dbg !3422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3386
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %132) #6, !dbg !3386
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %213

; <label>:213:                                    ; preds = %208, %127
  %214 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3424, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3427
  %215 = icmp ult i64 %214, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3428
  br i1 %215, label %221, label %216, !dbg !3428

; <label>:216:                                    ; preds = %213
  %217 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3429, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3432
  %218 = icmp ugt i64 %217, ptrtoint ([0 x i8]* @_end to i64), !dbg !3428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3433
  br i1 %218, label %221, label %219, !dbg !3433

; <label>:219:                                    ; preds = %216
  %220 = call i32* @__errno() #10, !dbg !3437
  store i32 0, i32* %220, align 4, !dbg !3438, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3439
  br label %228, !dbg !3440

; <label>:221:                                    ; preds = %216, %213
  %222 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3441, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3445
  %223 = and i64 %222, -65536, !dbg !3447
  %224 = or i64 %223, 4097, !dbg !3447
  %225 = add nsw i64 %224, -1, !dbg !3447
  %226 = inttoptr i64 %225 to i32*, !dbg !3448
  %227 = load i32, i32* %226, align 4096, !dbg !3449, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3450
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %227, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3451, !srcloc !3452
  br label %228

; <label>:228:                                    ; preds = %221, %219
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %229, !dbg !3453

; <label>:229:                                    ; preds = %3, %170, %228, %99, %74
  %230 = phi i32 [ -1, %74 ], [ -1, %99 ], [ %80, %228 ], [ -1, %170 ], [ -1, %3 ], !dbg !3454
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #6, !dbg !3456
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !3456
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !3456
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3456
  ret i32 %230, !dbg !3456
}

; Function Attrs: noredzone
declare dso_local void @vfscore_put_file(%struct.vfscore_file*) #5

; Function Attrs: noredzone nounwind
define dso_local i32 @bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !3457 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !3492
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3492
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !3493, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3494, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3497
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3498
  br i1 %7, label %30, label %8, !dbg !3498

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3499, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3502
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !3498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3503
  br i1 %10, label %30, label %11, !dbg !3503

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !3508
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !3510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3511
  br i1 %13, label %26, label %14, !dbg !3511

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !3512
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !3512, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !3513
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !3513, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !3514
  %20 = load i32, i32* %19, align 4, !dbg !3514, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !3515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3516
  br i1 %21, label %22, label %26, !dbg !3516

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !3517
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !3517
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !3517, !tbaa !2581
  br label %26, !dbg !3518

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !3519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3521
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !3522, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3522
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !3522
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !3523
  br label %42, !dbg !3522

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3524, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3528
  %32 = and i64 %31, -65536, !dbg !3530
  %33 = or i64 %32, 4097, !dbg !3530
  %34 = add nsw i64 %33, -1, !dbg !3530
  %35 = inttoptr i64 %34 to i32*, !dbg !3531
  %36 = load i32, i32* %35, align 4096, !dbg !3532, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3533
  %37 = sext i32 %0 to i64, !dbg !3534
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !3534, !srcloc !3535
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !3536, !srcloc !3540
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !3523, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !3523
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !3523
  %46 = icmp slt i64 %45, 1, !dbg !3523
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3523
  br i1 %46, label %47, label %70, !dbg !3523

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !3523
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3541
  br i1 %48, label %49, label %70, !dbg !3541

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3542, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3545
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3546
  br i1 %51, label %60, label %52, !dbg !3546

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3547, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3550
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !3546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3551
  br i1 %54, label %60, label %55, !dbg !3551

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !3552, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !3552
  %58 = sub nsw i32 0, %57, !dbg !3556
  %59 = call i32* @__errno() #10, !dbg !3557
  store i32 %58, i32* %59, align 4, !dbg !3558, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3559
  br label %95, !dbg !3552

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3560, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3564
  %62 = and i64 %61, -65536, !dbg !3566
  %63 = or i64 %62, 4097, !dbg !3566
  %64 = add nsw i64 %63, -1, !dbg !3566
  %65 = inttoptr i64 %64 to i32*, !dbg !3567
  %66 = load i32, i32* %65, align 4096, !dbg !3568, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3569
  %67 = load i64, i64* %43, align 8, !dbg !3570, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !3570
  %69 = ashr exact i64 %68, 32, !dbg !3570
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3570, !srcloc !3571
  br label %95

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !3572
  %72 = load i32, i32* %71, align 8, !dbg !3572, !tbaa !1421
  %73 = call i32 @lwip_bind(i32 %72, %struct.sockaddr* %1, i32 %2) #8, !dbg !3573
  %74 = icmp sgt i32 %73, -1, !dbg !3574
  %75 = select i1 %74, i32 %73, i32 -1, !dbg !3576
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3577, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3580
  %77 = icmp ult i64 %76, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3581
  br i1 %77, label %85, label %78, !dbg !3581

; <label>:78:                                     ; preds = %70
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3582, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3585
  %80 = icmp ugt i64 %79, ptrtoint ([0 x i8]* @_end to i64), !dbg !3581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3586
  br i1 %80, label %85, label %81, !dbg !3586

; <label>:81:                                     ; preds = %78
  %82 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !3587, !tbaa !1426
  %83 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %82, i64 0, i32 0, !dbg !3587
  %84 = load %struct.vfscore_file*, %struct.vfscore_file** %83, align 8, !dbg !3587, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %84) #10, !dbg !3587
  br label %95, !dbg !3587

; <label>:85:                                     ; preds = %78, %70
  %86 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3589, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3593
  %87 = and i64 %86, -65536, !dbg !3595
  %88 = or i64 %87, 4097, !dbg !3595
  %89 = add nsw i64 %88, -1, !dbg !3595
  %90 = inttoptr i64 %89 to i32*, !dbg !3596
  %91 = load i32, i32* %90, align 4096, !dbg !3597, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3598
  %92 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !3599
  %93 = load i64*, i64** %92, align 8, !dbg !3599, !tbaa !1426
  %94 = load i64, i64* %93, align 8, !dbg !3599, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %94, i32 %91, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !3599, !srcloc !3600
  br label %95

; <label>:95:                                     ; preds = %81, %85, %55, %60
  %96 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %75, %81 ], [ %75, %85 ], !dbg !3601
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3603
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3604
  ret i32 %96, !dbg !3604
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_bind(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !3605 {
  %4 = alloca %struct.ip_addr, align 16
  %5 = bitcast %struct.ip_addr* %4 to i8*, !dbg !3656
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6, !dbg !3656
  %6 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !3657
  %7 = icmp eq %struct.lwip_sock* %6, null, !dbg !3659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3661
  br i1 %7, label %148, label %8, !dbg !3661

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, !dbg !3662
  %10 = load i8, i8* %9, align 1, !dbg !3662, !tbaa !3663
  %11 = icmp eq i8 %10, 2, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3662
  br i1 %11, label %12, label %20, !dbg !3662

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %6, i64 0, i32 0, !dbg !3662
  %14 = load %struct.netconn*, %struct.netconn** %13, align 8, !dbg !3662, !tbaa !1563
  %15 = getelementptr inbounds %struct.netconn, %struct.netconn* %14, i64 0, i32 0, !dbg !3662
  %16 = load i32, i32* %15, align 8, !dbg !3662, !tbaa !1570
  %17 = and i32 %16, 8, !dbg !3662
  %18 = icmp eq i32 %17, 0, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3662
  br i1 %18, label %47, label %19, !dbg !3662

; <label>:19:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3662
  br label %29, !dbg !3662

; <label>:20:                                     ; preds = %8
  %21 = icmp eq i8 %10, 10, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3662
  br i1 %21, label %22, label %29, !dbg !3662

; <label>:22:                                     ; preds = %20
  %23 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %6, i64 0, i32 0, !dbg !3662
  %24 = load %struct.netconn*, %struct.netconn** %23, align 8, !dbg !3662, !tbaa !1563
  %25 = getelementptr inbounds %struct.netconn, %struct.netconn* %24, i64 0, i32 0, !dbg !3662
  %26 = load i32, i32* %25, align 8, !dbg !3662, !tbaa !1570
  %27 = and i32 %26, 8, !dbg !3662
  %28 = icmp eq i32 %27, 0, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3665
  br i1 %28, label %29, label %47, !dbg !3665

; <label>:29:                                     ; preds = %19, %22, %20
  %30 = tail call i32 @err_to_errno(i8 signext -6) #10, !dbg !3666
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3667, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3670
  %32 = icmp ult i64 %31, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3671
  br i1 %32, label %38, label %33, !dbg !3671

; <label>:33:                                     ; preds = %29
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3672, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3675
  %35 = icmp ugt i64 %34, ptrtoint ([0 x i8]* @_end to i64), !dbg !3671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3676
  br i1 %35, label %38, label %36, !dbg !3676

; <label>:36:                                     ; preds = %33
  %37 = tail call i32* @__errno() #10, !dbg !3677
  store i32 %30, i32* %37, align 4, !dbg !3680, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3681
  br label %146, !dbg !3682

; <label>:38:                                     ; preds = %33, %29
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3683, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3687
  %40 = and i64 %39, -65536, !dbg !3689
  %41 = or i64 %40, 4097, !dbg !3689
  %42 = add nsw i64 %41, -1, !dbg !3689
  %43 = inttoptr i64 %42 to i32*, !dbg !3690
  %44 = load i32, i32* %43, align 4096, !dbg !3691, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3692
  %45 = sub nsw i32 0, %30, !dbg !3693
  %46 = sext i32 %45 to i64, !dbg !3693
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %46, i32 %44, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3693, !srcloc !3694
  br label %146

; <label>:47:                                     ; preds = %12, %22
  %48 = icmp eq i32 %2, 16, !dbg !3695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3695
  br i1 %48, label %51, label %49, !dbg !3695

; <label>:49:                                     ; preds = %47
  %50 = icmp eq i32 %2, 28, !dbg !3695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3695
  br i1 %50, label %51, label %58, !dbg !3695

; <label>:51:                                     ; preds = %49, %47
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3695
  br i1 %11, label %54, label %52, !dbg !3695

; <label>:52:                                     ; preds = %51
  %53 = icmp eq i8 %10, 10, !dbg !3695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3695
  br i1 %53, label %54, label %58, !dbg !3695

; <label>:54:                                     ; preds = %52, %51
  %55 = ptrtoint %struct.sockaddr* %1 to i64, !dbg !3695
  %56 = and i64 %55, 3, !dbg !3695
  %57 = icmp eq i64 %56, 0, !dbg !3695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3696
  br i1 %57, label %59, label %58, !dbg !3696

; <label>:58:                                     ; preds = %49, %52, %54
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)) #8, !dbg !3697
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !3699
  tail call void @ukplat_terminate(i32 3) #9, !dbg !3699
  unreachable

; <label>:59:                                     ; preds = %54
  %60 = icmp eq i8 %10, 10, !dbg !3716
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3718
  br i1 %60, label %61, label %81, !dbg !3718

; <label>:61:                                     ; preds = %59
  %62 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 6, !dbg !3719
  %63 = bitcast i8* %62 to <4 x i32>*, !dbg !3719
  %64 = load <4 x i32>, <4 x i32>* %63, align 4, !dbg !3719, !tbaa !1581
  %65 = bitcast %struct.ip_addr* %4 to <4 x i32>*, !dbg !3719
  store <4 x i32> %64, <4 x i32>* %65, align 16, !dbg !3719, !tbaa !1581
  %66 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 1, !dbg !3719
  store i8 0, i8* %66, align 16, !dbg !3719, !tbaa !1581
  %67 = extractelement <4 x i32> %64, i32 0, !dbg !3723
  %68 = zext i32 %67 to i64, !dbg !3723
  %69 = and i64 %68, 49407, !dbg !3723
  %70 = icmp eq i64 %69, 33022, !dbg !3723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3723
  br i1 %70, label %76, label %71, !dbg !3723

; <label>:71:                                     ; preds = %61
  %72 = and i64 %68, 36863, !dbg !3723
  %73 = icmp eq i64 %72, 511, !dbg !3723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3723
  br i1 %73, label %76, label %74, !dbg !3723

; <label>:74:                                     ; preds = %71
  %75 = icmp eq i64 %72, 767, !dbg !3723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3725
  br i1 %75, label %76, label %91, !dbg !3725

; <label>:76:                                     ; preds = %74, %71, %61
  %77 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 1, i32 2, i64 6, !dbg !3726
  %78 = bitcast i8* %77 to i32*, !dbg !3726
  %79 = load i32, i32* %78, align 4, !dbg !3726, !tbaa !3402
  %80 = trunc i32 %79 to i8, !dbg !3726
  store i8 %80, i8* %66, align 16, !dbg !3726, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3726
  br label %91, !dbg !3726

; <label>:81:                                     ; preds = %59
  %82 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 2, !dbg !3728
  %83 = bitcast i8* %82 to i32*, !dbg !3728
  %84 = load i32, i32* %83, align 4, !dbg !3728, !tbaa !3412
  %85 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !3728
  store i32 %84, i32* %85, align 16, !dbg !3728, !tbaa !1581
  %86 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !3728
  %87 = bitcast [14 x i8]* %86 to i16*, !dbg !3728
  %88 = load i16, i16* %87, align 2, !dbg !3728, !tbaa !3411
  %89 = tail call zeroext i16 @lwip_htons(i16 zeroext %88) #10, !dbg !3728
  %90 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !3731
  store i8 0, i8* %90, align 4, !dbg !3732, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3734
  br label %107, !dbg !3734

; <label>:91:                                     ; preds = %74, %76
  %92 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !3725
  %93 = bitcast [14 x i8]* %92 to i16*, !dbg !3725
  %94 = load i16, i16* %93, align 2, !dbg !3725, !tbaa !3398
  %95 = tail call zeroext i16 @lwip_htons(i16 zeroext %94) #10, !dbg !3725
  %96 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !3736
  store i8 6, i8* %96, align 4, !dbg !3737, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3734
  %97 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !3739
  %98 = icmp eq i32 %67, 0, !dbg !3739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3739
  br i1 %98, label %99, label %107, !dbg !3739

; <label>:99:                                     ; preds = %91
  %100 = extractelement <4 x i32> %64, i32 1, !dbg !3739
  %101 = icmp eq i32 %100, 0, !dbg !3739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3739
  br i1 %101, label %102, label %107, !dbg !3739

; <label>:102:                                    ; preds = %99
  %103 = extractelement <4 x i32> %64, i32 2, !dbg !3739
  %104 = icmp eq i32 %103, -65536, !dbg !3739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3740
  br i1 %104, label %105, label %107, !dbg !3740

; <label>:105:                                    ; preds = %102
  %106 = extractelement <4 x i32> %64, i32 3, !dbg !3741
  store i32 %106, i32* %97, align 16, !dbg !3741, !tbaa !1581
  store i8 0, i8* %96, align 4, !dbg !3743, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3745
  br label %107, !dbg !3745

; <label>:107:                                    ; preds = %81, %105, %102, %99, %91
  %108 = phi i16 [ %95, %105 ], [ %95, %102 ], [ %95, %99 ], [ %95, %91 ], [ %89, %81 ]
  %109 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %6, i64 0, i32 0, !dbg !3746
  %110 = load %struct.netconn*, %struct.netconn** %109, align 8, !dbg !3746, !tbaa !1563
  %111 = call signext i8 @netconn_bind(%struct.netconn* %110, %struct.ip_addr* nonnull %4, i16 zeroext %108) #10, !dbg !3748
  %112 = icmp eq i8 %111, 0, !dbg !3750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3751
  br i1 %112, label %131, label %113, !dbg !3751

; <label>:113:                                    ; preds = %107
  %114 = call i32 @err_to_errno(i8 signext %111) #10, !dbg !3752
  %115 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3753, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3756
  %116 = icmp ult i64 %115, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3757
  br i1 %116, label %122, label %117, !dbg !3757

; <label>:117:                                    ; preds = %113
  %118 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3758, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3761
  %119 = icmp ugt i64 %118, ptrtoint ([0 x i8]* @_end to i64), !dbg !3757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3762
  br i1 %119, label %122, label %120, !dbg !3762

; <label>:120:                                    ; preds = %117
  %121 = call i32* @__errno() #10, !dbg !3763
  store i32 %114, i32* %121, align 4, !dbg !3766, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3767
  br label %146, !dbg !3768

; <label>:122:                                    ; preds = %117, %113
  %123 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3769, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3773
  %124 = and i64 %123, -65536, !dbg !3775
  %125 = or i64 %124, 4097, !dbg !3775
  %126 = add nsw i64 %125, -1, !dbg !3775
  %127 = inttoptr i64 %126 to i32*, !dbg !3776
  %128 = load i32, i32* %127, align 4096, !dbg !3777, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3778
  %129 = sub nsw i32 0, %114, !dbg !3779
  %130 = sext i32 %129 to i64, !dbg !3779
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %130, i32 %128, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3779, !srcloc !3780
  br label %146

; <label>:131:                                    ; preds = %107
  %132 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3782, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3785
  %133 = icmp ult i64 %132, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3786
  br i1 %133, label %139, label %134, !dbg !3786

; <label>:134:                                    ; preds = %131
  %135 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3787, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3790
  %136 = icmp ugt i64 %135, ptrtoint ([0 x i8]* @_end to i64), !dbg !3786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3791
  br i1 %136, label %139, label %137, !dbg !3791

; <label>:137:                                    ; preds = %134
  %138 = call i32* @__errno() #10, !dbg !3795
  store i32 0, i32* %138, align 4, !dbg !3796, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3797
  br label %146, !dbg !3798

; <label>:139:                                    ; preds = %134, %131
  %140 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3799, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3803
  %141 = and i64 %140, -65536, !dbg !3805
  %142 = or i64 %141, 4097, !dbg !3805
  %143 = add nsw i64 %142, -1, !dbg !3805
  %144 = inttoptr i64 %143 to i32*, !dbg !3806
  %145 = load i32, i32* %144, align 4096, !dbg !3807, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3808
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %145, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3809, !srcloc !3810
  br label %146

; <label>:146:                                    ; preds = %137, %139, %120, %122, %36, %38
  %147 = phi i32 [ -1, %38 ], [ -1, %36 ], [ -1, %122 ], [ -1, %120 ], [ 0, %139 ], [ 0, %137 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %148, !dbg !3811

; <label>:148:                                    ; preds = %146, %3
  %149 = phi i32 [ -1, %3 ], [ %147, %146 ], !dbg !3811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3811
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6, !dbg !3813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3813
  ret i32 %149, !dbg !3813
}

; Function Attrs: noredzone nounwind
define dso_local i32 @poll(%struct.pollfd* nocapture, i32, i32) local_unnamed_addr #0 !dbg !3814 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !3853
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3853
  %6 = zext i32 %1 to i64, !dbg !3854
  %7 = tail call i8* @llvm.stacksave(), !dbg !3854
  %8 = alloca %struct.pollfd, i64 %6, align 16, !dbg !3854
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3858
  %9 = icmp eq i32 %1, 0, !dbg !3859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3860
  br i1 %9, label %95, label %10, !dbg !3860

; <label>:10:                                     ; preds = %3
  %11 = bitcast %struct.sock_net_file** %4 to i64*
  br label %12, !dbg !3860

; <label>:12:                                     ; preds = %10, %92
  %13 = phi i64 [ 0, %10 ], [ %93, %92 ]
  %14 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %13, i32 0, !dbg !3861
  %15 = load i32, i32* %14, align 4, !dbg !3861, !tbaa !3862
  %16 = icmp slt i32 %15, 0, !dbg !3864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3865
  br i1 %16, label %17, label %19, !dbg !3865

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %13, i32 0, !dbg !3866
  store i32 %15, i32* %18, align 8, !dbg !3867, !tbaa !3862
  br label %92, !dbg !3868

; <label>:19:                                     ; preds = %12
  %20 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3869, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3872
  %21 = icmp ult i64 %20, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3873
  br i1 %21, label %44, label %22, !dbg !3873

; <label>:22:                                     ; preds = %19
  %23 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3874, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3877
  %24 = icmp ugt i64 %23, ptrtoint ([0 x i8]* @_end to i64), !dbg !3873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3878
  br i1 %24, label %44, label %25, !dbg !3878

; <label>:25:                                     ; preds = %22
  %26 = load i32, i32* %14, align 4, !dbg !3879, !tbaa !3862
  %27 = call %struct.vfscore_file* @vfscore_get_file(i32 %26) #10, !dbg !3884
  %28 = icmp eq %struct.vfscore_file* %27, null, !dbg !3886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3887
  br i1 %28, label %41, label %29, !dbg !3887

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %27, i64 0, i32 6, !dbg !3888
  %31 = load %struct.dentry*, %struct.dentry** %30, align 8, !dbg !3888, !tbaa !2585
  %32 = getelementptr inbounds %struct.dentry, %struct.dentry* %31, i64 0, i32 3, !dbg !3889
  %33 = load %struct.vnode*, %struct.vnode** %32, align 8, !dbg !3889, !tbaa !2847
  %34 = getelementptr inbounds %struct.vnode, %struct.vnode* %33, i64 0, i32 5, !dbg !3890
  %35 = load i32, i32* %34, align 4, !dbg !3890, !tbaa !2595
  %36 = icmp eq i32 %35, 6, !dbg !3891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3892
  br i1 %36, label %37, label %41, !dbg !3892

; <label>:37:                                     ; preds = %29
  %38 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %27, i64 0, i32 4, !dbg !3893
  %39 = bitcast i8** %38 to %struct.sock_net_file**, !dbg !3893
  %40 = load %struct.sock_net_file*, %struct.sock_net_file** %39, align 8, !dbg !3893, !tbaa !2581
  br label %41, !dbg !3894

; <label>:41:                                     ; preds = %29, %25, %37
  %42 = phi %struct.sock_net_file* [ %40, %37 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %25 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %29 ], !dbg !3895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3896
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3897
  store %struct.sock_net_file* %42, %struct.sock_net_file** %4, align 8, !dbg !3879, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %43 = ptrtoint %struct.sock_net_file* %42 to i64, !dbg !3879
  br label %56, !dbg !3879

; <label>:44:                                     ; preds = %22, %19
  %45 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3899, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3903
  %46 = and i64 %45, -65536, !dbg !3905
  %47 = or i64 %46, 4097, !dbg !3905
  %48 = add nsw i64 %47, -1, !dbg !3905
  %49 = inttoptr i64 %48 to i32*, !dbg !3906
  %50 = load i32, i32* %49, align 4096, !dbg !3907, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3908
  %51 = load i32, i32* %14, align 4, !dbg !3909, !tbaa !3862
  %52 = sext i32 %51 to i64, !dbg !3909
  %53 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %52, i32 %50, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !3909, !srcloc !3910
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %53) #6, !dbg !3911, !srcloc !3915
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %54 = load i64, i64* %11, align 8, !dbg !3916, !tbaa !1426
  %55 = inttoptr i64 %54 to %struct.sock_net_file*
  br label %56

; <label>:56:                                     ; preds = %44, %41
  %57 = phi %struct.sock_net_file* [ %55, %44 ], [ %42, %41 ]
  %58 = phi i64 [ %54, %44 ], [ %43, %41 ], !dbg !3916
  %59 = icmp slt i64 %58, 1, !dbg !3916
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3916
  br i1 %59, label %60, label %83, !dbg !3916

; <label>:60:                                     ; preds = %56
  %61 = icmp sgt i64 %58, -513, !dbg !3916
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3917
  br i1 %61, label %62, label %83, !dbg !3917

; <label>:62:                                     ; preds = %60
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3919, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3922
  %64 = icmp ult i64 %63, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !3923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3923
  br i1 %64, label %73, label %65, !dbg !3923

; <label>:65:                                     ; preds = %62
  %66 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3924, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3927
  %67 = icmp ugt i64 %66, ptrtoint ([0 x i8]* @_end to i64), !dbg !3923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3928
  br i1 %67, label %73, label %68, !dbg !3928

; <label>:68:                                     ; preds = %65
  %69 = load i64, i64* %11, align 8, !dbg !3929, !tbaa !1426
  %70 = trunc i64 %69 to i32, !dbg !3929
  %71 = sub nsw i32 0, %70, !dbg !3933
  %72 = call i32* @__errno() #10, !dbg !3934
  store i32 %71, i32* %72, align 4, !dbg !3935, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3936
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3929
  br label %133, !dbg !3929

; <label>:73:                                     ; preds = %65, %62
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !3937, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3941
  %75 = and i64 %74, -65536, !dbg !3943
  %76 = or i64 %75, 4097, !dbg !3943
  %77 = add nsw i64 %76, -1, !dbg !3943
  %78 = inttoptr i64 %77 to i32*, !dbg !3944
  %79 = load i32, i32* %78, align 4096, !dbg !3945, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3946
  %80 = load i64, i64* %11, align 8, !dbg !3947, !tbaa !1426
  %81 = shl i64 %80, 32, !dbg !3947
  %82 = ashr exact i64 %81, 32, !dbg !3947
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %82, i32 %79, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !3947, !srcloc !3948
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %133

; <label>:83:                                     ; preds = %60, %56
  %84 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %57, i64 0, i32 1, !dbg !3949
  %85 = load i32, i32* %84, align 8, !dbg !3949, !tbaa !1421
  %86 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %13, i32 0, !dbg !3950
  store i32 %85, i32* %86, align 8, !dbg !3951, !tbaa !3862
  %87 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %13, i32 1, !dbg !3952
  %88 = load i16, i16* %87, align 4, !dbg !3952, !tbaa !3953
  %89 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %13, i32 1, !dbg !3954
  store i16 %88, i16* %89, align 4, !dbg !3955, !tbaa !3953
  %90 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %57, i64 0, i32 0, !dbg !3956
  %91 = load %struct.vfscore_file*, %struct.vfscore_file** %90, align 8, !dbg !3956, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %91) #10, !dbg !3957
  br label %92

; <label>:92:                                     ; preds = %17, %83
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %93 = add nuw nsw i64 %13, 1, !dbg !3958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3959
  %94 = icmp ult i64 %93, %6, !dbg !3859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3860
  br i1 %94, label %12, label %95, !dbg !3860, !llvm.loop !3960

; <label>:95:                                     ; preds = %92, %3
  %96 = call i32 @lwip_poll(%struct.pollfd* nonnull %8, i32 %1, i32 %2) #8, !dbg !3962
  %97 = icmp slt i32 %96, 0, !dbg !3963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3965
  br i1 %97, label %133, label %98, !dbg !3965

; <label>:98:                                     ; preds = %95
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3966
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3968
  br i1 %9, label %133, label %99, !dbg !3968

; <label>:99:                                     ; preds = %98
  %100 = and i64 %6, 1, !dbg !3969
  %101 = icmp eq i32 %1, 1, !dbg !3969
  br i1 %101, label %120, label %102, !dbg !3969

; <label>:102:                                    ; preds = %99
  %103 = sub nsw i64 %6, %100, !dbg !3969
  br label %104, !dbg !3969

; <label>:104:                                    ; preds = %138, %102
  %105 = phi i64 [ 0, %102 ], [ %141, %138 ]
  %106 = phi i64 [ %103, %102 ], [ %142, %138 ]
  %107 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %105, i32 0, !dbg !3969
  %108 = load i32, i32* %107, align 4, !dbg !3969, !tbaa !3862
  %109 = icmp slt i32 %108, 0, !dbg !3973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3974
  br i1 %109, label %113, label %110, !dbg !3974

; <label>:110:                                    ; preds = %104
  %111 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %105, i32 2, !dbg !3975
  %112 = load i16, i16* %111, align 2, !dbg !3975, !tbaa !3976
  br label %113

; <label>:113:                                    ; preds = %104, %110
  %114 = phi i16 [ %112, %110 ], [ 0, %104 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %115 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %105, i32 2, !dbg !3977
  store i16 %114, i16* %115, align 2, !dbg !3978
  %116 = or i64 %105, 1, !dbg !3979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3968
  %117 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %116, i32 0, !dbg !3969
  %118 = load i32, i32* %117, align 4, !dbg !3969, !tbaa !3862
  %119 = icmp slt i32 %118, 0, !dbg !3973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3974
  br i1 %119, label %138, label %135, !dbg !3974

; <label>:120:                                    ; preds = %138, %99
  %121 = phi i64 [ 0, %99 ], [ %141, %138 ]
  %122 = icmp eq i64 %100, 0, !dbg !3974
  br i1 %122, label %133, label %123, !dbg !3974

; <label>:123:                                    ; preds = %120
  %124 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %121, i32 0, !dbg !3969
  %125 = load i32, i32* %124, align 4, !dbg !3969, !tbaa !3862
  %126 = icmp slt i32 %125, 0, !dbg !3973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3974
  br i1 %126, label %130, label %127, !dbg !3974

; <label>:127:                                    ; preds = %123
  %128 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %121, i32 2, !dbg !3975
  %129 = load i16, i16* %128, align 2, !dbg !3975, !tbaa !3976
  br label %130

; <label>:130:                                    ; preds = %127, %123
  %131 = phi i16 [ %129, %127 ], [ 0, %123 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %132 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %121, i32 2, !dbg !3977
  store i16 %131, i16* %132, align 2, !dbg !3978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3968
  br label %133, !dbg !3981

; <label>:133:                                    ; preds = %130, %120, %98, %95, %68, %73
  %134 = phi i32 [ -1, %68 ], [ -1, %73 ], [ %96, %95 ], [ %96, %98 ], [ %96, %120 ], [ %96, %130 ], !dbg !3855
  call void @llvm.stackrestore(i8* %7), !dbg !3981
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !3981
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3981
  ret i32 %134, !dbg !3981

; <label>:135:                                    ; preds = %113
  %136 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %8, i64 %116, i32 2, !dbg !3975
  %137 = load i16, i16* %136, align 2, !dbg !3975, !tbaa !3976
  br label %138

; <label>:138:                                    ; preds = %135, %113
  %139 = phi i16 [ %137, %135 ], [ 0, %113 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %140 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %116, i32 2, !dbg !3977
  store i16 %139, i16* %140, align 2, !dbg !3978
  %141 = add nuw nsw i64 %105, 2, !dbg !3979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3968
  %142 = add i64 %106, -2, !dbg !3968
  %143 = icmp eq i64 %142, 0, !dbg !3968
  br i1 %143, label %120, label %104, !dbg !3968, !llvm.loop !3982
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #6

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_poll(%struct.pollfd*, i32, i32) local_unnamed_addr #0 !dbg !3984 {
  %4 = icmp ne %struct.pollfd* %0, null, !dbg !4035
  %5 = icmp ne i32 %1, 0, !dbg !4035
  %6 = and i1 %4, %5, !dbg !4035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4035
  br i1 %6, label %12, label %7, !dbg !4035

; <label>:7:                                      ; preds = %3
  %8 = icmp eq %struct.pollfd* %0, null, !dbg !4035
  %9 = icmp eq i32 %1, 0, !dbg !4035
  %10 = and i1 %8, %9, !dbg !4035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4035
  br i1 %10, label %12, label %11, !dbg !4035

; <label>:11:                                     ; preds = %7
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0)) #8, !dbg !4036
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !4038
  tail call void @ukplat_terminate(i32 3) #9, !dbg !4038
  unreachable

; <label>:12:                                     ; preds = %7, %3
  %13 = tail call fastcc i32 @lwip_pollscan(%struct.pollfd* %0, i32 %1, i32 1) #8, !dbg !4042
  %14 = icmp slt i32 %13, 0, !dbg !4044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4046
  br i1 %14, label %123, label %15, !dbg !4046

; <label>:15:                                     ; preds = %12
  %16 = icmp eq i32 %13, 0, !dbg !4047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4048
  br i1 %16, label %17, label %106, !dbg !4048

; <label>:17:                                     ; preds = %15
  %18 = icmp eq i32 %2, 0, !dbg !4049
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4051
  br i1 %18, label %104, label %19, !dbg !4051

; <label>:19:                                     ; preds = %17
  %20 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !4052, !tbaa !1426
  %21 = icmp eq %struct.uk_alloc* %20, null, !dbg !4060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4062
  br i1 %21, label %22, label %24, !dbg !4062, !prof !1445

; <label>:22:                                     ; preds = %19
  %23 = tail call i32* @__errno() #10, !dbg !4063
  store i32 12, i32* %23, align 4, !dbg !4065, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4052
  br label %30, !dbg !4052

; <label>:24:                                     ; preds = %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4076
  %25 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %20, i64 0, i32 0, !dbg !4078
  %26 = load i8* (%struct.uk_alloc*, i64)*, i8* (%struct.uk_alloc*, i64)** %25, align 8, !dbg !4078, !tbaa !1426
  %27 = tail call i8* %26(%struct.uk_alloc* nonnull %20, i64 88) #10, !dbg !4079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4067
  %28 = bitcast i8* %27 to %struct.lwip_select_cb*, !dbg !4052
  %29 = icmp eq i8* %27, null, !dbg !4082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4052
  br i1 %29, label %30, label %45, !dbg !4052

; <label>:30:                                     ; preds = %22, %24
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4084, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4087
  %32 = icmp ult i64 %31, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4088
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4088
  br i1 %32, label %38, label %33, !dbg !4088

; <label>:33:                                     ; preds = %30
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4089, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4092
  %35 = icmp ugt i64 %34, ptrtoint ([0 x i8]* @_end to i64), !dbg !4088
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4093
  br i1 %35, label %38, label %36, !dbg !4093

; <label>:36:                                     ; preds = %33
  %37 = tail call i32* @__errno() #10, !dbg !4097
  store i32 11, i32* %37, align 4, !dbg !4098, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4099
  br label %103, !dbg !4100

; <label>:38:                                     ; preds = %33, %30
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4101, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4105
  %40 = and i64 %39, -65536, !dbg !4107
  %41 = or i64 %40, 4097, !dbg !4107
  %42 = add nsw i64 %41, -1, !dbg !4107
  %43 = inttoptr i64 %42 to i32*, !dbg !4108
  %44 = load i32, i32* %43, align 4096, !dbg !4109, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4110
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -11, i32 %44, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4111, !srcloc !4112
  br label %103

; <label>:45:                                     ; preds = %24
  %46 = tail call i8* @memset(i8* nonnull %27, i32 0, i64 88) #10, !dbg !4113
  %47 = getelementptr inbounds i8, i8* %27, i64 40, !dbg !4114
  %48 = bitcast i8* %47 to %struct.pollfd**, !dbg !4114
  store %struct.pollfd* %0, %struct.pollfd** %48, align 8, !dbg !4115, !tbaa !4116
  %49 = getelementptr inbounds i8, i8* %27, i64 48, !dbg !4118
  %50 = bitcast i8* %49 to i32*, !dbg !4118
  store i32 %1, i32* %50, align 8, !dbg !4119, !tbaa !4120
  %51 = getelementptr inbounds i8, i8* %27, i64 56, !dbg !4121
  %52 = bitcast i8* %51 to %struct.sys_sem_t*, !dbg !4121
  %53 = tail call signext i8 @sys_sem_new(%struct.sys_sem_t* nonnull %52, i8 zeroext 0) #10, !dbg !4122
  %54 = icmp eq i8 %53, 0, !dbg !4123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4124
  br i1 %54, label %77, label %55, !dbg !4124

; <label>:55:                                     ; preds = %45
  %56 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4125, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4128
  %57 = icmp ult i64 %56, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4129
  br i1 %57, label %63, label %58, !dbg !4129

; <label>:58:                                     ; preds = %55
  %59 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4130, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4133
  %60 = icmp ugt i64 %59, ptrtoint ([0 x i8]* @_end to i64), !dbg !4129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4134
  br i1 %60, label %63, label %61, !dbg !4134

; <label>:61:                                     ; preds = %58
  %62 = tail call i32* @__errno() #10, !dbg !4138
  store i32 11, i32* %62, align 4, !dbg !4139, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4140
  br label %70, !dbg !4141

; <label>:63:                                     ; preds = %58, %55
  %64 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4142, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4146
  %65 = and i64 %64, -65536, !dbg !4148
  %66 = or i64 %65, 4097, !dbg !4148
  %67 = add nsw i64 %66, -1, !dbg !4148
  %68 = inttoptr i64 %67 to i32*, !dbg !4149
  %69 = load i32, i32* %68, align 4096, !dbg !4150, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4151
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -11, i32 %69, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4152, !srcloc !4153
  br label %70

; <label>:70:                                     ; preds = %63, %61
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %71 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !4154, !tbaa !1426
  %72 = icmp eq %struct.uk_alloc* %71, null, !dbg !4161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4162
  br i1 %72, label %73, label %74, !dbg !4162, !prof !1445

; <label>:73:                                     ; preds = %70
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !4163
  tail call void @ukplat_terminate(i32 3) #9, !dbg !4163
  unreachable

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %71, i64 0, i32 5, !dbg !4164
  %76 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %75, align 8, !dbg !4164, !tbaa !1426
  tail call void %76(%struct.uk_alloc* nonnull %71, i8* nonnull %27) #10, !dbg !4165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4166
  br label %103, !dbg !4167

; <label>:77:                                     ; preds = %45
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !4175
  %78 = load i64, i64* bitcast (%struct.lwip_select_cb** @select_cb_list to i64*), align 8, !dbg !4176, !tbaa !1426
  %79 = bitcast i8* %27 to i64*, !dbg !4177
  store i64 %78, i64* %79, align 8, !dbg !4177, !tbaa !4178
  %80 = icmp eq i64 %78, 0, !dbg !4179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4181
  br i1 %80, label %85, label %81, !dbg !4181

; <label>:81:                                     ; preds = %77
  %82 = inttoptr i64 %78 to %struct.lwip_select_cb*
  %83 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %82, i64 0, i32 1, !dbg !4182
  %84 = bitcast %struct.lwip_select_cb** %83 to i8**, !dbg !4184
  store i8* %27, i8** %84, align 8, !dbg !4184, !tbaa !4185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4186
  br label %85, !dbg !4186

; <label>:85:                                     ; preds = %77, %81
  store i8* %27, i8** bitcast (%struct.lwip_select_cb** @select_cb_list to i8**), align 8, !dbg !4187, !tbaa !1426
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !4188
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4189
  %86 = tail call fastcc i32 @lwip_pollscan(%struct.pollfd* %0, i32 %1, i32 2) #8, !dbg !4190
  %87 = icmp eq i32 %86, 0, !dbg !4191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4193
  br i1 %87, label %88, label %94, !dbg !4193

; <label>:88:                                     ; preds = %85
  %89 = icmp slt i32 %2, 0, !dbg !4194
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4198
  br i1 %89, label %91, label %90, !dbg !4197

; <label>:90:                                     ; preds = %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %91

; <label>:91:                                     ; preds = %88, %90
  %92 = phi i32 [ %2, %90 ], [ 0, %88 ], !dbg !4202
  %93 = tail call i32 @sys_arch_sem_wait(%struct.sys_sem_t* nonnull %52, i32 %92) #10, !dbg !4203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4204
  br label %94, !dbg !4204

; <label>:94:                                     ; preds = %85, %91
  %95 = tail call fastcc i32 @lwip_pollscan(%struct.pollfd* %0, i32 %1, i32 4) #8, !dbg !4205
  tail call fastcc void @lwip_unlink_select_cb(%struct.lwip_select_cb* nonnull %28) #8, !dbg !4206
  tail call void @sys_sem_free(%struct.sys_sem_t* nonnull %52) #10, !dbg !4207
  %96 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !4208, !tbaa !1426
  %97 = icmp eq %struct.uk_alloc* %96, null, !dbg !4215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4216
  br i1 %97, label %98, label %99, !dbg !4216, !prof !1445

; <label>:98:                                     ; preds = %94
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !4217
  tail call void @ukplat_terminate(i32 3) #9, !dbg !4217
  unreachable

; <label>:99:                                     ; preds = %94
  %100 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %96, i64 0, i32 5, !dbg !4218
  %101 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %100, align 8, !dbg !4218, !tbaa !1426
  tail call void %101(%struct.uk_alloc* nonnull %96, i8* nonnull %27) #10, !dbg !4219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4221
  %102 = icmp slt i32 %95, 0, !dbg !4222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4225
  br i1 %102, label %123, label %104, !dbg !4224

; <label>:103:                                    ; preds = %36, %38, %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4226
  br label %123

; <label>:104:                                    ; preds = %99, %17
  %105 = phi i32 [ 0, %17 ], [ %95, %99 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4227
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %106, !dbg !4229

; <label>:106:                                    ; preds = %104, %15
  %107 = phi i32 [ %13, %15 ], [ %105, %104 ], !dbg !4231
  %108 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4229, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4233
  %109 = icmp ult i64 %108, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4234
  br i1 %109, label %115, label %110, !dbg !4234

; <label>:110:                                    ; preds = %106
  %111 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4235, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4238
  %112 = icmp ugt i64 %111, ptrtoint ([0 x i8]* @_end to i64), !dbg !4234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  br i1 %112, label %115, label %113, !dbg !4239

; <label>:113:                                    ; preds = %110
  %114 = tail call i32* @__errno() #10, !dbg !4243
  store i32 0, i32* %114, align 4, !dbg !4244, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4245
  br label %122, !dbg !4246

; <label>:115:                                    ; preds = %110, %106
  %116 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4247, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4251
  %117 = and i64 %116, -65536, !dbg !4253
  %118 = or i64 %117, 4097, !dbg !4253
  %119 = add nsw i64 %118, -1, !dbg !4253
  %120 = inttoptr i64 %119 to i32*, !dbg !4254
  %121 = load i32, i32* %120, align 4096, !dbg !4255, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4256
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %121, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !4257, !srcloc !4258
  br label %122

; <label>:122:                                    ; preds = %115, %113
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %123, !dbg !4259

; <label>:123:                                    ; preds = %99, %103, %12, %122
  %124 = phi i32 [ %107, %122 ], [ -1, %12 ], [ -1, %103 ], [ -1, %99 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4260
  ret i32 %124, !dbg !4260
}

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #6

; Function Attrs: noredzone nounwind
define dso_local i32 @ppoll(%struct.pollfd*, i32, %struct.timespec* readonly, i64*) local_unnamed_addr #0 !dbg !4261 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*, !dbg !4281
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !4281
  %7 = icmp eq %struct.pollfd* %0, null, !dbg !4282
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4284
  br i1 %7, label %8, label %10, !dbg !4284

; <label>:8:                                      ; preds = %4
  %9 = tail call i32* @__errno() #10, !dbg !4285
  store i32 14, i32* %9, align 4, !dbg !4287, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4289
  br label %32, !dbg !4289

; <label>:10:                                     ; preds = %4
  %11 = icmp eq %struct.timespec* %2, null, !dbg !4290
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4291
  br i1 %11, label %21, label %12, !dbg !4291

; <label>:12:                                     ; preds = %10
  %13 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, i32 0, !dbg !4292
  %14 = load i64, i64* %13, align 8, !dbg !4292, !tbaa !4293
  %15 = mul nsw i64 %14, 1000, !dbg !4295
  %16 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, i32 1, !dbg !4296
  %17 = load i64, i64* %16, align 8, !dbg !4296, !tbaa !4297
  %18 = sdiv i64 %17, 1000000, !dbg !4298
  %19 = add nsw i64 %18, %15, !dbg !4299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4291
  %20 = trunc i64 %19 to i32, !dbg !4291
  br label %21, !dbg !4291

; <label>:21:                                     ; preds = %10, %12
  %22 = phi i32 [ %20, %12 ], [ -1, %10 ]
  %23 = call i32 @pthread_sigmask(i32 2, i64* %3, i64* nonnull %5) #10, !dbg !4301
  %24 = icmp eq i32 %23, 0, !dbg !4302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4304
  br i1 %24, label %25, label %32, !dbg !4304

; <label>:25:                                     ; preds = %21
  %26 = call i32 @poll(%struct.pollfd* nonnull %0, i32 %1, i32 %22) #8, !dbg !4306
  %27 = call i32 @pthread_sigmask(i32 2, i64* nonnull %5, i64* null) #10, !dbg !4307
  %28 = icmp eq i32 %26, 0, !dbg !4309
  %29 = icmp ne i32 %27, 0, !dbg !4311
  %30 = and i1 %28, %29, !dbg !4312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4312
  br i1 %30, label %31, label %32, !dbg !4312

; <label>:31:                                     ; preds = %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4313
  br label %32, !dbg !4313

; <label>:32:                                     ; preds = %21, %25, %31, %8
  %33 = phi i32 [ %23, %21 ], [ %27, %31 ], [ %26, %25 ], [ -1, %8 ], !dbg !4314
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !4315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4316
  ret i32 %33, !dbg !4316
}

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @pthread_sigmask(i32, i64*, i64*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i32 @select(i32, %struct._types_fd_set*, %struct._types_fd_set*, %struct._types_fd_set*, %struct.timeval* readonly) local_unnamed_addr #0 !dbg !4317 {
  %6 = alloca %struct._types_fd_set, align 8
  %7 = alloca %struct._types_fd_set, align 8
  %8 = alloca %struct._types_fd_set, align 8
  %9 = alloca %struct.sock_net_file*, align 8
  %10 = bitcast %struct._types_fd_set* %6 to i8*, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !4422
  %11 = bitcast %struct._types_fd_set* %7 to i8*, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !4422
  %12 = bitcast %struct._types_fd_set* %8 to i8*, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !4422
  %13 = bitcast %struct.sock_net_file** %9 to i8*, !dbg !4423
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6, !dbg !4423
  %14 = icmp eq i32 %0, 0, !dbg !4424
  %15 = icmp ne %struct.timeval* %4, null, !dbg !4425
  %16 = and i1 %14, %15, !dbg !4426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4426
  br i1 %16, label %17, label %39, !dbg !4426

; <label>:17:                                     ; preds = %5
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0, !dbg !4427
  %19 = load i64, i64* %18, align 8, !dbg !4427, !tbaa !4428
  %20 = mul nsw i64 %19, 1000000000, !dbg !4430
  %21 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1, !dbg !4432
  %22 = load i64, i64* %21, align 8, !dbg !4432, !tbaa !4433
  %23 = mul nsw i64 %22, 1000, !dbg !4434
  %24 = add i64 %23, %20, !dbg !4435
  %25 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4436, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4439
  %26 = icmp ult i64 %25, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4440
  br i1 %26, label %31, label %27, !dbg !4440

; <label>:27:                                     ; preds = %17
  %28 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4441, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4444
  %29 = icmp ugt i64 %28, ptrtoint ([0 x i8]* @_end to i64), !dbg !4440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4445
  br i1 %29, label %31, label %30, !dbg !4445

; <label>:30:                                     ; preds = %27
  tail call void @uk_sched_thread_sleep(i64 %24) #10, !dbg !4446
  br label %38, !dbg !4446

; <label>:31:                                     ; preds = %27, %17
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4448, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4452
  %33 = and i64 %32, -65536, !dbg !4454
  %34 = or i64 %33, 4097, !dbg !4454
  %35 = add nsw i64 %34, -1, !dbg !4454
  %36 = inttoptr i64 %35 to i32*, !dbg !4455
  %37 = load i32, i32* %36, align 4096, !dbg !4456, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4457
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call uk_sched_thread_sleep\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %24, i32 %37, void (i64)* nonnull @uk_sched_thread_sleep) #6, !dbg !4458, !srcloc !4459
  br label %38

; <label>:38:                                     ; preds = %31, %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %487, !dbg !4460

; <label>:39:                                     ; preds = %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %40 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !4464
  store i8 0, i8* %10, align 8, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %41 = getelementptr inbounds i8, i8* %10, i64 2, !dbg !4464
  store i8 0, i8* %40, align 1, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %42 = getelementptr inbounds i8, i8* %10, i64 3, !dbg !4464
  store i8 0, i8* %41, align 2, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %43 = getelementptr inbounds i8, i8* %10, i64 4, !dbg !4464
  store i8 0, i8* %42, align 1, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %44 = getelementptr inbounds i8, i8* %10, i64 5, !dbg !4464
  store i8 0, i8* %43, align 4, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %45 = getelementptr inbounds i8, i8* %10, i64 6, !dbg !4464
  store i8 0, i8* %44, align 1, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  %46 = getelementptr inbounds i8, i8* %10, i64 7, !dbg !4464
  store i8 0, i8* %45, align 2, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  store i8 0, i8* %46, align 1, !dbg !4464, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %47 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !4469
  store i8 0, i8* %11, align 8, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %48 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !4469
  store i8 0, i8* %47, align 1, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %49 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !4469
  store i8 0, i8* %48, align 2, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %50 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !4469
  store i8 0, i8* %49, align 1, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %51 = getelementptr inbounds i8, i8* %11, i64 5, !dbg !4469
  store i8 0, i8* %50, align 4, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %52 = getelementptr inbounds i8, i8* %11, i64 6, !dbg !4469
  store i8 0, i8* %51, align 1, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  %53 = getelementptr inbounds i8, i8* %11, i64 7, !dbg !4469
  store i8 0, i8* %52, align 2, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  store i8 0, i8* %53, align 1, !dbg !4469, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %54 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !4474
  store i8 0, i8* %12, align 8, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %55 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !4474
  store i8 0, i8* %54, align 1, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %56 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !4474
  store i8 0, i8* %55, align 2, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %57 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !4474
  store i8 0, i8* %56, align 1, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %58 = getelementptr inbounds i8, i8* %12, i64 5, !dbg !4474
  store i8 0, i8* %57, align 4, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %59 = getelementptr inbounds i8, i8* %12, i64 6, !dbg !4474
  store i8 0, i8* %58, align 1, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  %60 = getelementptr inbounds i8, i8* %12, i64 7, !dbg !4474
  store i8 0, i8* %59, align 2, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  store i8 0, i8* %60, align 1, !dbg !4474, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4478
  %61 = icmp sgt i32 %0, 0, !dbg !4479
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4480
  br i1 %61, label %62, label %292, !dbg !4480

; <label>:62:                                     ; preds = %39
  %63 = icmp eq %struct._types_fd_set* %1, null
  %64 = icmp eq %struct._types_fd_set* %2, null
  %65 = icmp eq %struct._types_fd_set* %3, null
  %66 = bitcast %struct.sock_net_file** %9 to i64*
  %67 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0
  %68 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %7, i64 0, i32 0, i64 0
  %69 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %70 = zext i32 %0 to i64
  br label %71, !dbg !4480

; <label>:71:                                     ; preds = %288, %62
  %72 = phi i64 [ 0, %62 ], [ %290, %288 ]
  %73 = phi i32 [ 0, %62 ], [ %289, %288 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4481
  br i1 %63, label %144, label %74, !dbg !4481

; <label>:74:                                     ; preds = %71
  %75 = lshr i64 %72, 6, !dbg !4482
  %76 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %75, !dbg !4482
  %77 = load i64, i64* %76, align 8, !dbg !4482, !tbaa !2478
  %78 = and i64 %72, 63, !dbg !4482
  %79 = shl i64 1, %78, !dbg !4482
  %80 = and i64 %77, %79, !dbg !4482
  %81 = icmp eq i64 %80, 0, !dbg !4482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4483
  br i1 %81, label %144, label %82, !dbg !4483

; <label>:82:                                     ; preds = %74
  %83 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4484, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4487
  %84 = icmp ult i64 %83, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4488
  br i1 %84, label %107, label %85, !dbg !4488

; <label>:85:                                     ; preds = %82
  %86 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4489, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4492
  %87 = icmp ugt i64 %86, ptrtoint ([0 x i8]* @_end to i64), !dbg !4488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4493
  br i1 %87, label %107, label %88, !dbg !4493

; <label>:88:                                     ; preds = %85
  %89 = trunc i64 %72 to i32, !dbg !4498
  %90 = call %struct.vfscore_file* @vfscore_get_file(i32 %89) #10, !dbg !4498
  %91 = icmp eq %struct.vfscore_file* %90, null, !dbg !4500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4501
  br i1 %91, label %104, label %92, !dbg !4501

; <label>:92:                                     ; preds = %88
  %93 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %90, i64 0, i32 6, !dbg !4502
  %94 = load %struct.dentry*, %struct.dentry** %93, align 8, !dbg !4502, !tbaa !2585
  %95 = getelementptr inbounds %struct.dentry, %struct.dentry* %94, i64 0, i32 3, !dbg !4503
  %96 = load %struct.vnode*, %struct.vnode** %95, align 8, !dbg !4503, !tbaa !2847
  %97 = getelementptr inbounds %struct.vnode, %struct.vnode* %96, i64 0, i32 5, !dbg !4504
  %98 = load i32, i32* %97, align 4, !dbg !4504, !tbaa !2595
  %99 = icmp eq i32 %98, 6, !dbg !4505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4506
  br i1 %99, label %100, label %104, !dbg !4506

; <label>:100:                                    ; preds = %92
  %101 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %90, i64 0, i32 4, !dbg !4507
  %102 = bitcast i8** %101 to %struct.sock_net_file**, !dbg !4507
  %103 = load %struct.sock_net_file*, %struct.sock_net_file** %102, align 8, !dbg !4507, !tbaa !2581
  br label %104, !dbg !4508

; <label>:104:                                    ; preds = %92, %88, %100
  %105 = phi %struct.sock_net_file* [ %103, %100 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %88 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %92 ], !dbg !4509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4511
  store %struct.sock_net_file* %105, %struct.sock_net_file** %9, align 8, !dbg !4513, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4513
  %106 = ptrtoint %struct.sock_net_file* %105 to i64, !dbg !4513
  br label %117, !dbg !4513

; <label>:107:                                    ; preds = %85, %82
  %108 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4514, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4518
  %109 = and i64 %108, -65536, !dbg !4520
  %110 = or i64 %109, 4097, !dbg !4520
  %111 = add nsw i64 %110, -1, !dbg !4520
  %112 = inttoptr i64 %111 to i32*, !dbg !4521
  %113 = load i32, i32* %112, align 4096, !dbg !4522, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4523
  %114 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %72, i32 %113, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4524, !srcloc !4525
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %114) #6, !dbg !4526, !srcloc !4530
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %115 = load i64, i64* %66, align 8, !dbg !4531, !tbaa !1426
  %116 = inttoptr i64 %115 to %struct.sock_net_file*
  br label %117

; <label>:117:                                    ; preds = %107, %104
  %118 = phi %struct.sock_net_file* [ %116, %107 ], [ %105, %104 ]
  %119 = phi i64 [ %115, %107 ], [ %106, %104 ], !dbg !4531
  %120 = icmp slt i64 %119, 1, !dbg !4531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4531
  br i1 %120, label %121, label %130, !dbg !4531

; <label>:121:                                    ; preds = %117
  %122 = icmp sgt i64 %119, -513, !dbg !4531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4533
  br i1 %122, label %123, label %130, !dbg !4533

; <label>:123:                                    ; preds = %121
  %124 = trunc i64 %119 to i32, !dbg !4534
  %125 = icmp eq i32 %124, -9, !dbg !4537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4538
  br i1 %125, label %126, label %130, !dbg !4538

; <label>:126:                                    ; preds = %123
  %127 = xor i64 %79, -1, !dbg !4539
  %128 = load i64, i64* %76, align 8, !dbg !4539, !tbaa !2478
  %129 = and i64 %128, %127, !dbg !4539
  store i64 %129, i64* %76, align 8, !dbg !4539, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4541
  br label %288, !dbg !4541

; <label>:130:                                    ; preds = %123, %121, %117
  %131 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %118, i64 0, i32 1, !dbg !4542
  %132 = load i32, i32* %131, align 8, !dbg !4542, !tbaa !1421
  %133 = icmp slt i32 %73, %132, !dbg !4544
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4545
  br i1 %133, label %134, label %135, !dbg !4545

; <label>:134:                                    ; preds = %130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4546
  br label %135, !dbg !4546

; <label>:135:                                    ; preds = %134, %130
  %136 = phi i32 [ %132, %134 ], [ %73, %130 ], !dbg !4547
  %137 = and i32 %132, 63, !dbg !4548
  %138 = zext i32 %137 to i64, !dbg !4548
  %139 = shl i64 1, %138, !dbg !4548
  %140 = load i64, i64* %67, align 8, !dbg !4548, !tbaa !2478
  %141 = or i64 %140, %139, !dbg !4548
  store i64 %141, i64* %67, align 8, !dbg !4548, !tbaa !2478
  %142 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %118, i64 0, i32 0, !dbg !4549
  %143 = load %struct.vfscore_file*, %struct.vfscore_file** %142, align 8, !dbg !4549, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %143) #10, !dbg !4550
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4551
  br label %144, !dbg !4551

; <label>:144:                                    ; preds = %74, %71, %135
  %145 = phi i32 [ %136, %135 ], [ %73, %74 ], [ %73, %71 ], !dbg !4547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4552
  br i1 %64, label %216, label %146, !dbg !4552

; <label>:146:                                    ; preds = %144
  %147 = lshr i64 %72, 6, !dbg !4553
  %148 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %147, !dbg !4553
  %149 = load i64, i64* %148, align 8, !dbg !4553, !tbaa !2478
  %150 = and i64 %72, 63, !dbg !4553
  %151 = shl i64 1, %150, !dbg !4553
  %152 = and i64 %149, %151, !dbg !4553
  %153 = icmp eq i64 %152, 0, !dbg !4553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4554
  br i1 %153, label %216, label %154, !dbg !4554

; <label>:154:                                    ; preds = %146
  %155 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4555, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4558
  %156 = icmp ult i64 %155, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4559
  br i1 %156, label %179, label %157, !dbg !4559

; <label>:157:                                    ; preds = %154
  %158 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4560, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4563
  %159 = icmp ugt i64 %158, ptrtoint ([0 x i8]* @_end to i64), !dbg !4559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4564
  br i1 %159, label %179, label %160, !dbg !4564

; <label>:160:                                    ; preds = %157
  %161 = trunc i64 %72 to i32, !dbg !4569
  %162 = call %struct.vfscore_file* @vfscore_get_file(i32 %161) #10, !dbg !4569
  %163 = icmp eq %struct.vfscore_file* %162, null, !dbg !4571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4572
  br i1 %163, label %176, label %164, !dbg !4572

; <label>:164:                                    ; preds = %160
  %165 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %162, i64 0, i32 6, !dbg !4573
  %166 = load %struct.dentry*, %struct.dentry** %165, align 8, !dbg !4573, !tbaa !2585
  %167 = getelementptr inbounds %struct.dentry, %struct.dentry* %166, i64 0, i32 3, !dbg !4574
  %168 = load %struct.vnode*, %struct.vnode** %167, align 8, !dbg !4574, !tbaa !2847
  %169 = getelementptr inbounds %struct.vnode, %struct.vnode* %168, i64 0, i32 5, !dbg !4575
  %170 = load i32, i32* %169, align 4, !dbg !4575, !tbaa !2595
  %171 = icmp eq i32 %170, 6, !dbg !4576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4577
  br i1 %171, label %172, label %176, !dbg !4577

; <label>:172:                                    ; preds = %164
  %173 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %162, i64 0, i32 4, !dbg !4578
  %174 = bitcast i8** %173 to %struct.sock_net_file**, !dbg !4578
  %175 = load %struct.sock_net_file*, %struct.sock_net_file** %174, align 8, !dbg !4578, !tbaa !2581
  br label %176, !dbg !4579

; <label>:176:                                    ; preds = %164, %160, %172
  %177 = phi %struct.sock_net_file* [ %175, %172 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %160 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %164 ], !dbg !4580
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4582
  store %struct.sock_net_file* %177, %struct.sock_net_file** %9, align 8, !dbg !4583, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4583
  %178 = ptrtoint %struct.sock_net_file* %177 to i64, !dbg !4583
  br label %189, !dbg !4583

; <label>:179:                                    ; preds = %157, %154
  %180 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4584, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4588
  %181 = and i64 %180, -65536, !dbg !4590
  %182 = or i64 %181, 4097, !dbg !4590
  %183 = add nsw i64 %182, -1, !dbg !4590
  %184 = inttoptr i64 %183 to i32*, !dbg !4591
  %185 = load i32, i32* %184, align 4096, !dbg !4592, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4593
  %186 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %72, i32 %185, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4594, !srcloc !4595
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %186) #6, !dbg !4596, !srcloc !4600
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %187 = load i64, i64* %66, align 8, !dbg !4601, !tbaa !1426
  %188 = inttoptr i64 %187 to %struct.sock_net_file*
  br label %189

; <label>:189:                                    ; preds = %179, %176
  %190 = phi %struct.sock_net_file* [ %188, %179 ], [ %177, %176 ]
  %191 = phi i64 [ %187, %179 ], [ %178, %176 ], !dbg !4601
  %192 = icmp slt i64 %191, 1, !dbg !4601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4601
  br i1 %192, label %193, label %202, !dbg !4601

; <label>:193:                                    ; preds = %189
  %194 = icmp sgt i64 %191, -513, !dbg !4601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4603
  br i1 %194, label %195, label %202, !dbg !4603

; <label>:195:                                    ; preds = %193
  %196 = trunc i64 %191 to i32, !dbg !4604
  %197 = icmp eq i32 %196, -9, !dbg !4607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4608
  br i1 %197, label %198, label %202, !dbg !4608

; <label>:198:                                    ; preds = %195
  %199 = xor i64 %151, -1, !dbg !4609
  %200 = load i64, i64* %148, align 8, !dbg !4609, !tbaa !2478
  %201 = and i64 %200, %199, !dbg !4609
  store i64 %201, i64* %148, align 8, !dbg !4609, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4611
  br label %288, !dbg !4611

; <label>:202:                                    ; preds = %195, %193, %189
  %203 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %190, i64 0, i32 1, !dbg !4612
  %204 = load i32, i32* %203, align 8, !dbg !4612, !tbaa !1421
  %205 = icmp slt i32 %145, %204, !dbg !4614
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4615
  br i1 %205, label %206, label %207, !dbg !4615

; <label>:206:                                    ; preds = %202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4616
  br label %207, !dbg !4616

; <label>:207:                                    ; preds = %206, %202
  %208 = phi i32 [ %204, %206 ], [ %145, %202 ], !dbg !4617
  %209 = and i32 %204, 63, !dbg !4618
  %210 = zext i32 %209 to i64, !dbg !4618
  %211 = shl i64 1, %210, !dbg !4618
  %212 = load i64, i64* %68, align 8, !dbg !4618, !tbaa !2478
  %213 = or i64 %212, %211, !dbg !4618
  store i64 %213, i64* %68, align 8, !dbg !4618, !tbaa !2478
  %214 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %190, i64 0, i32 0, !dbg !4619
  %215 = load %struct.vfscore_file*, %struct.vfscore_file** %214, align 8, !dbg !4619, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %215) #10, !dbg !4620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4621
  br label %216, !dbg !4621

; <label>:216:                                    ; preds = %146, %144, %207
  %217 = phi i32 [ %208, %207 ], [ %145, %146 ], [ %145, %144 ], !dbg !4617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4622
  br i1 %65, label %288, label %218, !dbg !4622

; <label>:218:                                    ; preds = %216
  %219 = lshr i64 %72, 6, !dbg !4623
  %220 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %219, !dbg !4623
  %221 = load i64, i64* %220, align 8, !dbg !4623, !tbaa !2478
  %222 = and i64 %72, 63, !dbg !4623
  %223 = shl i64 1, %222, !dbg !4623
  %224 = and i64 %221, %223, !dbg !4623
  %225 = icmp eq i64 %224, 0, !dbg !4623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4624
  br i1 %225, label %288, label %226, !dbg !4624

; <label>:226:                                    ; preds = %218
  %227 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4625, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4628
  %228 = icmp ult i64 %227, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4629
  br i1 %228, label %251, label %229, !dbg !4629

; <label>:229:                                    ; preds = %226
  %230 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4630, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4633
  %231 = icmp ugt i64 %230, ptrtoint ([0 x i8]* @_end to i64), !dbg !4629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4634
  br i1 %231, label %251, label %232, !dbg !4634

; <label>:232:                                    ; preds = %229
  %233 = trunc i64 %72 to i32, !dbg !4639
  %234 = call %struct.vfscore_file* @vfscore_get_file(i32 %233) #10, !dbg !4639
  %235 = icmp eq %struct.vfscore_file* %234, null, !dbg !4641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4642
  br i1 %235, label %248, label %236, !dbg !4642

; <label>:236:                                    ; preds = %232
  %237 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %234, i64 0, i32 6, !dbg !4643
  %238 = load %struct.dentry*, %struct.dentry** %237, align 8, !dbg !4643, !tbaa !2585
  %239 = getelementptr inbounds %struct.dentry, %struct.dentry* %238, i64 0, i32 3, !dbg !4644
  %240 = load %struct.vnode*, %struct.vnode** %239, align 8, !dbg !4644, !tbaa !2847
  %241 = getelementptr inbounds %struct.vnode, %struct.vnode* %240, i64 0, i32 5, !dbg !4645
  %242 = load i32, i32* %241, align 4, !dbg !4645, !tbaa !2595
  %243 = icmp eq i32 %242, 6, !dbg !4646
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4647
  br i1 %243, label %244, label %248, !dbg !4647

; <label>:244:                                    ; preds = %236
  %245 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %234, i64 0, i32 4, !dbg !4648
  %246 = bitcast i8** %245 to %struct.sock_net_file**, !dbg !4648
  %247 = load %struct.sock_net_file*, %struct.sock_net_file** %246, align 8, !dbg !4648, !tbaa !2581
  br label %248, !dbg !4649

; <label>:248:                                    ; preds = %236, %232, %244
  %249 = phi %struct.sock_net_file* [ %247, %244 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %232 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %236 ], !dbg !4650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4652
  store %struct.sock_net_file* %249, %struct.sock_net_file** %9, align 8, !dbg !4653, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4653
  %250 = ptrtoint %struct.sock_net_file* %249 to i64, !dbg !4653
  br label %261, !dbg !4653

; <label>:251:                                    ; preds = %229, %226
  %252 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4654, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4658
  %253 = and i64 %252, -65536, !dbg !4660
  %254 = or i64 %253, 4097, !dbg !4660
  %255 = add nsw i64 %254, -1, !dbg !4660
  %256 = inttoptr i64 %255 to i32*, !dbg !4661
  %257 = load i32, i32* %256, align 4096, !dbg !4662, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4663
  %258 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %72, i32 %257, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4664, !srcloc !4665
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %258) #6, !dbg !4666, !srcloc !4670
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %259 = load i64, i64* %66, align 8, !dbg !4671, !tbaa !1426
  %260 = inttoptr i64 %259 to %struct.sock_net_file*
  br label %261

; <label>:261:                                    ; preds = %251, %248
  %262 = phi %struct.sock_net_file* [ %260, %251 ], [ %249, %248 ]
  %263 = phi i64 [ %259, %251 ], [ %250, %248 ], !dbg !4671
  %264 = icmp slt i64 %263, 1, !dbg !4671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4671
  br i1 %264, label %265, label %274, !dbg !4671

; <label>:265:                                    ; preds = %261
  %266 = icmp sgt i64 %263, -513, !dbg !4671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4673
  br i1 %266, label %267, label %274, !dbg !4673

; <label>:267:                                    ; preds = %265
  %268 = trunc i64 %263 to i32, !dbg !4674
  %269 = icmp eq i32 %268, -9, !dbg !4677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4678
  br i1 %269, label %270, label %274, !dbg !4678

; <label>:270:                                    ; preds = %267
  %271 = xor i64 %223, -1, !dbg !4679
  %272 = load i64, i64* %220, align 8, !dbg !4679, !tbaa !2478
  %273 = and i64 %272, %271, !dbg !4679
  store i64 %273, i64* %220, align 8, !dbg !4679, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4681
  br label %288, !dbg !4681

; <label>:274:                                    ; preds = %267, %265, %261
  %275 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %262, i64 0, i32 1, !dbg !4682
  %276 = load i32, i32* %275, align 8, !dbg !4682, !tbaa !1421
  %277 = icmp slt i32 %217, %276, !dbg !4684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4685
  br i1 %277, label %278, label %279, !dbg !4685

; <label>:278:                                    ; preds = %274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4686
  br label %279, !dbg !4686

; <label>:279:                                    ; preds = %278, %274
  %280 = phi i32 [ %276, %278 ], [ %217, %274 ], !dbg !4687
  %281 = and i32 %276, 63, !dbg !4688
  %282 = zext i32 %281 to i64, !dbg !4688
  %283 = shl i64 1, %282, !dbg !4688
  %284 = load i64, i64* %69, align 8, !dbg !4688, !tbaa !2478
  %285 = or i64 %284, %283, !dbg !4688
  store i64 %285, i64* %69, align 8, !dbg !4688, !tbaa !2478
  %286 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %262, i64 0, i32 0, !dbg !4689
  %287 = load %struct.vfscore_file*, %struct.vfscore_file** %286, align 8, !dbg !4689, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %287) #10, !dbg !4690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4691
  br label %288, !dbg !4691

; <label>:288:                                    ; preds = %218, %216, %279, %270, %198, %126
  %289 = phi i32 [ %73, %126 ], [ %145, %198 ], [ %217, %270 ], [ %280, %279 ], [ %217, %218 ], [ %217, %216 ], !dbg !4687
  %290 = add nuw nsw i64 %72, 1, !dbg !4692
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4480
  %291 = icmp eq i64 %290, %70, !dbg !4479
  br i1 %291, label %292, label %71, !dbg !4480, !llvm.loop !4694

; <label>:292:                                    ; preds = %288, %39
  %293 = phi i32 [ 0, %39 ], [ %289, %288 ], !dbg !4696
  %294 = add nsw i32 %293, 1, !dbg !4697
  %295 = call i32 @lwip_select(i32 %294, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8, %struct.timeval* %4) #8, !dbg !4701
  %296 = icmp slt i32 %295, 0, !dbg !4703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4705
  br i1 %296, label %487, label %297, !dbg !4705

; <label>:297:                                    ; preds = %292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4707
  br i1 %61, label %298, label %487, !dbg !4707

; <label>:298:                                    ; preds = %297
  %299 = icmp eq %struct._types_fd_set* %1, null
  %300 = icmp eq %struct._types_fd_set* %2, null
  %301 = icmp eq %struct._types_fd_set* %3, null
  %302 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0
  %303 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %7, i64 0, i32 0, i64 0
  %304 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %305 = zext i32 %0 to i64
  br label %306, !dbg !4707

; <label>:306:                                    ; preds = %484, %298
  %307 = phi i64 [ 0, %298 ], [ %485, %484 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4708
  br i1 %299, label %366, label %308, !dbg !4708

; <label>:308:                                    ; preds = %306
  %309 = lshr i64 %307, 6, !dbg !4709
  %310 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %309, !dbg !4709
  %311 = load i64, i64* %310, align 8, !dbg !4709, !tbaa !2478
  %312 = and i64 %307, 63, !dbg !4709
  %313 = shl i64 1, %312, !dbg !4709
  %314 = and i64 %311, %313, !dbg !4709
  %315 = icmp eq i64 %314, 0, !dbg !4709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4710
  br i1 %315, label %366, label %316, !dbg !4710

; <label>:316:                                    ; preds = %308
  %317 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4711, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4714
  %318 = icmp ult i64 %317, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4715
  br i1 %318, label %340, label %319, !dbg !4715

; <label>:319:                                    ; preds = %316
  %320 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4716, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4719
  %321 = icmp ugt i64 %320, ptrtoint ([0 x i8]* @_end to i64), !dbg !4715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4720
  br i1 %321, label %340, label %322, !dbg !4720

; <label>:322:                                    ; preds = %319
  %323 = trunc i64 %307 to i32, !dbg !4725
  %324 = call %struct.vfscore_file* @vfscore_get_file(i32 %323) #10, !dbg !4725
  %325 = icmp eq %struct.vfscore_file* %324, null, !dbg !4727
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4728
  br i1 %325, label %338, label %326, !dbg !4728

; <label>:326:                                    ; preds = %322
  %327 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %324, i64 0, i32 6, !dbg !4729
  %328 = load %struct.dentry*, %struct.dentry** %327, align 8, !dbg !4729, !tbaa !2585
  %329 = getelementptr inbounds %struct.dentry, %struct.dentry* %328, i64 0, i32 3, !dbg !4730
  %330 = load %struct.vnode*, %struct.vnode** %329, align 8, !dbg !4730, !tbaa !2847
  %331 = getelementptr inbounds %struct.vnode, %struct.vnode* %330, i64 0, i32 5, !dbg !4731
  %332 = load i32, i32* %331, align 4, !dbg !4731, !tbaa !2595
  %333 = icmp eq i32 %332, 6, !dbg !4732
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4733
  br i1 %333, label %334, label %338, !dbg !4733

; <label>:334:                                    ; preds = %326
  %335 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %324, i64 0, i32 4, !dbg !4734
  %336 = bitcast i8** %335 to %struct.sock_net_file**, !dbg !4734
  %337 = load %struct.sock_net_file*, %struct.sock_net_file** %336, align 8, !dbg !4734, !tbaa !2581
  br label %338, !dbg !4735

; <label>:338:                                    ; preds = %326, %322, %334
  %339 = phi %struct.sock_net_file* [ %337, %334 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %322 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %326 ], !dbg !4736
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4738
  store %struct.sock_net_file* %339, %struct.sock_net_file** %9, align 8, !dbg !4739, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4739
  br label %349, !dbg !4739

; <label>:340:                                    ; preds = %319, %316
  %341 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4740, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4744
  %342 = and i64 %341, -65536, !dbg !4746
  %343 = or i64 %342, 4097, !dbg !4746
  %344 = add nsw i64 %343, -1, !dbg !4746
  %345 = inttoptr i64 %344 to i32*, !dbg !4747
  %346 = load i32, i32* %345, align 4096, !dbg !4748, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4749
  %347 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %307, i32 %346, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4750, !srcloc !4751
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %347) #6, !dbg !4752, !srcloc !4756
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %348 = load %struct.sock_net_file*, %struct.sock_net_file** %9, align 8, !dbg !4757, !tbaa !1426
  br label %349

; <label>:349:                                    ; preds = %340, %338
  %350 = phi %struct.sock_net_file* [ %348, %340 ], [ %339, %338 ], !dbg !4757
  %351 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %350, i64 0, i32 1, !dbg !4757
  %352 = load i32, i32* %351, align 8, !dbg !4757, !tbaa !1421
  %353 = load i64, i64* %302, align 8, !dbg !4757, !tbaa !2478
  %354 = and i32 %352, 63, !dbg !4757
  %355 = zext i32 %354 to i64, !dbg !4757
  %356 = shl i64 1, %355, !dbg !4757
  %357 = and i64 %356, %353, !dbg !4757
  %358 = icmp eq i64 %357, 0, !dbg !4757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4759
  br i1 %358, label %359, label %363, !dbg !4759

; <label>:359:                                    ; preds = %349
  %360 = xor i64 %313, -1, !dbg !4760
  %361 = load i64, i64* %310, align 8, !dbg !4760, !tbaa !2478
  %362 = and i64 %361, %360, !dbg !4760
  store i64 %362, i64* %310, align 8, !dbg !4760, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4760
  br label %363, !dbg !4760

; <label>:363:                                    ; preds = %349, %359
  %364 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %350, i64 0, i32 0, !dbg !4761
  %365 = load %struct.vfscore_file*, %struct.vfscore_file** %364, align 8, !dbg !4761, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %365) #10, !dbg !4762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4763
  br label %366, !dbg !4763

; <label>:366:                                    ; preds = %308, %306, %363
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4764
  br i1 %300, label %425, label %367, !dbg !4764

; <label>:367:                                    ; preds = %366
  %368 = lshr i64 %307, 6, !dbg !4765
  %369 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %368, !dbg !4765
  %370 = load i64, i64* %369, align 8, !dbg !4765, !tbaa !2478
  %371 = and i64 %307, 63, !dbg !4765
  %372 = shl i64 1, %371, !dbg !4765
  %373 = and i64 %370, %372, !dbg !4765
  %374 = icmp eq i64 %373, 0, !dbg !4765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4766
  br i1 %374, label %425, label %375, !dbg !4766

; <label>:375:                                    ; preds = %367
  %376 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4767, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4770
  %377 = icmp ult i64 %376, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4771
  br i1 %377, label %399, label %378, !dbg !4771

; <label>:378:                                    ; preds = %375
  %379 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4772, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4775
  %380 = icmp ugt i64 %379, ptrtoint ([0 x i8]* @_end to i64), !dbg !4771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4776
  br i1 %380, label %399, label %381, !dbg !4776

; <label>:381:                                    ; preds = %378
  %382 = trunc i64 %307 to i32, !dbg !4781
  %383 = call %struct.vfscore_file* @vfscore_get_file(i32 %382) #10, !dbg !4781
  %384 = icmp eq %struct.vfscore_file* %383, null, !dbg !4783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4784
  br i1 %384, label %397, label %385, !dbg !4784

; <label>:385:                                    ; preds = %381
  %386 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %383, i64 0, i32 6, !dbg !4785
  %387 = load %struct.dentry*, %struct.dentry** %386, align 8, !dbg !4785, !tbaa !2585
  %388 = getelementptr inbounds %struct.dentry, %struct.dentry* %387, i64 0, i32 3, !dbg !4786
  %389 = load %struct.vnode*, %struct.vnode** %388, align 8, !dbg !4786, !tbaa !2847
  %390 = getelementptr inbounds %struct.vnode, %struct.vnode* %389, i64 0, i32 5, !dbg !4787
  %391 = load i32, i32* %390, align 4, !dbg !4787, !tbaa !2595
  %392 = icmp eq i32 %391, 6, !dbg !4788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4789
  br i1 %392, label %393, label %397, !dbg !4789

; <label>:393:                                    ; preds = %385
  %394 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %383, i64 0, i32 4, !dbg !4790
  %395 = bitcast i8** %394 to %struct.sock_net_file**, !dbg !4790
  %396 = load %struct.sock_net_file*, %struct.sock_net_file** %395, align 8, !dbg !4790, !tbaa !2581
  br label %397, !dbg !4791

; <label>:397:                                    ; preds = %385, %381, %393
  %398 = phi %struct.sock_net_file* [ %396, %393 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %381 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %385 ], !dbg !4792
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4794
  store %struct.sock_net_file* %398, %struct.sock_net_file** %9, align 8, !dbg !4795, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4795
  br label %408, !dbg !4795

; <label>:399:                                    ; preds = %378, %375
  %400 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4796, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4800
  %401 = and i64 %400, -65536, !dbg !4802
  %402 = or i64 %401, 4097, !dbg !4802
  %403 = add nsw i64 %402, -1, !dbg !4802
  %404 = inttoptr i64 %403 to i32*, !dbg !4803
  %405 = load i32, i32* %404, align 4096, !dbg !4804, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4805
  %406 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %307, i32 %405, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4806, !srcloc !4807
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %406) #6, !dbg !4808, !srcloc !4812
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %407 = load %struct.sock_net_file*, %struct.sock_net_file** %9, align 8, !dbg !4813, !tbaa !1426
  br label %408

; <label>:408:                                    ; preds = %399, %397
  %409 = phi %struct.sock_net_file* [ %407, %399 ], [ %398, %397 ], !dbg !4813
  %410 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %409, i64 0, i32 1, !dbg !4813
  %411 = load i32, i32* %410, align 8, !dbg !4813, !tbaa !1421
  %412 = load i64, i64* %303, align 8, !dbg !4813, !tbaa !2478
  %413 = and i32 %411, 63, !dbg !4813
  %414 = zext i32 %413 to i64, !dbg !4813
  %415 = shl i64 1, %414, !dbg !4813
  %416 = and i64 %415, %412, !dbg !4813
  %417 = icmp eq i64 %416, 0, !dbg !4813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4815
  br i1 %417, label %418, label %422, !dbg !4815

; <label>:418:                                    ; preds = %408
  %419 = xor i64 %372, -1, !dbg !4816
  %420 = load i64, i64* %369, align 8, !dbg !4816, !tbaa !2478
  %421 = and i64 %420, %419, !dbg !4816
  store i64 %421, i64* %369, align 8, !dbg !4816, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4816
  br label %422, !dbg !4816

; <label>:422:                                    ; preds = %408, %418
  %423 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %409, i64 0, i32 0, !dbg !4817
  %424 = load %struct.vfscore_file*, %struct.vfscore_file** %423, align 8, !dbg !4817, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %424) #10, !dbg !4818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4819
  br label %425, !dbg !4819

; <label>:425:                                    ; preds = %367, %366, %422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4820
  br i1 %301, label %484, label %426, !dbg !4820

; <label>:426:                                    ; preds = %425
  %427 = lshr i64 %307, 6, !dbg !4821
  %428 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %427, !dbg !4821
  %429 = load i64, i64* %428, align 8, !dbg !4821, !tbaa !2478
  %430 = and i64 %307, 63, !dbg !4821
  %431 = shl i64 1, %430, !dbg !4821
  %432 = and i64 %429, %431, !dbg !4821
  %433 = icmp eq i64 %432, 0, !dbg !4821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4822
  br i1 %433, label %484, label %434, !dbg !4822

; <label>:434:                                    ; preds = %426
  %435 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4823, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4826
  %436 = icmp ult i64 %435, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !4827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4827
  br i1 %436, label %458, label %437, !dbg !4827

; <label>:437:                                    ; preds = %434
  %438 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4828, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4831
  %439 = icmp ugt i64 %438, ptrtoint ([0 x i8]* @_end to i64), !dbg !4827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4832
  br i1 %439, label %458, label %440, !dbg !4832

; <label>:440:                                    ; preds = %437
  %441 = trunc i64 %307 to i32, !dbg !4837
  %442 = call %struct.vfscore_file* @vfscore_get_file(i32 %441) #10, !dbg !4837
  %443 = icmp eq %struct.vfscore_file* %442, null, !dbg !4839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4840
  br i1 %443, label %456, label %444, !dbg !4840

; <label>:444:                                    ; preds = %440
  %445 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %442, i64 0, i32 6, !dbg !4841
  %446 = load %struct.dentry*, %struct.dentry** %445, align 8, !dbg !4841, !tbaa !2585
  %447 = getelementptr inbounds %struct.dentry, %struct.dentry* %446, i64 0, i32 3, !dbg !4842
  %448 = load %struct.vnode*, %struct.vnode** %447, align 8, !dbg !4842, !tbaa !2847
  %449 = getelementptr inbounds %struct.vnode, %struct.vnode* %448, i64 0, i32 5, !dbg !4843
  %450 = load i32, i32* %449, align 4, !dbg !4843, !tbaa !2595
  %451 = icmp eq i32 %450, 6, !dbg !4844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4845
  br i1 %451, label %452, label %456, !dbg !4845

; <label>:452:                                    ; preds = %444
  %453 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %442, i64 0, i32 4, !dbg !4846
  %454 = bitcast i8** %453 to %struct.sock_net_file**, !dbg !4846
  %455 = load %struct.sock_net_file*, %struct.sock_net_file** %454, align 8, !dbg !4846, !tbaa !2581
  br label %456, !dbg !4847

; <label>:456:                                    ; preds = %444, %440, %452
  %457 = phi %struct.sock_net_file* [ %455, %452 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %440 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %444 ], !dbg !4848
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4850
  store %struct.sock_net_file* %457, %struct.sock_net_file** %9, align 8, !dbg !4851, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4851
  br label %467, !dbg !4851

; <label>:458:                                    ; preds = %437, %434
  %459 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4852, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4856
  %460 = and i64 %459, -65536, !dbg !4858
  %461 = or i64 %460, 4097, !dbg !4858
  %462 = add nsw i64 %461, -1, !dbg !4858
  %463 = inttoptr i64 %462 to i32*, !dbg !4859
  %464 = load i32, i32* %463, align 4096, !dbg !4860, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4861
  %465 = call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %307, i32 %464, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !4862, !srcloc !4863
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %9, i64 %465) #6, !dbg !4864, !srcloc !4868
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %466 = load %struct.sock_net_file*, %struct.sock_net_file** %9, align 8, !dbg !4869, !tbaa !1426
  br label %467

; <label>:467:                                    ; preds = %458, %456
  %468 = phi %struct.sock_net_file* [ %466, %458 ], [ %457, %456 ], !dbg !4869
  %469 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %468, i64 0, i32 1, !dbg !4869
  %470 = load i32, i32* %469, align 8, !dbg !4869, !tbaa !1421
  %471 = load i64, i64* %304, align 8, !dbg !4869, !tbaa !2478
  %472 = and i32 %470, 63, !dbg !4869
  %473 = zext i32 %472 to i64, !dbg !4869
  %474 = shl i64 1, %473, !dbg !4869
  %475 = and i64 %474, %471, !dbg !4869
  %476 = icmp eq i64 %475, 0, !dbg !4869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4871
  br i1 %476, label %477, label %481, !dbg !4871

; <label>:477:                                    ; preds = %467
  %478 = xor i64 %431, -1, !dbg !4872
  %479 = load i64, i64* %428, align 8, !dbg !4872, !tbaa !2478
  %480 = and i64 %479, %478, !dbg !4872
  store i64 %480, i64* %428, align 8, !dbg !4872, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4872
  br label %481, !dbg !4872

; <label>:481:                                    ; preds = %467, %477
  %482 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %468, i64 0, i32 0, !dbg !4873
  %483 = load %struct.vfscore_file*, %struct.vfscore_file** %482, align 8, !dbg !4873, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %483) #10, !dbg !4874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4875
  br label %484, !dbg !4875

; <label>:484:                                    ; preds = %426, %425, %481
  %485 = add nuw nsw i64 %307, 1, !dbg !4876
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4707
  %486 = icmp eq i64 %485, %305, !dbg !4878
  br i1 %486, label %487, label %306, !dbg !4707, !llvm.loop !4879

; <label>:487:                                    ; preds = %484, %292, %297, %38
  %488 = phi i32 [ 0, %38 ], [ %295, %297 ], [ %295, %292 ], [ %295, %484 ], !dbg !4547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6, !dbg !4882
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !4882
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !4882
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !4882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4882
  ret i32 %488, !dbg !4882
}

; Function Attrs: noredzone
declare dso_local void @uk_sched_thread_sleep(i64) #5

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_select(i32, %struct._types_fd_set*, %struct._types_fd_set*, %struct._types_fd_set*, %struct.timeval* readonly) local_unnamed_addr #0 !dbg !4883 {
  %6 = alloca %struct._types_fd_set, align 8
  %7 = alloca %struct._types_fd_set, align 8
  %8 = alloca %struct._types_fd_set, align 8
  %9 = bitcast %struct._types_fd_set* %6 to i8*, !dbg !4995
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !4995
  %10 = bitcast %struct._types_fd_set* %7 to i8*, !dbg !4995
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !4995
  %11 = bitcast %struct._types_fd_set* %8 to i8*, !dbg !4995
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !4995
  %12 = icmp ugt i32 %0, 64, !dbg !4996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4996
  br i1 %12, label %13, label %28, !dbg !4996

; <label>:13:                                     ; preds = %5
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4997, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5000
  %15 = icmp ult i64 %14, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5001
  br i1 %15, label %21, label %16, !dbg !5001

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5002, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5005
  %18 = icmp ugt i64 %17, ptrtoint ([0 x i8]* @_end to i64), !dbg !5001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5006
  br i1 %18, label %21, label %19, !dbg !5006

; <label>:19:                                     ; preds = %16
  %20 = tail call i32* @__errno() #10, !dbg !5010
  store i32 22, i32* %20, align 4, !dbg !5011, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5012
  br label %345, !dbg !5013

; <label>:21:                                     ; preds = %16, %13
  %22 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5014, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5018
  %23 = and i64 %22, -65536, !dbg !5020
  %24 = or i64 %23, 4097, !dbg !5020
  %25 = add nsw i64 %24, -1, !dbg !5020
  %26 = inttoptr i64 %25 to i32*, !dbg !5021
  %27 = load i32, i32* %26, align 4096, !dbg !5022, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5023
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %27, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5024, !srcloc !5025
  br label %345

; <label>:28:                                     ; preds = %5
  %29 = call fastcc i32 @lwip_selscan(i32 %0, %struct._types_fd_set* %1, %struct._types_fd_set* %2, %struct._types_fd_set* %3, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8) #8, !dbg !5029
  %30 = icmp slt i32 %29, 0, !dbg !5031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5032
  br i1 %30, label %31, label %46, !dbg !5032

; <label>:31:                                     ; preds = %28
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5033, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5036
  %33 = icmp ult i64 %32, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5037
  br i1 %33, label %39, label %34, !dbg !5037

; <label>:34:                                     ; preds = %31
  %35 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5038, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5041
  %36 = icmp ugt i64 %35, ptrtoint ([0 x i8]* @_end to i64), !dbg !5037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5042
  br i1 %36, label %39, label %37, !dbg !5042

; <label>:37:                                     ; preds = %34
  %38 = tail call i32* @__errno() #10, !dbg !5046
  store i32 9, i32* %38, align 4, !dbg !5047, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5048
  br label %345, !dbg !5049

; <label>:39:                                     ; preds = %34, %31
  %40 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5050, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5054
  %41 = and i64 %40, -65536, !dbg !5056
  %42 = or i64 %41, 4097, !dbg !5056
  %43 = add nsw i64 %42, -1, !dbg !5056
  %44 = inttoptr i64 %43 to i32*, !dbg !5057
  %45 = load i32, i32* %44, align 4096, !dbg !5058, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5059
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %45, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5060, !srcloc !5061
  br label %345

; <label>:46:                                     ; preds = %28
  %47 = icmp eq i32 %29, 0, !dbg !5062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5063
  br i1 %47, label %48, label %311, !dbg !5063

; <label>:48:                                     ; preds = %46
  %49 = icmp eq %struct.timeval* %4, null, !dbg !5064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5065
  br i1 %49, label %58, label %50, !dbg !5065

; <label>:50:                                     ; preds = %48
  %51 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0, !dbg !5066
  %52 = load i64, i64* %51, align 8, !dbg !5066, !tbaa !4428
  %53 = icmp eq i64 %52, 0, !dbg !5067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5068
  br i1 %53, label %54, label %58, !dbg !5068

; <label>:54:                                     ; preds = %50
  %55 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1, !dbg !5069
  %56 = load i64, i64* %55, align 8, !dbg !5069, !tbaa !4433
  %57 = icmp eq i64 %56, 0, !dbg !5070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5071
  br i1 %57, label %311, label %58, !dbg !5071

; <label>:58:                                     ; preds = %48, %54, %50
  %59 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !5072, !tbaa !1426
  %60 = icmp eq %struct.uk_alloc* %59, null, !dbg !5076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5077
  br i1 %60, label %61, label %63, !dbg !5077, !prof !1445

; <label>:61:                                     ; preds = %58
  %62 = tail call i32* @__errno() #10, !dbg !5078
  store i32 12, i32* %62, align 4, !dbg !5079, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5072
  br label %69, !dbg !5072

; <label>:63:                                     ; preds = %58
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5086
  %64 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %59, i64 0, i32 0, !dbg !5087
  %65 = load i8* (%struct.uk_alloc*, i64)*, i8* (%struct.uk_alloc*, i64)** %64, align 8, !dbg !5087, !tbaa !1426
  %66 = tail call i8* %65(%struct.uk_alloc* nonnull %59, i64 88) #10, !dbg !5088
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5089
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5081
  %67 = bitcast i8* %66 to %struct.lwip_select_cb*, !dbg !5072
  %68 = icmp eq i8* %66, null, !dbg !5091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5072
  br i1 %68, label %69, label %84, !dbg !5072

; <label>:69:                                     ; preds = %61, %63
  %70 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5093, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5096
  %71 = icmp ult i64 %70, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5097
  br i1 %71, label %77, label %72, !dbg !5097

; <label>:72:                                     ; preds = %69
  %73 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5098, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5101
  %74 = icmp ugt i64 %73, ptrtoint ([0 x i8]* @_end to i64), !dbg !5097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5102
  br i1 %74, label %77, label %75, !dbg !5102

; <label>:75:                                     ; preds = %72
  %76 = tail call i32* @__errno() #10, !dbg !5106
  store i32 12, i32* %76, align 4, !dbg !5107, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5108
  br label %308, !dbg !5109

; <label>:77:                                     ; preds = %72, %69
  %78 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5110, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5114
  %79 = and i64 %78, -65536, !dbg !5116
  %80 = or i64 %79, 4097, !dbg !5116
  %81 = add nsw i64 %80, -1, !dbg !5116
  %82 = inttoptr i64 %81 to i32*, !dbg !5117
  %83 = load i32, i32* %82, align 4096, !dbg !5118, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5119
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -12, i32 %83, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5120, !srcloc !5121
  br label %308

; <label>:84:                                     ; preds = %63
  %85 = tail call i8* @memset(i8* nonnull %66, i32 0, i64 88) #10, !dbg !5122
  %86 = getelementptr inbounds i8, i8* %66, i64 16, !dbg !5123
  %87 = bitcast i8* %86 to %struct._types_fd_set**, !dbg !5123
  store %struct._types_fd_set* %1, %struct._types_fd_set** %87, align 8, !dbg !5124, !tbaa !5125
  %88 = getelementptr inbounds i8, i8* %66, i64 24, !dbg !5126
  %89 = bitcast i8* %88 to %struct._types_fd_set**, !dbg !5126
  store %struct._types_fd_set* %2, %struct._types_fd_set** %89, align 8, !dbg !5127, !tbaa !5128
  %90 = getelementptr inbounds i8, i8* %66, i64 32, !dbg !5129
  %91 = bitcast i8* %90 to %struct._types_fd_set**, !dbg !5129
  store %struct._types_fd_set* %3, %struct._types_fd_set** %91, align 8, !dbg !5130, !tbaa !5131
  %92 = getelementptr inbounds i8, i8* %66, i64 56, !dbg !5132
  %93 = bitcast i8* %92 to %struct.sys_sem_t*, !dbg !5132
  %94 = tail call signext i8 @sys_sem_new(%struct.sys_sem_t* nonnull %93, i8 zeroext 0) #10, !dbg !5133
  %95 = icmp eq i8 %94, 0, !dbg !5134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5135
  br i1 %95, label %118, label %96, !dbg !5135

; <label>:96:                                     ; preds = %84
  %97 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5136, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5139
  %98 = icmp ult i64 %97, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5140
  br i1 %98, label %104, label %99, !dbg !5140

; <label>:99:                                     ; preds = %96
  %100 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5141, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5144
  %101 = icmp ugt i64 %100, ptrtoint ([0 x i8]* @_end to i64), !dbg !5140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5145
  br i1 %101, label %104, label %102, !dbg !5145

; <label>:102:                                    ; preds = %99
  %103 = tail call i32* @__errno() #10, !dbg !5149
  store i32 12, i32* %103, align 4, !dbg !5150, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5151
  br label %111, !dbg !5152

; <label>:104:                                    ; preds = %99, %96
  %105 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5153, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5157
  %106 = and i64 %105, -65536, !dbg !5159
  %107 = or i64 %106, 4097, !dbg !5159
  %108 = add nsw i64 %107, -1, !dbg !5159
  %109 = inttoptr i64 %108 to i32*, !dbg !5160
  %110 = load i32, i32* %109, align 4096, !dbg !5161, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5162
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -12, i32 %110, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5163, !srcloc !5164
  br label %111

; <label>:111:                                    ; preds = %104, %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %112 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !5165, !tbaa !1426
  %113 = icmp eq %struct.uk_alloc* %112, null, !dbg !5172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5173
  br i1 %113, label %114, label %115, !dbg !5173, !prof !1445

; <label>:114:                                    ; preds = %111
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !5174
  tail call void @ukplat_terminate(i32 3) #9, !dbg !5174
  unreachable

; <label>:115:                                    ; preds = %111
  %116 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %112, i64 0, i32 5, !dbg !5175
  %117 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %116, align 8, !dbg !5175, !tbaa !1426
  tail call void %117(%struct.uk_alloc* nonnull %112, i8* nonnull %66) #10, !dbg !5176
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5177
  br label %308, !dbg !5178

; <label>:118:                                    ; preds = %84
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !5181
  %119 = load i64, i64* bitcast (%struct.lwip_select_cb** @select_cb_list to i64*), align 8, !dbg !5182, !tbaa !1426
  %120 = bitcast i8* %66 to i64*, !dbg !5183
  store i64 %119, i64* %120, align 8, !dbg !5183, !tbaa !4178
  %121 = icmp eq i64 %119, 0, !dbg !5184
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5185
  br i1 %121, label %126, label %122, !dbg !5185

; <label>:122:                                    ; preds = %118
  %123 = inttoptr i64 %119 to %struct.lwip_select_cb*
  %124 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %123, i64 0, i32 1, !dbg !5186
  %125 = bitcast %struct.lwip_select_cb** %124 to i8**, !dbg !5187
  store i8* %66, i8** %125, align 8, !dbg !5187, !tbaa !4185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5188
  br label %126, !dbg !5188

; <label>:126:                                    ; preds = %118, %122
  store i8* %66, i8** bitcast (%struct.lwip_select_cb** @select_cb_list to i8**), align 8, !dbg !5189, !tbaa !1426
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !5190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5194
  %127 = icmp sgt i32 %0, 0, !dbg !5195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5196
  br i1 %127, label %128, label %205, !dbg !5196

; <label>:128:                                    ; preds = %126
  %129 = icmp eq %struct._types_fd_set* %1, null
  %130 = icmp eq %struct._types_fd_set* %2, null
  %131 = icmp eq %struct._types_fd_set* %3, null
  %132 = sext i32 %0 to i64, !dbg !5196
  br label %133, !dbg !5196

; <label>:133:                                    ; preds = %128, %202
  %134 = phi i64 [ 0, %128 ], [ %203, %202 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5197
  br i1 %129, label %143, label %135, !dbg !5197

; <label>:135:                                    ; preds = %133
  %136 = lshr i64 %134, 6, !dbg !5198
  %137 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %136, !dbg !5198
  %138 = load i64, i64* %137, align 8, !dbg !5198, !tbaa !2478
  %139 = and i64 %134, 63, !dbg !5198
  %140 = shl i64 1, %139, !dbg !5198
  %141 = and i64 %138, %140, !dbg !5198
  %142 = icmp eq i64 %141, 0, !dbg !5198
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5199
  br i1 %142, label %143, label %161, !dbg !5199

; <label>:143:                                    ; preds = %135, %133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5200
  br i1 %130, label %152, label %144, !dbg !5200

; <label>:144:                                    ; preds = %143
  %145 = lshr i64 %134, 6, !dbg !5201
  %146 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %145, !dbg !5201
  %147 = load i64, i64* %146, align 8, !dbg !5201, !tbaa !2478
  %148 = and i64 %134, 63, !dbg !5201
  %149 = shl i64 1, %148, !dbg !5201
  %150 = and i64 %147, %149, !dbg !5201
  %151 = icmp eq i64 %150, 0, !dbg !5201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5202
  br i1 %151, label %152, label %161, !dbg !5202

; <label>:152:                                    ; preds = %144, %143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5203
  br i1 %131, label %202, label %153, !dbg !5203

; <label>:153:                                    ; preds = %152
  %154 = lshr i64 %134, 6, !dbg !5204
  %155 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %154, !dbg !5204
  %156 = load i64, i64* %155, align 8, !dbg !5204, !tbaa !2478
  %157 = and i64 %134, 63, !dbg !5204
  %158 = shl i64 1, %157, !dbg !5204
  %159 = and i64 %156, %158, !dbg !5204
  %160 = icmp eq i64 %159, 0, !dbg !5204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5205
  br i1 %160, label %202, label %161, !dbg !5205

; <label>:161:                                    ; preds = %135, %144, %153
  %162 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !5206
  %163 = icmp ugt i64 %134, 63, !dbg !5224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5229
  br i1 %163, label %184, label %164, !dbg !5224

; <label>:164:                                    ; preds = %161
  %165 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %134, i32 5, !dbg !5230
  %166 = load i8, i8* %165, align 2, !dbg !5231, !tbaa !5232
  %167 = add i8 %166, 1, !dbg !5231
  store i8 %167, i8* %165, align 2, !dbg !5231, !tbaa !5232
  %168 = icmp eq i8 %167, 0, !dbg !5233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5234
  br i1 %168, label %169, label %201, !dbg !5234

; <label>:169:                                    ; preds = %164
  store i8 %166, i8* %165, align 2, !dbg !5235, !tbaa !5232
  tail call void @ukplat_lcpu_restore_irqf(i64 %162) #10, !dbg !5236
  %170 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5237, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5240
  %171 = icmp ult i64 %170, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5241
  br i1 %171, label %177, label %172, !dbg !5241

; <label>:172:                                    ; preds = %169
  %173 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5242, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5245
  %174 = icmp ugt i64 %173, ptrtoint ([0 x i8]* @_end to i64), !dbg !5241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5246
  br i1 %174, label %177, label %175, !dbg !5246

; <label>:175:                                    ; preds = %172
  %176 = tail call i32* @__errno() #10, !dbg !5250
  store i32 16, i32* %176, align 4, !dbg !5251, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5252
  br label %199, !dbg !5253

; <label>:177:                                    ; preds = %172, %169
  %178 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5254, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5258
  %179 = and i64 %178, -65536, !dbg !5260
  %180 = or i64 %179, 4097, !dbg !5260
  %181 = add nsw i64 %180, -1, !dbg !5260
  %182 = inttoptr i64 %181 to i32*, !dbg !5261
  %183 = load i32, i32* %182, align 4096, !dbg !5262, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5263
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -16, i32 %183, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5264, !srcloc !5265
  br label %199

; <label>:184:                                    ; preds = %161
  tail call void @ukplat_lcpu_restore_irqf(i64 %162) #10, !dbg !5266
  %185 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5267, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5270
  %186 = icmp ult i64 %185, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5271
  br i1 %186, label %192, label %187, !dbg !5271

; <label>:187:                                    ; preds = %184
  %188 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5272, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5275
  %189 = icmp ugt i64 %188, ptrtoint ([0 x i8]* @_end to i64), !dbg !5271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5276
  br i1 %189, label %192, label %190, !dbg !5276

; <label>:190:                                    ; preds = %187
  %191 = tail call i32* @__errno() #10, !dbg !5280
  store i32 9, i32* %191, align 4, !dbg !5281, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5282
  br label %199, !dbg !5283

; <label>:192:                                    ; preds = %187, %184
  %193 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5284, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5288
  %194 = and i64 %193, -65536, !dbg !5290
  %195 = or i64 %194, 4097, !dbg !5290
  %196 = add nsw i64 %195, -1, !dbg !5290
  %197 = inttoptr i64 %196 to i32*, !dbg !5291
  %198 = load i32, i32* %197, align 4096, !dbg !5292, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5293
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %198, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5294, !srcloc !5295
  br label %199

; <label>:199:                                    ; preds = %190, %192, %175, %177
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5296
  %200 = trunc i64 %134 to i32, !dbg !5193
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5297
  br label %225, !dbg !5297

; <label>:201:                                    ; preds = %164
  tail call void @ukplat_lcpu_restore_irqf(i64 %162) #10, !dbg !5298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5299
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %202

; <label>:202:                                    ; preds = %201, %153, %152
  %203 = add nuw nsw i64 %134, 1, !dbg !5300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5301
  %204 = icmp slt i64 %203, %132, !dbg !5195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5196
  br i1 %204, label %133, label %205, !dbg !5196, !llvm.loop !5302

; <label>:205:                                    ; preds = %202, %126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5297
  %206 = call fastcc i32 @lwip_selscan(i32 %0, %struct._types_fd_set* %1, %struct._types_fd_set* %2, %struct._types_fd_set* %3, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8) #8, !dbg !5304
  %207 = icmp eq i32 %206, 0, !dbg !5305
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5306
  br i1 %207, label %208, label %225, !dbg !5306

; <label>:208:                                    ; preds = %205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5307
  br i1 %49, label %221, label %209, !dbg !5307

; <label>:209:                                    ; preds = %208
  %210 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 0, !dbg !5308
  %211 = load i64, i64* %210, align 8, !dbg !5308, !tbaa !4428
  %212 = mul nsw i64 %211, 1000, !dbg !5309
  %213 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i64 0, i32 1, !dbg !5310
  %214 = load i64, i64* %213, align 8, !dbg !5310, !tbaa !4433
  %215 = add nsw i64 %214, 500, !dbg !5311
  %216 = sdiv i64 %215, 1000, !dbg !5312
  %217 = add nsw i64 %216, %212, !dbg !5313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5315
  %218 = icmp sgt i64 %217, 1, !dbg !5315
  %219 = select i1 %218, i64 %217, i64 1, !dbg !5315
  %220 = trunc i64 %219 to i32, !dbg !5315
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %221

; <label>:221:                                    ; preds = %208, %209
  %222 = phi i32 [ %220, %209 ], [ 0, %208 ], !dbg !5317
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %223 = tail call i32 @sys_arch_sem_wait(%struct.sys_sem_t* nonnull %93, i32 %222) #10, !dbg !5320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5321
  %224 = zext i32 %223 to i64, !dbg !5321
  br label %225, !dbg !5321

; <label>:225:                                    ; preds = %199, %205, %221
  %226 = phi i32 [ %0, %205 ], [ %0, %221 ], [ %200, %199 ]
  %227 = phi i32 [ %206, %205 ], [ 0, %221 ], [ -1, %199 ], !dbg !5296
  %228 = phi i64 [ 0, %205 ], [ %224, %221 ], [ 0, %199 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5322
  %229 = icmp sgt i32 %226, 0, !dbg !5323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5324
  br i1 %229, label %230, label %295, !dbg !5324

; <label>:230:                                    ; preds = %225
  %231 = icmp eq %struct._types_fd_set* %1, null
  %232 = icmp eq %struct._types_fd_set* %2, null
  %233 = icmp eq %struct._types_fd_set* %3, null
  %234 = sext i32 %226 to i64, !dbg !5324
  br label %235, !dbg !5324

; <label>:235:                                    ; preds = %230, %291
  %236 = phi i64 [ 0, %230 ], [ %293, %291 ]
  %237 = phi i32 [ %227, %230 ], [ %292, %291 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5325
  br i1 %231, label %246, label %238, !dbg !5325

; <label>:238:                                    ; preds = %235
  %239 = lshr i64 %236, 6, !dbg !5326
  %240 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %239, !dbg !5326
  %241 = load i64, i64* %240, align 8, !dbg !5326, !tbaa !2478
  %242 = and i64 %236, 63, !dbg !5326
  %243 = shl i64 1, %242, !dbg !5326
  %244 = and i64 %241, %243, !dbg !5326
  %245 = icmp eq i64 %244, 0, !dbg !5326
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5327
  br i1 %245, label %246, label %264, !dbg !5327

; <label>:246:                                    ; preds = %238, %235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5328
  br i1 %232, label %255, label %247, !dbg !5328

; <label>:247:                                    ; preds = %246
  %248 = lshr i64 %236, 6, !dbg !5329
  %249 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %248, !dbg !5329
  %250 = load i64, i64* %249, align 8, !dbg !5329, !tbaa !2478
  %251 = and i64 %236, 63, !dbg !5329
  %252 = shl i64 1, %251, !dbg !5329
  %253 = and i64 %250, %252, !dbg !5329
  %254 = icmp eq i64 %253, 0, !dbg !5329
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5330
  br i1 %254, label %255, label %264, !dbg !5330

; <label>:255:                                    ; preds = %247, %246
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5331
  br i1 %233, label %291, label %256, !dbg !5331

; <label>:256:                                    ; preds = %255
  %257 = lshr i64 %236, 6, !dbg !5332
  %258 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %257, !dbg !5332
  %259 = load i64, i64* %258, align 8, !dbg !5332, !tbaa !2478
  %260 = and i64 %236, 63, !dbg !5332
  %261 = shl i64 1, %260, !dbg !5332
  %262 = and i64 %259, %261, !dbg !5332
  %263 = icmp eq i64 %262, 0, !dbg !5332
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5333
  br i1 %263, label %291, label %264, !dbg !5333

; <label>:264:                                    ; preds = %238, %247, %256
  %265 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !5334
  %266 = icmp ugt i64 %236, 63, !dbg !5341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5342
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5344
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5345
  br i1 %266, label %274, label %267, !dbg !5341

; <label>:267:                                    ; preds = %264
  %268 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %236, i32 5, !dbg !5346
  %269 = load i8, i8* %268, align 2, !dbg !5346, !tbaa !5232
  %270 = icmp eq i8 %269, 0, !dbg !5346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5350
  br i1 %270, label %271, label %272, !dbg !5350

; <label>:271:                                    ; preds = %267
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !5351
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !5354
  tail call void @ukplat_terminate(i32 3) #9, !dbg !5354
  unreachable

; <label>:272:                                    ; preds = %267
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5358
  %273 = add i8 %269, -1, !dbg !5359
  store i8 %273, i8* %268, align 2, !dbg !5359, !tbaa !5232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5362
  tail call void @ukplat_lcpu_restore_irqf(i64 %265) #10, !dbg !5363
  br label %289, !dbg !5364

; <label>:274:                                    ; preds = %264
  tail call void @ukplat_lcpu_restore_irqf(i64 %265) #10, !dbg !5365
  %275 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5366, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5369
  %276 = icmp ult i64 %275, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5370
  br i1 %276, label %282, label %277, !dbg !5370

; <label>:277:                                    ; preds = %274
  %278 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5371, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5374
  %279 = icmp ugt i64 %278, ptrtoint ([0 x i8]* @_end to i64), !dbg !5370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5375
  br i1 %279, label %282, label %280, !dbg !5375

; <label>:280:                                    ; preds = %277
  %281 = tail call i32* @__errno() #10, !dbg !5379
  store i32 9, i32* %281, align 4, !dbg !5380, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5381
  br label %289, !dbg !5382

; <label>:282:                                    ; preds = %277, %274
  %283 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5383, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5387
  %284 = and i64 %283, -65536, !dbg !5389
  %285 = or i64 %284, 4097, !dbg !5389
  %286 = add nsw i64 %285, -1, !dbg !5389
  %287 = inttoptr i64 %286 to i32*, !dbg !5390
  %288 = load i32, i32* %287, align 4096, !dbg !5391, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5392
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %288, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5393, !srcloc !5394
  br label %289

; <label>:289:                                    ; preds = %280, %282, %272
  %290 = phi i32 [ %237, %272 ], [ -1, %280 ], [ -1, %282 ], !dbg !5395
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5396
  br label %291, !dbg !5396

; <label>:291:                                    ; preds = %256, %255, %289
  %292 = phi i32 [ %290, %289 ], [ %237, %256 ], [ %237, %255 ], !dbg !5397
  %293 = add nuw nsw i64 %236, 1, !dbg !5398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5399
  %294 = icmp slt i64 %293, %234, !dbg !5323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5324
  br i1 %294, label %235, label %295, !dbg !5324, !llvm.loop !5400

; <label>:295:                                    ; preds = %291, %225
  %296 = phi i32 [ %227, %225 ], [ %292, %291 ], !dbg !5397
  tail call fastcc void @lwip_unlink_select_cb(%struct.lwip_select_cb* %67) #8, !dbg !5402
  tail call void @sys_sem_free(%struct.sys_sem_t* nonnull %93) #10, !dbg !5403
  %297 = load %struct.uk_alloc*, %struct.uk_alloc** @flexos_shared_alloc, align 8, !dbg !5404, !tbaa !1426
  %298 = icmp eq %struct.uk_alloc* %297, null, !dbg !5411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5412
  br i1 %298, label %299, label %300, !dbg !5412, !prof !1445

; <label>:299:                                    ; preds = %295
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !5413
  tail call void @ukplat_terminate(i32 3) #9, !dbg !5413
  unreachable

; <label>:300:                                    ; preds = %295
  %301 = getelementptr inbounds %struct.uk_alloc, %struct.uk_alloc* %297, i64 0, i32 5, !dbg !5414
  %302 = load void (%struct.uk_alloc*, i8*)*, void (%struct.uk_alloc*, i8*)** %301, align 8, !dbg !5414, !tbaa !1426
  tail call void %302(%struct.uk_alloc* nonnull %297, i8* nonnull %66) #10, !dbg !5415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5417
  %303 = icmp slt i32 %296, 0, !dbg !5418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5420
  br i1 %303, label %345, label %304, !dbg !5420

; <label>:304:                                    ; preds = %300
  %305 = icmp eq i64 %228, 4294967295, !dbg !5421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5423
  br i1 %305, label %309, label %306, !dbg !5423

; <label>:306:                                    ; preds = %304
  %307 = call fastcc i32 @lwip_selscan(i32 %0, %struct._types_fd_set* %1, %struct._types_fd_set* %2, %struct._types_fd_set* %3, %struct._types_fd_set* nonnull %6, %struct._types_fd_set* nonnull %7, %struct._types_fd_set* nonnull %8) #8, !dbg !5424
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %309

; <label>:308:                                    ; preds = %75, %77, %115
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %345, !dbg !5426

; <label>:309:                                    ; preds = %306, %304
  %310 = phi i32 [ %296, %304 ], [ %307, %306 ], !dbg !5427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5428
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %311

; <label>:311:                                    ; preds = %309, %46, %54
  %312 = phi i32 [ %29, %46 ], [ 0, %54 ], [ %310, %309 ], !dbg !5429
  %313 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5430, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5433
  %314 = icmp ult i64 %313, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5434
  br i1 %314, label %320, label %315, !dbg !5434

; <label>:315:                                    ; preds = %311
  %316 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5435, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5438
  %317 = icmp ugt i64 %316, ptrtoint ([0 x i8]* @_end to i64), !dbg !5434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5439
  br i1 %317, label %320, label %318, !dbg !5439

; <label>:318:                                    ; preds = %315
  %319 = tail call i32* @__errno() #10, !dbg !5443
  store i32 0, i32* %319, align 4, !dbg !5444, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5445
  br label %327, !dbg !5446

; <label>:320:                                    ; preds = %315, %311
  %321 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5447, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5451
  %322 = and i64 %321, -65536, !dbg !5453
  %323 = or i64 %322, 4097, !dbg !5453
  %324 = add nsw i64 %323, -1, !dbg !5453
  %325 = inttoptr i64 %324 to i32*, !dbg !5454
  %326 = load i32, i32* %325, align 4096, !dbg !5455, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5456
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %326, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5457, !srcloc !5458
  br label %327

; <label>:327:                                    ; preds = %320, %318
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %328 = icmp eq %struct._types_fd_set* %1, null, !dbg !5459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5461
  br i1 %328, label %333, label %329, !dbg !5461

; <label>:329:                                    ; preds = %327
  %330 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0, !dbg !5462
  %331 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 0, !dbg !5462
  %332 = load i64, i64* %330, align 8, !dbg !5462, !tbaa !1581
  store i64 %332, i64* %331, align 8, !dbg !5462, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5464
  br label %333, !dbg !5464

; <label>:333:                                    ; preds = %327, %329
  %334 = icmp eq %struct._types_fd_set* %2, null, !dbg !5465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5467
  br i1 %334, label %339, label %335, !dbg !5467

; <label>:335:                                    ; preds = %333
  %336 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %7, i64 0, i32 0, i64 0, !dbg !5468
  %337 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 0, !dbg !5468
  %338 = load i64, i64* %336, align 8, !dbg !5468, !tbaa !1581
  store i64 %338, i64* %337, align 8, !dbg !5468, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5470
  br label %339, !dbg !5470

; <label>:339:                                    ; preds = %333, %335
  %340 = icmp eq %struct._types_fd_set* %3, null, !dbg !5471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5473
  br i1 %340, label %347, label %341, !dbg !5473

; <label>:341:                                    ; preds = %339
  %342 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0, !dbg !5474
  %343 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 0, !dbg !5474
  %344 = load i64, i64* %342, align 8, !dbg !5474, !tbaa !1581
  store i64 %344, i64* %343, align 8, !dbg !5474, !tbaa !1581
  br label %345, !dbg !5476

; <label>:345:                                    ; preds = %300, %308, %37, %39, %19, %21, %341
  %346 = phi i32 [ %312, %341 ], [ -1, %21 ], [ -1, %19 ], [ -1, %39 ], [ -1, %37 ], [ -1, %308 ], [ -1, %300 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %347

; <label>:347:                                    ; preds = %345, %339
  %348 = phi i32 [ %312, %339 ], [ %346, %345 ], !dbg !5477
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !5478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !5478
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !5478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5478
  ret i32 %348, !dbg !5478
}

; Function Attrs: noredzone nounwind
define dso_local i32 @shutdown(i32, i32) local_unnamed_addr #0 !dbg !5479 {
  %3 = alloca %struct.sock_net_file*, align 8
  %4 = bitcast %struct.sock_net_file** %3 to i8*, !dbg !5512
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !5512
  store %struct.sock_net_file* null, %struct.sock_net_file** %3, align 8, !dbg !5513, !tbaa !1426
  %5 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5514, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5517
  %6 = icmp ult i64 %5, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5518
  br i1 %6, label %29, label %7, !dbg !5518

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5519, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5522
  %9 = icmp ugt i64 %8, ptrtoint ([0 x i8]* @_end to i64), !dbg !5518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5523
  br i1 %9, label %29, label %10, !dbg !5523

; <label>:10:                                     ; preds = %7
  %11 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !5528
  %12 = icmp eq %struct.vfscore_file* %11, null, !dbg !5530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5531
  br i1 %12, label %25, label %13, !dbg !5531

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 6, !dbg !5532
  %15 = load %struct.dentry*, %struct.dentry** %14, align 8, !dbg !5532, !tbaa !2585
  %16 = getelementptr inbounds %struct.dentry, %struct.dentry* %15, i64 0, i32 3, !dbg !5533
  %17 = load %struct.vnode*, %struct.vnode** %16, align 8, !dbg !5533, !tbaa !2847
  %18 = getelementptr inbounds %struct.vnode, %struct.vnode* %17, i64 0, i32 5, !dbg !5534
  %19 = load i32, i32* %18, align 4, !dbg !5534, !tbaa !2595
  %20 = icmp eq i32 %19, 6, !dbg !5535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5536
  br i1 %20, label %21, label %25, !dbg !5536

; <label>:21:                                     ; preds = %13
  %22 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 4, !dbg !5537
  %23 = bitcast i8** %22 to %struct.sock_net_file**, !dbg !5537
  %24 = load %struct.sock_net_file*, %struct.sock_net_file** %23, align 8, !dbg !5537, !tbaa !2581
  br label %25, !dbg !5538

; <label>:25:                                     ; preds = %13, %10, %21
  %26 = phi %struct.sock_net_file* [ %24, %21 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %10 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %13 ], !dbg !5539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5540
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5541
  store %struct.sock_net_file* %26, %struct.sock_net_file** %3, align 8, !dbg !5542, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5542
  %27 = ptrtoint %struct.sock_net_file* %26 to i64, !dbg !5542
  %28 = bitcast %struct.sock_net_file** %3 to i64*, !dbg !5543
  br label %41, !dbg !5542

; <label>:29:                                     ; preds = %7, %2
  %30 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5544, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5548
  %31 = and i64 %30, -65536, !dbg !5550
  %32 = or i64 %31, 4097, !dbg !5550
  %33 = add nsw i64 %32, -1, !dbg !5550
  %34 = inttoptr i64 %33 to i32*, !dbg !5551
  %35 = load i32, i32* %34, align 4096, !dbg !5552, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5553
  %36 = sext i32 %0 to i64, !dbg !5554
  %37 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %36, i32 %35, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !5554, !srcloc !5555
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %3, i64 %37) #6, !dbg !5556, !srcloc !5560
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %38 = bitcast %struct.sock_net_file** %3 to i64*
  %39 = load i64, i64* %38, align 8, !dbg !5543, !tbaa !1426
  %40 = inttoptr i64 %39 to %struct.sock_net_file*
  br label %41

; <label>:41:                                     ; preds = %29, %25
  %42 = phi i64* [ %38, %29 ], [ %28, %25 ], !dbg !5543
  %43 = phi %struct.sock_net_file* [ %40, %29 ], [ %26, %25 ]
  %44 = phi i64 [ %39, %29 ], [ %27, %25 ], !dbg !5543
  %45 = icmp slt i64 %44, 1, !dbg !5543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5543
  br i1 %45, label %46, label %69, !dbg !5543

; <label>:46:                                     ; preds = %41
  %47 = icmp sgt i64 %44, -513, !dbg !5543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5561
  br i1 %47, label %48, label %69, !dbg !5561

; <label>:48:                                     ; preds = %46
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5562, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5565
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5566
  br i1 %50, label %59, label %51, !dbg !5566

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5567, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5570
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !5566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5571
  br i1 %53, label %59, label %54, !dbg !5571

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %42, align 8, !dbg !5572, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !5572
  %57 = sub nsw i32 0, %56, !dbg !5576
  %58 = call i32* @__errno() #10, !dbg !5577
  store i32 %57, i32* %58, align 4, !dbg !5578, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5579
  br label %92, !dbg !5572

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5580, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5584
  %61 = and i64 %60, -65536, !dbg !5586
  %62 = or i64 %61, 4097, !dbg !5586
  %63 = add nsw i64 %62, -1, !dbg !5586
  %64 = inttoptr i64 %63 to i32*, !dbg !5587
  %65 = load i32, i32* %64, align 4096, !dbg !5588, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5589
  %66 = load i64, i64* %42, align 8, !dbg !5590, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !5590
  %68 = ashr exact i64 %67, 32, !dbg !5590
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5590, !srcloc !5591
  br label %92

; <label>:69:                                     ; preds = %46, %41
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %43, i64 0, i32 1, !dbg !5592
  %71 = load i32, i32* %70, align 8, !dbg !5592, !tbaa !1421
  %72 = call i32 @lwip_shutdown(i32 %71, i32 %1) #8, !dbg !5593
  %73 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5594, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5597
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5598
  br i1 %74, label %82, label %75, !dbg !5598

; <label>:75:                                     ; preds = %69
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5599, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5602
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !5598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5603
  br i1 %77, label %82, label %78, !dbg !5603

; <label>:78:                                     ; preds = %75
  %79 = load %struct.sock_net_file*, %struct.sock_net_file** %3, align 8, !dbg !5604, !tbaa !1426
  %80 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %79, i64 0, i32 0, !dbg !5604
  %81 = load %struct.vfscore_file*, %struct.vfscore_file** %80, align 8, !dbg !5604, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %81) #10, !dbg !5604
  br label %92, !dbg !5604

; <label>:82:                                     ; preds = %75, %69
  %83 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5606, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5610
  %84 = and i64 %83, -65536, !dbg !5612
  %85 = or i64 %84, 4097, !dbg !5612
  %86 = add nsw i64 %85, -1, !dbg !5612
  %87 = inttoptr i64 %86 to i32*, !dbg !5613
  %88 = load i32, i32* %87, align 4096, !dbg !5614, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5615
  %89 = bitcast %struct.sock_net_file** %3 to i64**, !dbg !5616
  %90 = load i64*, i64** %89, align 8, !dbg !5616, !tbaa !1426
  %91 = load i64, i64* %90, align 8, !dbg !5616, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %91, i32 %88, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !5616, !srcloc !5617
  br label %92

; <label>:92:                                     ; preds = %78, %82, %54, %59
  %93 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %72, %78 ], [ %72, %82 ], !dbg !5618
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !5619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5620
  ret i32 %93, !dbg !5620
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_shutdown(i32, i32) local_unnamed_addr #0 !dbg !5621 {
  %3 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !5674
  %4 = icmp eq %struct.lwip_sock* %3, null, !dbg !5676
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5678
  br i1 %4, label %92, label %5, !dbg !5678

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %3, i64 0, i32 0, !dbg !5679
  %7 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !5679, !tbaa !1563
  %8 = icmp eq %struct.netconn* %7, null, !dbg !5680
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5681
  br i1 %8, label %30, label %9, !dbg !5681

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.netconn, %struct.netconn* %7, i64 0, i32 0, !dbg !5682
  %11 = load i32, i32* %10, align 8, !dbg !5682, !tbaa !1570
  %12 = and i32 %11, 240, !dbg !5682
  %13 = icmp eq i32 %12, 16, !dbg !5683
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5684
  br i1 %13, label %46, label %14, !dbg !5684

; <label>:14:                                     ; preds = %9
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5686, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5689
  %16 = icmp ult i64 %15, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5690
  br i1 %16, label %22, label %17, !dbg !5690

; <label>:17:                                     ; preds = %14
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5691, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5694
  %19 = icmp ugt i64 %18, ptrtoint ([0 x i8]* @_end to i64), !dbg !5690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5695
  br i1 %19, label %22, label %20, !dbg !5695

; <label>:20:                                     ; preds = %17
  %21 = tail call i32* @__errno() #10, !dbg !5699
  store i32 95, i32* %21, align 4, !dbg !5700, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5701
  br label %29, !dbg !5702

; <label>:22:                                     ; preds = %17, %14
  %23 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5703, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5707
  %24 = and i64 %23, -65536, !dbg !5709
  %25 = or i64 %24, 4097, !dbg !5709
  %26 = add nsw i64 %25, -1, !dbg !5709
  %27 = inttoptr i64 %26 to i32*, !dbg !5710
  %28 = load i32, i32* %27, align 4096, !dbg !5711, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5712
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -95, i32 %28, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5713, !srcloc !5714
  br label %29

; <label>:29:                                     ; preds = %22, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %92, !dbg !5715

; <label>:30:                                     ; preds = %5
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5717, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5720
  %32 = icmp ult i64 %31, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5721
  br i1 %32, label %38, label %33, !dbg !5721

; <label>:33:                                     ; preds = %30
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5722, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5725
  %35 = icmp ugt i64 %34, ptrtoint ([0 x i8]* @_end to i64), !dbg !5721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5726
  br i1 %35, label %38, label %36, !dbg !5726

; <label>:36:                                     ; preds = %33
  %37 = tail call i32* @__errno() #10, !dbg !5730
  store i32 128, i32* %37, align 4, !dbg !5731, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5732
  br label %45, !dbg !5733

; <label>:38:                                     ; preds = %33, %30
  %39 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5734, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5738
  %40 = and i64 %39, -65536, !dbg !5740
  %41 = or i64 %40, 4097, !dbg !5740
  %42 = add nsw i64 %41, -1, !dbg !5740
  %43 = inttoptr i64 %42 to i32*, !dbg !5741
  %44 = load i32, i32* %43, align 4096, !dbg !5742, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5743
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -128, i32 %44, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5744, !srcloc !5745
  br label %45

; <label>:45:                                     ; preds = %38, %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %92, !dbg !5746

; <label>:46:                                     ; preds = %9
  %47 = icmp eq i32 %1, 0, !dbg !5747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5748
  br i1 %47, label %68, label %48, !dbg !5748

; <label>:48:                                     ; preds = %46
  %49 = icmp eq i32 %1, 1, !dbg !5749
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5750
  br i1 %49, label %68, label %50, !dbg !5750

; <label>:50:                                     ; preds = %48
  %51 = icmp eq i32 %1, 2, !dbg !5751
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5752
  br i1 %51, label %68, label %52, !dbg !5752

; <label>:52:                                     ; preds = %50
  %53 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5754, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5757
  %54 = icmp ult i64 %53, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5758
  br i1 %54, label %60, label %55, !dbg !5758

; <label>:55:                                     ; preds = %52
  %56 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5759, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5762
  %57 = icmp ugt i64 %56, ptrtoint ([0 x i8]* @_end to i64), !dbg !5758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5763
  br i1 %57, label %60, label %58, !dbg !5763

; <label>:58:                                     ; preds = %55
  %59 = tail call i32* @__errno() #10, !dbg !5767
  store i32 22, i32* %59, align 4, !dbg !5768, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5769
  br label %67, !dbg !5770

; <label>:60:                                     ; preds = %55, %52
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5771, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5775
  %62 = and i64 %61, -65536, !dbg !5777
  %63 = or i64 %62, 4097, !dbg !5777
  %64 = add nsw i64 %63, -1, !dbg !5777
  %65 = inttoptr i64 %64 to i32*, !dbg !5778
  %66 = load i32, i32* %65, align 4096, !dbg !5779, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5780
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -22, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5781, !srcloc !5782
  br label %67

; <label>:67:                                     ; preds = %60, %58
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %92, !dbg !5783

; <label>:68:                                     ; preds = %50, %48, %46
  %69 = phi i8 [ 0, %46 ], [ 1, %48 ], [ 1, %50 ], !dbg !5784
  %70 = phi i8 [ 1, %46 ], [ 0, %48 ], [ 1, %50 ], !dbg !5784
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %71 = tail call signext i8 @netconn_shutdown(%struct.netconn* nonnull %7, i8 zeroext %70, i8 zeroext %69) #10, !dbg !5786
  %72 = tail call i32 @err_to_errno(i8 signext %71) #10, !dbg !5788
  %73 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5789, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5792
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5793
  br i1 %74, label %80, label %75, !dbg !5793

; <label>:75:                                     ; preds = %68
  %76 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5794, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5797
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  br i1 %77, label %80, label %78, !dbg !5798

; <label>:78:                                     ; preds = %75
  %79 = tail call i32* @__errno() #10, !dbg !5799
  store i32 %72, i32* %79, align 4, !dbg !5802, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5803
  br label %89, !dbg !5804

; <label>:80:                                     ; preds = %75, %68
  %81 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5805, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5809
  %82 = and i64 %81, -65536, !dbg !5811
  %83 = or i64 %82, 4097, !dbg !5811
  %84 = add nsw i64 %83, -1, !dbg !5811
  %85 = inttoptr i64 %84 to i32*, !dbg !5812
  %86 = load i32, i32* %85, align 4096, !dbg !5813, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5814
  %87 = sub nsw i32 0, %72, !dbg !5815
  %88 = sext i32 %87 to i64, !dbg !5815
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %88, i32 %86, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5815, !srcloc !5816
  br label %89

; <label>:89:                                     ; preds = %80, %78
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %90 = icmp ne i8 %71, 0, !dbg !5817
  %91 = sext i1 %90 to i32, !dbg !5818
  br label %92, !dbg !5819

; <label>:92:                                     ; preds = %2, %89, %67, %45, %29
  %93 = phi i32 [ -1, %29 ], [ %91, %89 ], [ -1, %67 ], [ -1, %45 ], [ -1, %2 ], !dbg !5820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5822
  ret i32 %93, !dbg !5822
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getpeername(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !5823 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !5856
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !5856
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !5857, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5858, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5861
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5862
  br i1 %7, label %30, label %8, !dbg !5862

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5863, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5866
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !5862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5867
  br i1 %10, label %30, label %11, !dbg !5867

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !5872
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !5874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5875
  br i1 %13, label %26, label %14, !dbg !5875

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !5876
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !5876, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !5877
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !5877, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !5878
  %20 = load i32, i32* %19, align 4, !dbg !5878, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !5879
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5880
  br i1 %21, label %22, label %26, !dbg !5880

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !5881
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !5881
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !5881, !tbaa !2581
  br label %26, !dbg !5882

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !5883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5885
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !5886, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5886
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !5886
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !5887
  br label %42, !dbg !5886

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5888, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5892
  %32 = and i64 %31, -65536, !dbg !5894
  %33 = or i64 %32, 4097, !dbg !5894
  %34 = add nsw i64 %33, -1, !dbg !5894
  %35 = inttoptr i64 %34 to i32*, !dbg !5895
  %36 = load i32, i32* %35, align 4096, !dbg !5896, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5897
  %37 = sext i32 %0 to i64, !dbg !5898
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !5898, !srcloc !5899
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !5900, !srcloc !5904
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !5887, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !5887
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !5887
  %46 = icmp slt i64 %45, 1, !dbg !5887
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5887
  br i1 %46, label %47, label %70, !dbg !5887

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !5887
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5905
  br i1 %48, label %49, label %70, !dbg !5905

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5906, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5909
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5910
  br i1 %51, label %60, label %52, !dbg !5910

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5911, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5914
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !5910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5915
  br i1 %54, label %60, label %55, !dbg !5915

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !5916, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !5916
  %58 = sub nsw i32 0, %57, !dbg !5920
  %59 = call i32* @__errno() #10, !dbg !5921
  store i32 %58, i32* %59, align 4, !dbg !5922, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5923
  br label %93, !dbg !5916

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5924, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5928
  %62 = and i64 %61, -65536, !dbg !5930
  %63 = or i64 %62, 4097, !dbg !5930
  %64 = add nsw i64 %63, -1, !dbg !5930
  %65 = inttoptr i64 %64 to i32*, !dbg !5931
  %66 = load i32, i32* %65, align 4096, !dbg !5932, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5933
  %67 = load i64, i64* %43, align 8, !dbg !5934, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !5934
  %69 = ashr exact i64 %68, 32, !dbg !5934
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !5934, !srcloc !5935
  br label %93

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !5936
  %72 = load i32, i32* %71, align 8, !dbg !5936, !tbaa !1421
  %73 = call fastcc i32 @lwip_getaddrname(i32 %72, %struct.sockaddr* %1, i32* %2, i8 zeroext 0) #10, !dbg !5946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5947
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5948, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5951
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !5952
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5952
  br i1 %75, label %83, label %76, !dbg !5952

; <label>:76:                                     ; preds = %70
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5953, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5956
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !5952
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  br i1 %78, label %83, label %79, !dbg !5957

; <label>:79:                                     ; preds = %76
  %80 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !5958, !tbaa !1426
  %81 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %80, i64 0, i32 0, !dbg !5958
  %82 = load %struct.vfscore_file*, %struct.vfscore_file** %81, align 8, !dbg !5958, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %82) #10, !dbg !5958
  br label %93, !dbg !5958

; <label>:83:                                     ; preds = %76, %70
  %84 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5960, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5964
  %85 = and i64 %84, -65536, !dbg !5966
  %86 = or i64 %85, 4097, !dbg !5966
  %87 = add nsw i64 %86, -1, !dbg !5966
  %88 = inttoptr i64 %87 to i32*, !dbg !5967
  %89 = load i32, i32* %88, align 4096, !dbg !5968, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5969
  %90 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !5970
  %91 = load i64*, i64** %90, align 8, !dbg !5970, !tbaa !1426
  %92 = load i64, i64* %91, align 8, !dbg !5970, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %89, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !5970, !srcloc !5971
  br label %93

; <label>:93:                                     ; preds = %79, %83, %55, %60
  %94 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %73, %79 ], [ %73, %83 ], !dbg !5972
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !5973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5974
  ret i32 %94, !dbg !5974
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_getpeername(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !5938 {
  %4 = tail call fastcc i32 @lwip_getaddrname(i32 %0, %struct.sockaddr* %1, i32* %2, i8 zeroext 0) #8, !dbg !5978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5979
  ret i32 %4, !dbg !5979
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getsockname(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !5980 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !6013
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6013
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !6014, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6015, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6018
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6019
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6019
  br i1 %7, label %30, label %8, !dbg !6019

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6020, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6023
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !6019
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6024
  br i1 %10, label %30, label %11, !dbg !6024

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6029
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !6031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6032
  br i1 %13, label %26, label %14, !dbg !6032

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !6033
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !6033, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !6034
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !6034, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !6035
  %20 = load i32, i32* %19, align 4, !dbg !6035, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !6036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6037
  br i1 %21, label %22, label %26, !dbg !6037

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !6038
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !6038
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !6038, !tbaa !2581
  br label %26, !dbg !6039

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !6040
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6042
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !6043, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6043
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !6043
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !6044
  br label %42, !dbg !6043

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6045, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6049
  %32 = and i64 %31, -65536, !dbg !6051
  %33 = or i64 %32, 4097, !dbg !6051
  %34 = add nsw i64 %33, -1, !dbg !6051
  %35 = inttoptr i64 %34 to i32*, !dbg !6052
  %36 = load i32, i32* %35, align 4096, !dbg !6053, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6054
  %37 = sext i32 %0 to i64, !dbg !6055
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6055, !srcloc !6056
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !6057, !srcloc !6061
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !6044, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !6044
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !6044
  %46 = icmp slt i64 %45, 1, !dbg !6044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6044
  br i1 %46, label %47, label %70, !dbg !6044

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !6044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6062
  br i1 %48, label %49, label %70, !dbg !6062

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6063, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6066
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6067
  br i1 %51, label %60, label %52, !dbg !6067

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6068, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6071
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !6067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6072
  br i1 %54, label %60, label %55, !dbg !6072

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !6073, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !6073
  %58 = sub nsw i32 0, %57, !dbg !6077
  %59 = call i32* @__errno() #10, !dbg !6078
  store i32 %58, i32* %59, align 4, !dbg !6079, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6080
  br label %93, !dbg !6073

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6081, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6085
  %62 = and i64 %61, -65536, !dbg !6087
  %63 = or i64 %62, 4097, !dbg !6087
  %64 = add nsw i64 %63, -1, !dbg !6087
  %65 = inttoptr i64 %64 to i32*, !dbg !6088
  %66 = load i32, i32* %65, align 4096, !dbg !6089, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6090
  %67 = load i64, i64* %43, align 8, !dbg !6091, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !6091
  %69 = ashr exact i64 %68, 32, !dbg !6091
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6091, !srcloc !6092
  br label %93

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !6093
  %72 = load i32, i32* %71, align 8, !dbg !6093, !tbaa !1421
  %73 = call fastcc i32 @lwip_getaddrname(i32 %72, %struct.sockaddr* %1, i32* %2, i8 zeroext 1) #10, !dbg !6103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6104
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6105, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6108
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6109
  br i1 %75, label %83, label %76, !dbg !6109

; <label>:76:                                     ; preds = %70
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6110, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6113
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !6109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6114
  br i1 %78, label %83, label %79, !dbg !6114

; <label>:79:                                     ; preds = %76
  %80 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !6115, !tbaa !1426
  %81 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %80, i64 0, i32 0, !dbg !6115
  %82 = load %struct.vfscore_file*, %struct.vfscore_file** %81, align 8, !dbg !6115, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %82) #10, !dbg !6115
  br label %93, !dbg !6115

; <label>:83:                                     ; preds = %76, %70
  %84 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6117, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6121
  %85 = and i64 %84, -65536, !dbg !6123
  %86 = or i64 %85, 4097, !dbg !6123
  %87 = add nsw i64 %86, -1, !dbg !6123
  %88 = inttoptr i64 %87 to i32*, !dbg !6124
  %89 = load i32, i32* %88, align 4096, !dbg !6125, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6126
  %90 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !6127
  %91 = load i64*, i64** %90, align 8, !dbg !6127, !tbaa !1426
  %92 = load i64, i64* %91, align 8, !dbg !6127, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %89, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !6127, !srcloc !6128
  br label %93

; <label>:93:                                     ; preds = %79, %83, %55, %60
  %94 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %73, %79 ], [ %73, %83 ], !dbg !6129
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !6130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6131
  ret i32 %94, !dbg !6131
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_getsockname(i32, %struct.sockaddr*, i32* nocapture) local_unnamed_addr #0 !dbg !6095 {
  %4 = tail call fastcc i32 @lwip_getaddrname(i32 %0, %struct.sockaddr* %1, i32* %2, i8 zeroext 1) #8, !dbg !6135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6136
  ret i32 %4, !dbg !6136
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getsockopt(i32, i32, i32, i8*, i32* readonly) local_unnamed_addr #0 !dbg !6137 {
  %6 = alloca %struct.sock_net_file*, align 8
  %7 = bitcast %struct.sock_net_file** %6 to i8*, !dbg !6176
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6176
  store %struct.sock_net_file* null, %struct.sock_net_file** %6, align 8, !dbg !6177, !tbaa !1426
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6178, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6181
  %9 = icmp ult i64 %8, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6182
  br i1 %9, label %32, label %10, !dbg !6182

; <label>:10:                                     ; preds = %5
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6183, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6186
  %12 = icmp ugt i64 %11, ptrtoint ([0 x i8]* @_end to i64), !dbg !6182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6187
  br i1 %12, label %32, label %13, !dbg !6187

; <label>:13:                                     ; preds = %10
  %14 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6192
  %15 = icmp eq %struct.vfscore_file* %14, null, !dbg !6194
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6195
  br i1 %15, label %28, label %16, !dbg !6195

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 6, !dbg !6196
  %18 = load %struct.dentry*, %struct.dentry** %17, align 8, !dbg !6196, !tbaa !2585
  %19 = getelementptr inbounds %struct.dentry, %struct.dentry* %18, i64 0, i32 3, !dbg !6197
  %20 = load %struct.vnode*, %struct.vnode** %19, align 8, !dbg !6197, !tbaa !2847
  %21 = getelementptr inbounds %struct.vnode, %struct.vnode* %20, i64 0, i32 5, !dbg !6198
  %22 = load i32, i32* %21, align 4, !dbg !6198, !tbaa !2595
  %23 = icmp eq i32 %22, 6, !dbg !6199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6200
  br i1 %23, label %24, label %28, !dbg !6200

; <label>:24:                                     ; preds = %16
  %25 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 4, !dbg !6201
  %26 = bitcast i8** %25 to %struct.sock_net_file**, !dbg !6201
  %27 = load %struct.sock_net_file*, %struct.sock_net_file** %26, align 8, !dbg !6201, !tbaa !2581
  br label %28, !dbg !6202

; <label>:28:                                     ; preds = %16, %13, %24
  %29 = phi %struct.sock_net_file* [ %27, %24 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %13 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %16 ], !dbg !6203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6205
  store %struct.sock_net_file* %29, %struct.sock_net_file** %6, align 8, !dbg !6206, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6206
  %30 = ptrtoint %struct.sock_net_file* %29 to i64, !dbg !6206
  %31 = bitcast %struct.sock_net_file** %6 to i64*, !dbg !6207
  br label %44, !dbg !6206

; <label>:32:                                     ; preds = %10, %5
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6208, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6212
  %34 = and i64 %33, -65536, !dbg !6214
  %35 = or i64 %34, 4097, !dbg !6214
  %36 = add nsw i64 %35, -1, !dbg !6214
  %37 = inttoptr i64 %36 to i32*, !dbg !6215
  %38 = load i32, i32* %37, align 4096, !dbg !6216, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6217
  %39 = sext i32 %0 to i64, !dbg !6218
  %40 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %39, i32 %38, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6218, !srcloc !6219
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %6, i64 %40) #6, !dbg !6220, !srcloc !6224
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %41 = bitcast %struct.sock_net_file** %6 to i64*
  %42 = load i64, i64* %41, align 8, !dbg !6207, !tbaa !1426
  %43 = inttoptr i64 %42 to %struct.sock_net_file*
  br label %44

; <label>:44:                                     ; preds = %32, %28
  %45 = phi i64* [ %41, %32 ], [ %31, %28 ], !dbg !6207
  %46 = phi %struct.sock_net_file* [ %43, %32 ], [ %29, %28 ]
  %47 = phi i64 [ %42, %32 ], [ %30, %28 ], !dbg !6207
  %48 = icmp slt i64 %47, 1, !dbg !6207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6207
  br i1 %48, label %49, label %72, !dbg !6207

; <label>:49:                                     ; preds = %44
  %50 = icmp sgt i64 %47, -513, !dbg !6207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6225
  br i1 %50, label %51, label %72, !dbg !6225

; <label>:51:                                     ; preds = %49
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6226, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6229
  %53 = icmp ult i64 %52, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6230
  br i1 %53, label %62, label %54, !dbg !6230

; <label>:54:                                     ; preds = %51
  %55 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6231, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6234
  %56 = icmp ugt i64 %55, ptrtoint ([0 x i8]* @_end to i64), !dbg !6230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6235
  br i1 %56, label %62, label %57, !dbg !6235

; <label>:57:                                     ; preds = %54
  %58 = load i64, i64* %45, align 8, !dbg !6236, !tbaa !1426
  %59 = trunc i64 %58 to i32, !dbg !6236
  %60 = sub nsw i32 0, %59, !dbg !6240
  %61 = call i32* @__errno() #10, !dbg !6241
  store i32 %60, i32* %61, align 4, !dbg !6242, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6243
  br label %95, !dbg !6236

; <label>:62:                                     ; preds = %54, %51
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6244, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6248
  %64 = and i64 %63, -65536, !dbg !6250
  %65 = or i64 %64, 4097, !dbg !6250
  %66 = add nsw i64 %65, -1, !dbg !6250
  %67 = inttoptr i64 %66 to i32*, !dbg !6251
  %68 = load i32, i32* %67, align 4096, !dbg !6252, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6253
  %69 = load i64, i64* %45, align 8, !dbg !6254, !tbaa !1426
  %70 = shl i64 %69, 32, !dbg !6254
  %71 = ashr exact i64 %70, 32, !dbg !6254
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %68, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6254, !srcloc !6255
  br label %95

; <label>:72:                                     ; preds = %49, %44
  %73 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %46, i64 0, i32 1, !dbg !6256
  %74 = load i32, i32* %73, align 8, !dbg !6256, !tbaa !1421
  %75 = call i32 @lwip_getsockopt(i32 %74, i32 %1, i32 %2, i8* %3, i32* %4) #8, !dbg !6257
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6258, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6261
  %77 = icmp ult i64 %76, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6262
  br i1 %77, label %85, label %78, !dbg !6262

; <label>:78:                                     ; preds = %72
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6263, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6266
  %80 = icmp ugt i64 %79, ptrtoint ([0 x i8]* @_end to i64), !dbg !6262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6267
  br i1 %80, label %85, label %81, !dbg !6267

; <label>:81:                                     ; preds = %78
  %82 = load %struct.sock_net_file*, %struct.sock_net_file** %6, align 8, !dbg !6268, !tbaa !1426
  %83 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %82, i64 0, i32 0, !dbg !6268
  %84 = load %struct.vfscore_file*, %struct.vfscore_file** %83, align 8, !dbg !6268, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %84) #10, !dbg !6268
  br label %95, !dbg !6268

; <label>:85:                                     ; preds = %78, %72
  %86 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6270, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6274
  %87 = and i64 %86, -65536, !dbg !6276
  %88 = or i64 %87, 4097, !dbg !6276
  %89 = add nsw i64 %88, -1, !dbg !6276
  %90 = inttoptr i64 %89 to i32*, !dbg !6277
  %91 = load i32, i32* %90, align 4096, !dbg !6278, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6279
  %92 = bitcast %struct.sock_net_file** %6 to i64**, !dbg !6280
  %93 = load i64*, i64** %92, align 8, !dbg !6280, !tbaa !1426
  %94 = load i64, i64* %93, align 8, !dbg !6280, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %94, i32 %91, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !6280, !srcloc !6281
  br label %95

; <label>:95:                                     ; preds = %81, %85, %57, %62
  %96 = phi i32 [ -1, %57 ], [ -1, %62 ], [ %75, %81 ], [ %75, %85 ], !dbg !6282
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6283
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6284
  ret i32 %96, !dbg !6284
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_getsockopt(i32, i32, i32, i8*, i32* readonly) local_unnamed_addr #0 !dbg !6285 {
  %6 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !6317
  %7 = icmp eq %struct.lwip_sock* %6, null, !dbg !6319
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6321
  br i1 %7, label %281, label %8, !dbg !6321

; <label>:8:                                      ; preds = %5
  %9 = icmp eq i8* %3, null, !dbg !6322
  %10 = icmp eq i32* %4, null, !dbg !6323
  %11 = or i1 %9, %10, !dbg !6324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6324
  br i1 %11, label %12, label %28, !dbg !6324

; <label>:12:                                     ; preds = %8
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6326, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6329
  %14 = icmp ult i64 %13, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6330
  br i1 %14, label %20, label %15, !dbg !6330

; <label>:15:                                     ; preds = %12
  %16 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6331, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6334
  %17 = icmp ugt i64 %16, ptrtoint ([0 x i8]* @_end to i64), !dbg !6330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6335
  br i1 %17, label %20, label %18, !dbg !6335

; <label>:18:                                     ; preds = %15
  %19 = tail call i32* @__errno() #10, !dbg !6339
  store i32 14, i32* %19, align 4, !dbg !6340, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6341
  br label %27, !dbg !6342

; <label>:20:                                     ; preds = %15, %12
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6343, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6347
  %22 = and i64 %21, -65536, !dbg !6349
  %23 = or i64 %22, 4097, !dbg !6349
  %24 = add nsw i64 %23, -1, !dbg !6349
  %25 = inttoptr i64 %24 to i32*, !dbg !6350
  %26 = load i32, i32* %25, align 4096, !dbg !6351, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6352
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -14, i32 %26, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6353, !srcloc !6354
  br label %27

; <label>:27:                                     ; preds = %20, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %281, !dbg !6355

; <label>:28:                                     ; preds = %8
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !6356
  %29 = icmp ugt i32 %0, 63, !dbg !6388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6388
  br i1 %29, label %30, label %31, !dbg !6388

; <label>:30:                                     ; preds = %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6393
  br label %36, !dbg !6393

; <label>:31:                                     ; preds = %28
  %32 = sext i32 %0 to i64, !dbg !6394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6395
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6393
  %33 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %32, i32 0, !dbg !6396
  %34 = load %struct.netconn*, %struct.netconn** %33, align 8, !dbg !6396, !tbaa !1563
  %35 = icmp eq %struct.netconn* %34, null, !dbg !6400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6401
  br i1 %35, label %36, label %37, !dbg !6401

; <label>:36:                                     ; preds = %31, %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6405
  br label %260, !dbg !6404

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6405
  switch i32 %1, label %258 [
    i32 4095, label %38
    i32 0, label %131
    i32 6, label %215
    i32 41, label %246
  ], !dbg !6408

; <label>:38:                                     ; preds = %37
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6409
  switch i32 %2, label %258 [
    i32 2, label %39
    i32 32, label %60
    i32 8, label %60
    i32 4, label %60
    i32 4104, label %85
    i32 4103, label %101
    i32 4106, label %109
  ], !dbg !6409

; <label>:39:                                     ; preds = %38
  %40 = load i32, i32* %4, align 4, !dbg !6411, !tbaa !1492
  %41 = icmp ult i32 %40, 4, !dbg !6411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6417
  br i1 %41, label %260, label %42, !dbg !6416

; <label>:42:                                     ; preds = %39
  %43 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6419
  %44 = bitcast %union.anon.4* %43 to %struct.tcp_pcb**, !dbg !6419
  %45 = load %struct.tcp_pcb*, %struct.tcp_pcb** %44, align 8, !dbg !6419, !tbaa !1581
  %46 = icmp eq %struct.tcp_pcb* %45, null, !dbg !6419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6421
  br i1 %46, label %47, label %48, !dbg !6421

; <label>:47:                                     ; preds = %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6422
  br label %260, !dbg !6422

; <label>:48:                                     ; preds = %42
  %49 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6424
  %50 = load i32, i32* %49, align 8, !dbg !6424, !tbaa !1570
  %51 = and i32 %50, 240, !dbg !6424
  %52 = icmp eq i32 %51, 16, !dbg !6426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6428
  br i1 %52, label %53, label %260, !dbg !6427

; <label>:53:                                     ; preds = %48
  %54 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %45, i64 0, i32 8, !dbg !6430
  %55 = load i32, i32* %54, align 8, !dbg !6430, !tbaa !6432
  %56 = icmp eq i32 %55, 1, !dbg !6434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6435
  %57 = bitcast i8* %3 to i32*, !dbg !6436
  br i1 %56, label %58, label %59, !dbg !6435

; <label>:58:                                     ; preds = %53
  store i32 1, i32* %57, align 4, !dbg !6438, !tbaa !1492
  br label %258, !dbg !6440

; <label>:59:                                     ; preds = %53
  store i32 0, i32* %57, align 4, !dbg !6441, !tbaa !1492
  br label %258

; <label>:60:                                     ; preds = %38, %38, %38
  %61 = icmp eq i32 %2, 32, !dbg !6442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6444
  br i1 %61, label %62, label %67, !dbg !6444

; <label>:62:                                     ; preds = %60
  %63 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6445
  %64 = load i32, i32* %63, align 8, !dbg !6445, !tbaa !1570
  %65 = and i32 %64, 240, !dbg !6445
  %66 = icmp eq i32 %65, 32, !dbg !6446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6447
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6448
  br i1 %66, label %69, label %260, !dbg !6447

; <label>:67:                                     ; preds = %60
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6455
  switch i32 %2, label %68 [
    i32 4, label %69
    i32 8, label %69
  ], !dbg !6455

; <label>:68:                                     ; preds = %67
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !6456
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !6462
  tail call void @ukplat_terminate(i32 3) #9, !dbg !6462
  unreachable

; <label>:69:                                     ; preds = %67, %67, %62
  %70 = phi i32 [ 32, %62 ], [ %2, %67 ], [ %2, %67 ], !dbg !6466
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6468
  %71 = load i32, i32* %4, align 4, !dbg !6469, !tbaa !1492
  %72 = icmp ult i32 %71, 4, !dbg !6469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6474
  br i1 %72, label %260, label %73, !dbg !6473

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6476
  %75 = bitcast %union.anon.4* %74 to %struct.tcp_pcb**, !dbg !6476
  %76 = load %struct.tcp_pcb*, %struct.tcp_pcb** %75, align 8, !dbg !6476, !tbaa !1581
  %77 = icmp eq %struct.tcp_pcb* %76, null, !dbg !6476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6478
  br i1 %77, label %78, label %79, !dbg !6478

; <label>:78:                                     ; preds = %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6479
  br label %260, !dbg !6479

; <label>:79:                                     ; preds = %73
  %80 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %76, i64 0, i32 3, !dbg !6481
  %81 = load i8, i8* %80, align 1, !dbg !6481, !tbaa !6482
  %82 = zext i8 %81 to i32, !dbg !6481
  %83 = and i32 %70, %82, !dbg !6481
  %84 = bitcast i8* %3 to i32*, !dbg !6484
  store i32 %83, i32* %84, align 4, !dbg !6485, !tbaa !1492
  br label %258, !dbg !6486

; <label>:85:                                     ; preds = %38
  %86 = load i32, i32* %4, align 4, !dbg !6487, !tbaa !1492
  %87 = icmp ult i32 %86, 4, !dbg !6487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6491
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6492
  br i1 %87, label %260, label %88, !dbg !6491

; <label>:88:                                     ; preds = %85
  %89 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6494
  %90 = load i32, i32* %89, align 8, !dbg !6494, !tbaa !1570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6495
  %91 = trunc i32 %90 to i8, !dbg !6495
  %92 = and i8 %91, -16, !dbg !6495
  switch i8 %92, label %99 [
    i8 64, label %93
    i8 16, label %95
    i8 32, label %97
  ], !dbg !6495

; <label>:93:                                     ; preds = %88
  %94 = bitcast i8* %3 to i32*, !dbg !6496
  store i32 3, i32* %94, align 4, !dbg !6498, !tbaa !1492
  br label %258, !dbg !6499

; <label>:95:                                     ; preds = %88
  %96 = bitcast i8* %3 to i32*, !dbg !6500
  store i32 1, i32* %96, align 4, !dbg !6501, !tbaa !1492
  br label %258, !dbg !6502

; <label>:97:                                     ; preds = %88
  %98 = bitcast i8* %3 to i32*, !dbg !6503
  store i32 2, i32* %98, align 4, !dbg !6504, !tbaa !1492
  br label %258, !dbg !6505

; <label>:99:                                     ; preds = %88
  %100 = bitcast i8* %3 to i32*, !dbg !6506
  store i32 %90, i32* %100, align 4, !dbg !6507, !tbaa !1492
  br label %258, !dbg !6508

; <label>:101:                                    ; preds = %38
  %102 = load i32, i32* %4, align 4, !dbg !6509, !tbaa !1492
  %103 = icmp ult i32 %102, 4, !dbg !6509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6512
  br i1 %103, label %104, label %105, !dbg !6512

; <label>:104:                                    ; preds = %101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6513
  br label %260, !dbg !6513

; <label>:105:                                    ; preds = %101
  %106 = tail call signext i8 @netconn_err(%struct.netconn* nonnull %34) #10, !dbg !6515
  %107 = tail call i32 @err_to_errno(i8 signext %106) #10, !dbg !6516
  %108 = bitcast i8* %3 to i32*, !dbg !6517
  store i32 %107, i32* %108, align 4, !dbg !6518, !tbaa !1492
  br label %258, !dbg !6519

; <label>:109:                                    ; preds = %38
  %110 = load i32, i32* %4, align 4, !dbg !6520, !tbaa !1492
  %111 = icmp ult i32 %110, 4, !dbg !6520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6526
  br i1 %111, label %260, label %112, !dbg !6525

; <label>:112:                                    ; preds = %109
  %113 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6528
  %114 = bitcast %union.anon.4* %113 to %struct.tcp_pcb**, !dbg !6528
  %115 = load %struct.tcp_pcb*, %struct.tcp_pcb** %114, align 8, !dbg !6528, !tbaa !1581
  %116 = icmp eq %struct.tcp_pcb* %115, null, !dbg !6528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6530
  br i1 %116, label %117, label %118, !dbg !6530

; <label>:117:                                    ; preds = %112
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6531
  br label %260, !dbg !6531

; <label>:118:                                    ; preds = %112
  %119 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6533
  %120 = load i32, i32* %119, align 8, !dbg !6533, !tbaa !1570
  %121 = and i32 %120, 240, !dbg !6533
  %122 = icmp eq i32 %121, 32, !dbg !6533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6535
  br i1 %122, label %124, label %123, !dbg !6535

; <label>:123:                                    ; preds = %118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6536
  br label %260, !dbg !6536

; <label>:124:                                    ; preds = %118
  %125 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %115, i64 0, i32 7, !dbg !6538
  %126 = bitcast i8** %125 to i8*, !dbg !6538
  %127 = load i8, i8* %126, align 8, !dbg !6538, !tbaa !6539
  %128 = and i8 %127, 1, !dbg !6538
  %129 = zext i8 %128 to i32, !dbg !6538
  %130 = bitcast i8* %3 to i32*, !dbg !6542
  store i32 %129, i32* %130, align 4, !dbg !6543, !tbaa !1492
  br label %258, !dbg !6544

; <label>:131:                                    ; preds = %37
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6545
  switch i32 %2, label %258 [
    i32 2, label %132
    i32 1, label %146
    i32 5, label %160
    i32 6, label %179
    i32 7, label %198
  ], !dbg !6545

; <label>:132:                                    ; preds = %131
  %133 = load i32, i32* %4, align 4, !dbg !6546, !tbaa !1492
  %134 = icmp ult i32 %133, 4, !dbg !6546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6552
  br i1 %134, label %260, label %135, !dbg !6551

; <label>:135:                                    ; preds = %132
  %136 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6554
  %137 = bitcast %union.anon.4* %136 to %struct.tcp_pcb**, !dbg !6554
  %138 = load %struct.tcp_pcb*, %struct.tcp_pcb** %137, align 8, !dbg !6554, !tbaa !1581
  %139 = icmp eq %struct.tcp_pcb* %138, null, !dbg !6554
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6556
  br i1 %139, label %140, label %141, !dbg !6556

; <label>:140:                                    ; preds = %135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6557
  br label %260, !dbg !6557

; <label>:141:                                    ; preds = %135
  %142 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %138, i64 0, i32 5, !dbg !6559
  %143 = load i8, i8* %142, align 1, !dbg !6559, !tbaa !6560
  %144 = zext i8 %143 to i32, !dbg !6561
  %145 = bitcast i8* %3 to i32*, !dbg !6562
  store i32 %144, i32* %145, align 4, !dbg !6563, !tbaa !1492
  br label %258, !dbg !6564

; <label>:146:                                    ; preds = %131
  %147 = load i32, i32* %4, align 4, !dbg !6565, !tbaa !1492
  %148 = icmp ult i32 %147, 4, !dbg !6565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6569
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6570
  br i1 %148, label %260, label %149, !dbg !6569

; <label>:149:                                    ; preds = %146
  %150 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6572
  %151 = bitcast %union.anon.4* %150 to %struct.tcp_pcb**, !dbg !6572
  %152 = load %struct.tcp_pcb*, %struct.tcp_pcb** %151, align 8, !dbg !6572, !tbaa !1581
  %153 = icmp eq %struct.tcp_pcb* %152, null, !dbg !6572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6574
  br i1 %153, label %154, label %155, !dbg !6574

; <label>:154:                                    ; preds = %149
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6575
  br label %260, !dbg !6575

; <label>:155:                                    ; preds = %149
  %156 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %152, i64 0, i32 4, !dbg !6577
  %157 = load i8, i8* %156, align 2, !dbg !6577, !tbaa !6578
  %158 = zext i8 %157 to i32, !dbg !6579
  %159 = bitcast i8* %3 to i32*, !dbg !6580
  store i32 %158, i32* %159, align 4, !dbg !6581, !tbaa !1492
  br label %258, !dbg !6582

; <label>:160:                                    ; preds = %131
  %161 = load i32, i32* %4, align 4, !dbg !6583, !tbaa !1492
  %162 = icmp eq i32 %161, 0, !dbg !6583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6587
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6588
  br i1 %162, label %260, label %163, !dbg !6587

; <label>:163:                                    ; preds = %160
  %164 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6590
  %165 = bitcast %union.anon.4* %164 to %struct.tcp_pcb**, !dbg !6590
  %166 = load %struct.tcp_pcb*, %struct.tcp_pcb** %165, align 8, !dbg !6590, !tbaa !1581
  %167 = icmp eq %struct.tcp_pcb* %166, null, !dbg !6590
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6592
  %168 = bitcast %struct.tcp_pcb* %166 to %struct.udp_pcb*, !dbg !6592
  br i1 %167, label %169, label %170, !dbg !6592

; <label>:169:                                    ; preds = %163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6593
  br label %260, !dbg !6593

; <label>:170:                                    ; preds = %163
  %171 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6595
  %172 = load i32, i32* %171, align 8, !dbg !6595, !tbaa !1570
  %173 = and i32 %172, 240, !dbg !6595
  %174 = icmp eq i32 %173, 32, !dbg !6597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6598
  br i1 %174, label %176, label %175, !dbg !6598

; <label>:175:                                    ; preds = %170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6599
  br label %260, !dbg !6599

; <label>:176:                                    ; preds = %170
  %177 = getelementptr inbounds %struct.udp_pcb, %struct.udp_pcb* %168, i64 0, i32 12, !dbg !6601
  %178 = load i8, i8* %177, align 1, !dbg !6601, !tbaa !6602
  store i8 %178, i8* %3, align 1, !dbg !6603, !tbaa !1581
  br label %258, !dbg !6604

; <label>:179:                                    ; preds = %131
  %180 = load i32, i32* %4, align 4, !dbg !6605, !tbaa !1492
  %181 = icmp ult i32 %180, 4, !dbg !6605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6610
  br i1 %181, label %260, label %182, !dbg !6609

; <label>:182:                                    ; preds = %179
  %183 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6612
  %184 = bitcast %union.anon.4* %183 to %struct.tcp_pcb**, !dbg !6612
  %185 = load %struct.tcp_pcb*, %struct.tcp_pcb** %184, align 8, !dbg !6612, !tbaa !1581
  %186 = icmp eq %struct.tcp_pcb* %185, null, !dbg !6612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6614
  br i1 %186, label %187, label %188, !dbg !6614

; <label>:187:                                    ; preds = %182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6615
  br label %260, !dbg !6615

; <label>:188:                                    ; preds = %182
  %189 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6617
  %190 = load i32, i32* %189, align 8, !dbg !6617, !tbaa !1570
  %191 = and i32 %190, 240, !dbg !6617
  %192 = icmp eq i32 %191, 32, !dbg !6619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6620
  br i1 %192, label %194, label %193, !dbg !6620

; <label>:193:                                    ; preds = %188
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6621
  br label %260, !dbg !6621

; <label>:194:                                    ; preds = %188
  %195 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %185, i64 0, i32 8, !dbg !6623
  %196 = load i32, i32* %195, align 8, !dbg !6623, !tbaa !6624
  %197 = bitcast i8* %3 to i32*, !dbg !6623
  store i32 %196, i32* %197, align 4, !dbg !6623, !tbaa !6625
  br label %258, !dbg !6626

; <label>:198:                                    ; preds = %131
  %199 = load i32, i32* %4, align 4, !dbg !6627, !tbaa !1492
  %200 = icmp eq i32 %199, 0, !dbg !6627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6632
  br i1 %200, label %260, label %201, !dbg !6631

; <label>:201:                                    ; preds = %198
  %202 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6634
  %203 = bitcast %union.anon.4* %202 to %struct.tcp_pcb**, !dbg !6634
  %204 = load %struct.tcp_pcb*, %struct.tcp_pcb** %203, align 8, !dbg !6634, !tbaa !1581
  %205 = icmp eq %struct.tcp_pcb* %204, null, !dbg !6634
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6636
  br i1 %205, label %206, label %207, !dbg !6636

; <label>:206:                                    ; preds = %201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6637
  br label %260, !dbg !6637

; <label>:207:                                    ; preds = %201
  %208 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %204, i64 0, i32 7, !dbg !6639
  %209 = bitcast i8** %208 to i8*, !dbg !6639
  %210 = load i8, i8* %209, align 8, !dbg !6639, !tbaa !6539
  %211 = and i8 %210, 8, !dbg !6641
  %212 = icmp eq i8 %211, 0, !dbg !6642
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6643
  br i1 %212, label %214, label %213, !dbg !6643

; <label>:213:                                    ; preds = %207
  store i8 1, i8* %3, align 1, !dbg !6644, !tbaa !1581
  br label %258, !dbg !6646

; <label>:214:                                    ; preds = %207
  store i8 0, i8* %3, align 1, !dbg !6647, !tbaa !1581
  br label %258

; <label>:215:                                    ; preds = %37
  %216 = load i32, i32* %4, align 4, !dbg !6649, !tbaa !1492
  %217 = icmp ult i32 %216, 4, !dbg !6649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6655
  br i1 %217, label %260, label %218, !dbg !6654

; <label>:218:                                    ; preds = %215
  %219 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 2, !dbg !6657
  %220 = bitcast %union.anon.4* %219 to %struct.tcp_pcb**, !dbg !6657
  %221 = load %struct.tcp_pcb*, %struct.tcp_pcb** %220, align 8, !dbg !6657, !tbaa !1581
  %222 = icmp eq %struct.tcp_pcb* %221, null, !dbg !6657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6659
  br i1 %222, label %223, label %224, !dbg !6659

; <label>:223:                                    ; preds = %218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6660
  br label %260, !dbg !6660

; <label>:224:                                    ; preds = %218
  %225 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 0, !dbg !6662
  %226 = load i32, i32* %225, align 8, !dbg !6662, !tbaa !1570
  %227 = and i32 %226, 240, !dbg !6662
  %228 = icmp eq i32 %227, 16, !dbg !6662
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6664
  br i1 %228, label %230, label %229, !dbg !6664

; <label>:229:                                    ; preds = %224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6665
  br label %260, !dbg !6665

; <label>:230:                                    ; preds = %224
  %231 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %221, i64 0, i32 8, !dbg !6667
  %232 = load i32, i32* %231, align 8, !dbg !6667, !tbaa !6432
  %233 = icmp eq i32 %232, 1, !dbg !6669
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6671
  br i1 %233, label %260, label %234, !dbg !6670

; <label>:234:                                    ; preds = %230
  switch i32 %2, label %258 [
    i32 1, label %235
    i32 2, label %242
  ], !dbg !6672

; <label>:235:                                    ; preds = %234
  %236 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %221, i64 0, i32 12, !dbg !6673
  %237 = load i16, i16* %236, align 2, !dbg !6673, !tbaa !6675
  %238 = lshr i16 %237, 6, !dbg !6673
  %239 = and i16 %238, 1, !dbg !6673
  %240 = zext i16 %239 to i32, !dbg !6673
  %241 = bitcast i8* %3 to i32*, !dbg !6676
  store i32 %240, i32* %241, align 4, !dbg !6677, !tbaa !1492
  br label %258, !dbg !6678

; <label>:242:                                    ; preds = %234
  %243 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %221, i64 0, i32 54, !dbg !6679
  %244 = load i32, i32* %243, align 8, !dbg !6679, !tbaa !6680
  %245 = bitcast i8* %3 to i32*, !dbg !6681
  store i32 %244, i32* %245, align 4, !dbg !6682, !tbaa !1492
  br label %258, !dbg !6683

; <label>:246:                                    ; preds = %37
  %247 = icmp eq i32 %2, 27, !dbg !6684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6684
  br i1 %247, label %248, label %258, !dbg !6684

; <label>:248:                                    ; preds = %246
  %249 = load i32, i32* %4, align 4, !dbg !6685, !tbaa !1492
  %250 = icmp ult i32 %249, 4, !dbg !6685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6691
  br i1 %250, label %260, label %251, !dbg !6690

; <label>:251:                                    ; preds = %248
  %252 = getelementptr inbounds %struct.netconn, %struct.netconn* %34, i64 0, i32 8, !dbg !6693
  %253 = load i8, i8* %252, align 4, !dbg !6693, !tbaa !2036
  %254 = lshr i8 %253, 5, !dbg !6693
  %255 = and i8 %254, 1, !dbg !6693
  %256 = zext i8 %255 to i32, !dbg !6693
  %257 = bitcast i8* %3 to i32*, !dbg !6694
  store i32 %256, i32* %257, align 4, !dbg !6695, !tbaa !1492
  br label %258, !dbg !6696

; <label>:258:                                    ; preds = %37, %246, %234, %131, %38, %251, %242, %235, %214, %213, %194, %176, %155, %141, %124, %105, %99, %97, %95, %93, %79, %59, %58
  %259 = phi i32 [ 0, %251 ], [ 0, %242 ], [ 0, %235 ], [ 0, %213 ], [ 0, %214 ], [ 0, %194 ], [ 0, %176 ], [ 0, %155 ], [ 0, %141 ], [ 0, %124 ], [ 0, %105 ], [ 0, %99 ], [ 0, %97 ], [ 0, %95 ], [ 0, %93 ], [ 0, %79 ], [ 0, %58 ], [ 0, %59 ], [ 109, %38 ], [ 109, %131 ], [ 109, %234 ], [ 109, %246 ], [ 109, %37 ], !dbg !6405
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6697
  br label %260, !dbg !6697

; <label>:260:                                    ; preds = %36, %39, %47, %48, %62, %69, %78, %85, %104, %109, %117, %123, %132, %140, %146, %154, %160, %169, %175, %179, %187, %193, %198, %206, %215, %223, %229, %230, %248, %258
  %261 = phi i32 [ %259, %258 ], [ 22, %223 ], [ 109, %229 ], [ 22, %206 ], [ 22, %187 ], [ 109, %193 ], [ 22, %169 ], [ 109, %175 ], [ 22, %154 ], [ 22, %140 ], [ 22, %117 ], [ 109, %123 ], [ 22, %104 ], [ 22, %78 ], [ 22, %47 ], [ 109, %48 ], [ 22, %230 ], [ 9, %36 ], [ 109, %62 ], [ 22, %39 ], [ 22, %69 ], [ 22, %85 ], [ 22, %109 ], [ 22, %132 ], [ 22, %146 ], [ 22, %160 ], [ 22, %179 ], [ 22, %198 ], [ 22, %215 ], [ 22, %248 ], !dbg !6698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6701
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !6703
  %262 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6705, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6708
  %263 = icmp ult i64 %262, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6709
  br i1 %263, label %269, label %264, !dbg !6709

; <label>:264:                                    ; preds = %260
  %265 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6710, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6713
  %266 = icmp ugt i64 %265, ptrtoint ([0 x i8]* @_end to i64), !dbg !6709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6714
  br i1 %266, label %269, label %267, !dbg !6714

; <label>:267:                                    ; preds = %264
  %268 = tail call i32* @__errno() #10, !dbg !6715
  store i32 %261, i32* %268, align 4, !dbg !6718, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6719
  br label %278, !dbg !6720

; <label>:269:                                    ; preds = %264, %260
  %270 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6721, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6725
  %271 = and i64 %270, -65536, !dbg !6727
  %272 = or i64 %271, 4097, !dbg !6727
  %273 = add nsw i64 %272, -1, !dbg !6727
  %274 = inttoptr i64 %273 to i32*, !dbg !6728
  %275 = load i32, i32* %274, align 4096, !dbg !6729, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6730
  %276 = sub nsw i32 0, %261, !dbg !6731
  %277 = sext i32 %276 to i64, !dbg !6731
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %277, i32 %275, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6731, !srcloc !6732
  br label %278

; <label>:278:                                    ; preds = %269, %267
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %279 = icmp ne i32 %261, 0, !dbg !6733
  %280 = sext i1 %279 to i32, !dbg !6733
  br label %281, !dbg !6734

; <label>:281:                                    ; preds = %5, %278, %27
  %282 = phi i32 [ -1, %27 ], [ %280, %278 ], [ -1, %5 ], !dbg !6735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6737
  ret i32 %282, !dbg !6737
}

; Function Attrs: noredzone nounwind
define dso_local i32 @setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #0 !dbg !6738 {
  %6 = alloca %struct.sock_net_file*, align 8
  %7 = bitcast %struct.sock_net_file** %6 to i8*, !dbg !6777
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6777
  store %struct.sock_net_file* null, %struct.sock_net_file** %6, align 8, !dbg !6778, !tbaa !1426
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6779, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6782
  %9 = icmp ult i64 %8, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6783
  br i1 %9, label %32, label %10, !dbg !6783

; <label>:10:                                     ; preds = %5
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6784, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6787
  %12 = icmp ugt i64 %11, ptrtoint ([0 x i8]* @_end to i64), !dbg !6783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6788
  br i1 %12, label %32, label %13, !dbg !6788

; <label>:13:                                     ; preds = %10
  %14 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !6793
  %15 = icmp eq %struct.vfscore_file* %14, null, !dbg !6795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6796
  br i1 %15, label %28, label %16, !dbg !6796

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 6, !dbg !6797
  %18 = load %struct.dentry*, %struct.dentry** %17, align 8, !dbg !6797, !tbaa !2585
  %19 = getelementptr inbounds %struct.dentry, %struct.dentry* %18, i64 0, i32 3, !dbg !6798
  %20 = load %struct.vnode*, %struct.vnode** %19, align 8, !dbg !6798, !tbaa !2847
  %21 = getelementptr inbounds %struct.vnode, %struct.vnode* %20, i64 0, i32 5, !dbg !6799
  %22 = load i32, i32* %21, align 4, !dbg !6799, !tbaa !2595
  %23 = icmp eq i32 %22, 6, !dbg !6800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6801
  br i1 %23, label %24, label %28, !dbg !6801

; <label>:24:                                     ; preds = %16
  %25 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %14, i64 0, i32 4, !dbg !6802
  %26 = bitcast i8** %25 to %struct.sock_net_file**, !dbg !6802
  %27 = load %struct.sock_net_file*, %struct.sock_net_file** %26, align 8, !dbg !6802, !tbaa !2581
  br label %28, !dbg !6803

; <label>:28:                                     ; preds = %16, %13, %24
  %29 = phi %struct.sock_net_file* [ %27, %24 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %13 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %16 ], !dbg !6804
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6806
  store %struct.sock_net_file* %29, %struct.sock_net_file** %6, align 8, !dbg !6807, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6807
  %30 = ptrtoint %struct.sock_net_file* %29 to i64, !dbg !6807
  %31 = bitcast %struct.sock_net_file** %6 to i64*, !dbg !6808
  br label %44, !dbg !6807

; <label>:32:                                     ; preds = %10, %5
  %33 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6809, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6813
  %34 = and i64 %33, -65536, !dbg !6815
  %35 = or i64 %34, 4097, !dbg !6815
  %36 = add nsw i64 %35, -1, !dbg !6815
  %37 = inttoptr i64 %36 to i32*, !dbg !6816
  %38 = load i32, i32* %37, align 4096, !dbg !6817, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6818
  %39 = sext i32 %0 to i64, !dbg !6819
  %40 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %39, i32 %38, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !6819, !srcloc !6820
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %6, i64 %40) #6, !dbg !6821, !srcloc !6825
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %41 = bitcast %struct.sock_net_file** %6 to i64*
  %42 = load i64, i64* %41, align 8, !dbg !6808, !tbaa !1426
  %43 = inttoptr i64 %42 to %struct.sock_net_file*
  br label %44

; <label>:44:                                     ; preds = %32, %28
  %45 = phi i64* [ %41, %32 ], [ %31, %28 ], !dbg !6808
  %46 = phi %struct.sock_net_file* [ %43, %32 ], [ %29, %28 ]
  %47 = phi i64 [ %42, %32 ], [ %30, %28 ], !dbg !6808
  %48 = icmp slt i64 %47, 1, !dbg !6808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6808
  br i1 %48, label %49, label %72, !dbg !6808

; <label>:49:                                     ; preds = %44
  %50 = icmp sgt i64 %47, -513, !dbg !6808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6826
  br i1 %50, label %51, label %72, !dbg !6826

; <label>:51:                                     ; preds = %49
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6827, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6830
  %53 = icmp ult i64 %52, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6831
  br i1 %53, label %62, label %54, !dbg !6831

; <label>:54:                                     ; preds = %51
  %55 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6832, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6835
  %56 = icmp ugt i64 %55, ptrtoint ([0 x i8]* @_end to i64), !dbg !6831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6836
  br i1 %56, label %62, label %57, !dbg !6836

; <label>:57:                                     ; preds = %54
  %58 = load i64, i64* %45, align 8, !dbg !6837, !tbaa !1426
  %59 = trunc i64 %58 to i32, !dbg !6837
  %60 = sub nsw i32 0, %59, !dbg !6841
  %61 = call i32* @__errno() #10, !dbg !6842
  store i32 %60, i32* %61, align 4, !dbg !6843, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6844
  br label %95, !dbg !6837

; <label>:62:                                     ; preds = %54, %51
  %63 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6845, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6849
  %64 = and i64 %63, -65536, !dbg !6851
  %65 = or i64 %64, 4097, !dbg !6851
  %66 = add nsw i64 %65, -1, !dbg !6851
  %67 = inttoptr i64 %66 to i32*, !dbg !6852
  %68 = load i32, i32* %67, align 4096, !dbg !6853, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6854
  %69 = load i64, i64* %45, align 8, !dbg !6855, !tbaa !1426
  %70 = shl i64 %69, 32, !dbg !6855
  %71 = ashr exact i64 %70, 32, !dbg !6855
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %71, i32 %68, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6855, !srcloc !6856
  br label %95

; <label>:72:                                     ; preds = %49, %44
  %73 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %46, i64 0, i32 1, !dbg !6857
  %74 = load i32, i32* %73, align 8, !dbg !6857, !tbaa !1421
  %75 = call i32 @lwip_setsockopt(i32 %74, i32 %1, i32 %2, i8* %3, i32 %4) #8, !dbg !6858
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6859, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6862
  %77 = icmp ult i64 %76, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6863
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6863
  br i1 %77, label %85, label %78, !dbg !6863

; <label>:78:                                     ; preds = %72
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6864, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6867
  %80 = icmp ugt i64 %79, ptrtoint ([0 x i8]* @_end to i64), !dbg !6863
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6868
  br i1 %80, label %85, label %81, !dbg !6868

; <label>:81:                                     ; preds = %78
  %82 = load %struct.sock_net_file*, %struct.sock_net_file** %6, align 8, !dbg !6869, !tbaa !1426
  %83 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %82, i64 0, i32 0, !dbg !6869
  %84 = load %struct.vfscore_file*, %struct.vfscore_file** %83, align 8, !dbg !6869, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %84) #10, !dbg !6869
  br label %95, !dbg !6869

; <label>:85:                                     ; preds = %78, %72
  %86 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6871, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6875
  %87 = and i64 %86, -65536, !dbg !6877
  %88 = or i64 %87, 4097, !dbg !6877
  %89 = add nsw i64 %88, -1, !dbg !6877
  %90 = inttoptr i64 %89 to i32*, !dbg !6878
  %91 = load i32, i32* %90, align 4096, !dbg !6879, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6880
  %92 = bitcast %struct.sock_net_file** %6 to i64**, !dbg !6881
  %93 = load i64*, i64** %92, align 8, !dbg !6881, !tbaa !1426
  %94 = load i64, i64* %93, align 8, !dbg !6881, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %94, i32 %91, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !6881, !srcloc !6882
  br label %95

; <label>:95:                                     ; preds = %81, %85, %57, %62
  %96 = phi i32 [ -1, %57 ], [ -1, %62 ], [ %75, %81 ], [ %75, %85 ], !dbg !6883
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !6884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6885
  ret i32 %96, !dbg !6885
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #0 !dbg !6886 {
  %6 = alloca %struct.ip6_addr, align 16
  %7 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !6919
  %8 = icmp eq %struct.lwip_sock* %7, null, !dbg !6921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6923
  br i1 %8, label %406, label %9, !dbg !6923

; <label>:9:                                      ; preds = %5
  %10 = icmp eq i8* %3, null, !dbg !6924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6925
  br i1 %10, label %11, label %27, !dbg !6925

; <label>:11:                                     ; preds = %9
  %12 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6927, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6930
  %13 = icmp ult i64 %12, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !6931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6931
  br i1 %13, label %19, label %14, !dbg !6931

; <label>:14:                                     ; preds = %11
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6932, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6935
  %16 = icmp ugt i64 %15, ptrtoint ([0 x i8]* @_end to i64), !dbg !6931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6936
  br i1 %16, label %19, label %17, !dbg !6936

; <label>:17:                                     ; preds = %14
  %18 = tail call i32* @__errno() #10, !dbg !6940
  store i32 14, i32* %18, align 4, !dbg !6941, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6942
  br label %26, !dbg !6943

; <label>:19:                                     ; preds = %14, %11
  %20 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6944, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6948
  %21 = and i64 %20, -65536, !dbg !6950
  %22 = or i64 %21, 4097, !dbg !6950
  %23 = add nsw i64 %22, -1, !dbg !6950
  %24 = inttoptr i64 %23 to i32*, !dbg !6951
  %25 = load i32, i32* %24, align 4096, !dbg !6952, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6953
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -14, i32 %25, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !6954, !srcloc !6955
  br label %26

; <label>:26:                                     ; preds = %19, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %406, !dbg !6956

; <label>:27:                                     ; preds = %9
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !6957
  %28 = icmp ugt i32 %0, 63, !dbg !7054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7054
  br i1 %28, label %29, label %30, !dbg !7054

; <label>:29:                                     ; preds = %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7055
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7056
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7058
  br label %35, !dbg !7058

; <label>:30:                                     ; preds = %27
  %31 = sext i32 %0 to i64, !dbg !7059
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7056
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7058
  %32 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %31, i32 0, !dbg !7061
  %33 = load %struct.netconn*, %struct.netconn** %32, align 8, !dbg !7061, !tbaa !1563
  %34 = icmp eq %struct.netconn* %33, null, !dbg !7062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7063
  br i1 %34, label %35, label %36, !dbg !7063

; <label>:35:                                     ; preds = %30, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7067
  br label %385, !dbg !7066

; <label>:36:                                     ; preds = %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7068
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7067
  switch i32 %1, label %383 [
    i32 4095, label %37
    i32 0, label %123
    i32 6, label %212
    i32 41, label %245
  ], !dbg !7069

; <label>:37:                                     ; preds = %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7070
  switch i32 %2, label %383 [
    i32 32, label %38
    i32 8, label %38
    i32 4, label %38
    i32 4106, label %68
    i32 4107, label %93
  ], !dbg !7070

; <label>:38:                                     ; preds = %37, %37, %37
  %39 = icmp eq i32 %2, 32, !dbg !7071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7073
  br i1 %39, label %40, label %45, !dbg !7073

; <label>:40:                                     ; preds = %38
  %41 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7074
  %42 = load i32, i32* %41, align 8, !dbg !7074, !tbaa !1570
  %43 = and i32 %42, 240, !dbg !7074
  %44 = icmp eq i32 %43, 32, !dbg !7075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7077
  br i1 %44, label %48, label %385, !dbg !7076

; <label>:45:                                     ; preds = %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7081
  switch i32 %2, label %47 [
    i32 4, label %46
    i32 8, label %48
  ], !dbg !7081

; <label>:46:                                     ; preds = %45
  br label %48, !dbg !7082

; <label>:47:                                     ; preds = %45
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !7083
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !7084
  tail call void @ukplat_terminate(i32 3) #9, !dbg !7084
  unreachable

; <label>:48:                                     ; preds = %45, %40, %46
  %49 = phi i8 [ 4, %46 ], [ 32, %40 ], [ 8, %45 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7086
  %50 = icmp ult i32 %4, 4, !dbg !7087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7092
  br i1 %50, label %385, label %51, !dbg !7091

; <label>:51:                                     ; preds = %48
  %52 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7094
  %53 = bitcast %union.anon.4* %52 to %struct.tcp_pcb**, !dbg !7094
  %54 = load %struct.tcp_pcb*, %struct.tcp_pcb** %53, align 8, !dbg !7094, !tbaa !1581
  %55 = icmp eq %struct.tcp_pcb* %54, null, !dbg !7094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7096
  br i1 %55, label %56, label %57, !dbg !7096

; <label>:56:                                     ; preds = %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7097
  br label %385, !dbg !7097

; <label>:57:                                     ; preds = %51
  %58 = bitcast i8* %3 to i32*, !dbg !7099
  %59 = load i32, i32* %58, align 4, !dbg !7101, !tbaa !1492
  %60 = icmp eq i32 %59, 0, !dbg !7101
  %61 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %54, i64 0, i32 3, !dbg !7102
  %62 = load i8, i8* %61, align 1, !dbg !7102, !tbaa !6482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7104
  br i1 %60, label %65, label %63, !dbg !7104

; <label>:63:                                     ; preds = %57
  %64 = or i8 %62, %49, !dbg !7105
  store i8 %64, i8* %61, align 1, !dbg !7105, !tbaa !6482
  br label %383, !dbg !7107

; <label>:65:                                     ; preds = %57
  %66 = xor i8 %49, -1, !dbg !7108
  %67 = and i8 %62, %66, !dbg !7108
  store i8 %67, i8* %61, align 1, !dbg !7108, !tbaa !6482
  br label %383

; <label>:68:                                     ; preds = %37
  %69 = icmp ult i32 %4, 4, !dbg !7109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7115
  br i1 %69, label %385, label %70, !dbg !7114

; <label>:70:                                     ; preds = %68
  %71 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7117
  %72 = bitcast %union.anon.4* %71 to %struct.tcp_pcb**, !dbg !7117
  %73 = load %struct.tcp_pcb*, %struct.tcp_pcb** %72, align 8, !dbg !7117, !tbaa !1581
  %74 = icmp eq %struct.tcp_pcb* %73, null, !dbg !7117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7119
  br i1 %74, label %75, label %76, !dbg !7119

; <label>:75:                                     ; preds = %70
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7120
  br label %385, !dbg !7120

; <label>:76:                                     ; preds = %70
  %77 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7122
  %78 = load i32, i32* %77, align 8, !dbg !7122, !tbaa !1570
  %79 = and i32 %78, 240, !dbg !7122
  %80 = icmp eq i32 %79, 32, !dbg !7122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7124
  br i1 %80, label %82, label %81, !dbg !7124

; <label>:81:                                     ; preds = %76
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7125
  br label %385, !dbg !7125

; <label>:82:                                     ; preds = %76
  %83 = bitcast i8* %3 to i32*, !dbg !7127
  %84 = load i32, i32* %83, align 4, !dbg !7129, !tbaa !1492
  %85 = icmp eq i32 %84, 0, !dbg !7129
  %86 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %73, i64 0, i32 7, !dbg !7130
  %87 = bitcast i8** %86 to i8*, !dbg !7130
  %88 = load i8, i8* %87, align 8, !dbg !7130, !tbaa !6539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7133
  br i1 %85, label %91, label %89, !dbg !7133

; <label>:89:                                     ; preds = %82
  %90 = or i8 %88, 1, !dbg !7134
  store i8 %90, i8* %87, align 8, !dbg !7134, !tbaa !6539
  br label %383, !dbg !7137

; <label>:91:                                     ; preds = %82
  %92 = and i8 %88, -2, !dbg !7138
  store i8 %92, i8* %87, align 8, !dbg !7138, !tbaa !6539
  br label %383

; <label>:93:                                     ; preds = %37
  %94 = icmp ult i32 %4, 24, !dbg !7140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7144
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7145
  br i1 %94, label %120, label %95, !dbg !7144

; <label>:95:                                     ; preds = %93
  %96 = load i8, i8* %3, align 8, !dbg !7148, !tbaa !1581
  %97 = icmp eq i8 %96, 0, !dbg !7150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7151
  br i1 %97, label %104, label %98, !dbg !7151

; <label>:98:                                     ; preds = %95
  %99 = tail call %struct.netif* @netif_find(i8* nonnull %3) #10, !dbg !7152
  %100 = icmp eq %struct.netif* %99, null, !dbg !7154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7156
  br i1 %100, label %103, label %101, !dbg !7156

; <label>:101:                                    ; preds = %98
  %102 = load %struct.netconn*, %struct.netconn** %32, align 8, !dbg !7157, !tbaa !1563
  br label %104, !dbg !7156

; <label>:103:                                    ; preds = %98
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7158
  br label %120, !dbg !7158

; <label>:104:                                    ; preds = %101, %95
  %105 = phi %struct.netconn* [ %102, %101 ], [ %33, %95 ], !dbg !7157
  %106 = phi %struct.netif* [ %99, %101 ], [ null, %95 ], !dbg !7160
  %107 = getelementptr inbounds %struct.netconn, %struct.netconn* %105, i64 0, i32 0, !dbg !7157
  %108 = load i32, i32* %107, align 8, !dbg !7157, !tbaa !1570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7161
  %109 = trunc i32 %108 to i8, !dbg !7161
  %110 = and i8 %109, -16, !dbg !7161
  switch i8 %110, label %119 [
    i8 16, label %111
    i8 32, label %115
  ], !dbg !7161

; <label>:111:                                    ; preds = %104
  %112 = getelementptr inbounds %struct.netconn, %struct.netconn* %105, i64 0, i32 2, !dbg !7162
  %113 = bitcast %union.anon.4* %112 to %struct.tcp_pcb**, !dbg !7164
  %114 = load %struct.tcp_pcb*, %struct.tcp_pcb** %113, align 8, !dbg !7164, !tbaa !1581
  tail call void @tcp_bind_netif(%struct.tcp_pcb* %114, %struct.netif* %106) #10, !dbg !7165
  br label %122, !dbg !7166

; <label>:115:                                    ; preds = %104
  %116 = getelementptr inbounds %struct.netconn, %struct.netconn* %105, i64 0, i32 2, !dbg !7167
  %117 = bitcast %union.anon.4* %116 to %struct.udp_pcb**, !dbg !7168
  %118 = load %struct.udp_pcb*, %struct.udp_pcb** %117, align 8, !dbg !7168, !tbaa !1581
  tail call void @udp_bind_netif(%struct.udp_pcb* %118, %struct.netif* %106) #10, !dbg !7169
  br label %122, !dbg !7170

; <label>:119:                                    ; preds = %104
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !7171
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !7176
  tail call void @ukplat_terminate(i32 3) #9, !dbg !7176
  unreachable

; <label>:120:                                    ; preds = %103, %93
  %121 = phi i32 [ 19, %103 ], [ 22, %93 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %385

; <label>:122:                                    ; preds = %115, %111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7180
  br label %383

; <label>:123:                                    ; preds = %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7181
  switch i32 %2, label %383 [
    i32 2, label %124
    i32 1, label %137
    i32 5, label %150
    i32 6, label %168
    i32 7, label %188
  ], !dbg !7181

; <label>:124:                                    ; preds = %123
  %125 = icmp ult i32 %4, 4, !dbg !7182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7186
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7187
  br i1 %125, label %385, label %126, !dbg !7186

; <label>:126:                                    ; preds = %124
  %127 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7189
  %128 = bitcast %union.anon.4* %127 to %struct.tcp_pcb**, !dbg !7189
  %129 = load %struct.tcp_pcb*, %struct.tcp_pcb** %128, align 8, !dbg !7189, !tbaa !1581
  %130 = icmp eq %struct.tcp_pcb* %129, null, !dbg !7189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7191
  br i1 %130, label %131, label %132, !dbg !7191

; <label>:131:                                    ; preds = %126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7192
  br label %385, !dbg !7192

; <label>:132:                                    ; preds = %126
  %133 = bitcast i8* %3 to i32*, !dbg !7194
  %134 = load i32, i32* %133, align 4, !dbg !7195, !tbaa !1492
  %135 = trunc i32 %134 to i8, !dbg !7196
  %136 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %129, i64 0, i32 5, !dbg !7197
  store i8 %135, i8* %136, align 1, !dbg !7198, !tbaa !6560
  br label %383, !dbg !7199

; <label>:137:                                    ; preds = %123
  %138 = icmp ult i32 %4, 4, !dbg !7200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7205
  br i1 %138, label %385, label %139, !dbg !7204

; <label>:139:                                    ; preds = %137
  %140 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7207
  %141 = bitcast %union.anon.4* %140 to %struct.tcp_pcb**, !dbg !7207
  %142 = load %struct.tcp_pcb*, %struct.tcp_pcb** %141, align 8, !dbg !7207, !tbaa !1581
  %143 = icmp eq %struct.tcp_pcb* %142, null, !dbg !7207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7209
  br i1 %143, label %144, label %145, !dbg !7209

; <label>:144:                                    ; preds = %139
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7210
  br label %385, !dbg !7210

; <label>:145:                                    ; preds = %139
  %146 = bitcast i8* %3 to i32*, !dbg !7212
  %147 = load i32, i32* %146, align 4, !dbg !7213, !tbaa !1492
  %148 = trunc i32 %147 to i8, !dbg !7214
  %149 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %142, i64 0, i32 4, !dbg !7215
  store i8 %148, i8* %149, align 2, !dbg !7216, !tbaa !6578
  br label %383, !dbg !7217

; <label>:150:                                    ; preds = %123
  %151 = icmp eq i32 %4, 0, !dbg !7218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7223
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7224
  br i1 %151, label %385, label %152, !dbg !7223

; <label>:152:                                    ; preds = %150
  %153 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7226
  %154 = bitcast %union.anon.4* %153 to %struct.tcp_pcb**, !dbg !7226
  %155 = load %struct.tcp_pcb*, %struct.tcp_pcb** %154, align 8, !dbg !7226, !tbaa !1581
  %156 = icmp eq %struct.tcp_pcb* %155, null, !dbg !7226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7228
  %157 = bitcast %struct.tcp_pcb* %155 to %struct.udp_pcb*, !dbg !7228
  br i1 %156, label %158, label %159, !dbg !7228

; <label>:158:                                    ; preds = %152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7229
  br label %385, !dbg !7229

; <label>:159:                                    ; preds = %152
  %160 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7231
  %161 = load i32, i32* %160, align 8, !dbg !7231, !tbaa !1570
  %162 = and i32 %161, 240, !dbg !7231
  %163 = icmp eq i32 %162, 32, !dbg !7231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7233
  br i1 %163, label %165, label %164, !dbg !7233

; <label>:164:                                    ; preds = %159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7234
  br label %385, !dbg !7234

; <label>:165:                                    ; preds = %159
  %166 = load i8, i8* %3, align 1, !dbg !7236, !tbaa !1581
  %167 = getelementptr inbounds %struct.udp_pcb, %struct.udp_pcb* %157, i64 0, i32 12, !dbg !7236
  store i8 %166, i8* %167, align 1, !dbg !7236, !tbaa !6602
  br label %383, !dbg !7237

; <label>:168:                                    ; preds = %123
  %169 = icmp ult i32 %4, 4, !dbg !7238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7244
  br i1 %169, label %182, label %170, !dbg !7243

; <label>:170:                                    ; preds = %168
  %171 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7246
  %172 = bitcast %union.anon.4* %171 to %struct.tcp_pcb**, !dbg !7246
  %173 = load %struct.tcp_pcb*, %struct.tcp_pcb** %172, align 8, !dbg !7246, !tbaa !1581
  %174 = icmp eq %struct.tcp_pcb* %173, null, !dbg !7246
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7248
  br i1 %174, label %180, label %175, !dbg !7248

; <label>:175:                                    ; preds = %170
  %176 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7249
  %177 = load i32, i32* %176, align 8, !dbg !7249, !tbaa !1570
  %178 = and i32 %177, 240, !dbg !7249
  %179 = icmp eq i32 %178, 32, !dbg !7249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7251
  br i1 %179, label %184, label %180, !dbg !7251

; <label>:180:                                    ; preds = %175, %170
  %181 = phi i32 [ 22, %170 ], [ 109, %175 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7252
  br label %182

; <label>:182:                                    ; preds = %180, %168
  %183 = phi i32 [ 22, %168 ], [ %181, %180 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %385

; <label>:184:                                    ; preds = %175
  %185 = bitcast i8* %3 to i32*, !dbg !7254
  %186 = load i32, i32* %185, align 4, !dbg !7254, !tbaa !6625
  %187 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %173, i64 0, i32 8, !dbg !7256
  store i32 %186, i32* %187, align 8, !dbg !7256, !tbaa !6624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7257
  br label %383

; <label>:188:                                    ; preds = %123
  %189 = icmp eq i32 %4, 0, !dbg !7258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7264
  br i1 %189, label %385, label %190, !dbg !7263

; <label>:190:                                    ; preds = %188
  %191 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7266
  %192 = bitcast %union.anon.4* %191 to %struct.tcp_pcb**, !dbg !7266
  %193 = load %struct.tcp_pcb*, %struct.tcp_pcb** %192, align 8, !dbg !7266, !tbaa !1581
  %194 = icmp eq %struct.tcp_pcb* %193, null, !dbg !7266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7268
  br i1 %194, label %195, label %196, !dbg !7268

; <label>:195:                                    ; preds = %190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7269
  br label %385, !dbg !7269

; <label>:196:                                    ; preds = %190
  %197 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7271
  %198 = load i32, i32* %197, align 8, !dbg !7271, !tbaa !1570
  %199 = and i32 %198, 240, !dbg !7271
  %200 = icmp eq i32 %199, 32, !dbg !7271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7273
  br i1 %200, label %202, label %201, !dbg !7273

; <label>:201:                                    ; preds = %196
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7274
  br label %385, !dbg !7274

; <label>:202:                                    ; preds = %196
  %203 = load i8, i8* %3, align 1, !dbg !7276, !tbaa !1581
  %204 = icmp eq i8 %203, 0, !dbg !7276
  %205 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %193, i64 0, i32 7, !dbg !7278
  %206 = bitcast i8** %205 to i8*, !dbg !7278
  %207 = load i8, i8* %206, align 8, !dbg !7278, !tbaa !6539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7281
  br i1 %204, label %210, label %208, !dbg !7281

; <label>:208:                                    ; preds = %202
  %209 = or i8 %207, 8, !dbg !7282
  store i8 %209, i8* %206, align 8, !dbg !7282, !tbaa !6539
  br label %383, !dbg !7285

; <label>:210:                                    ; preds = %202
  %211 = and i8 %207, -9, !dbg !7286
  store i8 %211, i8* %206, align 8, !dbg !7286, !tbaa !6539
  br label %383

; <label>:212:                                    ; preds = %36
  %213 = icmp ult i32 %4, 4, !dbg !7287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7293
  br i1 %213, label %385, label %214, !dbg !7292

; <label>:214:                                    ; preds = %212
  %215 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7295
  %216 = bitcast %union.anon.4* %215 to %struct.tcp_pcb**, !dbg !7295
  %217 = load %struct.tcp_pcb*, %struct.tcp_pcb** %216, align 8, !dbg !7295, !tbaa !1581
  %218 = icmp eq %struct.tcp_pcb* %217, null, !dbg !7295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7297
  br i1 %218, label %219, label %220, !dbg !7297

; <label>:219:                                    ; preds = %214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7298
  br label %385, !dbg !7298

; <label>:220:                                    ; preds = %214
  %221 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7300
  %222 = load i32, i32* %221, align 8, !dbg !7300, !tbaa !1570
  %223 = and i32 %222, 240, !dbg !7300
  %224 = icmp eq i32 %223, 16, !dbg !7300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7302
  br i1 %224, label %226, label %225, !dbg !7302

; <label>:225:                                    ; preds = %220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7303
  br label %385, !dbg !7303

; <label>:226:                                    ; preds = %220
  %227 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %217, i64 0, i32 8, !dbg !7305
  %228 = load i32, i32* %227, align 8, !dbg !7305, !tbaa !6432
  %229 = icmp eq i32 %228, 1, !dbg !7307
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7309
  br i1 %229, label %385, label %230, !dbg !7308

; <label>:230:                                    ; preds = %226
  switch i32 %2, label %383 [
    i32 1, label %231
    i32 2, label %241
  ], !dbg !7310

; <label>:231:                                    ; preds = %230
  %232 = bitcast i8* %3 to i32*, !dbg !7311
  %233 = load i32, i32* %232, align 4, !dbg !7314, !tbaa !1492
  %234 = icmp eq i32 %233, 0, !dbg !7314
  %235 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %217, i64 0, i32 12, !dbg !7315
  %236 = load i16, i16* %235, align 2, !dbg !7315, !tbaa !6675
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7318
  br i1 %234, label %239, label %237, !dbg !7318

; <label>:237:                                    ; preds = %231
  %238 = or i16 %236, 64, !dbg !7319
  store i16 %238, i16* %235, align 2, !dbg !7319, !tbaa !6675
  br label %383, !dbg !7322

; <label>:239:                                    ; preds = %231
  %240 = and i16 %236, -65, !dbg !7323
  store i16 %240, i16* %235, align 2, !dbg !7323, !tbaa !6675
  br label %383

; <label>:241:                                    ; preds = %230
  %242 = bitcast i8* %3 to i32*, !dbg !7324
  %243 = load i32, i32* %242, align 4, !dbg !7325, !tbaa !1492
  %244 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %217, i64 0, i32 54, !dbg !7326
  store i32 %243, i32* %244, align 8, !dbg !7327, !tbaa !6680
  br label %383, !dbg !7328

; <label>:245:                                    ; preds = %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7329
  switch i32 %2, label %383 [
    i32 27, label %246
    i32 12, label %264
    i32 13, label %264
  ], !dbg !7329

; <label>:246:                                    ; preds = %245
  %247 = icmp ult i32 %4, 4, !dbg !7330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7335
  br i1 %247, label %385, label %248, !dbg !7334

; <label>:248:                                    ; preds = %246
  %249 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7337
  %250 = bitcast %union.anon.4* %249 to %struct.tcp_pcb**, !dbg !7337
  %251 = load %struct.tcp_pcb*, %struct.tcp_pcb** %250, align 8, !dbg !7337, !tbaa !1581
  %252 = icmp eq %struct.tcp_pcb* %251, null, !dbg !7337
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7339
  br i1 %252, label %253, label %254, !dbg !7339

; <label>:253:                                    ; preds = %248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7340
  br label %385, !dbg !7340

; <label>:254:                                    ; preds = %248
  %255 = bitcast i8* %3 to i32*, !dbg !7342
  %256 = load i32, i32* %255, align 4, !dbg !7344, !tbaa !1492
  %257 = icmp eq i32 %256, 0, !dbg !7344
  %258 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 8, !dbg !7345
  %259 = load i8, i8* %258, align 4, !dbg !7345, !tbaa !2036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7351
  br i1 %257, label %262, label %260, !dbg !7351

; <label>:260:                                    ; preds = %254
  %261 = or i8 %259, 32, !dbg !7352
  store i8 %261, i8* %258, align 4, !dbg !7352, !tbaa !2036
  br label %383, !dbg !7358

; <label>:262:                                    ; preds = %254
  %263 = and i8 %259, -33, !dbg !7359
  store i8 %263, i8* %258, align 4, !dbg !7359, !tbaa !2036
  br label %383

; <label>:264:                                    ; preds = %245, %245
  %265 = bitcast %struct.ip6_addr* %6 to i8*, !dbg !7360
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %265) #6, !dbg !7360
  %266 = icmp ult i32 %4, 20, !dbg !7362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7368
  br i1 %266, label %379, label %267, !dbg !7367

; <label>:267:                                    ; preds = %264
  %268 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 2, !dbg !7370
  %269 = bitcast %union.anon.4* %268 to %struct.tcp_pcb**, !dbg !7370
  %270 = load %struct.tcp_pcb*, %struct.tcp_pcb** %269, align 8, !dbg !7370, !tbaa !1581
  %271 = icmp eq %struct.tcp_pcb* %270, null, !dbg !7370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7372
  br i1 %271, label %377, label %272, !dbg !7372

; <label>:272:                                    ; preds = %267
  %273 = getelementptr inbounds %struct.netconn, %struct.netconn* %33, i64 0, i32 0, !dbg !7373
  %274 = load i32, i32* %273, align 8, !dbg !7373, !tbaa !1570
  %275 = and i32 %274, 240, !dbg !7373
  %276 = icmp eq i32 %275, 32, !dbg !7373
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7375
  br i1 %276, label %277, label %377, !dbg !7375

; <label>:277:                                    ; preds = %272
  %278 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 0, !dbg !7376
  %279 = bitcast i8* %3 to <4 x i32>*, !dbg !7376
  %280 = load <4 x i32>, <4 x i32>* %279, align 4, !dbg !7376, !tbaa !1581
  %281 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 1, !dbg !7376
  %282 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 2, !dbg !7376
  %283 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 0, i64 3, !dbg !7376
  %284 = bitcast %struct.ip6_addr* %6 to <4 x i32>*, !dbg !7376
  store <4 x i32> %280, <4 x i32>* %284, align 16, !dbg !7376, !tbaa !1492
  %285 = getelementptr inbounds %struct.ip6_addr, %struct.ip6_addr* %6, i64 0, i32 1, !dbg !7376
  store i8 0, i8* %285, align 16, !dbg !7376, !tbaa !7378
  %286 = getelementptr inbounds i8, i8* %3, i64 16, !dbg !7379
  %287 = bitcast i8* %286 to i32*, !dbg !7379
  %288 = load i32, i32* %287, align 4, !dbg !7379, !tbaa !7382
  %289 = icmp ult i32 %288, 256, !dbg !7379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7384
  br i1 %289, label %291, label %290, !dbg !7384

; <label>:290:                                    ; preds = %277
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !7385
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !7388
  tail call void @ukplat_terminate(i32 3) #9, !dbg !7388
  unreachable

; <label>:291:                                    ; preds = %277
  %292 = trunc i32 %288 to i8, !dbg !7392
  %293 = tail call %struct.netif* @netif_get_by_index(i8 zeroext %292) #10, !dbg !7393
  %294 = icmp eq %struct.netif* %293, null, !dbg !7395
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7397
  br i1 %294, label %381, label %295, !dbg !7397

; <label>:295:                                    ; preds = %291
  %296 = icmp eq i32 %2, 12, !dbg !7398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7400
  br i1 %296, label %297, label %324, !dbg !7400

; <label>:297:                                    ; preds = %295
  %298 = load i32, i32* %287, align 4, !dbg !7401, !tbaa !7382
  %299 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #10, !dbg !7418
  %300 = icmp eq %struct.lwip_sock* %299, null, !dbg !7420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7423
  br i1 %300, label %313, label %301, !dbg !7422

; <label>:301:                                    ; preds = %297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7426
  br label %302, !dbg !7426

; <label>:302:                                    ; preds = %408, %301
  %303 = phi i64 [ 0, %301 ], [ %409, %408 ]
  %304 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %303, i32 0, !dbg !7427
  %305 = load %struct.lwip_sock*, %struct.lwip_sock** %304, align 16, !dbg !7427, !tbaa !1614
  %306 = icmp eq %struct.lwip_sock* %305, null, !dbg !7431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7432
  br i1 %306, label %314, label %307, !dbg !7432

; <label>:307:                                    ; preds = %302
  %308 = or i64 %303, 1, !dbg !7433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7426
  %309 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %308, i32 0, !dbg !7427
  %310 = load %struct.lwip_sock*, %struct.lwip_sock** %309, align 16, !dbg !7427, !tbaa !1614
  %311 = icmp eq %struct.lwip_sock* %310, null, !dbg !7431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7432
  br i1 %311, label %314, label %408, !dbg !7432

; <label>:312:                                    ; preds = %408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7435
  br label %313, !dbg !7435

; <label>:313:                                    ; preds = %312, %297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7437
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7439
  br label %375, !dbg !7441

; <label>:314:                                    ; preds = %307, %302
  %315 = phi i64 [ %303, %302 ], [ %308, %307 ]
  %316 = phi %struct.lwip_sock** [ %304, %302 ], [ %309, %307 ], !dbg !7427
  %317 = and i64 %315, 4294967295, !dbg !7442
  store %struct.lwip_sock* %299, %struct.lwip_sock** %316, align 16, !dbg !7443, !tbaa !1614
  %318 = trunc i32 %298 to i8, !dbg !7445
  %319 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %317, i32 1, !dbg !7446
  store i8 %318, i8* %319, align 8, !dbg !7447, !tbaa !1629
  %320 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %317, i32 2, i32 0, i64 0, !dbg !7448
  %321 = bitcast i32* %320 to <4 x i32>*, !dbg !7448
  store <4 x i32> %280, <4 x i32>* %321, align 4, !dbg !7448, !tbaa !1492
  %322 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %317, i32 2, i32 1, !dbg !7448
  store i8 0, i8* %322, align 4, !dbg !7448, !tbaa !1623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7437
  %323 = call signext i8 @mld6_joingroup_netif(%struct.netif* nonnull %293, %struct.ip6_addr* nonnull %6) #10, !dbg !7451
  br label %372

; <label>:324:                                    ; preds = %295
  %325 = call signext i8 @mld6_leavegroup_netif(%struct.netif* nonnull %293, %struct.ip6_addr* nonnull %6) #10, !dbg !7453
  %326 = load i32, i32* %287, align 4, !dbg !7455, !tbaa !7382
  %327 = call fastcc %struct.lwip_sock* @get_socket(i32 %0) #10, !dbg !7469
  %328 = icmp eq %struct.lwip_sock* %327, null, !dbg !7471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7474
  br i1 %328, label %371, label %329, !dbg !7473

; <label>:329:                                    ; preds = %324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7477
  %330 = load i32, i32* %278, align 16
  %331 = load i32, i32* %281, align 4
  %332 = load i32, i32* %282, align 8
  %333 = load i32, i32* %283, align 4
  %334 = load i8, i8* %285, align 16
  br label %335, !dbg !7477

; <label>:335:                                    ; preds = %367, %329
  %336 = phi i64 [ 0, %329 ], [ %368, %367 ]
  %337 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 0, !dbg !7478
  %338 = load %struct.lwip_sock*, %struct.lwip_sock** %337, align 16, !dbg !7478, !tbaa !1614
  %339 = icmp eq %struct.lwip_sock* %338, %327, !dbg !7482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7483
  br i1 %339, label %340, label %367, !dbg !7483

; <label>:340:                                    ; preds = %335
  %341 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 1, !dbg !7484
  %342 = load i8, i8* %341, align 8, !dbg !7484, !tbaa !1629
  %343 = zext i8 %342 to i32, !dbg !7485
  %344 = icmp eq i32 %326, %343, !dbg !7486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7487
  br i1 %344, label %345, label %367, !dbg !7487

; <label>:345:                                    ; preds = %340
  %346 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 2, i32 0, i64 0, !dbg !7488
  %347 = load i32, i32* %346, align 4, !dbg !7488, !tbaa !1492
  %348 = icmp eq i32 %347, %330, !dbg !7488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7488
  br i1 %348, label %349, label %367, !dbg !7488

; <label>:349:                                    ; preds = %345
  %350 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 2, i32 0, i64 1, !dbg !7488
  %351 = load i32, i32* %350, align 4, !dbg !7488, !tbaa !1492
  %352 = icmp eq i32 %351, %331, !dbg !7488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7488
  br i1 %352, label %353, label %367, !dbg !7488

; <label>:353:                                    ; preds = %349
  %354 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 2, i32 0, i64 2, !dbg !7488
  %355 = load i32, i32* %354, align 4, !dbg !7488, !tbaa !1492
  %356 = icmp eq i32 %355, %332, !dbg !7488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7488
  br i1 %356, label %357, label %367, !dbg !7488

; <label>:357:                                    ; preds = %353
  %358 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 2, i32 0, i64 3, !dbg !7488
  %359 = load i32, i32* %358, align 4, !dbg !7488, !tbaa !1492
  %360 = icmp eq i32 %359, %333, !dbg !7488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7488
  br i1 %360, label %361, label %367, !dbg !7488

; <label>:361:                                    ; preds = %357
  %362 = getelementptr inbounds [64 x %struct.lwip_socket_multicast_mld6_pair], [64 x %struct.lwip_socket_multicast_mld6_pair]* @socket_ipv6_multicast_memberships, i64 0, i64 %336, i32 2, i32 1, !dbg !7488
  %363 = load i8, i8* %362, align 4, !dbg !7488, !tbaa !1623
  %364 = icmp eq i8 %363, %334, !dbg !7488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7489
  br i1 %364, label %365, label %367, !dbg !7489

; <label>:365:                                    ; preds = %361
  store %struct.lwip_sock* null, %struct.lwip_sock** %337, align 16, !dbg !7490, !tbaa !1614
  store i8 0, i8* %341, align 8, !dbg !7492, !tbaa !1629
  %366 = bitcast i32* %346 to <4 x i32>*, !dbg !7493
  store <4 x i32> zeroinitializer, <4 x i32>* %366, align 4, !dbg !7493, !tbaa !1492
  store i8 0, i8* %362, align 4, !dbg !7493, !tbaa !1623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7495
  br label %370, !dbg !7495

; <label>:367:                                    ; preds = %361, %357, %353, %349, %345, %340, %335
  %368 = add nuw nsw i64 %336, 1, !dbg !7496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7497
  %369 = icmp ult i64 %368, 64, !dbg !7498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7477
  br i1 %369, label %335, label %370, !dbg !7477, !llvm.loop !7499

; <label>:370:                                    ; preds = %367, %365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7502
  br label %371, !dbg !7502

; <label>:371:                                    ; preds = %370, %324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7502
  br label %372

; <label>:372:                                    ; preds = %371, %314
  %373 = phi i8 [ %323, %314 ], [ %325, %371 ], !dbg !7503
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %374 = icmp eq i8 %373, 0, !dbg !7504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7441
  br i1 %374, label %381, label %375, !dbg !7441

; <label>:375:                                    ; preds = %372, %313
  %376 = phi i32 [ 12, %313 ], [ 125, %372 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7085
  br label %381, !dbg !7506

; <label>:377:                                    ; preds = %272, %267
  %378 = phi i32 [ 22, %267 ], [ 109, %272 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7507
  br label %379, !dbg !7506

; <label>:379:                                    ; preds = %377, %264
  %380 = phi i32 [ 22, %264 ], [ %378, %377 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %265) #6, !dbg !7506
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %385

; <label>:381:                                    ; preds = %372, %375, %291
  %382 = phi i32 [ 125, %291 ], [ 0, %372 ], [ %376, %375 ], !dbg !7509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7085
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %265) #6, !dbg !7506
  br label %383

; <label>:383:                                    ; preds = %36, %245, %230, %123, %37, %381, %262, %260, %241, %239, %237, %210, %208, %184, %165, %145, %132, %122, %91, %89, %65, %63
  %384 = phi i32 [ %382, %381 ], [ 0, %260 ], [ 0, %262 ], [ 0, %241 ], [ 0, %237 ], [ 0, %239 ], [ 0, %208 ], [ 0, %210 ], [ 0, %184 ], [ 0, %165 ], [ 0, %145 ], [ 0, %132 ], [ 0, %122 ], [ 0, %89 ], [ 0, %91 ], [ 0, %63 ], [ 0, %65 ], [ 109, %37 ], [ 109, %123 ], [ 109, %230 ], [ 109, %245 ], [ 109, %36 ], !dbg !7067
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7511
  br label %385, !dbg !7511

; <label>:385:                                    ; preds = %35, %40, %48, %56, %68, %75, %81, %120, %124, %131, %137, %144, %150, %158, %164, %182, %188, %195, %201, %212, %219, %225, %226, %246, %253, %379, %383
  %386 = phi i32 [ %384, %383 ], [ 22, %253 ], [ 22, %219 ], [ 109, %225 ], [ 22, %195 ], [ 109, %201 ], [ 22, %158 ], [ 109, %164 ], [ 22, %144 ], [ 22, %131 ], [ 22, %75 ], [ 109, %81 ], [ 22, %56 ], [ 22, %226 ], [ 9, %35 ], [ %121, %120 ], [ %183, %182 ], [ %380, %379 ], [ 109, %40 ], [ 22, %48 ], [ 22, %68 ], [ 22, %124 ], [ 22, %137 ], [ 22, %150 ], [ 22, %188 ], [ 22, %212 ], [ 22, %246 ], !dbg !7512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7515
  call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !7516
  %387 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7518, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7521
  %388 = icmp ult i64 %387, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7522
  br i1 %388, label %394, label %389, !dbg !7522

; <label>:389:                                    ; preds = %385
  %390 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7523, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7526
  %391 = icmp ugt i64 %390, ptrtoint ([0 x i8]* @_end to i64), !dbg !7522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7527
  br i1 %391, label %394, label %392, !dbg !7527

; <label>:392:                                    ; preds = %389
  %393 = call i32* @__errno() #10, !dbg !7528
  store i32 %386, i32* %393, align 4, !dbg !7531, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7532
  br label %403, !dbg !7533

; <label>:394:                                    ; preds = %389, %385
  %395 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7534, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7538
  %396 = and i64 %395, -65536, !dbg !7540
  %397 = or i64 %396, 4097, !dbg !7540
  %398 = add nsw i64 %397, -1, !dbg !7540
  %399 = inttoptr i64 %398 to i32*, !dbg !7541
  %400 = load i32, i32* %399, align 4096, !dbg !7542, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7543
  %401 = sub nsw i32 0, %386, !dbg !7544
  %402 = sext i32 %401 to i64, !dbg !7544
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %402, i32 %400, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7544, !srcloc !7545
  br label %403

; <label>:403:                                    ; preds = %394, %392
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %404 = icmp ne i32 %386, 0, !dbg !7546
  %405 = sext i1 %404 to i32, !dbg !7546
  br label %406, !dbg !7547

; <label>:406:                                    ; preds = %5, %403, %26
  %407 = phi i32 [ -1, %26 ], [ %405, %403 ], [ -1, %5 ], !dbg !7548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7550
  ret i32 %407, !dbg !7550

; <label>:408:                                    ; preds = %307
  %409 = add nuw nsw i64 %303, 2, !dbg !7433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7434
  %410 = icmp ult i64 %409, 64, !dbg !7551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7426
  br i1 %410, label %302, label %312, !dbg !7426, !llvm.loop !7552
}

; Function Attrs: noredzone nounwind
define dso_local i32 @connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !7555 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !7588
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !7588
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !7589, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7590, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7593
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7594
  br i1 %7, label %30, label %8, !dbg !7594

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7595, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7598
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !7594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7599
  br i1 %10, label %30, label %11, !dbg !7599

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !7604
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !7606
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7607
  br i1 %13, label %26, label %14, !dbg !7607

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !7608
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !7608, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !7609
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !7609, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !7610
  %20 = load i32, i32* %19, align 4, !dbg !7610, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !7611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7612
  br i1 %21, label %22, label %26, !dbg !7612

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !7613
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !7613
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !7613, !tbaa !2581
  br label %26, !dbg !7614

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !7615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7617
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !7618, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7618
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !7618
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !7619
  br label %42, !dbg !7618

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7620, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7624
  %32 = and i64 %31, -65536, !dbg !7626
  %33 = or i64 %32, 4097, !dbg !7626
  %34 = add nsw i64 %33, -1, !dbg !7626
  %35 = inttoptr i64 %34 to i32*, !dbg !7627
  %36 = load i32, i32* %35, align 4096, !dbg !7628, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7629
  %37 = sext i32 %0 to i64, !dbg !7630
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !7630, !srcloc !7631
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !7632, !srcloc !7636
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !7619, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !7619
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !7619
  %46 = icmp slt i64 %45, 1, !dbg !7619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7619
  br i1 %46, label %47, label %70, !dbg !7619

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !7619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7637
  br i1 %48, label %49, label %70, !dbg !7637

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7638, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7641
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7642
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7642
  br i1 %51, label %60, label %52, !dbg !7642

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7643, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7646
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !7642
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7647
  br i1 %54, label %60, label %55, !dbg !7647

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !7648, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !7648
  %58 = sub nsw i32 0, %57, !dbg !7652
  %59 = call i32* @__errno() #10, !dbg !7653
  store i32 %58, i32* %59, align 4, !dbg !7654, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7655
  br label %93, !dbg !7648

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7656, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7660
  %62 = and i64 %61, -65536, !dbg !7662
  %63 = or i64 %62, 4097, !dbg !7662
  %64 = add nsw i64 %63, -1, !dbg !7662
  %65 = inttoptr i64 %64 to i32*, !dbg !7663
  %66 = load i32, i32* %65, align 4096, !dbg !7664, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7665
  %67 = load i64, i64* %43, align 8, !dbg !7666, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !7666
  %69 = ashr exact i64 %68, 32, !dbg !7666
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7666, !srcloc !7667
  br label %93

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !7668
  %72 = load i32, i32* %71, align 8, !dbg !7668, !tbaa !1421
  %73 = call i32 @lwip_connect(i32 %72, %struct.sockaddr* %1, i32 %2) #8, !dbg !7669
  %74 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7670, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7673
  %75 = icmp ult i64 %74, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7674
  br i1 %75, label %83, label %76, !dbg !7674

; <label>:76:                                     ; preds = %70
  %77 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7675, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7678
  %78 = icmp ugt i64 %77, ptrtoint ([0 x i8]* @_end to i64), !dbg !7674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7679
  br i1 %78, label %83, label %79, !dbg !7679

; <label>:79:                                     ; preds = %76
  %80 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !7680, !tbaa !1426
  %81 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %80, i64 0, i32 0, !dbg !7680
  %82 = load %struct.vfscore_file*, %struct.vfscore_file** %81, align 8, !dbg !7680, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %82) #10, !dbg !7680
  br label %93, !dbg !7680

; <label>:83:                                     ; preds = %76, %70
  %84 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7682, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7686
  %85 = and i64 %84, -65536, !dbg !7688
  %86 = or i64 %85, 4097, !dbg !7688
  %87 = add nsw i64 %86, -1, !dbg !7688
  %88 = inttoptr i64 %87 to i32*, !dbg !7689
  %89 = load i32, i32* %88, align 4096, !dbg !7690, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7691
  %90 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !7692
  %91 = load i64*, i64** %90, align 8, !dbg !7692, !tbaa !1426
  %92 = load i64, i64* %91, align 8, !dbg !7692, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %92, i32 %89, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !7692, !srcloc !7693
  br label %93

; <label>:93:                                     ; preds = %79, %83, %55, %60
  %94 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %73, %79 ], [ %73, %83 ], !dbg !7694
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !7695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7696
  ret i32 %94, !dbg !7696
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_connect(i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !7697 {
  %4 = alloca %struct.ip_addr, align 16
  %5 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !7750
  %6 = icmp eq %struct.lwip_sock* %5, null, !dbg !7752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7754
  br i1 %6, label %156, label %7, !dbg !7754

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 1, !dbg !7755
  %9 = load i8, i8* %8, align 1, !dbg !7755, !tbaa !3663
  %10 = icmp eq i8 %9, 0, !dbg !7755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %10, label %48, label %11, !dbg !7755

; <label>:11:                                     ; preds = %7
  %12 = icmp eq i8 %9, 2, !dbg !7755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %12, label %13, label %21, !dbg !7755

; <label>:13:                                     ; preds = %11
  %14 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %5, i64 0, i32 0, !dbg !7755
  %15 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !7755, !tbaa !1563
  %16 = getelementptr inbounds %struct.netconn, %struct.netconn* %15, i64 0, i32 0, !dbg !7755
  %17 = load i32, i32* %16, align 8, !dbg !7755, !tbaa !1570
  %18 = and i32 %17, 8, !dbg !7755
  %19 = icmp eq i32 %18, 0, !dbg !7755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %19, label %52, label %20, !dbg !7755

; <label>:20:                                     ; preds = %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br label %30, !dbg !7755

; <label>:21:                                     ; preds = %11
  %22 = icmp eq i8 %9, 10, !dbg !7755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %22, label %23, label %30, !dbg !7755

; <label>:23:                                     ; preds = %21
  %24 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %5, i64 0, i32 0, !dbg !7755
  %25 = load %struct.netconn*, %struct.netconn** %24, align 8, !dbg !7755, !tbaa !1563
  %26 = getelementptr inbounds %struct.netconn, %struct.netconn* %25, i64 0, i32 0, !dbg !7755
  %27 = load i32, i32* %26, align 8, !dbg !7755, !tbaa !1570
  %28 = and i32 %27, 8, !dbg !7755
  %29 = icmp eq i32 %28, 0, !dbg !7755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7756
  br i1 %29, label %30, label %52, !dbg !7756

; <label>:30:                                     ; preds = %20, %23, %21
  %31 = tail call i32 @err_to_errno(i8 signext -6) #10, !dbg !7757
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7758, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7761
  %33 = icmp ult i64 %32, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7762
  br i1 %33, label %39, label %34, !dbg !7762

; <label>:34:                                     ; preds = %30
  %35 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7763, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7766
  %36 = icmp ugt i64 %35, ptrtoint ([0 x i8]* @_end to i64), !dbg !7762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7767
  br i1 %36, label %39, label %37, !dbg !7767

; <label>:37:                                     ; preds = %34
  %38 = tail call i32* @__errno() #10, !dbg !7768
  store i32 %31, i32* %38, align 4, !dbg !7771, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7772
  br label %154, !dbg !7773

; <label>:39:                                     ; preds = %34, %30
  %40 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7774, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7778
  %41 = and i64 %40, -65536, !dbg !7780
  %42 = or i64 %41, 4097, !dbg !7780
  %43 = add nsw i64 %42, -1, !dbg !7780
  %44 = inttoptr i64 %43 to i32*, !dbg !7781
  %45 = load i32, i32* %44, align 4096, !dbg !7782, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7783
  %46 = sub nsw i32 0, %31, !dbg !7784
  %47 = sext i32 %46 to i64, !dbg !7784
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %47, i32 %45, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7784, !srcloc !7785
  br label %154

; <label>:48:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7786
  %49 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %5, i64 0, i32 0, !dbg !7787
  %50 = load %struct.netconn*, %struct.netconn** %49, align 8, !dbg !7787, !tbaa !1563
  %51 = tail call signext i8 @netconn_disconnect(%struct.netconn* %50) #10, !dbg !7789
  br label %118, !dbg !7791

; <label>:52:                                     ; preds = %13, %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7786
  %53 = bitcast %struct.ip_addr* %4 to i8*, !dbg !7792
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #6, !dbg !7792
  %54 = icmp eq i32 %2, 16, !dbg !7793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7793
  br i1 %54, label %57, label %55, !dbg !7793

; <label>:55:                                     ; preds = %52
  %56 = icmp eq i32 %2, 28, !dbg !7793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7793
  br i1 %56, label %57, label %64, !dbg !7793

; <label>:57:                                     ; preds = %52, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7793
  br i1 %12, label %60, label %58, !dbg !7793

; <label>:58:                                     ; preds = %57
  %59 = icmp eq i8 %9, 10, !dbg !7793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7793
  br i1 %59, label %60, label %64, !dbg !7793

; <label>:60:                                     ; preds = %58, %57
  %61 = ptrtoint %struct.sockaddr* %1 to i64, !dbg !7793
  %62 = and i64 %61, 3, !dbg !7793
  %63 = icmp eq i64 %62, 0, !dbg !7793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7794
  br i1 %63, label %65, label %64, !dbg !7794

; <label>:64:                                     ; preds = %55, %58, %60
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #8, !dbg !7795
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !7797
  tail call void @ukplat_terminate(i32 3) #9, !dbg !7797
  unreachable

; <label>:65:                                     ; preds = %60
  %66 = icmp eq i8 %9, 10, !dbg !7805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7806
  br i1 %66, label %67, label %87, !dbg !7806

; <label>:67:                                     ; preds = %65
  %68 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 6, !dbg !7807
  %69 = bitcast i8* %68 to <4 x i32>*, !dbg !7807
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !dbg !7807, !tbaa !1581
  %71 = bitcast %struct.ip_addr* %4 to <4 x i32>*, !dbg !7807
  store <4 x i32> %70, <4 x i32>* %71, align 16, !dbg !7807, !tbaa !1581
  %72 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 1, !dbg !7807
  store i8 0, i8* %72, align 16, !dbg !7807, !tbaa !1581
  %73 = extractelement <4 x i32> %70, i32 0, !dbg !7808
  %74 = zext i32 %73 to i64, !dbg !7808
  %75 = and i64 %74, 49407, !dbg !7808
  %76 = icmp eq i64 %75, 33022, !dbg !7808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7808
  br i1 %76, label %82, label %77, !dbg !7808

; <label>:77:                                     ; preds = %67
  %78 = and i64 %74, 36863, !dbg !7808
  %79 = icmp eq i64 %78, 511, !dbg !7808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7808
  br i1 %79, label %82, label %80, !dbg !7808

; <label>:80:                                     ; preds = %77
  %81 = icmp eq i64 %78, 767, !dbg !7808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7809
  br i1 %81, label %82, label %97, !dbg !7809

; <label>:82:                                     ; preds = %80, %77, %67
  %83 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 1, i32 2, i64 6, !dbg !7810
  %84 = bitcast i8* %83 to i32*, !dbg !7810
  %85 = load i32, i32* %84, align 4, !dbg !7810, !tbaa !3402
  %86 = trunc i32 %85 to i8, !dbg !7810
  store i8 %86, i8* %72, align 16, !dbg !7810, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7810
  br label %97, !dbg !7810

; <label>:87:                                     ; preds = %65
  %88 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, i64 2, !dbg !7811
  %89 = bitcast i8* %88 to i32*, !dbg !7811
  %90 = load i32, i32* %89, align 4, !dbg !7811, !tbaa !3412
  %91 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !7811
  store i32 %90, i32* %91, align 16, !dbg !7811, !tbaa !1581
  %92 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !7811
  %93 = bitcast [14 x i8]* %92 to i16*, !dbg !7811
  %94 = load i16, i16* %93, align 2, !dbg !7811, !tbaa !3411
  %95 = tail call zeroext i16 @lwip_htons(i16 zeroext %94) #10, !dbg !7811
  %96 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !7812
  store i8 0, i8* %96, align 4, !dbg !7813, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7814
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7815
  br label %113, !dbg !7815

; <label>:97:                                     ; preds = %80, %82
  %98 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 2, !dbg !7809
  %99 = bitcast [14 x i8]* %98 to i16*, !dbg !7809
  %100 = load i16, i16* %99, align 2, !dbg !7809, !tbaa !3398
  %101 = tail call zeroext i16 @lwip_htons(i16 zeroext %100) #10, !dbg !7809
  %102 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 1, !dbg !7817
  store i8 6, i8* %102, align 4, !dbg !7818, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7814
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7815
  %103 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %4, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !7820
  %104 = icmp eq i32 %73, 0, !dbg !7820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7820
  br i1 %104, label %105, label %113, !dbg !7820

; <label>:105:                                    ; preds = %97
  %106 = extractelement <4 x i32> %70, i32 1, !dbg !7820
  %107 = icmp eq i32 %106, 0, !dbg !7820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7820
  br i1 %107, label %108, label %113, !dbg !7820

; <label>:108:                                    ; preds = %105
  %109 = extractelement <4 x i32> %70, i32 2, !dbg !7820
  %110 = icmp eq i32 %109, -65536, !dbg !7820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7821
  br i1 %110, label %111, label %113, !dbg !7821

; <label>:111:                                    ; preds = %108
  %112 = extractelement <4 x i32> %70, i32 3, !dbg !7822
  store i32 %112, i32* %103, align 16, !dbg !7822, !tbaa !1581
  store i8 0, i8* %102, align 4, !dbg !7824, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7826
  br label %113, !dbg !7826

; <label>:113:                                    ; preds = %87, %111, %108, %105, %97
  %114 = phi i16 [ %101, %111 ], [ %101, %108 ], [ %101, %105 ], [ %101, %97 ], [ %95, %87 ]
  %115 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %5, i64 0, i32 0, !dbg !7827
  %116 = load %struct.netconn*, %struct.netconn** %115, align 8, !dbg !7827, !tbaa !1563
  %117 = call signext i8 @netconn_connect(%struct.netconn* %116, %struct.ip_addr* nonnull %4, i16 zeroext %114) #10, !dbg !7829
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #6, !dbg !7830
  br label %118

; <label>:118:                                    ; preds = %113, %48
  %119 = phi i8 [ %51, %48 ], [ %117, %113 ], !dbg !7831
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %120 = icmp eq i8 %119, 0, !dbg !7832
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7833
  br i1 %120, label %139, label %121, !dbg !7833

; <label>:121:                                    ; preds = %118
  %122 = call i32 @err_to_errno(i8 signext %119) #10, !dbg !7834
  %123 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7835, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7838
  %124 = icmp ult i64 %123, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7839
  br i1 %124, label %130, label %125, !dbg !7839

; <label>:125:                                    ; preds = %121
  %126 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7840, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7843
  %127 = icmp ugt i64 %126, ptrtoint ([0 x i8]* @_end to i64), !dbg !7839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7844
  br i1 %127, label %130, label %128, !dbg !7844

; <label>:128:                                    ; preds = %125
  %129 = call i32* @__errno() #10, !dbg !7845
  store i32 %122, i32* %129, align 4, !dbg !7848, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7849
  br label %154, !dbg !7850

; <label>:130:                                    ; preds = %125, %121
  %131 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7851, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7855
  %132 = and i64 %131, -65536, !dbg !7857
  %133 = or i64 %132, 4097, !dbg !7857
  %134 = add nsw i64 %133, -1, !dbg !7857
  %135 = inttoptr i64 %134 to i32*, !dbg !7858
  %136 = load i32, i32* %135, align 4096, !dbg !7859, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7860
  %137 = sub nsw i32 0, %122, !dbg !7861
  %138 = sext i32 %137 to i64, !dbg !7861
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %138, i32 %136, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7861, !srcloc !7862
  br label %154

; <label>:139:                                    ; preds = %118
  %140 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7864, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7867
  %141 = icmp ult i64 %140, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7868
  br i1 %141, label %147, label %142, !dbg !7868

; <label>:142:                                    ; preds = %139
  %143 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7869, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7872
  %144 = icmp ugt i64 %143, ptrtoint ([0 x i8]* @_end to i64), !dbg !7868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7873
  br i1 %144, label %147, label %145, !dbg !7873

; <label>:145:                                    ; preds = %142
  %146 = call i32* @__errno() #10, !dbg !7877
  store i32 0, i32* %146, align 4, !dbg !7878, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7879
  br label %154, !dbg !7880

; <label>:147:                                    ; preds = %142, %139
  %148 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7881, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7885
  %149 = and i64 %148, -65536, !dbg !7887
  %150 = or i64 %149, 4097, !dbg !7887
  %151 = add nsw i64 %150, -1, !dbg !7887
  %152 = inttoptr i64 %151 to i32*, !dbg !7888
  %153 = load i32, i32* %152, align 4096, !dbg !7889, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7890
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %153, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !7891, !srcloc !7892
  br label %154

; <label>:154:                                    ; preds = %145, %147, %128, %130, %37, %39
  %155 = phi i32 [ -1, %39 ], [ -1, %37 ], [ -1, %130 ], [ -1, %128 ], [ 0, %147 ], [ 0, %145 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %156, !dbg !7893

; <label>:156:                                    ; preds = %154, %3
  %157 = phi i32 [ -1, %3 ], [ %155, %154 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7893
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7895
  ret i32 %157, !dbg !7895
}

; Function Attrs: noredzone nounwind
define dso_local i32 @listen(i32, i32) local_unnamed_addr #0 !dbg !7896 {
  %3 = alloca %struct.sock_net_file*, align 8
  %4 = bitcast %struct.sock_net_file** %3 to i8*, !dbg !7927
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !7927
  store %struct.sock_net_file* null, %struct.sock_net_file** %3, align 8, !dbg !7928, !tbaa !1426
  %5 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7929, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7932
  %6 = icmp ult i64 %5, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7933
  br i1 %6, label %29, label %7, !dbg !7933

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7934, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7937
  %9 = icmp ugt i64 %8, ptrtoint ([0 x i8]* @_end to i64), !dbg !7933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7938
  br i1 %9, label %29, label %10, !dbg !7938

; <label>:10:                                     ; preds = %7
  %11 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !7943
  %12 = icmp eq %struct.vfscore_file* %11, null, !dbg !7945
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7946
  br i1 %12, label %25, label %13, !dbg !7946

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 6, !dbg !7947
  %15 = load %struct.dentry*, %struct.dentry** %14, align 8, !dbg !7947, !tbaa !2585
  %16 = getelementptr inbounds %struct.dentry, %struct.dentry* %15, i64 0, i32 3, !dbg !7948
  %17 = load %struct.vnode*, %struct.vnode** %16, align 8, !dbg !7948, !tbaa !2847
  %18 = getelementptr inbounds %struct.vnode, %struct.vnode* %17, i64 0, i32 5, !dbg !7949
  %19 = load i32, i32* %18, align 4, !dbg !7949, !tbaa !2595
  %20 = icmp eq i32 %19, 6, !dbg !7950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7951
  br i1 %20, label %21, label %25, !dbg !7951

; <label>:21:                                     ; preds = %13
  %22 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %11, i64 0, i32 4, !dbg !7952
  %23 = bitcast i8** %22 to %struct.sock_net_file**, !dbg !7952
  %24 = load %struct.sock_net_file*, %struct.sock_net_file** %23, align 8, !dbg !7952, !tbaa !2581
  br label %25, !dbg !7953

; <label>:25:                                     ; preds = %13, %10, %21
  %26 = phi %struct.sock_net_file* [ %24, %21 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %10 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %13 ], !dbg !7954
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7956
  store %struct.sock_net_file* %26, %struct.sock_net_file** %3, align 8, !dbg !7957, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7957
  %27 = ptrtoint %struct.sock_net_file* %26 to i64, !dbg !7957
  %28 = bitcast %struct.sock_net_file** %3 to i64*, !dbg !7958
  br label %41, !dbg !7957

; <label>:29:                                     ; preds = %7, %2
  %30 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7959, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7963
  %31 = and i64 %30, -65536, !dbg !7965
  %32 = or i64 %31, 4097, !dbg !7965
  %33 = add nsw i64 %32, -1, !dbg !7965
  %34 = inttoptr i64 %33 to i32*, !dbg !7966
  %35 = load i32, i32* %34, align 4096, !dbg !7967, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7968
  %36 = sext i32 %0 to i64, !dbg !7969
  %37 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %36, i32 %35, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !7969, !srcloc !7970
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %3, i64 %37) #6, !dbg !7971, !srcloc !7975
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %38 = bitcast %struct.sock_net_file** %3 to i64*
  %39 = load i64, i64* %38, align 8, !dbg !7958, !tbaa !1426
  %40 = inttoptr i64 %39 to %struct.sock_net_file*
  br label %41

; <label>:41:                                     ; preds = %29, %25
  %42 = phi i64* [ %38, %29 ], [ %28, %25 ], !dbg !7958
  %43 = phi %struct.sock_net_file* [ %40, %29 ], [ %26, %25 ]
  %44 = phi i64 [ %39, %29 ], [ %27, %25 ], !dbg !7958
  %45 = icmp slt i64 %44, 1, !dbg !7958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7958
  br i1 %45, label %46, label %69, !dbg !7958

; <label>:46:                                     ; preds = %41
  %47 = icmp sgt i64 %44, -513, !dbg !7958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7976
  br i1 %47, label %48, label %69, !dbg !7976

; <label>:48:                                     ; preds = %46
  %49 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7977, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7980
  %50 = icmp ult i64 %49, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !7981
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7981
  br i1 %50, label %59, label %51, !dbg !7981

; <label>:51:                                     ; preds = %48
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7982, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7985
  %53 = icmp ugt i64 %52, ptrtoint ([0 x i8]* @_end to i64), !dbg !7981
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7986
  br i1 %53, label %59, label %54, !dbg !7986

; <label>:54:                                     ; preds = %51
  %55 = load i64, i64* %42, align 8, !dbg !7987, !tbaa !1426
  %56 = trunc i64 %55 to i32, !dbg !7987
  %57 = sub nsw i32 0, %56, !dbg !7991
  %58 = call i32* @__errno() #10, !dbg !7992
  store i32 %57, i32* %58, align 4, !dbg !7993, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7994
  br label %92, !dbg !7987

; <label>:59:                                     ; preds = %51, %48
  %60 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7995, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7999
  %61 = and i64 %60, -65536, !dbg !8001
  %62 = or i64 %61, 4097, !dbg !8001
  %63 = add nsw i64 %62, -1, !dbg !8001
  %64 = inttoptr i64 %63 to i32*, !dbg !8002
  %65 = load i32, i32* %64, align 4096, !dbg !8003, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8004
  %66 = load i64, i64* %42, align 8, !dbg !8005, !tbaa !1426
  %67 = shl i64 %66, 32, !dbg !8005
  %68 = ashr exact i64 %67, 32, !dbg !8005
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %68, i32 %65, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8005, !srcloc !8006
  br label %92

; <label>:69:                                     ; preds = %46, %41
  %70 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %43, i64 0, i32 1, !dbg !8007
  %71 = load i32, i32* %70, align 8, !dbg !8007, !tbaa !1421
  %72 = call i32 @lwip_listen(i32 %71, i32 %1) #8, !dbg !8008
  %73 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8009, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8012
  %74 = icmp ult i64 %73, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8013
  br i1 %74, label %82, label %75, !dbg !8013

; <label>:75:                                     ; preds = %69
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8014, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8017
  %77 = icmp ugt i64 %76, ptrtoint ([0 x i8]* @_end to i64), !dbg !8013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8018
  br i1 %77, label %82, label %78, !dbg !8018

; <label>:78:                                     ; preds = %75
  %79 = load %struct.sock_net_file*, %struct.sock_net_file** %3, align 8, !dbg !8019, !tbaa !1426
  %80 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %79, i64 0, i32 0, !dbg !8019
  %81 = load %struct.vfscore_file*, %struct.vfscore_file** %80, align 8, !dbg !8019, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %81) #10, !dbg !8019
  br label %92, !dbg !8019

; <label>:82:                                     ; preds = %75, %69
  %83 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8021, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8025
  %84 = and i64 %83, -65536, !dbg !8027
  %85 = or i64 %84, 4097, !dbg !8027
  %86 = add nsw i64 %85, -1, !dbg !8027
  %87 = inttoptr i64 %86 to i32*, !dbg !8028
  %88 = load i32, i32* %87, align 4096, !dbg !8029, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8030
  %89 = bitcast %struct.sock_net_file** %3 to i64**, !dbg !8031
  %90 = load i64*, i64** %89, align 8, !dbg !8031, !tbaa !1426
  %91 = load i64, i64* %90, align 8, !dbg !8031, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %91, i32 %88, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8031, !srcloc !8032
  br label %92

; <label>:92:                                     ; preds = %78, %82, %54, %59
  %93 = phi i32 [ -1, %54 ], [ -1, %59 ], [ %72, %78 ], [ %72, %82 ], !dbg !8033
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !8034
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8035
  ret i32 %93, !dbg !8035
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_listen(i32, i32) local_unnamed_addr #0 !dbg !8036 {
  %3 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !8073
  %4 = icmp eq %struct.lwip_sock* %3, null, !dbg !8075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8077
  br i1 %4, label %74, label %5, !dbg !8077

; <label>:5:                                      ; preds = %2
  %6 = icmp sgt i32 %1, 0, !dbg !8078
  %7 = select i1 %6, i32 %1, i32 0, !dbg !8078
  %8 = icmp slt i32 %7, 255, !dbg !8078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8078
  br i1 %8, label %9, label %11, !dbg !8078

; <label>:9:                                      ; preds = %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8078
  %10 = trunc i32 %7 to i8, !dbg !8078
  br label %11, !dbg !8078

; <label>:11:                                     ; preds = %5, %9
  %12 = phi i8 [ %10, %9 ], [ -1, %5 ]
  %13 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %3, i64 0, i32 0, !dbg !8079
  %14 = load %struct.netconn*, %struct.netconn** %13, align 8, !dbg !8079, !tbaa !1563
  %15 = tail call signext i8 @netconn_listen_with_backlog(%struct.netconn* %14, i8 zeroext %12) #10, !dbg !8080
  %16 = icmp eq i8 %15, 0, !dbg !8082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8083
  br i1 %16, label %57, label %17, !dbg !8083

; <label>:17:                                     ; preds = %11
  %18 = load %struct.netconn*, %struct.netconn** %13, align 8, !dbg !8084, !tbaa !1563
  %19 = getelementptr inbounds %struct.netconn, %struct.netconn* %18, i64 0, i32 0, !dbg !8084
  %20 = load i32, i32* %19, align 8, !dbg !8084, !tbaa !1570
  %21 = and i32 %20, 240, !dbg !8084
  %22 = icmp eq i32 %21, 16, !dbg !8085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8086
  br i1 %22, label %38, label %23, !dbg !8086

; <label>:23:                                     ; preds = %17
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8088, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8091
  %25 = icmp ult i64 %24, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8092
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8092
  br i1 %25, label %31, label %26, !dbg !8092

; <label>:26:                                     ; preds = %23
  %27 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8093, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8096
  %28 = icmp ugt i64 %27, ptrtoint ([0 x i8]* @_end to i64), !dbg !8092
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8097
  br i1 %28, label %31, label %29, !dbg !8097

; <label>:29:                                     ; preds = %26
  %30 = tail call i32* @__errno() #10, !dbg !8101
  store i32 95, i32* %30, align 4, !dbg !8102, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8103
  br label %56, !dbg !8104

; <label>:31:                                     ; preds = %26, %23
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8105, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8109
  %33 = and i64 %32, -65536, !dbg !8111
  %34 = or i64 %33, 4097, !dbg !8111
  %35 = add nsw i64 %34, -1, !dbg !8111
  %36 = inttoptr i64 %35 to i32*, !dbg !8112
  %37 = load i32, i32* %36, align 4096, !dbg !8113, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8114
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -95, i32 %37, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8115, !srcloc !8116
  br label %56

; <label>:38:                                     ; preds = %17
  %39 = tail call i32 @err_to_errno(i8 signext %15) #10, !dbg !8117
  %40 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8118, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8121
  %41 = icmp ult i64 %40, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8122
  br i1 %41, label %47, label %42, !dbg !8122

; <label>:42:                                     ; preds = %38
  %43 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8123, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8126
  %44 = icmp ugt i64 %43, ptrtoint ([0 x i8]* @_end to i64), !dbg !8122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8127
  br i1 %44, label %47, label %45, !dbg !8127

; <label>:45:                                     ; preds = %42
  %46 = tail call i32* @__errno() #10, !dbg !8128
  store i32 %39, i32* %46, align 4, !dbg !8131, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8132
  br label %56, !dbg !8133

; <label>:47:                                     ; preds = %42, %38
  %48 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8134, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8138
  %49 = and i64 %48, -65536, !dbg !8140
  %50 = or i64 %49, 4097, !dbg !8140
  %51 = add nsw i64 %50, -1, !dbg !8140
  %52 = inttoptr i64 %51 to i32*, !dbg !8141
  %53 = load i32, i32* %52, align 4096, !dbg !8142, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8143
  %54 = sub nsw i32 0, %39, !dbg !8144
  %55 = sext i32 %54 to i64, !dbg !8144
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %55, i32 %53, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8144, !srcloc !8145
  br label %56

; <label>:56:                                     ; preds = %45, %47, %29, %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %72, !dbg !8146

; <label>:57:                                     ; preds = %11
  %58 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8148, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8151
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8152
  br i1 %59, label %65, label %60, !dbg !8152

; <label>:60:                                     ; preds = %57
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8153, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8156
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !8152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8157
  br i1 %62, label %65, label %63, !dbg !8157

; <label>:63:                                     ; preds = %60
  %64 = tail call i32* @__errno() #10, !dbg !8161
  store i32 0, i32* %64, align 4, !dbg !8162, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8163
  br label %72, !dbg !8164

; <label>:65:                                     ; preds = %60, %57
  %66 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8165, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8169
  %67 = and i64 %66, -65536, !dbg !8171
  %68 = or i64 %67, 4097, !dbg !8171
  %69 = add nsw i64 %68, -1, !dbg !8171
  %70 = inttoptr i64 %69 to i32*, !dbg !8172
  %71 = load i32, i32* %70, align 4096, !dbg !8173, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8174
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %71, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8175, !srcloc !8176
  br label %72

; <label>:72:                                     ; preds = %63, %65, %56
  %73 = phi i32 [ -1, %56 ], [ 0, %65 ], [ 0, %63 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %74, !dbg !8177

; <label>:74:                                     ; preds = %72, %2
  %75 = phi i32 [ -1, %2 ], [ %73, %72 ], !dbg !8177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8179
  ret i32 %75, !dbg !8179
}

; Function Attrs: noredzone nounwind
define dso_local i32 @recv(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !8180 {
  %5 = alloca %struct.sock_net_file*, align 8
  %6 = bitcast %struct.sock_net_file** %5 to i8*, !dbg !8217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8217
  store %struct.sock_net_file* null, %struct.sock_net_file** %5, align 8, !dbg !8218, !tbaa !1426
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8219, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8222
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8223
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8223
  br i1 %8, label %31, label %9, !dbg !8223

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8224, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8227
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !8223
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8228
  br i1 %11, label %31, label %12, !dbg !8228

; <label>:12:                                     ; preds = %9
  %13 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !8233
  %14 = icmp eq %struct.vfscore_file* %13, null, !dbg !8235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8236
  br i1 %14, label %27, label %15, !dbg !8236

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 6, !dbg !8237
  %17 = load %struct.dentry*, %struct.dentry** %16, align 8, !dbg !8237, !tbaa !2585
  %18 = getelementptr inbounds %struct.dentry, %struct.dentry* %17, i64 0, i32 3, !dbg !8238
  %19 = load %struct.vnode*, %struct.vnode** %18, align 8, !dbg !8238, !tbaa !2847
  %20 = getelementptr inbounds %struct.vnode, %struct.vnode* %19, i64 0, i32 5, !dbg !8239
  %21 = load i32, i32* %20, align 4, !dbg !8239, !tbaa !2595
  %22 = icmp eq i32 %21, 6, !dbg !8240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8241
  br i1 %22, label %23, label %27, !dbg !8241

; <label>:23:                                     ; preds = %15
  %24 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 4, !dbg !8242
  %25 = bitcast i8** %24 to %struct.sock_net_file**, !dbg !8242
  %26 = load %struct.sock_net_file*, %struct.sock_net_file** %25, align 8, !dbg !8242, !tbaa !2581
  br label %27, !dbg !8243

; <label>:27:                                     ; preds = %15, %12, %23
  %28 = phi %struct.sock_net_file* [ %26, %23 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %12 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %15 ], !dbg !8244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8246
  store %struct.sock_net_file* %28, %struct.sock_net_file** %5, align 8, !dbg !8247, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8247
  %29 = ptrtoint %struct.sock_net_file* %28 to i64, !dbg !8247
  %30 = bitcast %struct.sock_net_file** %5 to i64*, !dbg !8248
  br label %43, !dbg !8247

; <label>:31:                                     ; preds = %9, %4
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8249, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8253
  %33 = and i64 %32, -65536, !dbg !8255
  %34 = or i64 %33, 4097, !dbg !8255
  %35 = add nsw i64 %34, -1, !dbg !8255
  %36 = inttoptr i64 %35 to i32*, !dbg !8256
  %37 = load i32, i32* %36, align 4096, !dbg !8257, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8258
  %38 = sext i32 %0 to i64, !dbg !8259
  %39 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %38, i32 %37, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !8259, !srcloc !8260
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %5, i64 %39) #6, !dbg !8261, !srcloc !8265
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %40 = bitcast %struct.sock_net_file** %5 to i64*
  %41 = load i64, i64* %40, align 8, !dbg !8248, !tbaa !1426
  %42 = inttoptr i64 %41 to %struct.sock_net_file*
  br label %43

; <label>:43:                                     ; preds = %31, %27
  %44 = phi i64* [ %40, %31 ], [ %30, %27 ], !dbg !8248
  %45 = phi %struct.sock_net_file* [ %42, %31 ], [ %28, %27 ]
  %46 = phi i64 [ %41, %31 ], [ %29, %27 ], !dbg !8248
  %47 = icmp slt i64 %46, 1, !dbg !8248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8248
  br i1 %47, label %48, label %71, !dbg !8248

; <label>:48:                                     ; preds = %43
  %49 = icmp sgt i64 %46, -513, !dbg !8248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8266
  br i1 %49, label %50, label %71, !dbg !8266

; <label>:50:                                     ; preds = %48
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8267, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8270
  %52 = icmp ult i64 %51, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8271
  br i1 %52, label %61, label %53, !dbg !8271

; <label>:53:                                     ; preds = %50
  %54 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8272, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8275
  %55 = icmp ugt i64 %54, ptrtoint ([0 x i8]* @_end to i64), !dbg !8271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8276
  br i1 %55, label %61, label %56, !dbg !8276

; <label>:56:                                     ; preds = %53
  %57 = load i64, i64* %44, align 8, !dbg !8277, !tbaa !1426
  %58 = trunc i64 %57 to i32, !dbg !8277
  %59 = sub nsw i32 0, %58, !dbg !8281
  %60 = call i32* @__errno() #10, !dbg !8282
  store i32 %59, i32* %60, align 4, !dbg !8283, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8284
  br label %95, !dbg !8277

; <label>:61:                                     ; preds = %53, %50
  %62 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8285, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8289
  %63 = and i64 %62, -65536, !dbg !8291
  %64 = or i64 %63, 4097, !dbg !8291
  %65 = add nsw i64 %64, -1, !dbg !8291
  %66 = inttoptr i64 %65 to i32*, !dbg !8292
  %67 = load i32, i32* %66, align 4096, !dbg !8293, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8294
  %68 = load i64, i64* %44, align 8, !dbg !8295, !tbaa !1426
  %69 = shl i64 %68, 32, !dbg !8295
  %70 = ashr exact i64 %69, 32, !dbg !8295
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %70, i32 %67, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8295, !srcloc !8296
  br label %95

; <label>:71:                                     ; preds = %48, %43
  %72 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %45, i64 0, i32 1, !dbg !8297
  %73 = load i32, i32* %72, align 8, !dbg !8297, !tbaa !1421
  %74 = call i64 @lwip_recvfrom(i32 %73, i8* %1, i64 %2, i32 %3, %struct.sockaddr* null, i32* null) #10, !dbg !8311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8312
  %75 = trunc i64 %74 to i32, !dbg !8313
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8314, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8317
  %77 = icmp ult i64 %76, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8318
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8318
  br i1 %77, label %85, label %78, !dbg !8318

; <label>:78:                                     ; preds = %71
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8319, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8322
  %80 = icmp ugt i64 %79, ptrtoint ([0 x i8]* @_end to i64), !dbg !8318
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8323
  br i1 %80, label %85, label %81, !dbg !8323

; <label>:81:                                     ; preds = %78
  %82 = load %struct.sock_net_file*, %struct.sock_net_file** %5, align 8, !dbg !8324, !tbaa !1426
  %83 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %82, i64 0, i32 0, !dbg !8324
  %84 = load %struct.vfscore_file*, %struct.vfscore_file** %83, align 8, !dbg !8324, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %84) #10, !dbg !8324
  br label %95, !dbg !8324

; <label>:85:                                     ; preds = %78, %71
  %86 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8326, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8330
  %87 = and i64 %86, -65536, !dbg !8332
  %88 = or i64 %87, 4097, !dbg !8332
  %89 = add nsw i64 %88, -1, !dbg !8332
  %90 = inttoptr i64 %89 to i32*, !dbg !8333
  %91 = load i32, i32* %90, align 4096, !dbg !8334, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8335
  %92 = bitcast %struct.sock_net_file** %5 to i64**, !dbg !8336
  %93 = load i64*, i64** %92, align 8, !dbg !8336, !tbaa !1426
  %94 = load i64, i64* %93, align 8, !dbg !8336, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %94, i32 %91, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8336, !srcloc !8337
  br label %95

; <label>:95:                                     ; preds = %81, %85, %56, %61
  %96 = phi i32 [ -1, %56 ], [ -1, %61 ], [ %75, %81 ], [ %75, %85 ], !dbg !8338
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !8339
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8340
  ret i32 %96, !dbg !8340
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_recv(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !8299 {
  %5 = tail call i64 @lwip_recvfrom(i32 %0, i8* %1, i64 %2, i32 %3, %struct.sockaddr* null, i32* null) #8, !dbg !8345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8346
  ret i64 %5, !dbg !8346
}

; Function Attrs: noredzone nounwind
define dso_local i32 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !8347 {
  %7 = alloca %struct.sock_net_file*, align 8
  %8 = bitcast %struct.sock_net_file** %7 to i8*, !dbg !8388
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8388
  store %struct.sock_net_file* null, %struct.sock_net_file** %7, align 8, !dbg !8389, !tbaa !1426
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8390, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8393
  %10 = icmp ult i64 %9, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8394
  br i1 %10, label %33, label %11, !dbg !8394

; <label>:11:                                     ; preds = %6
  %12 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8395, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8398
  %13 = icmp ugt i64 %12, ptrtoint ([0 x i8]* @_end to i64), !dbg !8394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8399
  br i1 %13, label %33, label %14, !dbg !8399

; <label>:14:                                     ; preds = %11
  %15 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !8404
  %16 = icmp eq %struct.vfscore_file* %15, null, !dbg !8406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8407
  br i1 %16, label %29, label %17, !dbg !8407

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 6, !dbg !8408
  %19 = load %struct.dentry*, %struct.dentry** %18, align 8, !dbg !8408, !tbaa !2585
  %20 = getelementptr inbounds %struct.dentry, %struct.dentry* %19, i64 0, i32 3, !dbg !8409
  %21 = load %struct.vnode*, %struct.vnode** %20, align 8, !dbg !8409, !tbaa !2847
  %22 = getelementptr inbounds %struct.vnode, %struct.vnode* %21, i64 0, i32 5, !dbg !8410
  %23 = load i32, i32* %22, align 4, !dbg !8410, !tbaa !2595
  %24 = icmp eq i32 %23, 6, !dbg !8411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8412
  br i1 %24, label %25, label %29, !dbg !8412

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 4, !dbg !8413
  %27 = bitcast i8** %26 to %struct.sock_net_file**, !dbg !8413
  %28 = load %struct.sock_net_file*, %struct.sock_net_file** %27, align 8, !dbg !8413, !tbaa !2581
  br label %29, !dbg !8414

; <label>:29:                                     ; preds = %17, %14, %25
  %30 = phi %struct.sock_net_file* [ %28, %25 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %14 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %17 ], !dbg !8415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8417
  store %struct.sock_net_file* %30, %struct.sock_net_file** %7, align 8, !dbg !8418, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8418
  %31 = ptrtoint %struct.sock_net_file* %30 to i64, !dbg !8418
  %32 = bitcast %struct.sock_net_file** %7 to i64*, !dbg !8419
  br label %45, !dbg !8418

; <label>:33:                                     ; preds = %11, %6
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8420, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8424
  %35 = and i64 %34, -65536, !dbg !8426
  %36 = or i64 %35, 4097, !dbg !8426
  %37 = add nsw i64 %36, -1, !dbg !8426
  %38 = inttoptr i64 %37 to i32*, !dbg !8427
  %39 = load i32, i32* %38, align 4096, !dbg !8428, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8429
  %40 = sext i32 %0 to i64, !dbg !8430
  %41 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %40, i32 %39, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !8430, !srcloc !8431
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %7, i64 %41) #6, !dbg !8432, !srcloc !8436
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %42 = bitcast %struct.sock_net_file** %7 to i64*
  %43 = load i64, i64* %42, align 8, !dbg !8419, !tbaa !1426
  %44 = inttoptr i64 %43 to %struct.sock_net_file*
  br label %45

; <label>:45:                                     ; preds = %33, %29
  %46 = phi i64* [ %42, %33 ], [ %32, %29 ], !dbg !8419
  %47 = phi %struct.sock_net_file* [ %44, %33 ], [ %30, %29 ]
  %48 = phi i64 [ %43, %33 ], [ %31, %29 ], !dbg !8419
  %49 = icmp slt i64 %48, 1, !dbg !8419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8419
  br i1 %49, label %50, label %73, !dbg !8419

; <label>:50:                                     ; preds = %45
  %51 = icmp sgt i64 %48, -513, !dbg !8419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8437
  br i1 %51, label %52, label %73, !dbg !8437

; <label>:52:                                     ; preds = %50
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8438, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8441
  %54 = icmp ult i64 %53, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8442
  br i1 %54, label %63, label %55, !dbg !8442

; <label>:55:                                     ; preds = %52
  %56 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8443, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8446
  %57 = icmp ugt i64 %56, ptrtoint ([0 x i8]* @_end to i64), !dbg !8442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8447
  br i1 %57, label %63, label %58, !dbg !8447

; <label>:58:                                     ; preds = %55
  %59 = load i64, i64* %46, align 8, !dbg !8448, !tbaa !1426
  %60 = trunc i64 %59 to i32, !dbg !8448
  %61 = sub nsw i32 0, %60, !dbg !8452
  %62 = call i32* @__errno() #10, !dbg !8453
  store i32 %61, i32* %62, align 4, !dbg !8454, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8455
  br label %97, !dbg !8448

; <label>:63:                                     ; preds = %55, %52
  %64 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8456, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8460
  %65 = and i64 %64, -65536, !dbg !8462
  %66 = or i64 %65, 4097, !dbg !8462
  %67 = add nsw i64 %66, -1, !dbg !8462
  %68 = inttoptr i64 %67 to i32*, !dbg !8463
  %69 = load i32, i32* %68, align 4096, !dbg !8464, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8465
  %70 = load i64, i64* %46, align 8, !dbg !8466, !tbaa !1426
  %71 = shl i64 %70, 32, !dbg !8466
  %72 = ashr exact i64 %71, 32, !dbg !8466
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %72, i32 %69, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8466, !srcloc !8467
  br label %97

; <label>:73:                                     ; preds = %50, %45
  %74 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %47, i64 0, i32 1, !dbg !8468
  %75 = load i32, i32* %74, align 8, !dbg !8468, !tbaa !1421
  %76 = call i64 @lwip_recvfrom(i32 %75, i8* %1, i64 %2, i32 %3, %struct.sockaddr* %4, i32* %5) #8, !dbg !8469
  %77 = trunc i64 %76 to i32, !dbg !8469
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8470, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8473
  %79 = icmp ult i64 %78, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8474
  br i1 %79, label %87, label %80, !dbg !8474

; <label>:80:                                     ; preds = %73
  %81 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8475, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8478
  %82 = icmp ugt i64 %81, ptrtoint ([0 x i8]* @_end to i64), !dbg !8474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8479
  br i1 %82, label %87, label %83, !dbg !8479

; <label>:83:                                     ; preds = %80
  %84 = load %struct.sock_net_file*, %struct.sock_net_file** %7, align 8, !dbg !8480, !tbaa !1426
  %85 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %84, i64 0, i32 0, !dbg !8480
  %86 = load %struct.vfscore_file*, %struct.vfscore_file** %85, align 8, !dbg !8480, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %86) #10, !dbg !8480
  br label %97, !dbg !8480

; <label>:87:                                     ; preds = %80, %73
  %88 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8482, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8486
  %89 = and i64 %88, -65536, !dbg !8488
  %90 = or i64 %89, 4097, !dbg !8488
  %91 = add nsw i64 %90, -1, !dbg !8488
  %92 = inttoptr i64 %91 to i32*, !dbg !8489
  %93 = load i32, i32* %92, align 4096, !dbg !8490, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8491
  %94 = bitcast %struct.sock_net_file** %7 to i64**, !dbg !8492
  %95 = load i64*, i64** %94, align 8, !dbg !8492, !tbaa !1426
  %96 = load i64, i64* %95, align 8, !dbg !8492, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %96, i32 %93, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8492, !srcloc !8493
  br label %97

; <label>:97:                                     ; preds = %83, %87, %58, %63
  %98 = phi i32 [ -1, %58 ], [ -1, %63 ], [ %77, %83 ], [ %77, %87 ], !dbg !8494
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8495
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8496
  ret i32 %98, !dbg !8496
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) local_unnamed_addr #0 !dbg !8497 {
  %7 = alloca i16, align 2
  %8 = alloca %struct.ip_addr, align 4
  %9 = alloca i16, align 2
  %10 = alloca %struct.iovec, align 8
  %11 = alloca %struct.msghdr, align 8
  %12 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !8539
  %13 = icmp eq %struct.lwip_sock* %12, null, !dbg !8541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8543
  br i1 %13, label %108, label %14, !dbg !8543

; <label>:14:                                     ; preds = %6
  %15 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %12, i64 0, i32 0, !dbg !8544
  %16 = load %struct.netconn*, %struct.netconn** %15, align 8, !dbg !8544, !tbaa !1563
  %17 = getelementptr inbounds %struct.netconn, %struct.netconn* %16, i64 0, i32 0, !dbg !8544
  %18 = load i32, i32* %17, align 8, !dbg !8544, !tbaa !1570
  %19 = and i32 %18, 240, !dbg !8544
  %20 = icmp eq i32 %19, 16, !dbg !8545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8546
  br i1 %20, label %21, label %35, !dbg !8546

; <label>:21:                                     ; preds = %14
  %22 = tail call fastcc i64 @lwip_recv_tcp(%struct.lwip_sock* nonnull %12, i8* %1, i64 %2, i32 %3) #8, !dbg !8547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8571
  %23 = icmp ne %struct.sockaddr* %4, null, !dbg !8572
  %24 = icmp ne i32* %5, null, !dbg !8573
  %25 = and i1 %23, %24, !dbg !8574
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8574
  br i1 %25, label %26, label %34, !dbg !8574

; <label>:26:                                     ; preds = %21
  %27 = bitcast i16* %7 to i8*, !dbg !8575
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %27) #6, !dbg !8575
  %28 = bitcast %struct.ip_addr* %8 to i8*, !dbg !8576
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6, !dbg !8576
  %29 = load %struct.netconn*, %struct.netconn** %15, align 8, !dbg !8577, !tbaa !1563
  %30 = call signext i8 @netconn_getaddr(%struct.netconn* %29, %struct.ip_addr* nonnull %8, i16* nonnull %7, i8 zeroext 0) #10, !dbg !8580
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8581
  %31 = load %struct.netconn*, %struct.netconn** %15, align 8, !dbg !8583, !tbaa !1563
  %32 = load i16, i16* %7, align 2, !dbg !8585, !tbaa !3084
  %33 = call fastcc i32 @lwip_sock_make_addr(%struct.netconn* %31, %struct.ip_addr* nonnull %8, i16 zeroext %32, %struct.sockaddr* nonnull %4, i32* nonnull %5) #10, !dbg !8586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8587
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6, !dbg !8588
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %27) #6, !dbg !8588
  br label %34

; <label>:34:                                     ; preds = %21, %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %106, !dbg !8589

; <label>:35:                                     ; preds = %14
  %36 = bitcast i16* %9 to i8*, !dbg !8590
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %36) #6, !dbg !8590
  store i16 0, i16* %9, align 2, !dbg !8591, !tbaa !3084
  %37 = bitcast %struct.iovec* %10 to i8*, !dbg !8592
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #6, !dbg !8592
  %38 = bitcast %struct.msghdr* %11 to i8*, !dbg !8593
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #6, !dbg !8593
  %39 = getelementptr inbounds %struct.iovec, %struct.iovec* %10, i64 0, i32 0, !dbg !8594
  store i8* %1, i8** %39, align 8, !dbg !8595, !tbaa !8596
  %40 = getelementptr inbounds %struct.iovec, %struct.iovec* %10, i64 0, i32 1, !dbg !8598
  store i64 %2, i64* %40, align 8, !dbg !8599, !tbaa !8600
  %41 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 4, !dbg !8601
  store i8* null, i8** %41, align 8, !dbg !8602, !tbaa !1776
  %42 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 5, !dbg !8603
  store i32 0, i32* %42, align 8, !dbg !8604, !tbaa !1779
  %43 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 6, !dbg !8605
  store i32 0, i32* %43, align 4, !dbg !8606, !tbaa !1782
  %44 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 2, !dbg !8607
  store %struct.iovec* %10, %struct.iovec** %44, align 8, !dbg !8608, !tbaa !1770
  %45 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 3, !dbg !8609
  store i32 1, i32* %45, align 8, !dbg !8610, !tbaa !1773
  %46 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 0, !dbg !8611
  %47 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 0, !dbg !8612
  store i8* %46, i8** %47, align 8, !dbg !8613, !tbaa !1763
  %48 = icmp ne i32* %5, null, !dbg !8614
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8614
  br i1 %48, label %49, label %51, !dbg !8614

; <label>:49:                                     ; preds = %35
  %50 = load i32, i32* %5, align 4, !dbg !8615, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8614
  br label %51, !dbg !8614

; <label>:51:                                     ; preds = %35, %49
  %52 = phi i32 [ %50, %49 ], [ 0, %35 ], !dbg !8614
  %53 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %11, i64 0, i32 1, !dbg !8616
  store i32 %52, i32* %53, align 8, !dbg !8617, !tbaa !1767
  %54 = call fastcc signext i8 @lwip_recvfrom_udp_raw(%struct.lwip_sock* nonnull %12, i32 %3, %struct.msghdr* nonnull %11, i16* nonnull %9) #8, !dbg !8619
  %55 = icmp eq i8 %54, 0, !dbg !8621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8622
  br i1 %55, label %74, label %56, !dbg !8622

; <label>:56:                                     ; preds = %51
  %57 = call i32 @err_to_errno(i8 signext %54) #10, !dbg !8623
  %58 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8624, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8627
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8628
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8628
  br i1 %59, label %65, label %60, !dbg !8628

; <label>:60:                                     ; preds = %56
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8629, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8632
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !8628
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8633
  br i1 %62, label %65, label %63, !dbg !8633

; <label>:63:                                     ; preds = %60
  %64 = call i32* @__errno() #10, !dbg !8634
  store i32 %57, i32* %64, align 4, !dbg !8637, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8638
  br label %85, !dbg !8639

; <label>:65:                                     ; preds = %60, %56
  %66 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8640, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8644
  %67 = and i64 %66, -65536, !dbg !8646
  %68 = or i64 %67, 4097, !dbg !8646
  %69 = add nsw i64 %68, -1, !dbg !8646
  %70 = inttoptr i64 %69 to i32*, !dbg !8647
  %71 = load i32, i32* %70, align 4096, !dbg !8648, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8649
  %72 = sub nsw i32 0, %57, !dbg !8650
  %73 = sext i32 %72 to i64, !dbg !8650
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %73, i32 %71, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8650, !srcloc !8651
  br label %85

; <label>:74:                                     ; preds = %51
  %75 = load i16, i16* %9, align 2, !dbg !8652, !tbaa !3084
  %76 = zext i16 %75 to i64, !dbg !8652
  %77 = icmp ugt i64 %76, %2, !dbg !8652
  %78 = select i1 %77, i64 %2, i64 %76, !dbg !8652
  %79 = icmp ult i64 %78, 9223372036854775807, !dbg !8652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8652
  br i1 %79, label %80, label %81, !dbg !8652

; <label>:80:                                     ; preds = %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8652
  br label %81, !dbg !8652

; <label>:81:                                     ; preds = %74, %80
  %82 = phi i64 [ %78, %80 ], [ 9223372036854775807, %74 ], !dbg !8652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8653
  br i1 %48, label %83, label %88, !dbg !8653

; <label>:83:                                     ; preds = %81
  %84 = load i32, i32* %53, align 8, !dbg !8654, !tbaa !1767
  store i32 %84, i32* %5, align 4, !dbg !8657, !tbaa !1492
  br label %85, !dbg !8658

; <label>:85:                                     ; preds = %63, %65, %83
  %86 = phi i1 [ true, %83 ], [ false, %65 ], [ false, %63 ]
  %87 = phi i64 [ %82, %83 ], [ undef, %65 ], [ undef, %63 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %88, !dbg !8659

; <label>:88:                                     ; preds = %85, %81
  %89 = phi i1 [ true, %81 ], [ %86, %85 ]
  %90 = phi i64 [ %82, %81 ], [ %87, %85 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8659
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #6, !dbg !8660
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #6, !dbg !8660
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %36) #6, !dbg !8660
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %89, label %91, label %110

; <label>:91:                                     ; preds = %88
  %92 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8662, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8665
  %93 = icmp ult i64 %92, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8666
  br i1 %93, label %99, label %94, !dbg !8666

; <label>:94:                                     ; preds = %91
  %95 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8667, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8670
  %96 = icmp ugt i64 %95, ptrtoint ([0 x i8]* @_end to i64), !dbg !8666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8671
  br i1 %96, label %99, label %97, !dbg !8671

; <label>:97:                                     ; preds = %94
  %98 = call i32* @__errno() #10, !dbg !8675
  store i32 0, i32* %98, align 4, !dbg !8676, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8677
  br label %106, !dbg !8678

; <label>:99:                                     ; preds = %94, %91
  %100 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8679, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8683
  %101 = and i64 %100, -65536, !dbg !8685
  %102 = or i64 %101, 4097, !dbg !8685
  %103 = add nsw i64 %102, -1, !dbg !8685
  %104 = inttoptr i64 %103 to i32*, !dbg !8686
  %105 = load i32, i32* %104, align 4096, !dbg !8687, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8688
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %105, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8689, !srcloc !8690
  br label %106

; <label>:106:                                    ; preds = %97, %99, %34
  %107 = phi i64 [ %22, %34 ], [ %90, %99 ], [ %90, %97 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %108, !dbg !8691

; <label>:108:                                    ; preds = %106, %6
  %109 = phi i64 [ -1, %6 ], [ %107, %106 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8691
  br label %110, !dbg !8693

; <label>:110:                                    ; preds = %108, %88
  %111 = phi i64 [ -1, %88 ], [ %109, %108 ], !dbg !8691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8693
  ret i64 %111, !dbg !8693
}

; Function Attrs: noredzone nounwind
define dso_local i32 @recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #0 !dbg !8694 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !8730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !8730
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !8731, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8732, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8735
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8736
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8736
  br i1 %7, label %30, label %8, !dbg !8736

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8737, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8740
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !8736
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8741
  br i1 %10, label %30, label %11, !dbg !8741

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !8746
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !8748
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8749
  br i1 %13, label %26, label %14, !dbg !8749

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !8750
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !8750, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !8751
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !8751, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !8752
  %20 = load i32, i32* %19, align 4, !dbg !8752, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !8753
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8754
  br i1 %21, label %22, label %26, !dbg !8754

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !8755
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !8755
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !8755, !tbaa !2581
  br label %26, !dbg !8756

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !8757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8759
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !8760, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8760
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !8760
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !8761
  br label %42, !dbg !8760

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8762, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8766
  %32 = and i64 %31, -65536, !dbg !8768
  %33 = or i64 %32, 4097, !dbg !8768
  %34 = add nsw i64 %33, -1, !dbg !8768
  %35 = inttoptr i64 %34 to i32*, !dbg !8769
  %36 = load i32, i32* %35, align 4096, !dbg !8770, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8771
  %37 = sext i32 %0 to i64, !dbg !8772
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !8772, !srcloc !8773
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !8774, !srcloc !8778
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !8761, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !8761
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !8761
  %46 = icmp slt i64 %45, 1, !dbg !8761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8761
  br i1 %46, label %47, label %70, !dbg !8761

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !8761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8779
  br i1 %48, label %49, label %70, !dbg !8779

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8780, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8783
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8784
  br i1 %51, label %60, label %52, !dbg !8784

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8785, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8788
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !8784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8789
  br i1 %54, label %60, label %55, !dbg !8789

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !8790, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !8790
  %58 = sub nsw i32 0, %57, !dbg !8794
  %59 = call i32* @__errno() #10, !dbg !8795
  store i32 %58, i32* %59, align 4, !dbg !8796, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8797
  br label %94, !dbg !8790

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8798, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8802
  %62 = and i64 %61, -65536, !dbg !8804
  %63 = or i64 %62, 4097, !dbg !8804
  %64 = add nsw i64 %63, -1, !dbg !8804
  %65 = inttoptr i64 %64 to i32*, !dbg !8805
  %66 = load i32, i32* %65, align 4096, !dbg !8806, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8807
  %67 = load i64, i64* %43, align 8, !dbg !8808, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !8808
  %69 = ashr exact i64 %68, 32, !dbg !8808
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8808, !srcloc !8809
  br label %94

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !8810
  %72 = load i32, i32* %71, align 8, !dbg !8810, !tbaa !1421
  %73 = call i64 @lwip_recvmsg(i32 %72, %struct.msghdr* %1, i32 %2) #8, !dbg !8811
  %74 = trunc i64 %73 to i32, !dbg !8811
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8812, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8815
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8816
  br i1 %76, label %84, label %77, !dbg !8816

; <label>:77:                                     ; preds = %70
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8817, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8820
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !8816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8821
  br i1 %79, label %84, label %80, !dbg !8821

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !8822, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !8822
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !8822, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !8822
  br label %94, !dbg !8822

; <label>:84:                                     ; preds = %77, %70
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8824, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8828
  %86 = and i64 %85, -65536, !dbg !8830
  %87 = or i64 %86, 4097, !dbg !8830
  %88 = add nsw i64 %87, -1, !dbg !8830
  %89 = inttoptr i64 %88 to i32*, !dbg !8831
  %90 = load i32, i32* %89, align 4096, !dbg !8832, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8833
  %91 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !8834
  %92 = load i64*, i64** %91, align 8, !dbg !8834, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !8834, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !8834, !srcloc !8835
  br label %94

; <label>:94:                                     ; preds = %80, %84, %55, %60
  %95 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %74, %80 ], [ %74, %84 ], !dbg !8836
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !8837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8838
  ret i32 %95, !dbg !8838
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #0 !dbg !8839 {
  %4 = alloca i16, align 2
  %5 = icmp eq %struct.msghdr* %1, null, !dbg !8922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8925
  br i1 %5, label %6, label %7, !dbg !8925

; <label>:6:                                      ; preds = %3
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #8, !dbg !8926
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !8929
  tail call void @ukplat_terminate(i32 3) #9, !dbg !8929
  unreachable

; <label>:7:                                      ; preds = %3
  %8 = and i32 %2, -10, !dbg !8933
  %9 = icmp eq i32 %8, 0, !dbg !8933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8934
  br i1 %9, label %11, label %10, !dbg !8934

; <label>:10:                                     ; preds = %7
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0)) #8, !dbg !8935
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !8937
  tail call void @ukplat_terminate(i32 3) #9, !dbg !8937
  unreachable

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 3, !dbg !8941
  %13 = load i32, i32* %12, align 8, !dbg !8941, !tbaa !1773
  %14 = icmp slt i32 %13, 1, !dbg !8942
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8943
  br i1 %14, label %17, label %15, !dbg !8943

; <label>:15:                                     ; preds = %11
  %16 = icmp sgt i32 %13, 1024, !dbg !8944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8945
  br i1 %16, label %17, label %33, !dbg !8945

; <label>:17:                                     ; preds = %11, %15
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8946, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8949
  %19 = icmp ult i64 %18, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !8950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8950
  br i1 %19, label %25, label %20, !dbg !8950

; <label>:20:                                     ; preds = %17
  %21 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8951, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8954
  %22 = icmp ugt i64 %21, ptrtoint ([0 x i8]* @_end to i64), !dbg !8950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8955
  br i1 %22, label %25, label %23, !dbg !8955

; <label>:23:                                     ; preds = %20
  %24 = tail call i32* @__errno() #10, !dbg !8959
  store i32 122, i32* %24, align 4, !dbg !8960, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8961
  br label %32, !dbg !8962

; <label>:25:                                     ; preds = %20, %17
  %26 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8963, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8967
  %27 = and i64 %26, -65536, !dbg !8969
  %28 = or i64 %27, 4097, !dbg !8969
  %29 = add nsw i64 %28, -1, !dbg !8969
  %30 = inttoptr i64 %29 to i32*, !dbg !8970
  %31 = load i32, i32* %30, align 4096, !dbg !8971, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8972
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -122, i32 %31, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !8973, !srcloc !8974
  br label %32

; <label>:32:                                     ; preds = %25, %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %201, !dbg !8975

; <label>:33:                                     ; preds = %15
  %34 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !8976
  %35 = icmp eq %struct.lwip_sock* %34, null, !dbg !8978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8981
  br i1 %35, label %203, label %36, !dbg !8980

; <label>:36:                                     ; preds = %33
  %37 = load i32, i32* %12, align 8, !dbg !8984, !tbaa !1773
  %38 = icmp sgt i32 %37, 0, !dbg !8985
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8986
  br i1 %38, label %39, label %78, !dbg !8986

; <label>:39:                                     ; preds = %36
  %40 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 2
  %41 = load %struct.iovec*, %struct.iovec** %40, align 8, !tbaa !1770
  %42 = sext i32 %37 to i64
  br label %43, !dbg !8986

; <label>:43:                                     ; preds = %39, %75
  %44 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %45 = phi i64 [ 0, %39 ], [ %54, %75 ]
  %46 = getelementptr inbounds %struct.iovec, %struct.iovec* %41, i64 %44, i32 0, !dbg !8987
  %47 = load i8*, i8** %46, align 8, !dbg !8987, !tbaa !8596
  %48 = icmp eq i8* %47, null, !dbg !8988
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8989
  br i1 %48, label %56, label %49, !dbg !8989

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %struct.iovec, %struct.iovec* %41, i64 %44, i32 1, !dbg !8990
  %51 = load i64, i64* %50, align 8, !dbg !8990, !tbaa !8600
  %52 = icmp slt i64 %51, 1, !dbg !8991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8992
  br i1 %52, label %56, label %53, !dbg !8992

; <label>:53:                                     ; preds = %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8993
  %54 = add nsw i64 %51, %45, !dbg !8994
  %55 = icmp slt i64 %54, 1, !dbg !8995
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8996
  br i1 %55, label %56, label %75, !dbg !8996

; <label>:56:                                     ; preds = %43, %49, %53
  %57 = tail call i32 @err_to_errno(i8 signext -6) #10, !dbg !8997
  %58 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8998, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9001
  %59 = icmp ult i64 %58, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9002
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9002
  br i1 %59, label %65, label %60, !dbg !9002

; <label>:60:                                     ; preds = %56
  %61 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9003, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9006
  %62 = icmp ugt i64 %61, ptrtoint ([0 x i8]* @_end to i64), !dbg !9002
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9007
  br i1 %62, label %65, label %63, !dbg !9007

; <label>:63:                                     ; preds = %60
  %64 = tail call i32* @__errno() #10, !dbg !9008
  store i32 %57, i32* %64, align 4, !dbg !9011, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9012
  br label %74, !dbg !9013

; <label>:65:                                     ; preds = %60, %56
  %66 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9014, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9018
  %67 = and i64 %66, -65536, !dbg !9020
  %68 = or i64 %67, 4097, !dbg !9020
  %69 = add nsw i64 %68, -1, !dbg !9020
  %70 = inttoptr i64 %69 to i32*, !dbg !9021
  %71 = load i32, i32* %70, align 4096, !dbg !9022, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9023
  %72 = sub nsw i32 0, %57, !dbg !9024
  %73 = sext i32 %72 to i64, !dbg !9024
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %73, i32 %71, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9024, !srcloc !9025
  br label %74

; <label>:74:                                     ; preds = %65, %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %201, !dbg !9026

; <label>:75:                                     ; preds = %53
  %76 = add nuw nsw i64 %44, 1, !dbg !9027
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9028
  %77 = icmp slt i64 %76, %42, !dbg !8985
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8986
  br i1 %77, label %43, label %78, !dbg !8986, !llvm.loop !9029

; <label>:78:                                     ; preds = %75, %36
  %79 = phi i64 [ 0, %36 ], [ %54, %75 ], !dbg !9031
  %80 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %34, i64 0, i32 0, !dbg !9032
  %81 = load %struct.netconn*, %struct.netconn** %80, align 8, !dbg !9032, !tbaa !1563
  %82 = getelementptr inbounds %struct.netconn, %struct.netconn* %81, i64 0, i32 0, !dbg !9032
  %83 = load i32, i32* %82, align 8, !dbg !9032, !tbaa !1570
  %84 = and i32 %83, 240, !dbg !9032
  %85 = icmp eq i32 %84, 16, !dbg !9033
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9034
  br i1 %85, label %86, label %150, !dbg !9034

; <label>:86:                                     ; preds = %78
  %87 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 6, !dbg !9036
  store i32 0, i32* %87, align 4, !dbg !9037, !tbaa !1782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9039
  br i1 %38, label %88, label %148, !dbg !9039

; <label>:88:                                     ; preds = %86
  %89 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 2
  %90 = and i32 %2, 1
  %91 = icmp eq i32 %90, 0
  %92 = load %struct.iovec*, %struct.iovec** %89, align 8, !dbg !9040, !tbaa !1770
  br label %93, !dbg !9039

; <label>:93:                                     ; preds = %88, %123
  %94 = phi %struct.iovec* [ %92, %88 ], [ %110, %123 ], !dbg !9040
  %95 = phi i64 [ 0, %88 ], [ %125, %123 ]
  %96 = phi i64 [ 0, %88 ], [ %109, %123 ]
  %97 = phi i32 [ %2, %88 ], [ %124, %123 ]
  %98 = getelementptr inbounds %struct.iovec, %struct.iovec* %94, i64 %95, i32 0, !dbg !9041
  %99 = load i8*, i8** %98, align 8, !dbg !9041, !tbaa !8596
  %100 = getelementptr inbounds %struct.iovec, %struct.iovec* %94, i64 %95, i32 1, !dbg !9042
  %101 = load i64, i64* %100, align 8, !dbg !9042, !tbaa !8600
  %102 = tail call fastcc i64 @lwip_recv_tcp(%struct.lwip_sock* nonnull %34, i8* %99, i64 %101, i32 %97) #8, !dbg !9043
  %103 = icmp sgt i64 %102, 0, !dbg !9045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9047
  br i1 %103, label %104, label %106, !dbg !9047

; <label>:104:                                    ; preds = %93
  %105 = add nsw i64 %102, %96, !dbg !9048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9051
  br label %108, !dbg !9051

; <label>:106:                                    ; preds = %93
  %107 = icmp slt i64 %102, 0, !dbg !9053
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9051
  br i1 %107, label %117, label %108, !dbg !9051

; <label>:108:                                    ; preds = %104, %106
  %109 = phi i64 [ %105, %104 ], [ %96, %106 ]
  %110 = load %struct.iovec*, %struct.iovec** %89, align 8, !dbg !9054, !tbaa !1770
  %111 = getelementptr inbounds %struct.iovec, %struct.iovec* %110, i64 %95, i32 1, !dbg !9055
  %112 = load i64, i64* %111, align 8, !dbg !9055, !tbaa !8600
  %113 = shl i64 %112, 32, !dbg !9056
  %114 = ashr exact i64 %113, 32, !dbg !9056
  %115 = icmp slt i64 %102, %114, !dbg !9057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9058
  br i1 %115, label %117, label %116, !dbg !9058

; <label>:116:                                    ; preds = %108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9059
  br i1 %91, label %123, label %117, !dbg !9059

; <label>:117:                                    ; preds = %116, %108, %106
  %118 = phi i64 [ %109, %116 ], [ %109, %108 ], [ %96, %106 ]
  %119 = icmp slt i64 %118, 1, !dbg !9060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9063
  br i1 %119, label %120, label %121, !dbg !9063

; <label>:120:                                    ; preds = %117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9064
  br label %121, !dbg !9064

; <label>:121:                                    ; preds = %117, %120
  %122 = phi i64 [ %102, %120 ], [ %118, %117 ], !dbg !9066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9067
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %129

; <label>:123:                                    ; preds = %116
  %124 = or i32 %97, 8, !dbg !9068
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9069
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %125 = add nuw nsw i64 %95, 1, !dbg !9070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9071
  %126 = load i32, i32* %12, align 8, !dbg !9072, !tbaa !1773
  %127 = sext i32 %126 to i64, !dbg !9073
  %128 = icmp slt i64 %125, %127, !dbg !9073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9039
  br i1 %128, label %93, label %129, !dbg !9039, !llvm.loop !9074

; <label>:129:                                    ; preds = %123, %121
  %130 = phi i64 [ %122, %121 ], [ %109, %123 ], !dbg !9076
  %131 = icmp sgt i64 %130, 0, !dbg !9077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9078
  br i1 %131, label %132, label %201, !dbg !9078

; <label>:132:                                    ; preds = %129
  %133 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9080, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9083
  %134 = icmp ult i64 %133, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9084
  br i1 %134, label %140, label %135, !dbg !9084

; <label>:135:                                    ; preds = %132
  %136 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9085, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9088
  %137 = icmp ugt i64 %136, ptrtoint ([0 x i8]* @_end to i64), !dbg !9084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9089
  br i1 %137, label %140, label %138, !dbg !9089

; <label>:138:                                    ; preds = %135
  %139 = tail call i32* @__errno() #10, !dbg !9093
  store i32 0, i32* %139, align 4, !dbg !9094, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9095
  br label %147, !dbg !9096

; <label>:140:                                    ; preds = %135, %132
  %141 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9097, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9101
  %142 = and i64 %141, -65536, !dbg !9103
  %143 = or i64 %142, 4097, !dbg !9103
  %144 = add nsw i64 %143, -1, !dbg !9103
  %145 = inttoptr i64 %144 to i32*, !dbg !9104
  %146 = load i32, i32* %145, align 4096, !dbg !9105, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9106
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %146, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9107, !srcloc !9108
  br label %147

; <label>:147:                                    ; preds = %140, %138
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %148, !dbg !9109

; <label>:148:                                    ; preds = %86, %147
  %149 = phi i64 [ %130, %147 ], [ 0, %86 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9110
  br label %201

; <label>:150:                                    ; preds = %78
  %151 = bitcast i16* %4 to i8*, !dbg !9111
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %151) #6, !dbg !9111
  store i16 0, i16* %4, align 2, !dbg !9112, !tbaa !3084
  %152 = call fastcc signext i8 @lwip_recvfrom_udp_raw(%struct.lwip_sock* nonnull %34, i32 %2, %struct.msghdr* nonnull %1, i16* nonnull %4) #8, !dbg !9113
  %153 = icmp eq i8 %152, 0, !dbg !9115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9116
  br i1 %153, label %173, label %154, !dbg !9116

; <label>:154:                                    ; preds = %150
  %155 = call i32 @err_to_errno(i8 signext %152) #10, !dbg !9117
  %156 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9118, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9121
  %157 = icmp ult i64 %156, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9122
  br i1 %157, label %163, label %158, !dbg !9122

; <label>:158:                                    ; preds = %154
  %159 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9123, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9126
  %160 = icmp ugt i64 %159, ptrtoint ([0 x i8]* @_end to i64), !dbg !9122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9127
  br i1 %160, label %163, label %161, !dbg !9127

; <label>:161:                                    ; preds = %158
  %162 = call i32* @__errno() #10, !dbg !9128
  store i32 %155, i32* %162, align 4, !dbg !9131, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9132
  br label %172, !dbg !9133

; <label>:163:                                    ; preds = %158, %154
  %164 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9134, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9138
  %165 = and i64 %164, -65536, !dbg !9140
  %166 = or i64 %165, 4097, !dbg !9140
  %167 = add nsw i64 %166, -1, !dbg !9140
  %168 = inttoptr i64 %167 to i32*, !dbg !9141
  %169 = load i32, i32* %168, align 4096, !dbg !9142, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9143
  %170 = sub nsw i32 0, %155, !dbg !9144
  %171 = sext i32 %170 to i64, !dbg !9144
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %171, i32 %169, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9144, !srcloc !9145
  br label %172

; <label>:172:                                    ; preds = %163, %161
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %199, !dbg !9146

; <label>:173:                                    ; preds = %150
  %174 = load i16, i16* %4, align 2, !dbg !9147, !tbaa !3084
  %175 = zext i16 %174 to i64, !dbg !9147
  %176 = icmp slt i64 %79, %175, !dbg !9149
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9150
  br i1 %176, label %177, label %181, !dbg !9150

; <label>:177:                                    ; preds = %173
  %178 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 6, !dbg !9151
  %179 = load i32, i32* %178, align 4, !dbg !9153, !tbaa !1782
  %180 = or i32 %179, 4, !dbg !9153
  store i32 %180, i32* %178, align 4, !dbg !9153, !tbaa !1782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9154
  br label %181, !dbg !9154

; <label>:181:                                    ; preds = %173, %177
  %182 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9156, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9159
  %183 = icmp ult i64 %182, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9160
  br i1 %183, label %189, label %184, !dbg !9160

; <label>:184:                                    ; preds = %181
  %185 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9161, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9164
  %186 = icmp ugt i64 %185, ptrtoint ([0 x i8]* @_end to i64), !dbg !9160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9165
  br i1 %186, label %189, label %187, !dbg !9165

; <label>:187:                                    ; preds = %184
  %188 = call i32* @__errno() #10, !dbg !9169
  store i32 0, i32* %188, align 4, !dbg !9170, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9171
  br label %196, !dbg !9172

; <label>:189:                                    ; preds = %184, %181
  %190 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9173, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9177
  %191 = and i64 %190, -65536, !dbg !9179
  %192 = or i64 %191, 4097, !dbg !9179
  %193 = add nsw i64 %192, -1, !dbg !9179
  %194 = inttoptr i64 %193 to i32*, !dbg !9180
  %195 = load i32, i32* %194, align 4096, !dbg !9181, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9182
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %195, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9183, !srcloc !9184
  br label %196

; <label>:196:                                    ; preds = %189, %187
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %197 = load i16, i16* %4, align 2, !dbg !9185, !tbaa !3084
  %198 = zext i16 %197 to i64, !dbg !9186
  br label %199, !dbg !9187

; <label>:199:                                    ; preds = %196, %172
  %200 = phi i64 [ -1, %172 ], [ %198, %196 ], !dbg !9188
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9189
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %151) #6, !dbg !9190
  br label %201

; <label>:201:                                    ; preds = %129, %148, %32, %74, %199
  %202 = phi i64 [ %200, %199 ], [ -1, %74 ], [ -1, %32 ], [ %130, %129 ], [ %149, %148 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %203, !dbg !9191

; <label>:203:                                    ; preds = %201, %33
  %204 = phi i64 [ -1, %33 ], [ %202, %201 ], !dbg !9192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9191
  ret i64 %204, !dbg !9191
}

; Function Attrs: noredzone nounwind
define dso_local i32 @send(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !9194 {
  %5 = alloca %struct.sock_net_file*, align 8
  %6 = bitcast %struct.sock_net_file** %5 to i8*, !dbg !9231
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9231
  store %struct.sock_net_file* null, %struct.sock_net_file** %5, align 8, !dbg !9232, !tbaa !1426
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9233, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9237
  br i1 %8, label %31, label %9, !dbg !9237

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9238, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9241
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !9237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9242
  br i1 %11, label %31, label %12, !dbg !9242

; <label>:12:                                     ; preds = %9
  %13 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !9247
  %14 = icmp eq %struct.vfscore_file* %13, null, !dbg !9249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9250
  br i1 %14, label %27, label %15, !dbg !9250

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 6, !dbg !9251
  %17 = load %struct.dentry*, %struct.dentry** %16, align 8, !dbg !9251, !tbaa !2585
  %18 = getelementptr inbounds %struct.dentry, %struct.dentry* %17, i64 0, i32 3, !dbg !9252
  %19 = load %struct.vnode*, %struct.vnode** %18, align 8, !dbg !9252, !tbaa !2847
  %20 = getelementptr inbounds %struct.vnode, %struct.vnode* %19, i64 0, i32 5, !dbg !9253
  %21 = load i32, i32* %20, align 4, !dbg !9253, !tbaa !2595
  %22 = icmp eq i32 %21, 6, !dbg !9254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9255
  br i1 %22, label %23, label %27, !dbg !9255

; <label>:23:                                     ; preds = %15
  %24 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %13, i64 0, i32 4, !dbg !9256
  %25 = bitcast i8** %24 to %struct.sock_net_file**, !dbg !9256
  %26 = load %struct.sock_net_file*, %struct.sock_net_file** %25, align 8, !dbg !9256, !tbaa !2581
  br label %27, !dbg !9257

; <label>:27:                                     ; preds = %15, %12, %23
  %28 = phi %struct.sock_net_file* [ %26, %23 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %12 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %15 ], !dbg !9258
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9260
  store %struct.sock_net_file* %28, %struct.sock_net_file** %5, align 8, !dbg !9261, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9261
  %29 = ptrtoint %struct.sock_net_file* %28 to i64, !dbg !9261
  %30 = bitcast %struct.sock_net_file** %5 to i64*, !dbg !9262
  br label %43, !dbg !9261

; <label>:31:                                     ; preds = %9, %4
  %32 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9263, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9267
  %33 = and i64 %32, -65536, !dbg !9269
  %34 = or i64 %33, 4097, !dbg !9269
  %35 = add nsw i64 %34, -1, !dbg !9269
  %36 = inttoptr i64 %35 to i32*, !dbg !9270
  %37 = load i32, i32* %36, align 4096, !dbg !9271, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9272
  %38 = sext i32 %0 to i64, !dbg !9273
  %39 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %38, i32 %37, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !9273, !srcloc !9274
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %5, i64 %39) #6, !dbg !9275, !srcloc !9279
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %40 = bitcast %struct.sock_net_file** %5 to i64*
  %41 = load i64, i64* %40, align 8, !dbg !9262, !tbaa !1426
  %42 = inttoptr i64 %41 to %struct.sock_net_file*
  br label %43

; <label>:43:                                     ; preds = %31, %27
  %44 = phi i64* [ %40, %31 ], [ %30, %27 ], !dbg !9262
  %45 = phi %struct.sock_net_file* [ %42, %31 ], [ %28, %27 ]
  %46 = phi i64 [ %41, %31 ], [ %29, %27 ], !dbg !9262
  %47 = icmp slt i64 %46, 1, !dbg !9262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9262
  br i1 %47, label %48, label %71, !dbg !9262

; <label>:48:                                     ; preds = %43
  %49 = icmp sgt i64 %46, -513, !dbg !9262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9280
  br i1 %49, label %50, label %71, !dbg !9280

; <label>:50:                                     ; preds = %48
  %51 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9281, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9284
  %52 = icmp ult i64 %51, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9285
  br i1 %52, label %61, label %53, !dbg !9285

; <label>:53:                                     ; preds = %50
  %54 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9286, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9289
  %55 = icmp ugt i64 %54, ptrtoint ([0 x i8]* @_end to i64), !dbg !9285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9290
  br i1 %55, label %61, label %56, !dbg !9290

; <label>:56:                                     ; preds = %53
  %57 = load i64, i64* %44, align 8, !dbg !9291, !tbaa !1426
  %58 = trunc i64 %57 to i32, !dbg !9291
  %59 = sub nsw i32 0, %58, !dbg !9295
  %60 = call i32* @__errno() #10, !dbg !9296
  store i32 %59, i32* %60, align 4, !dbg !9297, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9298
  br label %95, !dbg !9291

; <label>:61:                                     ; preds = %53, %50
  %62 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9299, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  %63 = and i64 %62, -65536, !dbg !9305
  %64 = or i64 %63, 4097, !dbg !9305
  %65 = add nsw i64 %64, -1, !dbg !9305
  %66 = inttoptr i64 %65 to i32*, !dbg !9306
  %67 = load i32, i32* %66, align 4096, !dbg !9307, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9308
  %68 = load i64, i64* %44, align 8, !dbg !9309, !tbaa !1426
  %69 = shl i64 %68, 32, !dbg !9309
  %70 = ashr exact i64 %69, 32, !dbg !9309
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %70, i32 %67, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9309, !srcloc !9310
  br label %95

; <label>:71:                                     ; preds = %48, %43
  %72 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %45, i64 0, i32 1, !dbg !9311
  %73 = load i32, i32* %72, align 8, !dbg !9311, !tbaa !1421
  %74 = call i64 @lwip_send(i32 %73, i8* %1, i64 %2, i32 %3) #8, !dbg !9312
  %75 = trunc i64 %74 to i32, !dbg !9312
  %76 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9313, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9316
  %77 = icmp ult i64 %76, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9317
  br i1 %77, label %85, label %78, !dbg !9317

; <label>:78:                                     ; preds = %71
  %79 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9318, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9321
  %80 = icmp ugt i64 %79, ptrtoint ([0 x i8]* @_end to i64), !dbg !9317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9322
  br i1 %80, label %85, label %81, !dbg !9322

; <label>:81:                                     ; preds = %78
  %82 = load %struct.sock_net_file*, %struct.sock_net_file** %5, align 8, !dbg !9323, !tbaa !1426
  %83 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %82, i64 0, i32 0, !dbg !9323
  %84 = load %struct.vfscore_file*, %struct.vfscore_file** %83, align 8, !dbg !9323, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %84) #10, !dbg !9323
  br label %95, !dbg !9323

; <label>:85:                                     ; preds = %78, %71
  %86 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9325, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9329
  %87 = and i64 %86, -65536, !dbg !9331
  %88 = or i64 %87, 4097, !dbg !9331
  %89 = add nsw i64 %88, -1, !dbg !9331
  %90 = inttoptr i64 %89 to i32*, !dbg !9332
  %91 = load i32, i32* %90, align 4096, !dbg !9333, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9334
  %92 = bitcast %struct.sock_net_file** %5 to i64**, !dbg !9335
  %93 = load i64*, i64** %92, align 8, !dbg !9335, !tbaa !1426
  %94 = load i64, i64* %93, align 8, !dbg !9335, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %94, i32 %91, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !9335, !srcloc !9336
  br label %95

; <label>:95:                                     ; preds = %81, %85, %56, %61
  %96 = phi i32 [ -1, %56 ], [ -1, %61 ], [ %75, %81 ], [ %75, %85 ], !dbg !9337
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9339
  ret i32 %96, !dbg !9339
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_send(i32, i8*, i64, i32) local_unnamed_addr #0 !dbg !9340 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*, !dbg !9364
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9364
  %7 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !9365
  %8 = icmp eq %struct.lwip_sock* %7, null, !dbg !9367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9369
  br i1 %8, label %48, label %9, !dbg !9369

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %7, i64 0, i32 0, !dbg !9370
  %11 = load %struct.netconn*, %struct.netconn** %10, align 8, !dbg !9370, !tbaa !1563
  %12 = getelementptr inbounds %struct.netconn, %struct.netconn* %11, i64 0, i32 0, !dbg !9370
  %13 = load i32, i32* %12, align 8, !dbg !9370, !tbaa !1570
  %14 = and i32 %13, 240, !dbg !9370
  %15 = icmp eq i32 %14, 16, !dbg !9372
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9373
  br i1 %15, label %18, label %16, !dbg !9373

; <label>:16:                                     ; preds = %9
  %17 = tail call i64 @lwip_sendto(i32 %0, i8* %1, i64 %2, i32 %3, %struct.sockaddr* null, i32 0) #8, !dbg !9374
  br label %48, !dbg !9376

; <label>:18:                                     ; preds = %9
  %19 = lshr i32 %3, 3, !dbg !9377
  %20 = and i32 %19, 2, !dbg !9377
  %21 = lshr i32 %3, 1, !dbg !9378
  %22 = and i32 %21, 4, !dbg !9378
  %23 = or i32 %20, %22, !dbg !9379
  %24 = trunc i32 %23 to i8, !dbg !9380
  %25 = or i8 %24, 1, !dbg !9380
  store i64 0, i64* %5, align 8, !dbg !9383, !tbaa !2478
  %26 = call signext i8 @netconn_write_partly(%struct.netconn* %11, i8* %1, i64 %2, i8 zeroext %25, i64* nonnull %5) #10, !dbg !9384
  %27 = call i32 @err_to_errno(i8 signext %26) #10, !dbg !9386
  %28 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9387, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9390
  %29 = icmp ult i64 %28, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9391
  br i1 %29, label %35, label %30, !dbg !9391

; <label>:30:                                     ; preds = %18
  %31 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9392, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9395
  %32 = icmp ugt i64 %31, ptrtoint ([0 x i8]* @_end to i64), !dbg !9391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9396
  br i1 %32, label %35, label %33, !dbg !9396

; <label>:33:                                     ; preds = %30
  %34 = call i32* @__errno() #10, !dbg !9397
  store i32 %27, i32* %34, align 4, !dbg !9400, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9401
  br label %44, !dbg !9402

; <label>:35:                                     ; preds = %30, %18
  %36 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9403, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9407
  %37 = and i64 %36, -65536, !dbg !9409
  %38 = or i64 %37, 4097, !dbg !9409
  %39 = add nsw i64 %38, -1, !dbg !9409
  %40 = inttoptr i64 %39 to i32*, !dbg !9410
  %41 = load i32, i32* %40, align 4096, !dbg !9411, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9412
  %42 = sub nsw i32 0, %27, !dbg !9413
  %43 = sext i32 %42 to i64, !dbg !9413
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %43, i32 %41, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9413, !srcloc !9414
  br label %44

; <label>:44:                                     ; preds = %35, %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %45 = icmp eq i8 %26, 0, !dbg !9415
  %46 = load i64, i64* %5, align 8, !dbg !9416
  %47 = select i1 %45, i64 %46, i64 -1, !dbg !9417
  br label %48, !dbg !9418

; <label>:48:                                     ; preds = %4, %44, %16
  %49 = phi i64 [ %17, %16 ], [ %47, %44 ], [ -1, %4 ], !dbg !9419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9419
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9421
  ret i64 %49, !dbg !9421
}

; Function Attrs: noredzone nounwind
define dso_local i32 @sendmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #0 !dbg !9422 {
  %4 = alloca %struct.sock_net_file*, align 8
  %5 = bitcast %struct.sock_net_file** %4 to i8*, !dbg !9459
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !9459
  store %struct.sock_net_file* null, %struct.sock_net_file** %4, align 8, !dbg !9460, !tbaa !1426
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9461, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9464
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9465
  br i1 %7, label %30, label %8, !dbg !9465

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9466, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9469
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !9465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9470
  br i1 %10, label %30, label %11, !dbg !9470

; <label>:11:                                     ; preds = %8
  %12 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !9475
  %13 = icmp eq %struct.vfscore_file* %12, null, !dbg !9477
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9478
  br i1 %13, label %26, label %14, !dbg !9478

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 6, !dbg !9479
  %16 = load %struct.dentry*, %struct.dentry** %15, align 8, !dbg !9479, !tbaa !2585
  %17 = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i64 0, i32 3, !dbg !9480
  %18 = load %struct.vnode*, %struct.vnode** %17, align 8, !dbg !9480, !tbaa !2847
  %19 = getelementptr inbounds %struct.vnode, %struct.vnode* %18, i64 0, i32 5, !dbg !9481
  %20 = load i32, i32* %19, align 4, !dbg !9481, !tbaa !2595
  %21 = icmp eq i32 %20, 6, !dbg !9482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9483
  br i1 %21, label %22, label %26, !dbg !9483

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %12, i64 0, i32 4, !dbg !9484
  %24 = bitcast i8** %23 to %struct.sock_net_file**, !dbg !9484
  %25 = load %struct.sock_net_file*, %struct.sock_net_file** %24, align 8, !dbg !9484, !tbaa !2581
  br label %26, !dbg !9485

; <label>:26:                                     ; preds = %14, %11, %22
  %27 = phi %struct.sock_net_file* [ %25, %22 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %11 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %14 ], !dbg !9486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9488
  store %struct.sock_net_file* %27, %struct.sock_net_file** %4, align 8, !dbg !9489, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9489
  %28 = ptrtoint %struct.sock_net_file* %27 to i64, !dbg !9489
  %29 = bitcast %struct.sock_net_file** %4 to i64*, !dbg !9490
  br label %42, !dbg !9489

; <label>:30:                                     ; preds = %8, %3
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9491, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9495
  %32 = and i64 %31, -65536, !dbg !9497
  %33 = or i64 %32, 4097, !dbg !9497
  %34 = add nsw i64 %33, -1, !dbg !9497
  %35 = inttoptr i64 %34 to i32*, !dbg !9498
  %36 = load i32, i32* %35, align 4096, !dbg !9499, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9500
  %37 = sext i32 %0 to i64, !dbg !9501
  %38 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %37, i32 %36, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !9501, !srcloc !9502
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %4, i64 %38) #6, !dbg !9503, !srcloc !9507
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = bitcast %struct.sock_net_file** %4 to i64*
  %40 = load i64, i64* %39, align 8, !dbg !9490, !tbaa !1426
  %41 = inttoptr i64 %40 to %struct.sock_net_file*
  br label %42

; <label>:42:                                     ; preds = %30, %26
  %43 = phi i64* [ %39, %30 ], [ %29, %26 ], !dbg !9490
  %44 = phi %struct.sock_net_file* [ %41, %30 ], [ %27, %26 ]
  %45 = phi i64 [ %40, %30 ], [ %28, %26 ], !dbg !9490
  %46 = icmp slt i64 %45, 1, !dbg !9490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9490
  br i1 %46, label %47, label %70, !dbg !9490

; <label>:47:                                     ; preds = %42
  %48 = icmp sgt i64 %45, -513, !dbg !9490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9508
  br i1 %48, label %49, label %70, !dbg !9508

; <label>:49:                                     ; preds = %47
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9509, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9512
  %51 = icmp ult i64 %50, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9513
  br i1 %51, label %60, label %52, !dbg !9513

; <label>:52:                                     ; preds = %49
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9514, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9517
  %54 = icmp ugt i64 %53, ptrtoint ([0 x i8]* @_end to i64), !dbg !9513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9518
  br i1 %54, label %60, label %55, !dbg !9518

; <label>:55:                                     ; preds = %52
  %56 = load i64, i64* %43, align 8, !dbg !9519, !tbaa !1426
  %57 = trunc i64 %56 to i32, !dbg !9519
  %58 = sub nsw i32 0, %57, !dbg !9523
  %59 = call i32* @__errno() #10, !dbg !9524
  store i32 %58, i32* %59, align 4, !dbg !9525, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9526
  br label %94, !dbg !9519

; <label>:60:                                     ; preds = %52, %49
  %61 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9527, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9531
  %62 = and i64 %61, -65536, !dbg !9533
  %63 = or i64 %62, 4097, !dbg !9533
  %64 = add nsw i64 %63, -1, !dbg !9533
  %65 = inttoptr i64 %64 to i32*, !dbg !9534
  %66 = load i32, i32* %65, align 4096, !dbg !9535, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9536
  %67 = load i64, i64* %43, align 8, !dbg !9537, !tbaa !1426
  %68 = shl i64 %67, 32, !dbg !9537
  %69 = ashr exact i64 %68, 32, !dbg !9537
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %69, i32 %66, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9537, !srcloc !9538
  br label %94

; <label>:70:                                     ; preds = %47, %42
  %71 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %44, i64 0, i32 1, !dbg !9539
  %72 = load i32, i32* %71, align 8, !dbg !9539, !tbaa !1421
  %73 = call i64 @lwip_sendmsg(i32 %72, %struct.msghdr* %1, i32 %2) #8, !dbg !9540
  %74 = trunc i64 %73 to i32, !dbg !9540
  %75 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9541, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9544
  %76 = icmp ult i64 %75, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9545
  br i1 %76, label %84, label %77, !dbg !9545

; <label>:77:                                     ; preds = %70
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9546, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9549
  %79 = icmp ugt i64 %78, ptrtoint ([0 x i8]* @_end to i64), !dbg !9545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9550
  br i1 %79, label %84, label %80, !dbg !9550

; <label>:80:                                     ; preds = %77
  %81 = load %struct.sock_net_file*, %struct.sock_net_file** %4, align 8, !dbg !9551, !tbaa !1426
  %82 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %81, i64 0, i32 0, !dbg !9551
  %83 = load %struct.vfscore_file*, %struct.vfscore_file** %82, align 8, !dbg !9551, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %83) #10, !dbg !9551
  br label %94, !dbg !9551

; <label>:84:                                     ; preds = %77, %70
  %85 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9553, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9557
  %86 = and i64 %85, -65536, !dbg !9559
  %87 = or i64 %86, 4097, !dbg !9559
  %88 = add nsw i64 %87, -1, !dbg !9559
  %89 = inttoptr i64 %88 to i32*, !dbg !9560
  %90 = load i32, i32* %89, align 4096, !dbg !9561, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9562
  %91 = bitcast %struct.sock_net_file** %4 to i64**, !dbg !9563
  %92 = load i64*, i64** %91, align 8, !dbg !9563, !tbaa !1426
  %93 = load i64, i64* %92, align 8, !dbg !9563, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %93, i32 %90, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !9563, !srcloc !9564
  br label %94

; <label>:94:                                     ; preds = %80, %84, %55, %60
  %95 = phi i32 [ -1, %55 ], [ -1, %60 ], [ %74, %80 ], [ %74, %84 ], !dbg !9565
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !9566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9567
  ret i32 %95, !dbg !9567
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_sendmsg(i32, %struct.msghdr* readonly, i32) local_unnamed_addr #0 !dbg !9568 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.netbuf, align 8
  %6 = bitcast i64* %4 to i8*, !dbg !9674
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9674
  %7 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !9676
  %8 = icmp eq %struct.lwip_sock* %7, null, !dbg !9678
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9680
  br i1 %8, label %248, label %9, !dbg !9680

; <label>:9:                                      ; preds = %3
  %10 = icmp eq %struct.msghdr* %1, null, !dbg !9681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9682
  br i1 %10, label %11, label %12, !dbg !9682

; <label>:11:                                     ; preds = %9
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0)) #8, !dbg !9683
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9685
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9685
  unreachable

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 2, !dbg !9689
  %14 = load %struct.iovec*, %struct.iovec** %13, align 8, !dbg !9689, !tbaa !1770
  %15 = icmp eq %struct.iovec* %14, null, !dbg !9689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9690
  %16 = bitcast %struct.iovec* %14 to %struct.netvector*, !dbg !9690
  br i1 %15, label %17, label %18, !dbg !9690

; <label>:17:                                     ; preds = %12
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !9691
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9693
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9693
  unreachable

; <label>:18:                                     ; preds = %12
  %19 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 3, !dbg !9697
  %20 = load i32, i32* %19, align 8, !dbg !9697, !tbaa !1773
  %21 = icmp sgt i32 %20, 0, !dbg !9697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9697
  br i1 %21, label %22, label %24, !dbg !9697

; <label>:22:                                     ; preds = %18
  %23 = icmp slt i32 %20, 1025, !dbg !9697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9698
  br i1 %23, label %25, label %24, !dbg !9698

; <label>:24:                                     ; preds = %18, %22
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0)) #8, !dbg !9699
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9701
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9701
  unreachable

; <label>:25:                                     ; preds = %22
  %26 = and i32 %2, -25, !dbg !9705
  %27 = icmp eq i32 %26, 0, !dbg !9705
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9706
  br i1 %27, label %29, label %28, !dbg !9706

; <label>:28:                                     ; preds = %25
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0)) #8, !dbg !9707
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9709
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9709
  unreachable

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %7, i64 0, i32 0, !dbg !9713
  %31 = load %struct.netconn*, %struct.netconn** %30, align 8, !dbg !9713, !tbaa !1563
  %32 = getelementptr inbounds %struct.netconn, %struct.netconn* %31, i64 0, i32 0, !dbg !9713
  %33 = load i32, i32* %32, align 8, !dbg !9713, !tbaa !1570
  %34 = and i32 %33, 240, !dbg !9713
  %35 = icmp eq i32 %34, 16, !dbg !9714
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9715
  br i1 %35, label %36, label %67, !dbg !9715

; <label>:36:                                     ; preds = %29
  %37 = lshr i32 %2, 3, !dbg !9716
  %38 = and i32 %37, 2, !dbg !9716
  %39 = lshr i32 %2, 1, !dbg !9717
  %40 = and i32 %39, 4, !dbg !9717
  %41 = or i32 %38, %40, !dbg !9718
  %42 = trunc i32 %41 to i8, !dbg !9719
  %43 = or i8 %42, 1, !dbg !9719
  store i64 0, i64* %4, align 8, !dbg !9722, !tbaa !2478
  %44 = trunc i32 %20 to i16, !dbg !9723
  %45 = call signext i8 @netconn_write_vectors_partly(%struct.netconn* %31, %struct.netvector* %16, i16 zeroext %44, i8 zeroext %43, i64* nonnull %4) #10, !dbg !9724
  %46 = call i32 @err_to_errno(i8 signext %45) #10, !dbg !9725
  %47 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9726, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9729
  %48 = icmp ult i64 %47, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9730
  br i1 %48, label %54, label %49, !dbg !9730

; <label>:49:                                     ; preds = %36
  %50 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9731, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9734
  %51 = icmp ugt i64 %50, ptrtoint ([0 x i8]* @_end to i64), !dbg !9730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9735
  br i1 %51, label %54, label %52, !dbg !9735

; <label>:52:                                     ; preds = %49
  %53 = call i32* @__errno() #10, !dbg !9736
  store i32 %46, i32* %53, align 4, !dbg !9739, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9740
  br label %63, !dbg !9741

; <label>:54:                                     ; preds = %49, %36
  %55 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9742, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9746
  %56 = and i64 %55, -65536, !dbg !9748
  %57 = or i64 %56, 4097, !dbg !9748
  %58 = add nsw i64 %57, -1, !dbg !9748
  %59 = inttoptr i64 %58 to i32*, !dbg !9749
  %60 = load i32, i32* %59, align 4096, !dbg !9750, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9751
  %61 = sub nsw i32 0, %46, !dbg !9752
  %62 = sext i32 %61 to i64, !dbg !9752
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %62, i32 %60, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9752, !srcloc !9753
  br label %63

; <label>:63:                                     ; preds = %54, %52
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %64 = icmp eq i8 %45, 0, !dbg !9754
  %65 = load i64, i64* %4, align 8, !dbg !9755
  %66 = select i1 %64, i64 %65, i64 -1, !dbg !9756
  br label %248, !dbg !9757

; <label>:67:                                     ; preds = %29
  %68 = bitcast %struct.netbuf* %5 to i8*, !dbg !9758
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #6, !dbg !9758
  %69 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 0, !dbg !9760
  %70 = load i8*, i8** %69, align 8, !dbg !9760, !tbaa !1763
  %71 = icmp eq i8* %70, null, !dbg !9760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9760
  %72 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %1, i64 0, i32 1
  %73 = load i32, i32* %72, align 8, !dbg !9760, !tbaa !1767
  br i1 %71, label %74, label %76, !dbg !9760

; <label>:74:                                     ; preds = %67
  %75 = icmp eq i32 %73, 0, !dbg !9760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9760
  br i1 %75, label %81, label %76, !dbg !9760

; <label>:76:                                     ; preds = %67, %74
  %77 = icmp eq i32 %73, 16, !dbg !9760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9760
  br i1 %77, label %81, label %78, !dbg !9760

; <label>:78:                                     ; preds = %76
  %79 = icmp eq i32 %73, 28, !dbg !9760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9761
  br i1 %79, label %81, label %80, !dbg !9761

; <label>:80:                                     ; preds = %78
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #8, !dbg !9762
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !9764
  tail call void @ukplat_terminate(i32 3) #9, !dbg !9764
  unreachable

; <label>:81:                                     ; preds = %78, %76, %74
  %82 = call i8* @memset(i8* nonnull %68, i32 0, i64 48) #10, !dbg !9768
  %83 = load i8*, i8** %69, align 8, !dbg !9769, !tbaa !1763
  %84 = icmp eq i8* %83, null, !dbg !9770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9771
  br i1 %84, label %134, label %85, !dbg !9771

; <label>:85:                                     ; preds = %81
  %86 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, !dbg !9772
  %87 = getelementptr inbounds i8, i8* %83, i64 1, !dbg !9776
  %88 = load i8, i8* %87, align 1, !dbg !9776, !tbaa !3663
  %89 = icmp eq i8 %88, 10, !dbg !9777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9778
  br i1 %89, label %90, label %121, !dbg !9778

; <label>:90:                                     ; preds = %85
  %91 = getelementptr inbounds i8, i8* %83, i64 8, !dbg !9779
  %92 = bitcast i8* %91 to i32*, !dbg !9779
  %93 = load i32, i32* %92, align 4, !dbg !9779, !tbaa !1581
  %94 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %86, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !9779
  store i32 %93, i32* %94, align 8, !dbg !9779, !tbaa !1581
  %95 = getelementptr inbounds i8, i8* %83, i64 12, !dbg !9779
  %96 = bitcast i8* %95 to i32*, !dbg !9779
  %97 = load i32, i32* %96, align 4, !dbg !9779, !tbaa !1581
  %98 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !9779
  store i32 %97, i32* %98, align 4, !dbg !9779, !tbaa !1581
  %99 = getelementptr inbounds i8, i8* %83, i64 16, !dbg !9779
  %100 = bitcast i8* %99 to i32*, !dbg !9779
  %101 = load i32, i32* %100, align 4, !dbg !9779, !tbaa !1581
  %102 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !9779
  store i32 %101, i32* %102, align 8, !dbg !9779, !tbaa !1581
  %103 = getelementptr inbounds i8, i8* %83, i64 20, !dbg !9779
  %104 = bitcast i8* %103 to i32*, !dbg !9779
  %105 = load i32, i32* %104, align 4, !dbg !9779, !tbaa !1581
  %106 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !9779
  store i32 %105, i32* %106, align 4, !dbg !9779, !tbaa !1581
  %107 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !9779
  store i8 0, i8* %107, align 8, !dbg !9779, !tbaa !1581
  %108 = zext i32 %93 to i64, !dbg !9780
  %109 = and i64 %108, 49407, !dbg !9780
  %110 = icmp eq i64 %109, 33022, !dbg !9780
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9780
  br i1 %110, label %116, label %111, !dbg !9780

; <label>:111:                                    ; preds = %90
  %112 = and i64 %108, 36863, !dbg !9780
  %113 = icmp eq i64 %112, 511, !dbg !9780
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9780
  br i1 %113, label %116, label %114, !dbg !9780

; <label>:114:                                    ; preds = %111
  %115 = icmp eq i64 %112, 767, !dbg !9780
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9781
  br i1 %115, label %116, label %126, !dbg !9781

; <label>:116:                                    ; preds = %114, %111, %90
  %117 = getelementptr inbounds i8, i8* %83, i64 24, !dbg !9782
  %118 = bitcast i8* %117 to i32*, !dbg !9782
  %119 = load i32, i32* %118, align 4, !dbg !9782, !tbaa !3402
  %120 = trunc i32 %119 to i8, !dbg !9782
  store i8 %120, i8* %107, align 8, !dbg !9782, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9782
  br label %126, !dbg !9782

; <label>:121:                                    ; preds = %85
  %122 = getelementptr inbounds i8, i8* %83, i64 4, !dbg !9783
  %123 = bitcast i8* %122 to i32*, !dbg !9783
  %124 = load i32, i32* %123, align 4, !dbg !9783, !tbaa !3412
  %125 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %86, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !9783
  store i32 %124, i32* %125, align 8, !dbg !9783, !tbaa !1581
  br label %126

; <label>:126:                                    ; preds = %114, %116, %121
  %127 = phi i8 [ 0, %121 ], [ 6, %116 ], [ 6, %114 ]
  %128 = getelementptr inbounds i8, i8* %83, i64 2, !dbg !9784
  %129 = bitcast i8* %128 to i16*, !dbg !9784
  %130 = load i16, i16* %129, align 2, !dbg !9784, !tbaa !3084
  %131 = call zeroext i16 @lwip_htons(i16 zeroext %130) #10, !dbg !9784
  %132 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 1, !dbg !9784
  store i8 %127, i8* %132, align 4, !dbg !9784, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9785
  %133 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 3, !dbg !9787
  store i16 %131, i16* %133, align 8, !dbg !9788, !tbaa !9789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9791
  br label %134, !dbg !9791

; <label>:134:                                    ; preds = %81, %126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9793
  %135 = load i32, i32* %19, align 8, !dbg !9794, !tbaa !1773
  %136 = icmp sgt i32 %135, 0, !dbg !9795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9796
  %137 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 0
  br i1 %136, label %138, label %181, !dbg !9796

; <label>:138:                                    ; preds = %134
  %139 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 1
  br label %140, !dbg !9796

; <label>:140:                                    ; preds = %138, %175
  %141 = phi i64 [ 0, %138 ], [ %176, %175 ]
  %142 = load %struct.iovec*, %struct.iovec** %13, align 8, !dbg !9797, !tbaa !1770
  %143 = getelementptr inbounds %struct.iovec, %struct.iovec* %142, i64 %141, i32 1, !dbg !9799
  %144 = load i64, i64* %143, align 8, !dbg !9799, !tbaa !8600
  %145 = icmp ugt i64 %144, 65535, !dbg !9800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9801
  br i1 %145, label %230, label %146, !dbg !9801

; <label>:146:                                    ; preds = %140
  %147 = call %struct.pbuf* @pbuf_alloc(i32 74, i16 zeroext 0, i32 65) #10, !dbg !9802
  %148 = icmp eq %struct.pbuf* %147, null, !dbg !9804
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9806
  br i1 %148, label %180, label %149, !dbg !9806

; <label>:149:                                    ; preds = %146
  %150 = load %struct.iovec*, %struct.iovec** %13, align 8, !dbg !9807, !tbaa !1770
  %151 = getelementptr inbounds %struct.iovec, %struct.iovec* %150, i64 %141, i32 0, !dbg !9808
  %152 = bitcast i8** %151 to i64*, !dbg !9808
  %153 = load i64, i64* %152, align 8, !dbg !9808, !tbaa !8596
  %154 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %147, i64 0, i32 1, !dbg !9809
  %155 = bitcast i8** %154 to i64*, !dbg !9810
  store i64 %153, i64* %155, align 8, !dbg !9810, !tbaa !9811
  %156 = getelementptr inbounds %struct.iovec, %struct.iovec* %150, i64 %141, i32 1, !dbg !9813
  %157 = load i64, i64* %156, align 8, !dbg !9813, !tbaa !8600
  %158 = trunc i64 %157 to i16, !dbg !9814
  %159 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %147, i64 0, i32 2, !dbg !9815
  store i16 %158, i16* %159, align 8, !dbg !9816, !tbaa !9817
  %160 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %147, i64 0, i32 3, !dbg !9818
  store i16 %158, i16* %160, align 2, !dbg !9819, !tbaa !9820
  %161 = load %struct.pbuf*, %struct.pbuf** %137, align 8, !dbg !9821, !tbaa !9823
  %162 = icmp eq %struct.pbuf* %161, null, !dbg !9824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9825
  br i1 %162, label %163, label %164, !dbg !9825

; <label>:163:                                    ; preds = %149
  store %struct.pbuf* %147, %struct.pbuf** %139, align 8, !dbg !9826, !tbaa !9828
  store %struct.pbuf* %147, %struct.pbuf** %137, align 8, !dbg !9829, !tbaa !9823
  br label %175, !dbg !9830

; <label>:164:                                    ; preds = %149
  %165 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %161, i64 0, i32 2, !dbg !9831
  %166 = load i16, i16* %165, align 8, !dbg !9831, !tbaa !9817
  %167 = zext i16 %166 to i32, !dbg !9834
  %168 = trunc i64 %157 to i32, !dbg !9835
  %169 = and i32 %168, 65535, !dbg !9835
  %170 = add nuw nsw i32 %169, %167, !dbg !9836
  %171 = icmp ugt i32 %170, 65535, !dbg !9837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9838
  br i1 %171, label %172, label %174, !dbg !9838

; <label>:172:                                    ; preds = %164
  %173 = call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %147) #10, !dbg !9839
  br label %230, !dbg !9841

; <label>:174:                                    ; preds = %164
  call void @pbuf_cat(%struct.pbuf* nonnull %161, %struct.pbuf* nonnull %147) #10, !dbg !9842
  br label %175

; <label>:175:                                    ; preds = %163, %174
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9843
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %176 = add nuw nsw i64 %141, 1, !dbg !9844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9845
  %177 = load i32, i32* %19, align 8, !dbg !9794, !tbaa !1773
  %178 = sext i32 %177 to i64, !dbg !9795
  %179 = icmp slt i64 %176, %178, !dbg !9795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9796
  br i1 %179, label %140, label %181, !dbg !9796, !llvm.loop !9846

; <label>:180:                                    ; preds = %146
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9848
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9850
  br label %207, !dbg !9851

; <label>:181:                                    ; preds = %175, %134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9850
  %182 = load %struct.pbuf*, %struct.pbuf** %137, align 8, !dbg !9852, !tbaa !9823
  %183 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %182, i64 0, i32 2, !dbg !9852
  %184 = load i16, i16* %183, align 8, !dbg !9852, !tbaa !9817
  %185 = zext i16 %184 to i64, !dbg !9852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9851
  %186 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 1, !dbg !9856
  %187 = load i8, i8* %186, align 4, !dbg !9856, !tbaa !9860
  %188 = icmp eq i8 %187, 6, !dbg !9856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9861
  br i1 %188, label %189, label %204, !dbg !9861

; <label>:189:                                    ; preds = %181
  %190 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, !dbg !9862
  %191 = load i32, i32* %190, align 8, !dbg !9862, !tbaa !1581
  %192 = icmp eq i32 %191, 0, !dbg !9862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9862
  br i1 %192, label %193, label %204, !dbg !9862

; <label>:193:                                    ; preds = %189
  %194 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !9862
  %195 = load i32, i32* %194, align 4, !dbg !9862, !tbaa !1581
  %196 = icmp eq i32 %195, 0, !dbg !9862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9862
  br i1 %196, label %197, label %204, !dbg !9862

; <label>:197:                                    ; preds = %193
  %198 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !9862
  %199 = load i32, i32* %198, align 8, !dbg !9862, !tbaa !1581
  %200 = icmp eq i32 %199, -65536, !dbg !9862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9863
  br i1 %200, label %201, label %204, !dbg !9863

; <label>:201:                                    ; preds = %197
  %202 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !9864
  %203 = load i32, i32* %202, align 4, !dbg !9864, !tbaa !1581
  store i32 %203, i32* %190, align 8, !dbg !9864, !tbaa !1581
  store i8 0, i8* %186, align 4, !dbg !9866, !tbaa !9860
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9868
  br label %204, !dbg !9868

; <label>:204:                                    ; preds = %201, %197, %193, %189, %181
  %205 = load %struct.netconn*, %struct.netconn** %30, align 8, !dbg !9869, !tbaa !1563
  %206 = call signext i8 @netconn_send(%struct.netconn* %205, %struct.netbuf* nonnull %5) #10, !dbg !9871
  br label %207, !dbg !9872

; <label>:207:                                    ; preds = %180, %204
  %208 = phi i64 [ %185, %204 ], [ 0, %180 ]
  %209 = phi i8 [ %206, %204 ], [ -1, %180 ], !dbg !9873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9874
  call void @netbuf_free(%struct.netbuf* nonnull %5) #10, !dbg !9875
  %210 = call i32 @err_to_errno(i8 signext %209) #10, !dbg !9876
  %211 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9877, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9880
  %212 = icmp ult i64 %211, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9881
  br i1 %212, label %218, label %213, !dbg !9881

; <label>:213:                                    ; preds = %207
  %214 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9882, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9885
  %215 = icmp ugt i64 %214, ptrtoint ([0 x i8]* @_end to i64), !dbg !9881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9886
  br i1 %215, label %218, label %216, !dbg !9886

; <label>:216:                                    ; preds = %213
  %217 = call i32* @__errno() #10, !dbg !9887
  store i32 %210, i32* %217, align 4, !dbg !9890, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9891
  br label %227, !dbg !9892

; <label>:218:                                    ; preds = %213, %207
  %219 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9893, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9897
  %220 = and i64 %219, -65536, !dbg !9899
  %221 = or i64 %220, 4097, !dbg !9899
  %222 = add nsw i64 %221, -1, !dbg !9899
  %223 = inttoptr i64 %222 to i32*, !dbg !9900
  %224 = load i32, i32* %223, align 4096, !dbg !9901, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9902
  %225 = sub nsw i32 0, %210, !dbg !9903
  %226 = sext i32 %225 to i64, !dbg !9903
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %226, i32 %224, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9903, !srcloc !9904
  br label %227

; <label>:227:                                    ; preds = %218, %216
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %228 = icmp eq i8 %209, 0, !dbg !9905
  %229 = select i1 %228, i64 %208, i64 -1, !dbg !9906
  br label %246, !dbg !9907

; <label>:230:                                    ; preds = %140, %172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9908
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %231 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9910, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9913
  %232 = icmp ult i64 %231, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9914
  br i1 %232, label %238, label %233, !dbg !9914

; <label>:233:                                    ; preds = %230
  %234 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9915, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9918
  %235 = icmp ugt i64 %234, ptrtoint ([0 x i8]* @_end to i64), !dbg !9914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9919
  br i1 %235, label %238, label %236, !dbg !9919

; <label>:236:                                    ; preds = %233
  %237 = call i32* @__errno() #10, !dbg !9923
  store i32 122, i32* %237, align 4, !dbg !9924, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9925
  br label %245, !dbg !9926

; <label>:238:                                    ; preds = %233, %230
  %239 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9927, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9931
  %240 = and i64 %239, -65536, !dbg !9933
  %241 = or i64 %240, 4097, !dbg !9933
  %242 = add nsw i64 %241, -1, !dbg !9933
  %243 = inttoptr i64 %242 to i32*, !dbg !9934
  %244 = load i32, i32* %243, align 4096, !dbg !9935, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9936
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -122, i32 %244, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !9937, !srcloc !9938
  br label %245

; <label>:245:                                    ; preds = %238, %236
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @netbuf_free(%struct.netbuf* nonnull %5) #10, !dbg !9939
  br label %246, !dbg !9940

; <label>:246:                                    ; preds = %245, %227
  %247 = phi i64 [ -1, %245 ], [ %229, %227 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9941
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #6, !dbg !9942
  br label %248

; <label>:248:                                    ; preds = %3, %246, %63
  %249 = phi i64 [ %66, %63 ], [ %247, %246 ], [ -1, %3 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !9943
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9943
  ret i64 %249, !dbg !9943
}

; Function Attrs: noredzone nounwind
define dso_local i32 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !9944 {
  %7 = alloca %struct.sock_net_file*, align 8
  %8 = bitcast %struct.sock_net_file** %7 to i8*, !dbg !9985
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !9985
  store %struct.sock_net_file* null, %struct.sock_net_file** %7, align 8, !dbg !9986, !tbaa !1426
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9987, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9990
  %10 = icmp ult i64 %9, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !9991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9991
  br i1 %10, label %33, label %11, !dbg !9991

; <label>:11:                                     ; preds = %6
  %12 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9992, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9995
  %13 = icmp ugt i64 %12, ptrtoint ([0 x i8]* @_end to i64), !dbg !9991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9996
  br i1 %13, label %33, label %14, !dbg !9996

; <label>:14:                                     ; preds = %11
  %15 = tail call %struct.vfscore_file* @vfscore_get_file(i32 %0) #10, !dbg !10001
  %16 = icmp eq %struct.vfscore_file* %15, null, !dbg !10003
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10004
  br i1 %16, label %29, label %17, !dbg !10004

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 6, !dbg !10005
  %19 = load %struct.dentry*, %struct.dentry** %18, align 8, !dbg !10005, !tbaa !2585
  %20 = getelementptr inbounds %struct.dentry, %struct.dentry* %19, i64 0, i32 3, !dbg !10006
  %21 = load %struct.vnode*, %struct.vnode** %20, align 8, !dbg !10006, !tbaa !2847
  %22 = getelementptr inbounds %struct.vnode, %struct.vnode* %21, i64 0, i32 5, !dbg !10007
  %23 = load i32, i32* %22, align 4, !dbg !10007, !tbaa !2595
  %24 = icmp eq i32 %23, 6, !dbg !10008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10009
  br i1 %24, label %25, label %29, !dbg !10009

; <label>:25:                                     ; preds = %17
  %26 = getelementptr inbounds %struct.vfscore_file, %struct.vfscore_file* %15, i64 0, i32 4, !dbg !10010
  %27 = bitcast i8** %26 to %struct.sock_net_file**, !dbg !10010
  %28 = load %struct.sock_net_file*, %struct.sock_net_file** %27, align 8, !dbg !10010, !tbaa !2581
  br label %29, !dbg !10011

; <label>:29:                                     ; preds = %17, %14, %25
  %30 = phi %struct.sock_net_file* [ %28, %25 ], [ inttoptr (i64 -22 to %struct.sock_net_file*), %14 ], [ inttoptr (i64 -9 to %struct.sock_net_file*), %17 ], !dbg !10012
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10014
  store %struct.sock_net_file* %30, %struct.sock_net_file** %7, align 8, !dbg !10015, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10015
  %31 = ptrtoint %struct.sock_net_file* %30 to i64, !dbg !10015
  %32 = bitcast %struct.sock_net_file** %7 to i64*, !dbg !10016
  br label %45, !dbg !10015

; <label>:33:                                     ; preds = %11, %6
  %34 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10017, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10021
  %35 = and i64 %34, -65536, !dbg !10023
  %36 = or i64 %35, 4097, !dbg !10023
  %37 = add nsw i64 %36, -1, !dbg !10023
  %38 = inttoptr i64 %37 to i32*, !dbg !10024
  %39 = load i32, i32* %38, align 4096, !dbg !10025, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10026
  %40 = sext i32 %0 to i64, !dbg !10027
  %41 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call sock_net_file_get\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %40, i32 %39, %struct.sock_net_file* (i32)* nonnull @sock_net_file_get) #6, !dbg !10027, !srcloc !10028
  call void asm sideeffect "mov %r11, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(%struct.sock_net_file** nonnull %7, i64 %41) #6, !dbg !10029, !srcloc !10033
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %42 = bitcast %struct.sock_net_file** %7 to i64*
  %43 = load i64, i64* %42, align 8, !dbg !10016, !tbaa !1426
  %44 = inttoptr i64 %43 to %struct.sock_net_file*
  br label %45

; <label>:45:                                     ; preds = %33, %29
  %46 = phi i64* [ %42, %33 ], [ %32, %29 ], !dbg !10016
  %47 = phi %struct.sock_net_file* [ %44, %33 ], [ %30, %29 ]
  %48 = phi i64 [ %43, %33 ], [ %31, %29 ], !dbg !10016
  %49 = icmp slt i64 %48, 1, !dbg !10016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10016
  br i1 %49, label %50, label %73, !dbg !10016

; <label>:50:                                     ; preds = %45
  %51 = icmp sgt i64 %48, -513, !dbg !10016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10034
  br i1 %51, label %52, label %73, !dbg !10034

; <label>:52:                                     ; preds = %50
  %53 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10035, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10038
  %54 = icmp ult i64 %53, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10039
  br i1 %54, label %63, label %55, !dbg !10039

; <label>:55:                                     ; preds = %52
  %56 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10040, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10043
  %57 = icmp ugt i64 %56, ptrtoint ([0 x i8]* @_end to i64), !dbg !10039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10044
  br i1 %57, label %63, label %58, !dbg !10044

; <label>:58:                                     ; preds = %55
  %59 = load i64, i64* %46, align 8, !dbg !10045, !tbaa !1426
  %60 = trunc i64 %59 to i32, !dbg !10045
  %61 = sub nsw i32 0, %60, !dbg !10049
  %62 = call i32* @__errno() #10, !dbg !10050
  store i32 %61, i32* %62, align 4, !dbg !10051, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10052
  br label %97, !dbg !10045

; <label>:63:                                     ; preds = %55, %52
  %64 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10053, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10057
  %65 = and i64 %64, -65536, !dbg !10059
  %66 = or i64 %65, 4097, !dbg !10059
  %67 = add nsw i64 %66, -1, !dbg !10059
  %68 = inttoptr i64 %67 to i32*, !dbg !10060
  %69 = load i32, i32* %68, align 4096, !dbg !10061, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10062
  %70 = load i64, i64* %46, align 8, !dbg !10063, !tbaa !1426
  %71 = shl i64 %70, 32, !dbg !10063
  %72 = ashr exact i64 %71, 32, !dbg !10063
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %72, i32 %69, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10063, !srcloc !10064
  br label %97

; <label>:73:                                     ; preds = %50, %45
  %74 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %47, i64 0, i32 1, !dbg !10065
  %75 = load i32, i32* %74, align 8, !dbg !10065, !tbaa !1421
  %76 = call i64 @lwip_sendto(i32 %75, i8* %1, i64 %2, i32 %3, %struct.sockaddr* %4, i32 %5) #8, !dbg !10066
  %77 = trunc i64 %76 to i32, !dbg !10066
  %78 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10067, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10070
  %79 = icmp ult i64 %78, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10071
  br i1 %79, label %87, label %80, !dbg !10071

; <label>:80:                                     ; preds = %73
  %81 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10072, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10075
  %82 = icmp ugt i64 %81, ptrtoint ([0 x i8]* @_end to i64), !dbg !10071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10076
  br i1 %82, label %87, label %83, !dbg !10076

; <label>:83:                                     ; preds = %80
  %84 = load %struct.sock_net_file*, %struct.sock_net_file** %7, align 8, !dbg !10077, !tbaa !1426
  %85 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %84, i64 0, i32 0, !dbg !10077
  %86 = load %struct.vfscore_file*, %struct.vfscore_file** %85, align 8, !dbg !10077, !tbaa !2598
  call void @vfscore_put_file(%struct.vfscore_file* %86) #10, !dbg !10077
  br label %97, !dbg !10077

; <label>:87:                                     ; preds = %80, %73
  %88 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10079, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10083
  %89 = and i64 %88, -65536, !dbg !10085
  %90 = or i64 %89, 4097, !dbg !10085
  %91 = add nsw i64 %90, -1, !dbg !10085
  %92 = inttoptr i64 %91 to i32*, !dbg !10086
  %93 = load i32, i32* %92, align 4096, !dbg !10087, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10088
  %94 = bitcast %struct.sock_net_file** %7 to i64**, !dbg !10089
  %95 = load i64*, i64** %94, align 8, !dbg !10089, !tbaa !1426
  %96 = load i64, i64* %95, align 8, !dbg !10089, !tbaa !2598
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call vfscore_put_file\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %96, i32 %93, void (%struct.vfscore_file*)* nonnull @vfscore_put_file) #6, !dbg !10089, !srcloc !10090
  br label %97

; <label>:97:                                     ; preds = %83, %87, %58, %63
  %98 = phi i32 [ -1, %58 ], [ -1, %63 ], [ %77, %83 ], [ %77, %87 ], !dbg !10091
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !10092
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10093
  ret i32 %98, !dbg !10093
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) local_unnamed_addr #0 !dbg !10094 {
  %7 = alloca %struct.netbuf, align 16
  %8 = bitcast %struct.netbuf* %7 to i8*, !dbg !10144
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #6, !dbg !10144
  %9 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !10145
  %10 = icmp eq %struct.lwip_sock* %9, null, !dbg !10147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10149
  br i1 %10, label %173, label %11, !dbg !10149

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %9, i64 0, i32 0, !dbg !10150
  %13 = load %struct.netconn*, %struct.netconn** %12, align 8, !dbg !10150, !tbaa !1563
  %14 = getelementptr inbounds %struct.netconn, %struct.netconn* %13, i64 0, i32 0, !dbg !10150
  %15 = load i32, i32* %14, align 8, !dbg !10150, !tbaa !1570
  %16 = and i32 %15, 240, !dbg !10150
  %17 = icmp eq i32 %16, 16, !dbg !10152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10153
  br i1 %17, label %18, label %20, !dbg !10153

; <label>:18:                                     ; preds = %11
  %19 = tail call i64 @lwip_send(i32 %0, i8* %1, i64 %2, i32 %3) #8, !dbg !10154
  br label %173, !dbg !10156

; <label>:20:                                     ; preds = %11
  %21 = icmp ugt i64 %2, 65535, !dbg !10157
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10158
  br i1 %21, label %22, label %38, !dbg !10158

; <label>:22:                                     ; preds = %20
  %23 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10160, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10163
  %24 = icmp ult i64 %23, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10164
  br i1 %24, label %30, label %25, !dbg !10164

; <label>:25:                                     ; preds = %22
  %26 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10165, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10168
  %27 = icmp ugt i64 %26, ptrtoint ([0 x i8]* @_end to i64), !dbg !10164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10169
  br i1 %27, label %30, label %28, !dbg !10169

; <label>:28:                                     ; preds = %25
  %29 = tail call i32* @__errno() #10, !dbg !10173
  store i32 122, i32* %29, align 4, !dbg !10174, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10175
  br label %37, !dbg !10176

; <label>:30:                                     ; preds = %25, %22
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10177, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10181
  %32 = and i64 %31, -65536, !dbg !10183
  %33 = or i64 %32, 4097, !dbg !10183
  %34 = add nsw i64 %33, -1, !dbg !10183
  %35 = inttoptr i64 %34 to i32*, !dbg !10184
  %36 = load i32, i32* %35, align 4096, !dbg !10185, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10186
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -122, i32 %36, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10187, !srcloc !10188
  br label %37

; <label>:37:                                     ; preds = %30, %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %173, !dbg !10189

; <label>:38:                                     ; preds = %20
  %39 = trunc i64 %2 to i16, !dbg !10190
  %40 = icmp eq %struct.sockaddr* %4, null, !dbg !10192
  %41 = icmp eq i32 %5, 0, !dbg !10192
  %42 = and i1 %40, %41, !dbg !10192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10192
  br i1 %42, label %61, label %43, !dbg !10192

; <label>:43:                                     ; preds = %38
  %44 = icmp eq i32 %5, 16, !dbg !10192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10192
  br i1 %44, label %49, label %45, !dbg !10192

; <label>:45:                                     ; preds = %43
  %46 = icmp eq i32 %5, 28, !dbg !10192
  %47 = icmp ne %struct.sockaddr* %4, null, !dbg !10192
  %48 = and i1 %47, %46, !dbg !10192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10192
  br i1 %48, label %50, label %60, !dbg !10192

; <label>:49:                                     ; preds = %43
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10192
  br i1 %40, label %60, label %50, !dbg !10192

; <label>:50:                                     ; preds = %49, %45
  %51 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 1, !dbg !10192
  %52 = load i8, i8* %51, align 1, !dbg !10192, !tbaa !3663
  %53 = icmp eq i8 %52, 2, !dbg !10192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10192
  br i1 %53, label %56, label %54, !dbg !10192

; <label>:54:                                     ; preds = %50
  %55 = icmp eq i8 %52, 10, !dbg !10192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10192
  br i1 %55, label %56, label %60, !dbg !10192

; <label>:56:                                     ; preds = %54, %50
  %57 = ptrtoint %struct.sockaddr* %4 to i64, !dbg !10192
  %58 = and i64 %57, 3, !dbg !10192
  %59 = icmp eq i64 %58, 0, !dbg !10192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10193
  br i1 %59, label %61, label %60, !dbg !10193

; <label>:60:                                     ; preds = %49, %45, %54, %56
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i64 0, i64 0)) #8, !dbg !10194
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10196
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10196
  unreachable

; <label>:61:                                     ; preds = %38, %56
  %62 = bitcast %struct.netbuf* %7 to <2 x %struct.pbuf*>*, !dbg !10200
  store <2 x %struct.pbuf*> zeroinitializer, <2 x %struct.pbuf*>* %62, align 16, !dbg !10200, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10201
  br i1 %40, label %107, label %63, !dbg !10201

; <label>:63:                                     ; preds = %61
  %64 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, !dbg !10202
  %65 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 1, !dbg !10208
  %66 = load i8, i8* %65, align 1, !dbg !10208, !tbaa !3663
  %67 = icmp eq i8 %66, 10, !dbg !10209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10210
  br i1 %67, label %68, label %94, !dbg !10210

; <label>:68:                                     ; preds = %63
  %69 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, i64 6, !dbg !10211
  %70 = bitcast i8* %69 to <4 x i32>*, !dbg !10211
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !dbg !10211, !tbaa !1581
  %72 = bitcast %struct.ip_addr* %64 to <4 x i32>*, !dbg !10211
  store <4 x i32> %71, <4 x i32>* %72, align 16, !dbg !10211, !tbaa !1581
  %73 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10211
  store i8 0, i8* %73, align 16, !dbg !10211, !tbaa !1581
  %74 = extractelement <4 x i32> %71, i32 0, !dbg !10212
  %75 = zext i32 %74 to i64, !dbg !10212
  %76 = and i64 %75, 49407, !dbg !10212
  %77 = icmp eq i64 %76, 33022, !dbg !10212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10212
  br i1 %77, label %83, label %78, !dbg !10212

; <label>:78:                                     ; preds = %68
  %79 = and i64 %75, 36863, !dbg !10212
  %80 = icmp eq i64 %79, 511, !dbg !10212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10212
  br i1 %80, label %83, label %81, !dbg !10212

; <label>:81:                                     ; preds = %78
  %82 = icmp eq i64 %79, 767, !dbg !10212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10213
  br i1 %82, label %83, label %88, !dbg !10213

; <label>:83:                                     ; preds = %81, %78, %68
  %84 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 1, i32 2, i64 6, !dbg !10214
  %85 = bitcast i8* %84 to i32*, !dbg !10214
  %86 = load i32, i32* %85, align 4, !dbg !10214, !tbaa !3402
  %87 = trunc i32 %86 to i8, !dbg !10214
  store i8 %87, i8* %73, align 16, !dbg !10214, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10214
  br label %88, !dbg !10214

; <label>:88:                                     ; preds = %83, %81
  %89 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, !dbg !10213
  %90 = bitcast [14 x i8]* %89 to i16*, !dbg !10213
  %91 = load i16, i16* %90, align 2, !dbg !10213, !tbaa !3398
  %92 = tail call zeroext i16 @lwip_htons(i16 zeroext %91) #10, !dbg !10213
  %93 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10215
  store i8 6, i8* %93, align 4, !dbg !10216, !tbaa !1626
  br label %104, !dbg !10217

; <label>:94:                                     ; preds = %63
  %95 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, i64 2, !dbg !10218
  %96 = bitcast i8* %95 to i32*, !dbg !10218
  %97 = load i32, i32* %96, align 4, !dbg !10218, !tbaa !3412
  %98 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %64, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !10218
  store i32 %97, i32* %98, align 16, !dbg !10218, !tbaa !1581
  %99 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %4, i64 0, i32 2, !dbg !10218
  %100 = bitcast [14 x i8]* %99 to i16*, !dbg !10218
  %101 = load i16, i16* %100, align 2, !dbg !10218, !tbaa !3411
  %102 = tail call zeroext i16 @lwip_htons(i16 zeroext %101) #10, !dbg !10218
  %103 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10219
  store i8 0, i8* %103, align 4, !dbg !10220, !tbaa !1626
  br label %104

; <label>:104:                                    ; preds = %88, %94
  %105 = phi i8* [ %93, %88 ], [ %103, %94 ], !dbg !10221
  %106 = phi i16 [ %92, %88 ], [ %102, %94 ], !dbg !10224
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10225
  br label %123, !dbg !10226

; <label>:107:                                    ; preds = %61
  %108 = and i32 %15, 8, !dbg !10228
  %109 = icmp eq i32 %108, 0, !dbg !10228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10232
  %110 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, !dbg !10233
  store i32 0, i32* %110, align 16, !dbg !10233, !tbaa !1581
  br i1 %109, label %117, label %111, !dbg !10232

; <label>:111:                                    ; preds = %107
  %112 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10235
  store i32 0, i32* %112, align 4, !dbg !10235, !tbaa !1581
  %113 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10235
  store i32 0, i32* %113, align 8, !dbg !10235, !tbaa !1581
  %114 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10235
  store i32 0, i32* %114, align 4, !dbg !10235, !tbaa !1581
  %115 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10235
  store i8 0, i8* %115, align 16, !dbg !10235, !tbaa !1581
  %116 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10238
  store i8 6, i8* %116, align 4, !dbg !10238, !tbaa !9860
  br label %123, !dbg !10243

; <label>:117:                                    ; preds = %107
  %118 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 1, !dbg !10244
  store i8 0, i8* %118, align 4, !dbg !10244, !tbaa !9860
  %119 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10249
  store i32 0, i32* %119, align 4, !dbg !10249, !tbaa !1581
  %120 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10249
  store i32 0, i32* %120, align 8, !dbg !10249, !tbaa !1581
  %121 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10249
  store i32 0, i32* %121, align 4, !dbg !10249, !tbaa !1581
  %122 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 1, !dbg !10249
  store i8 0, i8* %122, align 16, !dbg !10249, !tbaa !1581
  br label %123

; <label>:123:                                    ; preds = %111, %117, %104
  %124 = phi i8* [ %116, %111 ], [ %118, %117 ], [ %105, %104 ], !dbg !10221
  %125 = phi i16 [ 0, %111 ], [ 0, %117 ], [ %106, %104 ], !dbg !10224
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %126 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 3, !dbg !10251
  store i16 %125, i16* %126, align 8, !dbg !10252, !tbaa !9789
  %127 = call signext i8 @netbuf_ref(%struct.netbuf* nonnull %7, i8* %1, i16 zeroext %39) #10, !dbg !10254
  %128 = icmp eq i8 %127, 0, !dbg !10256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10258
  br i1 %128, label %129, label %150, !dbg !10258

; <label>:129:                                    ; preds = %123
  %130 = load i8, i8* %124, align 4, !dbg !10259, !tbaa !9860
  %131 = icmp eq i8 %130, 6, !dbg !10259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10262
  br i1 %131, label %132, label %147, !dbg !10262

; <label>:132:                                    ; preds = %129
  %133 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 0, !dbg !10263
  %134 = load i32, i32* %133, align 16, !dbg !10263, !tbaa !1581
  %135 = icmp eq i32 %134, 0, !dbg !10263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10263
  br i1 %135, label %136, label %147, !dbg !10263

; <label>:136:                                    ; preds = %132
  %137 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 1, !dbg !10263
  %138 = load i32, i32* %137, align 4, !dbg !10263, !tbaa !1581
  %139 = icmp eq i32 %138, 0, !dbg !10263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10263
  br i1 %139, label %140, label %147, !dbg !10263

; <label>:140:                                    ; preds = %136
  %141 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 2, !dbg !10263
  %142 = load i32, i32* %141, align 8, !dbg !10263, !tbaa !1581
  %143 = icmp eq i32 %142, -65536, !dbg !10263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10264
  br i1 %143, label %144, label %147, !dbg !10264

; <label>:144:                                    ; preds = %140
  %145 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i64 3, !dbg !10265
  %146 = load i32, i32* %145, align 4, !dbg !10265, !tbaa !1581
  store i32 %146, i32* %133, align 16, !dbg !10265, !tbaa !1581
  store i8 0, i8* %124, align 4, !dbg !10267, !tbaa !9860
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10269
  br label %147, !dbg !10269

; <label>:147:                                    ; preds = %144, %140, %136, %132, %129
  %148 = load %struct.netconn*, %struct.netconn** %12, align 8, !dbg !10270, !tbaa !1563
  %149 = call signext i8 @netconn_send(%struct.netconn* %148, %struct.netbuf* nonnull %7) #10, !dbg !10271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10272
  br label %150, !dbg !10272

; <label>:150:                                    ; preds = %147, %123
  %151 = phi i8 [ %149, %147 ], [ %127, %123 ], !dbg !10273
  call void @netbuf_free(%struct.netbuf* nonnull %7) #10, !dbg !10274
  %152 = call i32 @err_to_errno(i8 signext %151) #10, !dbg !10275
  %153 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10276, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10279
  %154 = icmp ult i64 %153, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10280
  br i1 %154, label %160, label %155, !dbg !10280

; <label>:155:                                    ; preds = %150
  %156 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10281, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10284
  %157 = icmp ugt i64 %156, ptrtoint ([0 x i8]* @_end to i64), !dbg !10280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10285
  br i1 %157, label %160, label %158, !dbg !10285

; <label>:158:                                    ; preds = %155
  %159 = call i32* @__errno() #10, !dbg !10286
  store i32 %152, i32* %159, align 4, !dbg !10289, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10290
  br label %169, !dbg !10291

; <label>:160:                                    ; preds = %155, %150
  %161 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10292, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10296
  %162 = and i64 %161, -65536, !dbg !10298
  %163 = or i64 %162, 4097, !dbg !10298
  %164 = add nsw i64 %163, -1, !dbg !10298
  %165 = inttoptr i64 %164 to i32*, !dbg !10299
  %166 = load i32, i32* %165, align 4096, !dbg !10300, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10301
  %167 = sub nsw i32 0, %152, !dbg !10302
  %168 = sext i32 %167 to i64, !dbg !10302
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %168, i32 %166, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10302, !srcloc !10303
  br label %169

; <label>:169:                                    ; preds = %160, %158
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %170 = icmp eq i8 %151, 0, !dbg !10304
  %171 = and i64 %2, 65535, !dbg !10305
  %172 = select i1 %170, i64 %171, i64 -1, !dbg !10306
  br label %173, !dbg !10307

; <label>:173:                                    ; preds = %6, %169, %37, %18
  %174 = phi i64 [ %19, %18 ], [ -1, %37 ], [ %172, %169 ], [ -1, %6 ], !dbg !10308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10308
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #6, !dbg !10310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10310
  ret i64 %174, !dbg !10310
}

; Function Attrs: noredzone nounwind
define dso_local i32 @socketpair(i32, i32, i32, i32* nocapture readnone) local_unnamed_addr #0 !dbg !10311 {
  %5 = tail call i32* @__errno() #10, !dbg !10323
  store i32 134, i32* %5, align 4, !dbg !10324, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10325
  ret i32 -1, !dbg !10325
}

; Function Attrs: noredzone nounwind
define dso_local i32 @if_nametoindex(i8*) local_unnamed_addr #0 !dbg !10326 {
  %2 = tail call i32 @lwip_if_nametoindex(i8* %0) #10, !dbg !10333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10335
  ret i32 %2, !dbg !10335
}

; Function Attrs: noredzone
declare dso_local i32 @lwip_if_nametoindex(i8*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i8* @if_indextoname(i32, i8*) local_unnamed_addr #0 !dbg !10336 {
  %3 = tail call i8* @lwip_if_indextoname(i32 %0, i8* %1) #10, !dbg !10345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10347
  ret i8* %3, !dbg !10347
}

; Function Attrs: noredzone
declare dso_local i8* @lwip_if_indextoname(i32, i8*) local_unnamed_addr #5

; Function Attrs: norecurse noredzone nounwind
define dso_local void @lwip_socket_thread_init() local_unnamed_addr #7 !dbg !10348 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10349
  ret void, !dbg !10349
}

; Function Attrs: norecurse noredzone nounwind
define dso_local void @lwip_socket_thread_cleanup() local_unnamed_addr #7 !dbg !10350 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10351
  ret void, !dbg !10351
}

; Function Attrs: noredzone nounwind
define dso_local %struct.lwip_sock* @lwip_socket_dbg_get_socket(i32) local_unnamed_addr #0 !dbg !10352 {
  %2 = icmp ugt i32 %0, 63, !dbg !10359
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10359
  %3 = sext i32 %0 to i64, !dbg !10360
  %4 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %3, !dbg !10360
  %5 = select i1 %2, %struct.lwip_sock* null, %struct.lwip_sock* %4, !dbg !10359
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10363
  ret %struct.lwip_sock* %5, !dbg !10363
}

; Function Attrs: noredzone nounwind
define internal fastcc %struct.lwip_sock* @get_socket(i32) unnamed_addr #0 !dbg !10364 {
  %2 = icmp ugt i32 %0, 63, !dbg !10384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10384
  br i1 %2, label %3, label %4, !dbg !10384

; <label>:3:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10390
  br label %10, !dbg !10390

; <label>:4:                                      ; preds = %1
  %5 = sext i32 %0 to i64, !dbg !10391
  %6 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %5, !dbg !10391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10390
  %7 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %6, i64 0, i32 0, !dbg !10393
  %8 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !10393, !tbaa !1563
  %9 = icmp eq %struct.netconn* %8, null, !dbg !10394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10395
  br i1 %9, label %10, label %25, !dbg !10395

; <label>:10:                                     ; preds = %3, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10399
  %11 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10400, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10403
  %12 = icmp ult i64 %11, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10404
  br i1 %12, label %18, label %13, !dbg !10404

; <label>:13:                                     ; preds = %10
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10405, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10408
  %15 = icmp ugt i64 %14, ptrtoint ([0 x i8]* @_end to i64), !dbg !10404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10409
  br i1 %15, label %18, label %16, !dbg !10409

; <label>:16:                                     ; preds = %13
  %17 = tail call i32* @__errno() #10, !dbg !10413
  store i32 9, i32* %17, align 4, !dbg !10414, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10415
  br label %26, !dbg !10416

; <label>:18:                                     ; preds = %13, %10
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10417, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10421
  %20 = and i64 %19, -65536, !dbg !10423
  %21 = or i64 %20, 4097, !dbg !10423
  %22 = add nsw i64 %21, -1, !dbg !10423
  %23 = inttoptr i64 %22 to i32*, !dbg !10424
  %24 = load i32, i32* %23, align 4096, !dbg !10425, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10426
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -9, i32 %24, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10427, !srcloc !10428
  br label %26

; <label>:25:                                     ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10397
  br label %26, !dbg !10430

; <label>:26:                                     ; preds = %16, %18, %25
  %27 = phi %struct.lwip_sock* [ %6, %25 ], [ null, %18 ], [ null, %16 ], !dbg !10431
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10432
  ret %struct.lwip_sock* %27, !dbg !10432
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_accept(%struct.netconn*, %struct.netconn**) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @err_to_errno(i8 signext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @alloc_socket(%struct.netconn*, i32) unnamed_addr #0 !dbg !10433 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10444
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10446
  br label %3, !dbg !10446

; <label>:3:                                      ; preds = %2, %29
  %4 = phi i64 [ 0, %2 ], [ %30, %29 ]
  %5 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !10447
  %6 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %4, i32 0, !dbg !10452
  %7 = load %struct.netconn*, %struct.netconn** %6, align 8, !dbg !10452, !tbaa !1563
  %8 = icmp eq %struct.netconn* %7, null, !dbg !10454
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10455
  br i1 %8, label %9, label %29, !dbg !10455

; <label>:9:                                      ; preds = %3
  %10 = and i64 %4, 4294967295, !dbg !10454
  store %struct.netconn* %0, %struct.netconn** %6, align 8, !dbg !10456, !tbaa !1563
  tail call void @ukplat_lcpu_restore_irqf(i64 %5) #10, !dbg !10458
  %11 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 1, !dbg !10459
  %12 = bitcast %union.lwip_sock_lastdata* %11 to %struct.pbuf**, !dbg !10460
  store %struct.pbuf* null, %struct.pbuf** %12, align 8, !dbg !10461, !tbaa !1581
  %13 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 5, !dbg !10462
  %14 = load i8, i8* %13, align 2, !dbg !10462, !tbaa !5232
  %15 = icmp eq i8 %14, 0, !dbg !10462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10465
  br i1 %15, label %17, label %16, !dbg !10465

; <label>:16:                                     ; preds = %9
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !10466
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10469
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10469
  unreachable

; <label>:17:                                     ; preds = %9
  %18 = trunc i64 %4 to i32, !dbg !10443
  %19 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 2, !dbg !10473
  store i16 0, i16* %19, align 8, !dbg !10474, !tbaa !10475
  %20 = getelementptr inbounds %struct.netconn, %struct.netconn* %0, i64 0, i32 0, !dbg !10476
  %21 = load i32, i32* %20, align 8, !dbg !10476, !tbaa !1570
  %22 = and i32 %21, 240, !dbg !10476
  %23 = icmp ne i32 %22, 16, !dbg !10477
  %24 = icmp ne i32 %1, 0, !dbg !10478
  %25 = or i1 %24, %23, !dbg !10476
  %26 = zext i1 %25 to i16, !dbg !10479
  %27 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 3, !dbg !10480
  store i16 %26, i16* %27, align 2, !dbg !10481, !tbaa !10482
  %28 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %10, i32 4, !dbg !10483
  store i16 0, i16* %28, align 4, !dbg !10484, !tbaa !10485
  br label %32, !dbg !10486

; <label>:29:                                     ; preds = %3
  tail call void @ukplat_lcpu_restore_irqf(i64 %5) #10, !dbg !10487
  %30 = add nuw nsw i64 %4, 1, !dbg !10488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10489
  %31 = icmp ult i64 %30, 64, !dbg !10490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10446
  br i1 %31, label %3, label %32, !dbg !10446, !llvm.loop !10491

; <label>:32:                                     ; preds = %29, %17
  %33 = phi i32 [ %18, %17 ], [ -1, %29 ], !dbg !10493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10494
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10495
  ret i32 %33, !dbg !10495
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_delete(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i64 @ukplat_lcpu_save_irqf() local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @ukplat_lcpu_restore_irqf(i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sys_mutex_lock(%struct.sys_mutex_t*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sys_mutex_unlock(%struct.sys_mutex_t*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_getaddr(%struct.netconn*, %struct.ip_addr*, i16*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc void @free_socket(%struct.lwip_sock* nocapture, i32) unnamed_addr #0 !dbg !3287 {
  %3 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !10498
  %4 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 1, !dbg !10507
  %5 = bitcast %union.lwip_sock_lastdata* %4 to %struct.pbuf**, !dbg !10507
  %6 = load %struct.pbuf*, %struct.pbuf** %5, align 8, !dbg !10507
  store %struct.pbuf* null, %struct.pbuf** %5, align 8, !dbg !10508, !tbaa !1581
  %7 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !10509
  %8 = load %struct.netconn*, %struct.netconn** %7, align 8, !dbg !10509, !tbaa !1563
  store %struct.netconn* null, %struct.netconn** %7, align 8, !dbg !10510, !tbaa !1563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10511
  tail call void @ukplat_lcpu_restore_irqf(i64 %3) #10, !dbg !10513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10514
  %9 = icmp eq %struct.pbuf* %6, null, !dbg !10519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10520
  %10 = bitcast %struct.pbuf* %6 to %struct.netbuf*, !dbg !10520
  br i1 %9, label %17, label %11, !dbg !10520

; <label>:11:                                     ; preds = %2
  %12 = icmp eq i32 %1, 0, !dbg !10521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10522
  br i1 %12, label %15, label %13, !dbg !10522

; <label>:13:                                     ; preds = %11
  %14 = tail call zeroext i8 @pbuf_free(%struct.pbuf* nonnull %6) #10, !dbg !10523
  br label %16, !dbg !10524

; <label>:15:                                     ; preds = %11
  tail call void @netbuf_delete(%struct.netbuf* %10) #10, !dbg !10525
  br label %16

; <label>:16:                                     ; preds = %13, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %17, !dbg !10527

; <label>:17:                                     ; preds = %16, %2
  %18 = icmp eq %struct.netconn* %8, null, !dbg !10527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10528
  br i1 %18, label %21, label %19, !dbg !10528

; <label>:19:                                     ; preds = %17
  %20 = tail call signext i8 @netconn_delete(%struct.netconn* nonnull %8) #10, !dbg !10529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10530
  br label %21, !dbg !10530

; <label>:21:                                     ; preds = %17, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10533
  ret void, !dbg !10533
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @lwip_htons(i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_bind(%struct.netconn*, %struct.ip_addr*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_prepare_delete(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_disconnect(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_connect(%struct.netconn*, %struct.ip_addr*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_listen_with_backlog(%struct.netconn*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i64 @lwip_recv_tcp(%struct.lwip_sock*, i8*, i64, i32) unnamed_addr #0 !dbg !10534 {
  %5 = alloca %struct.pbuf*, align 8
  %6 = icmp sgt i64 %2, -1, !dbg !10575
  %7 = select i1 %6, i64 %2, i64 9223372036854775807, !dbg !10576
  %8 = icmp eq %struct.lwip_sock* %0, null, !dbg !10578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10581
  br i1 %8, label %9, label %10, !dbg !10581

; <label>:9:                                      ; preds = %4
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0)) #8, !dbg !10582
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10585
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10585
  unreachable

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !10589
  %12 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !10589, !tbaa !1563
  %13 = getelementptr inbounds %struct.netconn, %struct.netconn* %12, i64 0, i32 0, !dbg !10589
  %14 = load i32, i32* %13, align 8, !dbg !10589, !tbaa !1570
  %15 = and i32 %14, 240, !dbg !10589
  %16 = icmp eq i32 %15, 16, !dbg !10589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10592
  br i1 %16, label %18, label %17, !dbg !10592

; <label>:17:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #8, !dbg !10593
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10596
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10596
  unreachable

; <label>:18:                                     ; preds = %10
  %19 = and i32 %3, 8, !dbg !10600
  %20 = icmp eq i32 %19, 0, !dbg !10600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10602
  br i1 %20, label %22, label %21, !dbg !10602

; <label>:21:                                     ; preds = %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10603
  br label %22, !dbg !10603

; <label>:22:                                     ; preds = %18, %21
  %23 = phi i8 [ 12, %21 ], [ 8, %18 ], !dbg !10605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10606
  %24 = bitcast %struct.pbuf** %5 to i8*
  %25 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 1
  %26 = bitcast %union.lwip_sock_lastdata* %25 to %struct.pbuf**
  %27 = and i32 %3, 1
  %28 = icmp eq i32 %27, 0
  br label %29, !dbg !10606

; <label>:29:                                     ; preds = %104, %22
  %30 = phi i64 [ %7, %22 ], [ %87, %104 ], !dbg !10607
  %31 = phi i64 [ 0, %22 ], [ %83, %104 ], !dbg !10607
  %32 = phi i8 [ %23, %22 ], [ %105, %104 ], !dbg !10607
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6, !dbg !10608
  %33 = load %struct.pbuf*, %struct.pbuf** %26, align 8, !dbg !10609, !tbaa !1581
  %34 = icmp eq %struct.pbuf* %33, null, !dbg !10610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10611
  br i1 %34, label %36, label %35, !dbg !10611

; <label>:35:                                     ; preds = %29
  store %struct.pbuf* %33, %struct.pbuf** %5, align 8, !dbg !10613, !tbaa !1426
  br label %68, !dbg !10615

; <label>:36:                                     ; preds = %29
  %37 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !10616, !tbaa !1563
  %38 = call signext i8 @netconn_recv_tcp_pbuf_flags(%struct.netconn* %37, %struct.pbuf** nonnull %5, i8 zeroext %32) #10, !dbg !10617
  %39 = icmp eq i8 %38, 0, !dbg !10619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10620
  br i1 %39, label %63, label %40, !dbg !10620

; <label>:40:                                     ; preds = %36
  %41 = icmp eq i64 %31, 0, !dbg !10621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10623
  br i1 %41, label %42, label %100, !dbg !10623

; <label>:42:                                     ; preds = %40
  %43 = call i32 @err_to_errno(i8 signext %38) #10, !dbg !10624
  %44 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10625, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10628
  %45 = icmp ult i64 %44, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10629
  br i1 %45, label %51, label %46, !dbg !10629

; <label>:46:                                     ; preds = %42
  %47 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10630, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10633
  %48 = icmp ugt i64 %47, ptrtoint ([0 x i8]* @_end to i64), !dbg !10629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10634
  br i1 %48, label %51, label %49, !dbg !10634

; <label>:49:                                     ; preds = %46
  %50 = call i32* @__errno() #10, !dbg !10635
  store i32 %43, i32* %50, align 4, !dbg !10638, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10639
  br label %60, !dbg !10640

; <label>:51:                                     ; preds = %46, %42
  %52 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10641, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10645
  %53 = and i64 %52, -65536, !dbg !10647
  %54 = or i64 %53, 4097, !dbg !10647
  %55 = add nsw i64 %54, -1, !dbg !10647
  %56 = inttoptr i64 %55 to i32*, !dbg !10648
  %57 = load i32, i32* %56, align 4096, !dbg !10649, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10650
  %58 = sub nsw i32 0, %43, !dbg !10651
  %59 = sext i32 %58 to i64, !dbg !10651
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %59, i32 %57, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10651, !srcloc !10652
  br label %60

; <label>:60:                                     ; preds = %49, %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %61 = icmp ne i8 %38, -15, !dbg !10653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10655
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10656
  %62 = sext i1 %61 to i64, !dbg !10658
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6, !dbg !10660
  br label %130

; <label>:63:                                     ; preds = %36
  %64 = load %struct.pbuf*, %struct.pbuf** %5, align 8, !dbg !10661, !tbaa !1426
  %65 = icmp eq %struct.pbuf* %64, null, !dbg !10661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10664
  br i1 %65, label %66, label %67, !dbg !10664

; <label>:66:                                     ; preds = %63
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)) #8, !dbg !10665
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10668
  call void @ukplat_terminate(i32 3) #9, !dbg !10668
  unreachable

; <label>:67:                                     ; preds = %63
  store %struct.pbuf* %64, %struct.pbuf** %26, align 8, !dbg !10672, !tbaa !1581
  br label %68

; <label>:68:                                     ; preds = %67, %35
  %69 = phi %struct.pbuf* [ %64, %67 ], [ %33, %35 ], !dbg !10673
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %70 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %69, i64 0, i32 2, !dbg !10675
  %71 = load i16, i16* %70, align 8, !dbg !10675, !tbaa !9817
  %72 = zext i16 %71 to i64, !dbg !10673
  %73 = icmp sgt i64 %30, %72, !dbg !10676
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10677
  br i1 %73, label %74, label %75, !dbg !10677

; <label>:74:                                     ; preds = %68
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10679
  br label %78, !dbg !10679

; <label>:75:                                     ; preds = %68
  %76 = trunc i64 %30 to i16, !dbg !10681
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %77 = and i64 %30, 65535, !dbg !10683
  br label %78

; <label>:78:                                     ; preds = %75, %74
  %79 = phi i64 [ %77, %75 ], [ %72, %74 ], !dbg !10683
  %80 = phi i16 [ %76, %75 ], [ %71, %74 ], !dbg !10684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10685
  %81 = getelementptr inbounds i8, i8* %1, i64 %31, !dbg !10686
  %82 = call zeroext i16 @pbuf_copy_partial(%struct.pbuf* nonnull %69, i8* %81, i16 zeroext %80, i16 zeroext 0) #10, !dbg !10687
  %83 = add nuw nsw i64 %31, %79, !dbg !10688
  %84 = icmp slt i64 %30, %79, !dbg !10689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10692
  br i1 %84, label %85, label %86, !dbg !10692

; <label>:85:                                     ; preds = %78
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0)) #8, !dbg !10693
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10696
  call void @ukplat_terminate(i32 3) #9, !dbg !10696
  unreachable

; <label>:86:                                     ; preds = %78
  %87 = sub nsw i64 %30, %79, !dbg !10700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10701
  br i1 %28, label %88, label %102, !dbg !10701

; <label>:88:                                     ; preds = %86
  %89 = load %struct.pbuf*, %struct.pbuf** %5, align 8, !dbg !10702, !tbaa !1426
  %90 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %89, i64 0, i32 2, !dbg !10702
  %91 = load i16, i16* %90, align 8, !dbg !10702, !tbaa !9817
  %92 = icmp ult i16 %91, %80, !dbg !10702
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10707
  br i1 %92, label %93, label %94, !dbg !10707

; <label>:93:                                     ; preds = %88
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0)) #8, !dbg !10708
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10711
  call void @ukplat_terminate(i32 3) #9, !dbg !10711
  unreachable

; <label>:94:                                     ; preds = %88
  %95 = icmp ugt i16 %91, %80, !dbg !10715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10717
  br i1 %95, label %96, label %98, !dbg !10717

; <label>:96:                                     ; preds = %94
  %97 = call %struct.pbuf* @pbuf_free_header(%struct.pbuf* %89, i16 zeroext %80) #10, !dbg !10718
  store %struct.pbuf* %97, %struct.pbuf** %26, align 8, !dbg !10720, !tbaa !1581
  br label %101, !dbg !10721

; <label>:98:                                     ; preds = %94
  store %struct.pbuf* null, %struct.pbuf** %26, align 8, !dbg !10722, !tbaa !1581
  %99 = call zeroext i8 @pbuf_free(%struct.pbuf* %89) #10, !dbg !10724
  br label %101

; <label>:100:                                    ; preds = %40
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10725
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6, !dbg !10660
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10727
  br label %108, !dbg !10727

; <label>:101:                                    ; preds = %96, %98
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %102, !dbg !10660

; <label>:102:                                    ; preds = %101, %86
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10660
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6, !dbg !10660
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %103 = icmp sgt i64 %87, 0, !dbg !10729
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10730
  br i1 %103, label %104, label %106, !dbg !10730

; <label>:104:                                    ; preds = %102
  %105 = or i8 %32, 20, !dbg !10731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10732
  br i1 %28, label %29, label %106, !dbg !10732, !llvm.loop !10733

; <label>:106:                                    ; preds = %102, %104
  %107 = icmp eq i64 %83, 0, !dbg !10735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10727
  br i1 %107, label %113, label %108, !dbg !10727

; <label>:108:                                    ; preds = %106, %100
  %109 = phi i64 [ %31, %100 ], [ %83, %106 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10736
  br i1 %28, label %110, label %113, !dbg !10736

; <label>:110:                                    ; preds = %108
  %111 = load %struct.netconn*, %struct.netconn** %11, align 8, !dbg !10737, !tbaa !1563
  %112 = call signext i8 @netconn_tcp_recvd(%struct.netconn* %111, i64 %109) #10, !dbg !10739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10740
  br label %113, !dbg !10740

; <label>:113:                                    ; preds = %106, %108, %110
  %114 = phi i64 [ %109, %108 ], [ 0, %106 ], [ %109, %110 ]
  %115 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10742, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10745
  %116 = icmp ult i64 %115, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !10746
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10746
  br i1 %116, label %122, label %117, !dbg !10746

; <label>:117:                                    ; preds = %113
  %118 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10747, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10750
  %119 = icmp ugt i64 %118, ptrtoint ([0 x i8]* @_end to i64), !dbg !10746
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10751
  br i1 %119, label %122, label %120, !dbg !10751

; <label>:120:                                    ; preds = %117
  %121 = call i32* @__errno() #10, !dbg !10755
  store i32 0, i32* %121, align 4, !dbg !10756, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10757
  br label %129, !dbg !10758

; <label>:122:                                    ; preds = %117, %113
  %123 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10759, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10763
  %124 = and i64 %123, -65536, !dbg !10765
  %125 = or i64 %124, 4097, !dbg !10765
  %126 = add nsw i64 %125, -1, !dbg !10765
  %127 = inttoptr i64 %126 to i32*, !dbg !10766
  %128 = load i32, i32* %127, align 4096, !dbg !10767, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10768
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %128, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !10769, !srcloc !10770
  br label %129

; <label>:129:                                    ; preds = %122, %120
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %130, !dbg !10771

; <label>:130:                                    ; preds = %60, %129
  %131 = phi i64 [ %114, %129 ], [ %62, %60 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10772
  ret i64 %131, !dbg !10772
}

; Function Attrs: noredzone nounwind
define internal fastcc signext i8 @lwip_recvfrom_udp_raw(%struct.lwip_sock* nocapture, i32, %struct.msghdr*, i16*) unnamed_addr #0 !dbg !10773 {
  %5 = alloca %struct.netbuf*, align 8
  %6 = bitcast %struct.netbuf** %5 to i8*, !dbg !10801
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !10801
  %7 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 2, !dbg !10802
  %8 = load %struct.iovec*, %struct.iovec** %7, align 8, !dbg !10802, !tbaa !1770
  %9 = icmp eq %struct.iovec* %8, null, !dbg !10802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10802
  br i1 %9, label %10, label %15, !dbg !10802

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 3, !dbg !10802
  %12 = load i32, i32* %11, align 8, !dbg !10802, !tbaa !1773
  %13 = icmp slt i32 %12, 1, !dbg !10802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10805
  br i1 %13, label %15, label %14, !dbg !10805

; <label>:14:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.37, i64 0, i64 0)) #8, !dbg !10806
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10809
  tail call void @ukplat_terminate(i32 3) #9, !dbg !10809
  unreachable

; <label>:15:                                     ; preds = %4, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10813
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %16 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 1, i32 0, !dbg !10814
  %17 = load %struct.netbuf*, %struct.netbuf** %16, align 8, !dbg !10814, !tbaa !1581
  store %struct.netbuf* %17, %struct.netbuf** %5, align 8, !dbg !10816, !tbaa !1426
  %18 = icmp eq %struct.netbuf* %17, null, !dbg !10817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10819
  br i1 %18, label %19, label %32, !dbg !10819

; <label>:19:                                     ; preds = %15
  %20 = lshr i32 %1, 1
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 4
  %23 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !10821
  %24 = load %struct.netconn*, %struct.netconn** %23, align 8, !dbg !10821, !tbaa !1563
  %25 = call signext i8 @netconn_recv_udp_raw_netbuf_flags(%struct.netconn* %24, %struct.netbuf** nonnull %5, i8 zeroext %22) #10, !dbg !10823
  %26 = icmp eq i8 %25, 0, !dbg !10825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10827
  br i1 %26, label %27, label %97, !dbg !10827

; <label>:27:                                     ; preds = %19
  %28 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !10828, !tbaa !1426
  %29 = icmp eq %struct.netbuf* %28, null, !dbg !10828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10831
  br i1 %29, label %30, label %31, !dbg !10831

; <label>:30:                                     ; preds = %27
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0)) #8, !dbg !10832
  call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !10835
  call void @ukplat_terminate(i32 3) #9, !dbg !10835
  unreachable

; <label>:31:                                     ; preds = %27
  store %struct.netbuf* %28, %struct.netbuf** %16, align 8, !dbg !10839, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10840
  br label %32, !dbg !10840

; <label>:32:                                     ; preds = %31, %15
  %33 = phi %struct.netbuf* [ %28, %31 ], [ %17, %15 ], !dbg !10841
  %34 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %33, i64 0, i32 0, !dbg !10842
  %35 = load %struct.pbuf*, %struct.pbuf** %34, align 8, !dbg !10842, !tbaa !9823
  %36 = getelementptr inbounds %struct.pbuf, %struct.pbuf* %35, i64 0, i32 2, !dbg !10843
  %37 = load i16, i16* %36, align 8, !dbg !10843, !tbaa !9817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10847
  %38 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 3, !dbg !10848
  %39 = load i32, i32* %38, align 8, !dbg !10848, !tbaa !1773
  %40 = icmp sgt i32 %39, 0, !dbg !10849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10850
  br i1 %40, label %41, label %65, !dbg !10850

; <label>:41:                                     ; preds = %32, %45
  %42 = phi i64 [ %61, %45 ], [ 0, %32 ]
  %43 = phi i16 [ %60, %45 ], [ 0, %32 ]
  %44 = icmp ugt i16 %37, %43, !dbg !10851
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10852
  br i1 %44, label %45, label %65, !dbg !10852

; <label>:45:                                     ; preds = %41
  %46 = sub i16 %37, %43, !dbg !10853
  %47 = load %struct.iovec*, %struct.iovec** %7, align 8, !dbg !10855, !tbaa !1770
  %48 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 %42, i32 1, !dbg !10857
  %49 = load i64, i64* %48, align 8, !dbg !10857, !tbaa !8600
  %50 = zext i16 %46 to i64, !dbg !10858
  %51 = icmp ugt i64 %49, %50, !dbg !10859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10860
  %52 = trunc i64 %49 to i16, !dbg !10862
  %53 = select i1 %51, i16 %46, i16 %52, !dbg !10860
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %54 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !10864, !tbaa !1426
  %55 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %54, i64 0, i32 0, !dbg !10865
  %56 = load %struct.pbuf*, %struct.pbuf** %55, align 8, !dbg !10865, !tbaa !9823
  %57 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i64 %42, i32 0, !dbg !10866
  %58 = load i8*, i8** %57, align 8, !dbg !10866, !tbaa !8596
  %59 = call zeroext i16 @pbuf_copy_partial(%struct.pbuf* %56, i8* %58, i16 zeroext %53, i16 zeroext %43) #10, !dbg !10867
  %60 = add i16 %53, %43, !dbg !10868
  %61 = add nuw nsw i64 %42, 1, !dbg !10869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10870
  %62 = load i32, i32* %38, align 8, !dbg !10848, !tbaa !1773
  %63 = sext i32 %62 to i64, !dbg !10849
  %64 = icmp slt i64 %61, %63, !dbg !10849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10850
  br i1 %64, label %41, label %65, !dbg !10850, !llvm.loop !10871

; <label>:65:                                     ; preds = %41, %45, %32
  %66 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 0, !dbg !10873
  %67 = load i8*, i8** %66, align 8, !dbg !10873, !tbaa !1763
  %68 = icmp eq i8* %67, null, !dbg !10875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10876
  br i1 %68, label %82, label %69, !dbg !10876

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 1, !dbg !10877
  %71 = load i32, i32* %70, align 8, !dbg !10877, !tbaa !1767
  %72 = icmp eq i32 %71, 0, !dbg !10878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10879
  br i1 %72, label %82, label %73, !dbg !10879

; <label>:73:                                     ; preds = %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10883
  %74 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %0, i64 0, i32 0, !dbg !10884
  %75 = load %struct.netconn*, %struct.netconn** %74, align 8, !dbg !10884, !tbaa !1563
  %76 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !10886, !tbaa !1426
  %77 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %76, i64 0, i32 2, !dbg !10886
  %78 = getelementptr inbounds %struct.netbuf, %struct.netbuf* %76, i64 0, i32 3, !dbg !10887
  %79 = load i16, i16* %78, align 8, !dbg !10887, !tbaa !9789
  %80 = bitcast i8* %67 to %struct.sockaddr*, !dbg !10888
  %81 = call fastcc i32 @lwip_sock_make_addr(%struct.netconn* %75, %struct.ip_addr* nonnull %77, i16 zeroext %79, %struct.sockaddr* %80, i32* nonnull %70) #8, !dbg !10889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10890
  br label %82, !dbg !10890

; <label>:82:                                     ; preds = %69, %65, %73
  %83 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 6, !dbg !10891
  store i32 0, i32* %83, align 4, !dbg !10892, !tbaa !1782
  %84 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 4, !dbg !10893
  %85 = load i8*, i8** %84, align 8, !dbg !10893, !tbaa !1776
  %86 = icmp eq i8* %85, null, !dbg !10894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10895
  br i1 %86, label %89, label %87, !dbg !10895

; <label>:87:                                     ; preds = %82
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10897
  %88 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %2, i64 0, i32 5, !dbg !10898
  store i32 0, i32* %88, align 8, !dbg !10901, !tbaa !1779
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10903
  br label %89, !dbg !10903

; <label>:89:                                     ; preds = %82, %87
  %90 = and i32 %1, 1, !dbg !10904
  %91 = icmp eq i32 %90, 0, !dbg !10906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10907
  br i1 %91, label %92, label %94, !dbg !10907

; <label>:92:                                     ; preds = %89
  store %struct.netbuf* null, %struct.netbuf** %16, align 8, !dbg !10908, !tbaa !1581
  %93 = load %struct.netbuf*, %struct.netbuf** %5, align 8, !dbg !10910, !tbaa !1426
  call void @netbuf_delete(%struct.netbuf* %93) #10, !dbg !10911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10912
  br label %94, !dbg !10912

; <label>:94:                                     ; preds = %92, %89
  %95 = icmp eq i16* %3, null, !dbg !10913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10915
  br i1 %95, label %97, label %96, !dbg !10915

; <label>:96:                                     ; preds = %94
  store i16 %37, i16* %3, align 2, !dbg !10916, !tbaa !3084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10918
  br label %97, !dbg !10918

; <label>:97:                                     ; preds = %96, %94, %19
  %98 = phi i8 [ %25, %19 ], [ 0, %94 ], [ 0, %96 ], !dbg !10919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10920
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !10922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10922
  ret i8 %98, !dbg !10922
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_read(i32, i8*, i64) local_unnamed_addr #0 !dbg !10923 {
  %4 = tail call i64 @lwip_recvfrom(i32 %0, i8* %1, i64 %2, i32 0, %struct.sockaddr* null, i32* null) #8, !dbg !10933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10934
  ret i64 %4, !dbg !10934
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_write_partly(%struct.netconn*, i8*, i64, i8 zeroext, i64*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_write_vectors_partly(%struct.netconn*, %struct.netvector*, i16 zeroext, i8 zeroext, i64*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.pbuf* @pbuf_alloc(i32, i16 zeroext, i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i8 @pbuf_free(%struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @pbuf_cat(%struct.pbuf*, %struct.pbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_send(%struct.netconn*, %struct.netbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @netbuf_free(%struct.netbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netbuf_ref(%struct.netbuf*, i8*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netconn* @netconn_new_with_proto_and_callback(i32, i8 zeroext, void (%struct.netconn*, i32, i16)*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal void @event_callback(%struct.netconn*, i32, i16 zeroext) #0 !dbg !10935 {
  %4 = icmp eq %struct.netconn* %0, null, !dbg !10952
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10954
  br i1 %4, label %153, label %5, !dbg !10954

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.netconn, %struct.netconn* %0, i64 0, i32 7, !dbg !10955
  %7 = load i32, i32* %6, align 8, !dbg !10955, !tbaa !2319
  %8 = icmp slt i32 %7, 0, !dbg !10958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10960
  br i1 %8, label %9, label %19, !dbg !10960

; <label>:9:                                      ; preds = %5
  %10 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !10961
  %11 = load i32, i32* %6, align 8, !dbg !10965, !tbaa !2319
  %12 = icmp slt i32 %11, 0, !dbg !10967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10968
  br i1 %12, label %13, label %18, !dbg !10968

; <label>:13:                                     ; preds = %9
  %14 = icmp eq i32 %1, 0, !dbg !10969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10972
  br i1 %14, label %15, label %17, !dbg !10972

; <label>:15:                                     ; preds = %13
  %16 = add nsw i32 %11, -1, !dbg !10973
  store i32 %16, i32* %6, align 8, !dbg !10973, !tbaa !2319
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10975
  br label %17, !dbg !10975

; <label>:17:                                     ; preds = %15, %13
  tail call void @ukplat_lcpu_restore_irqf(i64 %10) #10, !dbg !10976
  br label %153, !dbg !10977

; <label>:18:                                     ; preds = %9
  tail call void @ukplat_lcpu_restore_irqf(i64 %10) #10, !dbg !10978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10979
  br label %19, !dbg !10979

; <label>:19:                                     ; preds = %18, %5
  %20 = phi i32 [ %11, %18 ], [ %7, %5 ], !dbg !10980
  %21 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %20) #8, !dbg !10981
  %22 = icmp eq %struct.lwip_sock* %21, null, !dbg !10983
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10985
  br i1 %22, label %153, label %23, !dbg !10985

; <label>:23:                                     ; preds = %19
  %24 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !10987
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10989
  switch i32 %1, label %45 [
    i32 0, label %25
    i32 1, label %30
    i32 2, label %34
    i32 3, label %41
    i32 4, label %43
  ], !dbg !10989

; <label>:25:                                     ; preds = %23
  %26 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 2, !dbg !10990
  %27 = load i16, i16* %26, align 8, !dbg !10992, !tbaa !10475
  %28 = add i16 %27, 1, !dbg !10992
  store i16 %28, i16* %26, align 8, !dbg !10992, !tbaa !10475
  %29 = icmp sgt i16 %28, 1, !dbg !10993
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10995
  br i1 %29, label %46, label %49, !dbg !10995

; <label>:30:                                     ; preds = %23
  %31 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 2, !dbg !10996
  %32 = load i16, i16* %31, align 8, !dbg !10997, !tbaa !10475
  %33 = add i16 %32, -1, !dbg !10997
  store i16 %33, i16* %31, align 8, !dbg !10997, !tbaa !10475
  br label %46, !dbg !10998

; <label>:34:                                     ; preds = %23
  %35 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 3, !dbg !10999
  %36 = load i16, i16* %35, align 2, !dbg !10999, !tbaa !10482
  %37 = icmp eq i16 %36, 0, !dbg !11001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11002
  br i1 %37, label %39, label %38, !dbg !11002

; <label>:38:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11003
  br label %39, !dbg !11003

; <label>:39:                                     ; preds = %34, %38
  %40 = phi i32 [ 0, %38 ], [ 1, %34 ], !dbg !11005
  store i16 1, i16* %35, align 2, !dbg !11006, !tbaa !10482
  br label %47, !dbg !11007

; <label>:41:                                     ; preds = %23
  %42 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 3, !dbg !11008
  store i16 0, i16* %42, align 2, !dbg !11009, !tbaa !10482
  br label %46, !dbg !11010

; <label>:43:                                     ; preds = %23
  %44 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 4, !dbg !11011
  store i16 1, i16* %44, align 4, !dbg !11012, !tbaa !10485
  br label %47, !dbg !11013

; <label>:45:                                     ; preds = %23
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0)) #8, !dbg !11014
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11019
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11019
  unreachable

; <label>:46:                                     ; preds = %25, %41, %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11025
  br label %151, !dbg !11025

; <label>:47:                                     ; preds = %39, %43
  %48 = phi i32 [ %40, %39 ], [ 1, %43 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11026
  br label %49, !dbg !11027

; <label>:49:                                     ; preds = %47, %25
  %50 = phi i32 [ 1, %25 ], [ %48, %47 ], !dbg !11005
  %51 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 5, !dbg !11027
  %52 = load i8, i8* %51, align 2, !dbg !11027, !tbaa !5232
  %53 = icmp ne i8 %52, 0, !dbg !11028
  %54 = icmp ne i32 %50, 0, !dbg !11029
  %55 = and i1 %54, %53, !dbg !11025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11025
  br i1 %55, label %56, label %151, !dbg !11025

; <label>:56:                                     ; preds = %49
  %57 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 2, !dbg !11030
  %58 = load i16, i16* %57, align 8, !dbg !11030, !tbaa !10475
  %59 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 3, !dbg !11031
  %60 = load i16, i16* %59, align 2, !dbg !11031, !tbaa !10482
  %61 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %21, i64 0, i32 4, !dbg !11032
  %62 = load i16, i16* %61, align 4, !dbg !11032, !tbaa !10485
  tail call void @ukplat_lcpu_restore_irqf(i64 %24) #10, !dbg !11033
  %63 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** @select_cb_list, align 8, !dbg !11051, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11053
  %64 = icmp eq %struct.lwip_select_cb* %63, null, !dbg !11054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11055
  br i1 %64, label %150, label %65, !dbg !11055

; <label>:65:                                     ; preds = %56
  %66 = icmp eq i16 %62, 0, !dbg !11056
  %67 = icmp eq i16 %60, 0, !dbg !11057
  %68 = icmp slt i16 %58, 1, !dbg !11058
  %69 = sext i32 %20 to i64
  %70 = lshr i64 %69, 6
  %71 = and i64 %69, 63
  %72 = shl i64 1, %71
  br label %73, !dbg !11055

; <label>:73:                                     ; preds = %146, %65
  %74 = phi %struct.lwip_select_cb* [ %63, %65 ], [ %148, %146 ]
  %75 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 7, !dbg !11059
  %76 = load i32, i32* %75, align 4, !dbg !11059, !tbaa !11060
  %77 = icmp eq i32 %76, 0, !dbg !11061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11062
  br i1 %77, label %78, label %146, !dbg !11062

; <label>:78:                                     ; preds = %73
  %79 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 5, !dbg !11064
  %80 = load %struct.pollfd*, %struct.pollfd** %79, align 8, !dbg !11064, !tbaa !4116
  %81 = icmp eq %struct.pollfd* %80, null, !dbg !11066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11068
  br i1 %81, label %109, label %82, !dbg !11067

; <label>:82:                                     ; preds = %78
  %83 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 6, !dbg !11092
  %84 = load i32, i32* %83, align 8, !dbg !11092, !tbaa !4120
  %85 = icmp eq i32 %84, 0, !dbg !11093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11094
  br i1 %85, label %140, label %86, !dbg !11094

; <label>:86:                                     ; preds = %82
  %87 = zext i32 %84 to i64
  br label %88, !dbg !11094

; <label>:88:                                     ; preds = %106, %86
  %89 = phi i64 [ 0, %86 ], [ %107, %106 ]
  %90 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %80, i64 %89, i32 0, !dbg !11095
  %91 = load i32, i32* %90, align 4, !dbg !11095, !tbaa !3862
  %92 = icmp eq i32 %91, %20, !dbg !11097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11098
  br i1 %92, label %93, label %106, !dbg !11098

; <label>:93:                                     ; preds = %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11099
  br i1 %68, label %99, label %94, !dbg !11099

; <label>:94:                                     ; preds = %93
  %95 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %80, i64 %89, i32 1, !dbg !11102
  %96 = load i16, i16* %95, align 4, !dbg !11102, !tbaa !3953
  %97 = and i16 %96, 1, !dbg !11103
  %98 = icmp eq i16 %97, 0, !dbg !11104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11105
  br i1 %98, label %99, label %139, !dbg !11105

; <label>:99:                                     ; preds = %94, %93
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11106
  br i1 %67, label %105, label %100, !dbg !11106

; <label>:100:                                    ; preds = %99
  %101 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %80, i64 %89, i32 1, !dbg !11108
  %102 = load i16, i16* %101, align 4, !dbg !11108, !tbaa !3953
  %103 = and i16 %102, 2, !dbg !11109
  %104 = icmp eq i16 %103, 0, !dbg !11110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11111
  br i1 %104, label %105, label %139, !dbg !11111

; <label>:105:                                    ; preds = %100, %99
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11112
  br i1 %66, label %106, label %139, !dbg !11112

; <label>:106:                                    ; preds = %105, %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11113
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %107 = add nuw nsw i64 %89, 1, !dbg !11114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11115
  %108 = icmp ult i64 %107, %87, !dbg !11093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11094
  br i1 %108, label %88, label %140, !dbg !11094, !llvm.loop !11116

; <label>:109:                                    ; preds = %78
  br i1 %68, label %119, label %110, !dbg !11119

; <label>:110:                                    ; preds = %109
  %111 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 2, !dbg !11121
  %112 = load %struct._types_fd_set*, %struct._types_fd_set** %111, align 8, !dbg !11121, !tbaa !5125
  %113 = icmp eq %struct._types_fd_set* %112, null, !dbg !11125
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11126
  br i1 %113, label %119, label %114, !dbg !11126

; <label>:114:                                    ; preds = %110
  %115 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %112, i64 0, i32 0, i64 %70, !dbg !11127
  %116 = load i64, i64* %115, align 8, !dbg !11127, !tbaa !2478
  %117 = and i64 %116, %72, !dbg !11127
  %118 = icmp eq i64 %117, 0, !dbg !11127
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11128
  br i1 %118, label %119, label %141, !dbg !11128

; <label>:119:                                    ; preds = %114, %110, %109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11129
  br i1 %67, label %129, label %120, !dbg !11129

; <label>:120:                                    ; preds = %119
  %121 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 3, !dbg !11130
  %122 = load %struct._types_fd_set*, %struct._types_fd_set** %121, align 8, !dbg !11130, !tbaa !5128
  %123 = icmp eq %struct._types_fd_set* %122, null, !dbg !11134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11135
  br i1 %123, label %129, label %124, !dbg !11135

; <label>:124:                                    ; preds = %120
  %125 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %122, i64 0, i32 0, i64 %70, !dbg !11136
  %126 = load i64, i64* %125, align 8, !dbg !11136, !tbaa !2478
  %127 = and i64 %126, %72, !dbg !11136
  %128 = icmp eq i64 %127, 0, !dbg !11136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11137
  br i1 %128, label %129, label %142, !dbg !11137

; <label>:129:                                    ; preds = %124, %120, %119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11138
  br i1 %66, label %145, label %130, !dbg !11138

; <label>:130:                                    ; preds = %129
  %131 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 4, !dbg !11139
  %132 = load %struct._types_fd_set*, %struct._types_fd_set** %131, align 8, !dbg !11139, !tbaa !5131
  %133 = icmp eq %struct._types_fd_set* %132, null, !dbg !11143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11144
  br i1 %133, label %145, label %134, !dbg !11144

; <label>:134:                                    ; preds = %130
  %135 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %132, i64 0, i32 0, i64 %70, !dbg !11145
  %136 = load i64, i64* %135, align 8, !dbg !11145, !tbaa !2478
  %137 = and i64 %136, %72, !dbg !11145
  %138 = icmp eq i64 %137, 0, !dbg !11145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11146
  br i1 %138, label %145, label %143, !dbg !11146

; <label>:139:                                    ; preds = %105, %100, %94
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11147
  br label %141, !dbg !11148

; <label>:140:                                    ; preds = %106, %82
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11149
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11151
  br label %145, !dbg !11148

; <label>:141:                                    ; preds = %114, %139
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %142, !dbg !11147

; <label>:142:                                    ; preds = %141, %124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11147
  br label %143, !dbg !11147

; <label>:143:                                    ; preds = %142, %134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11148
  store i32 1, i32* %75, align 4, !dbg !11152, !tbaa !11060
  %144 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 8, !dbg !11155
  tail call void @sys_sem_signal(%struct.sys_sem_t* nonnull %144) #10, !dbg !11156
  br label %145, !dbg !11157

; <label>:145:                                    ; preds = %129, %130, %134, %143, %140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11158
  br label %146, !dbg !11158

; <label>:146:                                    ; preds = %145, %73
  %147 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %74, i64 0, i32 0, !dbg !11159
  %148 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** %147, align 8, !dbg !11159, !tbaa !4178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11160
  %149 = icmp eq %struct.lwip_select_cb* %148, null, !dbg !11054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11055
  br i1 %149, label %150, label %73, !dbg !11055, !llvm.loop !11161

; <label>:150:                                    ; preds = %146, %56
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11164
  br label %152, !dbg !11165

; <label>:151:                                    ; preds = %46, %49
  tail call void @ukplat_lcpu_restore_irqf(i64 %24) #10, !dbg !11166
  br label %152

; <label>:152:                                    ; preds = %151, %150
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %153, !dbg !11168

; <label>:153:                                    ; preds = %3, %19, %152, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11168
  ret void, !dbg !11168
}

; Function Attrs: noredzone nounwind
define dso_local i64 @lwip_write(i32, i8*, i64) local_unnamed_addr #0 !dbg !11170 {
  %4 = tail call i64 @lwip_send(i32 %0, i8* %1, i64 %2, i32 0) #8, !dbg !11180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11181
  ret i64 %4, !dbg !11181
}

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_selscan(i32, %struct._types_fd_set* readonly, %struct._types_fd_set* readonly, %struct._types_fd_set* readonly, %struct._types_fd_set* nocapture, %struct._types_fd_set* nocapture, %struct._types_fd_set* nocapture) unnamed_addr #0 !dbg !11182 {
  %8 = alloca %struct._types_fd_set, align 8
  %9 = alloca %struct._types_fd_set, align 8
  %10 = alloca %struct._types_fd_set, align 8
  %11 = bitcast %struct._types_fd_set* %8 to i8*, !dbg !11226
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6, !dbg !11226
  %12 = bitcast %struct._types_fd_set* %9 to i8*, !dbg !11226
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6, !dbg !11226
  %13 = bitcast %struct._types_fd_set* %10 to i8*, !dbg !11226
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6, !dbg !11226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %14 = getelementptr inbounds i8, i8* %11, i64 1, !dbg !11230
  store i8 0, i8* %11, align 8, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %15 = getelementptr inbounds i8, i8* %11, i64 2, !dbg !11230
  store i8 0, i8* %14, align 1, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %16 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !11230
  store i8 0, i8* %15, align 2, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %17 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !11230
  store i8 0, i8* %16, align 1, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %18 = getelementptr inbounds i8, i8* %11, i64 5, !dbg !11230
  store i8 0, i8* %17, align 4, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %19 = getelementptr inbounds i8, i8* %11, i64 6, !dbg !11230
  store i8 0, i8* %18, align 1, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  %20 = getelementptr inbounds i8, i8* %11, i64 7, !dbg !11230
  store i8 0, i8* %19, align 2, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  store i8 0, i8* %20, align 1, !dbg !11230, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %21 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !11235
  store i8 0, i8* %12, align 8, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %22 = getelementptr inbounds i8, i8* %12, i64 2, !dbg !11235
  store i8 0, i8* %21, align 1, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %23 = getelementptr inbounds i8, i8* %12, i64 3, !dbg !11235
  store i8 0, i8* %22, align 2, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %24 = getelementptr inbounds i8, i8* %12, i64 4, !dbg !11235
  store i8 0, i8* %23, align 1, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %25 = getelementptr inbounds i8, i8* %12, i64 5, !dbg !11235
  store i8 0, i8* %24, align 4, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %26 = getelementptr inbounds i8, i8* %12, i64 6, !dbg !11235
  store i8 0, i8* %25, align 1, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  %27 = getelementptr inbounds i8, i8* %12, i64 7, !dbg !11235
  store i8 0, i8* %26, align 2, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  store i8 0, i8* %27, align 1, !dbg !11235, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %28 = getelementptr inbounds i8, i8* %13, i64 1, !dbg !11240
  store i8 0, i8* %13, align 8, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %29 = getelementptr inbounds i8, i8* %13, i64 2, !dbg !11240
  store i8 0, i8* %28, align 1, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %30 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11240
  store i8 0, i8* %29, align 2, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %31 = getelementptr inbounds i8, i8* %13, i64 4, !dbg !11240
  store i8 0, i8* %30, align 1, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %32 = getelementptr inbounds i8, i8* %13, i64 5, !dbg !11240
  store i8 0, i8* %31, align 4, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %33 = getelementptr inbounds i8, i8* %13, i64 6, !dbg !11240
  store i8 0, i8* %32, align 1, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  %34 = getelementptr inbounds i8, i8* %13, i64 7, !dbg !11240
  store i8 0, i8* %33, align 2, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  store i8 0, i8* %34, align 1, !dbg !11240, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11243
  %35 = icmp sgt i32 %0, 0, !dbg !11244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11245
  br i1 %35, label %43, label %36, !dbg !11245

; <label>:36:                                     ; preds = %7
  %37 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %38 = load i64, i64* %37, align 8, !dbg !11246, !tbaa !1581
  %39 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %9, i64 0, i32 0, i64 0
  %40 = load i64, i64* %39, align 8, !dbg !11247, !tbaa !1581
  %41 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %10, i64 0, i32 0, i64 0
  %42 = load i64, i64* %41, align 8, !dbg !11248, !tbaa !1581
  br label %158, !dbg !11245

; <label>:43:                                     ; preds = %7
  %44 = icmp ne %struct._types_fd_set* %1, null
  %45 = icmp eq %struct._types_fd_set* %2, null
  %46 = icmp eq %struct._types_fd_set* %3, null
  %47 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %8, i64 0, i32 0, i64 0
  %48 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %9, i64 0, i32 0, i64 0
  %49 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %10, i64 0, i32 0, i64 0
  %50 = load i64, i64* %47, align 8, !dbg !11249, !tbaa !2478
  %51 = load i64, i64* %48, align 8, !dbg !11252, !tbaa !2478
  %52 = load i64, i64* %49, align 8, !dbg !11255, !tbaa !2478
  %53 = sext i32 %0 to i64, !dbg !11245
  br label %54, !dbg !11245

; <label>:54:                                     ; preds = %43, %150
  %55 = phi i64 [ 0, %43 ], [ %155, %150 ]
  %56 = phi i64 [ %52, %43 ], [ %151, %150 ]
  %57 = phi i64 [ %51, %43 ], [ %152, %150 ]
  %58 = phi i64 [ %50, %43 ], [ %153, %150 ]
  %59 = phi i32 [ 0, %43 ], [ %154, %150 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11258
  br i1 %44, label %60, label %68, !dbg !11258

; <label>:60:                                     ; preds = %54
  %61 = lshr i64 %55, 6, !dbg !11260
  %62 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %61, !dbg !11260
  %63 = load i64, i64* %62, align 8, !dbg !11260, !tbaa !2478
  %64 = and i64 %55, 63, !dbg !11260
  %65 = shl i64 1, %64, !dbg !11260
  %66 = and i64 %63, %65, !dbg !11260
  %67 = icmp eq i64 %66, 0, !dbg !11260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11261
  br i1 %67, label %68, label %86, !dbg !11261

; <label>:68:                                     ; preds = %60, %54
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11262
  br i1 %45, label %77, label %69, !dbg !11262

; <label>:69:                                     ; preds = %68
  %70 = lshr i64 %55, 6, !dbg !11263
  %71 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %70, !dbg !11263
  %72 = load i64, i64* %71, align 8, !dbg !11263, !tbaa !2478
  %73 = and i64 %55, 63, !dbg !11263
  %74 = shl i64 1, %73, !dbg !11263
  %75 = and i64 %72, %74, !dbg !11263
  %76 = icmp eq i64 %75, 0, !dbg !11263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11264
  br i1 %76, label %77, label %86, !dbg !11264

; <label>:77:                                     ; preds = %69, %68
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11265
  br i1 %46, label %150, label %78, !dbg !11265

; <label>:78:                                     ; preds = %77
  %79 = lshr i64 %55, 6, !dbg !11266
  %80 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %79, !dbg !11266
  %81 = load i64, i64* %80, align 8, !dbg !11266, !tbaa !2478
  %82 = and i64 %55, 63, !dbg !11266
  %83 = shl i64 1, %82, !dbg !11266
  %84 = and i64 %81, %83, !dbg !11266
  %85 = icmp eq i64 %84, 0, !dbg !11266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11267
  br i1 %85, label %150, label %86, !dbg !11267

; <label>:86:                                     ; preds = %60, %69, %78
  %87 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !11268
  %88 = icmp ugt i64 %55, 63, !dbg !11276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11276
  br i1 %88, label %149, label %89, !dbg !11276

; <label>:89:                                     ; preds = %86
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11279
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11280
  %90 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %55, i32 1, !dbg !11281
  %91 = bitcast %union.lwip_sock_lastdata* %90 to i8**, !dbg !11282
  %92 = load i8*, i8** %91, align 8, !dbg !11282, !tbaa !1581
  %93 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %55, i32 2, !dbg !11284
  %94 = load i16, i16* %93, align 8, !dbg !11284, !tbaa !10475
  %95 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %55, i32 3, !dbg !11286
  %96 = load i16, i16* %95, align 2, !dbg !11286, !tbaa !10482
  %97 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %55, i32 4, !dbg !11288
  %98 = load i16, i16* %97, align 4, !dbg !11288, !tbaa !10485
  tail call void @ukplat_lcpu_restore_irqf(i64 %87) #10, !dbg !11290
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11291
  br i1 %44, label %99, label %114, !dbg !11291

; <label>:99:                                     ; preds = %89
  %100 = lshr i64 %55, 6, !dbg !11292
  %101 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %1, i64 0, i32 0, i64 %100, !dbg !11292
  %102 = load i64, i64* %101, align 8, !dbg !11292, !tbaa !2478
  %103 = and i64 %55, 63, !dbg !11292
  %104 = shl i64 1, %103, !dbg !11292
  %105 = and i64 %102, %104, !dbg !11292
  %106 = icmp eq i64 %105, 0, !dbg !11292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11293
  br i1 %106, label %114, label %107, !dbg !11293

; <label>:107:                                    ; preds = %99
  %108 = icmp eq i8* %92, null, !dbg !11294
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11295
  br i1 %108, label %109, label %111, !dbg !11295

; <label>:109:                                    ; preds = %107
  %110 = icmp sgt i16 %94, 0, !dbg !11296
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11297
  br i1 %110, label %111, label %114, !dbg !11297

; <label>:111:                                    ; preds = %107, %109
  %112 = or i64 %58, %104, !dbg !11249
  %113 = add nsw i32 %59, 1, !dbg !11298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11299
  br label %114, !dbg !11299

; <label>:114:                                    ; preds = %99, %111, %109, %89
  %115 = phi i64 [ %112, %111 ], [ %58, %109 ], [ %58, %99 ], [ %58, %89 ]
  %116 = phi i32 [ %113, %111 ], [ %59, %109 ], [ %59, %99 ], [ %59, %89 ], !dbg !11300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11301
  br i1 %45, label %130, label %117, !dbg !11301

; <label>:117:                                    ; preds = %114
  %118 = lshr i64 %55, 6, !dbg !11302
  %119 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %2, i64 0, i32 0, i64 %118, !dbg !11302
  %120 = load i64, i64* %119, align 8, !dbg !11302, !tbaa !2478
  %121 = and i64 %55, 63, !dbg !11302
  %122 = shl i64 1, %121, !dbg !11302
  %123 = and i64 %120, %122, !dbg !11302
  %124 = icmp eq i64 %123, 0, !dbg !11302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11303
  br i1 %124, label %130, label %125, !dbg !11303

; <label>:125:                                    ; preds = %117
  %126 = icmp eq i16 %96, 0, !dbg !11304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11305
  br i1 %126, label %130, label %127, !dbg !11305

; <label>:127:                                    ; preds = %125
  %128 = or i64 %57, %122, !dbg !11252
  %129 = add nsw i32 %116, 1, !dbg !11306
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11307
  br label %130, !dbg !11307

; <label>:130:                                    ; preds = %125, %117, %114, %127
  %131 = phi i64 [ %128, %127 ], [ %57, %125 ], [ %57, %117 ], [ %57, %114 ]
  %132 = phi i32 [ %129, %127 ], [ %116, %125 ], [ %116, %117 ], [ %116, %114 ], !dbg !11308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11309
  br i1 %46, label %146, label %133, !dbg !11309

; <label>:133:                                    ; preds = %130
  %134 = lshr i64 %55, 6, !dbg !11310
  %135 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %3, i64 0, i32 0, i64 %134, !dbg !11310
  %136 = load i64, i64* %135, align 8, !dbg !11310, !tbaa !2478
  %137 = and i64 %55, 63, !dbg !11310
  %138 = shl i64 1, %137, !dbg !11310
  %139 = and i64 %136, %138, !dbg !11310
  %140 = icmp eq i64 %139, 0, !dbg !11310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11311
  br i1 %140, label %146, label %141, !dbg !11311

; <label>:141:                                    ; preds = %133
  %142 = icmp eq i16 %98, 0, !dbg !11312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11313
  br i1 %142, label %146, label %143, !dbg !11313

; <label>:143:                                    ; preds = %141
  %144 = or i64 %56, %138, !dbg !11255
  %145 = add nsw i32 %132, 1, !dbg !11314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11315
  br label %146, !dbg !11315

; <label>:146:                                    ; preds = %141, %133, %130, %143
  %147 = phi i64 [ %144, %143 ], [ %56, %141 ], [ %56, %133 ], [ %56, %130 ]
  %148 = phi i32 [ %145, %143 ], [ %132, %141 ], [ %132, %133 ], [ %132, %130 ], !dbg !11316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11317
  br label %150, !dbg !11317

; <label>:149:                                    ; preds = %86
  store i64 %58, i64* %47, align 8, !dbg !11249, !tbaa !2478
  store i64 %57, i64* %48, align 8, !dbg !11252, !tbaa !2478
  store i64 %56, i64* %49, align 8, !dbg !11255, !tbaa !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11318
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11279
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11280
  tail call void @ukplat_lcpu_restore_irqf(i64 %87) #10, !dbg !11319
  br label %168, !dbg !11321

; <label>:150:                                    ; preds = %78, %77, %146
  %151 = phi i64 [ %147, %146 ], [ %56, %78 ], [ %56, %77 ]
  %152 = phi i64 [ %131, %146 ], [ %57, %78 ], [ %57, %77 ]
  %153 = phi i64 [ %115, %146 ], [ %58, %78 ], [ %58, %77 ]
  %154 = phi i32 [ %148, %146 ], [ %59, %78 ], [ %59, %77 ], !dbg !11300
  %155 = add nuw nsw i64 %55, 1, !dbg !11322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11323
  %156 = icmp slt i64 %155, %53, !dbg !11244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11245
  br i1 %156, label %54, label %157, !dbg !11245, !llvm.loop !11324

; <label>:157:                                    ; preds = %150
  store i64 %153, i64* %47, align 8, !dbg !11249, !tbaa !2478
  store i64 %152, i64* %48, align 8, !dbg !11252, !tbaa !2478
  store i64 %151, i64* %49, align 8, !dbg !11255, !tbaa !2478
  br label %158, !dbg !11245

; <label>:158:                                    ; preds = %36, %157
  %159 = phi i64 [ %151, %157 ], [ %42, %36 ], !dbg !11248
  %160 = phi i64 [ %152, %157 ], [ %40, %36 ], !dbg !11247
  %161 = phi i64 [ %153, %157 ], [ %38, %36 ], !dbg !11246
  %162 = phi i32 [ %154, %157 ], [ 0, %36 ], !dbg !11326
  %163 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %4, i64 0, i32 0, i64 0, !dbg !11246
  store i64 %161, i64* %163, align 8, !dbg !11246, !tbaa !1581
  %164 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %5, i64 0, i32 0, i64 0, !dbg !11247
  store i64 %160, i64* %164, align 8, !dbg !11247, !tbaa !1581
  %165 = getelementptr inbounds %struct._types_fd_set, %struct._types_fd_set* %6, i64 0, i32 0, i64 0, !dbg !11248
  store i64 %159, i64* %165, align 8, !dbg !11248, !tbaa !1581
  %166 = icmp sgt i32 %162, -1, !dbg !11327
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11330
  br i1 %166, label %168, label %167, !dbg !11330

; <label>:167:                                    ; preds = %158
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #8, !dbg !11331
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11334
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11334
  unreachable

; <label>:168:                                    ; preds = %158, %149
  %169 = phi i32 [ -1, %149 ], [ %162, %158 ], !dbg !11300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6, !dbg !11339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6, !dbg !11339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6, !dbg !11339
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11339
  ret i32 %169, !dbg !11339
}

; Function Attrs: noredzone
declare dso_local signext i8 @sys_sem_new(%struct.sys_sem_t*, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @sys_arch_sem_wait(%struct.sys_sem_t*, i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc void @lwip_unlink_select_cb(%struct.lwip_select_cb* nocapture readonly) unnamed_addr #0 !dbg !11340 {
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11344
  %2 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %0, i64 0, i32 0, !dbg !11345
  %3 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** %2, align 8, !dbg !11345, !tbaa !4178
  %4 = icmp eq %struct.lwip_select_cb* %3, null, !dbg !11347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11348
  %5 = ptrtoint %struct.lwip_select_cb* %3 to i64, !dbg !11348
  %6 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %0, i64 0, i32 1, !dbg !11349
  br i1 %4, label %12, label %7, !dbg !11348

; <label>:7:                                      ; preds = %1
  %8 = bitcast %struct.lwip_select_cb** %6 to i64*, !dbg !11351
  %9 = load i64, i64* %8, align 8, !dbg !11351, !tbaa !4185
  %10 = getelementptr inbounds %struct.lwip_select_cb, %struct.lwip_select_cb* %3, i64 0, i32 1, !dbg !11352
  %11 = bitcast %struct.lwip_select_cb** %10 to i64*, !dbg !11353
  store i64 %9, i64* %11, align 8, !dbg !11353, !tbaa !4185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11354
  br label %12, !dbg !11354

; <label>:12:                                     ; preds = %1, %7
  %13 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** @select_cb_list, align 8, !dbg !11355, !tbaa !1426
  %14 = icmp eq %struct.lwip_select_cb* %13, %0, !dbg !11357
  %15 = load %struct.lwip_select_cb*, %struct.lwip_select_cb** %6, align 8, !dbg !11358, !tbaa !4185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11362
  %16 = icmp eq %struct.lwip_select_cb* %15, null, !dbg !11358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11363
  br i1 %14, label %17, label %19, !dbg !11362

; <label>:17:                                     ; preds = %12
  br i1 %16, label %23, label %18, !dbg !11364

; <label>:18:                                     ; preds = %17
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #8, !dbg !11367
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11371
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11371
  unreachable

; <label>:19:                                     ; preds = %12
  br i1 %16, label %20, label %21, !dbg !11375

; <label>:20:                                     ; preds = %19
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0)) #8, !dbg !11376
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11379
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11379
  unreachable

; <label>:21:                                     ; preds = %19
  %22 = bitcast %struct.lwip_select_cb* %15 to i64*, !dbg !11383
  br label %23

; <label>:23:                                     ; preds = %17, %21
  %24 = phi i64* [ %22, %21 ], [ bitcast (%struct.lwip_select_cb** @select_cb_list to i64*), %17 ]
  store i64 %5, i64* %24, align 8, !dbg !11384, !tbaa !1426
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11386
  ret void, !dbg !11386
}

; Function Attrs: noredzone
declare dso_local void @sys_sem_free(%struct.sys_sem_t*) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_pollscan(%struct.pollfd* nocapture, i32, i32) unnamed_addr #0 !dbg !11387 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11414
  %4 = icmp eq i32 %1, 0, !dbg !11415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11416
  br i1 %4, label %5, label %6, !dbg !11416

; <label>:5:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11417
  br label %100, !dbg !11417

; <label>:6:                                      ; preds = %3
  %7 = and i32 %2, 1
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %2, 2
  %10 = icmp eq i32 %9, 0
  %11 = and i32 %2, 4
  %12 = icmp eq i32 %11, 0
  %13 = zext i32 %1 to i64, !dbg !11416
  br label %14, !dbg !11416

; <label>:14:                                     ; preds = %6, %93
  %15 = phi i64 [ 0, %6 ], [ %95, %93 ]
  %16 = phi i32 [ 0, %6 ], [ %94, %93 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11419
  br i1 %8, label %19, label %17, !dbg !11419

; <label>:17:                                     ; preds = %14
  %18 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %15, i32 2, !dbg !11420
  store i16 0, i16* %18, align 2, !dbg !11423, !tbaa !3976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11424
  br label %19, !dbg !11424

; <label>:19:                                     ; preds = %14, %17
  %20 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %15, i32 0, !dbg !11425
  %21 = load i32, i32* %20, align 4, !dbg !11425, !tbaa !3862
  %22 = icmp sgt i32 %21, -1, !dbg !11426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11427
  %23 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %15, i32 2, !dbg !11428
  br i1 %22, label %24, label %86, !dbg !11427

; <label>:24:                                     ; preds = %19
  %25 = load i16, i16* %23, align 2, !dbg !11430, !tbaa !3976
  %26 = and i16 %25, 8, !dbg !11431
  %27 = icmp eq i16 %26, 0, !dbg !11432
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11433
  br i1 %27, label %28, label %88, !dbg !11433

; <label>:28:                                     ; preds = %24
  %29 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !11434
  %30 = load i32, i32* %20, align 4, !dbg !11437, !tbaa !3862
  %31 = icmp ugt i32 %30, 63, !dbg !11443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11443
  br i1 %31, label %83, label %32, !dbg !11443

; <label>:32:                                     ; preds = %28
  %33 = sext i32 %30 to i64, !dbg !11444
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11447
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11448
  %34 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, i32 1, !dbg !11449
  %35 = bitcast %union.lwip_sock_lastdata* %34 to i8**, !dbg !11450
  %36 = load i8*, i8** %35, align 8, !dbg !11450, !tbaa !1581
  %37 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, i32 2, !dbg !11452
  %38 = load i16, i16* %37, align 8, !dbg !11452, !tbaa !10475
  %39 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, i32 3, !dbg !11454
  %40 = load i16, i16* %39, align 2, !dbg !11454, !tbaa !10482
  %41 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, i32 4, !dbg !11456
  %42 = load i16, i16* %41, align 4, !dbg !11456, !tbaa !10485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11458
  br i1 %10, label %48, label %43, !dbg !11458

; <label>:43:                                     ; preds = %32
  %44 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, i32 5, !dbg !11459
  %45 = load i8, i8* %44, align 2, !dbg !11462, !tbaa !5232
  %46 = add i8 %45, 1, !dbg !11462
  store i8 %46, i8* %44, align 2, !dbg !11462, !tbaa !5232
  %47 = icmp eq i8 %46, 0, !dbg !11463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11465
  br i1 %47, label %82, label %56, !dbg !11465

; <label>:48:                                     ; preds = %32
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11466
  br i1 %12, label %56, label %49, !dbg !11466

; <label>:49:                                     ; preds = %48
  %50 = getelementptr inbounds [64 x %struct.lwip_sock], [64 x %struct.lwip_sock]* @sockets, i64 0, i64 %33, i32 5, !dbg !11467
  %51 = load i8, i8* %50, align 2, !dbg !11467, !tbaa !5232
  %52 = icmp eq i8 %51, 0, !dbg !11467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11472
  br i1 %52, label %53, label %54, !dbg !11472

; <label>:53:                                     ; preds = %49
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !11473
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11476
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11476
  unreachable

; <label>:54:                                     ; preds = %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11480
  %55 = add i8 %51, -1, !dbg !11481
  store i8 %55, i8* %50, align 2, !dbg !11481, !tbaa !5232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11484
  br label %56, !dbg !11484

; <label>:56:                                     ; preds = %48, %54, %43
  tail call void @ukplat_lcpu_restore_irqf(i64 %29) #10, !dbg !11485
  %57 = getelementptr inbounds %struct.pollfd, %struct.pollfd* %0, i64 %15, i32 1, !dbg !11486
  %58 = load i16, i16* %57, align 4, !dbg !11486, !tbaa !3953
  %59 = and i16 %58, 1, !dbg !11488
  %60 = icmp eq i16 %59, 0, !dbg !11489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11490
  br i1 %60, label %68, label %61, !dbg !11490

; <label>:61:                                     ; preds = %56
  %62 = icmp eq i8* %36, null, !dbg !11491
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11492
  br i1 %62, label %63, label %65, !dbg !11492

; <label>:63:                                     ; preds = %61
  %64 = icmp sgt i16 %38, 0, !dbg !11493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11494
  br i1 %64, label %65, label %68, !dbg !11494

; <label>:65:                                     ; preds = %61, %63
  %66 = load i16, i16* %23, align 2, !dbg !11495, !tbaa !3976
  %67 = or i16 %66, 1, !dbg !11495
  store i16 %67, i16* %23, align 2, !dbg !11495, !tbaa !3976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11497
  br label %68, !dbg !11497

; <label>:68:                                     ; preds = %56, %65, %63
  %69 = and i16 %58, 2, !dbg !11498
  %70 = icmp eq i16 %69, 0, !dbg !11500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11501
  br i1 %70, label %76, label %71, !dbg !11501

; <label>:71:                                     ; preds = %68
  %72 = icmp eq i16 %40, 0, !dbg !11502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11503
  br i1 %72, label %76, label %73, !dbg !11503

; <label>:73:                                     ; preds = %71
  %74 = load i16, i16* %23, align 2, !dbg !11504, !tbaa !3976
  %75 = or i16 %74, 2, !dbg !11504
  store i16 %75, i16* %23, align 2, !dbg !11504, !tbaa !3976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11506
  br label %76, !dbg !11506

; <label>:76:                                     ; preds = %71, %68, %73
  %77 = icmp eq i16 %42, 0, !dbg !11507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11509
  br i1 %77, label %81, label %78, !dbg !11509

; <label>:78:                                     ; preds = %76
  %79 = load i16, i16* %23, align 2, !dbg !11510, !tbaa !3976
  %80 = or i16 %79, 4, !dbg !11510
  store i16 %80, i16* %23, align 2, !dbg !11510, !tbaa !3976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11512
  br label %81, !dbg !11512

; <label>:81:                                     ; preds = %78, %76
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11513
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %86

; <label>:82:                                     ; preds = %43
  store i8 %45, i8* %44, align 2, !dbg !11514, !tbaa !5232
  tail call void @ukplat_lcpu_restore_irqf(i64 %29) #10, !dbg !11516
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11517
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11417
  br label %99, !dbg !11417

; <label>:83:                                     ; preds = %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11447
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11448
  tail call void @ukplat_lcpu_restore_irqf(i64 %29) #10, !dbg !11519
  %84 = load i16, i16* %23, align 2, !dbg !11521, !tbaa !3976
  %85 = or i16 %84, 8, !dbg !11521
  store i16 %85, i16* %23, align 2, !dbg !11521, !tbaa !3976
  br label %100, !dbg !11522

; <label>:86:                                     ; preds = %19, %81
  %87 = load i16, i16* %23, align 2, !dbg !11523, !tbaa !3976
  br label %88, !dbg !11523

; <label>:88:                                     ; preds = %86, %24
  %89 = phi i16 [ %87, %86 ], [ %25, %24 ], !dbg !11523
  %90 = icmp eq i16 %89, 0, !dbg !11524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11525
  br i1 %90, label %93, label %91, !dbg !11525

; <label>:91:                                     ; preds = %88
  %92 = add nsw i32 %16, 1, !dbg !11526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11528
  br label %93, !dbg !11528

; <label>:93:                                     ; preds = %88, %91
  %94 = phi i32 [ %92, %91 ], [ %16, %88 ], !dbg !11529
  %95 = add nuw nsw i64 %15, 1, !dbg !11530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11531
  %96 = icmp ult i64 %95, %13, !dbg !11415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11416
  br i1 %96, label %14, label %97, !dbg !11416, !llvm.loop !11532

; <label>:97:                                     ; preds = %93
  %98 = icmp sgt i32 %94, -1, !dbg !11534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11417
  br i1 %98, label %100, label %99, !dbg !11417

; <label>:99:                                     ; preds = %82, %97
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #8, !dbg !11536
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !11539
  tail call void @ukplat_terminate(i32 3) #9, !dbg !11539
  unreachable

; <label>:100:                                    ; preds = %97, %5, %83
  %101 = phi i32 [ -1, %83 ], [ 0, %5 ], [ %94, %97 ], !dbg !11543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11544
  ret i32 %101, !dbg !11544
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_shutdown(%struct.netconn*, i8 zeroext, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_getaddrname(i32, %struct.sockaddr*, i32* nocapture, i8 zeroext) unnamed_addr #0 !dbg !11545 {
  %5 = alloca %union.sockaddr_aligned, align 4
  %6 = alloca %struct.ip_addr, align 16
  %7 = alloca i16, align 2
  %8 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 0, !dbg !11580
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %8) #6, !dbg !11580
  %9 = bitcast %struct.ip_addr* %6 to i8*, !dbg !11581
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !11581
  %10 = bitcast i16* %7 to i8*, !dbg !11582
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10) #6, !dbg !11582
  %11 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !11583
  %12 = icmp eq %struct.lwip_sock* %11, null, !dbg !11585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11587
  br i1 %12, label %109, label %13, !dbg !11587

; <label>:13:                                     ; preds = %4
  %14 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %11, i64 0, i32 0, !dbg !11588
  %15 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !11588, !tbaa !1563
  %16 = call signext i8 @netconn_getaddr(%struct.netconn* %15, %struct.ip_addr* nonnull %6, i16* nonnull %7, i8 zeroext %3) #10, !dbg !11591
  %17 = icmp eq i8 %16, 0, !dbg !11593
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11594
  br i1 %17, label %36, label %18, !dbg !11594

; <label>:18:                                     ; preds = %13
  %19 = call i32 @err_to_errno(i8 signext %16) #10, !dbg !11595
  %20 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11596, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11599
  %21 = icmp ult i64 %20, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11600
  br i1 %21, label %27, label %22, !dbg !11600

; <label>:22:                                     ; preds = %18
  %23 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11601, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11604
  %24 = icmp ugt i64 %23, ptrtoint ([0 x i8]* @_end to i64), !dbg !11600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11605
  br i1 %24, label %27, label %25, !dbg !11605

; <label>:25:                                     ; preds = %22
  %26 = call i32* @__errno() #10, !dbg !11606
  store i32 %19, i32* %26, align 4, !dbg !11609, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11610
  br label %107, !dbg !11611

; <label>:27:                                     ; preds = %22, %18
  %28 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11612, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11616
  %29 = and i64 %28, -65536, !dbg !11618
  %30 = or i64 %29, 4097, !dbg !11618
  %31 = add nsw i64 %30, -1, !dbg !11618
  %32 = inttoptr i64 %31 to i32*, !dbg !11619
  %33 = load i32, i32* %32, align 4096, !dbg !11620, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11621
  %34 = sub nsw i32 0, %19, !dbg !11622
  %35 = sext i32 %34 to i64, !dbg !11622
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 %35, i32 %33, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11622, !srcloc !11623
  br label %107

; <label>:36:                                     ; preds = %13
  %37 = load %struct.netconn*, %struct.netconn** %14, align 8, !dbg !11624, !tbaa !1563
  %38 = getelementptr inbounds %struct.netconn, %struct.netconn* %37, i64 0, i32 0, !dbg !11624
  %39 = load i32, i32* %38, align 8, !dbg !11624, !tbaa !1570
  %40 = and i32 %39, 8, !dbg !11624
  %41 = icmp eq i32 %40, 0, !dbg !11624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11626
  %42 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 1
  %43 = load i8, i8* %42, align 4, !dbg !11627, !tbaa !1626
  br i1 %41, label %53, label %44, !dbg !11626

; <label>:44:                                     ; preds = %36
  %45 = icmp eq i8 %43, 0, !dbg !11628
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11629
  br i1 %45, label %46, label %53, !dbg !11629

; <label>:46:                                     ; preds = %44
  %47 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !11630
  %48 = load i32, i32* %47, align 16, !dbg !11630, !tbaa !1581
  %49 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 3, !dbg !11630
  store i32 %48, i32* %49, align 4, !dbg !11630, !tbaa !1581
  %50 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 2, !dbg !11630
  store i32 -65536, i32* %50, align 8, !dbg !11630, !tbaa !1581
  %51 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 1, !dbg !11630
  store i32 0, i32* %51, align 4, !dbg !11630, !tbaa !1581
  store i32 0, i32* %47, align 16, !dbg !11630, !tbaa !1581
  %52 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 1, !dbg !11630
  store i8 0, i8* %52, align 16, !dbg !11630, !tbaa !1581
  store i8 6, i8* %42, align 4, !dbg !11633, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11639
  br label %57, !dbg !11639

; <label>:53:                                     ; preds = %36, %44
  %54 = icmp eq i8 %43, 46, !dbg !11636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11636
  br i1 %54, label %57, label %55, !dbg !11636

; <label>:55:                                     ; preds = %53
  %56 = icmp eq i8 %43, 6, !dbg !11636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11639
  br i1 %56, label %57, label %71, !dbg !11639

; <label>:57:                                     ; preds = %46, %53, %55
  store i8 28, i8* %8, align 4, !dbg !11640, !tbaa !3394
  %58 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 1, !dbg !11640
  store i8 10, i8* %58, align 1, !dbg !11640, !tbaa !3397
  %59 = load i16, i16* %7, align 2, !dbg !11640, !tbaa !3084
  %60 = call zeroext i16 @lwip_htons(i16 zeroext %59) #10, !dbg !11640
  %61 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 2, !dbg !11640
  store i16 %60, i16* %61, align 2, !dbg !11640, !tbaa !3398
  %62 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 3, !dbg !11640
  store i32 0, i32* %62, align 4, !dbg !11640, !tbaa !3399
  %63 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 4, i32 0, i32 0, i64 0, !dbg !11643
  %64 = bitcast %struct.ip_addr* %6 to <4 x i32>*, !dbg !11643
  %65 = load <4 x i32>, <4 x i32>* %64, align 16, !dbg !11643, !tbaa !1581
  %66 = bitcast i32* %63 to <4 x i32>*, !dbg !11643
  store <4 x i32> %65, <4 x i32>* %66, align 4, !dbg !11643, !tbaa !1581
  %67 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 1, !dbg !11640
  %68 = load i8, i8* %67, align 16, !dbg !11640, !tbaa !1581
  %69 = zext i8 %68 to i32, !dbg !11640
  %70 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 5, !dbg !11640
  store i32 %69, i32* %70, align 4, !dbg !11640, !tbaa !3402
  br label %82, !dbg !11645

; <label>:71:                                     ; preds = %55
  store i8 16, i8* %8, align 4, !dbg !11646, !tbaa !3407
  %72 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 1, !dbg !11646
  store i8 2, i8* %72, align 1, !dbg !11646, !tbaa !3410
  %73 = load i16, i16* %7, align 2, !dbg !11646, !tbaa !3084
  %74 = call zeroext i16 @lwip_htons(i16 zeroext %73) #10, !dbg !11646
  %75 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 2, !dbg !11646
  store i16 %74, i16* %75, align 2, !dbg !11646, !tbaa !3411
  %76 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %6, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !11646
  %77 = load i32, i32* %76, align 16, !dbg !11646, !tbaa !1581
  %78 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 3, !dbg !11646
  store i32 %77, i32* %78, align 4, !dbg !11646, !tbaa !3412
  %79 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %5, i64 0, i32 0, i32 4, !dbg !11646
  %80 = bitcast %struct.in6_addr* %79 to i8*, !dbg !11646
  %81 = call i8* @memset(i8* nonnull %80, i32 0, i64 8) #10, !dbg !11646
  br label %82

; <label>:82:                                     ; preds = %71, %57
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %83 = load i32, i32* %2, align 4, !dbg !11649, !tbaa !1492
  %84 = load i8, i8* %8, align 4, !dbg !11651, !tbaa !1581
  %85 = zext i8 %84 to i32, !dbg !11652
  %86 = icmp ugt i32 %83, %85, !dbg !11653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11654
  br i1 %86, label %87, label %88, !dbg !11654

; <label>:87:                                     ; preds = %82
  store i32 %85, i32* %2, align 4, !dbg !11655, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11657
  br label %88, !dbg !11657

; <label>:88:                                     ; preds = %87, %82
  %89 = phi i32 [ %85, %87 ], [ %83, %82 ], !dbg !11658
  %90 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i64 0, i32 0, !dbg !11658
  %91 = zext i32 %89 to i64, !dbg !11658
  %92 = call i8* @memcpy(i8* %90, i8* nonnull %8, i64 %91) #10, !dbg !11658
  %93 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11660, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11663
  %94 = icmp ult i64 %93, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11664
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11664
  br i1 %94, label %100, label %95, !dbg !11664

; <label>:95:                                     ; preds = %88
  %96 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11665, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11668
  %97 = icmp ugt i64 %96, ptrtoint ([0 x i8]* @_end to i64), !dbg !11664
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11669
  br i1 %97, label %100, label %98, !dbg !11669

; <label>:98:                                     ; preds = %95
  %99 = call i32* @__errno() #10, !dbg !11673
  store i32 0, i32* %99, align 4, !dbg !11674, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11675
  br label %107, !dbg !11676

; <label>:100:                                    ; preds = %95, %88
  %101 = call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11677, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11681
  %102 = and i64 %101, -65536, !dbg !11683
  %103 = or i64 %102, 4097, !dbg !11683
  %104 = add nsw i64 %103, -1, !dbg !11683
  %105 = inttoptr i64 %104 to i32*, !dbg !11684
  %106 = load i32, i32* %105, align 4096, !dbg !11685, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11686
  call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %106, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11687, !srcloc !11688
  br label %107

; <label>:107:                                    ; preds = %98, %100, %25, %27
  %108 = phi i32 [ -1, %27 ], [ -1, %25 ], [ 0, %100 ], [ 0, %98 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %109, !dbg !11689

; <label>:109:                                    ; preds = %107, %4
  %110 = phi i32 [ -1, %4 ], [ %108, %107 ], !dbg !11689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11689
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10) #6, !dbg !11691
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !11691
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %8) #6, !dbg !11691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11691
  ret i32 %110, !dbg !11691
}

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_fcntl(i32, i32, i32) local_unnamed_addr #0 !dbg !11692 {
  %4 = tail call fastcc %struct.lwip_sock* @get_socket(i32 %0) #8, !dbg !11739
  %5 = icmp eq %struct.lwip_sock* %4, null, !dbg !11743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11746
  br i1 %5, label %117, label %6, !dbg !11745

; <label>:6:                                      ; preds = %3
  switch i32 %1, label %99 [
    i32 3, label %7
    i32 4, label %55
  ], !dbg !11747

; <label>:7:                                      ; preds = %6
  %8 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %4, i64 0, i32 0, !dbg !11748
  %9 = load %struct.netconn*, %struct.netconn** %8, align 8, !dbg !11748, !tbaa !1563
  %10 = getelementptr inbounds %struct.netconn, %struct.netconn* %9, i64 0, i32 8, !dbg !11748
  %11 = load i8, i8* %10, align 4, !dbg !11748, !tbaa !2036
  %12 = and i8 %11, 2, !dbg !11748
  %13 = zext i8 %12 to i32, !dbg !11748
  %14 = shl nuw nsw i32 %13, 13, !dbg !11748
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11750, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11753
  %16 = icmp ult i64 %15, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11754
  br i1 %16, label %22, label %17, !dbg !11754

; <label>:17:                                     ; preds = %7
  %18 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11755, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11758
  %19 = icmp ugt i64 %18, ptrtoint ([0 x i8]* @_end to i64), !dbg !11754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11759
  br i1 %19, label %22, label %20, !dbg !11759

; <label>:20:                                     ; preds = %17
  %21 = tail call i32* @__errno() #10, !dbg !11763
  store i32 0, i32* %21, align 4, !dbg !11764, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11765
  br label %29, !dbg !11766

; <label>:22:                                     ; preds = %17, %7
  %23 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11767, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11771
  %24 = and i64 %23, -65536, !dbg !11773
  %25 = or i64 %24, 4097, !dbg !11773
  %26 = add nsw i64 %25, -1, !dbg !11773
  %27 = inttoptr i64 %26 to i32*, !dbg !11774
  %28 = load i32, i32* %27, align 4096, !dbg !11775, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11776
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %28, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11777, !srcloc !11778
  br label %29

; <label>:29:                                     ; preds = %22, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %30 = load %struct.netconn*, %struct.netconn** %8, align 8, !dbg !11779, !tbaa !1563
  %31 = getelementptr inbounds %struct.netconn, %struct.netconn* %30, i64 0, i32 0, !dbg !11779
  %32 = load i32, i32* %31, align 8, !dbg !11779, !tbaa !1570
  %33 = and i32 %32, 240, !dbg !11779
  %34 = icmp eq i32 %33, 16, !dbg !11781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11782
  br i1 %34, label %35, label %52, !dbg !11782

; <label>:35:                                     ; preds = %29
  tail call void @sys_mutex_lock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11783
  %36 = load %struct.netconn*, %struct.netconn** %8, align 8, !dbg !11785, !tbaa !1563
  %37 = getelementptr inbounds %struct.netconn, %struct.netconn* %36, i64 0, i32 2, !dbg !11787
  %38 = bitcast %union.anon.4* %37 to %struct.tcp_pcb**, !dbg !11788
  %39 = load %struct.tcp_pcb*, %struct.tcp_pcb** %38, align 8, !dbg !11788, !tbaa !1581
  %40 = icmp eq %struct.tcp_pcb* %39, null, !dbg !11789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11790
  br i1 %40, label %50, label %41, !dbg !11790

; <label>:41:                                     ; preds = %35
  %42 = getelementptr inbounds %struct.tcp_pcb, %struct.tcp_pcb* %39, i64 0, i32 12, !dbg !11791
  %43 = load i16, i16* %42, align 2, !dbg !11791, !tbaa !6675
  %44 = and i16 %43, 16, !dbg !11794
  %45 = icmp eq i16 %44, 0, !dbg !11794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11795
  br i1 %45, label %46, label %47, !dbg !11795

; <label>:46:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11796
  br label %47, !dbg !11796

; <label>:47:                                     ; preds = %41, %46
  %48 = and i16 %43, 32, !dbg !11798
  %49 = icmp eq i16 %48, 0, !dbg !11798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11800
  br i1 %49, label %51, label %50, !dbg !11800

; <label>:50:                                     ; preds = %47, %35
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11801
  br label %52, !dbg !11802

; <label>:51:                                     ; preds = %47
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11803
  tail call void @sys_mutex_unlock(%struct.sys_mutex_t* nonnull @lock_tcpip_core) #10, !dbg !11801
  br label %52, !dbg !11802

; <label>:52:                                     ; preds = %29, %50, %51
  %53 = phi i32 [ 2, %51 ], [ 0, %50 ], [ 2, %29 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %54 = or i32 %53, %14, !dbg !11805
  br label %115, !dbg !11806

; <label>:55:                                     ; preds = %6
  %56 = and i32 %2, -16388, !dbg !11807
  %57 = icmp eq i32 %56, 0, !dbg !11808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11809
  br i1 %57, label %58, label %83, !dbg !11809

; <label>:58:                                     ; preds = %55
  %59 = and i32 %2, 16384, !dbg !11810
  %60 = icmp eq i32 %59, 0, !dbg !11810
  %61 = getelementptr inbounds %struct.lwip_sock, %struct.lwip_sock* %4, i64 0, i32 0, !dbg !11813
  %62 = load %struct.netconn*, %struct.netconn** %61, align 8, !dbg !11813, !tbaa !1563
  %63 = getelementptr inbounds %struct.netconn, %struct.netconn* %62, i64 0, i32 8, !dbg !11813
  %64 = load i8, i8* %63, align 4, !dbg !11813, !tbaa !2036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11816
  %65 = and i8 %64, -3, !dbg !11817
  %66 = or i8 %64, 2, !dbg !11813
  %67 = select i1 %60, i8 %65, i8 %66, !dbg !11816
  store i8 %67, i8* %63, align 4, !dbg !11817, !tbaa !2036
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %68 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11821, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11824
  %69 = icmp ult i64 %68, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11825
  br i1 %69, label %75, label %70, !dbg !11825

; <label>:70:                                     ; preds = %58
  %71 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11826, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11829
  %72 = icmp ugt i64 %71, ptrtoint ([0 x i8]* @_end to i64), !dbg !11825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11830
  br i1 %72, label %75, label %73, !dbg !11830

; <label>:73:                                     ; preds = %70
  %74 = tail call i32* @__errno() #10, !dbg !11834
  store i32 0, i32* %74, align 4, !dbg !11835, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11836
  br label %82, !dbg !11837

; <label>:75:                                     ; preds = %70, %58
  %76 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11838, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11842
  %77 = and i64 %76, -65536, !dbg !11844
  %78 = or i64 %77, 4097, !dbg !11844
  %79 = add nsw i64 %78, -1, !dbg !11844
  %80 = inttoptr i64 %79 to i32*, !dbg !11845
  %81 = load i32, i32* %80, align 4096, !dbg !11846, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11847
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 0, i32 %81, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11848, !srcloc !11849
  br label %82

; <label>:82:                                     ; preds = %75, %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %115, !dbg !11850

; <label>:83:                                     ; preds = %55
  %84 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11852, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11855
  %85 = icmp ult i64 %84, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11856
  br i1 %85, label %91, label %86, !dbg !11856

; <label>:86:                                     ; preds = %83
  %87 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11857, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11860
  %88 = icmp ugt i64 %87, ptrtoint ([0 x i8]* @_end to i64), !dbg !11856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11861
  br i1 %88, label %91, label %89, !dbg !11861

; <label>:89:                                     ; preds = %86
  %90 = tail call i32* @__errno() #10, !dbg !11865
  store i32 88, i32* %90, align 4, !dbg !11866, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11867
  br label %98, !dbg !11868

; <label>:91:                                     ; preds = %86, %83
  %92 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11869, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11873
  %93 = and i64 %92, -65536, !dbg !11875
  %94 = or i64 %93, 4097, !dbg !11875
  %95 = add nsw i64 %94, -1, !dbg !11875
  %96 = inttoptr i64 %95 to i32*, !dbg !11876
  %97 = load i32, i32* %96, align 4096, !dbg !11877, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11878
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -88, i32 %97, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11879, !srcloc !11880
  br label %98

; <label>:98:                                     ; preds = %91, %89
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %115

; <label>:99:                                     ; preds = %6
  %100 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11882, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11885
  %101 = icmp ult i64 %100, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11886
  br i1 %101, label %107, label %102, !dbg !11886

; <label>:102:                                    ; preds = %99
  %103 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11887, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11890
  %104 = icmp ugt i64 %103, ptrtoint ([0 x i8]* @_end to i64), !dbg !11886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11891
  br i1 %104, label %107, label %105, !dbg !11891

; <label>:105:                                    ; preds = %102
  %106 = tail call i32* @__errno() #10, !dbg !11895
  store i32 88, i32* %106, align 4, !dbg !11896, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11897
  br label %114, !dbg !11898

; <label>:107:                                    ; preds = %102, %99
  %108 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11899, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11903
  %109 = and i64 %108, -65536, !dbg !11905
  %110 = or i64 %109, 4097, !dbg !11905
  %111 = add nsw i64 %110, -1, !dbg !11905
  %112 = inttoptr i64 %111 to i32*, !dbg !11906
  %113 = load i32, i32* %112, align 4096, !dbg !11907, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11908
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -88, i32 %113, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11909, !srcloc !11910
  br label %114

; <label>:114:                                    ; preds = %107, %105
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %115, !dbg !11911

; <label>:115:                                    ; preds = %82, %98, %114, %52
  %116 = phi i32 [ -1, %114 ], [ 0, %82 ], [ -1, %98 ], [ %54, %52 ], !dbg !11912
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11913
  br label %117, !dbg !11913

; <label>:117:                                    ; preds = %3, %115
  %118 = phi i32 [ %116, %115 ], [ -1, %3 ], !dbg !11914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11916
  ret i32 %118, !dbg !11916
}

; Function Attrs: noredzone nounwind
define dso_local i8* @lwip_inet_ntop(i32, i8*, i8*, i32) local_unnamed_addr #0 !dbg !11917 {
  %5 = icmp slt i32 %3, 0, !dbg !11964
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11965
  br i1 %5, label %6, label %22, !dbg !11965

; <label>:6:                                      ; preds = %4
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11966, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11969
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !11970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11970
  br i1 %8, label %14, label %9, !dbg !11970

; <label>:9:                                      ; preds = %6
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11971, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11974
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !11970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11975
  br i1 %11, label %14, label %12, !dbg !11975

; <label>:12:                                     ; preds = %9
  %13 = tail call i32* @__errno() #10, !dbg !11979
  store i32 28, i32* %13, align 4, !dbg !11980, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11981
  br label %21, !dbg !11982

; <label>:14:                                     ; preds = %9, %6
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11983, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11987
  %16 = and i64 %15, -65536, !dbg !11989
  %17 = or i64 %16, 4097, !dbg !11989
  %18 = add nsw i64 %17, -1, !dbg !11989
  %19 = inttoptr i64 %18 to i32*, !dbg !11990
  %20 = load i32, i32* %19, align 4096, !dbg !11991, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11992
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -28, i32 %20, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !11993, !srcloc !11994
  br label %21

; <label>:21:                                     ; preds = %14, %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %76, !dbg !11995

; <label>:22:                                     ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11996
  switch i32 %0, label %61 [
    i32 2, label %23
    i32 10, label %42
  ], !dbg !11996

; <label>:23:                                     ; preds = %22
  %24 = bitcast i8* %1 to %struct.ip4_addr*, !dbg !11997
  %25 = tail call i8* @ip4addr_ntoa_r(%struct.ip4_addr* %24, i8* %2, i32 %3) #10, !dbg !11998
  %26 = icmp eq i8* %25, null, !dbg !11999
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12000
  br i1 %26, label %27, label %76, !dbg !12000

; <label>:27:                                     ; preds = %23
  %28 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12001, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12004
  %29 = icmp ult i64 %28, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12005
  br i1 %29, label %35, label %30, !dbg !12005

; <label>:30:                                     ; preds = %27
  %31 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12006, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12009
  %32 = icmp ugt i64 %31, ptrtoint ([0 x i8]* @_end to i64), !dbg !12005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12010
  br i1 %32, label %35, label %33, !dbg !12010

; <label>:33:                                     ; preds = %30
  %34 = tail call i32* @__errno() #10, !dbg !12014
  store i32 28, i32* %34, align 4, !dbg !12015, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12017
  br label %76, !dbg !12017

; <label>:35:                                     ; preds = %30, %27
  %36 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12018, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12022
  %37 = and i64 %36, -65536, !dbg !12024
  %38 = or i64 %37, 4097, !dbg !12024
  %39 = add nsw i64 %38, -1, !dbg !12024
  %40 = inttoptr i64 %39 to i32*, !dbg !12025
  %41 = load i32, i32* %40, align 4096, !dbg !12026, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12027
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -28, i32 %41, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12028, !srcloc !12029
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %76

; <label>:42:                                     ; preds = %22
  %43 = bitcast i8* %1 to %struct.ip6_addr*, !dbg !12030
  %44 = tail call i8* @ip6addr_ntoa_r(%struct.ip6_addr* %43, i8* %2, i32 %3) #10, !dbg !12031
  %45 = icmp eq i8* %44, null, !dbg !12032
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12033
  br i1 %45, label %46, label %76, !dbg !12033

; <label>:46:                                     ; preds = %42
  %47 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12034, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12037
  %48 = icmp ult i64 %47, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12038
  br i1 %48, label %54, label %49, !dbg !12038

; <label>:49:                                     ; preds = %46
  %50 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12039, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12042
  %51 = icmp ugt i64 %50, ptrtoint ([0 x i8]* @_end to i64), !dbg !12038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12043
  br i1 %51, label %54, label %52, !dbg !12043

; <label>:52:                                     ; preds = %49
  %53 = tail call i32* @__errno() #10, !dbg !12047
  store i32 28, i32* %53, align 4, !dbg !12048, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12049
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12050
  br label %76, !dbg !12050

; <label>:54:                                     ; preds = %49, %46
  %55 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12051, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12055
  %56 = and i64 %55, -65536, !dbg !12057
  %57 = or i64 %56, 4097, !dbg !12057
  %58 = add nsw i64 %57, -1, !dbg !12057
  %59 = inttoptr i64 %58 to i32*, !dbg !12058
  %60 = load i32, i32* %59, align 4096, !dbg !12059, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12060
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -28, i32 %60, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12061, !srcloc !12062
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %76

; <label>:61:                                     ; preds = %22
  %62 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12063, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12066
  %63 = icmp ult i64 %62, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12067
  br i1 %63, label %69, label %64, !dbg !12067

; <label>:64:                                     ; preds = %61
  %65 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12068, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12071
  %66 = icmp ugt i64 %65, ptrtoint ([0 x i8]* @_end to i64), !dbg !12067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12072
  br i1 %66, label %69, label %67, !dbg !12072

; <label>:67:                                     ; preds = %64
  %68 = tail call i32* @__errno() #10, !dbg !12076
  store i32 106, i32* %68, align 4, !dbg !12077, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12079
  br label %76, !dbg !12079

; <label>:69:                                     ; preds = %64, %61
  %70 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12080, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12084
  %71 = and i64 %70, -65536, !dbg !12086
  %72 = or i64 %71, 4097, !dbg !12086
  %73 = add nsw i64 %72, -1, !dbg !12086
  %74 = inttoptr i64 %73 to i32*, !dbg !12087
  %75 = load i32, i32* %74, align 4096, !dbg !12088, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12089
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -106, i32 %75, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12090, !srcloc !12091
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %76

; <label>:76:                                     ; preds = %33, %35, %23, %52, %54, %42, %69, %67, %21
  %77 = phi i8* [ null, %21 ], [ null, %67 ], [ null, %69 ], [ null, %52 ], [ null, %54 ], [ %44, %42 ], [ null, %33 ], [ null, %35 ], [ %25, %23 ], !dbg !12092
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12094
  ret i8* %77, !dbg !12094
}

; Function Attrs: noredzone
declare dso_local i8* @ip4addr_ntoa_r(%struct.ip4_addr*, i8*, i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i8* @ip6addr_ntoa_r(%struct.ip6_addr*, i8*, i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i32 @lwip_inet_pton(i32, i8*, i8*) local_unnamed_addr #0 !dbg !12095 {
  %4 = alloca %struct.ip6_addr, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12115
  switch i32 %0, label %15 [
    i32 2, label %5
    i32 10, label %8
  ], !dbg !12115

; <label>:5:                                      ; preds = %3
  %6 = bitcast i8* %2 to %struct.ip4_addr*, !dbg !12116
  %7 = tail call i32 @ip4addr_aton(i8* %1, %struct.ip4_addr* %6) #10, !dbg !12117
  br label %30, !dbg !12119

; <label>:8:                                      ; preds = %3
  %9 = bitcast %struct.ip6_addr* %4 to i8*, !dbg !12120
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #6, !dbg !12120
  %10 = call i32 @ip6addr_aton(i8* %1, %struct.ip6_addr* nonnull %4) #10, !dbg !12122
  %11 = icmp eq i32 %10, 0, !dbg !12123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12125
  br i1 %11, label %14, label %12, !dbg !12125

; <label>:12:                                     ; preds = %8
  %13 = call i8* @memcpy(i8* %2, i8* nonnull %9, i64 16) #10, !dbg !12126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12128
  br label %14, !dbg !12128

; <label>:14:                                     ; preds = %8, %12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #6, !dbg !12129
  br label %30

; <label>:15:                                     ; preds = %3
  %16 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12130, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12133
  %17 = icmp ult i64 %16, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12134
  br i1 %17, label %23, label %18, !dbg !12134

; <label>:18:                                     ; preds = %15
  %19 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12135, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12138
  %20 = icmp ugt i64 %19, ptrtoint ([0 x i8]* @_end to i64), !dbg !12134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12139
  br i1 %20, label %23, label %21, !dbg !12139

; <label>:21:                                     ; preds = %18
  %22 = tail call i32* @__errno() #10, !dbg !12143
  store i32 106, i32* %22, align 4, !dbg !12144, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12145
  br label %30, !dbg !12146

; <label>:23:                                     ; preds = %18, %15
  %24 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12147, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12151
  %25 = and i64 %24, -65536, !dbg !12153
  %26 = or i64 %25, 4097, !dbg !12153
  %27 = add nsw i64 %26, -1, !dbg !12153
  %28 = inttoptr i64 %27 to i32*, !dbg !12154
  %29 = load i32, i32* %28, align 4096, !dbg !12155, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12156
  tail call void asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp1,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _SOCK_NET_SET_ERRNO\0A\092:\0A\09movq $2, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $2, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp1,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "=*m,=*m,i,i,{di},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, i64 1073741811, i64 1073741820, i64 -106, i32 %29, void (i32)* nonnull @_SOCK_NET_SET_ERRNO) #6, !dbg !12157, !srcloc !12158
  br label %30

; <label>:30:                                     ; preds = %21, %23, %14, %5
  %31 = phi i32 [ -1, %21 ], [ -1, %23 ], [ %10, %14 ], [ %7, %5 ], !dbg !12159
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12160
  ret i32 %31, !dbg !12160
}

; Function Attrs: noredzone
declare dso_local i32 @ip4addr_aton(i8*, %struct.ip4_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i32 @ip6addr_aton(i8*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: noredzone
declare dso_local void @_uk_vprintk(i32, i8*, i8*, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: noredzone nounwind
define internal i32 @_SOCK_NET_GET_ERRNO() #0 !dbg !1488 {
  %1 = tail call i32* @__errno() #10, !dbg !12161
  %2 = load i32, i32* %1, align 4, !dbg !12161, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12162
  ret i32 %2, !dbg !12162
}

; Function Attrs: noredzone
declare dso_local i32 @vfscore_alloc_fd() #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_vget(%struct.mount*, i64, %struct.vnode**) #5

; Function Attrs: inlinehint noredzone nounwind
define internal void @uk_mutex_unlock(%struct.uk_mutex*) #3 !dbg !12163 {
  %2 = icmp eq %struct.uk_mutex* %0, null, !dbg !12175
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12178
  br i1 %2, label %3, label %4, !dbg !12178, !prof !1445

; <label>:3:                                      ; preds = %1
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #8, !dbg !12179
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12179
  unreachable

; <label>:4:                                      ; preds = %1
  %5 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !12181
  %6 = getelementptr inbounds %struct.uk_mutex, %struct.uk_mutex* %0, i64 0, i32 0, !dbg !12183
  %7 = load i32, i32* %6, align 8, !dbg !12183, !tbaa !12186
  %8 = icmp slt i32 %7, 1, !dbg !12183
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12187
  br i1 %8, label %9, label %10, !dbg !12187, !prof !1445

; <label>:9:                                      ; preds = %4
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0)) #8, !dbg !12188
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12188
  unreachable

; <label>:10:                                     ; preds = %4
  %11 = add nsw i32 %7, -1, !dbg !12190
  store i32 %11, i32* %6, align 8, !dbg !12190, !tbaa !12186
  %12 = icmp eq i32 %11, 0, !dbg !12192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12193
  br i1 %12, label %13, label %27, !dbg !12193

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.uk_mutex, %struct.uk_mutex* %0, i64 0, i32 1, !dbg !12194
  store %struct.uk_thread* null, %struct.uk_thread** %14, align 8, !dbg !12196, !tbaa !12197
  %15 = tail call i64 @ukplat_lcpu_save_irqf() #10, !dbg !12210
  %16 = getelementptr inbounds %struct.uk_mutex, %struct.uk_mutex* %0, i64 0, i32 2, i32 0, !dbg !12212
  %17 = load %struct.uk_waitq_entry*, %struct.uk_waitq_entry** %16, align 8, !dbg !12212, !tbaa !12214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12212
  %18 = icmp eq %struct.uk_waitq_entry* %17, null, !dbg !12216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12216
  br i1 %18, label %26, label %19, !dbg !12216

; <label>:19:                                     ; preds = %13, %19
  %20 = phi %struct.uk_waitq_entry* [ %22, %19 ], [ %17, %13 ]
  %21 = getelementptr inbounds %struct.uk_waitq_entry, %struct.uk_waitq_entry* %20, i64 0, i32 2, i32 0, !dbg !12216
  %22 = load %struct.uk_waitq_entry*, %struct.uk_waitq_entry** %21, align 8, !dbg !12216, !tbaa !12218
  %23 = getelementptr inbounds %struct.uk_waitq_entry, %struct.uk_waitq_entry* %20, i64 0, i32 1, !dbg !12222
  %24 = load %struct.uk_thread*, %struct.uk_thread** %23, align 8, !dbg !12222, !tbaa !12223
  tail call void @uk_thread_wake(%struct.uk_thread* %24) #10, !dbg !12224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12216
  %25 = icmp eq %struct.uk_waitq_entry* %22, null, !dbg !12216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12216
  br i1 %25, label %26, label %19, !dbg !12216, !llvm.loop !12225

; <label>:26:                                     ; preds = %19, %13
  tail call void @ukplat_lcpu_restore_irqf(i64 %15) #10, !dbg !12228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12229
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12230
  br label %27, !dbg !12230

; <label>:27:                                     ; preds = %26, %10
  tail call void @ukplat_lcpu_restore_irqf(i64 %5) #10, !dbg !12231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12232
  ret void, !dbg !12232
}

; Function Attrs: noredzone
declare dso_local %struct.dentry* @dentry_alloc(%struct.dentry*, %struct.vnode*, i8*) #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_install_fd(i32, %struct.vfscore_file*) #5

; Function Attrs: noredzone
declare dso_local void @vrele(%struct.vnode*) #5

; Function Attrs: noredzone
declare dso_local void @drele(%struct.dentry*) #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_put_fd(i32) #5

; Function Attrs: noredzone
declare dso_local i32 @vfscore_vop_nullop() #5

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_close(%struct.vnode*, %struct.vfscore_file*) #0 section ".text_shared" !dbg !12233 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*, !dbg !12247
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #6, !dbg !12247
  %5 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12248, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12251
  %6 = icmp ult i64 %5, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12252
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12252
  br i1 %6, label %12, label %7, !dbg !12252

; <label>:7:                                      ; preds = %2
  %8 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12253, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12256
  %9 = icmp ugt i64 %8, ptrtoint ([0 x i8]* @_end to i64), !dbg !12252
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12257
  br i1 %9, label %12, label %10, !dbg !12257

; <label>:10:                                     ; preds = %7
  %11 = tail call i32 @_sock_net_close(%struct.vnode* %0, %struct.vfscore_file* undef) #8, !dbg !12258
  store i32 %11, i32* %3, align 4, !dbg !12258, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12258
  br label %23, !dbg !12258

; <label>:12:                                     ; preds = %7, %2
  %13 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12261, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12265
  %14 = and i64 %13, -65536, !dbg !12267
  %15 = or i64 %14, 4097, !dbg !12267
  %16 = add nsw i64 %15, -1, !dbg !12267
  %17 = inttoptr i64 %16 to i32*, !dbg !12268
  %18 = load i32, i32* %17, align 4096, !dbg !12269, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12270
  %19 = ptrtoint %struct.vnode* %0 to i64, !dbg !12271
  %20 = ptrtoint %struct.vfscore_file* %1 to i64, !dbg !12271
  %21 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_close\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %19, i64 %20, i32 %18, i32 (%struct.vnode*, %struct.vfscore_file*)* nonnull @_sock_net_close) #6, !dbg !12271, !srcloc !12272
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %3, i64 %21) #6, !dbg !12273, !srcloc !12276
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %22 = load i32, i32* %3, align 4, !dbg !12277, !tbaa !1492
  br label %23

; <label>:23:                                     ; preds = %12, %10
  %24 = phi i32 [ %22, %12 ], [ %11, %10 ], !dbg !12277
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #6, !dbg !12278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12279
  ret i32 %24, !dbg !12279
}

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_read(%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32) #0 section ".text_shared" !dbg !12280 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*, !dbg !12300
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12300
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12301, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12304
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12305
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12305
  br i1 %8, label %14, label %9, !dbg !12305

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12306, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12309
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !12305
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12310
  br i1 %11, label %14, label %12, !dbg !12310

; <label>:12:                                     ; preds = %9
  %13 = tail call i32 @_sock_net_read(%struct.vnode* %0, %struct.vfscore_file* undef, %struct.uio* %2, i32 undef) #8, !dbg !12311
  store i32 %13, i32* %5, align 4, !dbg !12311, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12311
  br label %27, !dbg !12311

; <label>:14:                                     ; preds = %9, %4
  %15 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12314, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12318
  %16 = and i64 %15, -65536, !dbg !12320
  %17 = or i64 %16, 4097, !dbg !12320
  %18 = add nsw i64 %17, -1, !dbg !12320
  %19 = inttoptr i64 %18 to i32*, !dbg !12321
  %20 = load i32, i32* %19, align 4096, !dbg !12322, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12323
  %21 = ptrtoint %struct.uio* %2 to i64, !dbg !12324
  %22 = sext i32 %3 to i64, !dbg !12324
  %23 = ptrtoint %struct.vnode* %0 to i64, !dbg !12324
  %24 = ptrtoint %struct.vfscore_file* %1 to i64, !dbg !12324
  %25 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09push %r13\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r13, %rcx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_read\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r13\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r13},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %23, i64 %24, i64 %21, i64 %22, i32 %20, i32 (%struct.vnode*, %struct.vfscore_file*, %struct.uio*, i32)* nonnull @_sock_net_read) #6, !dbg !12324, !srcloc !12325
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %5, i64 %25) #6, !dbg !12326, !srcloc !12329
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %26 = load i32, i32* %5, align 4, !dbg !12330, !tbaa !1492
  br label %27

; <label>:27:                                     ; preds = %14, %12
  %28 = phi i32 [ %26, %14 ], [ %13, %12 ], !dbg !12330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12332
  ret i32 %28, !dbg !12332
}

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_write(%struct.vnode*, %struct.uio*, i32) #0 section ".text_shared" !dbg !12333 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*, !dbg !12350
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !12350
  %6 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12351, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12354
  %7 = icmp ult i64 %6, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12355
  br i1 %7, label %13, label %8, !dbg !12355

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12356, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12359
  %10 = icmp ugt i64 %9, ptrtoint ([0 x i8]* @_end to i64), !dbg !12355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12360
  br i1 %10, label %13, label %11, !dbg !12360

; <label>:11:                                     ; preds = %8
  %12 = tail call i32 @_sock_net_write(%struct.vnode* %0, %struct.uio* %1, i32 undef) #8, !dbg !12361
  store i32 %12, i32* %4, align 4, !dbg !12361, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12361
  br label %25, !dbg !12361

; <label>:13:                                     ; preds = %8, %3
  %14 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12364, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12368
  %15 = and i64 %14, -65536, !dbg !12370
  %16 = or i64 %15, 4097, !dbg !12370
  %17 = add nsw i64 %16, -1, !dbg !12370
  %18 = inttoptr i64 %17 to i32*, !dbg !12371
  %19 = load i32, i32* %18, align 4096, !dbg !12372, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12373
  %20 = sext i32 %2 to i64, !dbg !12374
  %21 = ptrtoint %struct.vnode* %0 to i64, !dbg !12374
  %22 = ptrtoint %struct.uio* %1 to i64, !dbg !12374
  %23 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_write\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %21, i64 %22, i64 %20, i32 %19, i32 (%struct.vnode*, %struct.uio*, i32)* nonnull @_sock_net_write) #6, !dbg !12374, !srcloc !12375
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %4, i64 %23) #6, !dbg !12376, !srcloc !12379
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %24 = load i32, i32* %4, align 4, !dbg !12380, !tbaa !1492
  br label %25

; <label>:25:                                     ; preds = %13, %11
  %26 = phi i32 [ %24, %13 ], [ %12, %11 ], !dbg !12380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !12381
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12382
  ret i32 %26, !dbg !12382
}

; Function Attrs: noredzone nounwind
define internal i32 @sock_net_ioctl(%struct.vnode*, %struct.vfscore_file*, i64, i8*) #0 section ".text_shared" !dbg !12383 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*, !dbg !12403
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12403
  %7 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12404, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12407
  %8 = icmp ult i64 %7, ptrtoint ([0 x i8]* @_intrstack_start to i64), !dbg !12408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12408
  br i1 %8, label %19, label %9, !dbg !12408

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12409, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12412
  %11 = icmp ugt i64 %10, ptrtoint ([0 x i8]* @_end to i64), !dbg !12408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12413
  br i1 %11, label %19, label %12, !dbg !12413

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.vnode, %struct.vnode* %0, i64 0, i32 11, !dbg !12421
  %14 = bitcast i8** %13 to %struct.sock_net_file**, !dbg !12421
  %15 = load %struct.sock_net_file*, %struct.sock_net_file** %14, align 8, !dbg !12421, !tbaa !1402
  %16 = getelementptr inbounds %struct.sock_net_file, %struct.sock_net_file* %15, i64 0, i32 1, !dbg !12422
  %17 = load i32, i32* %16, align 8, !dbg !12422, !tbaa !1421
  %18 = tail call i32 @lwip_ioctl(i32 %17, i64 %2, i8* %3) #10, !dbg !12423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12425
  store i32 %18, i32* %5, align 4, !dbg !12427, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12427
  br label %31, !dbg !12427

; <label>:19:                                     ; preds = %9, %4
  %20 = tail call i64 asm sideeffect "mov %rsp, $0", "=r,~{dirflag},~{fpsr},~{flags}"() #6, !dbg !12428, !srcloc !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12432
  %21 = and i64 %20, -65536, !dbg !12434
  %22 = or i64 %21, 4097, !dbg !12434
  %23 = add nsw i64 %22, -1, !dbg !12434
  %24 = inttoptr i64 %23 to i32*, !dbg !12435
  %25 = load i32, i32* %24, align 4096, !dbg !12436, !tbaa !1492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12437
  %26 = ptrtoint i8* %3 to i64, !dbg !12438
  %27 = ptrtoint %struct.vnode* %0 to i64, !dbg !12438
  %28 = ptrtoint %struct.vfscore_file* %1 to i64, !dbg !12438
  %29 = tail call i64 asm sideeffect "push %rsi\0A\09push %rdi\0A\09push %r8\0A\09push %r9\0A\09push %r10\0A\09push %r11\0A\09push %r12\0A\09push %r13\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09push (%r11)\0A\09addq $$0x8,%r11\0A\09push (%r11)\0A\09movq %r15,%r11\0A\09shl $$0x4,%r11\0A\09addq $$tsb_comp0,%r11\0A\09lea (%r11),%rcx\0A\09movq %rsp,(%r11)\0A\09movq %rbp,0x8(%rcx)\0A\091:\0A\09movq $4, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $4, %rax\0A\09jne 1b\0A\09movq %r12, %rdx\0A\09movq %r13, %rcx\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp1,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09andq $$-16, %rsp\0A\09call _sock_net_ioctl\0A\09movq %rax, %rsi\0A\092:\0A\09movq $3, %rax\0A\09xor %rcx, %rcx\0A\09xor %rdx, %rdx\0A\09wrpkru\0A\09lfence\0A\09cmpq $3, %rax\0A\09jne 2b\0A\09movq %r15,%rsp\0A\09shl $$0x4,%rsp\0A\09addq $$tsb_comp0,%rsp\0A\09movq %rsp,%rbp\0A\09movq (%rsp),%rsp\0A\09addq $$0x8,%rbp\0A\09movq (%rbp),%rbp\0A\09movq %r15,%r12\0A\09shl $$0x4,%r12\0A\09addq $$tsb_comp0,%r12\0A\09addq $$0x8,%r12\0A\09pop (%r12)\0A\09subq $$0x8,%r12\0A\09pop (%r12)\0A\09pop %r13\0A\09pop %r12\0A\09pop %r11\0A\09pop %r10\0A\09pop %r9\0A\09movq %rsi, %r11\0A\09pop %r8\0A\09pop %rdi\0A\09pop %rsi\0A\09", "={r11},=*m,=*m,i,i,{di},{si},{r12},{r13},{r15},i,~{rax},~{rcx},~{rdx},~{memory},~{dirflag},~{fpsr},~{flags}"([32 x %struct.uk_thread_status_block]* nonnull @tsb_comp0, [32 x %struct.uk_thread_status_block]* nonnull @tsb_comp1, i64 1073741820, i64 1073741811, i64 %27, i64 %28, i64 %2, i64 %26, i32 %25, i32 (%struct.vnode*, %struct.vfscore_file*, i64, i8*)* nonnull @_sock_net_ioctl) #6, !dbg !12438, !srcloc !12439
  call void asm sideeffect "mov %r11d, $0\0A\09", "=*m,{r11},~{dirflag},~{fpsr},~{flags}"(i32* nonnull %5, i64 %29) #6, !dbg !12440, !srcloc !12443
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %30 = load i32, i32* %5, align 4, !dbg !12444, !tbaa !1492
  br label %31

; <label>:31:                                     ; preds = %19, %12
  %32 = phi i32 [ %30, %19 ], [ %18, %12 ], !dbg !12444
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #6, !dbg !12445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12446
  ret i32 %32, !dbg !12446
}

; Function Attrs: noredzone
declare dso_local i32 @vfscore_vop_einval() #5

; Function Attrs: noredzone
declare dso_local void @uk_thread_wake(%struct.uk_thread*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.vfscore_file* @vfscore_get_file(i32) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @netbuf_delete(%struct.netbuf*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_recv_tcp_pbuf_flags(%struct.netconn*, %struct.pbuf**, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local zeroext i16 @pbuf_copy_partial(%struct.pbuf*, i8*, i16 zeroext, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.pbuf* @pbuf_free_header(%struct.pbuf*, i16 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_tcp_recvd(%struct.netconn*, i64) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define internal fastcc i32 @lwip_sock_make_addr(%struct.netconn* nocapture readonly, %struct.ip_addr*, i16 zeroext, %struct.sockaddr*, i32*) unnamed_addr #0 !dbg !12447 {
  %6 = alloca %union.sockaddr_aligned, align 4
  %7 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 0, !dbg !12464
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %7) #6, !dbg !12464
  %8 = icmp eq %struct.ip_addr* %1, null, !dbg !12465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12468
  br i1 %8, label %9, label %10, !dbg !12468

; <label>:9:                                      ; preds = %5
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0)) #8, !dbg !12469
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !12472
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12472
  unreachable

; <label>:10:                                     ; preds = %5
  %11 = icmp eq %struct.sockaddr* %3, null, !dbg !12476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12479
  br i1 %11, label %12, label %13, !dbg !12479

; <label>:12:                                     ; preds = %10
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0)) #8, !dbg !12480
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !12483
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12483
  unreachable

; <label>:13:                                     ; preds = %10
  %14 = icmp eq i32* %4, null, !dbg !12487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12490
  br i1 %14, label %15, label %16, !dbg !12490

; <label>:15:                                     ; preds = %13
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0)) #8, !dbg !12491
  tail call void (i8*, ...) @uk_pr_crit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !12494
  tail call void @ukplat_terminate(i32 3) #9, !dbg !12494
  unreachable

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.netconn, %struct.netconn* %0, i64 0, i32 0, !dbg !12498
  %18 = load i32, i32* %17, align 8, !dbg !12498, !tbaa !1570
  %19 = and i32 %18, 8, !dbg !12498
  %20 = icmp eq i32 %19, 0, !dbg !12498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12500
  br i1 %20, label %21, label %24, !dbg !12500

; <label>:21:                                     ; preds = %16
  %22 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 1
  %23 = load i8, i8* %22, align 4, !dbg !12501, !tbaa !1626
  br label %35, !dbg !12500

; <label>:24:                                     ; preds = %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12504
  %25 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 1, !dbg !12504
  %26 = load i8, i8* %25, align 4, !dbg !12504, !tbaa !1626
  %27 = icmp eq i8 %26, 0, !dbg !12504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12505
  br i1 %27, label %28, label %35, !dbg !12505

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !12506
  %30 = load i32, i32* %29, align 4, !dbg !12506, !tbaa !1581
  %31 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 3, !dbg !12506
  store i32 %30, i32* %31, align 4, !dbg !12506, !tbaa !1581
  %32 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 2, !dbg !12506
  store i32 -65536, i32* %32, align 4, !dbg !12506, !tbaa !1581
  %33 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 1, !dbg !12506
  store i32 0, i32* %33, align 4, !dbg !12506, !tbaa !1581
  store i32 0, i32* %29, align 4, !dbg !12506, !tbaa !1581
  %34 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 1, !dbg !12506
  store i8 0, i8* %34, align 4, !dbg !12506, !tbaa !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12509
  store i8 6, i8* %25, align 4, !dbg !12511, !tbaa !1626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12516
  br label %40, !dbg !12516

; <label>:35:                                     ; preds = %21, %24
  %36 = phi i8 [ %23, %21 ], [ %26, %24 ], !dbg !12501
  %37 = icmp eq i8 %36, 46, !dbg !12501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12501
  br i1 %37, label %40, label %38, !dbg !12501

; <label>:38:                                     ; preds = %35
  %39 = icmp eq i8 %36, 6, !dbg !12501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12516
  br i1 %39, label %40, label %53, !dbg !12516

; <label>:40:                                     ; preds = %28, %35, %38
  store i8 28, i8* %7, align 4, !dbg !12517, !tbaa !3394
  %41 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 1, !dbg !12517
  store i8 10, i8* %41, align 1, !dbg !12517, !tbaa !3397
  %42 = tail call zeroext i16 @lwip_htons(i16 zeroext %2) #10, !dbg !12517
  %43 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 2, !dbg !12517
  store i16 %42, i16* %43, align 2, !dbg !12517, !tbaa !3398
  %44 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 3, !dbg !12517
  store i32 0, i32* %44, align 4, !dbg !12517, !tbaa !3399
  %45 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 4, i32 0, i32 0, i64 0, !dbg !12520
  %46 = bitcast %struct.ip_addr* %1 to <4 x i32>*, !dbg !12520
  %47 = load <4 x i32>, <4 x i32>* %46, align 4, !dbg !12520, !tbaa !1581
  %48 = bitcast i32* %45 to <4 x i32>*, !dbg !12520
  store <4 x i32> %47, <4 x i32>* %48, align 4, !dbg !12520, !tbaa !1581
  %49 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 1, !dbg !12517
  %50 = load i8, i8* %49, align 4, !dbg !12517, !tbaa !1581
  %51 = zext i8 %50 to i32, !dbg !12517
  %52 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 5, !dbg !12517
  store i32 %51, i32* %52, align 4, !dbg !12517, !tbaa !3402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12522
  br label %65, !dbg !12522

; <label>:53:                                     ; preds = %38
  store i8 16, i8* %7, align 4, !dbg !12523, !tbaa !3407
  %54 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 1, !dbg !12523
  store i8 2, i8* %54, align 1, !dbg !12523, !tbaa !3410
  %55 = tail call zeroext i16 @lwip_htons(i16 zeroext %2) #10, !dbg !12523
  %56 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 2, !dbg !12523
  store i16 %55, i16* %56, align 2, !dbg !12523, !tbaa !3411
  %57 = getelementptr inbounds %struct.ip_addr, %struct.ip_addr* %1, i64 0, i32 0, i32 0, i32 0, i64 0, !dbg !12523
  %58 = load i32, i32* %57, align 4, !dbg !12523, !tbaa !1581
  %59 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 3, !dbg !12523
  store i32 %58, i32* %59, align 4, !dbg !12523, !tbaa !3412
  %60 = getelementptr inbounds %union.sockaddr_aligned, %union.sockaddr_aligned* %6, i64 0, i32 0, i32 4, !dbg !12523
  %61 = bitcast %struct.in6_addr* %60 to i8*, !dbg !12523
  %62 = call i8* @memset(i8* nonnull %61, i32 0, i64 8) #10, !dbg !12523
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %63 = load i8, i8* %7, align 4, !dbg !12526, !tbaa !1581
  %64 = zext i8 %63 to i32
  br label %65

; <label>:65:                                     ; preds = %53, %40
  %66 = phi i32 [ %64, %53 ], [ 28, %40 ]
  %67 = load i32, i32* %4, align 4, !dbg !12528, !tbaa !1492
  %68 = icmp ult i32 %67, %66, !dbg !12529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12530
  br i1 %68, label %72, label %69, !dbg !12530

; <label>:69:                                     ; preds = %65
  %70 = icmp ugt i32 %67, %66, !dbg !12531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12533
  br i1 %70, label %71, label %75, !dbg !12533

; <label>:71:                                     ; preds = %69
  store i32 %66, i32* %4, align 4, !dbg !12534, !tbaa !1492
  br label %72, !dbg !12536

; <label>:72:                                     ; preds = %65, %71
  %73 = phi i32 [ %66, %71 ], [ %67, %65 ]
  %74 = phi i32 [ 0, %71 ], [ 1, %65 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12537
  br label %75, !dbg !12539

; <label>:75:                                     ; preds = %72, %69
  %76 = phi i32 [ %67, %69 ], [ %73, %72 ], !dbg !12539
  %77 = phi i32 [ 0, %69 ], [ %74, %72 ], !dbg !12540
  %78 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i64 0, i32 0, !dbg !12539
  %79 = zext i32 %76 to i64, !dbg !12539
  %80 = call i8* @memcpy(i8* nonnull %78, i8* nonnull %7, i64 %79) #10, !dbg !12539
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %7) #6, !dbg !12541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !12542
  ret i32 %77, !dbg !12542
}

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_recv_udp_raw_netbuf_flags(%struct.netconn*, %struct.netbuf**, i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @sys_sem_signal(%struct.sys_sem_t*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_err(%struct.netconn*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netif* @netif_find(i8*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @tcp_bind_netif(%struct.tcp_pcb*, %struct.netif*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local void @udp_bind_netif(%struct.udp_pcb*, %struct.netif*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local %struct.netif* @netif_get_by_index(i8 zeroext) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @mld6_joingroup_netif(%struct.netif*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @mld6_leavegroup_netif(%struct.netif*, %struct.ip6_addr*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local signext i8 @netconn_join_leave_group_netif(%struct.netconn*, %struct.ip_addr*, i8 zeroext, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin noredzone }
attributes #9 = { nobuiltin noredzone noreturn nounwind }
attributes #10 = { nobuiltin noredzone nounwind }

!llvm.module.flags = !{!1388, !1389, !1390}
!llvm.ident = !{!1391}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "sockets", scope: !2, file: !3, line: 1258, type: !1387, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !133, globals: !1042)
!3 = !DIFile(filename: "/root/.unikraft/libs/lwip/sockets.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{!5, !12, !17, !29, !36, !50, !57, !71, !78, !99, !105, !113, !119, !124, !129}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uk_sig_waiting", file: !6, line: 92, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksignal/include/uk/uk_signal.h", directory: "/root/.unikraft/apps/redis/build")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "UK_SIG_NOT_WAITING", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "UK_SIG_WAITING", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "UK_SIG_WAITING_SCHED", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uio_rw", file: !13, line: 41, baseType: !7, size: 32, elements: !14)
!13 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/uio.h", directory: "/root/.unikraft/apps/redis/build")
!14 = !{!15, !16}
!15 = !DIEnumerator(name: "UIO_READ", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "UIO_WRITE", value: 1, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vtype", file: !18, line: 53, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/vnode.h", directory: "/root/.unikraft/apps/redis/build")
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28}
!20 = !DIEnumerator(name: "VNON", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "VREG", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "VDIR", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "VBLK", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "VCHR", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "VLNK", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "VSOCK", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "VFIFO", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "VBAD", value: 8, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ukplat_gstate", file: !30, line: 68, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/plat/bootstrap.h", directory: "/root/.unikraft/apps/redis/build")
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "UKPLAT_HALT", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "UKPLAT_RESTART", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "UKPLAT_SUSPEND", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "UKPLAT_CRASH", value: 3, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_type", file: !37, line: 113, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/api.h", directory: "/root/.unikraft/apps/redis/build")
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!39 = !DIEnumerator(name: "NETCONN_INVALID", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "NETCONN_TCP", value: 16, isUnsigned: true)
!41 = !DIEnumerator(name: "NETCONN_TCP_IPV6", value: 24, isUnsigned: true)
!42 = !DIEnumerator(name: "NETCONN_UDP", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "NETCONN_UDPLITE", value: 33, isUnsigned: true)
!44 = !DIEnumerator(name: "NETCONN_UDPNOCHKSUM", value: 34, isUnsigned: true)
!45 = !DIEnumerator(name: "NETCONN_UDP_IPV6", value: 40, isUnsigned: true)
!46 = !DIEnumerator(name: "NETCONN_UDPLITE_IPV6", value: 41, isUnsigned: true)
!47 = !DIEnumerator(name: "NETCONN_UDPNOCHKSUM_IPV6", value: 42, isUnsigned: true)
!48 = !DIEnumerator(name: "NETCONN_RAW", value: 64, isUnsigned: true)
!49 = !DIEnumerator(name: "NETCONN_RAW_IPV6", value: 72, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_state", file: !37, line: 147, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54, !55, !56}
!52 = !DIEnumerator(name: "NETCONN_NONE", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "NETCONN_WRITE", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "NETCONN_LISTEN", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "NETCONN_CONNECT", value: 3, isUnsigned: true)
!56 = !DIEnumerator(name: "NETCONN_CLOSE", value: 4, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tcp_state", file: !58, line: 56, baseType: !7, size: 32, elements: !59)
!58 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/tcpbase.h", directory: "/root/.unikraft/apps/redis/build")
!59 = !{!60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70}
!60 = !DIEnumerator(name: "CLOSED", value: 0, isUnsigned: true)
!61 = !DIEnumerator(name: "LISTEN", value: 1, isUnsigned: true)
!62 = !DIEnumerator(name: "SYN_SENT", value: 2, isUnsigned: true)
!63 = !DIEnumerator(name: "SYN_RCVD", value: 3, isUnsigned: true)
!64 = !DIEnumerator(name: "ESTABLISHED", value: 4, isUnsigned: true)
!65 = !DIEnumerator(name: "FIN_WAIT_1", value: 5, isUnsigned: true)
!66 = !DIEnumerator(name: "FIN_WAIT_2", value: 6, isUnsigned: true)
!67 = !DIEnumerator(name: "CLOSE_WAIT", value: 7, isUnsigned: true)
!68 = !DIEnumerator(name: "CLOSING", value: 8, isUnsigned: true)
!69 = !DIEnumerator(name: "LAST_ACK", value: 9, isUnsigned: true)
!70 = !DIEnumerator(name: "TIME_WAIT", value: 10, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_evt", file: !37, line: 181, baseType: !7, size: 32, elements: !72)
!72 = !{!73, !74, !75, !76, !77}
!73 = !DIEnumerator(name: "NETCONN_EVT_RCVPLUS", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "NETCONN_EVT_RCVMINUS", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "NETCONN_EVT_SENDPLUS", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "NETCONN_EVT_SENDMINUS", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "NETCONN_EVT_ERROR", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 53, baseType: !80, size: 32, elements: !81)
!79 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/err.h", directory: "/root/.unikraft/apps/redis/build")
!80 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!81 = !{!82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98}
!82 = !DIEnumerator(name: "ERR_OK", value: 0)
!83 = !DIEnumerator(name: "ERR_MEM", value: -1)
!84 = !DIEnumerator(name: "ERR_BUF", value: -2)
!85 = !DIEnumerator(name: "ERR_TIMEOUT", value: -3)
!86 = !DIEnumerator(name: "ERR_RTE", value: -4)
!87 = !DIEnumerator(name: "ERR_INPROGRESS", value: -5)
!88 = !DIEnumerator(name: "ERR_VAL", value: -6)
!89 = !DIEnumerator(name: "ERR_WOULDBLOCK", value: -7)
!90 = !DIEnumerator(name: "ERR_USE", value: -8)
!91 = !DIEnumerator(name: "ERR_ALREADY", value: -9)
!92 = !DIEnumerator(name: "ERR_ISCONN", value: -10)
!93 = !DIEnumerator(name: "ERR_CONN", value: -11)
!94 = !DIEnumerator(name: "ERR_IF", value: -12)
!95 = !DIEnumerator(name: "ERR_ABRT", value: -13)
!96 = !DIEnumerator(name: "ERR_RST", value: -14)
!97 = !DIEnumerator(name: "ERR_CLSD", value: -15)
!98 = !DIEnumerator(name: "ERR_ARG", value: -16)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lwip_ip_addr_type", file: !100, line: 54, baseType: !7, size: 32, elements: !101)
!100 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip_addr.h", directory: "/root/.unikraft/apps/redis/build")
!101 = !{!102, !103, !104}
!102 = !DIEnumerator(name: "IPADDR_TYPE_V4", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "IPADDR_TYPE_V6", value: 6, isUnsigned: true)
!104 = !DIEnumerator(name: "IPADDR_TYPE_ANY", value: 46, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 89, baseType: !7, size: 32, elements: !107)
!106 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/pbuf.h", directory: "/root/.unikraft/apps/redis/build")
!107 = !{!108, !109, !110, !111, !112}
!108 = !DIEnumerator(name: "PBUF_TRANSPORT", value: 74, isUnsigned: true)
!109 = !DIEnumerator(name: "PBUF_IP", value: 54, isUnsigned: true)
!110 = !DIEnumerator(name: "PBUF_LINK", value: 14, isUnsigned: true)
!111 = !DIEnumerator(name: "PBUF_RAW_TX", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "PBUF_RAW", value: 0, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 145, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118}
!115 = !DIEnumerator(name: "PBUF_RAM", value: 640, isUnsigned: true)
!116 = !DIEnumerator(name: "PBUF_ROM", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "PBUF_REF", value: 65, isUnsigned: true)
!118 = !DIEnumerator(name: "PBUF_POOL", value: 386, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lwip_pollscan_opts", file: !3, line: 3169, baseType: !7, size: 32, elements: !120)
!120 = !{!121, !122, !123}
!121 = !DIEnumerator(name: "LWIP_POLLSCAN_CLEAR", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "LWIP_POLLSCAN_INC_WAIT", value: 2, isUnsigned: true)
!123 = !DIEnumerator(name: "LWIP_POLLSCAN_DEC_WAIT", value: 4, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netif_mac_filter_action", file: !125, line: 156, baseType: !7, size: 32, elements: !126)
!125 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/netif.h", directory: "/root/.unikraft/apps/redis/build")
!126 = !{!127, !128}
!127 = !DIEnumerator(name: "NETIF_DEL_MAC_FILTER", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "NETIF_ADD_MAC_FILTER", value: 1, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netconn_igmp", file: !37, line: 191, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132}
!131 = !DIEnumerator(name: "NETCONN_JOIN", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "NETCONN_LEAVE", value: 1, isUnsigned: true)
!133 = !{!134, !135, !139, !80, !143, !144, !146, !151, !188, !203, !169, !156, !206, !210, !219, !216, !221, !164, !228, !36, !238, !369, !696, !703, !711, !712, !204, !999, !225, !1001, !1003, !1004, !1005, !1006, !1008, !1030, !1032, !1034, !1036}
!134 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !136, line: 60, baseType: !137)
!136 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !138, line: 105, baseType: !134)
!138 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sptr", file: !140, line: 186, baseType: !141)
!140 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/arch/types.h", directory: "/root/.unikraft/apps/redis/build")
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !140, line: 128, baseType: !142)
!142 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16_t", file: !147, line: 128, baseType: !148)
!147 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/arch.h", directory: "/root/.unikraft/apps/redis/build")
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !136, line: 32, baseType: !149)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !138, line: 55, baseType: !150)
!150 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !153, line: 84, size: 224, elements: !154)
!153 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/sockets.h", directory: "/root/.unikraft/apps/redis/build")
!154 = !{!155, !160, !162, !168, !172, !187}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_len", scope: !152, file: !153, line: 85, baseType: !156, size: 8)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8_t", file: !147, line: 125, baseType: !157)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !136, line: 24, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !138, line: 43, baseType: !159)
!159 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !152, file: !153, line: 86, baseType: !161, size: 8, offset: 8)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !153, line: 63, baseType: !156)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !152, file: !153, line: 87, baseType: !163, size: 16, offset: 16)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !153, line: 68, baseType: !164)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16_t", file: !147, line: 127, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !136, line: 36, baseType: !166)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !138, line: 57, baseType: !167)
!167 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !152, file: !153, line: 88, baseType: !169, size: 32, offset: 32)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32_t", file: !147, line: 129, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !136, line: 48, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !138, line: 79, baseType: !7)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !152, file: !153, line: 89, baseType: !173, size: 128, offset: 64)
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !174, line: 62, size: 128, elements: !175)
!174 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/inet.h", directory: "/root/.unikraft/apps/redis/build")
!175 = !{!176}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !173, file: !174, line: 66, baseType: !177, size: 128)
!177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !173, file: !174, line: 63, size: 128, elements: !178)
!178 = !{!179, !183}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "u32_addr", scope: !177, file: !174, line: 64, baseType: !180, size: 128)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !181)
!181 = !{!182}
!182 = !DISubrange(count: 4)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "u8_addr", scope: !177, file: !174, line: 65, baseType: !184, size: 128)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 128, elements: !185)
!185 = !{!186}
!186 = !DISubrange(count: 16)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !152, file: !153, line: 90, baseType: !169, size: 32, offset: 192)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !153, line: 73, size: 128, elements: !190)
!190 = !{!191, !192, !193, !194, !199}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "sin_len", scope: !189, file: !153, line: 74, baseType: !156, size: 8)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !189, file: !153, line: 75, baseType: !161, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !189, file: !153, line: 76, baseType: !163, size: 16, offset: 16)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !189, file: !153, line: 77, baseType: !195, size: 32, offset: 32)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !174, line: 58, size: 32, elements: !196)
!196 = !{!197}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !195, file: !174, line: 59, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !174, line: 55, baseType: !169)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !189, file: !153, line: 79, baseType: !200, size: 64, offset: 64)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 64, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 8)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_ptr_t", file: !147, line: 135, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !136, line: 82, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintptr_t", file: !138, line: 232, baseType: !134)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !207, line: 200, baseType: !208)
!207 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !209, line: 145, baseType: !142)
!209 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !212, line: 47, size: 128, elements: !213)
!212 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/uio.h", directory: "/root/.unikraft/apps/redis/build")
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !211, file: !212, line: 48, baseType: !143, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !211, file: !212, line: 49, baseType: !216, size: 64, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !217, line: 40, baseType: !218)
!217 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !209, line: 129, baseType: !134)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !220, line: 49, baseType: !142)
!220 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netvector", file: !37, line: 293, size: 128, elements: !223)
!223 = !{!224, !227}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !222, file: !37, line: 295, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !222, file: !37, line: 297, baseType: !216, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !153, line: 94, size: 128, elements: !231)
!231 = !{!232, !233, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "sa_len", scope: !230, file: !153, line: 95, baseType: !156, size: 8)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !230, file: !153, line: 96, baseType: !161, size: 8, offset: 8)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !230, file: !153, line: 97, baseType: !235, size: 112, offset: 16)
!235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 112, elements: !236)
!236 = !{!237}
!237 = !DISubrange(count: 14)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwip_select_cb", file: !240, line: 147, size: 704, elements: !241)
!240 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/priv/sockets_priv.h", directory: "/root/.unikraft/apps/redis/build")
!241 = !{!242, !243, !244, !255, !256, !257, !264, !266, !267}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !240, line: 149, baseType: !238, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !239, file: !240, line: 151, baseType: !238, size: 64, offset: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "readset", scope: !239, file: !240, line: 154, baseType: !245, size: 64, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "_types_fd_set", file: !247, line: 55, baseType: !248)
!247 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/select.h", directory: "/root/.unikraft/apps/redis/build")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_types_fd_set", file: !247, line: 53, size: 64, elements: !249)
!249 = !{!250}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "fds_bits", scope: !248, file: !247, line: 54, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 64, elements: !253)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_mask", file: !247, line: 45, baseType: !134)
!253 = !{!254}
!254 = !DISubrange(count: 1)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "writeset", scope: !239, file: !240, line: 156, baseType: !245, size: 64, offset: 192)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "exceptset", scope: !239, file: !240, line: 158, baseType: !245, size: 64, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "poll_fds", scope: !239, file: !240, line: 162, baseType: !258, size: 64, offset: 320)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !153, line: 542, size: 64, elements: !260)
!260 = !{!261, !262, !263}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !259, file: !153, line: 544, baseType: !80, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !259, file: !153, line: 545, baseType: !150, size: 16, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !259, file: !153, line: 546, baseType: !150, size: 16, offset: 48)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nfds", scope: !239, file: !240, line: 164, baseType: !265, size: 32, offset: 384)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "nfds_t", file: !153, line: 541, baseType: !7)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "sem_signalled", scope: !239, file: !240, line: 167, baseType: !80, size: 32, offset: 416)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !239, file: !240, line: 169, baseType: !268, size: 256, offset: 448)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sem_t", file: !269, line: 72, baseType: !270)
!269 = !DIFile(filename: "/root/.unikraft/libs/lwip/include/arch/sys_arch.h", directory: "/root/.unikraft/apps/redis/build")
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 69, size: 256, elements: !271)
!271 = !{!272, !695}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !270, file: !269, line: 70, baseType: !273, size: 192)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_semaphore", file: !274, line: 51, size: 192, elements: !275)
!274 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uklock/include/uk/semaphore.h", directory: "/root/.unikraft/apps/redis/build")
!275 = !{!276, !277}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !273, file: !274, line: 52, baseType: !142, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !273, file: !274, line: 53, baseType: !278, size: 128, offset: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_waitq", file: !279, line: 42, size: 128, elements: !280)
!279 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/wait_types.h", directory: "/root/.unikraft/apps/redis/build")
!280 = !{!281, !693}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "stqh_first", scope: !278, file: !279, line: 42, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_waitq_entry", file: !279, line: 35, size: 192, elements: !284)
!284 = !{!285, !286, !689}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "waiting", scope: !283, file: !279, line: 36, baseType: !80, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !283, file: !279, line: 37, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread", file: !289, line: 59, size: 1024, elements: !290)
!289 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/thread.h", directory: "/root/.unikraft/apps/redis/build")
!290 = !{!291, !294, !295, !296, !297, !303, !304, !307, !309, !310, !457, !458, !459, !659}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 60, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !288, file: !289, line: 61, baseType: !143, size: 64, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tls", scope: !288, file: !289, line: 62, baseType: !143, size: 64, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !288, file: !289, line: 63, baseType: !143, size: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "thread_list", scope: !288, file: !289, line: 64, baseType: !298, size: 128, offset: 256)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !288, file: !289, line: 64, size: 128, elements: !299)
!299 = !{!300, !301}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !298, file: !289, line: 64, baseType: !287, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !298, file: !289, line: 64, baseType: !302, size: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !288, file: !289, line: 65, baseType: !170, size: 32, offset: 384)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_time", scope: !288, file: !289, line: 66, baseType: !305, size: 64, offset: 448)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__snsec", file: !306, line: 49, baseType: !141)
!306 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/arch/time.h", directory: "/root/.unikraft/apps/redis/build")
!307 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !288, file: !289, line: 67, baseType: !308, size: 8, offset: 512)
!308 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_threads", scope: !288, file: !289, line: 68, baseType: !278, size: 128, offset: 576)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !288, file: !289, line: 69, baseType: !311, size: 64, offset: 704)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_sched", file: !313, line: 90, size: 2176, elements: !314)
!313 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/sched.h", directory: "/root/.unikraft/apps/redis/build")
!314 = !{!315, !320, !337, !342, !344, !346, !351, !359, !364, !370, !371, !372, !377, !454, !455, !456}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "yield", scope: !312, file: !313, line: 91, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_yield_func_t", file: !313, line: 68, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DISubroutineType(types: !319)
!319 = !{null, !311}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "thread_add", scope: !312, file: !313, line: 93, baseType: !321, size: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_add_func_t", file: !313, line: 71, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!80, !311, !287, !325}
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_thread_attr_t", file: !328, line: 62, baseType: !329)
!328 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/thread_attr.h", directory: "/root/.unikraft/apps/redis/build")
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_attr", file: !328, line: 55, size: 128, elements: !330)
!330 = !{!331, !332, !334}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "detached", scope: !329, file: !328, line: 57, baseType: !308, size: 8)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !329, file: !328, line: 59, baseType: !333, size: 32, offset: 32)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "prio_t", file: !328, line: 53, baseType: !80)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "timeslice", scope: !329, file: !328, line: 61, baseType: !335, size: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nsec", file: !306, line: 48, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !140, line: 129, baseType: !134)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "thread_remove", scope: !312, file: !313, line: 94, baseType: !338, size: 64, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_remove_func_t", file: !313, line: 74, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DISubroutineType(types: !341)
!341 = !{null, !311, !287}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "thread_blocked", scope: !312, file: !313, line: 95, baseType: !343, size: 64, offset: 192)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_blocked_func_t", file: !313, line: 76, baseType: !339)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "thread_woken", scope: !312, file: !313, line: 96, baseType: !345, size: 64, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_woken_func_t", file: !313, line: 78, baseType: !339)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "thread_set_prio", scope: !312, file: !313, line: 98, baseType: !347, size: 64, offset: 320)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_set_prio_func_t", file: !313, line: 81, baseType: !348)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!80, !311, !287, !333}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_get_prio", scope: !312, file: !313, line: 99, baseType: !352, size: 64, offset: 384)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_get_prio_func_t", file: !313, line: 83, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!80, !311, !356, !358}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "thread_set_tslice", scope: !312, file: !313, line: 100, baseType: !360, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_set_tslice_func_t", file: !313, line: 85, baseType: !361)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!80, !311, !287, !80}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_get_tslice", scope: !312, file: !313, line: 101, baseType: !365, size: 64, offset: 512)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_sched_thread_get_tslice_func_t", file: !313, line: 87, baseType: !366)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!80, !311, !356, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "threads_started", scope: !312, file: !313, line: 104, baseType: !308, size: 8, offset: 576)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "idle", scope: !312, file: !313, line: 105, baseType: !288, size: 1024, offset: 640)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "exited_threads", scope: !312, file: !313, line: 106, baseType: !373, size: 128, offset: 1664)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_list", file: !289, line: 93, size: 128, elements: !374)
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_first", scope: !373, file: !289, line: 93, baseType: !287, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tqh_last", scope: !373, file: !289, line: 93, baseType: !302, size: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "plat_ctx_cbs", scope: !312, file: !313, line: 107, baseType: !378, size: 192, offset: 1792)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ukplat_ctx_callbacks", file: !379, line: 59, size: 192, elements: !380)
!379 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/plat/thread.h", directory: "/root/.unikraft/apps/redis/build")
!380 = !{!381, !445, !449}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "create_cb", scope: !378, file: !379, line: 61, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "ukplat_ctx_create_func_t", file: !379, line: 51, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!143, !386, !134, !134}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_alloc", file: !388, line: 77, size: 832, elements: !389)
!388 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukalloc/include/uk/alloc.h", directory: "/root/.unikraft/apps/redis/build")
!389 = !{!390, !396, !401, !406, !412, !414, !419, !420, !421, !426, !431, !436, !437, !438}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "malloc", scope: !387, file: !388, line: 79, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_malloc_func_t", file: !388, line: 54, baseType: !392)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DISubroutineType(types: !394)
!394 = !{!143, !386, !395}
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !220, line: 58, baseType: !134)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "calloc", scope: !387, file: !388, line: 80, baseType: !397, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_calloc_func_t", file: !388, line: 56, baseType: !398)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!143, !386, !395, !395}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !387, file: !388, line: 81, baseType: !402, size: 64, offset: 128)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_realloc_func_t", file: !388, line: 62, baseType: !403)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!143, !386, !143, !395}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "posix_memalign", scope: !387, file: !388, line: 82, baseType: !407, size: 64, offset: 192)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_posix_memalign_func_t", file: !388, line: 58, baseType: !408)
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!409 = !DISubroutineType(types: !410)
!410 = !{!80, !386, !411, !395, !395}
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "memalign", scope: !387, file: !388, line: 83, baseType: !413, size: 64, offset: 256)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_memalign_func_t", file: !388, line: 60, baseType: !398)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !387, file: !388, line: 84, baseType: !415, size: 64, offset: 320)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_free_func_t", file: !388, line: 64, baseType: !416)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !386, !143}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "free_backend", scope: !387, file: !388, line: 87, baseType: !415, size: 64, offset: 384)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_backend", scope: !387, file: !388, line: 88, baseType: !391, size: 64, offset: 448)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "palloc", scope: !387, file: !388, line: 92, baseType: !422, size: 64, offset: 512)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_palloc_func_t", file: !388, line: 66, baseType: !423)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DISubroutineType(types: !425)
!425 = !{!143, !386, !134}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "pfree", scope: !387, file: !388, line: 93, baseType: !427, size: 64, offset: 576)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_pfree_func_t", file: !388, line: 68, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !386, !143, !134}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "addmem", scope: !387, file: !388, line: 99, baseType: !432, size: 64, offset: 640)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "uk_alloc_addmem_func_t", file: !388, line: 70, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!80, !386, !143, !395}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !387, file: !388, line: 100, baseType: !395, size: 64, offset: 704)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !387, file: !388, line: 103, baseType: !386, size: 64, offset: 768)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !387, file: !388, line: 104, baseType: !439, offset: 832)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, elements: !443)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !136, line: 20, baseType: !441)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !138, line: 41, baseType: !442)
!442 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!443 = !{!444}
!444 = !DISubrange(count: -1)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start_cb", scope: !378, file: !379, line: 63, baseType: !446, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{null, !143}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "switch_cb", scope: !378, file: !379, line: 65, baseType: !450, size: 64, offset: 128)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ukplat_ctx_switch_func_t", file: !379, line: 56, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !143, !143}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !312, file: !313, line: 108, baseType: !386, size: 64, offset: 1984)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !312, file: !313, line: 109, baseType: !311, size: 64, offset: 2048)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !312, file: !313, line: 110, baseType: !143, size: 64, offset: 2112)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !288, file: !289, line: 70, baseType: !143, size: 64, offset: 768)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !288, file: !289, line: 72, baseType: !80, size: 32, offset: 832)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "reent", scope: !288, file: !289, line: 82, baseType: !460, size: 64, offset: 896)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !462, line: 569, size: 14912, elements: !463)
!462 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!463 = !{!464, !465, !531, !532, !533, !534, !538, !539, !542, !543, !547, !559, !560, !561, !563, !564, !565, !623, !644, !645, !650, !657}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !461, file: !462, line: 571, baseType: !80, size: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !461, file: !462, line: 576, baseType: !466, size: 64, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !462, line: 287, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !462, line: 181, size: 1408, elements: !469)
!469 = !{!470, !472, !473, !474, !475, !476, !481, !482, !483, !487, !491, !496, !500, !501, !502, !503, !507, !509, !510, !511, !513, !514, !518, !530}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !468, file: !462, line: 182, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !468, file: !462, line: 183, baseType: !80, size: 32, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !468, file: !462, line: 184, baseType: !80, size: 32, offset: 96)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !468, file: !462, line: 185, baseType: !150, size: 16, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !468, file: !462, line: 186, baseType: !150, size: 16, offset: 144)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !468, file: !462, line: 187, baseType: !477, size: 128, offset: 192)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !462, line: 117, size: 128, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !477, file: !462, line: 118, baseType: !471, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !477, file: !462, line: 119, baseType: !80, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !468, file: !462, line: 188, baseType: !80, size: 32, offset: 320)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !468, file: !462, line: 195, baseType: !143, size: 64, offset: 384)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !468, file: !462, line: 197, baseType: !484, size: 64, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!208, !460, !143, !144, !80}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !468, file: !462, line: 199, baseType: !488, size: 64, offset: 512)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!208, !460, !143, !292, !80}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !468, file: !462, line: 202, baseType: !492, size: 64, offset: 576)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!495, !460, !143, !495, !80}
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !209, line: 114, baseType: !142)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !468, file: !462, line: 203, baseType: !497, size: 64, offset: 640)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!80, !460, !143}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !468, file: !462, line: 206, baseType: !477, size: 128, offset: 704)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !468, file: !462, line: 207, baseType: !471, size: 64, offset: 832)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !468, file: !462, line: 208, baseType: !80, size: 32, offset: 896)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !468, file: !462, line: 211, baseType: !504, size: 24, offset: 928)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 24, elements: !505)
!505 = !{!506}
!506 = !DISubrange(count: 3)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !468, file: !462, line: 212, baseType: !508, size: 8, offset: 952)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 8, elements: !253)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !468, file: !462, line: 215, baseType: !477, size: 128, offset: 960)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !468, file: !462, line: 218, baseType: !80, size: 32, offset: 1088)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !468, file: !462, line: 219, baseType: !512, size: 64, offset: 1152)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !209, line: 44, baseType: !142)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !468, file: !462, line: 222, baseType: !460, size: 64, offset: 1216)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !468, file: !462, line: 226, baseType: !515, size: 32, offset: 1280)
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !209, line: 175, baseType: !516)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !517, line: 12, baseType: !80)
!517 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!518 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !468, file: !462, line: 228, baseType: !519, size: 64, offset: 1312)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !209, line: 171, baseType: !520)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !209, line: 163, size: 64, elements: !521)
!521 = !{!522, !523}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !520, file: !209, line: 165, baseType: !80, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !520, file: !209, line: 170, baseType: !524, size: 32, offset: 32)
!524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !520, file: !209, line: 166, size: 32, elements: !525)
!525 = !{!526, !528}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !524, file: !209, line: 168, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !220, line: 124, baseType: !7)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !524, file: !209, line: 169, baseType: !529, size: 32)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 32, elements: !181)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !468, file: !462, line: 229, baseType: !80, size: 32, offset: 1376)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !461, file: !462, line: 576, baseType: !466, size: 64, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !461, file: !462, line: 576, baseType: !466, size: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !461, file: !462, line: 578, baseType: !80, size: 32, offset: 256)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !461, file: !462, line: 579, baseType: !535, size: 200, offset: 288)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 200, elements: !536)
!536 = !{!537}
!537 = !DISubrange(count: 25)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !461, file: !462, line: 582, baseType: !80, size: 32, offset: 512)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !461, file: !462, line: 583, baseType: !540, size: 64, offset: 576)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !462, line: 40, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !461, file: !462, line: 585, baseType: !80, size: 32, offset: 640)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !461, file: !462, line: 587, baseType: !544, size: 64, offset: 704)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DISubroutineType(types: !546)
!546 = !{null, !460}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !461, file: !462, line: 590, baseType: !548, size: 64, offset: 768)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !462, line: 47, size: 256, elements: !550)
!550 = !{!551, !552, !553, !554, !555, !556}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !549, file: !462, line: 49, baseType: !548, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 96)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !549, file: !462, line: 50, baseType: !80, size: 32, offset: 160)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !549, file: !462, line: 51, baseType: !557, size: 32, offset: 192)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 32, elements: !253)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !462, line: 25, baseType: !7)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !461, file: !462, line: 591, baseType: !80, size: 32, offset: 832)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !461, file: !462, line: 592, baseType: !548, size: 64, offset: 896)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !461, file: !462, line: 593, baseType: !562, size: 64, offset: 960)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !461, file: !462, line: 596, baseType: !80, size: 32, offset: 1024)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !461, file: !462, line: 597, baseType: !144, size: 64, offset: 1088)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !461, file: !462, line: 632, baseType: !566, size: 2880, offset: 1152)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !462, line: 599, size: 2880, elements: !567)
!567 = !{!568, !614}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !566, file: !462, line: 622, baseType: !569, size: 1728)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !462, line: 601, size: 1728, elements: !570)
!570 = !{!571, !572, !573, !577, !589, !590, !592, !599, !600, !601, !602, !603, !607, !608, !609, !610, !611, !612, !613}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !569, file: !462, line: 603, baseType: !7, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !569, file: !462, line: 604, baseType: !144, size: 64, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !569, file: !462, line: 605, baseType: !574, size: 208, offset: 128)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 208, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 26)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !569, file: !462, line: 606, baseType: !578, size: 288, offset: 352)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !462, line: 55, size: 288, elements: !579)
!579 = !{!580, !581, !582, !583, !584, !585, !586, !587, !588}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !578, file: !462, line: 57, baseType: !80, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !578, file: !462, line: 58, baseType: !80, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !578, file: !462, line: 59, baseType: !80, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !578, file: !462, line: 60, baseType: !80, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !578, file: !462, line: 61, baseType: !80, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !578, file: !462, line: 62, baseType: !80, size: 32, offset: 160)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !578, file: !462, line: 63, baseType: !80, size: 32, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !578, file: !462, line: 64, baseType: !80, size: 32, offset: 224)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !578, file: !462, line: 65, baseType: !80, size: 32, offset: 256)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !569, file: !462, line: 607, baseType: !80, size: 32, offset: 640)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !569, file: !462, line: 608, baseType: !591, size: 64, offset: 704)
!591 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !569, file: !462, line: 609, baseType: !593, size: 112, offset: 768)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !462, line: 319, size: 112, elements: !594)
!594 = !{!595, !597, !598}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !593, file: !462, line: 320, baseType: !596, size: 48)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 48, elements: !505)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !593, file: !462, line: 321, baseType: !596, size: 48, offset: 48)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !593, file: !462, line: 322, baseType: !167, size: 16, offset: 96)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !569, file: !462, line: 610, baseType: !519, size: 64, offset: 896)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !569, file: !462, line: 611, baseType: !519, size: 64, offset: 960)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !569, file: !462, line: 612, baseType: !519, size: 64, offset: 1024)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !569, file: !462, line: 613, baseType: !200, size: 64, offset: 1088)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !569, file: !462, line: 614, baseType: !604, size: 192, offset: 1152)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 192, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 24)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !569, file: !462, line: 615, baseType: !80, size: 32, offset: 1344)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !569, file: !462, line: 616, baseType: !519, size: 64, offset: 1376)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !569, file: !462, line: 617, baseType: !519, size: 64, offset: 1440)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !569, file: !462, line: 618, baseType: !519, size: 64, offset: 1504)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !569, file: !462, line: 619, baseType: !519, size: 64, offset: 1568)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !569, file: !462, line: 620, baseType: !519, size: 64, offset: 1632)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !569, file: !462, line: 621, baseType: !80, size: 32, offset: 1696)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !566, file: !462, line: 631, baseType: !615, size: 2880)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !462, line: 626, size: 2880, elements: !616)
!616 = !{!617, !621}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !615, file: !462, line: 629, baseType: !618, size: 1920)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 1920, elements: !619)
!619 = !{!620}
!620 = !DISubrange(count: 30)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !615, file: !462, line: 630, baseType: !622, size: 960, offset: 1920)
!622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 960, elements: !619)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !461, file: !462, line: 636, baseType: !624, size: 64, offset: 4032)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !462, line: 93, size: 6336, elements: !626)
!626 = !{!627, !628, !629, !636}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !625, file: !462, line: 94, baseType: !624, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !625, file: !462, line: 95, baseType: !80, size: 32, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !625, file: !462, line: 97, baseType: !630, size: 2048, offset: 128)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 2048, elements: !634)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{null}
!634 = !{!635}
!635 = !DISubrange(count: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !625, file: !462, line: 98, baseType: !637, size: 4160, offset: 2176)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !462, line: 74, size: 4160, elements: !638)
!638 = !{!639, !641, !642, !643}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !637, file: !462, line: 75, baseType: !640, size: 2048)
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 2048, elements: !634)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !637, file: !462, line: 76, baseType: !640, size: 2048, offset: 2048)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !637, file: !462, line: 78, baseType: !558, size: 32, offset: 4096)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !637, file: !462, line: 81, baseType: !558, size: 32, offset: 4128)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !461, file: !462, line: 637, baseType: !625, size: 6336, offset: 4096)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !461, file: !462, line: 641, baseType: !646, size: 64, offset: 10432)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !80}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !461, file: !462, line: 646, baseType: !651, size: 192, offset: 10496)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !462, line: 291, size: 192, elements: !652)
!652 = !{!653, !655, !656}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !651, file: !462, line: 293, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !651, file: !462, line: 294, baseType: !80, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !651, file: !462, line: 295, baseType: !466, size: 64, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !461, file: !462, line: 648, baseType: !658, size: 4224, offset: 10688)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 4224, elements: !505)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "signals_container", scope: !288, file: !289, line: 85, baseType: !660, size: 64, offset: 960)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_sig", file: !6, line: 114, size: 640, elements: !662)
!662 = !{!663, !667, !668, !675, !688}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !661, file: !6, line: 116, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !665, line: 64, baseType: !666)
!665 = !DIFile(filename: "/root/.unikraft/libs/newlib/musl-imported/include/signal.h", directory: "/root/.unikraft/apps/redis/build")
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !665, line: 63, baseType: !134)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !661, file: !6, line: 118, baseType: !664, size: 64, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "pending_signals", scope: !661, file: !6, line: 120, baseType: !669, size: 128, offset: 128)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_list_head", file: !670, line: 51, size: 128, elements: !671)
!670 = !DIFile(filename: "/root/.unikraft/unikraft/include/uk/list.h", directory: "/root/.unikraft/apps/redis/build")
!671 = !{!672, !674}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !669, file: !670, line: 52, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !669, file: !670, line: 53, baseType: !673, size: 64, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !661, file: !6, line: 122, baseType: !676, size: 256, offset: 256)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_thread_sig_wait", file: !6, line: 98, size: 256, elements: !677)
!677 = !{!678, !679, !680}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !676, file: !6, line: 107, baseType: !5, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "awaited", scope: !676, file: !6, line: 109, baseType: !664, size: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "received_signal", scope: !676, file: !6, line: 111, baseType: !681, size: 96, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !665, line: 72, baseType: !682)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !665, line: 68, size: 96, elements: !683)
!683 = !{!684, !685, !686}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !682, file: !665, line: 69, baseType: !80, size: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !682, file: !665, line: 70, baseType: !80, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !682, file: !665, line: 71, baseType: !687, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !665, line: 61, baseType: !80)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !661, file: !6, line: 124, baseType: !669, size: 128, offset: 512)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "thread_list", scope: !283, file: !279, line: 38, baseType: !690, size: 64, offset: 128)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !283, file: !279, line: 38, size: 64, elements: !691)
!691 = !{!692}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "stqe_next", scope: !690, file: !279, line: 38, baseType: !282, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "stqh_last", scope: !278, file: !279, line: 42, baseType: !694, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !270, file: !269, line: 71, baseType: !80, size: 32, offset: 192)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip4_addr_t", file: !699, line: 57, baseType: !700)
!699 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip4_addr.h", directory: "/root/.unikraft/apps/redis/build")
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip4_addr", file: !699, line: 51, size: 32, elements: !701)
!701 = !{!702}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !700, file: !699, line: 52, baseType: !169, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip6_addr_t", file: !706, line: 67, baseType: !707)
!706 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip6_addr.h", directory: "/root/.unikraft/apps/redis/build")
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_addr", file: !706, line: 59, size: 160, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !707, file: !706, line: 60, baseType: !180, size: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !707, file: !706, line: 62, baseType: !156, size: 8, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnode", file: !18, line: 69, size: 960, elements: !715)
!715 = !{!716, !717, !718, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "v_ino", scope: !714, file: !18, line: 70, baseType: !135, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "v_link", scope: !714, file: !18, line: 71, baseType: !669, size: 128, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "v_mount", scope: !714, file: !18, line: 72, baseType: !719, size: 64, offset: 192)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mount", file: !721, line: 46, size: 16960, elements: !722)
!721 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/mount.h", directory: "/root/.unikraft/apps/redis/build")
!722 = !{!723, !975, !976, !977, !981, !982, !985, !986, !987, !988, !989}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "m_op", scope: !720, file: !721, line: 47, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vfsops", file: !721, line: 148, size: 384, elements: !726)
!726 = !{!727, !731, !735, !739, !743, !776}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_mount", scope: !725, file: !721, line: 149, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DISubroutineType(types: !730)
!730 = !{!80, !719, !292, !80, !225}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_unmount", scope: !725, file: !721, line: 150, baseType: !732, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{!80, !719, !80}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_sync", scope: !725, file: !721, line: 151, baseType: !736, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!80, !719}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_vget", scope: !725, file: !721, line: 152, baseType: !740, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!80, !719, !713}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_statfs", scope: !725, file: !721, line: 153, baseType: !744, size: 64, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!80, !719, !747}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !749, line: 14, size: 896, elements: !750)
!749 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/statfs.h", directory: "/root/.unikraft/apps/redis/build")
!750 = !{!751, !752, !753, !756, !757, !758, !762, !763, !771, !772, !773, !774}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !748, file: !749, line: 15, baseType: !134, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !748, file: !749, line: 15, baseType: !134, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !748, file: !749, line: 16, baseType: !754, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsblkcnt_t", file: !207, line: 144, baseType: !755)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !209, line: 36, baseType: !137)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !748, file: !749, line: 16, baseType: !754, size: 64, offset: 192)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !748, file: !749, line: 16, baseType: !754, size: 64, offset: 256)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !748, file: !749, line: 17, baseType: !759, size: 32, offset: 320)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsfilcnt_t", file: !760, line: 43, baseType: !761)
!760 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/sys/statvfs.h", directory: "/root/.unikraft/apps/redis/build")
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !209, line: 40, baseType: !171)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !748, file: !749, line: 17, baseType: !759, size: 32, offset: 352)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !748, file: !749, line: 18, baseType: !764, size: 64, offset: 384)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsid_t", file: !749, line: 12, baseType: !765)
!765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__fsid_t", file: !749, line: 10, size: 64, elements: !766)
!766 = !{!767}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !765, file: !749, line: 11, baseType: !768, size: 64)
!768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 64, elements: !769)
!769 = !{!770}
!770 = !DISubrange(count: 2)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !748, file: !749, line: 19, baseType: !134, size: 64, offset: 448)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !748, file: !749, line: 19, baseType: !134, size: 64, offset: 512)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !748, file: !749, line: 19, baseType: !134, size: 64, offset: 576)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !748, file: !749, line: 19, baseType: !775, size: 256, offset: 640)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 256, elements: !181)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_vnops", scope: !725, file: !721, line: 154, baseType: !777, size: 64, offset: 320)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vnops", file: !18, line: 178, size: 1472, elements: !779)
!779 = !{!780, !825, !830, !843, !848, !853, !858, !860, !879, !884, !891, !896, !901, !903, !905, !941, !943, !948, !953, !955, !960, !965, !970}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "vop_open", scope: !778, file: !18, line: 179, baseType: !781, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_open_t", file: !18, line: 148, baseType: !782)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!80, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vfscore_file", file: !787, line: 53, size: 640, elements: !788)
!787 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/file.h", directory: "/root/.unikraft/apps/redis/build")
!788 = !{!789, !790, !791, !792, !795, !796, !797, !824}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !786, file: !787, line: 54, baseType: !80, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !786, file: !787, line: 55, baseType: !80, size: 32, offset: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !786, file: !787, line: 56, baseType: !80, size: 32, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "f_offset", scope: !786, file: !787, line: 57, baseType: !793, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !207, line: 173, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !209, line: 100, baseType: !512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "f_data", scope: !786, file: !787, line: 58, baseType: !143, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "f_vfs_flags", scope: !786, file: !787, line: 59, baseType: !80, size: 32, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "f_dentry", scope: !786, file: !787, line: 60, baseType: !798, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !800, line: 42, size: 1088, elements: !801)
!800 = !DIFile(filename: "/root/.unikraft/unikraft/lib/vfscore/include/vfscore/dentry.h", directory: "/root/.unikraft/apps/redis/build")
!801 = !{!802, !809, !810, !811, !812, !813, !814, !815, !822, !823}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "d_link", scope: !799, file: !800, line: 43, baseType: !803, size: 128)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_hlist_node", file: !670, line: 271, size: 128, elements: !804)
!804 = !{!805, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !803, file: !670, line: 272, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !803, file: !670, line: 272, baseType: !808, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "d_refcnt", scope: !799, file: !800, line: 44, baseType: !80, size: 32, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "d_path", scope: !799, file: !800, line: 45, baseType: !144, size: 64, offset: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "d_vnode", scope: !799, file: !800, line: 46, baseType: !713, size: 64, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "d_mount", scope: !799, file: !800, line: 47, baseType: !719, size: 64, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !799, file: !800, line: 48, baseType: !798, size: 64, offset: 384)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "d_names_link", scope: !799, file: !800, line: 49, baseType: !669, size: 128, offset: 448)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "d_lock", scope: !799, file: !800, line: 50, baseType: !816, size: 256, offset: 576)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uk_mutex", file: !817, line: 58, size: 256, elements: !818)
!817 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uklock/include/uk/mutex.h", directory: "/root/.unikraft/apps/redis/build")
!818 = !{!819, !820, !821}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !816, file: !817, line: 59, baseType: !80, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !816, file: !817, line: 60, baseType: !287, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !816, file: !817, line: 61, baseType: !278, size: 128, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "d_child_list", scope: !799, file: !800, line: 51, baseType: !669, size: 128, offset: 832)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "d_child_link", scope: !799, file: !800, line: 52, baseType: !669, size: 128, offset: 960)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !786, file: !787, line: 61, baseType: !816, size: 256, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "vop_close", scope: !778, file: !18, line: 180, baseType: !826, size: 64, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_close_t", file: !18, line: 149, baseType: !827)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!80, !713, !785}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "vop_read", scope: !778, file: !18, line: 181, baseType: !831, size: 64, offset: 128)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_read_t", file: !18, line: 150, baseType: !832)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!80, !713, !785, !835, !80}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uio", file: !13, line: 53, size: 320, elements: !837)
!837 = !{!838, !839, !840, !841, !842}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "uio_iov", scope: !836, file: !13, line: 54, baseType: !210, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "uio_iovcnt", scope: !836, file: !13, line: 55, baseType: !80, size: 32, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "uio_offset", scope: !836, file: !13, line: 56, baseType: !793, size: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "uio_resid", scope: !836, file: !13, line: 57, baseType: !206, size: 64, offset: 192)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "uio_rw", scope: !836, file: !13, line: 58, baseType: !12, size: 32, offset: 256)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "vop_write", scope: !778, file: !18, line: 182, baseType: !844, size: 64, offset: 192)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_write_t", file: !18, line: 152, baseType: !845)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!80, !713, !835, !80}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "vop_seek", scope: !778, file: !18, line: 183, baseType: !849, size: 64, offset: 256)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_seek_t", file: !18, line: 153, baseType: !850)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!80, !713, !785, !793, !793}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "vop_ioctl", scope: !778, file: !18, line: 184, baseType: !854, size: 64, offset: 320)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_ioctl_t", file: !18, line: 155, baseType: !855)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!80, !713, !785, !134, !143}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "vop_fsync", scope: !778, file: !18, line: 185, baseType: !859, size: 64, offset: 384)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_fsync_t", file: !18, line: 156, baseType: !827)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "vop_readdir", scope: !778, file: !18, line: 186, baseType: !861, size: 64, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_readdir_t", file: !18, line: 157, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!80, !713, !785, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !867, line: 55, size: 2240, elements: !868)
!867 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/dirent.h", directory: "/root/.unikraft/apps/redis/build")
!868 = !{!869, !872, !873, !874, !875}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !866, file: !867, line: 56, baseType: !870, size: 16)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !207, line: 155, baseType: !871)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !209, line: 73, baseType: !167)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !866, file: !867, line: 57, baseType: !793, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !866, file: !867, line: 58, baseType: !167, size: 16, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !866, file: !867, line: 59, baseType: !159, size: 8, offset: 144)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !866, file: !867, line: 60, baseType: !876, size: 2048, offset: 152)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 2048, elements: !877)
!877 = !{!878}
!878 = !DISubrange(count: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "vop_lookup", scope: !778, file: !18, line: 187, baseType: !880, size: 64, offset: 512)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_lookup_t", file: !18, line: 158, baseType: !881)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DISubroutineType(types: !883)
!883 = !{!80, !713, !144, !712}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "vop_create", scope: !778, file: !18, line: 188, baseType: !885, size: 64, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_create_t", file: !18, line: 159, baseType: !886)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!80, !713, !144, !889}
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !207, line: 205, baseType: !890)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !209, line: 88, baseType: !171)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "vop_remove", scope: !778, file: !18, line: 189, baseType: !892, size: 64, offset: 640)
!892 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_remove_t", file: !18, line: 160, baseType: !893)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!80, !713, !713, !144}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "vop_rename", scope: !778, file: !18, line: 190, baseType: !897, size: 64, offset: 704)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_rename_t", file: !18, line: 161, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!80, !713, !713, !144, !713, !713, !144}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "vop_mkdir", scope: !778, file: !18, line: 191, baseType: !902, size: 64, offset: 768)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_mkdir_t", file: !18, line: 163, baseType: !886)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "vop_rmdir", scope: !778, file: !18, line: 192, baseType: !904, size: 64, offset: 832)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_rmdir_t", file: !18, line: 164, baseType: !893)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "vop_getattr", scope: !778, file: !18, line: 193, baseType: !906, size: 64, offset: 896)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_getattr_t", file: !18, line: 165, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!80, !713, !910}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vattr", file: !18, line: 92, size: 768, elements: !912)
!912 = !{!913, !914, !915, !916, !919, !922, !925, !928, !929, !936, !937, !938, !939, !940}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "va_mask", scope: !911, file: !18, line: 93, baseType: !7, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "va_type", scope: !911, file: !18, line: 94, baseType: !17, size: 32, offset: 32)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "va_mode", scope: !911, file: !18, line: 95, baseType: !889, size: 32, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "va_nlink", scope: !911, file: !18, line: 96, baseType: !917, size: 16, offset: 96)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !207, line: 210, baseType: !918)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !209, line: 210, baseType: !167)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "va_uid", scope: !911, file: !18, line: 97, baseType: !920, size: 16, offset: 112)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !207, line: 181, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !209, line: 58, baseType: !167)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "va_gid", scope: !911, file: !18, line: 98, baseType: !923, size: 16, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !207, line: 185, baseType: !924)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !209, line: 61, baseType: !167)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "va_fsid", scope: !911, file: !18, line: 99, baseType: !926, size: 16, offset: 144)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !207, line: 177, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !209, line: 54, baseType: !150)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "va_nodeid", scope: !911, file: !18, line: 100, baseType: !870, size: 16, offset: 160)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "va_atime", scope: !911, file: !18, line: 101, baseType: !930, size: 128, offset: 192)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !931, line: 52, size: 128, elements: !932)
!931 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!932 = !{!933, !935}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !930, file: !931, line: 53, baseType: !934, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !931, line: 34, baseType: !142)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !930, file: !931, line: 54, baseType: !142, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "va_mtime", scope: !911, file: !18, line: 102, baseType: !930, size: 128, offset: 320)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "va_ctime", scope: !911, file: !18, line: 103, baseType: !930, size: 128, offset: 448)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "va_rdev", scope: !911, file: !18, line: 104, baseType: !926, size: 16, offset: 576)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "va_nblocks", scope: !911, file: !18, line: 105, baseType: !135, size: 64, offset: 640)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "va_size", scope: !911, file: !18, line: 106, baseType: !793, size: 64, offset: 704)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "vop_setattr", scope: !778, file: !18, line: 194, baseType: !942, size: 64, offset: 960)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_setattr_t", file: !18, line: 166, baseType: !907)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "vop_inactive", scope: !778, file: !18, line: 195, baseType: !944, size: 64, offset: 1024)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_inactive_t", file: !18, line: 167, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!80, !713}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "vop_truncate", scope: !778, file: !18, line: 196, baseType: !949, size: 64, offset: 1088)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_truncate_t", file: !18, line: 168, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!80, !713, !793}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "vop_link", scope: !778, file: !18, line: 197, baseType: !954, size: 64, offset: 1152)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_link_t", file: !18, line: 169, baseType: !893)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "vop_cache", scope: !778, file: !18, line: 198, baseType: !956, size: 64, offset: 1216)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_cache_t", file: !18, line: 170, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!80, !713, !785, !835}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "vop_fallocate", scope: !778, file: !18, line: 199, baseType: !961, size: 64, offset: 1280)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_fallocate_t", file: !18, line: 171, baseType: !962)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!80, !713, !80, !793, !793}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "vop_readlink", scope: !778, file: !18, line: 200, baseType: !966, size: 64, offset: 1344)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_readlink_t", file: !18, line: 172, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{!80, !713, !835}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "vop_symlink", scope: !778, file: !18, line: 201, baseType: !971, size: 64, offset: 1408)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "vnop_symlink_t", file: !18, line: 173, baseType: !972)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!80, !713, !144, !144}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "m_flags", scope: !720, file: !721, line: 48, baseType: !80, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "m_count", scope: !720, file: !721, line: 49, baseType: !80, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "m_path", scope: !720, file: !721, line: 50, baseType: !978, size: 8192, offset: 128)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 8192, elements: !979)
!979 = !{!980}
!980 = !DISubrange(count: 1024)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "m_special", scope: !720, file: !721, line: 51, baseType: !978, size: 8192, offset: 8320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "m_dev", scope: !720, file: !721, line: 52, baseType: !983, size: 64, offset: 16512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !721, line: 52, flags: DIFlagFwdDecl)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "m_root", scope: !720, file: !721, line: 53, baseType: !798, size: 64, offset: 16576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "m_covered", scope: !720, file: !721, line: 54, baseType: !798, size: 64, offset: 16640)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !720, file: !721, line: 55, baseType: !143, size: 64, offset: 16704)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_list", scope: !720, file: !721, line: 56, baseType: !669, size: 128, offset: 16768)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "m_fsid", scope: !720, file: !721, line: 57, baseType: !764, size: 64, offset: 16896)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "v_op", scope: !714, file: !18, line: 73, baseType: !777, size: 64, offset: 256)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "v_refcnt", scope: !714, file: !18, line: 74, baseType: !80, size: 32, offset: 320)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "v_type", scope: !714, file: !18, line: 75, baseType: !80, size: 32, offset: 352)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "v_flags", scope: !714, file: !18, line: 76, baseType: !80, size: 32, offset: 384)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "v_mode", scope: !714, file: !18, line: 77, baseType: !889, size: 32, offset: 416)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "v_size", scope: !714, file: !18, line: 78, baseType: !793, size: 64, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "v_lock", scope: !714, file: !18, line: 79, baseType: !816, size: 256, offset: 512)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "v_names", scope: !714, file: !18, line: 80, baseType: !669, size: 128, offset: 768)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "v_data", scope: !714, file: !18, line: 81, baseType: !143, size: 64, offset: 896)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1010)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !153, line: 185, size: 192, elements: !1011)
!1011 = !{!1012, !1016}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_name", scope: !1010, file: !153, line: 186, baseType: !1013, size: 48)
!1013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 48, elements: !1014)
!1014 = !{!1015}
!1015 = !DISubrange(count: 6)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !1010, file: !153, line: 200, baseType: !1017, size: 128, offset: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1010, file: !153, line: 187, size: 128, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !1017, file: !153, line: 188, baseType: !230, size: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !1017, file: !153, line: 189, baseType: !230, size: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !1017, file: !153, line: 190, baseType: !230, size: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !1017, file: !153, line: 191, baseType: !230, size: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !1017, file: !153, line: 192, baseType: !230, size: 128)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !1017, file: !153, line: 193, baseType: !150, size: 16)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !1017, file: !153, line: 194, baseType: !80, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !1017, file: !153, line: 195, baseType: !80, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !1017, file: !153, line: 197, baseType: !1013, size: 48)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !1017, file: !153, line: 198, baseType: !1013, size: 48)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !1017, file: !153, line: 199, baseType: !144, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcpflags_t", file: !1035, line: 206, baseType: !164)
!1035 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/tcp.h", directory: "/root/.unikraft/apps/redis/build")
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_mreq", file: !153, line: 374, size: 160, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6mr_multiaddr", scope: !1038, file: !153, line: 375, baseType: !173, size: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6mr_interface", scope: !1038, file: !153, line: 376, baseType: !7, size: 32, offset: 128)
!1042 = !{!0, !1043, !1062, !1067, !1147, !1149, !1151, !1153, !1155, !1157, !1159}
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "__str", scope: !1045, file: !1046, line: 198, type: !200, isLocal: true, isDefinition: true)
!1045 = distinct !DISubprogram(name: "uk_pr_crit", scope: !1046, file: !1046, line: 194, type: !1047, isLocal: true, isDefinition: true, scopeLine: 195, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1049)
!1046 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukdebug/include/uk/print.h", directory: "/root/.unikraft/apps/redis/build")
!1047 = !DISubroutineType(types: !1048)
!1048 = !{null, !292, null}
!1049 = !{!1050, !1051}
!1050 = !DILocalVariable(name: "fmt", arg: 1, scope: !1045, file: !1046, line: 194, type: !292)
!1051 = !DILocalVariable(name: "argp", scope: !1045, file: !1046, line: 196, type: !1052)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1053, line: 32, baseType: !1054)
!1053 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 196, baseType: !1055)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1056, size: 192, elements: !253)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 196, size: 192, elements: !1057)
!1057 = !{!1058, !1059, !1060, !1061}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1056, file: !3, line: 196, baseType: !7, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1056, file: !3, line: 196, baseType: !7, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1056, file: !3, line: 196, baseType: !143, size: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1056, file: !3, line: 196, baseType: !143, size: 64, offset: 128)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__str", scope: !1045, file: !1046, line: 198, type: !1064, isLocal: true, isDefinition: true)
!1064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 80, elements: !1065)
!1065 = !{!1066}
!1066 = !DISubrange(count: 10)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__str", scope: !1069, file: !3, line: 241, type: !1146, isLocal: true, isDefinition: true)
!1069 = distinct !DISubprogram(name: "sock_fd_alloc", scope: !3, file: !3, line: 189, type: !1070, isLocal: true, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1072)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!80, !80}
!1072 = !{!1073, !1074, !1075, !1076, !1082, !1083, !1084, !1085, !1086, !1092, !1093, !1099, !1100, !1101, !1107, !1113, !1114, !1115, !1121, !1122, !1128, !1134, !1140}
!1073 = !DILocalVariable(name: "sock_fd", arg: 1, scope: !1069, file: !3, line: 189, type: !80)
!1074 = !DILocalVariable(name: "ret", scope: !1069, file: !3, line: 191, type: !80)
!1075 = !DILocalVariable(name: "vfs_fd", scope: !1069, file: !3, line: 192, type: !80)
!1076 = !DILocalVariable(name: "file", scope: !1069, file: !3, line: 193, type: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_net_file", file: !3, line: 156, size: 128, elements: !1079)
!1079 = !{!1080, !1081}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "vfscore_file", scope: !1078, file: !3, line: 157, baseType: !785, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "sock_fd", scope: !1078, file: !3, line: 158, baseType: !80, size: 32, offset: 64)
!1082 = !DILocalVariable(name: "vfs_file", scope: !1069, file: !3, line: 194, type: !785)
!1083 = !DILocalVariable(name: "s_dentry", scope: !1069, file: !3, line: 195, type: !798)
!1084 = !DILocalVariable(name: "s_vnode", scope: !1069, file: !3, line: 196, type: !713)
!1085 = !DILocalVariable(name: "_dss_s_vnode", scope: !1069, file: !3, line: 197, type: !712)
!1086 = !DILocalVariable(name: "tid", scope: !1087, file: !3, line: 200, type: !170)
!1087 = distinct !DILexicalBlock(scope: !1088, file: !3, line: 200, column: 2)
!1088 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 200, column: 2)
!1089 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 200, column: 2)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !3, line: 200, column: 2)
!1091 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 200, column: 2)
!1092 = !DILocalVariable(name: "_ret", scope: !1087, file: !3, line: 200, type: !135)
!1093 = !DILocalVariable(name: "tid", scope: !1094, file: !3, line: 224, type: !170)
!1094 = distinct !DILexicalBlock(scope: !1095, file: !3, line: 224, column: 2)
!1095 = distinct !DILexicalBlock(scope: !1096, file: !3, line: 224, column: 2)
!1096 = distinct !DILexicalBlock(scope: !1097, file: !3, line: 224, column: 2)
!1097 = distinct !DILexicalBlock(scope: !1098, file: !3, line: 224, column: 2)
!1098 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 224, column: 2)
!1099 = !DILocalVariable(name: "_ret", scope: !1094, file: !3, line: 224, type: !135)
!1100 = !DILocalVariable(name: "_arg3", scope: !1094, file: !3, line: 224, type: !135)
!1101 = !DILocalVariable(name: "tid", scope: !1102, file: !3, line: 235, type: !170)
!1102 = distinct !DILexicalBlock(scope: !1103, file: !3, line: 235, column: 2)
!1103 = distinct !DILexicalBlock(scope: !1104, file: !3, line: 235, column: 2)
!1104 = distinct !DILexicalBlock(scope: !1105, file: !3, line: 235, column: 2)
!1105 = distinct !DILexicalBlock(scope: !1106, file: !3, line: 235, column: 2)
!1106 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 235, column: 2)
!1107 = !DILocalVariable(name: "tid", scope: !1108, file: !3, line: 241, type: !170)
!1108 = distinct !DILexicalBlock(scope: !1109, file: !3, line: 241, column: 2)
!1109 = distinct !DILexicalBlock(scope: !1110, file: !3, line: 241, column: 2)
!1110 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 241, column: 2)
!1111 = distinct !DILexicalBlock(scope: !1112, file: !3, line: 241, column: 2)
!1112 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 241, column: 2)
!1113 = !DILocalVariable(name: "_ret", scope: !1108, file: !3, line: 241, type: !135)
!1114 = !DILocalVariable(name: "_arg3", scope: !1108, file: !3, line: 241, type: !135)
!1115 = !DILocalVariable(name: "tid", scope: !1116, file: !3, line: 270, type: !170)
!1116 = distinct !DILexicalBlock(scope: !1117, file: !3, line: 270, column: 2)
!1117 = distinct !DILexicalBlock(scope: !1118, file: !3, line: 270, column: 2)
!1118 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 270, column: 2)
!1119 = distinct !DILexicalBlock(scope: !1120, file: !3, line: 270, column: 2)
!1120 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 270, column: 2)
!1121 = !DILocalVariable(name: "_ret", scope: !1116, file: !3, line: 270, type: !135)
!1122 = !DILocalVariable(name: "tid", scope: !1123, file: !3, line: 279, type: !170)
!1123 = distinct !DILexicalBlock(scope: !1124, file: !3, line: 279, column: 2)
!1124 = distinct !DILexicalBlock(scope: !1125, file: !3, line: 279, column: 2)
!1125 = distinct !DILexicalBlock(scope: !1126, file: !3, line: 279, column: 2)
!1126 = distinct !DILexicalBlock(scope: !1127, file: !3, line: 279, column: 2)
!1127 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 279, column: 2)
!1128 = !DILocalVariable(name: "tid", scope: !1129, file: !3, line: 285, type: !170)
!1129 = distinct !DILexicalBlock(scope: !1130, file: !3, line: 285, column: 2)
!1130 = distinct !DILexicalBlock(scope: !1131, file: !3, line: 285, column: 2)
!1131 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 285, column: 2)
!1132 = distinct !DILexicalBlock(scope: !1133, file: !3, line: 285, column: 2)
!1133 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 285, column: 2)
!1134 = !DILocalVariable(name: "tid", scope: !1135, file: !3, line: 287, type: !170)
!1135 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 287, column: 2)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !3, line: 287, column: 2)
!1137 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 287, column: 2)
!1138 = distinct !DILexicalBlock(scope: !1139, file: !3, line: 287, column: 2)
!1139 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 287, column: 2)
!1140 = !DILocalVariable(name: "tid", scope: !1141, file: !3, line: 293, type: !170)
!1141 = distinct !DILexicalBlock(scope: !1142, file: !3, line: 293, column: 2)
!1142 = distinct !DILexicalBlock(scope: !1143, file: !3, line: 293, column: 2)
!1143 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 293, column: 2)
!1144 = distinct !DILexicalBlock(scope: !1145, file: !3, line: 293, column: 2)
!1145 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 293, column: 2)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 16, elements: !769)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "__str", scope: !1069, file: !3, line: 241, type: !1146, isLocal: true, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "s_mount", scope: !2, file: !3, line: 152, type: !720, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "sock_net_vfsops", scope: !2, file: !3, line: 140, type: !725, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "sock_net_vnops", scope: !2, file: !3, line: 128, type: !778, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "s_inode", scope: !2, file: !3, line: 147, type: !135, isLocal: true, isDefinition: true)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "select_cb_list", scope: !2, file: !3, line: 1276, type: !238, isLocal: true, isDefinition: true)
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "socket_ipv6_multicast_memberships", scope: !2, file: !3, line: 1250, type: !1161, isLocal: true, isDefinition: true)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 16384, elements: !1385)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwip_socket_multicast_mld6_pair", file: !3, line: 1241, size: 256, elements: !1163)
!1163 = !{!1164, !1383, !1384}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !1162, file: !3, line: 1243, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwip_sock", file: !240, line: 67, size: 192, elements: !1167)
!1167 = !{!1168, !1366, !1379, !1380, !1381, !1382}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !1166, file: !240, line: 69, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netconn", file: !37, line: 218, size: 1024, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1343, !1344, !1345, !1355, !1356, !1357, !1358, !1361}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1170, file: !37, line: 220, baseType: !36, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1170, file: !37, line: 222, baseType: !50, size: 32, offset: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pcb", scope: !1170, file: !37, line: 229, baseType: !1175, size: 64, offset: 64)
!1175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1170, file: !37, line: 224, size: 64, elements: !1176)
!1176 = !{!1177, !1197, !1314, !1340}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1175, file: !37, line: 225, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_pcb", file: !1180, line: 91, size: 416, elements: !1181)
!1180 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/ip.h", directory: "/root/.unikraft/apps/redis/build")
!1181 = !{!1182, !1192, !1193, !1194, !1195, !1196}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1179, file: !1180, line: 93, baseType: !1183, size: 192)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "ip_addr_t", file: !100, line: 76, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_addr", file: !100, line: 69, size: 192, elements: !1185)
!1185 = !{!1186, !1191}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "u_addr", scope: !1184, file: !100, line: 73, baseType: !1187, size: 160)
!1187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1184, file: !100, line: 70, size: 160, elements: !1188)
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ip6", scope: !1187, file: !100, line: 71, baseType: !705, size: 160)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ip4", scope: !1187, file: !100, line: 72, baseType: !698, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1184, file: !100, line: 75, baseType: !156, size: 8, offset: 160)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1179, file: !1180, line: 93, baseType: !1183, size: 192, offset: 192)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 392)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 400)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1179, file: !1180, line: 93, baseType: !156, size: 8, offset: 408)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "tcp", scope: !1175, file: !37, line: 226, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_pcb", file: !1035, line: 242, size: 2240, elements: !1200)
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1249, !1250, !1251, !1263, !1285, !1290, !1295, !1297, !1302, !1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1199, file: !1035, line: 244, baseType: !1183, size: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1199, file: !1035, line: 244, baseType: !1183, size: 192, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 392)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 400)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1199, file: !1035, line: 244, baseType: !156, size: 8, offset: 408)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1199, file: !1035, line: 246, baseType: !1198, size: 64, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "callback_arg", scope: !1199, file: !1035, line: 246, baseType: !143, size: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1199, file: !1035, line: 246, baseType: !57, size: 32, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1199, file: !1035, line: 246, baseType: !156, size: 8, offset: 608)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !1199, file: !1035, line: 246, baseType: !164, size: 16, offset: 624)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !1199, file: !1035, line: 249, baseType: !164, size: 16, offset: 640)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1199, file: !1035, line: 251, baseType: !1034, size: 16, offset: 656)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "polltmr", scope: !1199, file: !1035, line: 278, baseType: !156, size: 8, offset: 672)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pollinterval", scope: !1199, file: !1035, line: 278, baseType: !156, size: 8, offset: 680)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "last_timer", scope: !1199, file: !1035, line: 279, baseType: !156, size: 8, offset: 688)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "tmr", scope: !1199, file: !1035, line: 280, baseType: !169, size: 32, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_nxt", scope: !1199, file: !1035, line: 283, baseType: !169, size: 32, offset: 736)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_wnd", scope: !1199, file: !1035, line: 284, baseType: !1220, size: 32, offset: 768)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcpwnd_size_t", file: !58, line: 51, baseType: !169)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_ann_wnd", scope: !1199, file: !1035, line: 285, baseType: !1220, size: 32, offset: 800)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_ann_right_edge", scope: !1199, file: !1035, line: 286, baseType: !169, size: 32, offset: 832)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "rtime", scope: !1199, file: !1035, line: 295, baseType: !146, size: 16, offset: 864)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !1199, file: !1035, line: 297, baseType: !164, size: 16, offset: 880)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "rttest", scope: !1199, file: !1035, line: 300, baseType: !169, size: 32, offset: 896)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "rtseq", scope: !1199, file: !1035, line: 301, baseType: !169, size: 32, offset: 928)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1199, file: !1035, line: 302, baseType: !146, size: 16, offset: 960)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sv", scope: !1199, file: !1035, line: 302, baseType: !146, size: 16, offset: 976)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rto", scope: !1199, file: !1035, line: 304, baseType: !146, size: 16, offset: 992)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "nrtx", scope: !1199, file: !1035, line: 305, baseType: !156, size: 8, offset: 1008)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dupacks", scope: !1199, file: !1035, line: 308, baseType: !156, size: 8, offset: 1016)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "lastack", scope: !1199, file: !1035, line: 309, baseType: !169, size: 32, offset: 1024)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "cwnd", scope: !1199, file: !1035, line: 312, baseType: !1220, size: 32, offset: 1056)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ssthresh", scope: !1199, file: !1035, line: 313, baseType: !1220, size: 32, offset: 1088)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "rto_end", scope: !1199, file: !1035, line: 316, baseType: !169, size: 32, offset: 1120)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "snd_nxt", scope: !1199, file: !1035, line: 319, baseType: !169, size: 32, offset: 1152)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wl1", scope: !1199, file: !1035, line: 320, baseType: !169, size: 32, offset: 1184)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wl2", scope: !1199, file: !1035, line: 320, baseType: !169, size: 32, offset: 1216)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "snd_lbb", scope: !1199, file: !1035, line: 322, baseType: !169, size: 32, offset: 1248)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wnd", scope: !1199, file: !1035, line: 323, baseType: !1220, size: 32, offset: 1280)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "snd_wnd_max", scope: !1199, file: !1035, line: 324, baseType: !1220, size: 32, offset: 1312)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "snd_buf", scope: !1199, file: !1035, line: 326, baseType: !1220, size: 32, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "snd_queuelen", scope: !1199, file: !1035, line: 328, baseType: !164, size: 16, offset: 1376)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "unsent_oversize", scope: !1199, file: !1035, line: 332, baseType: !164, size: 16, offset: 1392)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_acked", scope: !1199, file: !1035, line: 335, baseType: !1220, size: 32, offset: 1408)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "unsent", scope: !1199, file: !1035, line: 338, baseType: !1247, size: 64, offset: 1472)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_seg", file: !1035, line: 338, flags: DIFlagFwdDecl)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "unacked", scope: !1199, file: !1035, line: 339, baseType: !1247, size: 64, offset: 1536)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "ooseq", scope: !1199, file: !1035, line: 341, baseType: !1247, size: 64, offset: 1600)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "refused_data", scope: !1199, file: !1035, line: 344, baseType: !1252, size: 64, offset: 1664)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pbuf", file: !106, line: 186, size: 192, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !106, line: 188, baseType: !1252, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1253, file: !106, line: 191, baseType: !143, size: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !1253, file: !106, line: 200, baseType: !164, size: 16, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1253, file: !106, line: 203, baseType: !164, size: 16, offset: 144)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "type_internal", scope: !1253, file: !106, line: 208, baseType: !156, size: 8, offset: 160)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1253, file: !106, line: 211, baseType: !156, size: 8, offset: 168)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1253, file: !106, line: 218, baseType: !156, size: 8, offset: 176)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "if_idx", scope: !1253, file: !106, line: 221, baseType: !156, size: 8, offset: 184)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !1199, file: !1035, line: 347, baseType: !1264, size: 64, offset: 1728)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_pcb_listen", file: !1035, line: 223, size: 704, elements: !1266)
!1266 = !{!1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1265, file: !1035, line: 225, baseType: !1183, size: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1265, file: !1035, line: 225, baseType: !1183, size: 192, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 384)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 392)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 400)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1265, file: !1035, line: 225, baseType: !156, size: 8, offset: 408)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1265, file: !1035, line: 227, baseType: !1264, size: 64, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "callback_arg", scope: !1265, file: !1035, line: 227, baseType: !143, size: 64, offset: 512)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1265, file: !1035, line: 227, baseType: !57, size: 32, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1265, file: !1035, line: 227, baseType: !156, size: 8, offset: 608)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !1265, file: !1035, line: 227, baseType: !164, size: 16, offset: 624)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !1265, file: !1035, line: 231, baseType: !1279, size: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_accept_fn", file: !1035, line: 70, baseType: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!1283, !143, !1198, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "err_t", file: !79, line: 96, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8_t", file: !147, line: 126, baseType: !440)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sent", scope: !1199, file: !1035, line: 352, baseType: !1286, size: 64, offset: 1792)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_sent_fn", file: !1035, line: 96, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!1283, !143, !1198, !164}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !1199, file: !1035, line: 354, baseType: !1291, size: 64, offset: 1856)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_recv_fn", file: !1035, line: 82, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!1283, !143, !1198, !1252, !1283}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "connected", scope: !1199, file: !1035, line: 356, baseType: !1296, size: 64, offset: 1920)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_connected_fn", file: !1035, line: 134, baseType: !1280)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1199, file: !1035, line: 358, baseType: !1298, size: 64, offset: 1984)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_poll_fn", file: !1035, line: 108, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!1283, !143, !1198}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "errf", scope: !1199, file: !1035, line: 360, baseType: !1303, size: 64, offset: 2048)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcp_err_fn", file: !1035, line: 120, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{null, !143, !1283}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "keep_idle", scope: !1199, file: !1035, line: 369, baseType: !169, size: 32, offset: 2112)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "persist_cnt", scope: !1199, file: !1035, line: 376, baseType: !156, size: 8, offset: 2144)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "persist_backoff", scope: !1199, file: !1035, line: 378, baseType: !156, size: 8, offset: 2152)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "persist_probe", scope: !1199, file: !1035, line: 380, baseType: !156, size: 8, offset: 2160)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "keep_cnt_sent", scope: !1199, file: !1035, line: 383, baseType: !156, size: 8, offset: 2168)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "snd_scale", scope: !1199, file: !1035, line: 386, baseType: !156, size: 8, offset: 2176)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_scale", scope: !1199, file: !1035, line: 387, baseType: !156, size: 8, offset: 2184)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "udp", scope: !1175, file: !37, line: 227, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_pcb", file: !1317, line: 81, size: 768, elements: !1318)
!1317 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/udp.h", directory: "/root/.unikraft/apps/redis/build")
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1339}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "local_ip", scope: !1316, file: !1317, line: 83, baseType: !1183, size: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "remote_ip", scope: !1316, file: !1317, line: 83, baseType: !1183, size: 192, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "netif_idx", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 384)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "so_options", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 392)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 400)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !1316, file: !1317, line: 83, baseType: !156, size: 8, offset: 408)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1316, file: !1317, line: 87, baseType: !1315, size: 64, offset: 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !1317, line: 89, baseType: !156, size: 8, offset: 512)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "local_port", scope: !1316, file: !1317, line: 91, baseType: !164, size: 16, offset: 528)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "remote_port", scope: !1316, file: !1317, line: 91, baseType: !164, size: 16, offset: 544)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_ip4", scope: !1316, file: !1317, line: 96, baseType: !698, size: 32, offset: 576)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_ifindex", scope: !1316, file: !1317, line: 99, baseType: !156, size: 8, offset: 608)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "mcast_ttl", scope: !1316, file: !1317, line: 101, baseType: !156, size: 8, offset: 616)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "recv", scope: !1316, file: !1317, line: 110, baseType: !1333, size: 64, offset: 640)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "udp_recv_fn", file: !1317, line: 77, baseType: !1334)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{null, !143, !1315, !1252, !1337, !164}
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "recv_arg", scope: !1316, file: !1317, line: 112, baseType: !143, size: 64, offset: 704)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !1175, file: !37, line: 228, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_pcb", file: !37, line: 210, flags: DIFlagFwdDecl)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pending_err", scope: !1170, file: !37, line: 231, baseType: !1283, size: 8, offset: 128)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "op_completed", scope: !1170, file: !37, line: 234, baseType: !268, size: 256, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "recvmbox", scope: !1170, file: !37, line: 238, baseType: !1346, size: 192, offset: 448)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_mbox_t", file: !269, line: 78, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 74, size: 192, elements: !1348)
!1348 = !{!1349, !1350, !1354}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1347, file: !269, line: 75, baseType: !386, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "mbox", scope: !1347, file: !269, line: 76, baseType: !1351, size: 64, offset: 64)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "uk_mbox", file: !1353, line: 48, flags: DIFlagFwdDecl)
!1353 = !DIFile(filename: "/root/.unikraft/unikraft/lib/ukmpi/include/uk/mbox.h", directory: "/root/.unikraft/apps/redis/build")
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1347, file: !269, line: 77, baseType: !80, size: 32, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "acceptmbox", scope: !1170, file: !37, line: 242, baseType: !1346, size: 192, offset: 640)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "socket", scope: !1170, file: !37, line: 251, baseType: !80, size: 32, offset: 832)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1170, file: !37, line: 277, baseType: !156, size: 8, offset: 864)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "current_msg", scope: !1170, file: !37, line: 282, baseType: !1359, size: 64, offset: 896)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DICompositeType(tag: DW_TAG_structure_type, name: "api_msg", file: !37, line: 212, flags: DIFlagFwdDecl)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1170, file: !37, line: 285, baseType: !1362, size: 64, offset: 960)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "netconn_callback", file: !37, line: 215, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{null, !1169, !71, !164}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "lastdata", scope: !1166, file: !240, line: 71, baseType: !1367, size: 64, offset: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "lwip_sock_lastdata", file: !240, line: 61, size: 64, elements: !1368)
!1368 = !{!1369, !1378}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "netbuf", scope: !1367, file: !240, line: 62, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netbuf", file: !1372, line: 60, size: 384, elements: !1373)
!1372 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/netbuf.h", directory: "/root/.unikraft/apps/redis/build")
!1373 = !{!1374, !1375, !1376, !1377}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1371, file: !1372, line: 61, baseType: !1252, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1371, file: !1372, line: 61, baseType: !1252, size: 64, offset: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1371, file: !1372, line: 62, baseType: !1183, size: 192, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1371, file: !1372, line: 63, baseType: !164, size: 16, offset: 320)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pbuf", scope: !1367, file: !240, line: 63, baseType: !1252, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rcvevent", scope: !1166, file: !240, line: 75, baseType: !146, size: 16, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sendevent", scope: !1166, file: !240, line: 78, baseType: !164, size: 16, offset: 144)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "errevent", scope: !1166, file: !240, line: 80, baseType: !164, size: 16, offset: 160)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "select_waiting", scope: !1166, file: !240, line: 82, baseType: !156, size: 8, offset: 176)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "if_idx", scope: !1162, file: !3, line: 1245, baseType: !156, size: 8, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "multi_addr", scope: !1162, file: !3, line: 1247, baseType: !705, size: 160, offset: 96)
!1385 = !{!1386}
!1386 = !DISubrange(count: 64)
!1387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 12288, elements: !1385)
!1388 = !{i32 2, !"Dwarf Version", i32 4}
!1389 = !{i32 2, !"Debug Info Version", i32 3}
!1390 = !{i32 1, !"wchar_size", i32 4}
!1391 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!1392 = distinct !DISubprogram(name: "_sock_net_close", scope: !3, file: !3, line: 310, type: !828, isLocal: false, isDefinition: true, scopeLine: 310, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1393)
!1393 = !{!1394, !1395, !1396, !1397}
!1394 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1392, file: !3, line: 310, type: !713)
!1395 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !1392, file: !3, line: 310, type: !785)
!1396 = !DILocalVariable(name: "ret", scope: !1392, file: !3, line: 311, type: !80)
!1397 = !DILocalVariable(name: "file", scope: !1392, file: !3, line: 312, type: !1077)
!1398 = !DILocation(line: 310, column: 35, scope: !1392)
!1399 = !DILocation(line: 310, column: 65, scope: !1392)
!1400 = !DILocation(line: 312, column: 24, scope: !1392)
!1401 = !DILocation(line: 314, column: 18, scope: !1392)
!1402 = !{!1403, !1408, i64 112}
!1403 = !{!"vnode", !1404, i64 0, !1407, i64 8, !1408, i64 24, !1408, i64 32, !1409, i64 40, !1409, i64 44, !1409, i64 48, !1409, i64 52, !1404, i64 56, !1410, i64 64, !1407, i64 96, !1408, i64 112}
!1404 = !{!"long", !1405, i64 0}
!1405 = !{!"omnipotent char", !1406, i64 0}
!1406 = !{!"Simple C/C++ TBAA"}
!1407 = !{!"uk_list_head", !1408, i64 0, !1408, i64 8}
!1408 = !{!"any pointer", !1405, i64 0}
!1409 = !{!"int", !1405, i64 0}
!1410 = !{!"uk_mutex", !1409, i64 0, !1408, i64 8, !1411, i64 16}
!1411 = !{!"uk_waitq", !1408, i64 0, !1408, i64 8}
!1412 = !DILocation(line: 322, column: 2, scope: !1413)
!1413 = distinct !DILexicalBlock(scope: !1414, file: !3, line: 322, column: 2)
!1414 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 322, column: 2)
!1415 = !{!1403, !1409, i64 40}
!1416 = !DILocation(line: 322, column: 2, scope: !1414)
!1417 = !{!"branch_weights", i32 2000, i32 1}
!1418 = !DILocation(line: 322, column: 2, scope: !1419)
!1419 = distinct !DILexicalBlock(scope: !1413, file: !3, line: 322, column: 2)
!1420 = !DILocation(line: 325, column: 25, scope: !1392)
!1421 = !{!1422, !1409, i64 8}
!1422 = !{!"sock_net_file", !1408, i64 0, !1409, i64 8}
!1423 = !DILocation(line: 325, column: 8, scope: !1392)
!1424 = !DILocation(line: 311, column: 6, scope: !1392)
!1425 = !DILocation(line: 333, column: 10, scope: !1392)
!1426 = !{!1408, !1408, i64 0}
!1427 = !DILocalVariable(name: "a", arg: 1, scope: !1428, file: !388, line: 237, type: !386)
!1428 = distinct !DISubprogram(name: "uk_free", scope: !388, file: !388, line: 237, type: !417, isLocal: true, isDefinition: true, scopeLine: 238, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1429)
!1429 = !{!1427, !1430}
!1430 = !DILocalVariable(name: "ptr", arg: 2, scope: !1428, file: !388, line: 237, type: !143)
!1431 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !1432)
!1432 = distinct !DILocation(line: 333, column: 2, scope: !1392)
!1433 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !1432)
!1434 = !DILocalVariable(name: "a", arg: 1, scope: !1435, file: !388, line: 231, type: !386)
!1435 = distinct !DISubprogram(name: "uk_do_free", scope: !388, file: !388, line: 231, type: !417, isLocal: true, isDefinition: true, scopeLine: 232, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1436)
!1436 = !{!1434, !1437}
!1437 = !DILocalVariable(name: "ptr", arg: 2, scope: !1435, file: !388, line: 231, type: !143)
!1438 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !1439)
!1439 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !1432)
!1440 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !1439)
!1441 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !1439)
!1442 = distinct !DILexicalBlock(scope: !1443, file: !388, line: 233, column: 2)
!1443 = distinct !DILexicalBlock(scope: !1435, file: !388, line: 233, column: 2)
!1444 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !1439)
!1445 = !{!"branch_weights", i32 1, i32 2000}
!1446 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !1439)
!1447 = distinct !DILexicalBlock(scope: !1442, file: !388, line: 233, column: 2)
!1448 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !1439)
!1449 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !1439)
!1450 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !1439)
!1451 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !1432)
!1452 = !DILocation(line: 339, column: 10, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 339, column: 6)
!1454 = !DILocation(line: 339, column: 6, scope: !1392)
!1455 = !DILocation(line: 105, column: 2, scope: !1456, inlinedAt: !1468)
!1456 = distinct !DISubprogram(name: "SOCK_NET_GET_ERRNO", scope: !3, file: !3, line: 103, type: !1457, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1459)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!80}
!1459 = !{!1460, !1461, !1467}
!1460 = !DILocalVariable(name: "temp_errno", scope: !1456, file: !3, line: 105, type: !80)
!1461 = !DILocalVariable(name: "tid", scope: !1462, file: !3, line: 106, type: !170)
!1462 = distinct !DILexicalBlock(scope: !1463, file: !3, line: 106, column: 2)
!1463 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 106, column: 2)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 106, column: 2)
!1465 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 106, column: 2)
!1466 = distinct !DILexicalBlock(scope: !1456, file: !3, line: 106, column: 2)
!1467 = !DILocalVariable(name: "_ret", scope: !1462, file: !3, line: 106, type: !135)
!1468 = distinct !DILocation(line: 340, column: 10, scope: !1469)
!1469 = distinct !DILexicalBlock(scope: !1453, file: !3, line: 339, column: 15)
!1470 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1477)
!1471 = distinct !DISubprogram(name: "ukarch_read_sp", scope: !1472, file: !1472, line: 116, type: !1473, isLocal: true, isDefinition: true, scopeLine: 117, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1475)
!1472 = !DIFile(filename: "/root/.unikraft/unikraft/arch/x86/x86_64/include/uk/asm/lcpu.h", directory: "/root/.unikraft/apps/redis/build")
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!134}
!1475 = !{!1476}
!1476 = !DILocalVariable(name: "sp", scope: !1471, file: !1472, line: 118, type: !134)
!1477 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1468)
!1478 = !{i32 584208}
!1479 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1477)
!1480 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1477)
!1481 = !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1468)
!1482 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1483)
!1483 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1468)
!1484 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1483)
!1485 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1483)
!1486 = !DILocation(line: 106, column: 2, scope: !1466, inlinedAt: !1468)
!1487 = !DILocation(line: 100, column: 9, scope: !1488, inlinedAt: !1490)
!1488 = distinct !DISubprogram(name: "_SOCK_NET_GET_ERRNO", scope: !3, file: !3, line: 98, type: !1457, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1489)
!1489 = !{}
!1490 = distinct !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1468)
!1491 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 106, column: 2)
!1492 = !{!1409, !1409, i64 0}
!1493 = !DILocation(line: 100, column: 2, scope: !1488, inlinedAt: !1490)
!1494 = !DILocation(line: 105, column: 6, scope: !1456, inlinedAt: !1468)
!1495 = !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1468)
!1496 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1497)
!1497 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1502)
!1498 = distinct !DISubprogram(name: "uk_thread_get_tid", scope: !1499, file: !1499, line: 47, type: !1457, isLocal: true, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1500)
!1499 = !DIFile(filename: "/root/.unikraft/unikraft/lib/flexos-core/include/flexos/impl/intelpku-impl.h", directory: "/root/.unikraft/apps/redis/build")
!1500 = !{!1501}
!1501 = !DILocalVariable(name: "sp", scope: !1498, file: !1499, line: 49, type: !134)
!1502 = distinct !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1468)
!1503 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1497)
!1504 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1497)
!1505 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1502)
!1506 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1502)
!1507 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1502)
!1508 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1502)
!1509 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1502)
!1510 = !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1468)
!1511 = !{i32 -2145814191, i32 -2145814178, i32 -2145814153, i32 -2145814129, i32 -2145814104, i32 -2145814029, i32 -2145814004, i32 -2145813860, i32 -2145810719, i32 -2145810630, i32 -2145810509, i32 -2145810414, i32 -2145810313, i32 -2145810286, i32 -2145810203, i32 -2145810114, i32 -2145809993, i32 -2145809893, i32 -2145809787, i32 -2145809679, i32 -2145813577, i32 -2145813524, i32 -2145813493, i32 -2145813462, i32 -2145813441, i32 -2145813419, i32 -2145813370, i32 -2145813349, i32 -2145809596, i32 -2145809507, i32 -2145809386, i32 -2145809287, i32 -2145809181, i32 -2145809079, i32 -2145809046, i32 -2145808973, i32 -2145808905, i32 -2145813047, i32 -2145812988, i32 -2145812935, i32 -2145812904, i32 -2145812873, i32 -2145812852, i32 -2145812830, i32 -2145812781, i32 -2145812760, i32 -2145808850, i32 -2145808761, i32 -2145808640, i32 -2145808541, i32 -2145808435, i32 -2145808333, i32 -2145808300, i32 -2145808217, i32 -2145808128, i32 -2145808007, i32 -2145807907, i32 -2145807881, i32 -2145807778, i32 -2145807752, i32 -2145812502, i32 -2145812435, i32 -2145812410, i32 -2145812346, i32 -2145812264, i32 -2145812241, i32 -2145812216, i32 -2145812191}
!1512 = !DILocation(line: 106, column: 2, scope: !1513, inlinedAt: !1468)
!1513 = distinct !DILexicalBlock(scope: !1514, file: !3, line: 106, column: 2)
!1514 = distinct !DILexicalBlock(scope: !1462, file: !3, line: 106, column: 2)
!1515 = !{i32 -2145811244, i32 -2145811227}
!1516 = !DILocation(line: 107, column: 9, scope: !1456, inlinedAt: !1468)
!1517 = !DILocation(line: 108, column: 1, scope: !1456, inlinedAt: !1468)
!1518 = !DILocation(line: 107, column: 2, scope: !1456, inlinedAt: !1468)
!1519 = !DILocation(line: 340, column: 3, scope: !1469)
!1520 = !DILocation(line: 0, scope: !1392)
!1521 = !DILocation(line: 0, scope: !1469)
!1522 = !DILocation(line: 344, column: 1, scope: !1392)
!1523 = !DILocation(line: 194, column: 43, scope: !1045)
!1524 = !DILocation(line: 196, column: 2, scope: !1045)
!1525 = !DILocation(line: 196, column: 10, scope: !1045)
!1526 = !DILocation(line: 197, column: 2, scope: !1045)
!1527 = !DILocation(line: 198, column: 2, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1529, file: !1046, line: 198, column: 2)
!1529 = distinct !DILexicalBlock(scope: !1045, file: !1046, line: 198, column: 2)
!1530 = !DILocation(line: 199, column: 2, scope: !1045)
!1531 = !DILocation(line: 200, column: 1, scope: !1045)
!1532 = distinct !DISubprogram(name: "lwip_close", scope: !3, file: !3, line: 1770, type: !1070, isLocal: false, isDefinition: true, scopeLine: 1771, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1538, !1542, !1548}
!1534 = !DILocalVariable(name: "s", arg: 1, scope: !1532, file: !3, line: 1770, type: !80)
!1535 = !DILocalVariable(name: "sock", scope: !1532, file: !3, line: 1772, type: !1165)
!1536 = !DILocalVariable(name: "is_tcp", scope: !1532, file: !3, line: 1773, type: !80)
!1537 = !DILocalVariable(name: "err", scope: !1532, file: !3, line: 1774, type: !1283)
!1538 = !DILocalVariable(name: "sockerr", scope: !1539, file: !3, line: 1800, type: !1007)
!1539 = distinct !DILexicalBlock(scope: !1540, file: !3, line: 1800, column: 5)
!1540 = distinct !DILexicalBlock(scope: !1541, file: !3, line: 1799, column: 22)
!1541 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 1799, column: 7)
!1542 = !DILocalVariable(name: "tid", scope: !1543, file: !3, line: 1800, type: !170)
!1543 = distinct !DILexicalBlock(scope: !1544, file: !3, line: 1800, column: 5)
!1544 = distinct !DILexicalBlock(scope: !1545, file: !3, line: 1800, column: 5)
!1545 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 1800, column: 5)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 1800, column: 5)
!1547 = distinct !DILexicalBlock(scope: !1539, file: !3, line: 1800, column: 5)
!1548 = !DILocalVariable(name: "tid", scope: !1549, file: !3, line: 1806, type: !170)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !3, line: 1806, column: 3)
!1550 = distinct !DILexicalBlock(scope: !1551, file: !3, line: 1806, column: 3)
!1551 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 1806, column: 3)
!1552 = distinct !DILexicalBlock(scope: !1553, file: !3, line: 1806, column: 3)
!1553 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 1806, column: 3)
!1554 = !DILocation(line: 1770, column: 16, scope: !1532)
!1555 = !DILocation(line: 1773, column: 7, scope: !1532)
!1556 = !DILocation(line: 1778, column: 10, scope: !1532)
!1557 = !DILocation(line: 1772, column: 21, scope: !1532)
!1558 = !DILocation(line: 1779, column: 8, scope: !1559)
!1559 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 1779, column: 7)
!1560 = !DILocation(line: 1779, column: 7, scope: !1532)
!1561 = !DILocation(line: 1783, column: 13, scope: !1562)
!1562 = distinct !DILexicalBlock(scope: !1532, file: !3, line: 1783, column: 7)
!1563 = !{!1564, !1408, i64 0}
!1564 = !{!"lwip_sock", !1408, i64 0, !1405, i64 8, !1565, i64 16, !1565, i64 18, !1565, i64 20, !1405, i64 22}
!1565 = !{!"short", !1405, i64 0}
!1566 = !DILocation(line: 1783, column: 18, scope: !1562)
!1567 = !DILocation(line: 1783, column: 7, scope: !1532)
!1568 = !DILocation(line: 1784, column: 14, scope: !1569)
!1569 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 1783, column: 27)
!1570 = !{!1571, !1405, i64 0}
!1571 = !{!"netconn", !1405, i64 0, !1405, i64 4, !1405, i64 8, !1405, i64 16, !1572, i64 24, !1574, i64 56, !1574, i64 80, !1409, i64 104, !1405, i64 108, !1408, i64 112, !1408, i64 120}
!1572 = !{!"", !1573, i64 0, !1409, i64 24}
!1573 = !{!"uk_semaphore", !1404, i64 0, !1411, i64 8}
!1574 = !{!"", !1408, i64 0, !1408, i64 8, !1409, i64 16}
!1575 = !DILocation(line: 1784, column: 58, scope: !1569)
!1576 = !DILocation(line: 1785, column: 3, scope: !1569)
!1577 = !DILocation(line: 1786, column: 5, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1579, file: !3, line: 1786, column: 5)
!1579 = distinct !DILexicalBlock(scope: !1580, file: !3, line: 1786, column: 5)
!1580 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 1785, column: 10)
!1581 = !{!1405, !1405, i64 0}
!1582 = !DILocation(line: 1786, column: 5, scope: !1579)
!1583 = !DILocation(line: 1786, column: 5, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1585, file: !3, line: 1786, column: 5)
!1585 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 1786, column: 5)
!1586 = !DILocation(line: 1786, column: 5, scope: !1587)
!1587 = distinct !DILexicalBlock(scope: !1588, file: !3, line: 1786, column: 5)
!1588 = distinct !DILexicalBlock(scope: !1589, file: !3, line: 1786, column: 5)
!1589 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 1786, column: 5)
!1590 = !DILocation(line: 0, scope: !1532)
!1591 = !DILocalVariable(name: "s", arg: 1, scope: !1592, file: !3, line: 5130, type: !80)
!1592 = distinct !DISubprogram(name: "lwip_socket_drop_registered_mld6_memberships", scope: !3, file: !3, line: 5130, type: !648, isLocal: true, isDefinition: true, scopeLine: 5131, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1593)
!1593 = !{!1591, !1594, !1595, !1596, !1602}
!1594 = !DILocalVariable(name: "sock", scope: !1592, file: !3, line: 5132, type: !1165)
!1595 = !DILocalVariable(name: "i", scope: !1592, file: !3, line: 5133, type: !80)
!1596 = !DILocalVariable(name: "multi_addr", scope: !1597, file: !3, line: 5141, type: !1183)
!1597 = distinct !DILexicalBlock(scope: !1598, file: !3, line: 5140, column: 60)
!1598 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 5140, column: 9)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 5139, column: 53)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 5139, column: 3)
!1601 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 5139, column: 3)
!1602 = !DILocalVariable(name: "if_idx", scope: !1597, file: !3, line: 5142, type: !156)
!1603 = !DILocation(line: 5130, column: 50, scope: !1592, inlinedAt: !1604)
!1604 = distinct !DILocation(line: 1795, column: 3, scope: !1532)
!1605 = !DILocation(line: 5132, column: 28, scope: !1592, inlinedAt: !1604)
!1606 = !DILocation(line: 5132, column: 21, scope: !1592, inlinedAt: !1604)
!1607 = !DILocation(line: 5135, column: 8, scope: !1608, inlinedAt: !1604)
!1608 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 5135, column: 7)
!1609 = !DILocation(line: 5135, column: 7, scope: !1592, inlinedAt: !1604)
!1610 = !DILocation(line: 0, scope: !1601, inlinedAt: !1604)
!1611 = !DILocation(line: 5133, column: 7, scope: !1592, inlinedAt: !1604)
!1612 = !DILocation(line: 5139, column: 3, scope: !1601, inlinedAt: !1604)
!1613 = !DILocation(line: 5140, column: 46, scope: !1598, inlinedAt: !1604)
!1614 = !{!1615, !1408, i64 0}
!1615 = !{!"lwip_socket_multicast_mld6_pair", !1408, i64 0, !1405, i64 8, !1616, i64 12}
!1616 = !{!"ip6_addr", !1405, i64 0, !1405, i64 16}
!1617 = !DILocation(line: 5140, column: 51, scope: !1598, inlinedAt: !1604)
!1618 = !DILocation(line: 5140, column: 9, scope: !1599, inlinedAt: !1604)
!1619 = !DILocation(line: 5141, column: 7, scope: !1597, inlinedAt: !1604)
!1620 = !DILocation(line: 5144, column: 7, scope: !1621, inlinedAt: !1604)
!1621 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 5144, column: 7)
!1622 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 5144, column: 7)
!1623 = !{!1615, !1405, i64 28}
!1624 = !DILocation(line: 5144, column: 7, scope: !1625, inlinedAt: !1604)
!1625 = distinct !DILexicalBlock(scope: !1622, file: !3, line: 5144, column: 7)
!1626 = !{!1627, !1405, i64 20}
!1627 = !{!"ip_addr", !1405, i64 0, !1405, i64 20}
!1628 = !DILocation(line: 5145, column: 53, scope: !1597, inlinedAt: !1604)
!1629 = !{!1615, !1405, i64 8}
!1630 = !DILocation(line: 5142, column: 12, scope: !1597, inlinedAt: !1604)
!1631 = !DILocation(line: 5147, column: 51, scope: !1597, inlinedAt: !1604)
!1632 = !DILocation(line: 5148, column: 51, scope: !1597, inlinedAt: !1604)
!1633 = !DILocation(line: 5149, column: 7, scope: !1634, inlinedAt: !1604)
!1634 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 5149, column: 7)
!1635 = !DILocation(line: 5151, column: 44, scope: !1597, inlinedAt: !1604)
!1636 = !DILocation(line: 5141, column: 17, scope: !1597, inlinedAt: !1604)
!1637 = !DILocation(line: 5151, column: 7, scope: !1597, inlinedAt: !1604)
!1638 = !DILocation(line: 5152, column: 5, scope: !1598, inlinedAt: !1604)
!1639 = !DILocation(line: 5152, column: 5, scope: !1597, inlinedAt: !1604)
!1640 = !DILocation(line: 5139, column: 49, scope: !1600, inlinedAt: !1604)
!1641 = !DILocation(line: 5139, column: 3, scope: !1600, inlinedAt: !1604)
!1642 = !DILocation(line: 5139, column: 17, scope: !1600, inlinedAt: !1604)
!1643 = distinct !{!1643, !1644, !1645}
!1644 = !DILocation(line: 5139, column: 3, scope: !1601)
!1645 = !DILocation(line: 5153, column: 3, scope: !1601)
!1646 = !DILocation(line: 5155, column: 1, scope: !1592, inlinedAt: !1604)
!1647 = !DILocation(line: 1798, column: 38, scope: !1532)
!1648 = !DILocation(line: 1798, column: 9, scope: !1532)
!1649 = !DILocation(line: 1774, column: 9, scope: !1532)
!1650 = !DILocation(line: 1799, column: 11, scope: !1541)
!1651 = !DILocation(line: 1799, column: 7, scope: !1532)
!1652 = !DILocation(line: 1800, column: 5, scope: !1539)
!1653 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1654)
!1654 = distinct !DILocation(line: 1800, column: 5, scope: !1546)
!1655 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1654)
!1656 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1654)
!1657 = !DILocation(line: 1800, column: 5, scope: !1546)
!1658 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1659)
!1659 = distinct !DILocation(line: 1800, column: 5, scope: !1546)
!1660 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1659)
!1661 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1659)
!1662 = !DILocation(line: 1800, column: 5, scope: !1547)
!1663 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !1667)
!1664 = distinct !DISubprogram(name: "_SOCK_NET_SET_ERRNO", scope: !3, file: !3, line: 88, type: !648, isLocal: true, isDefinition: true, scopeLine: 89, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1665)
!1665 = !{!1666}
!1666 = !DILocalVariable(name: "errcode", arg: 1, scope: !1664, file: !3, line: 88, type: !80)
!1667 = distinct !DILocation(line: 1800, column: 5, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 1800, column: 5)
!1669 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !1667)
!1670 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !1667)
!1671 = !DILocation(line: 1800, column: 5, scope: !1668)
!1672 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1673)
!1673 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1674)
!1674 = distinct !DILocation(line: 1800, column: 5, scope: !1543)
!1675 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1673)
!1676 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1673)
!1677 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1674)
!1678 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1674)
!1679 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1674)
!1680 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1674)
!1681 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1674)
!1682 = !DILocation(line: 1800, column: 5, scope: !1543)
!1683 = !{i32 -2145119729, i32 -2145119716, i32 -2145119691, i32 -2145119667, i32 -2145119642, i32 -2145119567, i32 -2145119542, i32 -2145119398, i32 -2145117175, i32 -2145117086, i32 -2145116965, i32 -2145116870, i32 -2145116769, i32 -2145116742, i32 -2145116659, i32 -2145116570, i32 -2145116449, i32 -2145116349, i32 -2145116243, i32 -2145116135, i32 -2145119110, i32 -2145119057, i32 -2145119026, i32 -2145118995, i32 -2145118974, i32 -2145118952, i32 -2145118903, i32 -2145118882, i32 -2145116052, i32 -2145115963, i32 -2145115842, i32 -2145115743, i32 -2145115637, i32 -2145115535, i32 -2145115502, i32 -2145115429, i32 -2145115361, i32 -2145118508, i32 -2145118455, i32 -2145118424, i32 -2145118393, i32 -2145118372, i32 -2145118350, i32 -2145118301, i32 -2145118280, i32 -2145115306, i32 -2145115217, i32 -2145115096, i32 -2145114997, i32 -2145114891, i32 -2145114789, i32 -2145114756, i32 -2145114673, i32 -2145114584, i32 -2145114463, i32 -2145114363, i32 -2145114337, i32 -2145114234, i32 -2145114208, i32 -2145118022, i32 -2145117955, i32 -2145117930, i32 -2145117866, i32 -2145117750, i32 -2145117725, i32 -2145117700}
!1684 = !DILocation(line: 1805, column: 3, scope: !1532)
!1685 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1686)
!1686 = distinct !DILocation(line: 1806, column: 3, scope: !1552)
!1687 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1686)
!1688 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1686)
!1689 = !DILocation(line: 1806, column: 3, scope: !1552)
!1690 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1691)
!1691 = distinct !DILocation(line: 1806, column: 3, scope: !1552)
!1692 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1691)
!1693 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1691)
!1694 = !DILocation(line: 1806, column: 3, scope: !1553)
!1695 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !1696)
!1696 = distinct !DILocation(line: 1806, column: 3, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 1806, column: 3)
!1698 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !1696)
!1699 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !1696)
!1700 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !1696)
!1701 = !DILocation(line: 1806, column: 3, scope: !1697)
!1702 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1703)
!1703 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1704)
!1704 = distinct !DILocation(line: 1806, column: 3, scope: !1549)
!1705 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1703)
!1706 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1703)
!1707 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1704)
!1708 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1704)
!1709 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1704)
!1710 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1704)
!1711 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1704)
!1712 = !DILocation(line: 1806, column: 3, scope: !1549)
!1713 = !{i32 -2145112327, i32 -2145112314, i32 -2145112289, i32 -2145112265, i32 -2145112240, i32 -2145112165, i32 -2145112140, i32 -2145111996, i32 -2145109780, i32 -2145109691, i32 -2145109570, i32 -2145109475, i32 -2145109374, i32 -2145109347, i32 -2145109264, i32 -2145109175, i32 -2145109054, i32 -2145108954, i32 -2145108848, i32 -2145108740, i32 -2145111708, i32 -2145111655, i32 -2145111624, i32 -2145111593, i32 -2145111572, i32 -2145111550, i32 -2145111501, i32 -2145111480, i32 -2145108657, i32 -2145108568, i32 -2145108447, i32 -2145108348, i32 -2145108242, i32 -2145108140, i32 -2145108107, i32 -2145108034, i32 -2145107966, i32 -2145111106, i32 -2145111053, i32 -2145111022, i32 -2145110991, i32 -2145110970, i32 -2145110948, i32 -2145110899, i32 -2145110878, i32 -2145107911, i32 -2145107822, i32 -2145107701, i32 -2145107602, i32 -2145107496, i32 -2145107394, i32 -2145107361, i32 -2145107278, i32 -2145107189, i32 -2145107068, i32 -2145106968, i32 -2145106942, i32 -2145106839, i32 -2145106813, i32 -2145110620, i32 -2145110553, i32 -2145110528, i32 -2145110464, i32 -2145110348, i32 -2145110323, i32 -2145110298}
!1714 = !DILocation(line: 0, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1559, file: !3, line: 1779, column: 14)
!1716 = !DILocation(line: 1808, column: 1, scope: !1532)
!1717 = distinct !DISubprogram(name: "_sock_net_write", scope: !3, file: !3, line: 357, type: !846, isLocal: false, isDefinition: true, scopeLine: 357, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1718)
!1718 = !{!1719, !1720, !1721, !1722, !1723}
!1719 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1717, file: !3, line: 357, type: !713)
!1720 = !DILocalVariable(name: "buf", arg: 2, scope: !1717, file: !3, line: 357, type: !835)
!1721 = !DILocalVariable(name: "ioflag", arg: 3, scope: !1717, file: !3, line: 357, type: !80)
!1722 = !DILocalVariable(name: "ret", scope: !1717, file: !3, line: 358, type: !80)
!1723 = !DILocalVariable(name: "file", scope: !1717, file: !3, line: 359, type: !1077)
!1724 = !DILocation(line: 357, column: 35, scope: !1717)
!1725 = !DILocation(line: 357, column: 56, scope: !1717)
!1726 = !DILocation(line: 357, column: 65, scope: !1717)
!1727 = !DILocation(line: 358, column: 6, scope: !1717)
!1728 = !DILocation(line: 359, column: 24, scope: !1717)
!1729 = !DILocation(line: 361, column: 18, scope: !1717)
!1730 = !DILocation(line: 366, column: 26, scope: !1717)
!1731 = !DILocation(line: 366, column: 40, scope: !1717)
!1732 = !{!1733, !1408, i64 0}
!1733 = !{!"uio", !1408, i64 0, !1409, i64 8, !1404, i64 16, !1404, i64 24, !1405, i64 32}
!1734 = !DILocation(line: 366, column: 54, scope: !1717)
!1735 = !{!1733, !1409, i64 8}
!1736 = !DILocalVariable(name: "s", arg: 1, scope: !1737, file: !3, line: 2750, type: !80)
!1737 = distinct !DISubprogram(name: "lwip_writev", scope: !3, file: !3, line: 2750, type: !1738, isLocal: false, isDefinition: true, scopeLine: 2751, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1742)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!206, !80, !1740, !80}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!1742 = !{!1736, !1743, !1744, !1745}
!1743 = !DILocalVariable(name: "iov", arg: 2, scope: !1737, file: !3, line: 2750, type: !1740)
!1744 = !DILocalVariable(name: "iovcnt", arg: 3, scope: !1737, file: !3, line: 2750, type: !80)
!1745 = !DILocalVariable(name: "msg", scope: !1737, file: !3, line: 2752, type: !1746)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !153, line: 129, size: 384, elements: !1747)
!1747 = !{!1748, !1749, !1751, !1752, !1753, !1754, !1755}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !1746, file: !153, line: 130, baseType: !143, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !1746, file: !153, line: 131, baseType: !1750, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !153, line: 113, baseType: !169)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !1746, file: !153, line: 132, baseType: !210, size: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !1746, file: !153, line: 133, baseType: !80, size: 32, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !1746, file: !153, line: 134, baseType: !143, size: 64, offset: 256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !1746, file: !153, line: 135, baseType: !1750, size: 32, offset: 320)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !1746, file: !153, line: 136, baseType: !80, size: 32, offset: 352)
!1756 = !DILocation(line: 2750, column: 17, scope: !1737, inlinedAt: !1757)
!1757 = distinct !DILocation(line: 366, column: 8, scope: !1717)
!1758 = !DILocation(line: 2750, column: 40, scope: !1737, inlinedAt: !1757)
!1759 = !DILocation(line: 2750, column: 49, scope: !1737, inlinedAt: !1757)
!1760 = !DILocation(line: 2752, column: 3, scope: !1737, inlinedAt: !1757)
!1761 = !DILocation(line: 2754, column: 7, scope: !1737, inlinedAt: !1757)
!1762 = !DILocation(line: 2754, column: 16, scope: !1737, inlinedAt: !1757)
!1763 = !{!1764, !1408, i64 0}
!1764 = !{!"msghdr", !1408, i64 0, !1409, i64 8, !1408, i64 16, !1409, i64 24, !1408, i64 32, !1409, i64 40, !1409, i64 44}
!1765 = !DILocation(line: 2755, column: 7, scope: !1737, inlinedAt: !1757)
!1766 = !DILocation(line: 2755, column: 19, scope: !1737, inlinedAt: !1757)
!1767 = !{!1764, !1409, i64 8}
!1768 = !DILocation(line: 2758, column: 7, scope: !1737, inlinedAt: !1757)
!1769 = !DILocation(line: 2758, column: 15, scope: !1737, inlinedAt: !1757)
!1770 = !{!1764, !1408, i64 16}
!1771 = !DILocation(line: 2759, column: 7, scope: !1737, inlinedAt: !1757)
!1772 = !DILocation(line: 2759, column: 18, scope: !1737, inlinedAt: !1757)
!1773 = !{!1764, !1409, i64 24}
!1774 = !DILocation(line: 2760, column: 7, scope: !1737, inlinedAt: !1757)
!1775 = !DILocation(line: 2760, column: 19, scope: !1737, inlinedAt: !1757)
!1776 = !{!1764, !1408, i64 32}
!1777 = !DILocation(line: 2761, column: 7, scope: !1737, inlinedAt: !1757)
!1778 = !DILocation(line: 2761, column: 22, scope: !1737, inlinedAt: !1757)
!1779 = !{!1764, !1409, i64 40}
!1780 = !DILocation(line: 2762, column: 7, scope: !1737, inlinedAt: !1757)
!1781 = !DILocation(line: 2762, column: 17, scope: !1737, inlinedAt: !1757)
!1782 = !{!1764, !1409, i64 44}
!1783 = !DILocation(line: 2752, column: 17, scope: !1737, inlinedAt: !1757)
!1784 = !DILocation(line: 2763, column: 10, scope: !1737, inlinedAt: !1757)
!1785 = !DILocation(line: 2764, column: 1, scope: !1737, inlinedAt: !1757)
!1786 = !DILocation(line: 2763, column: 3, scope: !1737, inlinedAt: !1757)
!1787 = !DILocation(line: 366, column: 8, scope: !1717)
!1788 = !DILocation(line: 371, column: 10, scope: !1789)
!1789 = distinct !DILexicalBlock(scope: !1717, file: !3, line: 371, column: 6)
!1790 = !DILocation(line: 371, column: 6, scope: !1717)
!1791 = !DILocation(line: 105, column: 2, scope: !1456, inlinedAt: !1792)
!1792 = distinct !DILocation(line: 372, column: 10, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1789, file: !3, line: 371, column: 15)
!1794 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1795)
!1795 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1792)
!1796 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1795)
!1797 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1795)
!1798 = !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1792)
!1799 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1800)
!1800 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1792)
!1801 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1800)
!1802 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1800)
!1803 = !DILocation(line: 106, column: 2, scope: !1466, inlinedAt: !1792)
!1804 = !DILocation(line: 100, column: 9, scope: !1488, inlinedAt: !1805)
!1805 = distinct !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1792)
!1806 = !DILocation(line: 100, column: 2, scope: !1488, inlinedAt: !1805)
!1807 = !DILocation(line: 105, column: 6, scope: !1456, inlinedAt: !1792)
!1808 = !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1792)
!1809 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1810)
!1810 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1811)
!1811 = distinct !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1792)
!1812 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1810)
!1813 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1810)
!1814 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1811)
!1815 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1811)
!1816 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1811)
!1817 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1811)
!1818 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1811)
!1819 = !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1792)
!1820 = !DILocation(line: 106, column: 2, scope: !1513, inlinedAt: !1792)
!1821 = !DILocation(line: 107, column: 9, scope: !1456, inlinedAt: !1792)
!1822 = !DILocation(line: 108, column: 1, scope: !1456, inlinedAt: !1792)
!1823 = !DILocation(line: 107, column: 2, scope: !1456, inlinedAt: !1792)
!1824 = !DILocation(line: 372, column: 3, scope: !1793)
!1825 = !DILocation(line: 375, column: 20, scope: !1717)
!1826 = !DILocation(line: 375, column: 7, scope: !1717)
!1827 = !DILocation(line: 375, column: 17, scope: !1717)
!1828 = !{!1733, !1404, i64 24}
!1829 = !DILocation(line: 376, column: 2, scope: !1717)
!1830 = !DILocation(line: 0, scope: !1717)
!1831 = !DILocation(line: 0, scope: !1793)
!1832 = !DILocation(line: 377, column: 1, scope: !1717)
!1833 = !DILocation(line: 2750, column: 17, scope: !1737)
!1834 = !DILocation(line: 2750, column: 40, scope: !1737)
!1835 = !DILocation(line: 2750, column: 49, scope: !1737)
!1836 = !DILocation(line: 2752, column: 3, scope: !1737)
!1837 = !DILocation(line: 2754, column: 7, scope: !1737)
!1838 = !DILocation(line: 2754, column: 16, scope: !1737)
!1839 = !DILocation(line: 2755, column: 7, scope: !1737)
!1840 = !DILocation(line: 2755, column: 19, scope: !1737)
!1841 = !DILocation(line: 2758, column: 7, scope: !1737)
!1842 = !DILocation(line: 2758, column: 15, scope: !1737)
!1843 = !DILocation(line: 2759, column: 7, scope: !1737)
!1844 = !DILocation(line: 2759, column: 18, scope: !1737)
!1845 = !DILocation(line: 2760, column: 7, scope: !1737)
!1846 = !DILocation(line: 2760, column: 19, scope: !1737)
!1847 = !DILocation(line: 2761, column: 7, scope: !1737)
!1848 = !DILocation(line: 2761, column: 22, scope: !1737)
!1849 = !DILocation(line: 2762, column: 7, scope: !1737)
!1850 = !DILocation(line: 2762, column: 17, scope: !1737)
!1851 = !DILocation(line: 2752, column: 17, scope: !1737)
!1852 = !DILocation(line: 2763, column: 10, scope: !1737)
!1853 = !DILocation(line: 2764, column: 1, scope: !1737)
!1854 = !DILocation(line: 2763, column: 3, scope: !1737)
!1855 = distinct !DISubprogram(name: "_sock_net_read", scope: !3, file: !3, line: 392, type: !833, isLocal: false, isDefinition: true, scopeLine: 393, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1856)
!1856 = !{!1857, !1858, !1859, !1860, !1861, !1862}
!1857 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1855, file: !3, line: 392, type: !713)
!1858 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !1855, file: !3, line: 392, type: !785)
!1859 = !DILocalVariable(name: "buf", arg: 3, scope: !1855, file: !3, line: 393, type: !835)
!1860 = !DILocalVariable(name: "ioflag", arg: 4, scope: !1855, file: !3, line: 393, type: !80)
!1861 = !DILocalVariable(name: "ret", scope: !1855, file: !3, line: 394, type: !80)
!1862 = !DILocalVariable(name: "file", scope: !1855, file: !3, line: 395, type: !1077)
!1863 = !DILocation(line: 392, column: 34, scope: !1855)
!1864 = !DILocation(line: 392, column: 64, scope: !1855)
!1865 = !DILocation(line: 393, column: 18, scope: !1855)
!1866 = !DILocation(line: 393, column: 27, scope: !1855)
!1867 = !DILocation(line: 394, column: 6, scope: !1855)
!1868 = !DILocation(line: 395, column: 24, scope: !1855)
!1869 = !DILocation(line: 397, column: 18, scope: !1855)
!1870 = !DILocation(line: 402, column: 25, scope: !1855)
!1871 = !DILocation(line: 402, column: 39, scope: !1855)
!1872 = !DILocation(line: 402, column: 53, scope: !1855)
!1873 = !DILocalVariable(name: "s", arg: 1, scope: !1874, file: !3, line: 2256, type: !80)
!1874 = distinct !DISubprogram(name: "lwip_readv", scope: !3, file: !3, line: 2256, type: !1738, isLocal: false, isDefinition: true, scopeLine: 2257, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1875)
!1875 = !{!1873, !1876, !1877, !1878}
!1876 = !DILocalVariable(name: "iov", arg: 2, scope: !1874, file: !3, line: 2256, type: !1740)
!1877 = !DILocalVariable(name: "iovcnt", arg: 3, scope: !1874, file: !3, line: 2256, type: !80)
!1878 = !DILocalVariable(name: "msg", scope: !1874, file: !3, line: 2258, type: !1746)
!1879 = !DILocation(line: 2256, column: 16, scope: !1874, inlinedAt: !1880)
!1880 = distinct !DILocation(line: 402, column: 8, scope: !1855)
!1881 = !DILocation(line: 2256, column: 39, scope: !1874, inlinedAt: !1880)
!1882 = !DILocation(line: 2256, column: 48, scope: !1874, inlinedAt: !1880)
!1883 = !DILocation(line: 2258, column: 3, scope: !1874, inlinedAt: !1880)
!1884 = !DILocation(line: 2260, column: 7, scope: !1874, inlinedAt: !1880)
!1885 = !DILocation(line: 2260, column: 16, scope: !1874, inlinedAt: !1880)
!1886 = !DILocation(line: 2261, column: 7, scope: !1874, inlinedAt: !1880)
!1887 = !DILocation(line: 2261, column: 19, scope: !1874, inlinedAt: !1880)
!1888 = !DILocation(line: 2264, column: 7, scope: !1874, inlinedAt: !1880)
!1889 = !DILocation(line: 2264, column: 15, scope: !1874, inlinedAt: !1880)
!1890 = !DILocation(line: 2265, column: 7, scope: !1874, inlinedAt: !1880)
!1891 = !DILocation(line: 2265, column: 18, scope: !1874, inlinedAt: !1880)
!1892 = !DILocation(line: 2266, column: 7, scope: !1874, inlinedAt: !1880)
!1893 = !DILocation(line: 2266, column: 19, scope: !1874, inlinedAt: !1880)
!1894 = !DILocation(line: 2267, column: 7, scope: !1874, inlinedAt: !1880)
!1895 = !DILocation(line: 2267, column: 22, scope: !1874, inlinedAt: !1880)
!1896 = !DILocation(line: 2268, column: 7, scope: !1874, inlinedAt: !1880)
!1897 = !DILocation(line: 2268, column: 17, scope: !1874, inlinedAt: !1880)
!1898 = !DILocation(line: 2258, column: 17, scope: !1874, inlinedAt: !1880)
!1899 = !DILocation(line: 2269, column: 10, scope: !1874, inlinedAt: !1880)
!1900 = !DILocation(line: 2270, column: 1, scope: !1874, inlinedAt: !1880)
!1901 = !DILocation(line: 2269, column: 3, scope: !1874, inlinedAt: !1880)
!1902 = !DILocation(line: 402, column: 8, scope: !1855)
!1903 = !DILocation(line: 407, column: 10, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1855, file: !3, line: 407, column: 6)
!1905 = !DILocation(line: 407, column: 6, scope: !1855)
!1906 = !DILocation(line: 105, column: 2, scope: !1456, inlinedAt: !1907)
!1907 = distinct !DILocation(line: 408, column: 10, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 407, column: 15)
!1909 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1910)
!1910 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1907)
!1911 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1910)
!1912 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1910)
!1913 = !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1907)
!1914 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1915)
!1915 = distinct !DILocation(line: 106, column: 2, scope: !1465, inlinedAt: !1907)
!1916 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1915)
!1917 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1915)
!1918 = !DILocation(line: 106, column: 2, scope: !1466, inlinedAt: !1907)
!1919 = !DILocation(line: 100, column: 9, scope: !1488, inlinedAt: !1920)
!1920 = distinct !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1907)
!1921 = !DILocation(line: 100, column: 2, scope: !1488, inlinedAt: !1920)
!1922 = !DILocation(line: 105, column: 6, scope: !1456, inlinedAt: !1907)
!1923 = !DILocation(line: 106, column: 2, scope: !1491, inlinedAt: !1907)
!1924 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !1925)
!1925 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !1926)
!1926 = distinct !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1907)
!1927 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !1925)
!1928 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !1925)
!1929 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !1926)
!1930 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !1926)
!1931 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !1926)
!1932 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !1926)
!1933 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !1926)
!1934 = !DILocation(line: 106, column: 2, scope: !1462, inlinedAt: !1907)
!1935 = !DILocation(line: 106, column: 2, scope: !1513, inlinedAt: !1907)
!1936 = !DILocation(line: 107, column: 9, scope: !1456, inlinedAt: !1907)
!1937 = !DILocation(line: 108, column: 1, scope: !1456, inlinedAt: !1907)
!1938 = !DILocation(line: 107, column: 2, scope: !1456, inlinedAt: !1907)
!1939 = !DILocation(line: 408, column: 3, scope: !1908)
!1940 = !DILocation(line: 411, column: 20, scope: !1855)
!1941 = !DILocation(line: 411, column: 7, scope: !1855)
!1942 = !DILocation(line: 411, column: 17, scope: !1855)
!1943 = !DILocation(line: 412, column: 2, scope: !1855)
!1944 = !DILocation(line: 0, scope: !1855)
!1945 = !DILocation(line: 0, scope: !1908)
!1946 = !DILocation(line: 413, column: 1, scope: !1855)
!1947 = !DILocation(line: 2256, column: 16, scope: !1874)
!1948 = !DILocation(line: 2256, column: 39, scope: !1874)
!1949 = !DILocation(line: 2256, column: 48, scope: !1874)
!1950 = !DILocation(line: 2258, column: 3, scope: !1874)
!1951 = !DILocation(line: 2260, column: 7, scope: !1874)
!1952 = !DILocation(line: 2260, column: 16, scope: !1874)
!1953 = !DILocation(line: 2261, column: 7, scope: !1874)
!1954 = !DILocation(line: 2261, column: 19, scope: !1874)
!1955 = !DILocation(line: 2264, column: 7, scope: !1874)
!1956 = !DILocation(line: 2264, column: 15, scope: !1874)
!1957 = !DILocation(line: 2265, column: 7, scope: !1874)
!1958 = !DILocation(line: 2265, column: 18, scope: !1874)
!1959 = !DILocation(line: 2266, column: 7, scope: !1874)
!1960 = !DILocation(line: 2266, column: 19, scope: !1874)
!1961 = !DILocation(line: 2267, column: 7, scope: !1874)
!1962 = !DILocation(line: 2267, column: 22, scope: !1874)
!1963 = !DILocation(line: 2268, column: 7, scope: !1874)
!1964 = !DILocation(line: 2268, column: 17, scope: !1874)
!1965 = !DILocation(line: 2258, column: 17, scope: !1874)
!1966 = !DILocation(line: 2269, column: 10, scope: !1874)
!1967 = !DILocation(line: 2270, column: 1, scope: !1874)
!1968 = !DILocation(line: 2269, column: 3, scope: !1874)
!1969 = distinct !DISubprogram(name: "_sock_net_ioctl", scope: !3, file: !3, line: 429, type: !856, isLocal: false, isDefinition: true, scopeLine: 430, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1970)
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976}
!1971 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !1969, file: !3, line: 429, type: !713)
!1972 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !1969, file: !3, line: 429, type: !785)
!1973 = !DILocalVariable(name: "request", arg: 3, scope: !1969, file: !3, line: 430, type: !134)
!1974 = !DILocalVariable(name: "buf", arg: 4, scope: !1969, file: !3, line: 430, type: !143)
!1975 = !DILocalVariable(name: "file", scope: !1969, file: !3, line: 431, type: !1077)
!1976 = !DILocalVariable(name: "ret", scope: !1969, file: !3, line: 438, type: !80)
!1977 = !DILocation(line: 429, column: 35, scope: !1969)
!1978 = !DILocation(line: 429, column: 65, scope: !1969)
!1979 = !DILocation(line: 430, column: 21, scope: !1969)
!1980 = !DILocation(line: 430, column: 36, scope: !1969)
!1981 = !DILocation(line: 431, column: 24, scope: !1969)
!1982 = !DILocation(line: 433, column: 18, scope: !1969)
!1983 = !DILocation(line: 438, column: 29, scope: !1969)
!1984 = !DILocation(line: 438, column: 12, scope: !1969)
!1985 = !DILocation(line: 438, column: 6, scope: !1969)
!1986 = !DILocation(line: 439, column: 2, scope: !1969)
!1987 = distinct !DISubprogram(name: "lwip_ioctl", scope: !3, file: !3, line: 4741, type: !1988, isLocal: false, isDefinition: true, scopeLine: 4742, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1990)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!80, !80, !142, !143}
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1999, !2005, !2007}
!1991 = !DILocalVariable(name: "s", arg: 1, scope: !1987, file: !3, line: 4741, type: !80)
!1992 = !DILocalVariable(name: "cmd", arg: 2, scope: !1987, file: !3, line: 4741, type: !142)
!1993 = !DILocalVariable(name: "argp", arg: 3, scope: !1987, file: !3, line: 4741, type: !143)
!1994 = !DILocalVariable(name: "sock", scope: !1987, file: !3, line: 4743, type: !1165)
!1995 = !DILocalVariable(name: "val", scope: !1987, file: !3, line: 4744, type: !156)
!1996 = !DILocalVariable(name: "sockerr", scope: !1997, file: !3, line: 4815, type: !1007)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 4815, column: 7)
!1998 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 4753, column: 16)
!1999 = !DILocalVariable(name: "tid", scope: !2000, file: !3, line: 4815, type: !170)
!2000 = distinct !DILexicalBlock(scope: !2001, file: !3, line: 4815, column: 7)
!2001 = distinct !DILexicalBlock(scope: !2002, file: !3, line: 4815, column: 7)
!2002 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4815, column: 7)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 4815, column: 7)
!2004 = distinct !DILexicalBlock(scope: !1997, file: !3, line: 4815, column: 7)
!2005 = !DILocalVariable(name: "sockerr", scope: !2006, file: !3, line: 4823, type: !1007)
!2006 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 4823, column: 3)
!2007 = !DILocalVariable(name: "tid", scope: !2008, file: !3, line: 4823, type: !170)
!2008 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 4823, column: 3)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !3, line: 4823, column: 3)
!2010 = distinct !DILexicalBlock(scope: !2011, file: !3, line: 4823, column: 3)
!2011 = distinct !DILexicalBlock(scope: !2012, file: !3, line: 4823, column: 3)
!2012 = distinct !DILexicalBlock(scope: !2006, file: !3, line: 4823, column: 3)
!2013 = !DILocation(line: 4741, column: 16, scope: !1987)
!2014 = !DILocation(line: 4741, column: 24, scope: !1987)
!2015 = !DILocation(line: 4741, column: 35, scope: !1987)
!2016 = !DILocation(line: 4743, column: 28, scope: !1987)
!2017 = !DILocation(line: 4743, column: 21, scope: !1987)
!2018 = !DILocation(line: 4749, column: 8, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 4749, column: 7)
!2020 = !DILocation(line: 4749, column: 7, scope: !1987)
!2021 = !DILocation(line: 4753, column: 3, scope: !1987)
!2022 = !DILocation(line: 4744, column: 8, scope: !1987)
!2023 = !DILocation(line: 4810, column: 11, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 4810, column: 11)
!2025 = !DILocation(line: 4810, column: 16, scope: !2024)
!2026 = !DILocation(line: 4810, column: 20, scope: !2024)
!2027 = !DILocation(line: 4810, column: 19, scope: !2024)
!2028 = !DILocation(line: 4810, column: 11, scope: !1998)
!2029 = !DILocation(line: 4812, column: 7, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2024, file: !3, line: 4810, column: 33)
!2031 = !DILocation(line: 4813, column: 7, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !2033, file: !3, line: 4813, column: 7)
!2033 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 4813, column: 7)
!2034 = distinct !DILexicalBlock(scope: !2035, file: !3, line: 4813, column: 7)
!2035 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 4813, column: 7)
!2036 = !{!1571, !1405, i64 108}
!2037 = !DILocation(line: 4813, column: 7, scope: !2035)
!2038 = !DILocation(line: 4813, column: 7, scope: !2033)
!2039 = !DILocation(line: 4813, column: 7, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2041, file: !3, line: 4813, column: 7)
!2041 = distinct !DILexicalBlock(scope: !2034, file: !3, line: 4813, column: 7)
!2042 = !DILocation(line: 4815, column: 7, scope: !1997)
!2043 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2044)
!2044 = distinct !DILocation(line: 4815, column: 7, scope: !2003)
!2045 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2044)
!2046 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2044)
!2047 = !DILocation(line: 4815, column: 7, scope: !2003)
!2048 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2049)
!2049 = distinct !DILocation(line: 4815, column: 7, scope: !2003)
!2050 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2049)
!2051 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2049)
!2052 = !DILocation(line: 4815, column: 7, scope: !2004)
!2053 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2054)
!2054 = distinct !DILocation(line: 4815, column: 7, scope: !2055)
!2055 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 4815, column: 7)
!2056 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2054)
!2057 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2054)
!2058 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2054)
!2059 = !DILocation(line: 4815, column: 7, scope: !2055)
!2060 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2061)
!2061 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2062)
!2062 = distinct !DILocation(line: 4815, column: 7, scope: !2000)
!2063 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2061)
!2064 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2061)
!2065 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2062)
!2066 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2062)
!2067 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2062)
!2068 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2062)
!2069 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2062)
!2070 = !DILocation(line: 4815, column: 7, scope: !2000)
!2071 = !{i32 -2144570012, i32 -2144569999, i32 -2144569974, i32 -2144569950, i32 -2144569925, i32 -2144569850, i32 -2144569825, i32 -2144569681, i32 -2144567458, i32 -2144567369, i32 -2144567248, i32 -2144567153, i32 -2144567052, i32 -2144567025, i32 -2144566942, i32 -2144566853, i32 -2144566732, i32 -2144566632, i32 -2144566526, i32 -2144566418, i32 -2144569393, i32 -2144569340, i32 -2144569309, i32 -2144569278, i32 -2144569257, i32 -2144569235, i32 -2144569186, i32 -2144569165, i32 -2144566335, i32 -2144566246, i32 -2144566125, i32 -2144566026, i32 -2144565920, i32 -2144565818, i32 -2144565785, i32 -2144565712, i32 -2144565644, i32 -2144568791, i32 -2144568738, i32 -2144568707, i32 -2144568676, i32 -2144568655, i32 -2144568633, i32 -2144568584, i32 -2144568563, i32 -2144565589, i32 -2144565500, i32 -2144565379, i32 -2144565280, i32 -2144565174, i32 -2144565072, i32 -2144565039, i32 -2144564956, i32 -2144564867, i32 -2144564746, i32 -2144564646, i32 -2144564620, i32 -2144564517, i32 -2144564491, i32 -2144568305, i32 -2144568238, i32 -2144568213, i32 -2144568149, i32 -2144568033, i32 -2144568008, i32 -2144567983}
!2072 = !DILocation(line: 4823, column: 3, scope: !2006)
!2073 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2074)
!2074 = distinct !DILocation(line: 4823, column: 3, scope: !2011)
!2075 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2074)
!2076 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2074)
!2077 = !DILocation(line: 4823, column: 3, scope: !2011)
!2078 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2079)
!2079 = distinct !DILocation(line: 4823, column: 3, scope: !2011)
!2080 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2079)
!2081 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2079)
!2082 = !DILocation(line: 4823, column: 3, scope: !2012)
!2083 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2084)
!2084 = distinct !DILocation(line: 4823, column: 3, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2011, file: !3, line: 4823, column: 3)
!2086 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2084)
!2087 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2084)
!2088 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2084)
!2089 = !DILocation(line: 4823, column: 3, scope: !2085)
!2090 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2091)
!2091 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2092)
!2092 = distinct !DILocation(line: 4823, column: 3, scope: !2008)
!2093 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2091)
!2094 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2091)
!2095 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2092)
!2096 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2092)
!2097 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2092)
!2098 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2092)
!2099 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2092)
!2100 = !DILocation(line: 4823, column: 3, scope: !2008)
!2101 = !{i32 -2144562451, i32 -2144562438, i32 -2144562413, i32 -2144562389, i32 -2144562364, i32 -2144562289, i32 -2144562264, i32 -2144562120, i32 -2144559897, i32 -2144559808, i32 -2144559687, i32 -2144559592, i32 -2144559491, i32 -2144559464, i32 -2144559381, i32 -2144559292, i32 -2144559171, i32 -2144559071, i32 -2144558965, i32 -2144558857, i32 -2144561832, i32 -2144561779, i32 -2144561748, i32 -2144561717, i32 -2144561696, i32 -2144561674, i32 -2144561625, i32 -2144561604, i32 -2144558774, i32 -2144558685, i32 -2144558564, i32 -2144558465, i32 -2144558359, i32 -2144558257, i32 -2144558224, i32 -2144558151, i32 -2144558083, i32 -2144561230, i32 -2144561177, i32 -2144561146, i32 -2144561115, i32 -2144561094, i32 -2144561072, i32 -2144561023, i32 -2144561002, i32 -2144558028, i32 -2144557939, i32 -2144557818, i32 -2144557719, i32 -2144557613, i32 -2144557511, i32 -2144557478, i32 -2144557395, i32 -2144557306, i32 -2144557185, i32 -2144557085, i32 -2144557059, i32 -2144556956, i32 -2144556930, i32 -2144560744, i32 -2144560677, i32 -2144560652, i32 -2144560588, i32 -2144560472, i32 -2144560447, i32 -2144560422}
!2102 = !DILocation(line: 0, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2019, file: !3, line: 4749, column: 14)
!2104 = !DILocation(line: 4826, column: 1, scope: !1987)
!2105 = distinct !DISubprogram(name: "socket", scope: !3, file: !3, line: 442, type: !2106, isLocal: false, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2108)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!80, !80, !80, !80}
!2108 = !{!2109, !2110, !2111, !2112, !2113, !2114, !2115}
!2109 = !DILocalVariable(name: "domain", arg: 1, scope: !2105, file: !3, line: 442, type: !80)
!2110 = !DILocalVariable(name: "type", arg: 2, scope: !2105, file: !3, line: 442, type: !80)
!2111 = !DILocalVariable(name: "protocol", arg: 3, scope: !2105, file: !3, line: 442, type: !80)
!2112 = !DILocalVariable(name: "ret", scope: !2105, file: !3, line: 444, type: !80)
!2113 = !DILocalVariable(name: "vfs_fd", scope: !2105, file: !3, line: 445, type: !80)
!2114 = !DILocalVariable(name: "sock_fd", scope: !2105, file: !3, line: 446, type: !80)
!2115 = !DILocalVariable(name: "tid", scope: !2116, file: !3, line: 465, type: !170)
!2116 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 465, column: 3)
!2117 = distinct !DILexicalBlock(scope: !2118, file: !3, line: 465, column: 3)
!2118 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 465, column: 3)
!2119 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 465, column: 3)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !3, line: 465, column: 3)
!2121 = distinct !DILexicalBlock(scope: !2122, file: !3, line: 465, column: 3)
!2122 = distinct !DILexicalBlock(scope: !2123, file: !3, line: 459, column: 18)
!2123 = distinct !DILexicalBlock(scope: !2105, file: !3, line: 459, column: 6)
!2124 = !DILocation(line: 442, column: 16, scope: !2105)
!2125 = !DILocation(line: 442, column: 28, scope: !2105)
!2126 = !DILocation(line: 442, column: 38, scope: !2105)
!2127 = !DILocation(line: 444, column: 6, scope: !2105)
!2128 = !DILocation(line: 445, column: 6, scope: !2105)
!2129 = !DILocation(line: 446, column: 6, scope: !2105)
!2130 = !DILocation(line: 449, column: 12, scope: !2105)
!2131 = !DILocation(line: 450, column: 14, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2105, file: !3, line: 450, column: 6)
!2133 = !DILocation(line: 450, column: 6, scope: !2105)
!2134 = !DILocation(line: 458, column: 11, scope: !2105)
!2135 = !DILocation(line: 459, column: 13, scope: !2123)
!2136 = !DILocation(line: 459, column: 6, scope: !2105)
!2137 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2138)
!2138 = distinct !DILocation(line: 465, column: 3, scope: !2119)
!2139 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2138)
!2140 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2138)
!2141 = !DILocation(line: 465, column: 3, scope: !2119)
!2142 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2143)
!2143 = distinct !DILocation(line: 465, column: 3, scope: !2119)
!2144 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2143)
!2145 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2143)
!2146 = !DILocation(line: 465, column: 3, scope: !2120)
!2147 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2148)
!2148 = distinct !DILocation(line: 465, column: 3, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2119, file: !3, line: 465, column: 3)
!2150 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !2148)
!2151 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2148)
!2152 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2148)
!2153 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2148)
!2154 = !DILocation(line: 465, column: 3, scope: !2149)
!2155 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2156)
!2156 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2157)
!2157 = distinct !DILocation(line: 465, column: 3, scope: !2116)
!2158 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2156)
!2159 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2156)
!2160 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2157)
!2161 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2157)
!2162 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2157)
!2163 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2157)
!2164 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2157)
!2165 = !DILocation(line: 465, column: 3, scope: !2116)
!2166 = !{i32 -2145691886, i32 -2145691873, i32 -2145691848, i32 -2145691824, i32 -2145691799, i32 -2145691724, i32 -2145691699, i32 -2145691555, i32 -2145689334, i32 -2145689245, i32 -2145689124, i32 -2145689029, i32 -2145688928, i32 -2145688901, i32 -2145688818, i32 -2145688729, i32 -2145688608, i32 -2145688508, i32 -2145688402, i32 -2145688294, i32 -2145691267, i32 -2145691214, i32 -2145691183, i32 -2145691152, i32 -2145691131, i32 -2145691109, i32 -2145691060, i32 -2145691039, i32 -2145688211, i32 -2145688122, i32 -2145688001, i32 -2145687902, i32 -2145687796, i32 -2145687694, i32 -2145687661, i32 -2145687588, i32 -2145687520, i32 -2145690665, i32 -2145690612, i32 -2145690581, i32 -2145690550, i32 -2145690529, i32 -2145690507, i32 -2145690458, i32 -2145690437, i32 -2145687465, i32 -2145687376, i32 -2145687255, i32 -2145687156, i32 -2145687050, i32 -2145686948, i32 -2145686915, i32 -2145686832, i32 -2145686743, i32 -2145686622, i32 -2145686522, i32 -2145686496, i32 -2145686393, i32 -2145686367, i32 -2145690179, i32 -2145690112, i32 -2145690087, i32 -2145690023, i32 -2145689907, i32 -2145689882, i32 -2145689857}
!2167 = !DILocation(line: 0, scope: !2105)
!2168 = !DILocation(line: 0, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2132, file: !3, line: 450, column: 19)
!2170 = !DILocation(line: 472, column: 2, scope: !2105)
!2171 = !DILocation(line: 475, column: 2, scope: !2105)
!2172 = !DILocation(line: 476, column: 2, scope: !2105)
!2173 = distinct !DISubprogram(name: "lwip_socket", scope: !3, file: !3, line: 2683, type: !2106, isLocal: false, isDefinition: true, scopeLine: 2684, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2174)
!2174 = !{!2175, !2176, !2177, !2178, !2179, !2180, !2187, !2195, !2203}
!2175 = !DILocalVariable(name: "domain", arg: 1, scope: !2173, file: !3, line: 2683, type: !80)
!2176 = !DILocalVariable(name: "type", arg: 2, scope: !2173, file: !3, line: 2683, type: !80)
!2177 = !DILocalVariable(name: "protocol", arg: 3, scope: !2173, file: !3, line: 2683, type: !80)
!2178 = !DILocalVariable(name: "conn", scope: !2173, file: !3, line: 2685, type: !1169)
!2179 = !DILocalVariable(name: "i", scope: !2173, file: !3, line: 2686, type: !80)
!2180 = !DILocalVariable(name: "tid", scope: !2181, file: !3, line: 2719, type: !170)
!2181 = distinct !DILexicalBlock(scope: !2182, file: !3, line: 2719, column: 7)
!2182 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 2719, column: 7)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 2719, column: 7)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !3, line: 2719, column: 7)
!2185 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 2719, column: 7)
!2186 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 2691, column: 17)
!2187 = !DILocalVariable(name: "tid", scope: !2188, file: !3, line: 2725, type: !170)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 2725, column: 5)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !3, line: 2725, column: 5)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 2725, column: 5)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 2725, column: 5)
!2192 = distinct !DILexicalBlock(scope: !2193, file: !3, line: 2725, column: 5)
!2193 = distinct !DILexicalBlock(scope: !2194, file: !3, line: 2723, column: 14)
!2194 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 2723, column: 7)
!2195 = !DILocalVariable(name: "tid", scope: !2196, file: !3, line: 2733, type: !170)
!2196 = distinct !DILexicalBlock(scope: !2197, file: !3, line: 2733, column: 5)
!2197 = distinct !DILexicalBlock(scope: !2198, file: !3, line: 2733, column: 5)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 2733, column: 5)
!2199 = distinct !DILexicalBlock(scope: !2200, file: !3, line: 2733, column: 5)
!2200 = distinct !DILexicalBlock(scope: !2201, file: !3, line: 2733, column: 5)
!2201 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 2731, column: 16)
!2202 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 2731, column: 7)
!2203 = !DILocalVariable(name: "tid", scope: !2204, file: !3, line: 2739, type: !170)
!2204 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 2739, column: 3)
!2205 = distinct !DILexicalBlock(scope: !2206, file: !3, line: 2739, column: 3)
!2206 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 2739, column: 3)
!2207 = distinct !DILexicalBlock(scope: !2208, file: !3, line: 2739, column: 3)
!2208 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 2739, column: 3)
!2209 = !DILocation(line: 2683, column: 17, scope: !2173)
!2210 = !DILocation(line: 2683, column: 29, scope: !2173)
!2211 = !DILocation(line: 2683, column: 39, scope: !2173)
!2212 = !DILocation(line: 2691, column: 3, scope: !2173)
!2213 = !DILocation(line: 2693, column: 50, scope: !2186)
!2214 = !DILocation(line: 2694, column: 14, scope: !2186)
!2215 = !DILocation(line: 2693, column: 14, scope: !2186)
!2216 = !DILocation(line: 2685, column: 19, scope: !2173)
!2217 = !DILocation(line: 2697, column: 7, scope: !2186)
!2218 = !DILocation(line: 2699, column: 14, scope: !2186)
!2219 = !DILocation(line: 2710, column: 7, scope: !2186)
!2220 = !DILocation(line: 2712, column: 14, scope: !2186)
!2221 = !DILocation(line: 2715, column: 7, scope: !2186)
!2222 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2223)
!2223 = distinct !DILocation(line: 2719, column: 7, scope: !2184)
!2224 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2223)
!2225 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2223)
!2226 = !DILocation(line: 2719, column: 7, scope: !2184)
!2227 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2228)
!2228 = distinct !DILocation(line: 2719, column: 7, scope: !2184)
!2229 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2228)
!2230 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2228)
!2231 = !DILocation(line: 2719, column: 7, scope: !2185)
!2232 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2233)
!2233 = distinct !DILocation(line: 2719, column: 7, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 2719, column: 7)
!2235 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2233)
!2236 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2233)
!2237 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2233)
!2238 = !DILocation(line: 2719, column: 7, scope: !2234)
!2239 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2240)
!2240 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2241)
!2241 = distinct !DILocation(line: 2719, column: 7, scope: !2181)
!2242 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2240)
!2243 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2240)
!2244 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2241)
!2245 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2241)
!2246 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2241)
!2247 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2241)
!2248 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2241)
!2249 = !DILocation(line: 2719, column: 7, scope: !2181)
!2250 = !{i32 -2144811799, i32 -2144811786, i32 -2144811761, i32 -2144811737, i32 -2144811712, i32 -2144811637, i32 -2144811612, i32 -2144811468, i32 -2144809246, i32 -2144809157, i32 -2144809036, i32 -2144808941, i32 -2144808840, i32 -2144808813, i32 -2144808730, i32 -2144808641, i32 -2144808520, i32 -2144808420, i32 -2144808314, i32 -2144808206, i32 -2144811180, i32 -2144811127, i32 -2144811096, i32 -2144811065, i32 -2144811044, i32 -2144811022, i32 -2144810973, i32 -2144810952, i32 -2144808123, i32 -2144808034, i32 -2144807913, i32 -2144807814, i32 -2144807708, i32 -2144807606, i32 -2144807573, i32 -2144807500, i32 -2144807432, i32 -2144810578, i32 -2144810525, i32 -2144810494, i32 -2144810463, i32 -2144810442, i32 -2144810420, i32 -2144810371, i32 -2144810350, i32 -2144807377, i32 -2144807288, i32 -2144807167, i32 -2144807068, i32 -2144806962, i32 -2144806860, i32 -2144806827, i32 -2144806744, i32 -2144806655, i32 -2144806534, i32 -2144806434, i32 -2144806408, i32 -2144806305, i32 -2144806279, i32 -2144810092, i32 -2144810025, i32 -2144810000, i32 -2144809936, i32 -2144809820, i32 -2144809795, i32 -2144809770}
!2251 = !DILocation(line: 0, scope: !2186)
!2252 = !DILocation(line: 2723, column: 8, scope: !2194)
!2253 = !DILocation(line: 2723, column: 7, scope: !2173)
!2254 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2255)
!2255 = distinct !DILocation(line: 2725, column: 5, scope: !2191)
!2256 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2255)
!2257 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2255)
!2258 = !DILocation(line: 2725, column: 5, scope: !2191)
!2259 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2260)
!2260 = distinct !DILocation(line: 2725, column: 5, scope: !2191)
!2261 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2260)
!2262 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2260)
!2263 = !DILocation(line: 2725, column: 5, scope: !2192)
!2264 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2265)
!2265 = distinct !DILocation(line: 2725, column: 5, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 2725, column: 5)
!2267 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2265)
!2268 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2265)
!2269 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2265)
!2270 = !DILocation(line: 2725, column: 5, scope: !2266)
!2271 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2272)
!2272 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2273)
!2273 = distinct !DILocation(line: 2725, column: 5, scope: !2188)
!2274 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2272)
!2275 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2272)
!2276 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2273)
!2277 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2273)
!2278 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2273)
!2279 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2273)
!2280 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2273)
!2281 = !DILocation(line: 2725, column: 5, scope: !2188)
!2282 = !{i32 -2144804361, i32 -2144804348, i32 -2144804323, i32 -2144804299, i32 -2144804274, i32 -2144804199, i32 -2144804174, i32 -2144804030, i32 -2144801806, i32 -2144801717, i32 -2144801596, i32 -2144801501, i32 -2144801400, i32 -2144801373, i32 -2144801290, i32 -2144801201, i32 -2144801080, i32 -2144800980, i32 -2144800874, i32 -2144800766, i32 -2144803742, i32 -2144803689, i32 -2144803658, i32 -2144803627, i32 -2144803606, i32 -2144803584, i32 -2144803535, i32 -2144803514, i32 -2144800683, i32 -2144800594, i32 -2144800473, i32 -2144800374, i32 -2144800268, i32 -2144800166, i32 -2144800133, i32 -2144800060, i32 -2144799992, i32 -2144803140, i32 -2144803087, i32 -2144803056, i32 -2144803025, i32 -2144803004, i32 -2144802982, i32 -2144802933, i32 -2144802912, i32 -2144799937, i32 -2144799848, i32 -2144799727, i32 -2144799628, i32 -2144799522, i32 -2144799420, i32 -2144799387, i32 -2144799304, i32 -2144799215, i32 -2144799094, i32 -2144798994, i32 -2144798968, i32 -2144798865, i32 -2144798839, i32 -2144802654, i32 -2144802587, i32 -2144802562, i32 -2144802498, i32 -2144802382, i32 -2144802357, i32 -2144802332}
!2283 = !DILocation(line: 2729, column: 7, scope: !2173)
!2284 = !DILocation(line: 2686, column: 7, scope: !2173)
!2285 = !DILocation(line: 2731, column: 9, scope: !2202)
!2286 = !DILocation(line: 2731, column: 7, scope: !2173)
!2287 = !DILocation(line: 2732, column: 5, scope: !2201)
!2288 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2289)
!2289 = distinct !DILocation(line: 2733, column: 5, scope: !2199)
!2290 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2289)
!2291 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2289)
!2292 = !DILocation(line: 2733, column: 5, scope: !2199)
!2293 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2294)
!2294 = distinct !DILocation(line: 2733, column: 5, scope: !2199)
!2295 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2294)
!2296 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2294)
!2297 = !DILocation(line: 2733, column: 5, scope: !2200)
!2298 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2299)
!2299 = distinct !DILocation(line: 2733, column: 5, scope: !2300)
!2300 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 2733, column: 5)
!2301 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2299)
!2302 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2299)
!2303 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2299)
!2304 = !DILocation(line: 2733, column: 5, scope: !2300)
!2305 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2306)
!2306 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2307)
!2307 = distinct !DILocation(line: 2733, column: 5, scope: !2196)
!2308 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2306)
!2309 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2306)
!2310 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2307)
!2311 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2307)
!2312 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2307)
!2313 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2307)
!2314 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2307)
!2315 = !DILocation(line: 2733, column: 5, scope: !2196)
!2316 = !{i32 -2144796928, i32 -2144796915, i32 -2144796890, i32 -2144796866, i32 -2144796841, i32 -2144796766, i32 -2144796741, i32 -2144796597, i32 -2144794375, i32 -2144794286, i32 -2144794165, i32 -2144794070, i32 -2144793969, i32 -2144793942, i32 -2144793859, i32 -2144793770, i32 -2144793649, i32 -2144793549, i32 -2144793443, i32 -2144793335, i32 -2144796309, i32 -2144796256, i32 -2144796225, i32 -2144796194, i32 -2144796173, i32 -2144796151, i32 -2144796102, i32 -2144796081, i32 -2144793252, i32 -2144793163, i32 -2144793042, i32 -2144792943, i32 -2144792837, i32 -2144792735, i32 -2144792702, i32 -2144792629, i32 -2144792561, i32 -2144795707, i32 -2144795654, i32 -2144795623, i32 -2144795592, i32 -2144795571, i32 -2144795549, i32 -2144795500, i32 -2144795479, i32 -2144792506, i32 -2144792417, i32 -2144792296, i32 -2144792197, i32 -2144792091, i32 -2144791989, i32 -2144791956, i32 -2144791873, i32 -2144791784, i32 -2144791663, i32 -2144791563, i32 -2144791537, i32 -2144791434, i32 -2144791408, i32 -2144795221, i32 -2144795154, i32 -2144795129, i32 -2144795065, i32 -2144794949, i32 -2144794924, i32 -2144794899}
!2317 = !DILocation(line: 2736, column: 9, scope: !2173)
!2318 = !DILocation(line: 2736, column: 16, scope: !2173)
!2319 = !{!1571, !1409, i64 104}
!2320 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2321)
!2321 = distinct !DILocation(line: 2739, column: 3, scope: !2207)
!2322 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2321)
!2323 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2321)
!2324 = !DILocation(line: 2739, column: 3, scope: !2207)
!2325 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2326)
!2326 = distinct !DILocation(line: 2739, column: 3, scope: !2207)
!2327 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2326)
!2328 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2326)
!2329 = !DILocation(line: 2739, column: 3, scope: !2208)
!2330 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2331)
!2331 = distinct !DILocation(line: 2739, column: 3, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 2739, column: 3)
!2333 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2331)
!2334 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2331)
!2335 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2331)
!2336 = !DILocation(line: 2739, column: 3, scope: !2332)
!2337 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2339)
!2339 = distinct !DILocation(line: 2739, column: 3, scope: !2204)
!2340 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2338)
!2341 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2338)
!2342 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2339)
!2343 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2339)
!2344 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2339)
!2345 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2339)
!2346 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2339)
!2347 = !DILocation(line: 2739, column: 3, scope: !2204)
!2348 = !{i32 -2144789527, i32 -2144789514, i32 -2144789489, i32 -2144789465, i32 -2144789440, i32 -2144789365, i32 -2144789340, i32 -2144789196, i32 -2144786980, i32 -2144786891, i32 -2144786770, i32 -2144786675, i32 -2144786574, i32 -2144786547, i32 -2144786464, i32 -2144786375, i32 -2144786254, i32 -2144786154, i32 -2144786048, i32 -2144785940, i32 -2144788908, i32 -2144788855, i32 -2144788824, i32 -2144788793, i32 -2144788772, i32 -2144788750, i32 -2144788701, i32 -2144788680, i32 -2144785857, i32 -2144785768, i32 -2144785647, i32 -2144785548, i32 -2144785442, i32 -2144785340, i32 -2144785307, i32 -2144785234, i32 -2144785166, i32 -2144788306, i32 -2144788253, i32 -2144788222, i32 -2144788191, i32 -2144788170, i32 -2144788148, i32 -2144788099, i32 -2144788078, i32 -2144785111, i32 -2144785022, i32 -2144784901, i32 -2144784802, i32 -2144784696, i32 -2144784594, i32 -2144784561, i32 -2144784478, i32 -2144784389, i32 -2144784268, i32 -2144784168, i32 -2144784142, i32 -2144784039, i32 -2144784013, i32 -2144787820, i32 -2144787753, i32 -2144787728, i32 -2144787664, i32 -2144787548, i32 -2144787523, i32 -2144787498}
!2349 = !DILocation(line: 0, scope: !2193)
!2350 = !DILocation(line: 2741, column: 1, scope: !2173)
!2351 = !DILocation(line: 189, column: 30, scope: !1069)
!2352 = !DILocation(line: 191, column: 2, scope: !1069)
!2353 = !DILocation(line: 191, column: 6, scope: !1069)
!2354 = !DILocation(line: 192, column: 2, scope: !1069)
!2355 = !DILocation(line: 193, column: 24, scope: !1069)
!2356 = !DILocation(line: 194, column: 23, scope: !1069)
!2357 = !DILocation(line: 195, column: 2, scope: !1069)
!2358 = !DILocation(line: 196, column: 2, scope: !1069)
!2359 = !DILocation(line: 197, column: 51, scope: !1069)
!2360 = !DILocation(line: 197, column: 74, scope: !1069)
!2361 = !DILocation(line: 197, column: 32, scope: !1069)
!2362 = !DILocation(line: 197, column: 17, scope: !1069)
!2363 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2364)
!2364 = distinct !DILocation(line: 200, column: 2, scope: !1090)
!2365 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2364)
!2366 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2364)
!2367 = !DILocation(line: 200, column: 2, scope: !1090)
!2368 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2369)
!2369 = distinct !DILocation(line: 200, column: 2, scope: !1090)
!2370 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2369)
!2371 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2369)
!2372 = !DILocation(line: 200, column: 2, scope: !1091)
!2373 = !DILocation(line: 200, column: 2, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 200, column: 2)
!2375 = !DILocation(line: 192, column: 6, scope: !1069)
!2376 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2377)
!2377 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2378)
!2378 = distinct !DILocation(line: 200, column: 2, scope: !1087)
!2379 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2377)
!2380 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2377)
!2381 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2378)
!2382 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2378)
!2383 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2378)
!2384 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2378)
!2385 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2378)
!2386 = !DILocation(line: 200, column: 2, scope: !1087)
!2387 = !{i32 -2145805344, i32 -2145805331, i32 -2145805306, i32 -2145805282, i32 -2145805257, i32 -2145805182, i32 -2145805157, i32 -2145805013, i32 -2145801910, i32 -2145801821, i32 -2145801700, i32 -2145801605, i32 -2145801504, i32 -2145801477, i32 -2145801394, i32 -2145801305, i32 -2145801184, i32 -2145801084, i32 -2145800978, i32 -2145800870, i32 -2145804730, i32 -2145804677, i32 -2145804646, i32 -2145804615, i32 -2145804594, i32 -2145804572, i32 -2145804523, i32 -2145804502, i32 -2145800787, i32 -2145800698, i32 -2145800577, i32 -2145800478, i32 -2145800372, i32 -2145800270, i32 -2145800237, i32 -2145800164, i32 -2145800096, i32 -2145804200, i32 -2145804141, i32 -2145804088, i32 -2145804057, i32 -2145804026, i32 -2145804005, i32 -2145803983, i32 -2145803934, i32 -2145803913, i32 -2145800044, i32 -2145799955, i32 -2145799834, i32 -2145799735, i32 -2145799629, i32 -2145799527, i32 -2145799494, i32 -2145799411, i32 -2145799322, i32 -2145799201, i32 -2145799101, i32 -2145799075, i32 -2145798972, i32 -2145798946, i32 -2145803655, i32 -2145803588, i32 -2145803563, i32 -2145803499, i32 -2145803417, i32 -2145803394, i32 -2145803369, i32 -2145803344}
!2388 = !DILocation(line: 200, column: 2, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 200, column: 2)
!2390 = distinct !DILexicalBlock(scope: !1087, file: !3, line: 200, column: 2)
!2391 = !{i32 -2145802397, i32 -2145802380}
!2392 = !DILocation(line: 201, column: 6, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 201, column: 6)
!2394 = !DILocation(line: 201, column: 13, scope: !2393)
!2395 = !DILocation(line: 201, column: 6, scope: !1069)
!2396 = !DILocation(line: 202, column: 7, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2393, file: !3, line: 201, column: 18)
!2398 = !DILocation(line: 205, column: 3, scope: !2397)
!2399 = !DILocation(line: 295, column: 2, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 295, column: 2)
!2401 = !DILocation(line: 209, column: 19, scope: !1069)
!2402 = !DILocalVariable(name: "a", arg: 1, scope: !2403, file: !388, line: 173, type: !386)
!2403 = distinct !DISubprogram(name: "uk_calloc", scope: !388, file: !388, line: 173, type: !399, isLocal: true, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2404)
!2404 = !{!2402, !2405, !2406}
!2405 = !DILocalVariable(name: "nmemb", arg: 2, scope: !2403, file: !388, line: 174, type: !395)
!2406 = !DILocalVariable(name: "size", arg: 3, scope: !2403, file: !388, line: 174, type: !395)
!2407 = !DILocation(line: 173, column: 48, scope: !2403, inlinedAt: !2408)
!2408 = distinct !DILocation(line: 209, column: 9, scope: !1069)
!2409 = !DILocation(line: 174, column: 17, scope: !2403, inlinedAt: !2408)
!2410 = !DILocation(line: 174, column: 31, scope: !2403, inlinedAt: !2408)
!2411 = !DILocation(line: 176, column: 6, scope: !2412, inlinedAt: !2408)
!2412 = distinct !DILexicalBlock(scope: !2403, file: !388, line: 176, column: 6)
!2413 = !DILocation(line: 176, column: 6, scope: !2403, inlinedAt: !2408)
!2414 = !DILocation(line: 177, column: 3, scope: !2415, inlinedAt: !2408)
!2415 = distinct !DILexicalBlock(scope: !2412, file: !388, line: 176, column: 20)
!2416 = !DILocation(line: 177, column: 9, scope: !2415, inlinedAt: !2408)
!2417 = !DILocation(line: 178, column: 3, scope: !2415, inlinedAt: !2408)
!2418 = !DILocation(line: 181, column: 1, scope: !2403, inlinedAt: !2408)
!2419 = !DILocation(line: 210, column: 6, scope: !1069)
!2420 = !DILocalVariable(name: "a", arg: 1, scope: !2421, file: !388, line: 166, type: !386)
!2421 = distinct !DISubprogram(name: "uk_do_calloc", scope: !388, file: !388, line: 166, type: !399, isLocal: true, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2422)
!2422 = !{!2420, !2423, !2424}
!2423 = !DILocalVariable(name: "nmemb", arg: 2, scope: !2421, file: !388, line: 167, type: !395)
!2424 = !DILocalVariable(name: "size", arg: 3, scope: !2421, file: !388, line: 167, type: !395)
!2425 = !DILocation(line: 166, column: 51, scope: !2421, inlinedAt: !2426)
!2426 = distinct !DILocation(line: 180, column: 9, scope: !2403, inlinedAt: !2408)
!2427 = !DILocation(line: 167, column: 13, scope: !2421, inlinedAt: !2426)
!2428 = !DILocation(line: 167, column: 27, scope: !2421, inlinedAt: !2426)
!2429 = !DILocation(line: 169, column: 2, scope: !2430, inlinedAt: !2426)
!2430 = distinct !DILexicalBlock(scope: !2421, file: !388, line: 169, column: 2)
!2431 = !DILocation(line: 170, column: 12, scope: !2421, inlinedAt: !2426)
!2432 = !DILocation(line: 170, column: 9, scope: !2421, inlinedAt: !2426)
!2433 = !DILocation(line: 170, column: 2, scope: !2421, inlinedAt: !2426)
!2434 = !DILocation(line: 180, column: 2, scope: !2403, inlinedAt: !2408)
!2435 = !DILocation(line: 210, column: 7, scope: !2436)
!2436 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 210, column: 6)
!2437 = !DILocation(line: 211, column: 7, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 210, column: 13)
!2439 = !DILocation(line: 214, column: 3, scope: !2438)
!2440 = !DILocation(line: 216, column: 23, scope: !1069)
!2441 = !DILocation(line: 173, column: 48, scope: !2403, inlinedAt: !2442)
!2442 = distinct !DILocation(line: 216, column: 13, scope: !1069)
!2443 = !DILocation(line: 174, column: 17, scope: !2403, inlinedAt: !2442)
!2444 = !DILocation(line: 174, column: 31, scope: !2403, inlinedAt: !2442)
!2445 = !DILocation(line: 176, column: 6, scope: !2412, inlinedAt: !2442)
!2446 = !DILocation(line: 176, column: 6, scope: !2403, inlinedAt: !2442)
!2447 = !DILocation(line: 177, column: 3, scope: !2415, inlinedAt: !2442)
!2448 = !DILocation(line: 177, column: 9, scope: !2415, inlinedAt: !2442)
!2449 = !DILocation(line: 178, column: 3, scope: !2415, inlinedAt: !2442)
!2450 = !DILocation(line: 181, column: 1, scope: !2403, inlinedAt: !2442)
!2451 = !DILocation(line: 217, column: 6, scope: !1069)
!2452 = !DILocation(line: 166, column: 51, scope: !2421, inlinedAt: !2453)
!2453 = distinct !DILocation(line: 180, column: 9, scope: !2403, inlinedAt: !2442)
!2454 = !DILocation(line: 167, column: 13, scope: !2421, inlinedAt: !2453)
!2455 = !DILocation(line: 167, column: 27, scope: !2421, inlinedAt: !2453)
!2456 = !DILocation(line: 169, column: 2, scope: !2430, inlinedAt: !2453)
!2457 = !DILocation(line: 170, column: 12, scope: !2421, inlinedAt: !2453)
!2458 = !DILocation(line: 170, column: 9, scope: !2421, inlinedAt: !2453)
!2459 = !DILocation(line: 170, column: 2, scope: !2421, inlinedAt: !2453)
!2460 = !DILocation(line: 180, column: 2, scope: !2403, inlinedAt: !2442)
!2461 = !DILocation(line: 217, column: 7, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 217, column: 6)
!2463 = !DILocation(line: 218, column: 7, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2462, file: !3, line: 217, column: 17)
!2465 = !DILocation(line: 221, column: 3, scope: !2464)
!2466 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2467)
!2467 = distinct !DILocation(line: 224, column: 2, scope: !1097)
!2468 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2467)
!2469 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2467)
!2470 = !DILocation(line: 224, column: 2, scope: !1097)
!2471 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2472)
!2472 = distinct !DILocation(line: 224, column: 2, scope: !1097)
!2473 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2472)
!2474 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2472)
!2475 = !DILocation(line: 224, column: 2, scope: !1098)
!2476 = !DILocation(line: 224, column: 2, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !1097, file: !3, line: 224, column: 2)
!2478 = !{!1404, !1404, i64 0}
!2479 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2480)
!2480 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2481)
!2481 = distinct !DILocation(line: 224, column: 2, scope: !1094)
!2482 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2480)
!2483 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2480)
!2484 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2481)
!2485 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2481)
!2486 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2481)
!2487 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2481)
!2488 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2481)
!2489 = !DILocation(line: 224, column: 2, scope: !1094)
!2490 = !{i32 -2145796567, i32 -2145796554, i32 -2145796529, i32 -2145796505, i32 -2145796480, i32 -2145796405, i32 -2145796380, i32 -2145796236, i32 -2145793000, i32 -2145792911, i32 -2145792790, i32 -2145792695, i32 -2145792594, i32 -2145792567, i32 -2145792484, i32 -2145792395, i32 -2145792274, i32 -2145792174, i32 -2145792068, i32 -2145791960, i32 -2145795906, i32 -2145795853, i32 -2145795822, i32 -2145795791, i32 -2145795770, i32 -2145795748, i32 -2145795699, i32 -2145795678, i32 -2145795575, i32 -2145791877, i32 -2145791788, i32 -2145791667, i32 -2145791568, i32 -2145791462, i32 -2145791360, i32 -2145791327, i32 -2145791254, i32 -2145791186, i32 -2145795385, i32 -2145795326, i32 -2145795273, i32 -2145795242, i32 -2145795211, i32 -2145795190, i32 -2145795168, i32 -2145795119, i32 -2145795098, i32 -2145791138, i32 -2145791049, i32 -2145790928, i32 -2145790829, i32 -2145790723, i32 -2145790621, i32 -2145790588, i32 -2145790505, i32 -2145790416, i32 -2145790295, i32 -2145790195, i32 -2145790169, i32 -2145790066, i32 -2145790040, i32 -2145794840, i32 -2145794773, i32 -2145794748, i32 -2145794684, i32 -2145794602, i32 -2145794579, i32 -2145794554, i32 -2145794529}
!2491 = !DILocation(line: 224, column: 2, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 224, column: 2)
!2493 = distinct !DILexicalBlock(scope: !1094, file: !3, line: 224, column: 2)
!2494 = !{i32 -2145793491, i32 -2145793474}
!2495 = !DILocation(line: 226, column: 2, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2497, file: !3, line: 226, column: 2)
!2497 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 226, column: 2)
!2498 = !DILocation(line: 226, column: 2, scope: !2497)
!2499 = !DILocation(line: 226, column: 2, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2496, file: !3, line: 226, column: 2)
!2501 = !DILocation(line: 228, column: 8, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 228, column: 6)
!2503 = !DILocation(line: 228, column: 7, scope: !2502)
!2504 = !DILocation(line: 228, column: 6, scope: !1069)
!2505 = !DILocation(line: 229, column: 7, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 228, column: 24)
!2507 = !DILocation(line: 232, column: 3, scope: !2506)
!2508 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2509)
!2509 = distinct !DILocation(line: 235, column: 2, scope: !1105)
!2510 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2509)
!2511 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2509)
!2512 = !DILocation(line: 235, column: 2, scope: !1105)
!2513 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2514)
!2514 = distinct !DILocation(line: 235, column: 2, scope: !1105)
!2515 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2514)
!2516 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2514)
!2517 = !DILocation(line: 235, column: 2, scope: !1106)
!2518 = !DILocation(line: 235, column: 2, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !1105, file: !3, line: 235, column: 2)
!2520 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2521)
!2521 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2522)
!2522 = distinct !DILocation(line: 235, column: 2, scope: !1102)
!2523 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2521)
!2524 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2521)
!2525 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2522)
!2526 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2522)
!2527 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2522)
!2528 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2522)
!2529 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2522)
!2530 = !DILocation(line: 235, column: 2, scope: !1102)
!2531 = !{i32 -2145787731, i32 -2145787718, i32 -2145787693, i32 -2145787669, i32 -2145787644, i32 -2145787569, i32 -2145787544, i32 -2145787400, i32 -2145785169, i32 -2145785080, i32 -2145784959, i32 -2145784864, i32 -2145784763, i32 -2145784736, i32 -2145784653, i32 -2145784564, i32 -2145784443, i32 -2145784343, i32 -2145784237, i32 -2145784129, i32 -2145787112, i32 -2145787059, i32 -2145787028, i32 -2145786997, i32 -2145786976, i32 -2145786954, i32 -2145786905, i32 -2145786884, i32 -2145784046, i32 -2145783957, i32 -2145783836, i32 -2145783737, i32 -2145783631, i32 -2145783529, i32 -2145783496, i32 -2145783423, i32 -2145783355, i32 -2145786510, i32 -2145786457, i32 -2145786426, i32 -2145786395, i32 -2145786374, i32 -2145786352, i32 -2145786303, i32 -2145786282, i32 -2145783304, i32 -2145783215, i32 -2145783094, i32 -2145782995, i32 -2145782889, i32 -2145782787, i32 -2145782754, i32 -2145782671, i32 -2145782582, i32 -2145782461, i32 -2145782361, i32 -2145782335, i32 -2145782232, i32 -2145782206, i32 -2145786024, i32 -2145785957, i32 -2145785932, i32 -2145785868, i32 -2145785752, i32 -2145785727, i32 -2145785702}
!2532 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2533)
!2533 = distinct !DILocation(line: 241, column: 2, scope: !1111)
!2534 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2533)
!2535 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2533)
!2536 = !DILocation(line: 241, column: 2, scope: !1111)
!2537 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2538)
!2538 = distinct !DILocation(line: 241, column: 2, scope: !1111)
!2539 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2538)
!2540 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2538)
!2541 = !DILocation(line: 241, column: 2, scope: !1112)
!2542 = !DILocation(line: 241, column: 2, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 241, column: 2)
!2544 = !DILocation(line: 195, column: 17, scope: !1069)
!2545 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2546)
!2546 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2547)
!2547 = distinct !DILocation(line: 241, column: 2, scope: !1108)
!2548 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2546)
!2549 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2546)
!2550 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2547)
!2551 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2547)
!2552 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2547)
!2553 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2547)
!2554 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2547)
!2555 = !DILocation(line: 241, column: 2, scope: !1108)
!2556 = !{i32 -2145779248, i32 -2145779235, i32 -2145779210, i32 -2145779186, i32 -2145779161, i32 -2145779086, i32 -2145779061, i32 -2145778917, i32 -2145775380, i32 -2145775291, i32 -2145775170, i32 -2145775075, i32 -2145774974, i32 -2145774947, i32 -2145774864, i32 -2145774775, i32 -2145774654, i32 -2145774554, i32 -2145774448, i32 -2145774340, i32 -2145778587, i32 -2145778534, i32 -2145778503, i32 -2145778472, i32 -2145778451, i32 -2145778429, i32 -2145778380, i32 -2145778359, i32 -2145778256, i32 -2145774257, i32 -2145774168, i32 -2145774047, i32 -2145773948, i32 -2145773842, i32 -2145773740, i32 -2145773707, i32 -2145773634, i32 -2145773566, i32 -2145778066, i32 -2145778007, i32 -2145777954, i32 -2145777923, i32 -2145777892, i32 -2145777871, i32 -2145777849, i32 -2145777800, i32 -2145777779, i32 -2145773518, i32 -2145773429, i32 -2145773308, i32 -2145773209, i32 -2145773103, i32 -2145773001, i32 -2145772968, i32 -2145772885, i32 -2145772796, i32 -2145772675, i32 -2145772575, i32 -2145772549, i32 -2145772446, i32 -2145772420, i32 -2145777521, i32 -2145777454, i32 -2145777429, i32 -2145777365, i32 -2145777283, i32 -2145777260, i32 -2145777235, i32 -2145777210}
!2557 = !DILocation(line: 241, column: 2, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2559, file: !3, line: 241, column: 2)
!2559 = distinct !DILexicalBlock(scope: !2560, file: !3, line: 241, column: 2)
!2560 = distinct !DILexicalBlock(scope: !1108, file: !3, line: 241, column: 2)
!2561 = !{i32 -2145775965, i32 -2145775949}
!2562 = !DILocation(line: 245, column: 7, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 245, column: 6)
!2564 = !DILocation(line: 245, column: 6, scope: !1069)
!2565 = !DILocation(line: 246, column: 7, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2563, file: !3, line: 245, column: 17)
!2567 = !DILocation(line: 249, column: 3, scope: !2566)
!2568 = !DILocation(line: 253, column: 17, scope: !1069)
!2569 = !DILocation(line: 253, column: 12, scope: !1069)
!2570 = !DILocation(line: 253, column: 15, scope: !1069)
!2571 = !{!2572, !1409, i64 0}
!2572 = !{!"vfscore_file", !1409, i64 0, !1409, i64 4, !1409, i64 8, !1404, i64 16, !1408, i64 24, !1409, i64 32, !1408, i64 40, !1410, i64 48}
!2573 = !DILocation(line: 254, column: 12, scope: !1069)
!2574 = !DILocation(line: 254, column: 20, scope: !1069)
!2575 = !{!2572, !1409, i64 4}
!2576 = !DILocation(line: 255, column: 12, scope: !1069)
!2577 = !DILocation(line: 255, column: 20, scope: !1069)
!2578 = !{!2572, !1409, i64 8}
!2579 = !DILocation(line: 256, column: 12, scope: !1069)
!2580 = !DILocation(line: 256, column: 19, scope: !1069)
!2581 = !{!2572, !1408, i64 24}
!2582 = !DILocation(line: 257, column: 23, scope: !1069)
!2583 = !DILocation(line: 257, column: 12, scope: !1069)
!2584 = !DILocation(line: 257, column: 21, scope: !1069)
!2585 = !{!2572, !1408, i64 40}
!2586 = !DILocation(line: 258, column: 12, scope: !1069)
!2587 = !DILocation(line: 258, column: 24, scope: !1069)
!2588 = !{!2572, !1409, i64 32}
!2589 = !DILocation(line: 260, column: 3, scope: !1069)
!2590 = !DILocation(line: 260, column: 19, scope: !1069)
!2591 = !DILocation(line: 260, column: 26, scope: !1069)
!2592 = !DILocation(line: 261, column: 3, scope: !1069)
!2593 = !DILocation(line: 261, column: 19, scope: !1069)
!2594 = !DILocation(line: 261, column: 26, scope: !1069)
!2595 = !{!1403, !1409, i64 44}
!2596 = !DILocation(line: 263, column: 8, scope: !1069)
!2597 = !DILocation(line: 263, column: 21, scope: !1069)
!2598 = !{!1422, !1408, i64 0}
!2599 = !DILocation(line: 264, column: 8, scope: !1069)
!2600 = !DILocation(line: 264, column: 16, scope: !1069)
!2601 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2602)
!2602 = distinct !DILocation(line: 270, column: 2, scope: !1119)
!2603 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2602)
!2604 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2602)
!2605 = !DILocation(line: 270, column: 2, scope: !1119)
!2606 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2607)
!2607 = distinct !DILocation(line: 270, column: 2, scope: !1119)
!2608 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2607)
!2609 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2607)
!2610 = !DILocation(line: 270, column: 2, scope: !1120)
!2611 = !DILocation(line: 270, column: 2, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 270, column: 2)
!2613 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2614)
!2614 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2615)
!2615 = distinct !DILocation(line: 270, column: 2, scope: !1116)
!2616 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2614)
!2617 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2614)
!2618 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2615)
!2619 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2615)
!2620 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2615)
!2621 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2615)
!2622 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2615)
!2623 = !DILocation(line: 270, column: 2, scope: !1116)
!2624 = !{i32 -2145770196, i32 -2145770183, i32 -2145770158, i32 -2145770134, i32 -2145770109, i32 -2145770034, i32 -2145770009, i32 -2145769865, i32 -2145766674, i32 -2145766585, i32 -2145766464, i32 -2145766369, i32 -2145766268, i32 -2145766241, i32 -2145766158, i32 -2145766069, i32 -2145765948, i32 -2145765848, i32 -2145765742, i32 -2145765634, i32 -2145769573, i32 -2145769520, i32 -2145769489, i32 -2145769458, i32 -2145769437, i32 -2145769415, i32 -2145769366, i32 -2145769345, i32 -2145765551, i32 -2145765462, i32 -2145765341, i32 -2145765242, i32 -2145765136, i32 -2145765034, i32 -2145765001, i32 -2145764928, i32 -2145764860, i32 -2145769038, i32 -2145768979, i32 -2145768926, i32 -2145768895, i32 -2145768864, i32 -2145768843, i32 -2145768821, i32 -2145768772, i32 -2145768751, i32 -2145764806, i32 -2145764717, i32 -2145764596, i32 -2145764497, i32 -2145764391, i32 -2145764289, i32 -2145764256, i32 -2145764173, i32 -2145764084, i32 -2145763963, i32 -2145763863, i32 -2145763837, i32 -2145763734, i32 -2145763708, i32 -2145768493, i32 -2145768426, i32 -2145768401, i32 -2145768337, i32 -2145768255, i32 -2145768232, i32 -2145768207, i32 -2145768182}
!2625 = !DILocation(line: 270, column: 2, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 270, column: 2)
!2627 = distinct !DILexicalBlock(scope: !1116, file: !3, line: 270, column: 2)
!2628 = !{i32 -2145767167, i32 -2145767150}
!2629 = !DILocation(line: 272, column: 6, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 272, column: 6)
!2631 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2632)
!2632 = distinct !DILocation(line: 0, scope: !1126)
!2633 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2632)
!2634 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2632)
!2635 = !DILocation(line: 0, scope: !1126)
!2636 = !DILocation(line: 272, column: 6, scope: !1069)
!2637 = !DILocation(line: 0, scope: !1132)
!2638 = !DILocation(line: 279, column: 2, scope: !1126)
!2639 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2640)
!2640 = distinct !DILocation(line: 279, column: 2, scope: !1126)
!2641 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2640)
!2642 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2640)
!2643 = !DILocation(line: 279, column: 2, scope: !1127)
!2644 = !DILocation(line: 279, column: 2, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !1126, file: !3, line: 279, column: 2)
!2646 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2647)
!2647 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2648)
!2648 = distinct !DILocation(line: 279, column: 2, scope: !1123)
!2649 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2647)
!2650 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2647)
!2651 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2648)
!2652 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2648)
!2653 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2648)
!2654 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2648)
!2655 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2648)
!2656 = !DILocation(line: 279, column: 2, scope: !1123)
!2657 = !{i32 -2145761817, i32 -2145761804, i32 -2145761779, i32 -2145761755, i32 -2145761730, i32 -2145761655, i32 -2145761630, i32 -2145761486, i32 -2145759284, i32 -2145759195, i32 -2145759074, i32 -2145758979, i32 -2145758878, i32 -2145758851, i32 -2145758768, i32 -2145758679, i32 -2145758558, i32 -2145758458, i32 -2145758352, i32 -2145758244, i32 -2145761198, i32 -2145761145, i32 -2145761114, i32 -2145761083, i32 -2145761062, i32 -2145761040, i32 -2145760991, i32 -2145760970, i32 -2145758161, i32 -2145758072, i32 -2145757951, i32 -2145757852, i32 -2145757746, i32 -2145757644, i32 -2145757611, i32 -2145757538, i32 -2145757470, i32 -2145760596, i32 -2145760543, i32 -2145760512, i32 -2145760481, i32 -2145760460, i32 -2145760438, i32 -2145760389, i32 -2145760368, i32 -2145757429, i32 -2145757340, i32 -2145757219, i32 -2145757120, i32 -2145757014, i32 -2145756912, i32 -2145756879, i32 -2145756796, i32 -2145756707, i32 -2145756586, i32 -2145756486, i32 -2145756460, i32 -2145756357, i32 -2145756331, i32 -2145760110, i32 -2145760043, i32 -2145760018, i32 -2145759954, i32 -2145759838, i32 -2145759813, i32 -2145759788}
!2658 = !DILocation(line: 282, column: 9, scope: !1069)
!2659 = !DILocation(line: 282, column: 2, scope: !1069)
!2660 = !DILocation(line: 285, column: 2, scope: !1132)
!2661 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2662)
!2662 = distinct !DILocation(line: 285, column: 2, scope: !1132)
!2663 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2662)
!2664 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2662)
!2665 = !DILocation(line: 285, column: 2, scope: !1133)
!2666 = !DILocation(line: 285, column: 2, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !1132, file: !3, line: 285, column: 2)
!2668 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2669)
!2669 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2670)
!2670 = distinct !DILocation(line: 285, column: 2, scope: !1129)
!2671 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2669)
!2672 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2669)
!2673 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2670)
!2674 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2670)
!2675 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2670)
!2676 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2670)
!2677 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2670)
!2678 = !DILocation(line: 285, column: 2, scope: !1129)
!2679 = !{i32 -2145754482, i32 -2145754469, i32 -2145754444, i32 -2145754420, i32 -2145754395, i32 -2145754320, i32 -2145754295, i32 -2145754151, i32 -2145751956, i32 -2145751867, i32 -2145751746, i32 -2145751651, i32 -2145751550, i32 -2145751523, i32 -2145751440, i32 -2145751351, i32 -2145751230, i32 -2145751130, i32 -2145751024, i32 -2145750916, i32 -2145753863, i32 -2145753810, i32 -2145753779, i32 -2145753748, i32 -2145753727, i32 -2145753705, i32 -2145753656, i32 -2145753635, i32 -2145750833, i32 -2145750744, i32 -2145750623, i32 -2145750524, i32 -2145750418, i32 -2145750316, i32 -2145750283, i32 -2145750210, i32 -2145750142, i32 -2145753261, i32 -2145753208, i32 -2145753177, i32 -2145753146, i32 -2145753125, i32 -2145753103, i32 -2145753054, i32 -2145753033, i32 -2145750101, i32 -2145750012, i32 -2145749891, i32 -2145749792, i32 -2145749686, i32 -2145749584, i32 -2145749551, i32 -2145749468, i32 -2145749379, i32 -2145749258, i32 -2145749158, i32 -2145749132, i32 -2145749029, i32 -2145749003, i32 -2145752775, i32 -2145752708, i32 -2145752683, i32 -2145752619, i32 -2145752503, i32 -2145752478, i32 -2145752453}
!2680 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2681)
!2681 = distinct !DILocation(line: 287, column: 2, scope: !1138)
!2682 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2681)
!2683 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2681)
!2684 = !DILocation(line: 287, column: 2, scope: !1138)
!2685 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2686)
!2686 = distinct !DILocation(line: 287, column: 2, scope: !1138)
!2687 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2686)
!2688 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2686)
!2689 = !DILocation(line: 287, column: 2, scope: !1139)
!2690 = !DILocation(line: 287, column: 2, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 287, column: 2)
!2692 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2693)
!2693 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2694)
!2694 = distinct !DILocation(line: 287, column: 2, scope: !1135)
!2695 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2693)
!2696 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2693)
!2697 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2694)
!2698 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2694)
!2699 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2694)
!2700 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2694)
!2701 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2694)
!2702 = !DILocation(line: 287, column: 2, scope: !1135)
!2703 = !{i32 -2145747112, i32 -2145747099, i32 -2145747074, i32 -2145747050, i32 -2145747025, i32 -2145746950, i32 -2145746925, i32 -2145746781, i32 -2145744579, i32 -2145744490, i32 -2145744369, i32 -2145744274, i32 -2145744173, i32 -2145744146, i32 -2145744063, i32 -2145743974, i32 -2145743853, i32 -2145743753, i32 -2145743647, i32 -2145743539, i32 -2145746493, i32 -2145746440, i32 -2145746409, i32 -2145746378, i32 -2145746357, i32 -2145746335, i32 -2145746286, i32 -2145746265, i32 -2145743456, i32 -2145743367, i32 -2145743246, i32 -2145743147, i32 -2145743041, i32 -2145742939, i32 -2145742906, i32 -2145742833, i32 -2145742765, i32 -2145745891, i32 -2145745838, i32 -2145745807, i32 -2145745776, i32 -2145745755, i32 -2145745733, i32 -2145745684, i32 -2145745663, i32 -2145742724, i32 -2145742635, i32 -2145742514, i32 -2145742415, i32 -2145742309, i32 -2145742207, i32 -2145742174, i32 -2145742091, i32 -2145742002, i32 -2145741881, i32 -2145741781, i32 -2145741755, i32 -2145741652, i32 -2145741626, i32 -2145745405, i32 -2145745338, i32 -2145745313, i32 -2145745249, i32 -2145745133, i32 -2145745108, i32 -2145745083}
!2704 = !DILocation(line: 289, column: 10, scope: !1069)
!2705 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !2706)
!2706 = distinct !DILocation(line: 289, column: 2, scope: !1069)
!2707 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !2706)
!2708 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !2709)
!2709 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !2706)
!2710 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !2709)
!2711 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !2709)
!2712 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !2709)
!2713 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !2709)
!2714 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !2709)
!2715 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !2709)
!2716 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !2709)
!2717 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !2706)
!2718 = !DILocation(line: 289, column: 2, scope: !1069)
!2719 = !DILocation(line: 0, scope: !2464)
!2720 = !DILocation(line: 291, column: 10, scope: !1069)
!2721 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !2722)
!2722 = distinct !DILocation(line: 291, column: 2, scope: !1069)
!2723 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !2722)
!2724 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !2725)
!2725 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !2722)
!2726 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !2725)
!2727 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !2725)
!2728 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !2725)
!2729 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !2725)
!2730 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !2725)
!2731 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !2725)
!2732 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !2725)
!2733 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !2722)
!2734 = !DILocation(line: 291, column: 2, scope: !1069)
!2735 = !DILocation(line: 0, scope: !1069)
!2736 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2737)
!2737 = distinct !DILocation(line: 293, column: 2, scope: !1144)
!2738 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2737)
!2739 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2737)
!2740 = !DILocation(line: 293, column: 2, scope: !1144)
!2741 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2742)
!2742 = distinct !DILocation(line: 293, column: 2, scope: !1144)
!2743 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2742)
!2744 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2742)
!2745 = !DILocation(line: 293, column: 2, scope: !1145)
!2746 = !DILocation(line: 293, column: 2, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !1144, file: !3, line: 293, column: 2)
!2748 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2749)
!2749 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2750)
!2750 = distinct !DILocation(line: 293, column: 2, scope: !1141)
!2751 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2749)
!2752 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2749)
!2753 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2750)
!2754 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2750)
!2755 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2750)
!2756 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2750)
!2757 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2750)
!2758 = !DILocation(line: 293, column: 2, scope: !1141)
!2759 = !{i32 -2145739744, i32 -2145739731, i32 -2145739706, i32 -2145739682, i32 -2145739657, i32 -2145739582, i32 -2145739557, i32 -2145739413, i32 -2145737202, i32 -2145737113, i32 -2145736992, i32 -2145736897, i32 -2145736796, i32 -2145736769, i32 -2145736686, i32 -2145736597, i32 -2145736476, i32 -2145736376, i32 -2145736270, i32 -2145736162, i32 -2145739125, i32 -2145739072, i32 -2145739041, i32 -2145739010, i32 -2145738989, i32 -2145738967, i32 -2145738918, i32 -2145738897, i32 -2145736079, i32 -2145735990, i32 -2145735869, i32 -2145735770, i32 -2145735664, i32 -2145735562, i32 -2145735529, i32 -2145735456, i32 -2145735388, i32 -2145738523, i32 -2145738470, i32 -2145738439, i32 -2145738408, i32 -2145738387, i32 -2145738365, i32 -2145738316, i32 -2145738295, i32 -2145735338, i32 -2145735249, i32 -2145735128, i32 -2145735029, i32 -2145734923, i32 -2145734821, i32 -2145734788, i32 -2145734705, i32 -2145734616, i32 -2145734495, i32 -2145734395, i32 -2145734369, i32 -2145734266, i32 -2145734240, i32 -2145738037, i32 -2145737970, i32 -2145737945, i32 -2145737881, i32 -2145737765, i32 -2145737740, i32 -2145737715}
!2760 = !DILocation(line: 295, column: 2, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2400, file: !3, line: 295, column: 2)
!2762 = !DILocation(line: 295, column: 2, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 295, column: 2)
!2764 = !DILocation(line: 297, column: 1, scope: !1069)
!2765 = !DILocation(line: 88, column: 30, scope: !1664)
!2766 = !DILocation(line: 90, column: 11, scope: !1664)
!2767 = !DILocation(line: 90, column: 3, scope: !1664)
!2768 = !DILocation(line: 90, column: 9, scope: !1664)
!2769 = !DILocation(line: 91, column: 1, scope: !1664)
!2770 = distinct !DISubprogram(name: "accept", scope: !3, file: !3, line: 479, type: !2771, isLocal: false, isDefinition: true, scopeLine: 480, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2774)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!80, !80, !1004, !2773}
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!2774 = !{!2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2788, !2789, !2798, !2807}
!2775 = !DILocalVariable(name: "s", arg: 1, scope: !2770, file: !3, line: 479, type: !80)
!2776 = !DILocalVariable(name: "addr", arg: 2, scope: !2770, file: !3, line: 479, type: !1004)
!2777 = !DILocalVariable(name: "addrlen", arg: 3, scope: !2770, file: !3, line: 479, type: !2773)
!2778 = !DILocalVariable(name: "ret", scope: !2770, file: !3, line: 481, type: !80)
!2779 = !DILocalVariable(name: "file", scope: !2770, file: !3, line: 482, type: !1077)
!2780 = !DILocalVariable(name: "sock_fd", scope: !2770, file: !3, line: 483, type: !80)
!2781 = !DILocalVariable(name: "vfs_fd", scope: !2770, file: !3, line: 483, type: !80)
!2782 = !DILocalVariable(name: "tid", scope: !2783, file: !3, line: 485, type: !170)
!2783 = distinct !DILexicalBlock(scope: !2784, file: !3, line: 485, column: 2)
!2784 = distinct !DILexicalBlock(scope: !2785, file: !3, line: 485, column: 2)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 485, column: 2)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 485, column: 2)
!2787 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 485, column: 2)
!2788 = !DILocalVariable(name: "_ret", scope: !2783, file: !3, line: 485, type: !135)
!2789 = !DILocalVariable(name: "tid", scope: !2790, file: !3, line: 491, type: !170)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 491, column: 3)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !3, line: 491, column: 3)
!2792 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 491, column: 3)
!2793 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 491, column: 3)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 491, column: 3)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !3, line: 491, column: 3)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 486, column: 22)
!2797 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 486, column: 6)
!2798 = !DILocalVariable(name: "tid", scope: !2799, file: !3, line: 511, type: !170)
!2799 = distinct !DILexicalBlock(scope: !2800, file: !3, line: 511, column: 3)
!2800 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 511, column: 3)
!2801 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 511, column: 3)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 511, column: 3)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 511, column: 3)
!2804 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 511, column: 3)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 506, column: 18)
!2806 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 506, column: 6)
!2807 = !DILocalVariable(name: "tid", scope: !2808, file: !3, line: 516, type: !170)
!2808 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 516, column: 2)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 516, column: 2)
!2810 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 516, column: 2)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 516, column: 2)
!2812 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 516, column: 2)
!2813 = !DILocation(line: 479, column: 16, scope: !2770)
!2814 = !DILocation(line: 479, column: 36, scope: !2770)
!2815 = !DILocation(line: 479, column: 53, scope: !2770)
!2816 = !DILocation(line: 481, column: 6, scope: !2770)
!2817 = !DILocation(line: 482, column: 2, scope: !2770)
!2818 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2819)
!2819 = distinct !DILocation(line: 485, column: 2, scope: !2786)
!2820 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2819)
!2821 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2819)
!2822 = !DILocation(line: 485, column: 2, scope: !2786)
!2823 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2824)
!2824 = distinct !DILocation(line: 485, column: 2, scope: !2786)
!2825 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2824)
!2826 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2824)
!2827 = !DILocation(line: 485, column: 2, scope: !2787)
!2828 = !DILocalVariable(name: "fd", arg: 1, scope: !2829, file: !3, line: 166, type: !80)
!2829 = distinct !DISubprogram(name: "sock_net_file_get", scope: !3, file: !3, line: 166, type: !2830, isLocal: true, isDefinition: true, scopeLine: 167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2832)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!1077, !80}
!2832 = !{!2828, !2833, !2834}
!2833 = !DILocalVariable(name: "file", scope: !2829, file: !3, line: 168, type: !1077)
!2834 = !DILocalVariable(name: "fos", scope: !2829, file: !3, line: 169, type: !785)
!2835 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !2836)
!2836 = distinct !DILocation(line: 485, column: 2, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 485, column: 2)
!2838 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !2836)
!2839 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !2836)
!2840 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !2836)
!2841 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !2836)
!2842 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 172, column: 6)
!2843 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !2836)
!2844 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !2836)
!2845 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 178, column: 6)
!2846 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !2836)
!2847 = !{!2848, !1408, i64 32}
!2848 = !{!"dentry", !2849, i64 0, !1409, i64 16, !1408, i64 24, !1408, i64 32, !1408, i64 40, !1408, i64 48, !1407, i64 56, !1410, i64 72, !1407, i64 104, !1407, i64 120}
!2849 = !{!"uk_hlist_node", !1408, i64 0, !1408, i64 8}
!2850 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !2836)
!2851 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !2836)
!2852 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !2836)
!2853 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !2836)
!2854 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !2836)
!2855 = !DILocation(line: 0, scope: !2856, inlinedAt: !2836)
!2856 = distinct !DILexicalBlock(scope: !2842, file: !3, line: 172, column: 12)
!2857 = !DILocation(line: 0, scope: !2837)
!2858 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !2836)
!2859 = !DILocation(line: 482, column: 24, scope: !2770)
!2860 = !DILocation(line: 485, column: 2, scope: !2837)
!2861 = !DILocation(line: 486, column: 6, scope: !2797)
!2862 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2863)
!2863 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2864)
!2864 = distinct !DILocation(line: 485, column: 2, scope: !2783)
!2865 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2863)
!2866 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2863)
!2867 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2864)
!2868 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2864)
!2869 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2864)
!2870 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2864)
!2871 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2864)
!2872 = !DILocation(line: 485, column: 2, scope: !2783)
!2873 = !{i32 -2145684396, i32 -2145684383, i32 -2145684358, i32 -2145684334, i32 -2145684309, i32 -2145684234, i32 -2145684209, i32 -2145684065, i32 -2145680933, i32 -2145680844, i32 -2145680723, i32 -2145680628, i32 -2145680527, i32 -2145680500, i32 -2145680417, i32 -2145680328, i32 -2145680207, i32 -2145680107, i32 -2145680001, i32 -2145679893, i32 -2145683777, i32 -2145683724, i32 -2145683693, i32 -2145683662, i32 -2145683641, i32 -2145683619, i32 -2145683570, i32 -2145683549, i32 -2145679810, i32 -2145679721, i32 -2145679600, i32 -2145679501, i32 -2145679395, i32 -2145679293, i32 -2145679260, i32 -2145679187, i32 -2145679119, i32 -2145683245, i32 -2145683186, i32 -2145683133, i32 -2145683102, i32 -2145683071, i32 -2145683050, i32 -2145683028, i32 -2145682979, i32 -2145682958, i32 -2145679066, i32 -2145678977, i32 -2145678856, i32 -2145678757, i32 -2145678651, i32 -2145678549, i32 -2145678516, i32 -2145678433, i32 -2145678344, i32 -2145678223, i32 -2145678123, i32 -2145678097, i32 -2145677994, i32 -2145677968, i32 -2145682700, i32 -2145682633, i32 -2145682608, i32 -2145682544, i32 -2145682462, i32 -2145682439, i32 -2145682414, i32 -2145682389}
!2874 = !DILocation(line: 485, column: 2, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 485, column: 2)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 485, column: 2)
!2877 = distinct !DILexicalBlock(scope: !2783, file: !3, line: 485, column: 2)
!2878 = !{i32 -2145681201, i32 -2145681185}
!2879 = !DILocation(line: 486, column: 6, scope: !2770)
!2880 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2881)
!2881 = distinct !DILocation(line: 491, column: 3, scope: !2793)
!2882 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2881)
!2883 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2881)
!2884 = !DILocation(line: 491, column: 3, scope: !2793)
!2885 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2886)
!2886 = distinct !DILocation(line: 491, column: 3, scope: !2793)
!2887 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2886)
!2888 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2886)
!2889 = !DILocation(line: 491, column: 3, scope: !2794)
!2890 = !DILocation(line: 491, column: 3, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 491, column: 3)
!2892 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2893)
!2893 = distinct !DILocation(line: 491, column: 3, scope: !2891)
!2894 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !2893)
!2895 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2893)
!2896 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2893)
!2897 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2893)
!2898 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2899)
!2899 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2900)
!2900 = distinct !DILocation(line: 491, column: 3, scope: !2790)
!2901 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2899)
!2902 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2899)
!2903 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2900)
!2904 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2900)
!2905 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2900)
!2906 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2900)
!2907 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2900)
!2908 = !DILocation(line: 491, column: 3, scope: !2790)
!2909 = !{i32 -2145675713, i32 -2145675700, i32 -2145675675, i32 -2145675651, i32 -2145675626, i32 -2145675551, i32 -2145675526, i32 -2145675382, i32 -2145673141, i32 -2145673052, i32 -2145672931, i32 -2145672836, i32 -2145672735, i32 -2145672708, i32 -2145672625, i32 -2145672536, i32 -2145672415, i32 -2145672315, i32 -2145672209, i32 -2145672101, i32 -2145675094, i32 -2145675041, i32 -2145675010, i32 -2145674979, i32 -2145674958, i32 -2145674936, i32 -2145674887, i32 -2145674866, i32 -2145672018, i32 -2145671929, i32 -2145671808, i32 -2145671709, i32 -2145671603, i32 -2145671501, i32 -2145671468, i32 -2145671395, i32 -2145671327, i32 -2145674492, i32 -2145674439, i32 -2145674408, i32 -2145674377, i32 -2145674356, i32 -2145674334, i32 -2145674285, i32 -2145674264, i32 -2145671272, i32 -2145671183, i32 -2145671062, i32 -2145670963, i32 -2145670857, i32 -2145670755, i32 -2145670722, i32 -2145670639, i32 -2145670550, i32 -2145670429, i32 -2145670329, i32 -2145670303, i32 -2145670200, i32 -2145670174, i32 -2145674006, i32 -2145673939, i32 -2145673914, i32 -2145673850, i32 -2145673734, i32 -2145673709, i32 -2145673684}
!2910 = !DILocation(line: 496, column: 30, scope: !2770)
!2911 = !DILocation(line: 496, column: 12, scope: !2770)
!2912 = !DILocation(line: 483, column: 6, scope: !2770)
!2913 = !DILocation(line: 497, column: 14, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 497, column: 6)
!2915 = !DILocation(line: 497, column: 6, scope: !2770)
!2916 = !DILocation(line: 505, column: 11, scope: !2770)
!2917 = !DILocation(line: 483, column: 15, scope: !2770)
!2918 = !DILocation(line: 506, column: 13, scope: !2806)
!2919 = !DILocation(line: 506, column: 6, scope: !2770)
!2920 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2921)
!2921 = distinct !DILocation(line: 511, column: 3, scope: !2802)
!2922 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2921)
!2923 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2921)
!2924 = !DILocation(line: 511, column: 3, scope: !2802)
!2925 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2926)
!2926 = distinct !DILocation(line: 511, column: 3, scope: !2802)
!2927 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2926)
!2928 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2926)
!2929 = !DILocation(line: 511, column: 3, scope: !2803)
!2930 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !2931)
!2931 = distinct !DILocation(line: 511, column: 3, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2802, file: !3, line: 511, column: 3)
!2933 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !2931)
!2934 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !2931)
!2935 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !2931)
!2936 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !2931)
!2937 = !DILocation(line: 511, column: 3, scope: !2932)
!2938 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2939)
!2939 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2940)
!2940 = distinct !DILocation(line: 511, column: 3, scope: !2799)
!2941 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2939)
!2942 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2939)
!2943 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2940)
!2944 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2940)
!2945 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2940)
!2946 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2940)
!2947 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2940)
!2948 = !DILocation(line: 511, column: 3, scope: !2799)
!2949 = !{i32 -2145668172, i32 -2145668159, i32 -2145668134, i32 -2145668110, i32 -2145668085, i32 -2145668010, i32 -2145667985, i32 -2145667841, i32 -2145665620, i32 -2145665531, i32 -2145665410, i32 -2145665315, i32 -2145665214, i32 -2145665187, i32 -2145665104, i32 -2145665015, i32 -2145664894, i32 -2145664794, i32 -2145664688, i32 -2145664580, i32 -2145667553, i32 -2145667500, i32 -2145667469, i32 -2145667438, i32 -2145667417, i32 -2145667395, i32 -2145667346, i32 -2145667325, i32 -2145664497, i32 -2145664408, i32 -2145664287, i32 -2145664188, i32 -2145664082, i32 -2145663980, i32 -2145663947, i32 -2145663874, i32 -2145663806, i32 -2145666951, i32 -2145666898, i32 -2145666867, i32 -2145666836, i32 -2145666815, i32 -2145666793, i32 -2145666744, i32 -2145666723, i32 -2145663751, i32 -2145663662, i32 -2145663541, i32 -2145663442, i32 -2145663336, i32 -2145663234, i32 -2145663201, i32 -2145663118, i32 -2145663029, i32 -2145662908, i32 -2145662808, i32 -2145662782, i32 -2145662679, i32 -2145662653, i32 -2145666465, i32 -2145666398, i32 -2145666373, i32 -2145666309, i32 -2145666193, i32 -2145666168, i32 -2145666143}
!2950 = !DILocation(line: 0, scope: !2770)
!2951 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2952)
!2952 = distinct !DILocation(line: 516, column: 2, scope: !2811)
!2953 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2952)
!2954 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2952)
!2955 = !DILocation(line: 516, column: 2, scope: !2811)
!2956 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2957)
!2957 = distinct !DILocation(line: 516, column: 2, scope: !2811)
!2958 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2957)
!2959 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2957)
!2960 = !DILocation(line: 516, column: 2, scope: !2812)
!2961 = !DILocation(line: 516, column: 2, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 516, column: 2)
!2963 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !2964)
!2964 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !2965)
!2965 = distinct !DILocation(line: 516, column: 2, scope: !2808)
!2966 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !2964)
!2967 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !2964)
!2968 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !2965)
!2969 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !2965)
!2970 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !2965)
!2971 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !2965)
!2972 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !2965)
!2973 = !DILocation(line: 516, column: 2, scope: !2808)
!2974 = !{i32 -2145660689, i32 -2145660676, i32 -2145660651, i32 -2145660627, i32 -2145660602, i32 -2145660527, i32 -2145660502, i32 -2145660358, i32 -2145658131, i32 -2145658042, i32 -2145657921, i32 -2145657826, i32 -2145657725, i32 -2145657698, i32 -2145657615, i32 -2145657526, i32 -2145657405, i32 -2145657305, i32 -2145657199, i32 -2145657091, i32 -2145660070, i32 -2145660017, i32 -2145659986, i32 -2145659955, i32 -2145659934, i32 -2145659912, i32 -2145659863, i32 -2145659842, i32 -2145657008, i32 -2145656919, i32 -2145656798, i32 -2145656699, i32 -2145656593, i32 -2145656491, i32 -2145656458, i32 -2145656385, i32 -2145656317, i32 -2145659468, i32 -2145659415, i32 -2145659384, i32 -2145659353, i32 -2145659332, i32 -2145659310, i32 -2145659261, i32 -2145659240, i32 -2145656265, i32 -2145656176, i32 -2145656055, i32 -2145655956, i32 -2145655850, i32 -2145655748, i32 -2145655715, i32 -2145655632, i32 -2145655543, i32 -2145655422, i32 -2145655322, i32 -2145655296, i32 -2145655193, i32 -2145655167, i32 -2145658982, i32 -2145658915, i32 -2145658890, i32 -2145658826, i32 -2145658710, i32 -2145658685, i32 -2145658660}
!2975 = !DILocation(line: 0, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 497, column: 19)
!2977 = !DILocation(line: 523, column: 1, scope: !2770)
!2978 = !DILocation(line: 518, column: 2, scope: !2770)
!2979 = !DILocation(line: 521, column: 2, scope: !2770)
!2980 = !DILocation(line: 522, column: 2, scope: !2770)
!2981 = !DILocation(line: 166, column: 45, scope: !2829)
!2982 = !DILocation(line: 168, column: 24, scope: !2829)
!2983 = !DILocation(line: 171, column: 8, scope: !2829)
!2984 = !DILocation(line: 169, column: 23, scope: !2829)
!2985 = !DILocation(line: 172, column: 7, scope: !2842)
!2986 = !DILocation(line: 172, column: 6, scope: !2829)
!2987 = !DILocation(line: 178, column: 11, scope: !2845)
!2988 = !DILocation(line: 178, column: 21, scope: !2845)
!2989 = !DILocation(line: 178, column: 30, scope: !2845)
!2990 = !DILocation(line: 178, column: 37, scope: !2845)
!2991 = !DILocation(line: 178, column: 6, scope: !2829)
!2992 = !DILocation(line: 184, column: 14, scope: !2829)
!2993 = !DILocation(line: 184, column: 2, scope: !2829)
!2994 = !DILocation(line: 0, scope: !2856)
!2995 = !DILocation(line: 186, column: 2, scope: !2829)
!2996 = distinct !DISubprogram(name: "lwip_accept", scope: !3, file: !3, line: 1618, type: !2771, isLocal: false, isDefinition: true, scopeLine: 1619, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2997)
!2997 = !{!2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3016, !3022, !3026, !3032, !3035, !3041, !3045, !3051, !3059, !3063, !3069, !3071}
!2998 = !DILocalVariable(name: "s", arg: 1, scope: !2996, file: !3, line: 1618, type: !80)
!2999 = !DILocalVariable(name: "addr", arg: 2, scope: !2996, file: !3, line: 1618, type: !1004)
!3000 = !DILocalVariable(name: "addrlen", arg: 3, scope: !2996, file: !3, line: 1618, type: !2773)
!3001 = !DILocalVariable(name: "sock", scope: !2996, file: !3, line: 1620, type: !1165)
!3002 = !DILocalVariable(name: "nsock", scope: !2996, file: !3, line: 1620, type: !1165)
!3003 = !DILocalVariable(name: "newconn", scope: !2996, file: !3, line: 1621, type: !1169)
!3004 = !DILocalVariable(name: "naddr", scope: !2996, file: !3, line: 1622, type: !1183)
!3005 = !DILocalVariable(name: "port", scope: !2996, file: !3, line: 1623, type: !164)
!3006 = !DILocalVariable(name: "newsock", scope: !2996, file: !3, line: 1624, type: !80)
!3007 = !DILocalVariable(name: "err", scope: !2996, file: !3, line: 1625, type: !1283)
!3008 = !DILocalVariable(name: "recvevent", scope: !2996, file: !3, line: 1626, type: !80)
!3009 = !DILocalVariable(name: "lev", scope: !2996, file: !3, line: 1627, type: !134)
!3010 = !DILocalVariable(name: "sockerr", scope: !3011, file: !3, line: 1640, type: !1007)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 1640, column: 7)
!3012 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 1639, column: 69)
!3013 = distinct !DILexicalBlock(scope: !3014, file: !3, line: 1639, column: 9)
!3014 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 1637, column: 22)
!3015 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1637, column: 7)
!3016 = !DILocalVariable(name: "tid", scope: !3017, file: !3, line: 1640, type: !170)
!3017 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 1640, column: 7)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 1640, column: 7)
!3019 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 1640, column: 7)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 1640, column: 7)
!3021 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 1640, column: 7)
!3022 = !DILocalVariable(name: "sockerr", scope: !3023, file: !3, line: 1642, type: !1007)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 1642, column: 7)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 1641, column: 33)
!3025 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 1641, column: 16)
!3026 = !DILocalVariable(name: "tid", scope: !3027, file: !3, line: 1642, type: !170)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 1642, column: 7)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 1642, column: 7)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 1642, column: 7)
!3030 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 1642, column: 7)
!3031 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 1642, column: 7)
!3032 = !DILocalVariable(name: "sockerr", scope: !3033, file: !3, line: 1644, type: !1007)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 1644, column: 7)
!3034 = distinct !DILexicalBlock(scope: !3025, file: !3, line: 1643, column: 12)
!3035 = !DILocalVariable(name: "tid", scope: !3036, file: !3, line: 1644, type: !170)
!3036 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 1644, column: 7)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 1644, column: 7)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 1644, column: 7)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 1644, column: 7)
!3040 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 1644, column: 7)
!3041 = !DILocalVariable(name: "sockerr", scope: !3042, file: !3, line: 1654, type: !1007)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 1654, column: 5)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 1652, column: 22)
!3044 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1652, column: 7)
!3045 = !DILocalVariable(name: "tid", scope: !3046, file: !3, line: 1654, type: !170)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 1654, column: 5)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 1654, column: 5)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 1654, column: 5)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 1654, column: 5)
!3050 = distinct !DILexicalBlock(scope: !3042, file: !3, line: 1654, column: 5)
!3051 = !DILocalVariable(name: "tempaddr", scope: !3052, file: !3, line: 1684, type: !3054)
!3052 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 1683, column: 44)
!3053 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1683, column: 7)
!3054 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sockaddr_aligned", file: !3, line: 1204, size: 224, elements: !3055)
!3055 = !{!3056, !3057, !3058}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3054, file: !3, line: 1205, baseType: !230, size: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "sin6", scope: !3054, file: !3, line: 1207, baseType: !152, size: 224)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !3054, file: !3, line: 1210, baseType: !189, size: 128)
!3059 = !DILocalVariable(name: "sockerr", scope: !3060, file: !3, line: 1691, type: !1007)
!3060 = distinct !DILexicalBlock(scope: !3061, file: !3, line: 1691, column: 7)
!3061 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 1687, column: 24)
!3062 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 1687, column: 9)
!3063 = !DILocalVariable(name: "tid", scope: !3064, file: !3, line: 1691, type: !170)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 1691, column: 7)
!3065 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 1691, column: 7)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 1691, column: 7)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !3, line: 1691, column: 7)
!3068 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 1691, column: 7)
!3069 = !DILocalVariable(name: "sockerr", scope: !3070, file: !3, line: 1709, type: !1007)
!3070 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1709, column: 3)
!3071 = !DILocalVariable(name: "tid", scope: !3072, file: !3, line: 1709, type: !170)
!3072 = distinct !DILexicalBlock(scope: !3073, file: !3, line: 1709, column: 3)
!3073 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 1709, column: 3)
!3074 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 1709, column: 3)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 1709, column: 3)
!3076 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1709, column: 3)
!3077 = !DILocation(line: 1618, column: 17, scope: !2996)
!3078 = !DILocation(line: 1618, column: 37, scope: !2996)
!3079 = !DILocation(line: 1618, column: 54, scope: !2996)
!3080 = !DILocation(line: 1621, column: 3, scope: !2996)
!3081 = !DILocation(line: 1622, column: 3, scope: !2996)
!3082 = !DILocation(line: 1623, column: 3, scope: !2996)
!3083 = !DILocation(line: 1623, column: 9, scope: !2996)
!3084 = !{!1565, !1565, i64 0}
!3085 = !DILocation(line: 1630, column: 10, scope: !2996)
!3086 = !DILocation(line: 1620, column: 21, scope: !2996)
!3087 = !DILocation(line: 1631, column: 8, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1631, column: 7)
!3089 = !DILocation(line: 1631, column: 7, scope: !2996)
!3090 = !DILocation(line: 1636, column: 30, scope: !2996)
!3091 = !DILocation(line: 1621, column: 19, scope: !2996)
!3092 = !DILocation(line: 1636, column: 9, scope: !2996)
!3093 = !DILocation(line: 1625, column: 9, scope: !2996)
!3094 = !DILocation(line: 1637, column: 11, scope: !3015)
!3095 = !DILocation(line: 1637, column: 7, scope: !2996)
!3096 = !DILocation(line: 1639, column: 9, scope: !3013)
!3097 = !DILocation(line: 1639, column: 53, scope: !3013)
!3098 = !DILocation(line: 1639, column: 9, scope: !3014)
!3099 = !DILocation(line: 1640, column: 7, scope: !3011)
!3100 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3101)
!3101 = distinct !DILocation(line: 1640, column: 7, scope: !3020)
!3102 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3101)
!3103 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3101)
!3104 = !DILocation(line: 1640, column: 7, scope: !3020)
!3105 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3106)
!3106 = distinct !DILocation(line: 1640, column: 7, scope: !3020)
!3107 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3106)
!3108 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3106)
!3109 = !DILocation(line: 1640, column: 7, scope: !3021)
!3110 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3111)
!3111 = distinct !DILocation(line: 1640, column: 7, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3020, file: !3, line: 1640, column: 7)
!3113 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3111)
!3114 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3111)
!3115 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3111)
!3116 = !DILocation(line: 1640, column: 7, scope: !3112)
!3117 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3118)
!3118 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3119)
!3119 = distinct !DILocation(line: 1640, column: 7, scope: !3017)
!3120 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3118)
!3121 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3118)
!3122 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3119)
!3123 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3119)
!3124 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3119)
!3125 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3119)
!3126 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3119)
!3127 = !DILocation(line: 1640, column: 7, scope: !3017)
!3128 = !{i32 -2145218491, i32 -2145218478, i32 -2145218453, i32 -2145218429, i32 -2145218404, i32 -2145218329, i32 -2145218304, i32 -2145218160, i32 -2145215937, i32 -2145215848, i32 -2145215727, i32 -2145215632, i32 -2145215531, i32 -2145215504, i32 -2145215421, i32 -2145215332, i32 -2145215211, i32 -2145215111, i32 -2145215005, i32 -2145214897, i32 -2145217872, i32 -2145217819, i32 -2145217788, i32 -2145217757, i32 -2145217736, i32 -2145217714, i32 -2145217665, i32 -2145217644, i32 -2145214814, i32 -2145214725, i32 -2145214604, i32 -2145214505, i32 -2145214399, i32 -2145214297, i32 -2145214264, i32 -2145214191, i32 -2145214123, i32 -2145217270, i32 -2145217217, i32 -2145217186, i32 -2145217155, i32 -2145217134, i32 -2145217112, i32 -2145217063, i32 -2145217042, i32 -2145214068, i32 -2145213979, i32 -2145213858, i32 -2145213759, i32 -2145213653, i32 -2145213551, i32 -2145213518, i32 -2145213435, i32 -2145213346, i32 -2145213225, i32 -2145213125, i32 -2145213099, i32 -2145212996, i32 -2145212970, i32 -2145216784, i32 -2145216717, i32 -2145216692, i32 -2145216628, i32 -2145216512, i32 -2145216487, i32 -2145216462}
!3129 = !DILocation(line: 1641, column: 20, scope: !3025)
!3130 = !DILocation(line: 1641, column: 16, scope: !3013)
!3131 = !DILocation(line: 1642, column: 7, scope: !3023)
!3132 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3133)
!3133 = distinct !DILocation(line: 1642, column: 7, scope: !3030)
!3134 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3133)
!3135 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3133)
!3136 = !DILocation(line: 1642, column: 7, scope: !3030)
!3137 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3138)
!3138 = distinct !DILocation(line: 1642, column: 7, scope: !3030)
!3139 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3138)
!3140 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3138)
!3141 = !DILocation(line: 1642, column: 7, scope: !3031)
!3142 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3143)
!3143 = distinct !DILocation(line: 1642, column: 7, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 1642, column: 7)
!3145 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3143)
!3146 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3143)
!3147 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3143)
!3148 = !DILocation(line: 1642, column: 7, scope: !3144)
!3149 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3150)
!3150 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3151)
!3151 = distinct !DILocation(line: 1642, column: 7, scope: !3027)
!3152 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3150)
!3153 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3150)
!3154 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3151)
!3155 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3151)
!3156 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3151)
!3157 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3151)
!3158 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3151)
!3159 = !DILocation(line: 1642, column: 7, scope: !3027)
!3160 = !{i32 -2145210930, i32 -2145210917, i32 -2145210892, i32 -2145210868, i32 -2145210843, i32 -2145210768, i32 -2145210743, i32 -2145210599, i32 -2145208376, i32 -2145208287, i32 -2145208166, i32 -2145208071, i32 -2145207970, i32 -2145207943, i32 -2145207860, i32 -2145207771, i32 -2145207650, i32 -2145207550, i32 -2145207444, i32 -2145207336, i32 -2145210311, i32 -2145210258, i32 -2145210227, i32 -2145210196, i32 -2145210175, i32 -2145210153, i32 -2145210104, i32 -2145210083, i32 -2145207253, i32 -2145207164, i32 -2145207043, i32 -2145206944, i32 -2145206838, i32 -2145206736, i32 -2145206703, i32 -2145206630, i32 -2145206562, i32 -2145209709, i32 -2145209656, i32 -2145209625, i32 -2145209594, i32 -2145209573, i32 -2145209551, i32 -2145209502, i32 -2145209481, i32 -2145206507, i32 -2145206418, i32 -2145206297, i32 -2145206198, i32 -2145206092, i32 -2145205990, i32 -2145205957, i32 -2145205874, i32 -2145205785, i32 -2145205664, i32 -2145205564, i32 -2145205538, i32 -2145205435, i32 -2145205409, i32 -2145209223, i32 -2145209156, i32 -2145209131, i32 -2145209067, i32 -2145208951, i32 -2145208926, i32 -2145208901}
!3161 = !DILocation(line: 1644, column: 7, scope: !3033)
!3162 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3163)
!3163 = distinct !DILocation(line: 1644, column: 7, scope: !3039)
!3164 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3163)
!3165 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3163)
!3166 = !DILocation(line: 1644, column: 7, scope: !3039)
!3167 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3168)
!3168 = distinct !DILocation(line: 1644, column: 7, scope: !3039)
!3169 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3168)
!3170 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3168)
!3171 = !DILocation(line: 1644, column: 7, scope: !3040)
!3172 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3173)
!3173 = distinct !DILocation(line: 1644, column: 7, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3039, file: !3, line: 1644, column: 7)
!3175 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3173)
!3176 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3173)
!3177 = !DILocation(line: 1644, column: 7, scope: !3174)
!3178 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3179)
!3179 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3180)
!3180 = distinct !DILocation(line: 1644, column: 7, scope: !3036)
!3181 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3179)
!3182 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3179)
!3183 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3180)
!3184 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3180)
!3185 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3180)
!3186 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3180)
!3187 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3180)
!3188 = !DILocation(line: 1644, column: 7, scope: !3036)
!3189 = !{i32 -2145203357, i32 -2145203344, i32 -2145203319, i32 -2145203295, i32 -2145203270, i32 -2145203195, i32 -2145203170, i32 -2145203026, i32 -2145200803, i32 -2145200714, i32 -2145200593, i32 -2145200498, i32 -2145200397, i32 -2145200370, i32 -2145200287, i32 -2145200198, i32 -2145200077, i32 -2145199977, i32 -2145199871, i32 -2145199763, i32 -2145202738, i32 -2145202685, i32 -2145202654, i32 -2145202623, i32 -2145202602, i32 -2145202580, i32 -2145202531, i32 -2145202510, i32 -2145199680, i32 -2145199591, i32 -2145199470, i32 -2145199371, i32 -2145199265, i32 -2145199163, i32 -2145199130, i32 -2145199057, i32 -2145198989, i32 -2145202136, i32 -2145202083, i32 -2145202052, i32 -2145202021, i32 -2145202000, i32 -2145201978, i32 -2145201929, i32 -2145201908, i32 -2145198934, i32 -2145198845, i32 -2145198724, i32 -2145198625, i32 -2145198519, i32 -2145198417, i32 -2145198384, i32 -2145198301, i32 -2145198212, i32 -2145198091, i32 -2145197991, i32 -2145197965, i32 -2145197862, i32 -2145197836, i32 -2145201650, i32 -2145201583, i32 -2145201558, i32 -2145201494, i32 -2145201378, i32 -2145201353, i32 -2145201328}
!3190 = !DILocation(line: 1647, column: 5, scope: !3014)
!3191 = !DILocation(line: 1649, column: 3, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 1649, column: 3)
!3193 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1649, column: 3)
!3194 = !DILocation(line: 1649, column: 3, scope: !3193)
!3195 = !DILocation(line: 1649, column: 3, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 1649, column: 3)
!3197 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 1649, column: 3)
!3198 = !DILocation(line: 1649, column: 3, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 1649, column: 3)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 1649, column: 3)
!3201 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 1649, column: 3)
!3202 = !DILocation(line: 1651, column: 13, scope: !2996)
!3203 = !DILocation(line: 1624, column: 7, scope: !2996)
!3204 = !DILocation(line: 1652, column: 15, scope: !3044)
!3205 = !DILocation(line: 1652, column: 7, scope: !2996)
!3206 = !DILocation(line: 1653, column: 20, scope: !3043)
!3207 = !DILocation(line: 1653, column: 5, scope: !3043)
!3208 = !DILocation(line: 1654, column: 5, scope: !3042)
!3209 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3210)
!3210 = distinct !DILocation(line: 1654, column: 5, scope: !3049)
!3211 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3210)
!3212 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3210)
!3213 = !DILocation(line: 1654, column: 5, scope: !3049)
!3214 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3215)
!3215 = distinct !DILocation(line: 1654, column: 5, scope: !3049)
!3216 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3215)
!3217 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3215)
!3218 = !DILocation(line: 1654, column: 5, scope: !3050)
!3219 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3220)
!3220 = distinct !DILocation(line: 1654, column: 5, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 1654, column: 5)
!3222 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3220)
!3223 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3220)
!3224 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3220)
!3225 = !DILocation(line: 1654, column: 5, scope: !3221)
!3226 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3227)
!3227 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3228)
!3228 = distinct !DILocation(line: 1654, column: 5, scope: !3046)
!3229 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3227)
!3230 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3227)
!3231 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3228)
!3232 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3228)
!3233 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3228)
!3234 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3228)
!3235 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3228)
!3236 = !DILocation(line: 1654, column: 5, scope: !3046)
!3237 = !{i32 -2145195280, i32 -2145195267, i32 -2145195242, i32 -2145195218, i32 -2145195193, i32 -2145195118, i32 -2145195093, i32 -2145194949, i32 -2145192726, i32 -2145192637, i32 -2145192516, i32 -2145192421, i32 -2145192320, i32 -2145192293, i32 -2145192210, i32 -2145192121, i32 -2145192000, i32 -2145191900, i32 -2145191794, i32 -2145191686, i32 -2145194661, i32 -2145194608, i32 -2145194577, i32 -2145194546, i32 -2145194525, i32 -2145194503, i32 -2145194454, i32 -2145194433, i32 -2145191603, i32 -2145191514, i32 -2145191393, i32 -2145191294, i32 -2145191188, i32 -2145191086, i32 -2145191053, i32 -2145190980, i32 -2145190912, i32 -2145194059, i32 -2145194006, i32 -2145193975, i32 -2145193944, i32 -2145193923, i32 -2145193901, i32 -2145193852, i32 -2145193831, i32 -2145190857, i32 -2145190768, i32 -2145190647, i32 -2145190548, i32 -2145190442, i32 -2145190340, i32 -2145190307, i32 -2145190224, i32 -2145190135, i32 -2145190014, i32 -2145189914, i32 -2145189888, i32 -2145189785, i32 -2145189759, i32 -2145193573, i32 -2145193506, i32 -2145193481, i32 -2145193417, i32 -2145193301, i32 -2145193276, i32 -2145193251}
!3238 = !DILocation(line: 1656, column: 5, scope: !3043)
!3239 = !DILocation(line: 1658, column: 3, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 1658, column: 3)
!3241 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1658, column: 3)
!3242 = !DILocation(line: 1658, column: 3, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 1658, column: 3)
!3244 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 1658, column: 3)
!3245 = !DILocation(line: 1658, column: 3, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !3, line: 1658, column: 3)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 1658, column: 3)
!3248 = distinct !DILexicalBlock(scope: !3243, file: !3, line: 1658, column: 3)
!3249 = !DILocation(line: 1659, column: 12, scope: !2996)
!3250 = !DILocation(line: 1666, column: 3, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1666, column: 3)
!3252 = !DILocation(line: 1627, column: 3, scope: !2996)
!3253 = !DILocation(line: 1667, column: 28, scope: !2996)
!3254 = !DILocation(line: 1667, column: 37, scope: !2996)
!3255 = !DILocation(line: 1668, column: 19, scope: !2996)
!3256 = !DILocation(line: 1669, column: 3, scope: !2996)
!3257 = !DILocation(line: 1671, column: 7, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 1671, column: 7)
!3259 = !DILocation(line: 1671, column: 16, scope: !3258)
!3260 = !{!1571, !1408, i64 120}
!3261 = !DILocation(line: 1671, column: 7, scope: !2996)
!3262 = !DILocation(line: 1667, column: 15, scope: !2996)
!3263 = !DILocation(line: 1672, column: 5, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 1671, column: 26)
!3265 = !DILocation(line: 1673, column: 5, scope: !3264)
!3266 = !DILocation(line: 1673, column: 22, scope: !3264)
!3267 = !DILocation(line: 1626, column: 7, scope: !2996)
!3268 = !DILocation(line: 1674, column: 16, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 1673, column: 27)
!3270 = !DILocation(line: 1675, column: 7, scope: !3269)
!3271 = !DILocation(line: 1675, column: 16, scope: !3269)
!3272 = distinct !{!3272, !3265, !3273}
!3273 = !DILocation(line: 1676, column: 5, scope: !3264)
!3274 = !DILocation(line: 1677, column: 5, scope: !3264)
!3275 = !DILocation(line: 1678, column: 3, scope: !3264)
!3276 = !DILocation(line: 1683, column: 13, scope: !3053)
!3277 = !DILocation(line: 1683, column: 34, scope: !3053)
!3278 = !DILocation(line: 1683, column: 22, scope: !3053)
!3279 = !DILocation(line: 1684, column: 5, scope: !3052)
!3280 = !DILocation(line: 1686, column: 11, scope: !3052)
!3281 = !DILocation(line: 1622, column: 13, scope: !2996)
!3282 = !DILocation(line: 1687, column: 13, scope: !3062)
!3283 = !DILocation(line: 1687, column: 9, scope: !3052)
!3284 = !DILocation(line: 1689, column: 22, scope: !3061)
!3285 = !DILocation(line: 1689, column: 7, scope: !3061)
!3286 = !DILocalVariable(name: "is_tcp", arg: 2, scope: !3287, file: !3, line: 1592, type: !80)
!3287 = distinct !DISubprogram(name: "free_socket", scope: !3, file: !3, line: 1592, type: !3288, isLocal: true, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !1165, !80}
!3290 = !{!3291, !3286, !3292, !3293, !3294, !3295}
!3291 = !DILocalVariable(name: "sock", arg: 1, scope: !3287, file: !3, line: 1592, type: !1165)
!3292 = !DILocalVariable(name: "freed", scope: !3287, file: !3, line: 1594, type: !80)
!3293 = !DILocalVariable(name: "conn", scope: !3287, file: !3, line: 1595, type: !1169)
!3294 = !DILocalVariable(name: "lastdata", scope: !3287, file: !3, line: 1596, type: !1367)
!3295 = !DILocalVariable(name: "lev", scope: !3287, file: !3, line: 1597, type: !134)
!3296 = !DILocation(line: 1592, column: 41, scope: !3287, inlinedAt: !3297)
!3297 = distinct !DILocation(line: 1690, column: 7, scope: !3061)
!3298 = !DILocation(line: 1600, column: 3, scope: !3299, inlinedAt: !3297)
!3299 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 1600, column: 3)
!3300 = !DILocation(line: 1597, column: 3, scope: !3287, inlinedAt: !3297)
!3301 = !DILocation(line: 1595, column: 19, scope: !3287, inlinedAt: !3297)
!3302 = !DILocation(line: 1596, column: 28, scope: !3287, inlinedAt: !3297)
!3303 = !DILocalVariable(name: "is_tcp", arg: 2, scope: !3304, file: !3, line: 1546, type: !80)
!3304 = distinct !DISubprogram(name: "free_socket_locked", scope: !3, file: !3, line: 1546, type: !3305, isLocal: true, isDefinition: true, scopeLine: 1548, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3309)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!80, !1165, !80, !3307, !3308}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!3309 = !{!3310, !3303, !3311, !3312}
!3310 = !DILocalVariable(name: "sock", arg: 1, scope: !3304, file: !3, line: 1546, type: !1165)
!3311 = !DILocalVariable(name: "conn", arg: 3, scope: !3304, file: !3, line: 1546, type: !3307)
!3312 = !DILocalVariable(name: "lastdata", arg: 4, scope: !3304, file: !3, line: 1547, type: !3308)
!3313 = !DILocation(line: 1546, column: 48, scope: !3304, inlinedAt: !3314)
!3314 = distinct !DILocation(line: 1602, column: 11, scope: !3287, inlinedAt: !3297)
!3315 = !DILocation(line: 1546, column: 73, scope: !3304, inlinedAt: !3314)
!3316 = !DILocation(line: 1547, column: 46, scope: !3304, inlinedAt: !3314)
!3317 = !DILocation(line: 1560, column: 21, scope: !3304, inlinedAt: !3314)
!3318 = !DILocation(line: 1561, column: 23, scope: !3304, inlinedAt: !3314)
!3319 = !DILocation(line: 1562, column: 17, scope: !3304, inlinedAt: !3314)
!3320 = !DILocation(line: 1563, column: 14, scope: !3304, inlinedAt: !3314)
!3321 = !DILocation(line: 1564, column: 3, scope: !3304, inlinedAt: !3314)
!3322 = !DILocation(line: 1594, column: 7, scope: !3287, inlinedAt: !3297)
!3323 = !DILocation(line: 1603, column: 3, scope: !3287, inlinedAt: !3297)
!3324 = !DILocation(line: 1606, column: 7, scope: !3287, inlinedAt: !3297)
!3325 = !DILocalVariable(name: "is_tcp", arg: 1, scope: !3326, file: !3, line: 1570, type: !80)
!3326 = distinct !DISubprogram(name: "free_socket_free_elements", scope: !3, file: !3, line: 1570, type: !3327, isLocal: true, isDefinition: true, scopeLine: 1571, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3329)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{null, !80, !1169, !3308}
!3329 = !{!3325, !3330, !3331}
!3330 = !DILocalVariable(name: "conn", arg: 2, scope: !3326, file: !3, line: 1570, type: !1169)
!3331 = !DILocalVariable(name: "lastdata", arg: 3, scope: !3326, file: !3, line: 1570, type: !3308)
!3332 = !DILocation(line: 1570, column: 31, scope: !3326, inlinedAt: !3333)
!3333 = distinct !DILocation(line: 1607, column: 5, scope: !3334, inlinedAt: !3297)
!3334 = distinct !DILexicalBlock(scope: !3335, file: !3, line: 1606, column: 14)
!3335 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 1606, column: 7)
!3336 = !DILocation(line: 1570, column: 55, scope: !3326, inlinedAt: !3333)
!3337 = !DILocation(line: 1570, column: 87, scope: !3326, inlinedAt: !3333)
!3338 = !DILocation(line: 1572, column: 22, scope: !3339, inlinedAt: !3333)
!3339 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 1572, column: 7)
!3340 = !DILocation(line: 1572, column: 7, scope: !3326, inlinedAt: !3333)
!3341 = !DILocation(line: 1573, column: 9, scope: !3342, inlinedAt: !3333)
!3342 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1572, column: 31)
!3343 = !DILocation(line: 1574, column: 7, scope: !3344, inlinedAt: !3333)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1573, column: 17)
!3345 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1573, column: 9)
!3346 = !DILocation(line: 1575, column: 5, scope: !3344, inlinedAt: !3333)
!3347 = !DILocation(line: 1579, column: 12, scope: !3348, inlinedAt: !3333)
!3348 = distinct !DILexicalBlock(scope: !3326, file: !3, line: 1579, column: 7)
!3349 = !DILocation(line: 1579, column: 7, scope: !3326, inlinedAt: !3333)
!3350 = !DILocation(line: 1581, column: 5, scope: !3351, inlinedAt: !3333)
!3351 = distinct !DILexicalBlock(scope: !3348, file: !3, line: 1579, column: 21)
!3352 = !DILocation(line: 1582, column: 3, scope: !3351, inlinedAt: !3333)
!3353 = !DILocation(line: 1583, column: 1, scope: !3326, inlinedAt: !3333)
!3354 = !DILocation(line: 1608, column: 3, scope: !3334, inlinedAt: !3297)
!3355 = !DILocation(line: 1609, column: 1, scope: !3287, inlinedAt: !3297)
!3356 = !DILocation(line: 1691, column: 7, scope: !3060)
!3357 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3358)
!3358 = distinct !DILocation(line: 1691, column: 7, scope: !3067)
!3359 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3358)
!3360 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3358)
!3361 = !DILocation(line: 1691, column: 7, scope: !3067)
!3362 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3363)
!3363 = distinct !DILocation(line: 1691, column: 7, scope: !3067)
!3364 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3363)
!3365 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3363)
!3366 = !DILocation(line: 1691, column: 7, scope: !3068)
!3367 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3368)
!3368 = distinct !DILocation(line: 1691, column: 7, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 1691, column: 7)
!3370 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3368)
!3371 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3368)
!3372 = !DILocation(line: 1691, column: 7, scope: !3369)
!3373 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3374)
!3374 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3375)
!3375 = distinct !DILocation(line: 1691, column: 7, scope: !3064)
!3376 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3374)
!3377 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3374)
!3378 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3375)
!3379 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3375)
!3380 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3375)
!3381 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3375)
!3382 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3375)
!3383 = !DILocation(line: 1691, column: 7, scope: !3064)
!3384 = !{i32 -2145186913, i32 -2145186900, i32 -2145186875, i32 -2145186851, i32 -2145186826, i32 -2145186751, i32 -2145186726, i32 -2145186582, i32 -2145184359, i32 -2145184270, i32 -2145184149, i32 -2145184054, i32 -2145183953, i32 -2145183926, i32 -2145183843, i32 -2145183754, i32 -2145183633, i32 -2145183533, i32 -2145183427, i32 -2145183319, i32 -2145186294, i32 -2145186241, i32 -2145186210, i32 -2145186179, i32 -2145186158, i32 -2145186136, i32 -2145186087, i32 -2145186066, i32 -2145183236, i32 -2145183147, i32 -2145183026, i32 -2145182927, i32 -2145182821, i32 -2145182719, i32 -2145182686, i32 -2145182613, i32 -2145182545, i32 -2145185692, i32 -2145185639, i32 -2145185608, i32 -2145185577, i32 -2145185556, i32 -2145185534, i32 -2145185485, i32 -2145185464, i32 -2145182490, i32 -2145182401, i32 -2145182280, i32 -2145182181, i32 -2145182075, i32 -2145181973, i32 -2145181940, i32 -2145181857, i32 -2145181768, i32 -2145181647, i32 -2145181547, i32 -2145181521, i32 -2145181418, i32 -2145181392, i32 -2145185206, i32 -2145185139, i32 -2145185114, i32 -2145185050, i32 -2145184934, i32 -2145184909, i32 -2145184884}
!3385 = !DILocation(line: 1693, column: 7, scope: !3061)
!3386 = !DILocation(line: 1705, column: 3, scope: !3053)
!3387 = !DILocation(line: 1696, column: 5, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 1696, column: 5)
!3389 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 1696, column: 5)
!3390 = !DILocation(line: 1696, column: 5, scope: !3389)
!3391 = !DILocation(line: 1696, column: 5, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !3, line: 1696, column: 5)
!3393 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 1696, column: 5)
!3394 = !{!3395, !1405, i64 0}
!3395 = !{!"sockaddr_in6", !1405, i64 0, !1405, i64 1, !1565, i64 2, !1409, i64 4, !3396, i64 8, !1409, i64 24}
!3396 = !{!"in6_addr", !1405, i64 0}
!3397 = !{!3395, !1405, i64 1}
!3398 = !{!3395, !1565, i64 2}
!3399 = !{!3395, !1409, i64 4}
!3400 = !DILocation(line: 1696, column: 5, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 1696, column: 5)
!3402 = !{!3395, !1409, i64 24}
!3403 = !DILocation(line: 1696, column: 5, scope: !3393)
!3404 = !DILocation(line: 1696, column: 5, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 1696, column: 5)
!3406 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 1696, column: 5)
!3407 = !{!3408, !1405, i64 0}
!3408 = !{!"sockaddr_in", !1405, i64 0, !1405, i64 1, !1565, i64 2, !3409, i64 4, !1405, i64 8}
!3409 = !{!"in_addr", !1409, i64 0}
!3410 = !{!3408, !1405, i64 1}
!3411 = !{!3408, !1565, i64 2}
!3412 = !{!3408, !1409, i64 4}
!3413 = !DILocation(line: 1697, column: 9, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 1697, column: 9)
!3415 = !DILocation(line: 1697, column: 32, scope: !3414)
!3416 = !DILocation(line: 1697, column: 20, scope: !3414)
!3417 = !DILocation(line: 1697, column: 18, scope: !3414)
!3418 = !DILocation(line: 1697, column: 9, scope: !3052)
!3419 = !DILocation(line: 1698, column: 16, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 1697, column: 40)
!3421 = !DILocation(line: 1699, column: 5, scope: !3420)
!3422 = !DILocation(line: 1700, column: 5, scope: !3052)
!3423 = !DILocation(line: 1709, column: 3, scope: !3070)
!3424 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3425)
!3425 = distinct !DILocation(line: 1709, column: 3, scope: !3075)
!3426 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3425)
!3427 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3425)
!3428 = !DILocation(line: 1709, column: 3, scope: !3075)
!3429 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3430)
!3430 = distinct !DILocation(line: 1709, column: 3, scope: !3075)
!3431 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3430)
!3432 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3430)
!3433 = !DILocation(line: 1709, column: 3, scope: !3076)
!3434 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3435)
!3435 = distinct !DILocation(line: 1709, column: 3, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 1709, column: 3)
!3437 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3435)
!3438 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3435)
!3439 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3435)
!3440 = !DILocation(line: 1709, column: 3, scope: !3436)
!3441 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3442)
!3442 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3443)
!3443 = distinct !DILocation(line: 1709, column: 3, scope: !3072)
!3444 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3442)
!3445 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3442)
!3446 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3443)
!3447 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3443)
!3448 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3443)
!3449 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3443)
!3450 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3443)
!3451 = !DILocation(line: 1709, column: 3, scope: !3072)
!3452 = !{i32 -2145172112, i32 -2145172099, i32 -2145172074, i32 -2145172050, i32 -2145172025, i32 -2145171950, i32 -2145171925, i32 -2145171781, i32 -2145169558, i32 -2145169469, i32 -2145169348, i32 -2145169253, i32 -2145169152, i32 -2145169125, i32 -2145169042, i32 -2145168953, i32 -2145168832, i32 -2145168732, i32 -2145168626, i32 -2145168518, i32 -2145171493, i32 -2145171440, i32 -2145171409, i32 -2145171378, i32 -2145171357, i32 -2145171335, i32 -2145171286, i32 -2145171265, i32 -2145168435, i32 -2145168346, i32 -2145168225, i32 -2145168126, i32 -2145168020, i32 -2145167918, i32 -2145167885, i32 -2145167812, i32 -2145167744, i32 -2145170891, i32 -2145170838, i32 -2145170807, i32 -2145170776, i32 -2145170755, i32 -2145170733, i32 -2145170684, i32 -2145170663, i32 -2145167689, i32 -2145167600, i32 -2145167479, i32 -2145167380, i32 -2145167274, i32 -2145167172, i32 -2145167139, i32 -2145167056, i32 -2145166967, i32 -2145166846, i32 -2145166746, i32 -2145166720, i32 -2145166617, i32 -2145166591, i32 -2145170405, i32 -2145170338, i32 -2145170313, i32 -2145170249, i32 -2145170133, i32 -2145170108, i32 -2145170083}
!3453 = !DILocation(line: 1712, column: 3, scope: !2996)
!3454 = !DILocation(line: 0, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 1631, column: 14)
!3456 = !DILocation(line: 1713, column: 1, scope: !2996)
!3457 = distinct !DISubprogram(name: "bind", scope: !3, file: !3, line: 525, type: !3458, isLocal: false, isDefinition: true, scopeLine: 526, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3460)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!80, !80, !228, !1750}
!3460 = !{!3461, !3462, !3463, !3464, !3465, !3466, !3472, !3473, !3482}
!3461 = !DILocalVariable(name: "s", arg: 1, scope: !3457, file: !3, line: 525, type: !80)
!3462 = !DILocalVariable(name: "name", arg: 2, scope: !3457, file: !3, line: 525, type: !228)
!3463 = !DILocalVariable(name: "namelen", arg: 3, scope: !3457, file: !3, line: 525, type: !1750)
!3464 = !DILocalVariable(name: "ret", scope: !3457, file: !3, line: 527, type: !80)
!3465 = !DILocalVariable(name: "file", scope: !3457, file: !3, line: 528, type: !1077)
!3466 = !DILocalVariable(name: "tid", scope: !3467, file: !3, line: 530, type: !170)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 530, column: 2)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 530, column: 2)
!3469 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 530, column: 2)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 530, column: 2)
!3471 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 530, column: 2)
!3472 = !DILocalVariable(name: "_ret", scope: !3467, file: !3, line: 530, type: !135)
!3473 = !DILocalVariable(name: "tid", scope: !3474, file: !3, line: 536, type: !170)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 536, column: 3)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 536, column: 3)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 536, column: 3)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 536, column: 3)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !3, line: 536, column: 3)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 536, column: 3)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 531, column: 22)
!3481 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 531, column: 6)
!3482 = !DILocalVariable(name: "tid", scope: !3483, file: !3, line: 548, type: !170)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !3, line: 548, column: 2)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 548, column: 2)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 548, column: 2)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !3, line: 548, column: 2)
!3487 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 548, column: 2)
!3488 = !DILocation(line: 525, column: 14, scope: !3457)
!3489 = !DILocation(line: 525, column: 40, scope: !3457)
!3490 = !DILocation(line: 525, column: 56, scope: !3457)
!3491 = !DILocation(line: 527, column: 6, scope: !3457)
!3492 = !DILocation(line: 528, column: 2, scope: !3457)
!3493 = !DILocation(line: 528, column: 24, scope: !3457)
!3494 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3495)
!3495 = distinct !DILocation(line: 530, column: 2, scope: !3470)
!3496 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3495)
!3497 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3495)
!3498 = !DILocation(line: 530, column: 2, scope: !3470)
!3499 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3500)
!3500 = distinct !DILocation(line: 530, column: 2, scope: !3470)
!3501 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3500)
!3502 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3500)
!3503 = !DILocation(line: 530, column: 2, scope: !3471)
!3504 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !3505)
!3505 = distinct !DILocation(line: 530, column: 2, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 530, column: 2)
!3507 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !3505)
!3508 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !3505)
!3509 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !3505)
!3510 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !3505)
!3511 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !3505)
!3512 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !3505)
!3513 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !3505)
!3514 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !3505)
!3515 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !3505)
!3516 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !3505)
!3517 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !3505)
!3518 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !3505)
!3519 = !DILocation(line: 0, scope: !2856, inlinedAt: !3505)
!3520 = !DILocation(line: 0, scope: !3506)
!3521 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !3505)
!3522 = !DILocation(line: 530, column: 2, scope: !3506)
!3523 = !DILocation(line: 531, column: 6, scope: !3481)
!3524 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3525)
!3525 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3526)
!3526 = distinct !DILocation(line: 530, column: 2, scope: !3467)
!3527 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3525)
!3528 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3525)
!3529 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3526)
!3530 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3526)
!3531 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3526)
!3532 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3526)
!3533 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3526)
!3534 = !DILocation(line: 530, column: 2, scope: !3467)
!3535 = !{i32 -2145653184, i32 -2145653171, i32 -2145653146, i32 -2145653122, i32 -2145653097, i32 -2145653022, i32 -2145652997, i32 -2145652853, i32 -2145649721, i32 -2145649632, i32 -2145649511, i32 -2145649416, i32 -2145649315, i32 -2145649288, i32 -2145649205, i32 -2145649116, i32 -2145648995, i32 -2145648895, i32 -2145648789, i32 -2145648681, i32 -2145652565, i32 -2145652512, i32 -2145652481, i32 -2145652450, i32 -2145652429, i32 -2145652407, i32 -2145652358, i32 -2145652337, i32 -2145648598, i32 -2145648509, i32 -2145648388, i32 -2145648289, i32 -2145648183, i32 -2145648081, i32 -2145648048, i32 -2145647975, i32 -2145647907, i32 -2145652033, i32 -2145651974, i32 -2145651921, i32 -2145651890, i32 -2145651859, i32 -2145651838, i32 -2145651816, i32 -2145651767, i32 -2145651746, i32 -2145647854, i32 -2145647765, i32 -2145647644, i32 -2145647545, i32 -2145647439, i32 -2145647337, i32 -2145647304, i32 -2145647221, i32 -2145647132, i32 -2145647011, i32 -2145646911, i32 -2145646885, i32 -2145646782, i32 -2145646756, i32 -2145651488, i32 -2145651421, i32 -2145651396, i32 -2145651332, i32 -2145651250, i32 -2145651227, i32 -2145651202, i32 -2145651177}
!3536 = !DILocation(line: 530, column: 2, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 530, column: 2)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 530, column: 2)
!3539 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 530, column: 2)
!3540 = !{i32 -2145649989, i32 -2145649973}
!3541 = !DILocation(line: 531, column: 6, scope: !3457)
!3542 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3543)
!3543 = distinct !DILocation(line: 536, column: 3, scope: !3477)
!3544 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3543)
!3545 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3543)
!3546 = !DILocation(line: 536, column: 3, scope: !3477)
!3547 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3548)
!3548 = distinct !DILocation(line: 536, column: 3, scope: !3477)
!3549 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3548)
!3550 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3548)
!3551 = !DILocation(line: 536, column: 3, scope: !3478)
!3552 = !DILocation(line: 536, column: 3, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 536, column: 3)
!3554 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3555)
!3555 = distinct !DILocation(line: 536, column: 3, scope: !3553)
!3556 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !3555)
!3557 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3555)
!3558 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3555)
!3559 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3555)
!3560 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3561)
!3561 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3562)
!3562 = distinct !DILocation(line: 536, column: 3, scope: !3474)
!3563 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3561)
!3564 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3561)
!3565 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3562)
!3566 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3562)
!3567 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3562)
!3568 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3562)
!3569 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3562)
!3570 = !DILocation(line: 536, column: 3, scope: !3474)
!3571 = !{i32 -2145644501, i32 -2145644488, i32 -2145644463, i32 -2145644439, i32 -2145644414, i32 -2145644339, i32 -2145644314, i32 -2145644170, i32 -2145641929, i32 -2145641840, i32 -2145641719, i32 -2145641624, i32 -2145641523, i32 -2145641496, i32 -2145641413, i32 -2145641324, i32 -2145641203, i32 -2145641103, i32 -2145640997, i32 -2145640889, i32 -2145643882, i32 -2145643829, i32 -2145643798, i32 -2145643767, i32 -2145643746, i32 -2145643724, i32 -2145643675, i32 -2145643654, i32 -2145640806, i32 -2145640717, i32 -2145640596, i32 -2145640497, i32 -2145640391, i32 -2145640289, i32 -2145640256, i32 -2145640183, i32 -2145640115, i32 -2145643280, i32 -2145643227, i32 -2145643196, i32 -2145643165, i32 -2145643144, i32 -2145643122, i32 -2145643073, i32 -2145643052, i32 -2145640060, i32 -2145639971, i32 -2145639850, i32 -2145639751, i32 -2145639645, i32 -2145639543, i32 -2145639510, i32 -2145639427, i32 -2145639338, i32 -2145639217, i32 -2145639117, i32 -2145639091, i32 -2145638988, i32 -2145638962, i32 -2145642794, i32 -2145642727, i32 -2145642702, i32 -2145642638, i32 -2145642522, i32 -2145642497, i32 -2145642472}
!3572 = !DILocation(line: 540, column: 24, scope: !3457)
!3573 = !DILocation(line: 540, column: 8, scope: !3457)
!3574 = !DILocation(line: 541, column: 10, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 541, column: 6)
!3576 = !DILocation(line: 541, column: 6, scope: !3457)
!3577 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3578)
!3578 = distinct !DILocation(line: 548, column: 2, scope: !3486)
!3579 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3578)
!3580 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3578)
!3581 = !DILocation(line: 548, column: 2, scope: !3486)
!3582 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3583)
!3583 = distinct !DILocation(line: 548, column: 2, scope: !3486)
!3584 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3583)
!3585 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3583)
!3586 = !DILocation(line: 548, column: 2, scope: !3487)
!3587 = !DILocation(line: 548, column: 2, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3486, file: !3, line: 548, column: 2)
!3589 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3590)
!3590 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3591)
!3591 = distinct !DILocation(line: 548, column: 2, scope: !3483)
!3592 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3590)
!3593 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3590)
!3594 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3591)
!3595 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3591)
!3596 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3591)
!3597 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3591)
!3598 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3591)
!3599 = !DILocation(line: 548, column: 2, scope: !3483)
!3600 = !{i32 -2145636998, i32 -2145636985, i32 -2145636960, i32 -2145636936, i32 -2145636911, i32 -2145636836, i32 -2145636811, i32 -2145636667, i32 -2145634440, i32 -2145634351, i32 -2145634230, i32 -2145634135, i32 -2145634034, i32 -2145634007, i32 -2145633924, i32 -2145633835, i32 -2145633714, i32 -2145633614, i32 -2145633508, i32 -2145633400, i32 -2145636379, i32 -2145636326, i32 -2145636295, i32 -2145636264, i32 -2145636243, i32 -2145636221, i32 -2145636172, i32 -2145636151, i32 -2145633317, i32 -2145633228, i32 -2145633107, i32 -2145633008, i32 -2145632902, i32 -2145632800, i32 -2145632767, i32 -2145632694, i32 -2145632626, i32 -2145635777, i32 -2145635724, i32 -2145635693, i32 -2145635662, i32 -2145635641, i32 -2145635619, i32 -2145635570, i32 -2145635549, i32 -2145632574, i32 -2145632485, i32 -2145632364, i32 -2145632265, i32 -2145632159, i32 -2145632057, i32 -2145632024, i32 -2145631941, i32 -2145631852, i32 -2145631731, i32 -2145631631, i32 -2145631605, i32 -2145631502, i32 -2145631476, i32 -2145635291, i32 -2145635224, i32 -2145635199, i32 -2145635135, i32 -2145635019, i32 -2145634994, i32 -2145634969}
!3601 = !DILocation(line: 0, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3575, file: !3, line: 541, column: 15)
!3603 = !DILocation(line: 551, column: 1, scope: !3457)
!3604 = !DILocation(line: 550, column: 2, scope: !3457)
!3605 = distinct !DISubprogram(name: "lwip_bind", scope: !3, file: !3, line: 1716, type: !3458, isLocal: false, isDefinition: true, scopeLine: 1717, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3606)
!3606 = !{!3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3618, !3624, !3629, !3635, !3639, !3645, !3647}
!3607 = !DILocalVariable(name: "s", arg: 1, scope: !3605, file: !3, line: 1716, type: !80)
!3608 = !DILocalVariable(name: "name", arg: 2, scope: !3605, file: !3, line: 1716, type: !228)
!3609 = !DILocalVariable(name: "namelen", arg: 3, scope: !3605, file: !3, line: 1716, type: !1750)
!3610 = !DILocalVariable(name: "sock", scope: !3605, file: !3, line: 1718, type: !1165)
!3611 = !DILocalVariable(name: "local_addr", scope: !3605, file: !3, line: 1719, type: !1183)
!3612 = !DILocalVariable(name: "local_port", scope: !3605, file: !3, line: 1720, type: !164)
!3613 = !DILocalVariable(name: "err", scope: !3605, file: !3, line: 1721, type: !1283)
!3614 = !DILocalVariable(name: "sockerr", scope: !3615, file: !3, line: 1730, type: !1007)
!3615 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1730, column: 5)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !3, line: 1728, column: 42)
!3617 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1728, column: 7)
!3618 = !DILocalVariable(name: "tid", scope: !3619, file: !3, line: 1730, type: !170)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1730, column: 5)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1730, column: 5)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1730, column: 5)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1730, column: 5)
!3623 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 1730, column: 5)
!3624 = !DILocalVariable(name: "sockerr", scope: !3625, file: !3, line: 1736, type: !1007)
!3625 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 1736, column: 3)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 1736, column: 3)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !3, line: 1736, column: 3)
!3628 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1736, column: 3)
!3629 = !DILocalVariable(name: "tid", scope: !3630, file: !3, line: 1736, type: !170)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !3, line: 1736, column: 3)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 1736, column: 3)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 1736, column: 3)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 1736, column: 3)
!3634 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1736, column: 3)
!3635 = !DILocalVariable(name: "sockerr", scope: !3636, file: !3, line: 1758, type: !1007)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 1758, column: 5)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 1756, column: 22)
!3638 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1756, column: 7)
!3639 = !DILocalVariable(name: "tid", scope: !3640, file: !3, line: 1758, type: !170)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1758, column: 5)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 1758, column: 5)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1758, column: 5)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 1758, column: 5)
!3644 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 1758, column: 5)
!3645 = !DILocalVariable(name: "sockerr", scope: !3646, file: !3, line: 1764, type: !1007)
!3646 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1764, column: 3)
!3647 = !DILocalVariable(name: "tid", scope: !3648, file: !3, line: 1764, type: !170)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !3, line: 1764, column: 3)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 1764, column: 3)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 1764, column: 3)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 1764, column: 3)
!3652 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 1764, column: 3)
!3653 = !DILocation(line: 1716, column: 15, scope: !3605)
!3654 = !DILocation(line: 1716, column: 41, scope: !3605)
!3655 = !DILocation(line: 1716, column: 57, scope: !3605)
!3656 = !DILocation(line: 1719, column: 3, scope: !3605)
!3657 = !DILocation(line: 1723, column: 10, scope: !3605)
!3658 = !DILocation(line: 1718, column: 21, scope: !3605)
!3659 = !DILocation(line: 1724, column: 8, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1724, column: 7)
!3661 = !DILocation(line: 1724, column: 7, scope: !3605)
!3662 = !DILocation(line: 1728, column: 8, scope: !3617)
!3663 = !{!3664, !1405, i64 1}
!3664 = !{!"sockaddr", !1405, i64 0, !1405, i64 1, !1405, i64 2}
!3665 = !DILocation(line: 1728, column: 7, scope: !3605)
!3666 = !DILocation(line: 1730, column: 5, scope: !3615)
!3667 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3668)
!3668 = distinct !DILocation(line: 1730, column: 5, scope: !3622)
!3669 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3668)
!3670 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3668)
!3671 = !DILocation(line: 1730, column: 5, scope: !3622)
!3672 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3673)
!3673 = distinct !DILocation(line: 1730, column: 5, scope: !3622)
!3674 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3673)
!3675 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3673)
!3676 = !DILocation(line: 1730, column: 5, scope: !3623)
!3677 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3678)
!3678 = distinct !DILocation(line: 1730, column: 5, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1730, column: 5)
!3680 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3678)
!3681 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3678)
!3682 = !DILocation(line: 1730, column: 5, scope: !3679)
!3683 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3684)
!3684 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3685)
!3685 = distinct !DILocation(line: 1730, column: 5, scope: !3619)
!3686 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3684)
!3687 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3684)
!3688 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3685)
!3689 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3685)
!3690 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3685)
!3691 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3685)
!3692 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3685)
!3693 = !DILocation(line: 1730, column: 5, scope: !3619)
!3694 = !{i32 -2145164226, i32 -2145164213, i32 -2145164188, i32 -2145164164, i32 -2145164139, i32 -2145164064, i32 -2145164039, i32 -2145163895, i32 -2145161672, i32 -2145161583, i32 -2145161462, i32 -2145161367, i32 -2145161266, i32 -2145161239, i32 -2145161156, i32 -2145161067, i32 -2145160946, i32 -2145160846, i32 -2145160740, i32 -2145160632, i32 -2145163607, i32 -2145163554, i32 -2145163523, i32 -2145163492, i32 -2145163471, i32 -2145163449, i32 -2145163400, i32 -2145163379, i32 -2145160549, i32 -2145160460, i32 -2145160339, i32 -2145160240, i32 -2145160134, i32 -2145160032, i32 -2145159999, i32 -2145159926, i32 -2145159858, i32 -2145163005, i32 -2145162952, i32 -2145162921, i32 -2145162890, i32 -2145162869, i32 -2145162847, i32 -2145162798, i32 -2145162777, i32 -2145159803, i32 -2145159714, i32 -2145159593, i32 -2145159494, i32 -2145159388, i32 -2145159286, i32 -2145159253, i32 -2145159170, i32 -2145159081, i32 -2145158960, i32 -2145158860, i32 -2145158834, i32 -2145158731, i32 -2145158705, i32 -2145162519, i32 -2145162452, i32 -2145162427, i32 -2145162363, i32 -2145162247, i32 -2145162222, i32 -2145162197}
!3695 = !DILocation(line: 1736, column: 3, scope: !3627)
!3696 = !DILocation(line: 1736, column: 3, scope: !3628)
!3697 = !DILocation(line: 1736, column: 3, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 1736, column: 3)
!3699 = !DILocation(line: 1736, column: 3, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !3, line: 1736, column: 3)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !3, line: 1736, column: 3)
!3702 = distinct !DILexicalBlock(scope: !3698, file: !3, line: 1736, column: 3)
!3703 = !DILocation(line: 1719, column: 13, scope: !3605)
!3704 = !DILocalVariable(name: "sockaddr", arg: 1, scope: !3705, file: !3, line: 1304, type: !228)
!3705 = distinct !DISubprogram(name: "sockaddr_to_ipaddr_port", scope: !3, file: !3, line: 1304, type: !3706, isLocal: true, isDefinition: true, scopeLine: 1305, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3710)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{null, !228, !3708, !3709}
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!3710 = !{!3704, !3711, !3712}
!3711 = !DILocalVariable(name: "ipaddr", arg: 2, scope: !3705, file: !3, line: 1304, type: !3708)
!3712 = !DILocalVariable(name: "port", arg: 3, scope: !3705, file: !3, line: 1304, type: !3709)
!3713 = !DILocation(line: 1304, column: 48, scope: !3705, inlinedAt: !3714)
!3714 = distinct !DILocation(line: 1741, column: 3, scope: !3605)
!3715 = !DILocation(line: 1304, column: 69, scope: !3705, inlinedAt: !3714)
!3716 = !DILocation(line: 1306, column: 29, scope: !3717, inlinedAt: !3714)
!3717 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 1306, column: 7)
!3718 = !DILocation(line: 1306, column: 7, scope: !3705, inlinedAt: !3714)
!3719 = !DILocation(line: 1307, column: 5, scope: !3720, inlinedAt: !3714)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1307, column: 5)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1307, column: 5)
!3722 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 1306, column: 42)
!3723 = !DILocation(line: 1307, column: 5, scope: !3724, inlinedAt: !3714)
!3724 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1307, column: 5)
!3725 = !DILocation(line: 1307, column: 5, scope: !3721, inlinedAt: !3714)
!3726 = !DILocation(line: 1307, column: 5, scope: !3727, inlinedAt: !3714)
!3727 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 1307, column: 5)
!3728 = !DILocation(line: 1310, column: 5, scope: !3729, inlinedAt: !3714)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 1310, column: 5)
!3730 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 1309, column: 10)
!3731 = !DILocation(line: 1311, column: 13, scope: !3730, inlinedAt: !3714)
!3732 = !DILocation(line: 1311, column: 18, scope: !3730, inlinedAt: !3714)
!3733 = !DILocation(line: 1313, column: 1, scope: !3705, inlinedAt: !3714)
!3734 = !DILocation(line: 1748, column: 32, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1748, column: 7)
!3736 = !DILocation(line: 1308, column: 13, scope: !3722, inlinedAt: !3714)
!3737 = !DILocation(line: 1308, column: 18, scope: !3722, inlinedAt: !3714)
!3738 = !DILocation(line: 1309, column: 3, scope: !3722, inlinedAt: !3714)
!3739 = !DILocation(line: 1748, column: 35, scope: !3735)
!3740 = !DILocation(line: 1748, column: 7, scope: !3605)
!3741 = !DILocation(line: 1749, column: 5, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 1748, column: 85)
!3743 = !DILocation(line: 1750, column: 5, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 1750, column: 5)
!3745 = !DILocation(line: 1751, column: 3, scope: !3742)
!3746 = !DILocation(line: 1754, column: 28, scope: !3605)
!3747 = !DILocation(line: 1720, column: 9, scope: !3605)
!3748 = !DILocation(line: 1754, column: 9, scope: !3605)
!3749 = !DILocation(line: 1721, column: 9, scope: !3605)
!3750 = !DILocation(line: 1756, column: 11, scope: !3638)
!3751 = !DILocation(line: 1756, column: 7, scope: !3605)
!3752 = !DILocation(line: 1758, column: 5, scope: !3636)
!3753 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3754)
!3754 = distinct !DILocation(line: 1758, column: 5, scope: !3643)
!3755 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3754)
!3756 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3754)
!3757 = !DILocation(line: 1758, column: 5, scope: !3643)
!3758 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3759)
!3759 = distinct !DILocation(line: 1758, column: 5, scope: !3643)
!3760 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3759)
!3761 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3759)
!3762 = !DILocation(line: 1758, column: 5, scope: !3644)
!3763 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3764)
!3764 = distinct !DILocation(line: 1758, column: 5, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1758, column: 5)
!3766 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3764)
!3767 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3764)
!3768 = !DILocation(line: 1758, column: 5, scope: !3765)
!3769 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3770)
!3770 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3771)
!3771 = distinct !DILocation(line: 1758, column: 5, scope: !3640)
!3772 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3770)
!3773 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3770)
!3774 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3771)
!3775 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3771)
!3776 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3771)
!3777 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3771)
!3778 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3771)
!3779 = !DILocation(line: 1758, column: 5, scope: !3640)
!3780 = !{i32 -2145135483, i32 -2145135470, i32 -2145135445, i32 -2145135421, i32 -2145135396, i32 -2145135321, i32 -2145135296, i32 -2145135152, i32 -2145132929, i32 -2145132840, i32 -2145132719, i32 -2145132624, i32 -2145132523, i32 -2145132496, i32 -2145132413, i32 -2145132324, i32 -2145132203, i32 -2145132103, i32 -2145131997, i32 -2145131889, i32 -2145134864, i32 -2145134811, i32 -2145134780, i32 -2145134749, i32 -2145134728, i32 -2145134706, i32 -2145134657, i32 -2145134636, i32 -2145131806, i32 -2145131717, i32 -2145131596, i32 -2145131497, i32 -2145131391, i32 -2145131289, i32 -2145131256, i32 -2145131183, i32 -2145131115, i32 -2145134262, i32 -2145134209, i32 -2145134178, i32 -2145134147, i32 -2145134126, i32 -2145134104, i32 -2145134055, i32 -2145134034, i32 -2145131060, i32 -2145130971, i32 -2145130850, i32 -2145130751, i32 -2145130645, i32 -2145130543, i32 -2145130510, i32 -2145130427, i32 -2145130338, i32 -2145130217, i32 -2145130117, i32 -2145130091, i32 -2145129988, i32 -2145129962, i32 -2145133776, i32 -2145133709, i32 -2145133684, i32 -2145133620, i32 -2145133504, i32 -2145133479, i32 -2145133454}
!3781 = !DILocation(line: 1764, column: 3, scope: !3646)
!3782 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3783)
!3783 = distinct !DILocation(line: 1764, column: 3, scope: !3651)
!3784 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3783)
!3785 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3783)
!3786 = !DILocation(line: 1764, column: 3, scope: !3651)
!3787 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3788)
!3788 = distinct !DILocation(line: 1764, column: 3, scope: !3651)
!3789 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3788)
!3790 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3788)
!3791 = !DILocation(line: 1764, column: 3, scope: !3652)
!3792 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3793)
!3793 = distinct !DILocation(line: 1764, column: 3, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 1764, column: 3)
!3795 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3793)
!3796 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3793)
!3797 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3793)
!3798 = !DILocation(line: 1764, column: 3, scope: !3794)
!3799 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3800)
!3800 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3801)
!3801 = distinct !DILocation(line: 1764, column: 3, scope: !3648)
!3802 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3800)
!3803 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3800)
!3804 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3801)
!3805 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3801)
!3806 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3801)
!3807 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3801)
!3808 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3801)
!3809 = !DILocation(line: 1764, column: 3, scope: !3648)
!3810 = !{i32 -2145127926, i32 -2145127913, i32 -2145127888, i32 -2145127864, i32 -2145127839, i32 -2145127764, i32 -2145127739, i32 -2145127595, i32 -2145125372, i32 -2145125283, i32 -2145125162, i32 -2145125067, i32 -2145124966, i32 -2145124939, i32 -2145124856, i32 -2145124767, i32 -2145124646, i32 -2145124546, i32 -2145124440, i32 -2145124332, i32 -2145127307, i32 -2145127254, i32 -2145127223, i32 -2145127192, i32 -2145127171, i32 -2145127149, i32 -2145127100, i32 -2145127079, i32 -2145124249, i32 -2145124160, i32 -2145124039, i32 -2145123940, i32 -2145123834, i32 -2145123732, i32 -2145123699, i32 -2145123626, i32 -2145123558, i32 -2145126705, i32 -2145126652, i32 -2145126621, i32 -2145126590, i32 -2145126569, i32 -2145126547, i32 -2145126498, i32 -2145126477, i32 -2145123503, i32 -2145123414, i32 -2145123293, i32 -2145123194, i32 -2145123088, i32 -2145122986, i32 -2145122953, i32 -2145122870, i32 -2145122781, i32 -2145122660, i32 -2145122560, i32 -2145122534, i32 -2145122431, i32 -2145122405, i32 -2145126219, i32 -2145126152, i32 -2145126127, i32 -2145126063, i32 -2145125947, i32 -2145125922, i32 -2145125897}
!3811 = !DILocation(line: 0, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 1724, column: 14)
!3813 = !DILocation(line: 1767, column: 1, scope: !3605)
!3814 = distinct !DISubprogram(name: "poll", scope: !3, file: !3, line: 553, type: !3815, isLocal: false, isDefinition: true, scopeLine: 554, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3817)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!80, !258, !265, !80}
!3817 = !{!3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3829, !3840, !3841}
!3818 = !DILocalVariable(name: "fds", arg: 1, scope: !3814, file: !3, line: 553, type: !258)
!3819 = !DILocalVariable(name: "nfds", arg: 2, scope: !3814, file: !3, line: 553, type: !265)
!3820 = !DILocalVariable(name: "timeout", arg: 3, scope: !3814, file: !3, line: 553, type: !80)
!3821 = !DILocalVariable(name: "ret", scope: !3814, file: !3, line: 555, type: !80)
!3822 = !DILocalVariable(name: "i", scope: !3814, file: !3, line: 556, type: !7)
!3823 = !DILocalVariable(name: "file", scope: !3814, file: !3, line: 557, type: !1077)
!3824 = !DILocalVariable(scope: !3814, type: !134, flags: DIFlagArtificial)
!3825 = !DILocalVariable(name: "lwip_fds", scope: !3814, file: !3, line: 558, type: !3826)
!3826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, elements: !3827)
!3827 = !{!3828}
!3828 = !DISubrange(count: !3824)
!3829 = !DILocalVariable(name: "tid", scope: !3830, file: !3, line: 564, type: !170)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 564, column: 4)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 564, column: 4)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 564, column: 4)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 564, column: 4)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 564, column: 4)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !3, line: 563, column: 8)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 561, column: 7)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 560, column: 29)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 560, column: 2)
!3839 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 560, column: 2)
!3840 = !DILocalVariable(name: "_ret", scope: !3830, file: !3, line: 564, type: !135)
!3841 = !DILocalVariable(name: "tid", scope: !3842, file: !3, line: 571, type: !170)
!3842 = distinct !DILexicalBlock(scope: !3843, file: !3, line: 571, column: 5)
!3843 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 571, column: 5)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 571, column: 5)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 571, column: 5)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 571, column: 5)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 571, column: 5)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 566, column: 24)
!3849 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 566, column: 8)
!3850 = !DILocation(line: 553, column: 24, scope: !3814)
!3851 = !DILocation(line: 553, column: 38, scope: !3814)
!3852 = !DILocation(line: 553, column: 48, scope: !3814)
!3853 = !DILocation(line: 557, column: 2, scope: !3814)
!3854 = !DILocation(line: 558, column: 2, scope: !3814)
!3855 = !DILocation(line: 0, scope: !3814)
!3856 = !DILocation(line: 558, column: 16, scope: !3814)
!3857 = !DILocation(line: 556, column: 15, scope: !3814)
!3858 = !DILocation(line: 560, column: 7, scope: !3839)
!3859 = !DILocation(line: 560, column: 16, scope: !3838)
!3860 = !DILocation(line: 560, column: 2, scope: !3839)
!3861 = !DILocation(line: 561, column: 14, scope: !3836)
!3862 = !{!3863, !1409, i64 0}
!3863 = !{!"pollfd", !1409, i64 0, !1565, i64 4, !1565, i64 6}
!3864 = !DILocation(line: 561, column: 17, scope: !3836)
!3865 = !DILocation(line: 561, column: 7, scope: !3837)
!3866 = !DILocation(line: 562, column: 16, scope: !3836)
!3867 = !DILocation(line: 562, column: 19, scope: !3836)
!3868 = !DILocation(line: 562, column: 4, scope: !3836)
!3869 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3870)
!3870 = distinct !DILocation(line: 564, column: 4, scope: !3833)
!3871 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3870)
!3872 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3870)
!3873 = !DILocation(line: 564, column: 4, scope: !3833)
!3874 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3875)
!3875 = distinct !DILocation(line: 564, column: 4, scope: !3833)
!3876 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3875)
!3877 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3875)
!3878 = !DILocation(line: 564, column: 4, scope: !3834)
!3879 = !DILocation(line: 564, column: 4, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 564, column: 4)
!3881 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !3882)
!3882 = distinct !DILocation(line: 564, column: 4, scope: !3880)
!3883 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !3882)
!3884 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !3882)
!3885 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !3882)
!3886 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !3882)
!3887 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !3882)
!3888 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !3882)
!3889 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !3882)
!3890 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !3882)
!3891 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !3882)
!3892 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !3882)
!3893 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !3882)
!3894 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !3882)
!3895 = !DILocation(line: 0, scope: !2856, inlinedAt: !3882)
!3896 = !DILocation(line: 0, scope: !3880)
!3897 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !3882)
!3898 = !DILocation(line: 557, column: 24, scope: !3814)
!3899 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3900)
!3900 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3901)
!3901 = distinct !DILocation(line: 564, column: 4, scope: !3830)
!3902 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3900)
!3903 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3900)
!3904 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3901)
!3905 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3901)
!3906 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3901)
!3907 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3901)
!3908 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3901)
!3909 = !DILocation(line: 564, column: 4, scope: !3830)
!3910 = !{i32 -2145629457, i32 -2145629444, i32 -2145629419, i32 -2145629395, i32 -2145629370, i32 -2145629295, i32 -2145629270, i32 -2145629126, i32 -2145625986, i32 -2145625897, i32 -2145625776, i32 -2145625681, i32 -2145625580, i32 -2145625553, i32 -2145625470, i32 -2145625381, i32 -2145625260, i32 -2145625160, i32 -2145625054, i32 -2145624946, i32 -2145628838, i32 -2145628785, i32 -2145628754, i32 -2145628723, i32 -2145628702, i32 -2145628680, i32 -2145628631, i32 -2145628610, i32 -2145624863, i32 -2145624774, i32 -2145624653, i32 -2145624554, i32 -2145624448, i32 -2145624346, i32 -2145624313, i32 -2145624240, i32 -2145624172, i32 -2145628306, i32 -2145628247, i32 -2145628194, i32 -2145628163, i32 -2145628132, i32 -2145628111, i32 -2145628089, i32 -2145628040, i32 -2145628019, i32 -2145624119, i32 -2145624030, i32 -2145623909, i32 -2145623810, i32 -2145623704, i32 -2145623602, i32 -2145623569, i32 -2145623486, i32 -2145623397, i32 -2145623276, i32 -2145623176, i32 -2145623150, i32 -2145623047, i32 -2145623021, i32 -2145627761, i32 -2145627694, i32 -2145627669, i32 -2145627605, i32 -2145627523, i32 -2145627500, i32 -2145627475, i32 -2145627450}
!3911 = !DILocation(line: 564, column: 4, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 564, column: 4)
!3913 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 564, column: 4)
!3914 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 564, column: 4)
!3915 = !{i32 -2145626262, i32 -2145626246}
!3916 = !DILocation(line: 566, column: 8, scope: !3849)
!3917 = !DILocation(line: 566, column: 8, scope: !3835)
!3918 = !DILocation(line: 555, column: 6, scope: !3814)
!3919 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3920)
!3920 = distinct !DILocation(line: 571, column: 5, scope: !3845)
!3921 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3920)
!3922 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3920)
!3923 = !DILocation(line: 571, column: 5, scope: !3845)
!3924 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3925)
!3925 = distinct !DILocation(line: 571, column: 5, scope: !3845)
!3926 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3925)
!3927 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3925)
!3928 = !DILocation(line: 571, column: 5, scope: !3846)
!3929 = !DILocation(line: 571, column: 5, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 571, column: 5)
!3931 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !3932)
!3932 = distinct !DILocation(line: 571, column: 5, scope: !3930)
!3933 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !3932)
!3934 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !3932)
!3935 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !3932)
!3936 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !3932)
!3937 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !3938)
!3938 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !3939)
!3939 = distinct !DILocation(line: 571, column: 5, scope: !3842)
!3940 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !3938)
!3941 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !3938)
!3942 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !3939)
!3943 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !3939)
!3944 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !3939)
!3945 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !3939)
!3946 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !3939)
!3947 = !DILocation(line: 571, column: 5, scope: !3842)
!3948 = !{i32 -2145620766, i32 -2145620753, i32 -2145620728, i32 -2145620704, i32 -2145620679, i32 -2145620604, i32 -2145620579, i32 -2145620435, i32 -2145618194, i32 -2145618105, i32 -2145617984, i32 -2145617889, i32 -2145617788, i32 -2145617761, i32 -2145617678, i32 -2145617589, i32 -2145617468, i32 -2145617368, i32 -2145617262, i32 -2145617154, i32 -2145620147, i32 -2145620094, i32 -2145620063, i32 -2145620032, i32 -2145620011, i32 -2145619989, i32 -2145619940, i32 -2145619919, i32 -2145617071, i32 -2145616982, i32 -2145616861, i32 -2145616762, i32 -2145616656, i32 -2145616554, i32 -2145616521, i32 -2145616448, i32 -2145616380, i32 -2145619545, i32 -2145619492, i32 -2145619461, i32 -2145619430, i32 -2145619409, i32 -2145619387, i32 -2145619338, i32 -2145619317, i32 -2145616325, i32 -2145616236, i32 -2145616115, i32 -2145616016, i32 -2145615910, i32 -2145615808, i32 -2145615775, i32 -2145615692, i32 -2145615603, i32 -2145615482, i32 -2145615382, i32 -2145615356, i32 -2145615253, i32 -2145615227, i32 -2145619059, i32 -2145618992, i32 -2145618967, i32 -2145618903, i32 -2145618787, i32 -2145618762, i32 -2145618737}
!3949 = !DILocation(line: 574, column: 27, scope: !3835)
!3950 = !DILocation(line: 574, column: 16, scope: !3835)
!3951 = !DILocation(line: 574, column: 19, scope: !3835)
!3952 = !DILocation(line: 575, column: 32, scope: !3835)
!3953 = !{!3863, !1565, i64 4}
!3954 = !DILocation(line: 575, column: 16, scope: !3835)
!3955 = !DILocation(line: 575, column: 23, scope: !3835)
!3956 = !DILocation(line: 576, column: 27, scope: !3835)
!3957 = !DILocation(line: 576, column: 4, scope: !3835)
!3958 = !DILocation(line: 560, column: 25, scope: !3838)
!3959 = !DILocation(line: 560, column: 2, scope: !3838)
!3960 = distinct !{!3960, !3860, !3961}
!3961 = !DILocation(line: 578, column: 2, scope: !3839)
!3962 = !DILocation(line: 580, column: 8, scope: !3814)
!3963 = !DILocation(line: 581, column: 10, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 581, column: 6)
!3965 = !DILocation(line: 581, column: 6, scope: !3814)
!3966 = !DILocation(line: 584, column: 7, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3814, file: !3, line: 584, column: 2)
!3968 = !DILocation(line: 584, column: 2, scope: !3967)
!3969 = !DILocation(line: 585, column: 14, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !3, line: 585, column: 7)
!3971 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 584, column: 29)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 584, column: 2)
!3973 = !DILocation(line: 585, column: 17, scope: !3970)
!3974 = !DILocation(line: 585, column: 7, scope: !3971)
!3975 = !DILocation(line: 588, column: 33, scope: !3970)
!3976 = !{!3863, !1565, i64 6}
!3977 = !DILocation(line: 586, column: 11, scope: !3970)
!3978 = !DILocation(line: 586, column: 19, scope: !3970)
!3979 = !DILocation(line: 584, column: 25, scope: !3972)
!3980 = !DILocation(line: 584, column: 2, scope: !3972)
!3981 = !DILocation(line: 593, column: 1, scope: !3814)
!3982 = distinct !{!3982, !3968, !3983}
!3983 = !DILocation(line: 589, column: 2, scope: !3967)
!3984 = distinct !DISubprogram(name: "lwip_poll", scope: !3, file: !3, line: 3317, type: !3815, isLocal: false, isDefinition: true, scopeLine: 3318, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3985)
!3985 = !{!3986, !3987, !3988, !3989, !3990, !3991, !3992, !3997, !4003, !4006, !4011, !4017, !4025}
!3986 = !DILocalVariable(name: "fds", arg: 1, scope: !3984, file: !3, line: 3317, type: !258)
!3987 = !DILocalVariable(name: "nfds", arg: 2, scope: !3984, file: !3, line: 3317, type: !265)
!3988 = !DILocalVariable(name: "timeout", arg: 3, scope: !3984, file: !3, line: 3317, type: !80)
!3989 = !DILocalVariable(name: "waitres", scope: !3984, file: !3, line: 3319, type: !169)
!3990 = !DILocalVariable(name: "nready", scope: !3984, file: !3, line: 3320, type: !80)
!3991 = !DILocalVariable(name: "msectimeout", scope: !3984, file: !3, line: 3321, type: !169)
!3992 = !DILocalVariable(name: "sockerr", scope: !3993, file: !3, line: 3328, type: !1007)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 3328, column: 3)
!3994 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 3328, column: 3)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 3328, column: 3)
!3996 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3328, column: 3)
!3997 = !DILocalVariable(name: "tid", scope: !3998, file: !3, line: 3328, type: !170)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 3328, column: 3)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 3328, column: 3)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 3328, column: 3)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 3328, column: 3)
!4002 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 3328, column: 3)
!4003 = !DILocalVariable(name: "select_cb", scope: !4004, file: !3, line: 3344, type: !238)
!4004 = distinct !DILexicalBlock(scope: !4005, file: !3, line: 3343, column: 16)
!4005 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3343, column: 7)
!4006 = !DILocalVariable(name: "sockerr", scope: !4007, file: !3, line: 3350, type: !1007)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 3350, column: 5)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 3350, column: 5)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 3350, column: 5)
!4010 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3350, column: 5)
!4011 = !DILocalVariable(name: "tid", scope: !4012, file: !3, line: 3350, type: !170)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 3350, column: 5)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 3350, column: 5)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 3350, column: 5)
!4015 = distinct !DILexicalBlock(scope: !4016, file: !3, line: 3350, column: 5)
!4016 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 3350, column: 5)
!4017 = !DILocalVariable(name: "tid", scope: !4018, file: !3, line: 3365, type: !170)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 3365, column: 7)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 3365, column: 7)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 3365, column: 7)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 3365, column: 7)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 3365, column: 7)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !3, line: 3363, column: 74)
!4024 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3363, column: 9)
!4025 = !DILocalVariable(name: "tid", scope: !4026, file: !3, line: 3427, type: !170)
!4026 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 3427, column: 3)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 3427, column: 3)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 3427, column: 3)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 3427, column: 3)
!4030 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3427, column: 3)
!4031 = !DILocation(line: 3317, column: 26, scope: !3984)
!4032 = !DILocation(line: 3317, column: 38, scope: !3984)
!4033 = !DILocation(line: 3317, column: 48, scope: !3984)
!4034 = !DILocation(line: 3319, column: 9, scope: !3984)
!4035 = !DILocation(line: 3328, column: 3, scope: !3995)
!4036 = !DILocation(line: 3328, column: 3, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 3328, column: 3)
!4038 = !DILocation(line: 3328, column: 3, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 3328, column: 3)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 3328, column: 3)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 3328, column: 3)
!4042 = !DILocation(line: 3335, column: 12, scope: !3984)
!4043 = !DILocation(line: 3320, column: 7, scope: !3984)
!4044 = !DILocation(line: 3337, column: 14, scope: !4045)
!4045 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 3337, column: 7)
!4046 = !DILocation(line: 3337, column: 7, scope: !3984)
!4047 = !DILocation(line: 3343, column: 8, scope: !4005)
!4048 = !DILocation(line: 3343, column: 7, scope: !3984)
!4049 = !DILocation(line: 3346, column: 17, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3346, column: 9)
!4051 = !DILocation(line: 3346, column: 9, scope: !4004)
!4052 = !DILocation(line: 3350, column: 5, scope: !4010)
!4053 = !DILocalVariable(name: "a", arg: 1, scope: !4054, file: !388, line: 157, type: !386)
!4054 = distinct !DISubprogram(name: "uk_malloc", scope: !388, file: !388, line: 157, type: !393, isLocal: true, isDefinition: true, scopeLine: 158, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4055)
!4055 = !{!4053, !4056}
!4056 = !DILocalVariable(name: "size", arg: 2, scope: !4054, file: !388, line: 157, type: !395)
!4057 = !DILocation(line: 157, column: 48, scope: !4054, inlinedAt: !4058)
!4058 = distinct !DILocation(line: 3350, column: 5, scope: !4010)
!4059 = !DILocation(line: 157, column: 58, scope: !4054, inlinedAt: !4058)
!4060 = !DILocation(line: 159, column: 6, scope: !4061, inlinedAt: !4058)
!4061 = distinct !DILexicalBlock(scope: !4054, file: !388, line: 159, column: 6)
!4062 = !DILocation(line: 159, column: 6, scope: !4054, inlinedAt: !4058)
!4063 = !DILocation(line: 160, column: 3, scope: !4064, inlinedAt: !4058)
!4064 = distinct !DILexicalBlock(scope: !4061, file: !388, line: 159, column: 20)
!4065 = !DILocation(line: 160, column: 9, scope: !4064, inlinedAt: !4058)
!4066 = !DILocation(line: 161, column: 3, scope: !4064, inlinedAt: !4058)
!4067 = !DILocation(line: 164, column: 1, scope: !4054, inlinedAt: !4058)
!4068 = !DILocation(line: 3344, column: 5, scope: !4004)
!4069 = !DILocalVariable(name: "a", arg: 1, scope: !4070, file: !388, line: 151, type: !386)
!4070 = distinct !DISubprogram(name: "uk_do_malloc", scope: !388, file: !388, line: 151, type: !393, isLocal: true, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4071)
!4071 = !{!4069, !4072}
!4072 = !DILocalVariable(name: "size", arg: 2, scope: !4070, file: !388, line: 151, type: !395)
!4073 = !DILocation(line: 151, column: 51, scope: !4070, inlinedAt: !4074)
!4074 = distinct !DILocation(line: 163, column: 9, scope: !4054, inlinedAt: !4058)
!4075 = !DILocation(line: 151, column: 61, scope: !4070, inlinedAt: !4074)
!4076 = !DILocation(line: 153, column: 2, scope: !4077, inlinedAt: !4074)
!4077 = distinct !DILexicalBlock(scope: !4070, file: !388, line: 153, column: 2)
!4078 = !DILocation(line: 154, column: 12, scope: !4070, inlinedAt: !4074)
!4079 = !DILocation(line: 154, column: 9, scope: !4070, inlinedAt: !4074)
!4080 = !DILocation(line: 154, column: 2, scope: !4070, inlinedAt: !4074)
!4081 = !DILocation(line: 163, column: 2, scope: !4054, inlinedAt: !4058)
!4082 = !DILocation(line: 3350, column: 5, scope: !4009)
!4083 = !DILocation(line: 3350, column: 5, scope: !4007)
!4084 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4085)
!4085 = distinct !DILocation(line: 3350, column: 5, scope: !4015)
!4086 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4085)
!4087 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4085)
!4088 = !DILocation(line: 3350, column: 5, scope: !4015)
!4089 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4090)
!4090 = distinct !DILocation(line: 3350, column: 5, scope: !4015)
!4091 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4090)
!4092 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4090)
!4093 = !DILocation(line: 3350, column: 5, scope: !4016)
!4094 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !4095)
!4095 = distinct !DILocation(line: 3350, column: 5, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4015, file: !3, line: 3350, column: 5)
!4097 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !4095)
!4098 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !4095)
!4099 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !4095)
!4100 = !DILocation(line: 3350, column: 5, scope: !4096)
!4101 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4102)
!4102 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4103)
!4103 = distinct !DILocation(line: 3350, column: 5, scope: !4012)
!4104 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4102)
!4105 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4102)
!4106 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4103)
!4107 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4103)
!4108 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4103)
!4109 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4103)
!4110 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4103)
!4111 = !DILocation(line: 3350, column: 5, scope: !4012)
!4112 = !{i32 -2144695412, i32 -2144695399, i32 -2144695374, i32 -2144695350, i32 -2144695325, i32 -2144695308, i32 -2144695283, i32 -2144695266, i32 -2144695243, i32 -2144695222, i32 -2144695188, i32 -2144695169, i32 -2144695147, i32 -2144695120, i32 -2144695097, i32 -2144695076, i32 -2144695042, i32 -2144695018, i32 -2144694993, i32 -2144694965, i32 -2144694956, i32 -2144694903, i32 -2144694872, i32 -2144694841, i32 -2144694820, i32 -2144694798, i32 -2144694749, i32 -2144694728, i32 -2144694705, i32 -2144694684, i32 -2144694650, i32 -2144694627, i32 -2144694602, i32 -2144694580, i32 -2144694547, i32 -2144694524, i32 -2144694487, i32 -2144694478, i32 -2144694425, i32 -2144694394, i32 -2144694363, i32 -2144694342, i32 -2144694320, i32 -2144694271, i32 -2144694250, i32 -2144694227, i32 -2144694206, i32 -2144694172, i32 -2144694149, i32 -2144694124, i32 -2144694102, i32 -2144694069, i32 -2144694046, i32 -2144694025, i32 -2144693991, i32 -2144693969, i32 -2144693943, i32 -2144693921, i32 -2144693895, i32 -2144693879, i32 -2144693863, i32 -2144693838, i32 -2144693823, i32 -2144693808, i32 -2144693783, i32 -2144693758}
!4113 = !DILocation(line: 3351, column: 5, scope: !4004)
!4114 = !DILocation(line: 3358, column: 38, scope: !4004)
!4115 = !DILocation(line: 3358, column: 47, scope: !4004)
!4116 = !{!4117, !1408, i64 40}
!4117 = !{!"lwip_select_cb", !1408, i64 0, !1408, i64 8, !1408, i64 16, !1408, i64 24, !1408, i64 32, !1408, i64 40, !1409, i64 48, !1409, i64 52, !1572, i64 56}
!4118 = !DILocation(line: 3359, column: 38, scope: !4004)
!4119 = !DILocation(line: 3359, column: 48, scope: !4004)
!4120 = !{!4117, !1409, i64 48}
!4121 = !DILocation(line: 3363, column: 55, scope: !4024)
!4122 = !DILocation(line: 3363, column: 9, scope: !4024)
!4123 = !DILocation(line: 3363, column: 63, scope: !4024)
!4124 = !DILocation(line: 3363, column: 9, scope: !4004)
!4125 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4126)
!4126 = distinct !DILocation(line: 3365, column: 7, scope: !4021)
!4127 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4126)
!4128 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4126)
!4129 = !DILocation(line: 3365, column: 7, scope: !4021)
!4130 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4131)
!4131 = distinct !DILocation(line: 3365, column: 7, scope: !4021)
!4132 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4131)
!4133 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4131)
!4134 = !DILocation(line: 3365, column: 7, scope: !4022)
!4135 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !4136)
!4136 = distinct !DILocation(line: 3365, column: 7, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 3365, column: 7)
!4138 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !4136)
!4139 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !4136)
!4140 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !4136)
!4141 = !DILocation(line: 3365, column: 7, scope: !4137)
!4142 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4143)
!4143 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4144)
!4144 = distinct !DILocation(line: 3365, column: 7, scope: !4018)
!4145 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4143)
!4146 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4143)
!4147 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4144)
!4148 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4144)
!4149 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4144)
!4150 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4144)
!4151 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4144)
!4152 = !DILocation(line: 3365, column: 7, scope: !4018)
!4153 = !{i32 -2144691333, i32 -2144691320, i32 -2144691295, i32 -2144691271, i32 -2144691246, i32 -2144691171, i32 -2144691146, i32 -2144691002, i32 -2144688780, i32 -2144688691, i32 -2144688570, i32 -2144688475, i32 -2144688374, i32 -2144688347, i32 -2144688264, i32 -2144688175, i32 -2144688054, i32 -2144687954, i32 -2144687848, i32 -2144687740, i32 -2144690714, i32 -2144690661, i32 -2144690630, i32 -2144690599, i32 -2144690578, i32 -2144690556, i32 -2144690507, i32 -2144690486, i32 -2144687657, i32 -2144687568, i32 -2144687447, i32 -2144687348, i32 -2144687242, i32 -2144687140, i32 -2144687107, i32 -2144687034, i32 -2144686966, i32 -2144690112, i32 -2144690059, i32 -2144690028, i32 -2144689997, i32 -2144689976, i32 -2144689954, i32 -2144689905, i32 -2144689884, i32 -2144686911, i32 -2144686822, i32 -2144686701, i32 -2144686602, i32 -2144686496, i32 -2144686394, i32 -2144686361, i32 -2144686278, i32 -2144686189, i32 -2144686068, i32 -2144685968, i32 -2144685942, i32 -2144685839, i32 -2144685813, i32 -2144689626, i32 -2144689559, i32 -2144689534, i32 -2144689470, i32 -2144689354, i32 -2144689329, i32 -2144689304}
!4154 = !DILocation(line: 3367, column: 7, scope: !4023)
!4155 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !4156)
!4156 = distinct !DILocation(line: 3367, column: 7, scope: !4023)
!4157 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !4156)
!4158 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !4159)
!4159 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !4156)
!4160 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !4159)
!4161 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !4159)
!4162 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !4159)
!4163 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !4159)
!4164 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !4159)
!4165 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !4159)
!4166 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !4159)
!4167 = !DILocation(line: 3368, column: 7, scope: !4023)
!4168 = !DILocalVariable(name: "select_cb", arg: 1, scope: !4169, file: !3, line: 2769, type: !238)
!4169 = distinct !DISubprogram(name: "lwip_link_select_cb", scope: !3, file: !3, line: 2769, type: !4170, isLocal: true, isDefinition: true, scopeLine: 2770, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4172)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{null, !238}
!4172 = !{!4168}
!4173 = !DILocation(line: 2769, column: 44, scope: !4169, inlinedAt: !4174)
!4174 = distinct !DILocation(line: 3372, column: 5, scope: !4004)
!4175 = !DILocation(line: 2774, column: 3, scope: !4169, inlinedAt: !4174)
!4176 = !DILocation(line: 2777, column: 21, scope: !4169, inlinedAt: !4174)
!4177 = !DILocation(line: 2777, column: 19, scope: !4169, inlinedAt: !4174)
!4178 = !{!4117, !1408, i64 0}
!4179 = !DILocation(line: 2778, column: 22, scope: !4180, inlinedAt: !4174)
!4180 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 2778, column: 7)
!4181 = !DILocation(line: 2778, column: 7, scope: !4169, inlinedAt: !4174)
!4182 = !DILocation(line: 2779, column: 21, scope: !4183, inlinedAt: !4174)
!4183 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 2778, column: 31)
!4184 = !DILocation(line: 2779, column: 26, scope: !4183, inlinedAt: !4174)
!4185 = !{!4117, !1408, i64 8}
!4186 = !DILocation(line: 2780, column: 3, scope: !4183, inlinedAt: !4174)
!4187 = !DILocation(line: 2781, column: 18, scope: !4169, inlinedAt: !4174)
!4188 = !DILocation(line: 2788, column: 3, scope: !4169, inlinedAt: !4174)
!4189 = !DILocation(line: 2789, column: 1, scope: !4169, inlinedAt: !4174)
!4190 = !DILocation(line: 3377, column: 14, scope: !4004)
!4191 = !DILocation(line: 3379, column: 10, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3379, column: 9)
!4193 = !DILocation(line: 3379, column: 9, scope: !4004)
!4194 = !DILocation(line: 3381, column: 19, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 3381, column: 11)
!4196 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 3379, column: 18)
!4197 = !DILocation(line: 3381, column: 11, scope: !4196)
!4198 = !DILocation(line: 0, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 3386, column: 9)
!4200 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 3384, column: 14)
!4201 = !DILocation(line: 3321, column: 9, scope: !3984)
!4202 = !DILocation(line: 0, scope: !4200)
!4203 = !DILocation(line: 3389, column: 17, scope: !4196)
!4204 = !DILocation(line: 3393, column: 5, scope: !4196)
!4205 = !DILocation(line: 3397, column: 14, scope: !4004)
!4206 = !DILocation(line: 3399, column: 5, scope: !4004)
!4207 = !DILocation(line: 3407, column: 5, scope: !4004)
!4208 = !DILocation(line: 3409, column: 5, scope: !4004)
!4209 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !4210)
!4210 = distinct !DILocation(line: 3409, column: 5, scope: !4004)
!4211 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !4210)
!4212 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !4213)
!4213 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !4210)
!4214 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !4213)
!4215 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !4213)
!4216 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !4213)
!4217 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !4213)
!4218 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !4213)
!4219 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !4213)
!4220 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !4213)
!4221 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !4210)
!4222 = !DILocation(line: 3411, column: 16, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4004, file: !3, line: 3411, column: 9)
!4224 = !DILocation(line: 3411, column: 9, scope: !4004)
!4225 = !DILocation(line: 0, scope: !4004)
!4226 = !DILocation(line: 0, scope: !4008)
!4227 = !DILocation(line: 0, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 3346, column: 23)
!4229 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4230)
!4230 = distinct !DILocation(line: 3427, column: 3, scope: !4029)
!4231 = !DILocation(line: 3335, column: 10, scope: !3984)
!4232 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4230)
!4233 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4230)
!4234 = !DILocation(line: 3427, column: 3, scope: !4029)
!4235 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4236)
!4236 = distinct !DILocation(line: 3427, column: 3, scope: !4029)
!4237 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4236)
!4238 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4236)
!4239 = !DILocation(line: 3427, column: 3, scope: !4030)
!4240 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !4241)
!4241 = distinct !DILocation(line: 3427, column: 3, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 3427, column: 3)
!4243 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !4241)
!4244 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !4241)
!4245 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !4241)
!4246 = !DILocation(line: 3427, column: 3, scope: !4242)
!4247 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4248)
!4248 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4249)
!4249 = distinct !DILocation(line: 3427, column: 3, scope: !4026)
!4250 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4248)
!4251 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4248)
!4252 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4249)
!4253 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4249)
!4254 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4249)
!4255 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4249)
!4256 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4249)
!4257 = !DILocation(line: 3427, column: 3, scope: !4026)
!4258 = !{i32 -2144683229, i32 -2144683216, i32 -2144683191, i32 -2144683167, i32 -2144683142, i32 -2144683067, i32 -2144683042, i32 -2144682898, i32 -2144680682, i32 -2144680593, i32 -2144680472, i32 -2144680377, i32 -2144680276, i32 -2144680249, i32 -2144680166, i32 -2144680077, i32 -2144679956, i32 -2144679856, i32 -2144679750, i32 -2144679642, i32 -2144682610, i32 -2144682557, i32 -2144682526, i32 -2144682495, i32 -2144682474, i32 -2144682452, i32 -2144682403, i32 -2144682382, i32 -2144679559, i32 -2144679470, i32 -2144679349, i32 -2144679250, i32 -2144679144, i32 -2144679042, i32 -2144679009, i32 -2144678936, i32 -2144678868, i32 -2144682008, i32 -2144681955, i32 -2144681924, i32 -2144681893, i32 -2144681872, i32 -2144681850, i32 -2144681801, i32 -2144681780, i32 -2144678813, i32 -2144678724, i32 -2144678603, i32 -2144678504, i32 -2144678398, i32 -2144678296, i32 -2144678263, i32 -2144678180, i32 -2144678091, i32 -2144677970, i32 -2144677870, i32 -2144677844, i32 -2144677741, i32 -2144677715, i32 -2144681522, i32 -2144681455, i32 -2144681430, i32 -2144681366, i32 -2144681250, i32 -2144681225, i32 -2144681200}
!4259 = !DILocation(line: 3428, column: 3, scope: !3984)
!4260 = !DILocation(line: 3429, column: 1, scope: !3984)
!4261 = distinct !DISubprogram(name: "ppoll", scope: !3, file: !3, line: 601, type: !4262, isLocal: false, isDefinition: true, scopeLine: 603, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4268)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!80, !258, !265, !4264, !4266}
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !664)
!4268 = !{!4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276}
!4269 = !DILocalVariable(name: "fds", arg: 1, scope: !4261, file: !3, line: 601, type: !258)
!4270 = !DILocalVariable(name: "nfds", arg: 2, scope: !4261, file: !3, line: 601, type: !265)
!4271 = !DILocalVariable(name: "tmo_p", arg: 3, scope: !4261, file: !3, line: 601, type: !4264)
!4272 = !DILocalVariable(name: "sigmask", arg: 4, scope: !4261, file: !3, line: 602, type: !4266)
!4273 = !DILocalVariable(name: "origmask", scope: !4261, file: !3, line: 604, type: !664)
!4274 = !DILocalVariable(name: "timeout", scope: !4261, file: !3, line: 605, type: !80)
!4275 = !DILocalVariable(name: "rc", scope: !4261, file: !3, line: 605, type: !80)
!4276 = !DILocalVariable(name: "_rc", scope: !4261, file: !3, line: 605, type: !80)
!4277 = !DILocation(line: 601, column: 26, scope: !4261)
!4278 = !DILocation(line: 601, column: 38, scope: !4261)
!4279 = !DILocation(line: 601, column: 67, scope: !4261)
!4280 = !DILocation(line: 602, column: 19, scope: !4261)
!4281 = !DILocation(line: 604, column: 2, scope: !4261)
!4282 = !DILocation(line: 607, column: 7, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 607, column: 6)
!4284 = !DILocation(line: 607, column: 6, scope: !4261)
!4285 = !DILocation(line: 608, column: 3, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 607, column: 12)
!4287 = !DILocation(line: 608, column: 9, scope: !4286)
!4288 = !DILocation(line: 605, column: 15, scope: !4261)
!4289 = !DILocation(line: 610, column: 3, scope: !4286)
!4290 = !DILocation(line: 613, column: 19, scope: !4261)
!4291 = !DILocation(line: 613, column: 12, scope: !4261)
!4292 = !DILocation(line: 614, column: 11, scope: !4261)
!4293 = !{!4294, !1404, i64 0}
!4294 = !{!"timespec", !1404, i64 0, !1404, i64 8}
!4295 = !DILocation(line: 614, column: 18, scope: !4261)
!4296 = !DILocation(line: 614, column: 34, scope: !4261)
!4297 = !{!4294, !1404, i64 8}
!4298 = !DILocation(line: 614, column: 42, scope: !4261)
!4299 = !DILocation(line: 614, column: 25, scope: !4261)
!4300 = !DILocation(line: 604, column: 11, scope: !4261)
!4301 = !DILocation(line: 615, column: 7, scope: !4261)
!4302 = !DILocation(line: 616, column: 6, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 616, column: 6)
!4304 = !DILocation(line: 616, column: 6, scope: !4261)
!4305 = !DILocation(line: 605, column: 6, scope: !4261)
!4306 = !DILocation(line: 618, column: 7, scope: !4261)
!4307 = !DILocation(line: 619, column: 8, scope: !4261)
!4308 = !DILocation(line: 605, column: 19, scope: !4261)
!4309 = !DILocation(line: 620, column: 9, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 620, column: 6)
!4311 = !DILocation(line: 620, column: 21, scope: !4310)
!4312 = !DILocation(line: 620, column: 14, scope: !4310)
!4313 = !DILocation(line: 621, column: 3, scope: !4310)
!4314 = !DILocation(line: 0, scope: !4286)
!4315 = !DILocation(line: 624, column: 1, scope: !4261)
!4316 = !DILocation(line: 623, column: 2, scope: !4261)
!4317 = distinct !DISubprogram(name: "select", scope: !3, file: !3, line: 627, type: !4318, isLocal: false, isDefinition: true, scopeLine: 629, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4326)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!80, !80, !245, !245, !245, !4320}
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !931, line: 44, size: 128, elements: !4322)
!4322 = !{!4323, !4324}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4321, file: !931, line: 45, baseType: !934, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4321, file: !931, line: 46, baseType: !4325, size: 64, offset: 64)
!4325 = !DIDerivedType(tag: DW_TAG_typedef, name: "suseconds_t", file: !931, line: 39, baseType: !142)
!4326 = !{!4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4348, !4350, !4351, !4353, !4354, !4356, !4357, !4368, !4369, !4377, !4378, !4386, !4387, !4398, !4399, !4407, !4408, !4416}
!4327 = !DILocalVariable(name: "nfds", arg: 1, scope: !4317, file: !3, line: 627, type: !80)
!4328 = !DILocalVariable(name: "readfds", arg: 2, scope: !4317, file: !3, line: 627, type: !245)
!4329 = !DILocalVariable(name: "writefds", arg: 3, scope: !4317, file: !3, line: 627, type: !245)
!4330 = !DILocalVariable(name: "exceptfds", arg: 4, scope: !4317, file: !3, line: 627, type: !245)
!4331 = !DILocalVariable(name: "timeout", arg: 5, scope: !4317, file: !3, line: 628, type: !4320)
!4332 = !DILocalVariable(name: "nsecs", scope: !4317, file: !3, line: 630, type: !135)
!4333 = !DILocalVariable(name: "rd", scope: !4317, file: !3, line: 631, type: !246)
!4334 = !DILocalVariable(name: "wr", scope: !4317, file: !3, line: 631, type: !246)
!4335 = !DILocalVariable(name: "xc", scope: !4317, file: !3, line: 631, type: !246)
!4336 = !DILocalVariable(name: "i", scope: !4317, file: !3, line: 632, type: !80)
!4337 = !DILocalVariable(name: "ret", scope: !4317, file: !3, line: 632, type: !80)
!4338 = !DILocalVariable(name: "maxfd", scope: !4317, file: !3, line: 632, type: !80)
!4339 = !DILocalVariable(name: "file", scope: !4317, file: !3, line: 633, type: !1077)
!4340 = !DILocalVariable(name: "tid", scope: !4341, file: !3, line: 638, type: !170)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 638, column: 3)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 638, column: 3)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 638, column: 3)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 638, column: 3)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 638, column: 3)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 635, column: 36)
!4347 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 635, column: 6)
!4348 = !DILocalVariable(name: "__i", scope: !4349, file: !3, line: 643, type: !216)
!4349 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 643, column: 2)
!4350 = !DILocalVariable(name: "__tmp", scope: !4349, file: !3, line: 643, type: !144)
!4351 = !DILocalVariable(name: "__i", scope: !4352, file: !3, line: 644, type: !216)
!4352 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 644, column: 2)
!4353 = !DILocalVariable(name: "__tmp", scope: !4352, file: !3, line: 644, type: !144)
!4354 = !DILocalVariable(name: "__i", scope: !4355, file: !3, line: 645, type: !216)
!4355 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 645, column: 2)
!4356 = !DILocalVariable(name: "__tmp", scope: !4355, file: !3, line: 645, type: !144)
!4357 = !DILocalVariable(name: "tid", scope: !4358, file: !3, line: 649, type: !170)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 649, column: 4)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 649, column: 4)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 649, column: 4)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 649, column: 4)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 649, column: 4)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 648, column: 40)
!4364 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 648, column: 7)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 647, column: 29)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 647, column: 2)
!4367 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 647, column: 2)
!4368 = !DILocalVariable(name: "_ret", scope: !4358, file: !3, line: 649, type: !135)
!4369 = !DILocalVariable(name: "tid", scope: !4370, file: !3, line: 673, type: !170)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 673, column: 4)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 673, column: 4)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 673, column: 4)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 673, column: 4)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 673, column: 4)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 672, column: 42)
!4376 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 672, column: 7)
!4377 = !DILocalVariable(name: "_ret", scope: !4370, file: !3, line: 673, type: !135)
!4378 = !DILocalVariable(name: "tid", scope: !4379, file: !3, line: 697, type: !170)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 697, column: 4)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 697, column: 4)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 697, column: 4)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 697, column: 4)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 697, column: 4)
!4384 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 696, column: 44)
!4385 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 696, column: 7)
!4386 = !DILocalVariable(name: "_ret", scope: !4379, file: !3, line: 697, type: !135)
!4387 = !DILocalVariable(name: "tid", scope: !4388, file: !3, line: 736, type: !170)
!4388 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 736, column: 4)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 736, column: 4)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 736, column: 4)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 736, column: 4)
!4392 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 736, column: 4)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 732, column: 40)
!4394 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 732, column: 7)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 731, column: 29)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 731, column: 2)
!4397 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 731, column: 2)
!4398 = !DILocalVariable(name: "_ret", scope: !4388, file: !3, line: 736, type: !135)
!4399 = !DILocalVariable(name: "tid", scope: !4400, file: !3, line: 746, type: !170)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 746, column: 4)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 746, column: 4)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 746, column: 4)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 746, column: 4)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 746, column: 4)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 742, column: 42)
!4406 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 742, column: 7)
!4407 = !DILocalVariable(name: "_ret", scope: !4400, file: !3, line: 746, type: !135)
!4408 = !DILocalVariable(name: "tid", scope: !4409, file: !3, line: 756, type: !170)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 756, column: 4)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 756, column: 4)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 756, column: 4)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 756, column: 4)
!4413 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 756, column: 4)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 752, column: 44)
!4415 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 752, column: 7)
!4416 = !DILocalVariable(name: "_ret", scope: !4409, file: !3, line: 756, type: !135)
!4417 = !DILocation(line: 627, column: 16, scope: !4317)
!4418 = !DILocation(line: 627, column: 30, scope: !4317)
!4419 = !DILocation(line: 627, column: 47, scope: !4317)
!4420 = !DILocation(line: 627, column: 65, scope: !4317)
!4421 = !DILocation(line: 628, column: 19, scope: !4317)
!4422 = !DILocation(line: 631, column: 2, scope: !4317)
!4423 = !DILocation(line: 633, column: 2, scope: !4317)
!4424 = !DILocation(line: 635, column: 11, scope: !4347)
!4425 = !DILocation(line: 635, column: 27, scope: !4347)
!4426 = !DILocation(line: 635, column: 16, scope: !4347)
!4427 = !DILocation(line: 636, column: 20, scope: !4346)
!4428 = !{!4429, !1404, i64 0}
!4429 = !{!"timeval", !1404, i64 0, !1404, i64 8}
!4430 = !DILocation(line: 636, column: 27, scope: !4346)
!4431 = !DILocation(line: 630, column: 11, scope: !4317)
!4432 = !DILocation(line: 637, column: 21, scope: !4346)
!4433 = !{!4429, !1404, i64 8}
!4434 = !DILocation(line: 637, column: 29, scope: !4346)
!4435 = !DILocation(line: 637, column: 9, scope: !4346)
!4436 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4437)
!4437 = distinct !DILocation(line: 638, column: 3, scope: !4344)
!4438 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4437)
!4439 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4437)
!4440 = !DILocation(line: 638, column: 3, scope: !4344)
!4441 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4442)
!4442 = distinct !DILocation(line: 638, column: 3, scope: !4344)
!4443 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4442)
!4444 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4442)
!4445 = !DILocation(line: 638, column: 3, scope: !4345)
!4446 = !DILocation(line: 638, column: 3, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 638, column: 3)
!4448 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4449)
!4449 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4450)
!4450 = distinct !DILocation(line: 638, column: 3, scope: !4341)
!4451 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4449)
!4452 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4449)
!4453 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4450)
!4454 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4450)
!4455 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4450)
!4456 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4450)
!4457 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4450)
!4458 = !DILocation(line: 638, column: 3, scope: !4341)
!4459 = !{i32 -2145613168, i32 -2145613155, i32 -2145613130, i32 -2145613106, i32 -2145613081, i32 -2145613006, i32 -2145612981, i32 -2145612837, i32 -2145610613, i32 -2145610524, i32 -2145610403, i32 -2145610308, i32 -2145610207, i32 -2145610180, i32 -2145610097, i32 -2145610008, i32 -2145609887, i32 -2145609787, i32 -2145609681, i32 -2145609573, i32 -2145612549, i32 -2145612496, i32 -2145612465, i32 -2145612434, i32 -2145612413, i32 -2145612391, i32 -2145612342, i32 -2145612321, i32 -2145609490, i32 -2145609401, i32 -2145609280, i32 -2145609181, i32 -2145609075, i32 -2145608973, i32 -2145608940, i32 -2145608867, i32 -2145608799, i32 -2145611947, i32 -2145611894, i32 -2145611863, i32 -2145611832, i32 -2145611811, i32 -2145611789, i32 -2145611740, i32 -2145611719, i32 -2145608742, i32 -2145608653, i32 -2145608532, i32 -2145608433, i32 -2145608327, i32 -2145608225, i32 -2145608192, i32 -2145608109, i32 -2145608020, i32 -2145607899, i32 -2145607799, i32 -2145607773, i32 -2145607670, i32 -2145607644, i32 -2145611461, i32 -2145611394, i32 -2145611369, i32 -2145611305, i32 -2145611189, i32 -2145611164, i32 -2145611139}
!4460 = !DILocation(line: 639, column: 3, scope: !4346)
!4461 = !DILocation(line: 643, column: 2, scope: !4349)
!4462 = !DILocation(line: 643, column: 2, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 643, column: 2)
!4464 = !DILocation(line: 643, column: 2, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 643, column: 2)
!4466 = !DILocation(line: 644, column: 2, scope: !4352)
!4467 = !DILocation(line: 644, column: 2, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 644, column: 2)
!4469 = !DILocation(line: 644, column: 2, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 644, column: 2)
!4471 = !DILocation(line: 645, column: 2, scope: !4355)
!4472 = !DILocation(line: 645, column: 2, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 645, column: 2)
!4474 = !DILocation(line: 645, column: 2, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 645, column: 2)
!4476 = !DILocation(line: 632, column: 14, scope: !4317)
!4477 = !DILocation(line: 632, column: 6, scope: !4317)
!4478 = !DILocation(line: 647, column: 7, scope: !4367)
!4479 = !DILocation(line: 647, column: 16, scope: !4366)
!4480 = !DILocation(line: 647, column: 2, scope: !4367)
!4481 = !DILocation(line: 648, column: 15, scope: !4364)
!4482 = !DILocation(line: 648, column: 18, scope: !4364)
!4483 = !DILocation(line: 648, column: 7, scope: !4365)
!4484 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4485)
!4485 = distinct !DILocation(line: 649, column: 4, scope: !4361)
!4486 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4485)
!4487 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4485)
!4488 = !DILocation(line: 649, column: 4, scope: !4361)
!4489 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4490)
!4490 = distinct !DILocation(line: 649, column: 4, scope: !4361)
!4491 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4490)
!4492 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4490)
!4493 = !DILocation(line: 649, column: 4, scope: !4362)
!4494 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !4495)
!4495 = distinct !DILocation(line: 649, column: 4, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 649, column: 4)
!4497 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !4495)
!4498 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !4495)
!4499 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !4495)
!4500 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !4495)
!4501 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !4495)
!4502 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !4495)
!4503 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !4495)
!4504 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !4495)
!4505 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !4495)
!4506 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !4495)
!4507 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !4495)
!4508 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !4495)
!4509 = !DILocation(line: 0, scope: !2856, inlinedAt: !4495)
!4510 = !DILocation(line: 0, scope: !4496)
!4511 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !4495)
!4512 = !DILocation(line: 633, column: 24, scope: !4317)
!4513 = !DILocation(line: 649, column: 4, scope: !4496)
!4514 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4515)
!4515 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4516)
!4516 = distinct !DILocation(line: 649, column: 4, scope: !4358)
!4517 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4515)
!4518 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4515)
!4519 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4516)
!4520 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4516)
!4521 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4516)
!4522 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4516)
!4523 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4516)
!4524 = !DILocation(line: 649, column: 4, scope: !4358)
!4525 = !{i32 -2145605077, i32 -2145605064, i32 -2145605039, i32 -2145605015, i32 -2145604990, i32 -2145604915, i32 -2145604890, i32 -2145604746, i32 -2145601614, i32 -2145601525, i32 -2145601404, i32 -2145601309, i32 -2145601208, i32 -2145601181, i32 -2145601098, i32 -2145601009, i32 -2145600888, i32 -2145600788, i32 -2145600682, i32 -2145600574, i32 -2145604458, i32 -2145604405, i32 -2145604374, i32 -2145604343, i32 -2145604322, i32 -2145604300, i32 -2145604251, i32 -2145604230, i32 -2145600491, i32 -2145600402, i32 -2145600281, i32 -2145600182, i32 -2145600076, i32 -2145599974, i32 -2145599941, i32 -2145599868, i32 -2145599800, i32 -2145603926, i32 -2145603867, i32 -2145603814, i32 -2145603783, i32 -2145603752, i32 -2145603731, i32 -2145603709, i32 -2145603660, i32 -2145603639, i32 -2145599747, i32 -2145599658, i32 -2145599537, i32 -2145599438, i32 -2145599332, i32 -2145599230, i32 -2145599197, i32 -2145599114, i32 -2145599025, i32 -2145598904, i32 -2145598804, i32 -2145598778, i32 -2145598675, i32 -2145598649, i32 -2145603381, i32 -2145603314, i32 -2145603289, i32 -2145603225, i32 -2145603143, i32 -2145603120, i32 -2145603095, i32 -2145603070}
!4526 = !DILocation(line: 649, column: 4, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 649, column: 4)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 649, column: 4)
!4529 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 649, column: 4)
!4530 = !{i32 -2145601882, i32 -2145601866}
!4531 = !DILocation(line: 651, column: 8, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 651, column: 8)
!4533 = !DILocation(line: 651, column: 8, scope: !4363)
!4534 = !DILocation(line: 654, column: 9, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 654, column: 9)
!4536 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 651, column: 24)
!4537 = !DILocation(line: 654, column: 23, scope: !4535)
!4538 = !DILocation(line: 654, column: 9, scope: !4536)
!4539 = !DILocation(line: 655, column: 6, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 654, column: 34)
!4541 = !DILocation(line: 656, column: 6, scope: !4540)
!4542 = !DILocation(line: 667, column: 22, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 667, column: 8)
!4544 = !DILocation(line: 667, column: 14, scope: !4543)
!4545 = !DILocation(line: 667, column: 8, scope: !4363)
!4546 = !DILocation(line: 668, column: 5, scope: !4543)
!4547 = !DILocation(line: 0, scope: !4317)
!4548 = !DILocation(line: 669, column: 4, scope: !4363)
!4549 = !DILocation(line: 670, column: 27, scope: !4363)
!4550 = !DILocation(line: 670, column: 4, scope: !4363)
!4551 = !DILocation(line: 671, column: 3, scope: !4363)
!4552 = !DILocation(line: 672, column: 16, scope: !4376)
!4553 = !DILocation(line: 672, column: 19, scope: !4376)
!4554 = !DILocation(line: 672, column: 7, scope: !4365)
!4555 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4556)
!4556 = distinct !DILocation(line: 673, column: 4, scope: !4373)
!4557 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4556)
!4558 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4556)
!4559 = !DILocation(line: 673, column: 4, scope: !4373)
!4560 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4561)
!4561 = distinct !DILocation(line: 673, column: 4, scope: !4373)
!4562 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4561)
!4563 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4561)
!4564 = !DILocation(line: 673, column: 4, scope: !4374)
!4565 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !4566)
!4566 = distinct !DILocation(line: 673, column: 4, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 673, column: 4)
!4568 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !4566)
!4569 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !4566)
!4570 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !4566)
!4571 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !4566)
!4572 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !4566)
!4573 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !4566)
!4574 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !4566)
!4575 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !4566)
!4576 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !4566)
!4577 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !4566)
!4578 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !4566)
!4579 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !4566)
!4580 = !DILocation(line: 0, scope: !2856, inlinedAt: !4566)
!4581 = !DILocation(line: 0, scope: !4567)
!4582 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !4566)
!4583 = !DILocation(line: 673, column: 4, scope: !4567)
!4584 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4585)
!4585 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4586)
!4586 = distinct !DILocation(line: 673, column: 4, scope: !4370)
!4587 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4585)
!4588 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4585)
!4589 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4586)
!4590 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4586)
!4591 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4586)
!4592 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4586)
!4593 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4586)
!4594 = !DILocation(line: 673, column: 4, scope: !4370)
!4595 = !{i32 -2145596198, i32 -2145596185, i32 -2145596160, i32 -2145596136, i32 -2145596111, i32 -2145596036, i32 -2145596011, i32 -2145595867, i32 -2145592735, i32 -2145592646, i32 -2145592525, i32 -2145592430, i32 -2145592329, i32 -2145592302, i32 -2145592219, i32 -2145592130, i32 -2145592009, i32 -2145591909, i32 -2145591803, i32 -2145591695, i32 -2145595579, i32 -2145595526, i32 -2145595495, i32 -2145595464, i32 -2145595443, i32 -2145595421, i32 -2145595372, i32 -2145595351, i32 -2145591612, i32 -2145591523, i32 -2145591402, i32 -2145591303, i32 -2145591197, i32 -2145591095, i32 -2145591062, i32 -2145590989, i32 -2145590921, i32 -2145595047, i32 -2145594988, i32 -2145594935, i32 -2145594904, i32 -2145594873, i32 -2145594852, i32 -2145594830, i32 -2145594781, i32 -2145594760, i32 -2145590868, i32 -2145590779, i32 -2145590658, i32 -2145590559, i32 -2145590453, i32 -2145590351, i32 -2145590318, i32 -2145590235, i32 -2145590146, i32 -2145590025, i32 -2145589925, i32 -2145589899, i32 -2145589796, i32 -2145589770, i32 -2145594502, i32 -2145594435, i32 -2145594410, i32 -2145594346, i32 -2145594264, i32 -2145594241, i32 -2145594216, i32 -2145594191}
!4596 = !DILocation(line: 673, column: 4, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 673, column: 4)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 673, column: 4)
!4599 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 673, column: 4)
!4600 = !{i32 -2145593003, i32 -2145592987}
!4601 = !DILocation(line: 675, column: 8, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 675, column: 8)
!4603 = !DILocation(line: 675, column: 8, scope: !4375)
!4604 = !DILocation(line: 678, column: 9, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 678, column: 9)
!4606 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 675, column: 24)
!4607 = !DILocation(line: 678, column: 23, scope: !4605)
!4608 = !DILocation(line: 678, column: 9, scope: !4606)
!4609 = !DILocation(line: 679, column: 6, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4605, file: !3, line: 678, column: 34)
!4611 = !DILocation(line: 680, column: 6, scope: !4610)
!4612 = !DILocation(line: 691, column: 22, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 691, column: 8)
!4614 = !DILocation(line: 691, column: 14, scope: !4613)
!4615 = !DILocation(line: 691, column: 8, scope: !4375)
!4616 = !DILocation(line: 692, column: 5, scope: !4613)
!4617 = !DILocation(line: 0, scope: !4543)
!4618 = !DILocation(line: 693, column: 4, scope: !4375)
!4619 = !DILocation(line: 694, column: 27, scope: !4375)
!4620 = !DILocation(line: 694, column: 4, scope: !4375)
!4621 = !DILocation(line: 695, column: 3, scope: !4375)
!4622 = !DILocation(line: 696, column: 17, scope: !4385)
!4623 = !DILocation(line: 696, column: 20, scope: !4385)
!4624 = !DILocation(line: 696, column: 7, scope: !4365)
!4625 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4626)
!4626 = distinct !DILocation(line: 697, column: 4, scope: !4382)
!4627 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4626)
!4628 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4626)
!4629 = !DILocation(line: 697, column: 4, scope: !4382)
!4630 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4631)
!4631 = distinct !DILocation(line: 697, column: 4, scope: !4382)
!4632 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4631)
!4633 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4631)
!4634 = !DILocation(line: 697, column: 4, scope: !4383)
!4635 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !4636)
!4636 = distinct !DILocation(line: 697, column: 4, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4382, file: !3, line: 697, column: 4)
!4638 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !4636)
!4639 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !4636)
!4640 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !4636)
!4641 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !4636)
!4642 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !4636)
!4643 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !4636)
!4644 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !4636)
!4645 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !4636)
!4646 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !4636)
!4647 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !4636)
!4648 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !4636)
!4649 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !4636)
!4650 = !DILocation(line: 0, scope: !2856, inlinedAt: !4636)
!4651 = !DILocation(line: 0, scope: !4637)
!4652 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !4636)
!4653 = !DILocation(line: 697, column: 4, scope: !4637)
!4654 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4655)
!4655 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4656)
!4656 = distinct !DILocation(line: 697, column: 4, scope: !4379)
!4657 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4655)
!4658 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4655)
!4659 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4656)
!4660 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4656)
!4661 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4656)
!4662 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4656)
!4663 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4656)
!4664 = !DILocation(line: 697, column: 4, scope: !4379)
!4665 = !{i32 -2145587317, i32 -2145587304, i32 -2145587279, i32 -2145587255, i32 -2145587230, i32 -2145587155, i32 -2145587130, i32 -2145586986, i32 -2145583854, i32 -2145583765, i32 -2145583644, i32 -2145583549, i32 -2145583448, i32 -2145583421, i32 -2145579277, i32 -2145579188, i32 -2145579067, i32 -2145578967, i32 -2145578861, i32 -2145578753, i32 -2145586698, i32 -2145586645, i32 -2145586614, i32 -2145586583, i32 -2145586562, i32 -2145586540, i32 -2145586491, i32 -2145586470, i32 -2145578670, i32 -2145578581, i32 -2145578460, i32 -2145578361, i32 -2145578255, i32 -2145578153, i32 -2145578120, i32 -2145578047, i32 -2145577979, i32 -2145586166, i32 -2145586107, i32 -2145586054, i32 -2145586023, i32 -2145585992, i32 -2145585971, i32 -2145585949, i32 -2145585900, i32 -2145585879, i32 -2145577926, i32 -2145577837, i32 -2145577716, i32 -2145577617, i32 -2145577511, i32 -2145577409, i32 -2145577376, i32 -2145577293, i32 -2145577204, i32 -2145577083, i32 -2145576983, i32 -2145576957, i32 -2145576854, i32 -2145576828, i32 -2145585621, i32 -2145585554, i32 -2145585529, i32 -2145585465, i32 -2145585383, i32 -2145585360, i32 -2145585335, i32 -2145585310}
!4666 = !DILocation(line: 697, column: 4, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 697, column: 4)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 697, column: 4)
!4669 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 697, column: 4)
!4670 = !{i32 -2145584122, i32 -2145584106}
!4671 = !DILocation(line: 699, column: 8, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 699, column: 8)
!4673 = !DILocation(line: 699, column: 8, scope: !4384)
!4674 = !DILocation(line: 702, column: 9, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 702, column: 9)
!4676 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 699, column: 24)
!4677 = !DILocation(line: 702, column: 23, scope: !4675)
!4678 = !DILocation(line: 702, column: 9, scope: !4676)
!4679 = !DILocation(line: 703, column: 6, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 702, column: 34)
!4681 = !DILocation(line: 704, column: 6, scope: !4680)
!4682 = !DILocation(line: 715, column: 22, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 715, column: 8)
!4684 = !DILocation(line: 715, column: 14, scope: !4683)
!4685 = !DILocation(line: 715, column: 8, scope: !4384)
!4686 = !DILocation(line: 716, column: 5, scope: !4683)
!4687 = !DILocation(line: 0, scope: !4613)
!4688 = !DILocation(line: 717, column: 4, scope: !4384)
!4689 = !DILocation(line: 718, column: 27, scope: !4384)
!4690 = !DILocation(line: 718, column: 4, scope: !4384)
!4691 = !DILocation(line: 719, column: 3, scope: !4384)
!4692 = !DILocation(line: 647, column: 25, scope: !4366)
!4693 = !DILocation(line: 647, column: 2, scope: !4366)
!4694 = distinct !{!4694, !4480, !4695}
!4695 = !DILocation(line: 720, column: 2, scope: !4367)
!4696 = !DILocation(line: 646, column: 8, scope: !4317)
!4697 = !DILocation(line: 722, column: 25, scope: !4317)
!4698 = !DILocation(line: 631, column: 9, scope: !4317)
!4699 = !DILocation(line: 631, column: 13, scope: !4317)
!4700 = !DILocation(line: 631, column: 17, scope: !4317)
!4701 = !DILocation(line: 722, column: 8, scope: !4317)
!4702 = !DILocation(line: 632, column: 9, scope: !4317)
!4703 = !DILocation(line: 723, column: 10, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 723, column: 6)
!4705 = !DILocation(line: 723, column: 6, scope: !4317)
!4706 = !DILocation(line: 731, column: 7, scope: !4397)
!4707 = !DILocation(line: 731, column: 2, scope: !4397)
!4708 = !DILocation(line: 732, column: 15, scope: !4394)
!4709 = !DILocation(line: 732, column: 18, scope: !4394)
!4710 = !DILocation(line: 732, column: 7, scope: !4395)
!4711 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4712)
!4712 = distinct !DILocation(line: 736, column: 4, scope: !4391)
!4713 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4712)
!4714 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4712)
!4715 = !DILocation(line: 736, column: 4, scope: !4391)
!4716 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4717)
!4717 = distinct !DILocation(line: 736, column: 4, scope: !4391)
!4718 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4717)
!4719 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4717)
!4720 = !DILocation(line: 736, column: 4, scope: !4392)
!4721 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !4722)
!4722 = distinct !DILocation(line: 736, column: 4, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 736, column: 4)
!4724 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !4722)
!4725 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !4722)
!4726 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !4722)
!4727 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !4722)
!4728 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !4722)
!4729 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !4722)
!4730 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !4722)
!4731 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !4722)
!4732 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !4722)
!4733 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !4722)
!4734 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !4722)
!4735 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !4722)
!4736 = !DILocation(line: 0, scope: !2856, inlinedAt: !4722)
!4737 = !DILocation(line: 0, scope: !4723)
!4738 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !4722)
!4739 = !DILocation(line: 736, column: 4, scope: !4723)
!4740 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4741)
!4741 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4742)
!4742 = distinct !DILocation(line: 736, column: 4, scope: !4388)
!4743 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4741)
!4744 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4741)
!4745 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4742)
!4746 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4742)
!4747 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4742)
!4748 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4742)
!4749 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4742)
!4750 = !DILocation(line: 736, column: 4, scope: !4388)
!4751 = !{i32 -2145574376, i32 -2145574363, i32 -2145574338, i32 -2145574314, i32 -2145574289, i32 -2145574214, i32 -2145574189, i32 -2145574045, i32 -2145570913, i32 -2145570824, i32 -2145570703, i32 -2145570608, i32 -2145570507, i32 -2145570480, i32 -2145570397, i32 -2145570308, i32 -2145570187, i32 -2145570087, i32 -2145569981, i32 -2145569873, i32 -2145573757, i32 -2145573704, i32 -2145573673, i32 -2145573642, i32 -2145573621, i32 -2145573599, i32 -2145573550, i32 -2145573529, i32 -2145569790, i32 -2145569701, i32 -2145569580, i32 -2145569481, i32 -2145569375, i32 -2145569273, i32 -2145569240, i32 -2145569167, i32 -2145569099, i32 -2145573225, i32 -2145573166, i32 -2145573113, i32 -2145573082, i32 -2145573051, i32 -2145573030, i32 -2145573008, i32 -2145572959, i32 -2145572938, i32 -2145569046, i32 -2145568957, i32 -2145568836, i32 -2145568737, i32 -2145568631, i32 -2145568529, i32 -2145568496, i32 -2145568413, i32 -2145568324, i32 -2145568203, i32 -2145568103, i32 -2145568077, i32 -2145567974, i32 -2145567948, i32 -2145572680, i32 -2145572613, i32 -2145572588, i32 -2145572524, i32 -2145572442, i32 -2145572419, i32 -2145572394, i32 -2145572369}
!4752 = !DILocation(line: 736, column: 4, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 736, column: 4)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 736, column: 4)
!4755 = distinct !DILexicalBlock(scope: !4388, file: !3, line: 736, column: 4)
!4756 = !{i32 -2145571181, i32 -2145571165}
!4757 = !DILocation(line: 738, column: 9, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 738, column: 8)
!4759 = !DILocation(line: 738, column: 8, scope: !4393)
!4760 = !DILocation(line: 739, column: 5, scope: !4758)
!4761 = !DILocation(line: 740, column: 27, scope: !4393)
!4762 = !DILocation(line: 740, column: 4, scope: !4393)
!4763 = !DILocation(line: 741, column: 3, scope: !4393)
!4764 = !DILocation(line: 742, column: 16, scope: !4406)
!4765 = !DILocation(line: 742, column: 19, scope: !4406)
!4766 = !DILocation(line: 742, column: 7, scope: !4395)
!4767 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4768)
!4768 = distinct !DILocation(line: 746, column: 4, scope: !4403)
!4769 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4768)
!4770 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4768)
!4771 = !DILocation(line: 746, column: 4, scope: !4403)
!4772 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4773)
!4773 = distinct !DILocation(line: 746, column: 4, scope: !4403)
!4774 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4773)
!4775 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4773)
!4776 = !DILocation(line: 746, column: 4, scope: !4404)
!4777 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !4778)
!4778 = distinct !DILocation(line: 746, column: 4, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 746, column: 4)
!4780 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !4778)
!4781 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !4778)
!4782 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !4778)
!4783 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !4778)
!4784 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !4778)
!4785 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !4778)
!4786 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !4778)
!4787 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !4778)
!4788 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !4778)
!4789 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !4778)
!4790 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !4778)
!4791 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !4778)
!4792 = !DILocation(line: 0, scope: !2856, inlinedAt: !4778)
!4793 = !DILocation(line: 0, scope: !4779)
!4794 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !4778)
!4795 = !DILocation(line: 746, column: 4, scope: !4779)
!4796 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4797)
!4797 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4798)
!4798 = distinct !DILocation(line: 746, column: 4, scope: !4400)
!4799 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4797)
!4800 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4797)
!4801 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4798)
!4802 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4798)
!4803 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4798)
!4804 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4798)
!4805 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4798)
!4806 = !DILocation(line: 746, column: 4, scope: !4400)
!4807 = !{i32 -2145565615, i32 -2145565602, i32 -2145565577, i32 -2145565553, i32 -2145565528, i32 -2145565453, i32 -2145565428, i32 -2145565284, i32 -2145562152, i32 -2145562063, i32 -2145561942, i32 -2145561847, i32 -2145561746, i32 -2145561719, i32 -2145561636, i32 -2145561547, i32 -2145561426, i32 -2145561326, i32 -2145561220, i32 -2145561112, i32 -2145564996, i32 -2145564943, i32 -2145564912, i32 -2145564881, i32 -2145564860, i32 -2145564838, i32 -2145564789, i32 -2145564768, i32 -2145561029, i32 -2145560940, i32 -2145560819, i32 -2145560720, i32 -2145560614, i32 -2145560512, i32 -2145560479, i32 -2145560406, i32 -2145560338, i32 -2145564464, i32 -2145564405, i32 -2145564352, i32 -2145564321, i32 -2145564290, i32 -2145564269, i32 -2145564247, i32 -2145564198, i32 -2145564177, i32 -2145560285, i32 -2145560196, i32 -2145560075, i32 -2145559976, i32 -2145559870, i32 -2145559768, i32 -2145559735, i32 -2145559652, i32 -2145559563, i32 -2145559442, i32 -2145559342, i32 -2145559316, i32 -2145559213, i32 -2145559187, i32 -2145563919, i32 -2145563852, i32 -2145563827, i32 -2145563763, i32 -2145563681, i32 -2145563658, i32 -2145563633, i32 -2145563608}
!4808 = !DILocation(line: 746, column: 4, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 746, column: 4)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 746, column: 4)
!4811 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 746, column: 4)
!4812 = !{i32 -2145562420, i32 -2145562404}
!4813 = !DILocation(line: 748, column: 9, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 748, column: 8)
!4815 = !DILocation(line: 748, column: 8, scope: !4405)
!4816 = !DILocation(line: 749, column: 5, scope: !4814)
!4817 = !DILocation(line: 750, column: 27, scope: !4405)
!4818 = !DILocation(line: 750, column: 4, scope: !4405)
!4819 = !DILocation(line: 751, column: 3, scope: !4405)
!4820 = !DILocation(line: 752, column: 17, scope: !4415)
!4821 = !DILocation(line: 752, column: 20, scope: !4415)
!4822 = !DILocation(line: 752, column: 7, scope: !4395)
!4823 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4824)
!4824 = distinct !DILocation(line: 756, column: 4, scope: !4412)
!4825 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4824)
!4826 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4824)
!4827 = !DILocation(line: 756, column: 4, scope: !4412)
!4828 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4829)
!4829 = distinct !DILocation(line: 756, column: 4, scope: !4412)
!4830 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4829)
!4831 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4829)
!4832 = !DILocation(line: 756, column: 4, scope: !4413)
!4833 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !4834)
!4834 = distinct !DILocation(line: 756, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 756, column: 4)
!4836 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !4834)
!4837 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !4834)
!4838 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !4834)
!4839 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !4834)
!4840 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !4834)
!4841 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !4834)
!4842 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !4834)
!4843 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !4834)
!4844 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !4834)
!4845 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !4834)
!4846 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !4834)
!4847 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !4834)
!4848 = !DILocation(line: 0, scope: !2856, inlinedAt: !4834)
!4849 = !DILocation(line: 0, scope: !4835)
!4850 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !4834)
!4851 = !DILocation(line: 756, column: 4, scope: !4835)
!4852 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4853)
!4853 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !4854)
!4854 = distinct !DILocation(line: 756, column: 4, scope: !4409)
!4855 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4853)
!4856 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4853)
!4857 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !4854)
!4858 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !4854)
!4859 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !4854)
!4860 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !4854)
!4861 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !4854)
!4862 = !DILocation(line: 756, column: 4, scope: !4409)
!4863 = !{i32 -2145556852, i32 -2145556839, i32 -2145556814, i32 -2145556790, i32 -2145556765, i32 -2145556690, i32 -2145556665, i32 -2145556521, i32 -2145553389, i32 -2145553300, i32 -2145553179, i32 -2145553084, i32 -2145552983, i32 -2145552956, i32 -2145552873, i32 -2145552784, i32 -2145552663, i32 -2145552563, i32 -2145552457, i32 -2145552349, i32 -2145556233, i32 -2145556180, i32 -2145556149, i32 -2145556118, i32 -2145556097, i32 -2145556075, i32 -2145556026, i32 -2145556005, i32 -2145552266, i32 -2145552177, i32 -2145552056, i32 -2145551957, i32 -2145551851, i32 -2145551749, i32 -2145551716, i32 -2145551643, i32 -2145551575, i32 -2145555701, i32 -2145555642, i32 -2145555589, i32 -2145555558, i32 -2145555527, i32 -2145555506, i32 -2145555484, i32 -2145555435, i32 -2145555414, i32 -2145551522, i32 -2145551433, i32 -2145551312, i32 -2145551213, i32 -2145551107, i32 -2145551005, i32 -2145550972, i32 -2145550889, i32 -2145550800, i32 -2145550679, i32 -2145550579, i32 -2145550553, i32 -2145550450, i32 -2145550424, i32 -2145555156, i32 -2145555089, i32 -2145555064, i32 -2145555000, i32 -2145554918, i32 -2145554895, i32 -2145554870, i32 -2145554845}
!4864 = !DILocation(line: 756, column: 4, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 756, column: 4)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 756, column: 4)
!4867 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 756, column: 4)
!4868 = !{i32 -2145553657, i32 -2145553641}
!4869 = !DILocation(line: 758, column: 9, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 758, column: 8)
!4871 = !DILocation(line: 758, column: 8, scope: !4414)
!4872 = !DILocation(line: 759, column: 5, scope: !4870)
!4873 = !DILocation(line: 760, column: 27, scope: !4414)
!4874 = !DILocation(line: 760, column: 4, scope: !4414)
!4875 = !DILocation(line: 761, column: 3, scope: !4414)
!4876 = !DILocation(line: 731, column: 25, scope: !4396)
!4877 = !DILocation(line: 731, column: 2, scope: !4396)
!4878 = !DILocation(line: 731, column: 16, scope: !4396)
!4879 = distinct !{!4879, !4707, !4880}
!4880 = !DILocation(line: 762, column: 2, scope: !4397)
!4881 = !DILocation(line: 0, scope: !4346)
!4882 = !DILocation(line: 766, column: 1, scope: !4317)
!4883 = distinct !DISubprogram(name: "lwip_select", scope: !3, file: !3, line: 2962, type: !4318, isLocal: false, isDefinition: true, scopeLine: 2964, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4884)
!4884 = !{!4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4907, !4915, !4920, !4925, !4931, !4939, !4945, !4955, !4962, !4969, !4975, !4983}
!4885 = !DILocalVariable(name: "maxfdp1", arg: 1, scope: !4883, file: !3, line: 2962, type: !80)
!4886 = !DILocalVariable(name: "readset", arg: 2, scope: !4883, file: !3, line: 2962, type: !245)
!4887 = !DILocalVariable(name: "writeset", arg: 3, scope: !4883, file: !3, line: 2962, type: !245)
!4888 = !DILocalVariable(name: "exceptset", arg: 4, scope: !4883, file: !3, line: 2962, type: !245)
!4889 = !DILocalVariable(name: "timeout", arg: 5, scope: !4883, file: !3, line: 2963, type: !4320)
!4890 = !DILocalVariable(name: "waitres", scope: !4883, file: !3, line: 2965, type: !169)
!4891 = !DILocalVariable(name: "nready", scope: !4883, file: !3, line: 2966, type: !80)
!4892 = !DILocalVariable(name: "lreadset", scope: !4883, file: !3, line: 2967, type: !246)
!4893 = !DILocalVariable(name: "lwriteset", scope: !4883, file: !3, line: 2967, type: !246)
!4894 = !DILocalVariable(name: "lexceptset", scope: !4883, file: !3, line: 2967, type: !246)
!4895 = !DILocalVariable(name: "msectimeout", scope: !4883, file: !3, line: 2968, type: !169)
!4896 = !DILocalVariable(name: "i", scope: !4883, file: !3, line: 2969, type: !80)
!4897 = !DILocalVariable(name: "maxfdp2", scope: !4883, file: !3, line: 2970, type: !80)
!4898 = !DILocalVariable(name: "lev", scope: !4883, file: !3, line: 2977, type: !134)
!4899 = !DILocalVariable(name: "tid", scope: !4900, file: !3, line: 2985, type: !170)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !3, line: 2985, column: 5)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 2985, column: 5)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2985, column: 5)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 2985, column: 5)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 2985, column: 5)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 2984, column: 57)
!4906 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 2984, column: 7)
!4907 = !DILocalVariable(name: "tid", scope: !4908, file: !3, line: 2997, type: !170)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2997, column: 5)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 2997, column: 5)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2997, column: 5)
!4911 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 2997, column: 5)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 2997, column: 5)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2995, column: 19)
!4914 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 2995, column: 7)
!4915 = !DILocalVariable(name: "select_cb", scope: !4916, file: !3, line: 3015, type: !238)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 3009, column: 12)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 3005, column: 9)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 3003, column: 10)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 3000, column: 14)
!4920 = !DILocalVariable(name: "sockerr", scope: !4921, file: !3, line: 3016, type: !1007)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 3016, column: 7)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 3016, column: 7)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 3016, column: 7)
!4924 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3016, column: 7)
!4925 = !DILocalVariable(name: "tid", scope: !4926, file: !3, line: 3016, type: !170)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 3016, column: 7)
!4927 = distinct !DILexicalBlock(scope: !4928, file: !3, line: 3016, column: 7)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 3016, column: 7)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 3016, column: 7)
!4930 = distinct !DILexicalBlock(scope: !4921, file: !3, line: 3016, column: 7)
!4931 = !DILocalVariable(name: "tid", scope: !4932, file: !3, line: 3027, type: !170)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 3027, column: 9)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 3027, column: 9)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 3027, column: 9)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 3027, column: 9)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 3027, column: 9)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 3025, column: 76)
!4938 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3025, column: 11)
!4939 = !DILocalVariable(name: "sock", scope: !4940, file: !3, line: 3042, type: !1165)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 3041, column: 52)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 3039, column: 13)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !3, line: 3038, column: 54)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 3038, column: 7)
!4944 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3038, column: 7)
!4945 = !DILocalVariable(name: "tid", scope: !4946, file: !3, line: 3054, type: !170)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 3054, column: 15)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 3054, column: 15)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3054, column: 15)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 3054, column: 15)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 3054, column: 15)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 3047, column: 44)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 3047, column: 17)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 3045, column: 29)
!4954 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 3045, column: 15)
!4955 = !DILocalVariable(name: "tid", scope: !4956, file: !3, line: 3064, type: !170)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 3064, column: 13)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 3064, column: 13)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 3064, column: 13)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 3064, column: 13)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 3064, column: 13)
!4961 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 3059, column: 18)
!4962 = !DILocalVariable(name: "msecs_long", scope: !4963, file: !3, line: 3080, type: !142)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 3079, column: 18)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 3076, column: 15)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 3074, column: 22)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 3074, column: 13)
!4967 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 3070, column: 24)
!4968 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3070, column: 11)
!4969 = !DILocalVariable(name: "sock", scope: !4970, file: !3, line: 3101, type: !1165)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 3100, column: 52)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 3098, column: 13)
!4972 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 3097, column: 54)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 3097, column: 7)
!4974 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3097, column: 7)
!4975 = !DILocalVariable(name: "tid", scope: !4976, file: !3, line: 3116, type: !170)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 3116, column: 13)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 3116, column: 13)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 3116, column: 13)
!4979 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 3116, column: 13)
!4980 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 3116, column: 13)
!4981 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 3112, column: 18)
!4982 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 3104, column: 15)
!4983 = !DILocalVariable(name: "tid", scope: !4984, file: !3, line: 3153, type: !170)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 3153, column: 3)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 3153, column: 3)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 3153, column: 3)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 3153, column: 3)
!4988 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 3153, column: 3)
!4989 = !DILocation(line: 2962, column: 17, scope: !4883)
!4990 = !DILocation(line: 2962, column: 34, scope: !4883)
!4991 = !DILocation(line: 2962, column: 51, scope: !4883)
!4992 = !DILocation(line: 2962, column: 69, scope: !4883)
!4993 = !DILocation(line: 2963, column: 29, scope: !4883)
!4994 = !DILocation(line: 2965, column: 9, scope: !4883)
!4995 = !DILocation(line: 2967, column: 3, scope: !4883)
!4996 = !DILocation(line: 2984, column: 21, scope: !4906)
!4997 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !4998)
!4998 = distinct !DILocation(line: 2985, column: 5, scope: !4903)
!4999 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !4998)
!5000 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !4998)
!5001 = !DILocation(line: 2985, column: 5, scope: !4903)
!5002 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5003)
!5003 = distinct !DILocation(line: 2985, column: 5, scope: !4903)
!5004 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5003)
!5005 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5003)
!5006 = !DILocation(line: 2985, column: 5, scope: !4904)
!5007 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5008)
!5008 = distinct !DILocation(line: 2985, column: 5, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2985, column: 5)
!5010 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5008)
!5011 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5008)
!5012 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5008)
!5013 = !DILocation(line: 2985, column: 5, scope: !5009)
!5014 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5015)
!5015 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5016)
!5016 = distinct !DILocation(line: 2985, column: 5, scope: !4900)
!5017 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5015)
!5018 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5015)
!5019 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5016)
!5020 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5016)
!5021 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5016)
!5022 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5016)
!5023 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5016)
!5024 = !DILocation(line: 2985, column: 5, scope: !4900)
!5025 = !{i32 -2144778268, i32 -2144778255, i32 -2144778230, i32 -2144778206, i32 -2144778181, i32 -2144778106, i32 -2144778081, i32 -2144777937, i32 -2144775715, i32 -2144775626, i32 -2144775505, i32 -2144775410, i32 -2144775309, i32 -2144775282, i32 -2144775199, i32 -2144775110, i32 -2144774989, i32 -2144774889, i32 -2144774783, i32 -2144774675, i32 -2144777649, i32 -2144777596, i32 -2144777565, i32 -2144777534, i32 -2144777513, i32 -2144777491, i32 -2144777442, i32 -2144777421, i32 -2144774592, i32 -2144774503, i32 -2144774382, i32 -2144774283, i32 -2144774177, i32 -2144774075, i32 -2144774042, i32 -2144773969, i32 -2144773901, i32 -2144777047, i32 -2144776994, i32 -2144776963, i32 -2144776932, i32 -2144776911, i32 -2144776889, i32 -2144776840, i32 -2144776819, i32 -2144773846, i32 -2144773757, i32 -2144773636, i32 -2144773537, i32 -2144773431, i32 -2144773329, i32 -2144773296, i32 -2144773213, i32 -2144773124, i32 -2144773003, i32 -2144772903, i32 -2144772877, i32 -2144772774, i32 -2144772748, i32 -2144776561, i32 -2144776494, i32 -2144776469, i32 -2144776405, i32 -2144776289, i32 -2144776264, i32 -2144776239}
!5026 = !DILocation(line: 2967, column: 10, scope: !4883)
!5027 = !DILocation(line: 2967, column: 20, scope: !4883)
!5028 = !DILocation(line: 2967, column: 31, scope: !4883)
!5029 = !DILocation(line: 2993, column: 12, scope: !4883)
!5030 = !DILocation(line: 2966, column: 7, scope: !4883)
!5031 = !DILocation(line: 2995, column: 14, scope: !4914)
!5032 = !DILocation(line: 2995, column: 7, scope: !4883)
!5033 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5034)
!5034 = distinct !DILocation(line: 2997, column: 5, scope: !4911)
!5035 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5034)
!5036 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5034)
!5037 = !DILocation(line: 2997, column: 5, scope: !4911)
!5038 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5039)
!5039 = distinct !DILocation(line: 2997, column: 5, scope: !4911)
!5040 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5039)
!5041 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5039)
!5042 = !DILocation(line: 2997, column: 5, scope: !4912)
!5043 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5044)
!5044 = distinct !DILocation(line: 2997, column: 5, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2997, column: 5)
!5046 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5044)
!5047 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5044)
!5048 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5044)
!5049 = !DILocation(line: 2997, column: 5, scope: !5045)
!5050 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5051)
!5051 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5052)
!5052 = distinct !DILocation(line: 2997, column: 5, scope: !4908)
!5053 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5051)
!5054 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5051)
!5055 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5052)
!5056 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5052)
!5057 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5052)
!5058 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5052)
!5059 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5052)
!5060 = !DILocation(line: 2997, column: 5, scope: !4908)
!5061 = !{i32 -2144770844, i32 -2144770831, i32 -2144770806, i32 -2144770782, i32 -2144770757, i32 -2144770682, i32 -2144770657, i32 -2144770513, i32 -2144768293, i32 -2144768204, i32 -2144768083, i32 -2144767988, i32 -2144767887, i32 -2144767860, i32 -2144767777, i32 -2144767688, i32 -2144767567, i32 -2144767467, i32 -2144767361, i32 -2144767253, i32 -2144770225, i32 -2144770172, i32 -2144770141, i32 -2144770110, i32 -2144770089, i32 -2144770067, i32 -2144770018, i32 -2144769997, i32 -2144767170, i32 -2144767081, i32 -2144766960, i32 -2144766861, i32 -2144766755, i32 -2144766653, i32 -2144766620, i32 -2144766547, i32 -2144766479, i32 -2144769623, i32 -2144769570, i32 -2144769539, i32 -2144769508, i32 -2144769487, i32 -2144769465, i32 -2144769416, i32 -2144769395, i32 -2144766424, i32 -2144766335, i32 -2144766214, i32 -2144766115, i32 -2144766009, i32 -2144765907, i32 -2144765874, i32 -2144765791, i32 -2144765702, i32 -2144765581, i32 -2144765481, i32 -2144765455, i32 -2144765352, i32 -2144765326, i32 -2144769137, i32 -2144769070, i32 -2144769045, i32 -2144768981, i32 -2144768865, i32 -2144768840, i32 -2144768815}
!5062 = !DILocation(line: 3000, column: 21, scope: !4919)
!5063 = !DILocation(line: 3000, column: 14, scope: !4914)
!5064 = !DILocation(line: 3005, column: 9, scope: !4917)
!5065 = !DILocation(line: 3005, column: 17, scope: !4917)
!5066 = !DILocation(line: 3005, column: 29, scope: !4917)
!5067 = !DILocation(line: 3005, column: 36, scope: !4917)
!5068 = !DILocation(line: 3005, column: 41, scope: !4917)
!5069 = !DILocation(line: 3005, column: 53, scope: !4917)
!5070 = !DILocation(line: 3005, column: 61, scope: !4917)
!5071 = !DILocation(line: 3005, column: 9, scope: !4918)
!5072 = !DILocation(line: 3016, column: 7, scope: !4924)
!5073 = !DILocation(line: 157, column: 48, scope: !4054, inlinedAt: !5074)
!5074 = distinct !DILocation(line: 3016, column: 7, scope: !4924)
!5075 = !DILocation(line: 157, column: 58, scope: !4054, inlinedAt: !5074)
!5076 = !DILocation(line: 159, column: 6, scope: !4061, inlinedAt: !5074)
!5077 = !DILocation(line: 159, column: 6, scope: !4054, inlinedAt: !5074)
!5078 = !DILocation(line: 160, column: 3, scope: !4064, inlinedAt: !5074)
!5079 = !DILocation(line: 160, column: 9, scope: !4064, inlinedAt: !5074)
!5080 = !DILocation(line: 161, column: 3, scope: !4064, inlinedAt: !5074)
!5081 = !DILocation(line: 164, column: 1, scope: !4054, inlinedAt: !5074)
!5082 = !DILocation(line: 3015, column: 7, scope: !4916)
!5083 = !DILocation(line: 151, column: 51, scope: !4070, inlinedAt: !5084)
!5084 = distinct !DILocation(line: 163, column: 9, scope: !4054, inlinedAt: !5074)
!5085 = !DILocation(line: 151, column: 61, scope: !4070, inlinedAt: !5084)
!5086 = !DILocation(line: 153, column: 2, scope: !4077, inlinedAt: !5084)
!5087 = !DILocation(line: 154, column: 12, scope: !4070, inlinedAt: !5084)
!5088 = !DILocation(line: 154, column: 9, scope: !4070, inlinedAt: !5084)
!5089 = !DILocation(line: 154, column: 2, scope: !4070, inlinedAt: !5084)
!5090 = !DILocation(line: 163, column: 2, scope: !4054, inlinedAt: !5074)
!5091 = !DILocation(line: 3016, column: 7, scope: !4923)
!5092 = !DILocation(line: 3016, column: 7, scope: !4921)
!5093 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5094)
!5094 = distinct !DILocation(line: 3016, column: 7, scope: !4929)
!5095 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5094)
!5096 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5094)
!5097 = !DILocation(line: 3016, column: 7, scope: !4929)
!5098 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5099)
!5099 = distinct !DILocation(line: 3016, column: 7, scope: !4929)
!5100 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5099)
!5101 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5099)
!5102 = !DILocation(line: 3016, column: 7, scope: !4930)
!5103 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5104)
!5104 = distinct !DILocation(line: 3016, column: 7, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 3016, column: 7)
!5106 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5104)
!5107 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5104)
!5108 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5104)
!5109 = !DILocation(line: 3016, column: 7, scope: !5105)
!5110 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5111)
!5111 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5112)
!5112 = distinct !DILocation(line: 3016, column: 7, scope: !4926)
!5113 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5111)
!5114 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5111)
!5115 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5112)
!5116 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5112)
!5117 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5112)
!5118 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5112)
!5119 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5112)
!5120 = !DILocation(line: 3016, column: 7, scope: !4926)
!5121 = !{i32 -2144756917, i32 -2144756904, i32 -2144756879, i32 -2144756855, i32 -2144756830, i32 -2144756813, i32 -2144756788, i32 -2144756771, i32 -2144756748, i32 -2144756727, i32 -2144756693, i32 -2144756674, i32 -2144756652, i32 -2144756625, i32 -2144756602, i32 -2144756581, i32 -2144756547, i32 -2144756523, i32 -2144756498, i32 -2144756470, i32 -2144756461, i32 -2144756408, i32 -2144756377, i32 -2144756346, i32 -2144756325, i32 -2144756303, i32 -2144756254, i32 -2144756233, i32 -2144756210, i32 -2144756189, i32 -2144756155, i32 -2144756132, i32 -2144756107, i32 -2144756085, i32 -2144756052, i32 -2144756029, i32 -2144755992, i32 -2144755983, i32 -2144755930, i32 -2144755899, i32 -2144755868, i32 -2144755847, i32 -2144755825, i32 -2144755776, i32 -2144755755, i32 -2144755732, i32 -2144755711, i32 -2144755677, i32 -2144755654, i32 -2144755629, i32 -2144755607, i32 -2144755574, i32 -2144755551, i32 -2144755530, i32 -2144755496, i32 -2144755474, i32 -2144755448, i32 -2144755426, i32 -2144755400, i32 -2144755384, i32 -2144755368, i32 -2144755343, i32 -2144755328, i32 -2144755313, i32 -2144755288, i32 -2144755263}
!5122 = !DILocation(line: 3017, column: 7, scope: !4916)
!5123 = !DILocation(line: 3019, column: 40, scope: !4916)
!5124 = !DILocation(line: 3019, column: 48, scope: !4916)
!5125 = !{!4117, !1408, i64 16}
!5126 = !DILocation(line: 3020, column: 40, scope: !4916)
!5127 = !DILocation(line: 3020, column: 49, scope: !4916)
!5128 = !{!4117, !1408, i64 24}
!5129 = !DILocation(line: 3021, column: 40, scope: !4916)
!5130 = !DILocation(line: 3021, column: 50, scope: !4916)
!5131 = !{!4117, !1408, i64 32}
!5132 = !DILocation(line: 3025, column: 57, scope: !4938)
!5133 = !DILocation(line: 3025, column: 11, scope: !4938)
!5134 = !DILocation(line: 3025, column: 65, scope: !4938)
!5135 = !DILocation(line: 3025, column: 11, scope: !4916)
!5136 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5137)
!5137 = distinct !DILocation(line: 3027, column: 9, scope: !4935)
!5138 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5137)
!5139 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5137)
!5140 = !DILocation(line: 3027, column: 9, scope: !4935)
!5141 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5142)
!5142 = distinct !DILocation(line: 3027, column: 9, scope: !4935)
!5143 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5142)
!5144 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5142)
!5145 = !DILocation(line: 3027, column: 9, scope: !4936)
!5146 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5147)
!5147 = distinct !DILocation(line: 3027, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 3027, column: 9)
!5149 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5147)
!5150 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5147)
!5151 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5147)
!5152 = !DILocation(line: 3027, column: 9, scope: !5148)
!5153 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5154)
!5154 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5155)
!5155 = distinct !DILocation(line: 3027, column: 9, scope: !4932)
!5156 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5154)
!5157 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5154)
!5158 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5155)
!5159 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5155)
!5160 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5155)
!5161 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5155)
!5162 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5155)
!5163 = !DILocation(line: 3027, column: 9, scope: !4932)
!5164 = !{i32 -2144752855, i32 -2144752842, i32 -2144752817, i32 -2144752793, i32 -2144752768, i32 -2144752693, i32 -2144752668, i32 -2144752524, i32 -2144750302, i32 -2144750213, i32 -2144750092, i32 -2144749997, i32 -2144749896, i32 -2144749869, i32 -2144749786, i32 -2144749697, i32 -2144749576, i32 -2144749476, i32 -2144749370, i32 -2144749262, i32 -2144752236, i32 -2144752183, i32 -2144752152, i32 -2144752121, i32 -2144752100, i32 -2144752078, i32 -2144752029, i32 -2144752008, i32 -2144749179, i32 -2144749090, i32 -2144748969, i32 -2144748870, i32 -2144748764, i32 -2144748662, i32 -2144748629, i32 -2144748556, i32 -2144748488, i32 -2144751634, i32 -2144751581, i32 -2144751550, i32 -2144751519, i32 -2144751498, i32 -2144751476, i32 -2144751427, i32 -2144751406, i32 -2144748433, i32 -2144748344, i32 -2144748223, i32 -2144748124, i32 -2144748018, i32 -2144747916, i32 -2144747883, i32 -2144747800, i32 -2144747711, i32 -2144747590, i32 -2144747490, i32 -2144747464, i32 -2144747361, i32 -2144747335, i32 -2144751148, i32 -2144751081, i32 -2144751056, i32 -2144750992, i32 -2144750876, i32 -2144750851, i32 -2144750826}
!5165 = !DILocation(line: 3029, column: 9, scope: !4937)
!5166 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !5167)
!5167 = distinct !DILocation(line: 3029, column: 9, scope: !4937)
!5168 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !5167)
!5169 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !5170)
!5170 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !5167)
!5171 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !5170)
!5172 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !5170)
!5173 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !5170)
!5174 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !5170)
!5175 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !5170)
!5176 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !5170)
!5177 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !5170)
!5178 = !DILocation(line: 3030, column: 9, scope: !4937)
!5179 = !DILocation(line: 2769, column: 44, scope: !4169, inlinedAt: !5180)
!5180 = distinct !DILocation(line: 3034, column: 7, scope: !4916)
!5181 = !DILocation(line: 2774, column: 3, scope: !4169, inlinedAt: !5180)
!5182 = !DILocation(line: 2777, column: 21, scope: !4169, inlinedAt: !5180)
!5183 = !DILocation(line: 2777, column: 19, scope: !4169, inlinedAt: !5180)
!5184 = !DILocation(line: 2778, column: 22, scope: !4180, inlinedAt: !5180)
!5185 = !DILocation(line: 2778, column: 7, scope: !4169, inlinedAt: !5180)
!5186 = !DILocation(line: 2779, column: 21, scope: !4183, inlinedAt: !5180)
!5187 = !DILocation(line: 2779, column: 26, scope: !4183, inlinedAt: !5180)
!5188 = !DILocation(line: 2780, column: 3, scope: !4183, inlinedAt: !5180)
!5189 = !DILocation(line: 2781, column: 18, scope: !4169, inlinedAt: !5180)
!5190 = !DILocation(line: 2788, column: 3, scope: !4169, inlinedAt: !5180)
!5191 = !DILocation(line: 2789, column: 1, scope: !4169, inlinedAt: !5180)
!5192 = !DILocation(line: 2970, column: 7, scope: !4883)
!5193 = !DILocation(line: 2969, column: 7, scope: !4883)
!5194 = !DILocation(line: 3038, column: 12, scope: !4944)
!5195 = !DILocation(line: 3038, column: 38, scope: !4943)
!5196 = !DILocation(line: 3038, column: 7, scope: !4944)
!5197 = !DILocation(line: 3039, column: 22, scope: !4941)
!5198 = !DILocation(line: 3039, column: 25, scope: !4941)
!5199 = !DILocation(line: 3039, column: 47, scope: !4941)
!5200 = !DILocation(line: 3040, column: 23, scope: !4941)
!5201 = !DILocation(line: 3040, column: 26, scope: !4941)
!5202 = !DILocation(line: 3040, column: 49, scope: !4941)
!5203 = !DILocation(line: 3041, column: 24, scope: !4941)
!5204 = !DILocation(line: 3041, column: 27, scope: !4941)
!5205 = !DILocation(line: 3039, column: 13, scope: !4942)
!5206 = !DILocation(line: 3043, column: 11, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 3043, column: 11)
!5208 = !DILocation(line: 2977, column: 3, scope: !4883)
!5209 = !DILocalVariable(name: "fd", arg: 1, scope: !5210, file: !3, line: 1440, type: !80)
!5210 = distinct !DISubprogram(name: "tryget_socket_unconn_locked", scope: !3, file: !3, line: 1440, type: !5211, isLocal: true, isDefinition: true, scopeLine: 1441, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5213)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{!1165, !80}
!5213 = !{!5209, !5214}
!5214 = !DILocalVariable(name: "ret", scope: !5210, file: !3, line: 1442, type: !1165)
!5215 = !DILocation(line: 1440, column: 33, scope: !5210, inlinedAt: !5216)
!5216 = distinct !DILocation(line: 3044, column: 18, scope: !4940)
!5217 = !DILocalVariable(name: "fd", arg: 1, scope: !5218, file: !3, line: 1409, type: !80)
!5218 = distinct !DISubprogram(name: "tryget_socket_unconn_nouse", scope: !3, file: !3, line: 1409, type: !5211, isLocal: true, isDefinition: true, scopeLine: 1410, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5219)
!5219 = !{!5217, !5220}
!5220 = !DILocalVariable(name: "s", scope: !5218, file: !3, line: 1411, type: !80)
!5221 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !5222)
!5222 = distinct !DILocation(line: 1442, column: 27, scope: !5210, inlinedAt: !5216)
!5223 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !5222)
!5224 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !5222)
!5225 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1412, column: 7)
!5226 = !DILocation(line: 0, scope: !5210, inlinedAt: !5216)
!5227 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !5222)
!5228 = !DILocation(line: 1448, column: 3, scope: !5210, inlinedAt: !5216)
!5229 = !DILocation(line: 3045, column: 15, scope: !4940)
!5230 = !DILocation(line: 3046, column: 19, scope: !4953)
!5231 = !DILocation(line: 3046, column: 33, scope: !4953)
!5232 = !{!1564, !1405, i64 22}
!5233 = !DILocation(line: 3047, column: 38, scope: !4952)
!5234 = !DILocation(line: 3047, column: 17, scope: !4953)
!5235 = !DILocation(line: 3049, column: 35, scope: !4951)
!5236 = !DILocation(line: 3052, column: 15, scope: !4951)
!5237 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5238)
!5238 = distinct !DILocation(line: 3054, column: 15, scope: !4949)
!5239 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5238)
!5240 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5238)
!5241 = !DILocation(line: 3054, column: 15, scope: !4949)
!5242 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5243)
!5243 = distinct !DILocation(line: 3054, column: 15, scope: !4949)
!5244 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5243)
!5245 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5243)
!5246 = !DILocation(line: 3054, column: 15, scope: !4950)
!5247 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5248)
!5248 = distinct !DILocation(line: 3054, column: 15, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 3054, column: 15)
!5250 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5248)
!5251 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5248)
!5252 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5248)
!5253 = !DILocation(line: 3054, column: 15, scope: !5249)
!5254 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5255)
!5255 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5256)
!5256 = distinct !DILocation(line: 3054, column: 15, scope: !4946)
!5257 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5255)
!5258 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5255)
!5259 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5256)
!5260 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5256)
!5261 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5256)
!5262 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5256)
!5263 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5256)
!5264 = !DILocation(line: 3054, column: 15, scope: !4946)
!5265 = !{i32 -2144744929, i32 -2144744916, i32 -2144744891, i32 -2144744867, i32 -2144744842, i32 -2144744767, i32 -2144744742, i32 -2144744598, i32 -2144742376, i32 -2144742287, i32 -2144742166, i32 -2144742071, i32 -2144741970, i32 -2144741943, i32 -2144741860, i32 -2144741771, i32 -2144741650, i32 -2144741550, i32 -2144741444, i32 -2144741336, i32 -2144744310, i32 -2144744257, i32 -2144744226, i32 -2144744195, i32 -2144744174, i32 -2144744152, i32 -2144744103, i32 -2144744082, i32 -2144741253, i32 -2144741164, i32 -2144741043, i32 -2144740944, i32 -2144740838, i32 -2144740736, i32 -2144740703, i32 -2144740630, i32 -2144740562, i32 -2144743708, i32 -2144743655, i32 -2144743624, i32 -2144743593, i32 -2144743572, i32 -2144743550, i32 -2144743501, i32 -2144743480, i32 -2144740507, i32 -2144740418, i32 -2144740297, i32 -2144740198, i32 -2144740092, i32 -2144739990, i32 -2144739957, i32 -2144739874, i32 -2144739785, i32 -2144739664, i32 -2144739564, i32 -2144739538, i32 -2144739435, i32 -2144739409, i32 -2144743222, i32 -2144743155, i32 -2144743130, i32 -2144743066, i32 -2144742950, i32 -2144742925, i32 -2144742900}
!5266 = !DILocation(line: 3063, column: 13, scope: !4961)
!5267 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5268)
!5268 = distinct !DILocation(line: 3064, column: 13, scope: !4959)
!5269 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5268)
!5270 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5268)
!5271 = !DILocation(line: 3064, column: 13, scope: !4959)
!5272 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5273)
!5273 = distinct !DILocation(line: 3064, column: 13, scope: !4959)
!5274 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5273)
!5275 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5273)
!5276 = !DILocation(line: 3064, column: 13, scope: !4960)
!5277 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5278)
!5278 = distinct !DILocation(line: 3064, column: 13, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 3064, column: 13)
!5280 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5278)
!5281 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5278)
!5282 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5278)
!5283 = !DILocation(line: 3064, column: 13, scope: !5279)
!5284 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5285)
!5285 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5286)
!5286 = distinct !DILocation(line: 3064, column: 13, scope: !4956)
!5287 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5285)
!5288 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5285)
!5289 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5286)
!5290 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5286)
!5291 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5286)
!5292 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5286)
!5293 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5286)
!5294 = !DILocation(line: 3064, column: 13, scope: !4956)
!5295 = !{i32 -2144737435, i32 -2144737422, i32 -2144737397, i32 -2144737373, i32 -2144737348, i32 -2144737273, i32 -2144737248, i32 -2144737104, i32 -2144734884, i32 -2144734795, i32 -2144734674, i32 -2144734579, i32 -2144734478, i32 -2144734451, i32 -2144734368, i32 -2144734279, i32 -2144734158, i32 -2144734058, i32 -2144733952, i32 -2144733844, i32 -2144736816, i32 -2144736763, i32 -2144736732, i32 -2144736701, i32 -2144736680, i32 -2144736658, i32 -2144736609, i32 -2144736588, i32 -2144733761, i32 -2144733672, i32 -2144733551, i32 -2144733452, i32 -2144733346, i32 -2144733244, i32 -2144733211, i32 -2144733138, i32 -2144733070, i32 -2144736214, i32 -2144736161, i32 -2144736130, i32 -2144736099, i32 -2144736078, i32 -2144736056, i32 -2144736007, i32 -2144735986, i32 -2144733015, i32 -2144732926, i32 -2144732805, i32 -2144732706, i32 -2144732600, i32 -2144732498, i32 -2144732465, i32 -2144732382, i32 -2144732293, i32 -2144732172, i32 -2144732072, i32 -2144732046, i32 -2144731943, i32 -2144731917, i32 -2144735728, i32 -2144735661, i32 -2144735636, i32 -2144735572, i32 -2144735456, i32 -2144735431, i32 -2144735406}
!5296 = !DILocation(line: 0, scope: !4951)
!5297 = !DILocation(line: 3070, column: 11, scope: !4916)
!5298 = !DILocation(line: 3057, column: 13, scope: !4953)
!5299 = !DILocation(line: 3067, column: 9, scope: !4941)
!5300 = !DILocation(line: 3038, column: 50, scope: !4943)
!5301 = !DILocation(line: 3038, column: 7, scope: !4943)
!5302 = distinct !{!5302, !5196, !5303}
!5303 = !DILocation(line: 3068, column: 7, scope: !4944)
!5304 = !DILocation(line: 3073, column: 18, scope: !4967)
!5305 = !DILocation(line: 3074, column: 14, scope: !4966)
!5306 = !DILocation(line: 3074, column: 13, scope: !4967)
!5307 = !DILocation(line: 3076, column: 15, scope: !4965)
!5308 = !DILocation(line: 3080, column: 42, scope: !4963)
!5309 = !DILocation(line: 3080, column: 49, scope: !4963)
!5310 = !DILocation(line: 3080, column: 70, scope: !4963)
!5311 = !DILocation(line: 3080, column: 78, scope: !4963)
!5312 = !DILocation(line: 3080, column: 85, scope: !4963)
!5313 = !DILocation(line: 3080, column: 57, scope: !4963)
!5314 = !DILocation(line: 3080, column: 18, scope: !4963)
!5315 = !DILocation(line: 3081, column: 17, scope: !4963)
!5316 = !DILocation(line: 2968, column: 9, scope: !4883)
!5317 = !DILocation(line: 0, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !3, line: 3081, column: 34)
!5319 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 3081, column: 17)
!5320 = !DILocation(line: 3089, column: 21, scope: !4965)
!5321 = !DILocation(line: 3093, column: 9, scope: !4965)
!5322 = !DILocation(line: 3097, column: 12, scope: !4974)
!5323 = !DILocation(line: 3097, column: 38, scope: !4973)
!5324 = !DILocation(line: 3097, column: 7, scope: !4974)
!5325 = !DILocation(line: 3098, column: 22, scope: !4971)
!5326 = !DILocation(line: 3098, column: 25, scope: !4971)
!5327 = !DILocation(line: 3098, column: 47, scope: !4971)
!5328 = !DILocation(line: 3099, column: 23, scope: !4971)
!5329 = !DILocation(line: 3099, column: 26, scope: !4971)
!5330 = !DILocation(line: 3099, column: 49, scope: !4971)
!5331 = !DILocation(line: 3100, column: 24, scope: !4971)
!5332 = !DILocation(line: 3100, column: 27, scope: !4971)
!5333 = !DILocation(line: 3098, column: 13, scope: !4972)
!5334 = !DILocation(line: 3102, column: 11, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 3102, column: 11)
!5336 = !DILocation(line: 1440, column: 33, scope: !5210, inlinedAt: !5337)
!5337 = distinct !DILocation(line: 3103, column: 18, scope: !4970)
!5338 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !5339)
!5339 = distinct !DILocation(line: 1442, column: 27, scope: !5210, inlinedAt: !5337)
!5340 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !5339)
!5341 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !5339)
!5342 = !DILocation(line: 0, scope: !5210, inlinedAt: !5337)
!5343 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !5339)
!5344 = !DILocation(line: 1448, column: 3, scope: !5210, inlinedAt: !5337)
!5345 = !DILocation(line: 3104, column: 15, scope: !4970)
!5346 = !DILocation(line: 3106, column: 13, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 3106, column: 13)
!5348 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 3106, column: 13)
!5349 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 3104, column: 29)
!5350 = !DILocation(line: 3106, column: 13, scope: !5348)
!5351 = !DILocation(line: 3106, column: 13, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 3106, column: 13)
!5353 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 3106, column: 13)
!5354 = !DILocation(line: 3106, column: 13, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 3106, column: 13)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 3106, column: 13)
!5357 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 3106, column: 13)
!5358 = !DILocation(line: 3107, column: 17, scope: !5349)
!5359 = !DILocation(line: 3108, column: 35, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 3107, column: 43)
!5361 = distinct !DILexicalBlock(scope: !5349, file: !3, line: 3107, column: 17)
!5362 = !DILocation(line: 3109, column: 13, scope: !5360)
!5363 = !DILocation(line: 3110, column: 13, scope: !5349)
!5364 = !DILocation(line: 3112, column: 11, scope: !5349)
!5365 = !DILocation(line: 3113, column: 13, scope: !4981)
!5366 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5367)
!5367 = distinct !DILocation(line: 3116, column: 13, scope: !4979)
!5368 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5367)
!5369 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5367)
!5370 = !DILocation(line: 3116, column: 13, scope: !4979)
!5371 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5372)
!5372 = distinct !DILocation(line: 3116, column: 13, scope: !4979)
!5373 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5372)
!5374 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5372)
!5375 = !DILocation(line: 3116, column: 13, scope: !4980)
!5376 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5377)
!5377 = distinct !DILocation(line: 3116, column: 13, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 3116, column: 13)
!5379 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5377)
!5380 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5377)
!5381 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5377)
!5382 = !DILocation(line: 3116, column: 13, scope: !5378)
!5383 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5384)
!5384 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5385)
!5385 = distinct !DILocation(line: 3116, column: 13, scope: !4976)
!5386 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5384)
!5387 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5384)
!5388 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5385)
!5389 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5385)
!5390 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5385)
!5391 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5385)
!5392 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5385)
!5393 = !DILocation(line: 3116, column: 13, scope: !4976)
!5394 = !{i32 -2144728968, i32 -2144728955, i32 -2144728930, i32 -2144728906, i32 -2144728881, i32 -2144728806, i32 -2144728781, i32 -2144728637, i32 -2144726417, i32 -2144726328, i32 -2144726207, i32 -2144726112, i32 -2144726011, i32 -2144725984, i32 -2144725901, i32 -2144725812, i32 -2144725691, i32 -2144725591, i32 -2144725485, i32 -2144725377, i32 -2144728349, i32 -2144728296, i32 -2144728265, i32 -2144728234, i32 -2144728213, i32 -2144728191, i32 -2144728142, i32 -2144728121, i32 -2144725294, i32 -2144725205, i32 -2144725084, i32 -2144724985, i32 -2144724879, i32 -2144724777, i32 -2144724744, i32 -2144724671, i32 -2144724603, i32 -2144727747, i32 -2144727694, i32 -2144727663, i32 -2144727632, i32 -2144727611, i32 -2144727589, i32 -2144727540, i32 -2144727519, i32 -2144724548, i32 -2144724459, i32 -2144724338, i32 -2144724239, i32 -2144724133, i32 -2144724031, i32 -2144723998, i32 -2144723915, i32 -2144723826, i32 -2144723705, i32 -2144723605, i32 -2144723579, i32 -2144723476, i32 -2144723450, i32 -2144727261, i32 -2144727194, i32 -2144727169, i32 -2144727105, i32 -2144726989, i32 -2144726964, i32 -2144726939}
!5395 = !DILocation(line: 0, scope: !4981)
!5396 = !DILocation(line: 3118, column: 9, scope: !4970)
!5397 = !DILocation(line: 3073, column: 16, scope: !4967)
!5398 = !DILocation(line: 3097, column: 50, scope: !4973)
!5399 = !DILocation(line: 3097, column: 7, scope: !4973)
!5400 = distinct !{!5400, !5324, !5401}
!5401 = !DILocation(line: 3119, column: 7, scope: !4974)
!5402 = !DILocation(line: 3121, column: 7, scope: !4916)
!5403 = !DILocation(line: 3129, column: 7, scope: !4916)
!5404 = !DILocation(line: 3131, column: 7, scope: !4916)
!5405 = !DILocation(line: 237, column: 45, scope: !1428, inlinedAt: !5406)
!5406 = distinct !DILocation(line: 3131, column: 7, scope: !4916)
!5407 = !DILocation(line: 237, column: 54, scope: !1428, inlinedAt: !5406)
!5408 = !DILocation(line: 231, column: 48, scope: !1435, inlinedAt: !5409)
!5409 = distinct !DILocation(line: 239, column: 2, scope: !1428, inlinedAt: !5406)
!5410 = !DILocation(line: 231, column: 57, scope: !1435, inlinedAt: !5409)
!5411 = !DILocation(line: 233, column: 2, scope: !1442, inlinedAt: !5409)
!5412 = !DILocation(line: 233, column: 2, scope: !1443, inlinedAt: !5409)
!5413 = !DILocation(line: 233, column: 2, scope: !1447, inlinedAt: !5409)
!5414 = !DILocation(line: 234, column: 5, scope: !1435, inlinedAt: !5409)
!5415 = !DILocation(line: 234, column: 2, scope: !1435, inlinedAt: !5409)
!5416 = !DILocation(line: 235, column: 1, scope: !1435, inlinedAt: !5409)
!5417 = !DILocation(line: 240, column: 1, scope: !1428, inlinedAt: !5406)
!5418 = !DILocation(line: 3133, column: 18, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3133, column: 11)
!5420 = !DILocation(line: 3133, column: 11, scope: !4916)
!5421 = !DILocation(line: 3139, column: 19, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 3139, column: 11)
!5423 = !DILocation(line: 3139, column: 11, scope: !4916)
!5424 = !DILocation(line: 3146, column: 18, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3144, column: 14)
!5426 = !DILocation(line: 0, scope: !4922)
!5427 = !DILocation(line: 0, scope: !5425)
!5428 = !DILocation(line: 3149, column: 5, scope: !4917)
!5429 = !DILocation(line: 2993, column: 10, scope: !4883)
!5430 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5431)
!5431 = distinct !DILocation(line: 3153, column: 3, scope: !4987)
!5432 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5431)
!5433 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5431)
!5434 = !DILocation(line: 3153, column: 3, scope: !4987)
!5435 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5436)
!5436 = distinct !DILocation(line: 3153, column: 3, scope: !4987)
!5437 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5436)
!5438 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5436)
!5439 = !DILocation(line: 3153, column: 3, scope: !4988)
!5440 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5441)
!5441 = distinct !DILocation(line: 3153, column: 3, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 3153, column: 3)
!5443 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5441)
!5444 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5441)
!5445 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5441)
!5446 = !DILocation(line: 3153, column: 3, scope: !5442)
!5447 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5448)
!5448 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5449)
!5449 = distinct !DILocation(line: 3153, column: 3, scope: !4984)
!5450 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5448)
!5451 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5448)
!5452 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5449)
!5453 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5449)
!5454 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5449)
!5455 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5449)
!5456 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5449)
!5457 = !DILocation(line: 3153, column: 3, scope: !4984)
!5458 = !{i32 -2144721469, i32 -2144721456, i32 -2144721431, i32 -2144721407, i32 -2144721382, i32 -2144721307, i32 -2144721282, i32 -2144721138, i32 -2144718922, i32 -2144718833, i32 -2144718712, i32 -2144718617, i32 -2144718516, i32 -2144718489, i32 -2144718406, i32 -2144718317, i32 -2144718196, i32 -2144718096, i32 -2144717990, i32 -2144717882, i32 -2144720850, i32 -2144720797, i32 -2144720766, i32 -2144720735, i32 -2144720714, i32 -2144720692, i32 -2144720643, i32 -2144720622, i32 -2144717799, i32 -2144717710, i32 -2144717589, i32 -2144717490, i32 -2144717384, i32 -2144717282, i32 -2144717249, i32 -2144717176, i32 -2144717108, i32 -2144720248, i32 -2144720195, i32 -2144720164, i32 -2144720133, i32 -2144720112, i32 -2144720090, i32 -2144720041, i32 -2144720020, i32 -2144717053, i32 -2144716964, i32 -2144716843, i32 -2144716744, i32 -2144716638, i32 -2144716536, i32 -2144716503, i32 -2144716420, i32 -2144716331, i32 -2144716210, i32 -2144716110, i32 -2144716084, i32 -2144715981, i32 -2144715955, i32 -2144719762, i32 -2144719695, i32 -2144719670, i32 -2144719606, i32 -2144719490, i32 -2144719465, i32 -2144719440}
!5459 = !DILocation(line: 3154, column: 7, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 3154, column: 7)
!5461 = !DILocation(line: 3154, column: 7, scope: !4883)
!5462 = !DILocation(line: 3155, column: 16, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 3154, column: 16)
!5464 = !DILocation(line: 3156, column: 3, scope: !5463)
!5465 = !DILocation(line: 3157, column: 7, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 3157, column: 7)
!5467 = !DILocation(line: 3157, column: 7, scope: !4883)
!5468 = !DILocation(line: 3158, column: 17, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5466, file: !3, line: 3157, column: 17)
!5470 = !DILocation(line: 3159, column: 3, scope: !5469)
!5471 = !DILocation(line: 3160, column: 7, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 3160, column: 7)
!5473 = !DILocation(line: 3160, column: 7, scope: !4883)
!5474 = !DILocation(line: 3161, column: 18, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 3160, column: 18)
!5476 = !DILocation(line: 3162, column: 3, scope: !5475)
!5477 = !DILocation(line: 0, scope: !4937)
!5478 = !DILocation(line: 3164, column: 1, scope: !4883)
!5479 = distinct !DISubprogram(name: "shutdown", scope: !3, file: !3, line: 768, type: !5480, isLocal: false, isDefinition: true, scopeLine: 769, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5482)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!80, !80, !80}
!5482 = !{!5483, !5484, !5485, !5486, !5487, !5493, !5494, !5503}
!5483 = !DILocalVariable(name: "s", arg: 1, scope: !5479, file: !3, line: 768, type: !80)
!5484 = !DILocalVariable(name: "how", arg: 2, scope: !5479, file: !3, line: 768, type: !80)
!5485 = !DILocalVariable(name: "ret", scope: !5479, file: !3, line: 770, type: !80)
!5486 = !DILocalVariable(name: "file", scope: !5479, file: !3, line: 771, type: !1077)
!5487 = !DILocalVariable(name: "tid", scope: !5488, file: !3, line: 773, type: !170)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 773, column: 2)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 773, column: 2)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 773, column: 2)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 773, column: 2)
!5492 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 773, column: 2)
!5493 = !DILocalVariable(name: "_ret", scope: !5488, file: !3, line: 773, type: !135)
!5494 = !DILocalVariable(name: "tid", scope: !5495, file: !3, line: 779, type: !170)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 779, column: 3)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 779, column: 3)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 779, column: 3)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 779, column: 3)
!5499 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 779, column: 3)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 779, column: 3)
!5501 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 774, column: 22)
!5502 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 774, column: 6)
!5503 = !DILocalVariable(name: "tid", scope: !5504, file: !3, line: 784, type: !170)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 784, column: 2)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 784, column: 2)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 784, column: 2)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 784, column: 2)
!5508 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 784, column: 2)
!5509 = !DILocation(line: 768, column: 18, scope: !5479)
!5510 = !DILocation(line: 768, column: 25, scope: !5479)
!5511 = !DILocation(line: 770, column: 6, scope: !5479)
!5512 = !DILocation(line: 771, column: 2, scope: !5479)
!5513 = !DILocation(line: 771, column: 24, scope: !5479)
!5514 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5515)
!5515 = distinct !DILocation(line: 773, column: 2, scope: !5491)
!5516 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5515)
!5517 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5515)
!5518 = !DILocation(line: 773, column: 2, scope: !5491)
!5519 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5520)
!5520 = distinct !DILocation(line: 773, column: 2, scope: !5491)
!5521 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5520)
!5522 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5520)
!5523 = !DILocation(line: 773, column: 2, scope: !5492)
!5524 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !5525)
!5525 = distinct !DILocation(line: 773, column: 2, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 773, column: 2)
!5527 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !5525)
!5528 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !5525)
!5529 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !5525)
!5530 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !5525)
!5531 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !5525)
!5532 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !5525)
!5533 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !5525)
!5534 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !5525)
!5535 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !5525)
!5536 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !5525)
!5537 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !5525)
!5538 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !5525)
!5539 = !DILocation(line: 0, scope: !2856, inlinedAt: !5525)
!5540 = !DILocation(line: 0, scope: !5526)
!5541 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !5525)
!5542 = !DILocation(line: 773, column: 2, scope: !5526)
!5543 = !DILocation(line: 774, column: 6, scope: !5502)
!5544 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5545)
!5545 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5546)
!5546 = distinct !DILocation(line: 773, column: 2, scope: !5488)
!5547 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5545)
!5548 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5545)
!5549 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5546)
!5550 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5546)
!5551 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5546)
!5552 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5546)
!5553 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5546)
!5554 = !DILocation(line: 773, column: 2, scope: !5488)
!5555 = !{i32 -2145548191, i32 -2145548178, i32 -2145548153, i32 -2145548129, i32 -2145548104, i32 -2145548029, i32 -2145548004, i32 -2145547860, i32 -2145544728, i32 -2145544639, i32 -2145544518, i32 -2145544423, i32 -2145544322, i32 -2145544295, i32 -2145544212, i32 -2145544123, i32 -2145544002, i32 -2145543902, i32 -2145543796, i32 -2145543688, i32 -2145547572, i32 -2145547519, i32 -2145547488, i32 -2145547457, i32 -2145547436, i32 -2145547414, i32 -2145547365, i32 -2145547344, i32 -2145543605, i32 -2145543516, i32 -2145543395, i32 -2145543296, i32 -2145543190, i32 -2145543088, i32 -2145543055, i32 -2145542982, i32 -2145542914, i32 -2145547040, i32 -2145546981, i32 -2145546928, i32 -2145546897, i32 -2145546866, i32 -2145546845, i32 -2145546823, i32 -2145546774, i32 -2145546753, i32 -2145542861, i32 -2145542772, i32 -2145542651, i32 -2145542552, i32 -2145542446, i32 -2145542344, i32 -2145542311, i32 -2145542228, i32 -2145542139, i32 -2145542018, i32 -2145541918, i32 -2145541892, i32 -2145541789, i32 -2145541763, i32 -2145546495, i32 -2145546428, i32 -2145546403, i32 -2145546339, i32 -2145546257, i32 -2145546234, i32 -2145546209, i32 -2145546184}
!5556 = !DILocation(line: 773, column: 2, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 773, column: 2)
!5558 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 773, column: 2)
!5559 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 773, column: 2)
!5560 = !{i32 -2145544996, i32 -2145544980}
!5561 = !DILocation(line: 774, column: 6, scope: !5479)
!5562 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5563)
!5563 = distinct !DILocation(line: 779, column: 3, scope: !5498)
!5564 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5563)
!5565 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5563)
!5566 = !DILocation(line: 779, column: 3, scope: !5498)
!5567 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5568)
!5568 = distinct !DILocation(line: 779, column: 3, scope: !5498)
!5569 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5568)
!5570 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5568)
!5571 = !DILocation(line: 779, column: 3, scope: !5499)
!5572 = !DILocation(line: 779, column: 3, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 779, column: 3)
!5574 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5575)
!5575 = distinct !DILocation(line: 779, column: 3, scope: !5573)
!5576 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !5575)
!5577 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5575)
!5578 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5575)
!5579 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5575)
!5580 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5581)
!5581 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5582)
!5582 = distinct !DILocation(line: 779, column: 3, scope: !5495)
!5583 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5581)
!5584 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5581)
!5585 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5582)
!5586 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5582)
!5587 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5582)
!5588 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5582)
!5589 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5582)
!5590 = !DILocation(line: 779, column: 3, scope: !5495)
!5591 = !{i32 -2145539508, i32 -2145539495, i32 -2145539470, i32 -2145539446, i32 -2145539421, i32 -2145539346, i32 -2145539321, i32 -2145539177, i32 -2145536936, i32 -2145536847, i32 -2145536726, i32 -2145536631, i32 -2145536530, i32 -2145536503, i32 -2145536420, i32 -2145536331, i32 -2145536210, i32 -2145536110, i32 -2145536004, i32 -2145535896, i32 -2145538889, i32 -2145538836, i32 -2145538805, i32 -2145538774, i32 -2145538753, i32 -2145538731, i32 -2145538682, i32 -2145538661, i32 -2145535813, i32 -2145535724, i32 -2145535603, i32 -2145535504, i32 -2145535398, i32 -2145535296, i32 -2145535263, i32 -2145535190, i32 -2145535122, i32 -2145538287, i32 -2145538234, i32 -2145538203, i32 -2145538172, i32 -2145538151, i32 -2145538129, i32 -2145538080, i32 -2145538059, i32 -2145535067, i32 -2145534978, i32 -2145534857, i32 -2145534758, i32 -2145534652, i32 -2145534550, i32 -2145534517, i32 -2145534434, i32 -2145534345, i32 -2145534224, i32 -2145534124, i32 -2145534098, i32 -2145533995, i32 -2145533969, i32 -2145537801, i32 -2145537734, i32 -2145537709, i32 -2145537645, i32 -2145537529, i32 -2145537504, i32 -2145537479}
!5592 = !DILocation(line: 783, column: 28, scope: !5479)
!5593 = !DILocation(line: 783, column: 8, scope: !5479)
!5594 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5595)
!5595 = distinct !DILocation(line: 784, column: 2, scope: !5507)
!5596 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5595)
!5597 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5595)
!5598 = !DILocation(line: 784, column: 2, scope: !5507)
!5599 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5600)
!5600 = distinct !DILocation(line: 784, column: 2, scope: !5507)
!5601 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5600)
!5602 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5600)
!5603 = !DILocation(line: 784, column: 2, scope: !5508)
!5604 = !DILocation(line: 784, column: 2, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 784, column: 2)
!5606 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5607)
!5607 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5608)
!5608 = distinct !DILocation(line: 784, column: 2, scope: !5504)
!5609 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5607)
!5610 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5607)
!5611 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5608)
!5612 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5608)
!5613 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5608)
!5614 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5608)
!5615 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5608)
!5616 = !DILocation(line: 784, column: 2, scope: !5504)
!5617 = !{i32 -2145532005, i32 -2145531992, i32 -2145531967, i32 -2145531943, i32 -2145531918, i32 -2145531843, i32 -2145531818, i32 -2145531674, i32 -2145529447, i32 -2145529358, i32 -2145529237, i32 -2145529142, i32 -2145529041, i32 -2145529014, i32 -2145528931, i32 -2145528842, i32 -2145528721, i32 -2145528621, i32 -2145528515, i32 -2145528407, i32 -2145531386, i32 -2145531333, i32 -2145531302, i32 -2145531271, i32 -2145531250, i32 -2145531228, i32 -2145531179, i32 -2145531158, i32 -2145528324, i32 -2145528235, i32 -2145528114, i32 -2145528015, i32 -2145527909, i32 -2145527807, i32 -2145527774, i32 -2145527701, i32 -2145527633, i32 -2145530784, i32 -2145530731, i32 -2145530700, i32 -2145530669, i32 -2145530648, i32 -2145530626, i32 -2145530577, i32 -2145530556, i32 -2145527581, i32 -2145527492, i32 -2145527371, i32 -2145527272, i32 -2145527166, i32 -2145527064, i32 -2145527031, i32 -2145526948, i32 -2145526859, i32 -2145526738, i32 -2145526638, i32 -2145526612, i32 -2145526509, i32 -2145526483, i32 -2145530298, i32 -2145530231, i32 -2145530206, i32 -2145530142, i32 -2145530026, i32 -2145530001, i32 -2145529976}
!5618 = !DILocation(line: 0, scope: !5479)
!5619 = !DILocation(line: 787, column: 1, scope: !5479)
!5620 = !DILocation(line: 786, column: 2, scope: !5479)
!5621 = distinct !DISubprogram(name: "lwip_shutdown", scope: !3, file: !3, line: 3653, type: !5480, isLocal: false, isDefinition: true, scopeLine: 3654, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628, !5629, !5635, !5641, !5644, !5650, !5656, !5662, !5664}
!5623 = !DILocalVariable(name: "s", arg: 1, scope: !5621, file: !3, line: 3653, type: !80)
!5624 = !DILocalVariable(name: "how", arg: 2, scope: !5621, file: !3, line: 3653, type: !80)
!5625 = !DILocalVariable(name: "sock", scope: !5621, file: !3, line: 3655, type: !1165)
!5626 = !DILocalVariable(name: "err", scope: !5621, file: !3, line: 3656, type: !1283)
!5627 = !DILocalVariable(name: "shut_rx", scope: !5621, file: !3, line: 3657, type: !156)
!5628 = !DILocalVariable(name: "shut_tx", scope: !5621, file: !3, line: 3657, type: !156)
!5629 = !DILocalVariable(name: "sockerr", scope: !5630, file: !3, line: 3668, type: !1007)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 3668, column: 7)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !3, line: 3667, column: 69)
!5632 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 3667, column: 9)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 3666, column: 27)
!5634 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3666, column: 7)
!5635 = !DILocalVariable(name: "tid", scope: !5636, file: !3, line: 3668, type: !170)
!5636 = distinct !DILexicalBlock(scope: !5637, file: !3, line: 3668, column: 7)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 3668, column: 7)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 3668, column: 7)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 3668, column: 7)
!5640 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 3668, column: 7)
!5641 = !DILocalVariable(name: "sockerr", scope: !5642, file: !3, line: 3673, type: !1007)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 3673, column: 5)
!5643 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 3672, column: 10)
!5644 = !DILocalVariable(name: "tid", scope: !5645, file: !3, line: 3673, type: !170)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 3673, column: 5)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 3673, column: 5)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 3673, column: 5)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 3673, column: 5)
!5649 = distinct !DILexicalBlock(scope: !5642, file: !3, line: 3673, column: 5)
!5650 = !DILocalVariable(name: "sockerr", scope: !5651, file: !3, line: 3686, type: !1007)
!5651 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 3686, column: 5)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 3685, column: 10)
!5653 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 3682, column: 14)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 3680, column: 14)
!5655 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3678, column: 7)
!5656 = !DILocalVariable(name: "tid", scope: !5657, file: !3, line: 3686, type: !170)
!5657 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 3686, column: 5)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 3686, column: 5)
!5659 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 3686, column: 5)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 3686, column: 5)
!5661 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 3686, column: 5)
!5662 = !DILocalVariable(name: "sockerr", scope: !5663, file: !3, line: 3692, type: !1007)
!5663 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3692, column: 3)
!5664 = !DILocalVariable(name: "tid", scope: !5665, file: !3, line: 3692, type: !170)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3692, column: 3)
!5666 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 3692, column: 3)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 3692, column: 3)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 3692, column: 3)
!5669 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 3692, column: 3)
!5670 = !DILocation(line: 3653, column: 19, scope: !5621)
!5671 = !DILocation(line: 3653, column: 26, scope: !5621)
!5672 = !DILocation(line: 3657, column: 8, scope: !5621)
!5673 = !DILocation(line: 3657, column: 21, scope: !5621)
!5674 = !DILocation(line: 3661, column: 10, scope: !5621)
!5675 = !DILocation(line: 3655, column: 21, scope: !5621)
!5676 = !DILocation(line: 3662, column: 8, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5621, file: !3, line: 3662, column: 7)
!5678 = !DILocation(line: 3662, column: 7, scope: !5621)
!5679 = !DILocation(line: 3666, column: 13, scope: !5634)
!5680 = !DILocation(line: 3666, column: 18, scope: !5634)
!5681 = !DILocation(line: 3666, column: 7, scope: !5621)
!5682 = !DILocation(line: 3667, column: 9, scope: !5632)
!5683 = !DILocation(line: 3667, column: 53, scope: !5632)
!5684 = !DILocation(line: 3667, column: 9, scope: !5633)
!5685 = !DILocation(line: 3668, column: 7, scope: !5630)
!5686 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5687)
!5687 = distinct !DILocation(line: 3668, column: 7, scope: !5639)
!5688 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5687)
!5689 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5687)
!5690 = !DILocation(line: 3668, column: 7, scope: !5639)
!5691 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5692)
!5692 = distinct !DILocation(line: 3668, column: 7, scope: !5639)
!5693 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5692)
!5694 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5692)
!5695 = !DILocation(line: 3668, column: 7, scope: !5640)
!5696 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5697)
!5697 = distinct !DILocation(line: 3668, column: 7, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 3668, column: 7)
!5699 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5697)
!5700 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5697)
!5701 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5697)
!5702 = !DILocation(line: 3668, column: 7, scope: !5698)
!5703 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5704)
!5704 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5705)
!5705 = distinct !DILocation(line: 3668, column: 7, scope: !5636)
!5706 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5704)
!5707 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5704)
!5708 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5705)
!5709 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5705)
!5710 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5705)
!5711 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5705)
!5712 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5705)
!5713 = !DILocation(line: 3668, column: 7, scope: !5636)
!5714 = !{i32 -2144674444, i32 -2144674431, i32 -2144674406, i32 -2144674382, i32 -2144674357, i32 -2144674282, i32 -2144674257, i32 -2144674113, i32 -2144671890, i32 -2144671801, i32 -2144671680, i32 -2144671585, i32 -2144671484, i32 -2144671457, i32 -2144671374, i32 -2144671285, i32 -2144671164, i32 -2144671064, i32 -2144670958, i32 -2144670850, i32 -2144673825, i32 -2144673772, i32 -2144673741, i32 -2144673710, i32 -2144673689, i32 -2144673667, i32 -2144673618, i32 -2144673597, i32 -2144670767, i32 -2144670678, i32 -2144670557, i32 -2144670458, i32 -2144670352, i32 -2144670250, i32 -2144670217, i32 -2144670144, i32 -2144670076, i32 -2144673223, i32 -2144673170, i32 -2144673139, i32 -2144673108, i32 -2144673087, i32 -2144673065, i32 -2144673016, i32 -2144672995, i32 -2144670021, i32 -2144669932, i32 -2144669811, i32 -2144669712, i32 -2144669606, i32 -2144669504, i32 -2144669471, i32 -2144669388, i32 -2144669299, i32 -2144669178, i32 -2144669078, i32 -2144669052, i32 -2144668949, i32 -2144668923, i32 -2144672737, i32 -2144672670, i32 -2144672645, i32 -2144672581, i32 -2144672465, i32 -2144672440, i32 -2144672415}
!5715 = !DILocation(line: 3670, column: 7, scope: !5631)
!5716 = !DILocation(line: 3673, column: 5, scope: !5642)
!5717 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5718)
!5718 = distinct !DILocation(line: 3673, column: 5, scope: !5648)
!5719 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5718)
!5720 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5718)
!5721 = !DILocation(line: 3673, column: 5, scope: !5648)
!5722 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5723)
!5723 = distinct !DILocation(line: 3673, column: 5, scope: !5648)
!5724 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5723)
!5725 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5723)
!5726 = !DILocation(line: 3673, column: 5, scope: !5649)
!5727 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5728)
!5728 = distinct !DILocation(line: 3673, column: 5, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 3673, column: 5)
!5730 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5728)
!5731 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5728)
!5732 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5728)
!5733 = !DILocation(line: 3673, column: 5, scope: !5729)
!5734 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5735)
!5735 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5736)
!5736 = distinct !DILocation(line: 3673, column: 5, scope: !5645)
!5737 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5735)
!5738 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5735)
!5739 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5736)
!5740 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5736)
!5741 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5736)
!5742 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5736)
!5743 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5736)
!5744 = !DILocation(line: 3673, column: 5, scope: !5645)
!5745 = !{i32 -2144662820, i32 -2144662807, i32 -2144662782, i32 -2144662758, i32 -2144662733, i32 -2144662658, i32 -2144662633, i32 -2144662489, i32 -2144660266, i32 -2144660177, i32 -2144660056, i32 -2144659961, i32 -2144659860, i32 -2144659833, i32 -2144659750, i32 -2144659661, i32 -2144659540, i32 -2144659440, i32 -2144659334, i32 -2144659226, i32 -2144662201, i32 -2144662148, i32 -2144662117, i32 -2144662086, i32 -2144662065, i32 -2144662043, i32 -2144661994, i32 -2144661973, i32 -2144659143, i32 -2144659054, i32 -2144658933, i32 -2144658834, i32 -2144658728, i32 -2144658626, i32 -2144658593, i32 -2144658520, i32 -2144658452, i32 -2144661599, i32 -2144661546, i32 -2144661515, i32 -2144661484, i32 -2144661463, i32 -2144661441, i32 -2144661392, i32 -2144661371, i32 -2144658397, i32 -2144658308, i32 -2144658187, i32 -2144658088, i32 -2144657982, i32 -2144657880, i32 -2144657847, i32 -2144657764, i32 -2144657675, i32 -2144657554, i32 -2144657454, i32 -2144657428, i32 -2144657325, i32 -2144657299, i32 -2144661113, i32 -2144661046, i32 -2144661021, i32 -2144660957, i32 -2144660841, i32 -2144660816, i32 -2144660791}
!5746 = !DILocation(line: 3675, column: 5, scope: !5643)
!5747 = !DILocation(line: 3678, column: 11, scope: !5655)
!5748 = !DILocation(line: 3678, column: 7, scope: !5621)
!5749 = !DILocation(line: 3680, column: 18, scope: !5654)
!5750 = !DILocation(line: 3680, column: 14, scope: !5655)
!5751 = !DILocation(line: 3682, column: 18, scope: !5653)
!5752 = !DILocation(line: 3682, column: 14, scope: !5654)
!5753 = !DILocation(line: 3686, column: 5, scope: !5651)
!5754 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5755)
!5755 = distinct !DILocation(line: 3686, column: 5, scope: !5660)
!5756 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5755)
!5757 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5755)
!5758 = !DILocation(line: 3686, column: 5, scope: !5660)
!5759 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5760)
!5760 = distinct !DILocation(line: 3686, column: 5, scope: !5660)
!5761 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5760)
!5762 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5760)
!5763 = !DILocation(line: 3686, column: 5, scope: !5661)
!5764 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5765)
!5765 = distinct !DILocation(line: 3686, column: 5, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5660, file: !3, line: 3686, column: 5)
!5767 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5765)
!5768 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5765)
!5769 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5765)
!5770 = !DILocation(line: 3686, column: 5, scope: !5766)
!5771 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5772)
!5772 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5773)
!5773 = distinct !DILocation(line: 3686, column: 5, scope: !5657)
!5774 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5772)
!5775 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5772)
!5776 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5773)
!5777 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5773)
!5778 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5773)
!5779 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5773)
!5780 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5773)
!5781 = !DILocation(line: 3686, column: 5, scope: !5657)
!5782 = !{i32 -2144655253, i32 -2144655240, i32 -2144655215, i32 -2144655191, i32 -2144655166, i32 -2144655091, i32 -2144655066, i32 -2144654922, i32 -2144652699, i32 -2144652610, i32 -2144652489, i32 -2144652394, i32 -2144652293, i32 -2144652266, i32 -2144652183, i32 -2144652094, i32 -2144651973, i32 -2144651873, i32 -2144651767, i32 -2144651659, i32 -2144654634, i32 -2144654581, i32 -2144654550, i32 -2144654519, i32 -2144654498, i32 -2144654476, i32 -2144654427, i32 -2144654406, i32 -2144651576, i32 -2144651487, i32 -2144651366, i32 -2144651267, i32 -2144651161, i32 -2144651059, i32 -2144651026, i32 -2144650953, i32 -2144650885, i32 -2144654032, i32 -2144653979, i32 -2144653948, i32 -2144653917, i32 -2144653896, i32 -2144653874, i32 -2144653825, i32 -2144653804, i32 -2144650830, i32 -2144650741, i32 -2144650620, i32 -2144650521, i32 -2144650415, i32 -2144650313, i32 -2144650280, i32 -2144650197, i32 -2144650108, i32 -2144649987, i32 -2144649887, i32 -2144649861, i32 -2144649758, i32 -2144649732, i32 -2144653546, i32 -2144653479, i32 -2144653454, i32 -2144653390, i32 -2144653274, i32 -2144653249, i32 -2144653224}
!5783 = !DILocation(line: 3688, column: 5, scope: !5652)
!5784 = !DILocation(line: 0, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 3682, column: 32)
!5786 = !DILocation(line: 3690, column: 9, scope: !5621)
!5787 = !DILocation(line: 3656, column: 9, scope: !5621)
!5788 = !DILocation(line: 3692, column: 3, scope: !5663)
!5789 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5790)
!5790 = distinct !DILocation(line: 3692, column: 3, scope: !5668)
!5791 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5790)
!5792 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5790)
!5793 = !DILocation(line: 3692, column: 3, scope: !5668)
!5794 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5795)
!5795 = distinct !DILocation(line: 3692, column: 3, scope: !5668)
!5796 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5795)
!5797 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5795)
!5798 = !DILocation(line: 3692, column: 3, scope: !5669)
!5799 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5800)
!5800 = distinct !DILocation(line: 3692, column: 3, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 3692, column: 3)
!5802 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5800)
!5803 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5800)
!5804 = !DILocation(line: 3692, column: 3, scope: !5801)
!5805 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5806)
!5806 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5807)
!5807 = distinct !DILocation(line: 3692, column: 3, scope: !5665)
!5808 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5806)
!5809 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5806)
!5810 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5807)
!5811 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5807)
!5812 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5807)
!5813 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5807)
!5814 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5807)
!5815 = !DILocation(line: 3692, column: 3, scope: !5665)
!5816 = !{i32 -2144647680, i32 -2144647667, i32 -2144647642, i32 -2144647618, i32 -2144647593, i32 -2144647518, i32 -2144647493, i32 -2144647349, i32 -2144645126, i32 -2144645037, i32 -2144644916, i32 -2144644821, i32 -2144644720, i32 -2144644693, i32 -2144644610, i32 -2144644521, i32 -2144644400, i32 -2144644300, i32 -2144644194, i32 -2144644086, i32 -2144647061, i32 -2144647008, i32 -2144646977, i32 -2144646946, i32 -2144646925, i32 -2144646903, i32 -2144646854, i32 -2144646833, i32 -2144644003, i32 -2144643914, i32 -2144643793, i32 -2144643694, i32 -2144643588, i32 -2144643486, i32 -2144643453, i32 -2144643380, i32 -2144643312, i32 -2144646459, i32 -2144646406, i32 -2144646375, i32 -2144646344, i32 -2144646323, i32 -2144646301, i32 -2144646252, i32 -2144646231, i32 -2144643257, i32 -2144643168, i32 -2144643047, i32 -2144642948, i32 -2144642842, i32 -2144642740, i32 -2144642707, i32 -2144642624, i32 -2144642535, i32 -2144642414, i32 -2144642314, i32 -2144642288, i32 -2144642185, i32 -2144642159, i32 -2144645973, i32 -2144645906, i32 -2144645881, i32 -2144645817, i32 -2144645701, i32 -2144645676, i32 -2144645651}
!5817 = !DILocation(line: 3694, column: 15, scope: !5621)
!5818 = !DILocation(line: 3694, column: 11, scope: !5621)
!5819 = !DILocation(line: 3694, column: 3, scope: !5621)
!5820 = !DILocation(line: 0, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 3662, column: 14)
!5822 = !DILocation(line: 3695, column: 1, scope: !5621)
!5823 = distinct !DISubprogram(name: "getpeername", scope: !3, file: !3, line: 789, type: !2771, isLocal: false, isDefinition: true, scopeLine: 790, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5824)
!5824 = !{!5825, !5826, !5827, !5828, !5829, !5830, !5836, !5837, !5846}
!5825 = !DILocalVariable(name: "s", arg: 1, scope: !5823, file: !3, line: 789, type: !80)
!5826 = !DILocalVariable(name: "name", arg: 2, scope: !5823, file: !3, line: 789, type: !1004)
!5827 = !DILocalVariable(name: "namelen", arg: 3, scope: !5823, file: !3, line: 789, type: !2773)
!5828 = !DILocalVariable(name: "ret", scope: !5823, file: !3, line: 791, type: !80)
!5829 = !DILocalVariable(name: "file", scope: !5823, file: !3, line: 792, type: !1077)
!5830 = !DILocalVariable(name: "tid", scope: !5831, file: !3, line: 794, type: !170)
!5831 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 794, column: 2)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 794, column: 2)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 794, column: 2)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 794, column: 2)
!5835 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 794, column: 2)
!5836 = !DILocalVariable(name: "_ret", scope: !5831, file: !3, line: 794, type: !135)
!5837 = !DILocalVariable(name: "tid", scope: !5838, file: !3, line: 798, type: !170)
!5838 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 798, column: 3)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 798, column: 3)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 798, column: 3)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 798, column: 3)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 798, column: 3)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 798, column: 3)
!5844 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 795, column: 22)
!5845 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 795, column: 6)
!5846 = !DILocalVariable(name: "tid", scope: !5847, file: !3, line: 802, type: !170)
!5847 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 802, column: 2)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 802, column: 2)
!5849 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 802, column: 2)
!5850 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 802, column: 2)
!5851 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 802, column: 2)
!5852 = !DILocation(line: 789, column: 21, scope: !5823)
!5853 = !DILocation(line: 789, column: 41, scope: !5823)
!5854 = !DILocation(line: 789, column: 58, scope: !5823)
!5855 = !DILocation(line: 791, column: 6, scope: !5823)
!5856 = !DILocation(line: 792, column: 2, scope: !5823)
!5857 = !DILocation(line: 792, column: 24, scope: !5823)
!5858 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5859)
!5859 = distinct !DILocation(line: 794, column: 2, scope: !5834)
!5860 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5859)
!5861 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5859)
!5862 = !DILocation(line: 794, column: 2, scope: !5834)
!5863 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5864)
!5864 = distinct !DILocation(line: 794, column: 2, scope: !5834)
!5865 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5864)
!5866 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5864)
!5867 = !DILocation(line: 794, column: 2, scope: !5835)
!5868 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !5869)
!5869 = distinct !DILocation(line: 794, column: 2, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 794, column: 2)
!5871 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !5869)
!5872 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !5869)
!5873 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !5869)
!5874 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !5869)
!5875 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !5869)
!5876 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !5869)
!5877 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !5869)
!5878 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !5869)
!5879 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !5869)
!5880 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !5869)
!5881 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !5869)
!5882 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !5869)
!5883 = !DILocation(line: 0, scope: !2856, inlinedAt: !5869)
!5884 = !DILocation(line: 0, scope: !5870)
!5885 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !5869)
!5886 = !DILocation(line: 794, column: 2, scope: !5870)
!5887 = !DILocation(line: 795, column: 6, scope: !5845)
!5888 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5889)
!5889 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5890)
!5890 = distinct !DILocation(line: 794, column: 2, scope: !5831)
!5891 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5889)
!5892 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5889)
!5893 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5890)
!5894 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5890)
!5895 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5890)
!5896 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5890)
!5897 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5890)
!5898 = !DILocation(line: 794, column: 2, scope: !5831)
!5899 = !{i32 -2145524500, i32 -2145524487, i32 -2145524462, i32 -2145524438, i32 -2145524413, i32 -2145524338, i32 -2145524313, i32 -2145524169, i32 -2145521037, i32 -2145520948, i32 -2145520827, i32 -2145520732, i32 -2145520631, i32 -2145520604, i32 -2145520521, i32 -2145520432, i32 -2145520311, i32 -2145520211, i32 -2145520105, i32 -2145519997, i32 -2145523881, i32 -2145523828, i32 -2145523797, i32 -2145523766, i32 -2145523745, i32 -2145523723, i32 -2145523674, i32 -2145523653, i32 -2145519914, i32 -2145519825, i32 -2145519704, i32 -2145519605, i32 -2145519499, i32 -2145519397, i32 -2145519364, i32 -2145519291, i32 -2145519223, i32 -2145523349, i32 -2145523290, i32 -2145523237, i32 -2145523206, i32 -2145523175, i32 -2145523154, i32 -2145523132, i32 -2145523083, i32 -2145523062, i32 -2145519170, i32 -2145519081, i32 -2145518960, i32 -2145518861, i32 -2145518755, i32 -2145518653, i32 -2145518620, i32 -2145518537, i32 -2145518448, i32 -2145518327, i32 -2145518227, i32 -2145518201, i32 -2145518098, i32 -2145518072, i32 -2145522804, i32 -2145522737, i32 -2145522712, i32 -2145522648, i32 -2145522566, i32 -2145522543, i32 -2145522518, i32 -2145522493}
!5900 = !DILocation(line: 794, column: 2, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 794, column: 2)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 794, column: 2)
!5903 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 794, column: 2)
!5904 = !{i32 -2145521305, i32 -2145521289}
!5905 = !DILocation(line: 795, column: 6, scope: !5823)
!5906 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5907)
!5907 = distinct !DILocation(line: 798, column: 3, scope: !5841)
!5908 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5907)
!5909 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5907)
!5910 = !DILocation(line: 798, column: 3, scope: !5841)
!5911 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5912)
!5912 = distinct !DILocation(line: 798, column: 3, scope: !5841)
!5913 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5912)
!5914 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5912)
!5915 = !DILocation(line: 798, column: 3, scope: !5842)
!5916 = !DILocation(line: 798, column: 3, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 798, column: 3)
!5918 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !5919)
!5919 = distinct !DILocation(line: 798, column: 3, scope: !5917)
!5920 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !5919)
!5921 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !5919)
!5922 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !5919)
!5923 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !5919)
!5924 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5925)
!5925 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5926)
!5926 = distinct !DILocation(line: 798, column: 3, scope: !5838)
!5927 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5925)
!5928 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5925)
!5929 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5926)
!5930 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5926)
!5931 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5926)
!5932 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5926)
!5933 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5926)
!5934 = !DILocation(line: 798, column: 3, scope: !5838)
!5935 = !{i32 -2145515817, i32 -2145515804, i32 -2145515779, i32 -2145515755, i32 -2145515730, i32 -2145515655, i32 -2145515630, i32 -2145515486, i32 -2145513245, i32 -2145513156, i32 -2145513035, i32 -2145512940, i32 -2145512839, i32 -2145512812, i32 -2145512729, i32 -2145512640, i32 -2145512519, i32 -2145512419, i32 -2145512313, i32 -2145512205, i32 -2145515198, i32 -2145515145, i32 -2145515114, i32 -2145515083, i32 -2145515062, i32 -2145515040, i32 -2145514991, i32 -2145514970, i32 -2145512122, i32 -2145512033, i32 -2145511912, i32 -2145511813, i32 -2145511707, i32 -2145511605, i32 -2145511572, i32 -2145511499, i32 -2145511431, i32 -2145514596, i32 -2145514543, i32 -2145514512, i32 -2145514481, i32 -2145514460, i32 -2145514438, i32 -2145514389, i32 -2145514368, i32 -2145511376, i32 -2145511287, i32 -2145511166, i32 -2145511067, i32 -2145510961, i32 -2145510859, i32 -2145510826, i32 -2145510743, i32 -2145510654, i32 -2145510533, i32 -2145510433, i32 -2145510407, i32 -2145510304, i32 -2145510278, i32 -2145514110, i32 -2145514043, i32 -2145514018, i32 -2145513954, i32 -2145513838, i32 -2145513813, i32 -2145513788}
!5936 = !DILocation(line: 801, column: 31, scope: !5823)
!5937 = !DILocalVariable(name: "s", arg: 1, scope: !5938, file: !3, line: 3745, type: !80)
!5938 = distinct !DISubprogram(name: "lwip_getpeername", scope: !3, file: !3, line: 3745, type: !2771, isLocal: false, isDefinition: true, scopeLine: 3746, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5939)
!5939 = !{!5937, !5940, !5941}
!5940 = !DILocalVariable(name: "name", arg: 2, scope: !5938, file: !3, line: 3745, type: !1004)
!5941 = !DILocalVariable(name: "namelen", arg: 3, scope: !5938, file: !3, line: 3745, type: !2773)
!5942 = !DILocation(line: 3745, column: 22, scope: !5938, inlinedAt: !5943)
!5943 = distinct !DILocation(line: 801, column: 8, scope: !5823)
!5944 = !DILocation(line: 3745, column: 42, scope: !5938, inlinedAt: !5943)
!5945 = !DILocation(line: 3745, column: 59, scope: !5938, inlinedAt: !5943)
!5946 = !DILocation(line: 3747, column: 10, scope: !5938, inlinedAt: !5943)
!5947 = !DILocation(line: 3747, column: 3, scope: !5938, inlinedAt: !5943)
!5948 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5949)
!5949 = distinct !DILocation(line: 802, column: 2, scope: !5850)
!5950 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5949)
!5951 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5949)
!5952 = !DILocation(line: 802, column: 2, scope: !5850)
!5953 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5954)
!5954 = distinct !DILocation(line: 802, column: 2, scope: !5850)
!5955 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5954)
!5956 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5954)
!5957 = !DILocation(line: 802, column: 2, scope: !5851)
!5958 = !DILocation(line: 802, column: 2, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 802, column: 2)
!5960 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !5961)
!5961 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !5962)
!5962 = distinct !DILocation(line: 802, column: 2, scope: !5847)
!5963 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !5961)
!5964 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !5961)
!5965 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !5962)
!5966 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !5962)
!5967 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !5962)
!5968 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !5962)
!5969 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !5962)
!5970 = !DILocation(line: 802, column: 2, scope: !5847)
!5971 = !{i32 -2145508314, i32 -2145508301, i32 -2145508276, i32 -2145508252, i32 -2145508227, i32 -2145508152, i32 -2145508127, i32 -2145507983, i32 -2145505756, i32 -2145505667, i32 -2145505546, i32 -2145505451, i32 -2145505350, i32 -2145505323, i32 -2145505240, i32 -2145505151, i32 -2145505030, i32 -2145504930, i32 -2145504824, i32 -2145504716, i32 -2145507695, i32 -2145507642, i32 -2145507611, i32 -2145507580, i32 -2145507559, i32 -2145507537, i32 -2145507488, i32 -2145507467, i32 -2145504633, i32 -2145504544, i32 -2145504423, i32 -2145504324, i32 -2145504218, i32 -2145504116, i32 -2145504083, i32 -2145504010, i32 -2145503942, i32 -2145507093, i32 -2145507040, i32 -2145507009, i32 -2145506978, i32 -2145506957, i32 -2145506935, i32 -2145506886, i32 -2145506865, i32 -2145503890, i32 -2145503801, i32 -2145503680, i32 -2145503581, i32 -2145503475, i32 -2145503373, i32 -2145503340, i32 -2145503257, i32 -2145503168, i32 -2145503047, i32 -2145502947, i32 -2145502921, i32 -2145502818, i32 -2145502792, i32 -2145506607, i32 -2145506540, i32 -2145506515, i32 -2145506451, i32 -2145506335, i32 -2145506310, i32 -2145506285}
!5972 = !DILocation(line: 0, scope: !5823)
!5973 = !DILocation(line: 805, column: 1, scope: !5823)
!5974 = !DILocation(line: 804, column: 2, scope: !5823)
!5975 = !DILocation(line: 3745, column: 22, scope: !5938)
!5976 = !DILocation(line: 3745, column: 42, scope: !5938)
!5977 = !DILocation(line: 3745, column: 59, scope: !5938)
!5978 = !DILocation(line: 3747, column: 10, scope: !5938)
!5979 = !DILocation(line: 3747, column: 3, scope: !5938)
!5980 = distinct !DISubprogram(name: "getsockname", scope: !3, file: !3, line: 807, type: !2771, isLocal: false, isDefinition: true, scopeLine: 808, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5981)
!5981 = !{!5982, !5983, !5984, !5985, !5986, !5987, !5993, !5994, !6003}
!5982 = !DILocalVariable(name: "s", arg: 1, scope: !5980, file: !3, line: 807, type: !80)
!5983 = !DILocalVariable(name: "name", arg: 2, scope: !5980, file: !3, line: 807, type: !1004)
!5984 = !DILocalVariable(name: "namelen", arg: 3, scope: !5980, file: !3, line: 807, type: !2773)
!5985 = !DILocalVariable(name: "ret", scope: !5980, file: !3, line: 809, type: !80)
!5986 = !DILocalVariable(name: "file", scope: !5980, file: !3, line: 810, type: !1077)
!5987 = !DILocalVariable(name: "tid", scope: !5988, file: !3, line: 812, type: !170)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 812, column: 2)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 812, column: 2)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 812, column: 2)
!5991 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 812, column: 2)
!5992 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 812, column: 2)
!5993 = !DILocalVariable(name: "_ret", scope: !5988, file: !3, line: 812, type: !135)
!5994 = !DILocalVariable(name: "tid", scope: !5995, file: !3, line: 816, type: !170)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 816, column: 3)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 816, column: 3)
!5997 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 816, column: 3)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 816, column: 3)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 816, column: 3)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 816, column: 3)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 813, column: 22)
!6002 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 813, column: 6)
!6003 = !DILocalVariable(name: "tid", scope: !6004, file: !3, line: 820, type: !170)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 820, column: 2)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 820, column: 2)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 820, column: 2)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 820, column: 2)
!6008 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 820, column: 2)
!6009 = !DILocation(line: 807, column: 21, scope: !5980)
!6010 = !DILocation(line: 807, column: 41, scope: !5980)
!6011 = !DILocation(line: 807, column: 58, scope: !5980)
!6012 = !DILocation(line: 809, column: 6, scope: !5980)
!6013 = !DILocation(line: 810, column: 2, scope: !5980)
!6014 = !DILocation(line: 810, column: 24, scope: !5980)
!6015 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6016)
!6016 = distinct !DILocation(line: 812, column: 2, scope: !5991)
!6017 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6016)
!6018 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6016)
!6019 = !DILocation(line: 812, column: 2, scope: !5991)
!6020 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6021)
!6021 = distinct !DILocation(line: 812, column: 2, scope: !5991)
!6022 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6021)
!6023 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6021)
!6024 = !DILocation(line: 812, column: 2, scope: !5992)
!6025 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !6026)
!6026 = distinct !DILocation(line: 812, column: 2, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 812, column: 2)
!6028 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !6026)
!6029 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !6026)
!6030 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !6026)
!6031 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !6026)
!6032 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !6026)
!6033 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !6026)
!6034 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !6026)
!6035 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !6026)
!6036 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !6026)
!6037 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !6026)
!6038 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !6026)
!6039 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !6026)
!6040 = !DILocation(line: 0, scope: !2856, inlinedAt: !6026)
!6041 = !DILocation(line: 0, scope: !6027)
!6042 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !6026)
!6043 = !DILocation(line: 812, column: 2, scope: !6027)
!6044 = !DILocation(line: 813, column: 6, scope: !6002)
!6045 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6046)
!6046 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6047)
!6047 = distinct !DILocation(line: 812, column: 2, scope: !5988)
!6048 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6046)
!6049 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6046)
!6050 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6047)
!6051 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6047)
!6052 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6047)
!6053 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6047)
!6054 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6047)
!6055 = !DILocation(line: 812, column: 2, scope: !5988)
!6056 = !{i32 -2145500809, i32 -2145500796, i32 -2145500771, i32 -2145500747, i32 -2145500722, i32 -2145500647, i32 -2145500622, i32 -2145500478, i32 -2145497346, i32 -2145497257, i32 -2145497136, i32 -2145497041, i32 -2145496940, i32 -2145496913, i32 -2145496830, i32 -2145496741, i32 -2145496620, i32 -2145496520, i32 -2145496414, i32 -2145496306, i32 -2145500190, i32 -2145500137, i32 -2145500106, i32 -2145500075, i32 -2145500054, i32 -2145500032, i32 -2145499983, i32 -2145499962, i32 -2145496223, i32 -2145496134, i32 -2145496013, i32 -2145495914, i32 -2145495808, i32 -2145495706, i32 -2145495673, i32 -2145495600, i32 -2145495532, i32 -2145499658, i32 -2145499599, i32 -2145499546, i32 -2145499515, i32 -2145499484, i32 -2145499463, i32 -2145499441, i32 -2145499392, i32 -2145499371, i32 -2145495479, i32 -2145495390, i32 -2145495269, i32 -2145495170, i32 -2145495064, i32 -2145494962, i32 -2145494929, i32 -2145494846, i32 -2145494757, i32 -2145494636, i32 -2145494536, i32 -2145494510, i32 -2145494407, i32 -2145494381, i32 -2145499113, i32 -2145499046, i32 -2145499021, i32 -2145498957, i32 -2145498875, i32 -2145498852, i32 -2145498827, i32 -2145498802}
!6057 = !DILocation(line: 812, column: 2, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 812, column: 2)
!6059 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 812, column: 2)
!6060 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 812, column: 2)
!6061 = !{i32 -2145497614, i32 -2145497598}
!6062 = !DILocation(line: 813, column: 6, scope: !5980)
!6063 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6064)
!6064 = distinct !DILocation(line: 816, column: 3, scope: !5998)
!6065 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6064)
!6066 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6064)
!6067 = !DILocation(line: 816, column: 3, scope: !5998)
!6068 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6069)
!6069 = distinct !DILocation(line: 816, column: 3, scope: !5998)
!6070 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6069)
!6071 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6069)
!6072 = !DILocation(line: 816, column: 3, scope: !5999)
!6073 = !DILocation(line: 816, column: 3, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 816, column: 3)
!6075 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !6076)
!6076 = distinct !DILocation(line: 816, column: 3, scope: !6074)
!6077 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !6076)
!6078 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !6076)
!6079 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !6076)
!6080 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !6076)
!6081 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6082)
!6082 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6083)
!6083 = distinct !DILocation(line: 816, column: 3, scope: !5995)
!6084 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6082)
!6085 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6082)
!6086 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6083)
!6087 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6083)
!6088 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6083)
!6089 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6083)
!6090 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6083)
!6091 = !DILocation(line: 816, column: 3, scope: !5995)
!6092 = !{i32 -2145492126, i32 -2145492113, i32 -2145492088, i32 -2145492064, i32 -2145492039, i32 -2145491964, i32 -2145491939, i32 -2145491795, i32 -2145489554, i32 -2145489465, i32 -2145489344, i32 -2145489249, i32 -2145489148, i32 -2145489121, i32 -2145489038, i32 -2145488949, i32 -2145488828, i32 -2145488728, i32 -2145488622, i32 -2145488514, i32 -2145491507, i32 -2145491454, i32 -2145491423, i32 -2145491392, i32 -2145491371, i32 -2145491349, i32 -2145491300, i32 -2145491279, i32 -2145488431, i32 -2145488342, i32 -2145488221, i32 -2145488122, i32 -2145488016, i32 -2145487914, i32 -2145487881, i32 -2145487808, i32 -2145487740, i32 -2145490905, i32 -2145490852, i32 -2145490821, i32 -2145490790, i32 -2145490769, i32 -2145490747, i32 -2145490698, i32 -2145490677, i32 -2145487685, i32 -2145487596, i32 -2145487475, i32 -2145487376, i32 -2145487270, i32 -2145487168, i32 -2145487135, i32 -2145487052, i32 -2145486963, i32 -2145486842, i32 -2145486742, i32 -2145486716, i32 -2145486613, i32 -2145486587, i32 -2145490419, i32 -2145490352, i32 -2145490327, i32 -2145490263, i32 -2145490147, i32 -2145490122, i32 -2145490097}
!6093 = !DILocation(line: 819, column: 31, scope: !5980)
!6094 = !DILocalVariable(name: "s", arg: 1, scope: !6095, file: !3, line: 3751, type: !80)
!6095 = distinct !DISubprogram(name: "lwip_getsockname", scope: !3, file: !3, line: 3751, type: !2771, isLocal: false, isDefinition: true, scopeLine: 3752, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6096)
!6096 = !{!6094, !6097, !6098}
!6097 = !DILocalVariable(name: "name", arg: 2, scope: !6095, file: !3, line: 3751, type: !1004)
!6098 = !DILocalVariable(name: "namelen", arg: 3, scope: !6095, file: !3, line: 3751, type: !2773)
!6099 = !DILocation(line: 3751, column: 22, scope: !6095, inlinedAt: !6100)
!6100 = distinct !DILocation(line: 819, column: 8, scope: !5980)
!6101 = !DILocation(line: 3751, column: 42, scope: !6095, inlinedAt: !6100)
!6102 = !DILocation(line: 3751, column: 59, scope: !6095, inlinedAt: !6100)
!6103 = !DILocation(line: 3753, column: 10, scope: !6095, inlinedAt: !6100)
!6104 = !DILocation(line: 3753, column: 3, scope: !6095, inlinedAt: !6100)
!6105 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6106)
!6106 = distinct !DILocation(line: 820, column: 2, scope: !6007)
!6107 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6106)
!6108 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6106)
!6109 = !DILocation(line: 820, column: 2, scope: !6007)
!6110 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6111)
!6111 = distinct !DILocation(line: 820, column: 2, scope: !6007)
!6112 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6111)
!6113 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6111)
!6114 = !DILocation(line: 820, column: 2, scope: !6008)
!6115 = !DILocation(line: 820, column: 2, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 820, column: 2)
!6117 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6118)
!6118 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6119)
!6119 = distinct !DILocation(line: 820, column: 2, scope: !6004)
!6120 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6118)
!6121 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6118)
!6122 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6119)
!6123 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6119)
!6124 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6119)
!6125 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6119)
!6126 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6119)
!6127 = !DILocation(line: 820, column: 2, scope: !6004)
!6128 = !{i32 -2145484623, i32 -2145484610, i32 -2145484585, i32 -2145484561, i32 -2145484536, i32 -2145484461, i32 -2145484436, i32 -2145484292, i32 -2145482065, i32 -2145481976, i32 -2145481855, i32 -2145481760, i32 -2145481659, i32 -2145481632, i32 -2145481549, i32 -2145481460, i32 -2145481339, i32 -2145481239, i32 -2145481133, i32 -2145481025, i32 -2145484004, i32 -2145483951, i32 -2145483920, i32 -2145483889, i32 -2145483868, i32 -2145483846, i32 -2145483797, i32 -2145483776, i32 -2145480942, i32 -2145480853, i32 -2145480732, i32 -2145480633, i32 -2145480527, i32 -2145480425, i32 -2145480392, i32 -2145480319, i32 -2145480251, i32 -2145483402, i32 -2145483349, i32 -2145483318, i32 -2145483287, i32 -2145483266, i32 -2145483244, i32 -2145483195, i32 -2145483174, i32 -2145480199, i32 -2145480110, i32 -2145479989, i32 -2145479890, i32 -2145479784, i32 -2145479682, i32 -2145479649, i32 -2145479566, i32 -2145479477, i32 -2145479356, i32 -2145479256, i32 -2145479230, i32 -2145479127, i32 -2145479101, i32 -2145482916, i32 -2145482849, i32 -2145482824, i32 -2145482760, i32 -2145482644, i32 -2145482619, i32 -2145482594}
!6129 = !DILocation(line: 0, scope: !5980)
!6130 = !DILocation(line: 823, column: 1, scope: !5980)
!6131 = !DILocation(line: 822, column: 2, scope: !5980)
!6132 = !DILocation(line: 3751, column: 22, scope: !6095)
!6133 = !DILocation(line: 3751, column: 42, scope: !6095)
!6134 = !DILocation(line: 3751, column: 59, scope: !6095)
!6135 = !DILocation(line: 3753, column: 10, scope: !6095)
!6136 = !DILocation(line: 3753, column: 3, scope: !6095)
!6137 = distinct !DISubprogram(name: "getsockopt", scope: !3, file: !3, line: 825, type: !6138, isLocal: false, isDefinition: true, scopeLine: 826, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6140)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!80, !80, !80, !80, !143, !2773}
!6140 = !{!6141, !6142, !6143, !6144, !6145, !6146, !6147, !6148, !6154, !6155, !6164}
!6141 = !DILocalVariable(name: "s", arg: 1, scope: !6137, file: !3, line: 825, type: !80)
!6142 = !DILocalVariable(name: "level", arg: 2, scope: !6137, file: !3, line: 825, type: !80)
!6143 = !DILocalVariable(name: "optname", arg: 3, scope: !6137, file: !3, line: 825, type: !80)
!6144 = !DILocalVariable(name: "optval", arg: 4, scope: !6137, file: !3, line: 825, type: !143)
!6145 = !DILocalVariable(name: "optlen", arg: 5, scope: !6137, file: !3, line: 825, type: !2773)
!6146 = !DILocalVariable(name: "ret", scope: !6137, file: !3, line: 827, type: !80)
!6147 = !DILocalVariable(name: "file", scope: !6137, file: !3, line: 828, type: !1077)
!6148 = !DILocalVariable(name: "tid", scope: !6149, file: !3, line: 830, type: !170)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 830, column: 2)
!6150 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 830, column: 2)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 830, column: 2)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 830, column: 2)
!6153 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 830, column: 2)
!6154 = !DILocalVariable(name: "_ret", scope: !6149, file: !3, line: 830, type: !135)
!6155 = !DILocalVariable(name: "tid", scope: !6156, file: !3, line: 835, type: !170)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 835, column: 3)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 835, column: 3)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 835, column: 3)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 835, column: 3)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !3, line: 835, column: 3)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 835, column: 3)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 831, column: 22)
!6163 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 831, column: 6)
!6164 = !DILocalVariable(name: "tid", scope: !6165, file: !3, line: 839, type: !170)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 839, column: 2)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 839, column: 2)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 839, column: 2)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !3, line: 839, column: 2)
!6169 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 839, column: 2)
!6170 = !DILocation(line: 825, column: 20, scope: !6137)
!6171 = !DILocation(line: 825, column: 27, scope: !6137)
!6172 = !DILocation(line: 825, column: 38, scope: !6137)
!6173 = !DILocation(line: 825, column: 53, scope: !6137)
!6174 = !DILocation(line: 825, column: 72, scope: !6137)
!6175 = !DILocation(line: 827, column: 6, scope: !6137)
!6176 = !DILocation(line: 828, column: 2, scope: !6137)
!6177 = !DILocation(line: 828, column: 24, scope: !6137)
!6178 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6179)
!6179 = distinct !DILocation(line: 830, column: 2, scope: !6152)
!6180 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6179)
!6181 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6179)
!6182 = !DILocation(line: 830, column: 2, scope: !6152)
!6183 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6184)
!6184 = distinct !DILocation(line: 830, column: 2, scope: !6152)
!6185 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6184)
!6186 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6184)
!6187 = !DILocation(line: 830, column: 2, scope: !6153)
!6188 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !6189)
!6189 = distinct !DILocation(line: 830, column: 2, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 830, column: 2)
!6191 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !6189)
!6192 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !6189)
!6193 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !6189)
!6194 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !6189)
!6195 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !6189)
!6196 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !6189)
!6197 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !6189)
!6198 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !6189)
!6199 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !6189)
!6200 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !6189)
!6201 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !6189)
!6202 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !6189)
!6203 = !DILocation(line: 0, scope: !2856, inlinedAt: !6189)
!6204 = !DILocation(line: 0, scope: !6190)
!6205 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !6189)
!6206 = !DILocation(line: 830, column: 2, scope: !6190)
!6207 = !DILocation(line: 831, column: 6, scope: !6163)
!6208 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6209)
!6209 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6210)
!6210 = distinct !DILocation(line: 830, column: 2, scope: !6149)
!6211 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6209)
!6212 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6209)
!6213 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6210)
!6214 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6210)
!6215 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6210)
!6216 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6210)
!6217 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6210)
!6218 = !DILocation(line: 830, column: 2, scope: !6149)
!6219 = !{i32 -2145477118, i32 -2145477105, i32 -2145477080, i32 -2145477056, i32 -2145477031, i32 -2145476956, i32 -2145476931, i32 -2145476787, i32 -2145473655, i32 -2145473566, i32 -2145473445, i32 -2145473350, i32 -2145473249, i32 -2145473222, i32 -2145473139, i32 -2145473050, i32 -2145472929, i32 -2145472829, i32 -2145472723, i32 -2145472615, i32 -2145476499, i32 -2145476446, i32 -2145476415, i32 -2145476384, i32 -2145476363, i32 -2145476341, i32 -2145476292, i32 -2145476271, i32 -2145472532, i32 -2145472443, i32 -2145472322, i32 -2145472223, i32 -2145472117, i32 -2145472015, i32 -2145471982, i32 -2145471909, i32 -2145471841, i32 -2145475967, i32 -2145475908, i32 -2145475855, i32 -2145475824, i32 -2145475793, i32 -2145475772, i32 -2145475750, i32 -2145475701, i32 -2145475680, i32 -2145471788, i32 -2145471699, i32 -2145471578, i32 -2145471479, i32 -2145471373, i32 -2145471271, i32 -2145471238, i32 -2145471155, i32 -2145471066, i32 -2145470945, i32 -2145470845, i32 -2145470819, i32 -2145470716, i32 -2145470690, i32 -2145475422, i32 -2145475355, i32 -2145475330, i32 -2145475266, i32 -2145475184, i32 -2145475161, i32 -2145475136, i32 -2145475111}
!6220 = !DILocation(line: 830, column: 2, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 830, column: 2)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 830, column: 2)
!6223 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 830, column: 2)
!6224 = !{i32 -2145473923, i32 -2145473907}
!6225 = !DILocation(line: 831, column: 6, scope: !6137)
!6226 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6227)
!6227 = distinct !DILocation(line: 835, column: 3, scope: !6159)
!6228 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6227)
!6229 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6227)
!6230 = !DILocation(line: 835, column: 3, scope: !6159)
!6231 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6232)
!6232 = distinct !DILocation(line: 835, column: 3, scope: !6159)
!6233 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6232)
!6234 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6232)
!6235 = !DILocation(line: 835, column: 3, scope: !6160)
!6236 = !DILocation(line: 835, column: 3, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 835, column: 3)
!6238 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !6239)
!6239 = distinct !DILocation(line: 835, column: 3, scope: !6237)
!6240 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !6239)
!6241 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !6239)
!6242 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !6239)
!6243 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !6239)
!6244 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6245)
!6245 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6246)
!6246 = distinct !DILocation(line: 835, column: 3, scope: !6156)
!6247 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6245)
!6248 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6245)
!6249 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6246)
!6250 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6246)
!6251 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6246)
!6252 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6246)
!6253 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6246)
!6254 = !DILocation(line: 835, column: 3, scope: !6156)
!6255 = !{i32 -2145468435, i32 -2145468422, i32 -2145468397, i32 -2145468373, i32 -2145468348, i32 -2145468273, i32 -2145468248, i32 -2145468104, i32 -2145465863, i32 -2145465774, i32 -2145465653, i32 -2145465558, i32 -2145465457, i32 -2145465430, i32 -2145465347, i32 -2145465258, i32 -2145465137, i32 -2145465037, i32 -2145464931, i32 -2145464823, i32 -2145467816, i32 -2145467763, i32 -2145467732, i32 -2145467701, i32 -2145467680, i32 -2145467658, i32 -2145467609, i32 -2145467588, i32 -2145464740, i32 -2145464651, i32 -2145464530, i32 -2145464431, i32 -2145464325, i32 -2145464223, i32 -2145464190, i32 -2145464117, i32 -2145464049, i32 -2145467214, i32 -2145467161, i32 -2145467130, i32 -2145467099, i32 -2145467078, i32 -2145467056, i32 -2145467007, i32 -2145466986, i32 -2145463994, i32 -2145463905, i32 -2145463784, i32 -2145463685, i32 -2145463579, i32 -2145463477, i32 -2145463444, i32 -2145463361, i32 -2145463272, i32 -2145463151, i32 -2145463051, i32 -2145463025, i32 -2145462922, i32 -2145462896, i32 -2145466728, i32 -2145466661, i32 -2145466636, i32 -2145466572, i32 -2145466456, i32 -2145466431, i32 -2145466406}
!6256 = !DILocation(line: 838, column: 30, scope: !6137)
!6257 = !DILocation(line: 838, column: 8, scope: !6137)
!6258 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6259)
!6259 = distinct !DILocation(line: 839, column: 2, scope: !6168)
!6260 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6259)
!6261 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6259)
!6262 = !DILocation(line: 839, column: 2, scope: !6168)
!6263 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6264)
!6264 = distinct !DILocation(line: 839, column: 2, scope: !6168)
!6265 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6264)
!6266 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6264)
!6267 = !DILocation(line: 839, column: 2, scope: !6169)
!6268 = !DILocation(line: 839, column: 2, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 839, column: 2)
!6270 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6271)
!6271 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6272)
!6272 = distinct !DILocation(line: 839, column: 2, scope: !6165)
!6273 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6271)
!6274 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6271)
!6275 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6272)
!6276 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6272)
!6277 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6272)
!6278 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6272)
!6279 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6272)
!6280 = !DILocation(line: 839, column: 2, scope: !6165)
!6281 = !{i32 -2145460932, i32 -2145460919, i32 -2145460894, i32 -2145460870, i32 -2145460845, i32 -2145460770, i32 -2145460745, i32 -2145460601, i32 -2145458374, i32 -2145458285, i32 -2145458164, i32 -2145458069, i32 -2145457968, i32 -2145457941, i32 -2145457858, i32 -2145457769, i32 -2145457648, i32 -2145457548, i32 -2145457442, i32 -2145457334, i32 -2145460313, i32 -2145460260, i32 -2145460229, i32 -2145460198, i32 -2145460177, i32 -2145460155, i32 -2145460106, i32 -2145460085, i32 -2145457251, i32 -2145457162, i32 -2145457041, i32 -2145456942, i32 -2145456836, i32 -2145456734, i32 -2145456701, i32 -2145456628, i32 -2145456560, i32 -2145459711, i32 -2145459658, i32 -2145459627, i32 -2145459596, i32 -2145459575, i32 -2145459553, i32 -2145459504, i32 -2145459483, i32 -2145456508, i32 -2145456419, i32 -2145456298, i32 -2145456199, i32 -2145456093, i32 -2145455991, i32 -2145455958, i32 -2145455875, i32 -2145455786, i32 -2145455665, i32 -2145455565, i32 -2145455539, i32 -2145455436, i32 -2145455410, i32 -2145459225, i32 -2145459158, i32 -2145459133, i32 -2145459069, i32 -2145458953, i32 -2145458928, i32 -2145458903}
!6282 = !DILocation(line: 0, scope: !6137)
!6283 = !DILocation(line: 842, column: 1, scope: !6137)
!6284 = !DILocation(line: 841, column: 2, scope: !6137)
!6285 = distinct !DISubprogram(name: "lwip_getsockopt", scope: !3, file: !3, line: 3757, type: !6138, isLocal: false, isDefinition: true, scopeLine: 3758, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6286)
!6286 = !{!6287, !6288, !6289, !6290, !6291, !6292, !6293, !6294, !6298, !6304, !6306}
!6287 = !DILocalVariable(name: "s", arg: 1, scope: !6285, file: !3, line: 3757, type: !80)
!6288 = !DILocalVariable(name: "level", arg: 2, scope: !6285, file: !3, line: 3757, type: !80)
!6289 = !DILocalVariable(name: "optname", arg: 3, scope: !6285, file: !3, line: 3757, type: !80)
!6290 = !DILocalVariable(name: "optval", arg: 4, scope: !6285, file: !3, line: 3757, type: !143)
!6291 = !DILocalVariable(name: "optlen", arg: 5, scope: !6285, file: !3, line: 3757, type: !2773)
!6292 = !DILocalVariable(name: "err", scope: !6285, file: !3, line: 3759, type: !80)
!6293 = !DILocalVariable(name: "sock", scope: !6285, file: !3, line: 3760, type: !1165)
!6294 = !DILocalVariable(name: "sockerr", scope: !6295, file: !3, line: 3771, type: !1007)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 3771, column: 5)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 3770, column: 45)
!6297 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 3770, column: 7)
!6298 = !DILocalVariable(name: "tid", scope: !6299, file: !3, line: 3771, type: !170)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 3771, column: 5)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 3771, column: 5)
!6301 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 3771, column: 5)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 3771, column: 5)
!6303 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 3771, column: 5)
!6304 = !DILocalVariable(name: "sockerr", scope: !6305, file: !3, line: 3828, type: !1007)
!6305 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 3828, column: 3)
!6306 = !DILocalVariable(name: "tid", scope: !6307, file: !3, line: 3828, type: !170)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 3828, column: 3)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 3828, column: 3)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 3828, column: 3)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 3828, column: 3)
!6311 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 3828, column: 3)
!6312 = !DILocation(line: 3757, column: 21, scope: !6285)
!6313 = !DILocation(line: 3757, column: 28, scope: !6285)
!6314 = !DILocation(line: 3757, column: 39, scope: !6285)
!6315 = !DILocation(line: 3757, column: 54, scope: !6285)
!6316 = !DILocation(line: 3757, column: 73, scope: !6285)
!6317 = !DILocation(line: 3760, column: 28, scope: !6285)
!6318 = !DILocation(line: 3760, column: 21, scope: !6285)
!6319 = !DILocation(line: 3766, column: 8, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 3766, column: 7)
!6321 = !DILocation(line: 3766, column: 7, scope: !6285)
!6322 = !DILocation(line: 3770, column: 13, scope: !6297)
!6323 = !DILocation(line: 3770, column: 33, scope: !6297)
!6324 = !DILocation(line: 3770, column: 24, scope: !6297)
!6325 = !DILocation(line: 3771, column: 5, scope: !6295)
!6326 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6327)
!6327 = distinct !DILocation(line: 3771, column: 5, scope: !6302)
!6328 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6327)
!6329 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6327)
!6330 = !DILocation(line: 3771, column: 5, scope: !6302)
!6331 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6332)
!6332 = distinct !DILocation(line: 3771, column: 5, scope: !6302)
!6333 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6332)
!6334 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6332)
!6335 = !DILocation(line: 3771, column: 5, scope: !6303)
!6336 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !6337)
!6337 = distinct !DILocation(line: 3771, column: 5, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 3771, column: 5)
!6339 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !6337)
!6340 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !6337)
!6341 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !6337)
!6342 = !DILocation(line: 3771, column: 5, scope: !6338)
!6343 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6344)
!6344 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6345)
!6345 = distinct !DILocation(line: 3771, column: 5, scope: !6299)
!6346 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6344)
!6347 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6344)
!6348 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6345)
!6349 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6345)
!6350 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6345)
!6351 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6345)
!6352 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6345)
!6353 = !DILocation(line: 3771, column: 5, scope: !6299)
!6354 = !{i32 -2144616782, i32 -2144616769, i32 -2144616744, i32 -2144616720, i32 -2144616695, i32 -2144616620, i32 -2144616595, i32 -2144616451, i32 -2144614228, i32 -2144614139, i32 -2144614018, i32 -2144613923, i32 -2144613822, i32 -2144613795, i32 -2144613712, i32 -2144613623, i32 -2144613502, i32 -2144613402, i32 -2144613296, i32 -2144613188, i32 -2144616163, i32 -2144616110, i32 -2144616079, i32 -2144616048, i32 -2144616027, i32 -2144616005, i32 -2144615956, i32 -2144615935, i32 -2144613105, i32 -2144613016, i32 -2144612895, i32 -2144612796, i32 -2144612690, i32 -2144612588, i32 -2144612555, i32 -2144612482, i32 -2144612414, i32 -2144615561, i32 -2144615508, i32 -2144615477, i32 -2144615446, i32 -2144615425, i32 -2144615403, i32 -2144615354, i32 -2144615333, i32 -2144612359, i32 -2144612270, i32 -2144612149, i32 -2144612050, i32 -2144611944, i32 -2144611842, i32 -2144611809, i32 -2144611726, i32 -2144611637, i32 -2144611516, i32 -2144611416, i32 -2144611390, i32 -2144611287, i32 -2144611261, i32 -2144615075, i32 -2144615008, i32 -2144614983, i32 -2144614919, i32 -2144614803, i32 -2144614778, i32 -2144614753}
!6355 = !DILocation(line: 3773, column: 5, scope: !6296)
!6356 = !DILocation(line: 3778, column: 3, scope: !6285)
!6357 = !DILocalVariable(name: "s", arg: 1, scope: !6358, file: !3, line: 3880, type: !80)
!6358 = distinct !DISubprogram(name: "lwip_getsockopt_impl", scope: !3, file: !3, line: 3880, type: !6138, isLocal: true, isDefinition: true, scopeLine: 3881, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6359)
!6359 = !{!6357, !6360, !6361, !6362, !6363, !6364, !6365}
!6360 = !DILocalVariable(name: "level", arg: 2, scope: !6358, file: !3, line: 3880, type: !80)
!6361 = !DILocalVariable(name: "optname", arg: 3, scope: !6358, file: !3, line: 3880, type: !80)
!6362 = !DILocalVariable(name: "optval", arg: 4, scope: !6358, file: !3, line: 3880, type: !143)
!6363 = !DILocalVariable(name: "optlen", arg: 5, scope: !6358, file: !3, line: 3880, type: !2773)
!6364 = !DILocalVariable(name: "err", scope: !6358, file: !3, line: 3882, type: !80)
!6365 = !DILocalVariable(name: "sock", scope: !6358, file: !3, line: 3883, type: !1165)
!6366 = !DILocation(line: 3880, column: 26, scope: !6358, inlinedAt: !6367)
!6367 = distinct !DILocation(line: 3779, column: 9, scope: !6285)
!6368 = !DILocation(line: 3880, column: 33, scope: !6358, inlinedAt: !6367)
!6369 = !DILocation(line: 3880, column: 44, scope: !6358, inlinedAt: !6367)
!6370 = !DILocation(line: 3880, column: 59, scope: !6358, inlinedAt: !6367)
!6371 = !DILocation(line: 3880, column: 78, scope: !6358, inlinedAt: !6367)
!6372 = !DILocation(line: 3882, column: 7, scope: !6358, inlinedAt: !6367)
!6373 = !DILocalVariable(name: "fd", arg: 1, scope: !6374, file: !3, line: 1458, type: !80)
!6374 = distinct !DISubprogram(name: "tryget_socket", scope: !3, file: !3, line: 1458, type: !5211, isLocal: true, isDefinition: true, scopeLine: 1459, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6375)
!6375 = !{!6373, !6376}
!6376 = !DILocalVariable(name: "sock", scope: !6374, file: !3, line: 1460, type: !1165)
!6377 = !DILocation(line: 1458, column: 19, scope: !6374, inlinedAt: !6378)
!6378 = distinct !DILocation(line: 3883, column: 28, scope: !6358, inlinedAt: !6367)
!6379 = !DILocalVariable(name: "fd", arg: 1, scope: !6380, file: !3, line: 1427, type: !80)
!6380 = distinct !DISubprogram(name: "tryget_socket_unconn", scope: !3, file: !3, line: 1427, type: !5211, isLocal: true, isDefinition: true, scopeLine: 1428, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6381)
!6381 = !{!6379, !6382}
!6382 = !DILocalVariable(name: "ret", scope: !6380, file: !3, line: 1429, type: !1165)
!6383 = !DILocation(line: 1427, column: 26, scope: !6380, inlinedAt: !6384)
!6384 = distinct !DILocation(line: 1460, column: 28, scope: !6374, inlinedAt: !6378)
!6385 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !6386)
!6386 = distinct !DILocation(line: 1429, column: 27, scope: !6380, inlinedAt: !6384)
!6387 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !6386)
!6388 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !6386)
!6389 = !DILocation(line: 1414, column: 5, scope: !6390, inlinedAt: !6386)
!6390 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 1412, column: 38)
!6391 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !6386)
!6392 = !DILocation(line: 1435, column: 3, scope: !6380, inlinedAt: !6384)
!6393 = !DILocation(line: 1461, column: 7, scope: !6374, inlinedAt: !6378)
!6394 = !DILocation(line: 1416, column: 11, scope: !5218, inlinedAt: !6386)
!6395 = !DILocation(line: 1416, column: 3, scope: !5218, inlinedAt: !6386)
!6396 = !DILocation(line: 1462, column: 15, scope: !6397, inlinedAt: !6378)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 1462, column: 9)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1461, column: 21)
!6399 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 1461, column: 7)
!6400 = !DILocation(line: 1462, column: 9, scope: !6397, inlinedAt: !6378)
!6401 = !DILocation(line: 1462, column: 9, scope: !6398, inlinedAt: !6378)
!6402 = !DILocation(line: 1467, column: 3, scope: !6374, inlinedAt: !6378)
!6403 = !DILocation(line: 1468, column: 1, scope: !6374, inlinedAt: !6378)
!6404 = !DILocation(line: 3884, column: 7, scope: !6358, inlinedAt: !6367)
!6405 = !DILocation(line: 0, scope: !6358, inlinedAt: !6367)
!6406 = !DILocation(line: 1463, column: 7, scope: !6407, inlinedAt: !6378)
!6407 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 1462, column: 21)
!6408 = !DILocation(line: 3894, column: 3, scope: !6358, inlinedAt: !6367)
!6409 = !DILocation(line: 3898, column: 7, scope: !6410, inlinedAt: !6367)
!6410 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 3894, column: 18)
!6411 = !DILocation(line: 3902, column: 11, scope: !6412, inlinedAt: !6367)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 3902, column: 11)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 3902, column: 11)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3902, column: 11)
!6415 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 3898, column: 24)
!6416 = !DILocation(line: 3902, column: 11, scope: !6413, inlinedAt: !6367)
!6417 = !DILocation(line: 3902, column: 11, scope: !6418, inlinedAt: !6367)
!6418 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 3902, column: 11)
!6419 = !DILocation(line: 3902, column: 11, scope: !6420, inlinedAt: !6367)
!6420 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 3902, column: 11)
!6421 = !DILocation(line: 3902, column: 11, scope: !6414, inlinedAt: !6367)
!6422 = !DILocation(line: 3902, column: 11, scope: !6423, inlinedAt: !6367)
!6423 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 3902, column: 11)
!6424 = !DILocation(line: 3903, column: 15, scope: !6425, inlinedAt: !6367)
!6425 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3903, column: 15)
!6426 = !DILocation(line: 3903, column: 51, scope: !6425, inlinedAt: !6367)
!6427 = !DILocation(line: 3903, column: 15, scope: !6415, inlinedAt: !6367)
!6428 = !DILocation(line: 0, scope: !6429, inlinedAt: !6367)
!6429 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 3903, column: 67)
!6430 = !DILocation(line: 3907, column: 70, scope: !6431, inlinedAt: !6367)
!6431 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3907, column: 15)
!6432 = !{!6433, !1405, i64 72}
!6433 = !{!"tcp_pcb", !1627, i64 0, !1627, i64 24, !1405, i64 48, !1405, i64 49, !1405, i64 50, !1405, i64 51, !1408, i64 56, !1408, i64 64, !1405, i64 72, !1405, i64 76, !1565, i64 78, !1565, i64 80, !1565, i64 82, !1405, i64 84, !1405, i64 85, !1405, i64 86, !1409, i64 88, !1409, i64 92, !1409, i64 96, !1409, i64 100, !1409, i64 104, !1565, i64 108, !1565, i64 110, !1409, i64 112, !1409, i64 116, !1565, i64 120, !1565, i64 122, !1565, i64 124, !1405, i64 126, !1405, i64 127, !1409, i64 128, !1409, i64 132, !1409, i64 136, !1409, i64 140, !1409, i64 144, !1409, i64 148, !1409, i64 152, !1409, i64 156, !1409, i64 160, !1409, i64 164, !1409, i64 168, !1565, i64 172, !1565, i64 174, !1409, i64 176, !1408, i64 184, !1408, i64 192, !1408, i64 200, !1408, i64 208, !1408, i64 216, !1408, i64 224, !1408, i64 232, !1408, i64 240, !1408, i64 248, !1408, i64 256, !1409, i64 264, !1405, i64 268, !1405, i64 269, !1405, i64 270, !1405, i64 271, !1405, i64 272, !1405, i64 273}
!6434 = !DILocation(line: 3907, column: 76, scope: !6431, inlinedAt: !6367)
!6435 = !DILocation(line: 3907, column: 15, scope: !6415, inlinedAt: !6367)
!6436 = !DILocation(line: 0, scope: !6437, inlinedAt: !6367)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 3909, column: 18)
!6438 = !DILocation(line: 3908, column: 28, scope: !6439, inlinedAt: !6367)
!6439 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 3907, column: 88)
!6440 = !DILocation(line: 3909, column: 11, scope: !6439, inlinedAt: !6367)
!6441 = !DILocation(line: 3910, column: 28, scope: !6437, inlinedAt: !6367)
!6442 = !DILocation(line: 3921, column: 24, scope: !6443, inlinedAt: !6367)
!6443 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3921, column: 15)
!6444 = !DILocation(line: 3921, column: 41, scope: !6443, inlinedAt: !6367)
!6445 = !DILocation(line: 3922, column: 16, scope: !6443, inlinedAt: !6367)
!6446 = !DILocation(line: 3922, column: 52, scope: !6443, inlinedAt: !6367)
!6447 = !DILocation(line: 3921, column: 15, scope: !6415, inlinedAt: !6367)
!6448 = !DILocation(line: 0, scope: !6449, inlinedAt: !6367)
!6449 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 3922, column: 69)
!6450 = !DILocalVariable(name: "optname", arg: 1, scope: !6451, file: !3, line: 3857, type: !80)
!6451 = distinct !DISubprogram(name: "lwip_sockopt_to_ipopt", scope: !3, file: !3, line: 3857, type: !1070, isLocal: true, isDefinition: true, scopeLine: 3858, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6452)
!6452 = !{!6450}
!6453 = !DILocation(line: 3857, column: 27, scope: !6451, inlinedAt: !6454)
!6454 = distinct !DILocation(line: 3927, column: 21, scope: !6415, inlinedAt: !6367)
!6455 = !DILocation(line: 3863, column: 3, scope: !6451, inlinedAt: !6454)
!6456 = !DILocation(line: 3871, column: 5, scope: !6457, inlinedAt: !6454)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 3871, column: 5)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3871, column: 5)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 3871, column: 5)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 3871, column: 5)
!6461 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 3863, column: 20)
!6462 = !DILocation(line: 3871, column: 5, scope: !6463, inlinedAt: !6454)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 3871, column: 5)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 3871, column: 5)
!6465 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 3871, column: 5)
!6466 = !DILocation(line: 0, scope: !6461, inlinedAt: !6454)
!6467 = !DILocation(line: 0, scope: !6285)
!6468 = !DILocation(line: 3874, column: 1, scope: !6451, inlinedAt: !6454)
!6469 = !DILocation(line: 3929, column: 11, scope: !6470, inlinedAt: !6367)
!6470 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 3929, column: 11)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 3929, column: 11)
!6472 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3929, column: 11)
!6473 = !DILocation(line: 3929, column: 11, scope: !6471, inlinedAt: !6367)
!6474 = !DILocation(line: 3929, column: 11, scope: !6475, inlinedAt: !6367)
!6475 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 3929, column: 11)
!6476 = !DILocation(line: 3929, column: 11, scope: !6477, inlinedAt: !6367)
!6477 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 3929, column: 11)
!6478 = !DILocation(line: 3929, column: 11, scope: !6472, inlinedAt: !6367)
!6479 = !DILocation(line: 3929, column: 11, scope: !6480, inlinedAt: !6367)
!6480 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3929, column: 11)
!6481 = !DILocation(line: 3930, column: 28, scope: !6415, inlinedAt: !6367)
!6482 = !{!6483, !1405, i64 49}
!6483 = !{!"ip_pcb", !1627, i64 0, !1627, i64 24, !1405, i64 48, !1405, i64 49, !1405, i64 50, !1405, i64 51}
!6484 = !DILocation(line: 3930, column: 12, scope: !6415, inlinedAt: !6367)
!6485 = !DILocation(line: 3930, column: 26, scope: !6415, inlinedAt: !6367)
!6486 = !DILocation(line: 3933, column: 11, scope: !6415, inlinedAt: !6367)
!6487 = !DILocation(line: 3936, column: 11, scope: !6488, inlinedAt: !6367)
!6488 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 3936, column: 11)
!6489 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 3936, column: 11)
!6490 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3936, column: 11)
!6491 = !DILocation(line: 3936, column: 11, scope: !6489, inlinedAt: !6367)
!6492 = !DILocation(line: 3936, column: 11, scope: !6493, inlinedAt: !6367)
!6493 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 3936, column: 11)
!6494 = !DILocation(line: 3937, column: 19, scope: !6415, inlinedAt: !6367)
!6495 = !DILocation(line: 3937, column: 11, scope: !6415, inlinedAt: !6367)
!6496 = !DILocation(line: 3939, column: 16, scope: !6497, inlinedAt: !6367)
!6497 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3937, column: 64)
!6498 = !DILocation(line: 3939, column: 30, scope: !6497, inlinedAt: !6367)
!6499 = !DILocation(line: 3940, column: 15, scope: !6497, inlinedAt: !6367)
!6500 = !DILocation(line: 3942, column: 16, scope: !6497, inlinedAt: !6367)
!6501 = !DILocation(line: 3942, column: 30, scope: !6497, inlinedAt: !6367)
!6502 = !DILocation(line: 3943, column: 15, scope: !6497, inlinedAt: !6367)
!6503 = !DILocation(line: 3945, column: 16, scope: !6497, inlinedAt: !6367)
!6504 = !DILocation(line: 3945, column: 30, scope: !6497, inlinedAt: !6367)
!6505 = !DILocation(line: 3946, column: 15, scope: !6497, inlinedAt: !6367)
!6506 = !DILocation(line: 3948, column: 16, scope: !6497, inlinedAt: !6367)
!6507 = !DILocation(line: 3948, column: 30, scope: !6497, inlinedAt: !6367)
!6508 = !DILocation(line: 3952, column: 11, scope: !6497, inlinedAt: !6367)
!6509 = !DILocation(line: 3958, column: 11, scope: !6510, inlinedAt: !6367)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 3958, column: 11)
!6511 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3958, column: 11)
!6512 = !DILocation(line: 3958, column: 11, scope: !6511, inlinedAt: !6367)
!6513 = !DILocation(line: 3958, column: 11, scope: !6514, inlinedAt: !6367)
!6514 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 3958, column: 11)
!6515 = !DILocation(line: 3959, column: 41, scope: !6415, inlinedAt: !6367)
!6516 = !DILocation(line: 3959, column: 28, scope: !6415, inlinedAt: !6367)
!6517 = !DILocation(line: 3959, column: 12, scope: !6415, inlinedAt: !6367)
!6518 = !DILocation(line: 3959, column: 26, scope: !6415, inlinedAt: !6367)
!6519 = !DILocation(line: 3962, column: 11, scope: !6415, inlinedAt: !6367)
!6520 = !DILocation(line: 4000, column: 11, scope: !6521, inlinedAt: !6367)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 4000, column: 11)
!6522 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 4000, column: 11)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 4000, column: 11)
!6524 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 4000, column: 11)
!6525 = !DILocation(line: 4000, column: 11, scope: !6522, inlinedAt: !6367)
!6526 = !DILocation(line: 4000, column: 11, scope: !6527, inlinedAt: !6367)
!6527 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 4000, column: 11)
!6528 = !DILocation(line: 4000, column: 11, scope: !6529, inlinedAt: !6367)
!6529 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 4000, column: 11)
!6530 = !DILocation(line: 4000, column: 11, scope: !6523, inlinedAt: !6367)
!6531 = !DILocation(line: 4000, column: 11, scope: !6532, inlinedAt: !6367)
!6532 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 4000, column: 11)
!6533 = !DILocation(line: 4000, column: 11, scope: !6534, inlinedAt: !6367)
!6534 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 4000, column: 11)
!6535 = !DILocation(line: 4000, column: 11, scope: !6524, inlinedAt: !6367)
!6536 = !DILocation(line: 4000, column: 11, scope: !6537, inlinedAt: !6367)
!6537 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 4000, column: 11)
!6538 = !DILocation(line: 4008, column: 28, scope: !6415, inlinedAt: !6367)
!6539 = !{!6540, !1405, i64 64}
!6540 = !{!"udp_pcb", !1627, i64 0, !1627, i64 24, !1405, i64 48, !1405, i64 49, !1405, i64 50, !1405, i64 51, !1408, i64 56, !1405, i64 64, !1565, i64 66, !1565, i64 68, !6541, i64 72, !1405, i64 76, !1405, i64 77, !1408, i64 80, !1408, i64 88}
!6541 = !{!"ip4_addr", !1409, i64 0}
!6542 = !DILocation(line: 4008, column: 12, scope: !6415, inlinedAt: !6367)
!6543 = !DILocation(line: 4008, column: 26, scope: !6415, inlinedAt: !6367)
!6544 = !DILocation(line: 4009, column: 11, scope: !6415, inlinedAt: !6367)
!6545 = !DILocation(line: 4021, column: 7, scope: !6410, inlinedAt: !6367)
!6546 = !DILocation(line: 4023, column: 11, scope: !6547, inlinedAt: !6367)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 4023, column: 11)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 4023, column: 11)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4023, column: 11)
!6550 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 4021, column: 24)
!6551 = !DILocation(line: 4023, column: 11, scope: !6548, inlinedAt: !6367)
!6552 = !DILocation(line: 4023, column: 11, scope: !6553, inlinedAt: !6367)
!6553 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 4023, column: 11)
!6554 = !DILocation(line: 4023, column: 11, scope: !6555, inlinedAt: !6367)
!6555 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 4023, column: 11)
!6556 = !DILocation(line: 4023, column: 11, scope: !6549, inlinedAt: !6367)
!6557 = !DILocation(line: 4023, column: 11, scope: !6558, inlinedAt: !6367)
!6558 = distinct !DILexicalBlock(scope: !6555, file: !3, line: 4023, column: 11)
!6559 = !DILocation(line: 4024, column: 48, scope: !6550, inlinedAt: !6367)
!6560 = !{!6483, !1405, i64 51}
!6561 = !DILocation(line: 4024, column: 28, scope: !6550, inlinedAt: !6367)
!6562 = !DILocation(line: 4024, column: 12, scope: !6550, inlinedAt: !6367)
!6563 = !DILocation(line: 4024, column: 26, scope: !6550, inlinedAt: !6367)
!6564 = !DILocation(line: 4027, column: 11, scope: !6550, inlinedAt: !6367)
!6565 = !DILocation(line: 4029, column: 11, scope: !6566, inlinedAt: !6367)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 4029, column: 11)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 4029, column: 11)
!6568 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4029, column: 11)
!6569 = !DILocation(line: 4029, column: 11, scope: !6567, inlinedAt: !6367)
!6570 = !DILocation(line: 4029, column: 11, scope: !6571, inlinedAt: !6367)
!6571 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 4029, column: 11)
!6572 = !DILocation(line: 4029, column: 11, scope: !6573, inlinedAt: !6367)
!6573 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 4029, column: 11)
!6574 = !DILocation(line: 4029, column: 11, scope: !6568, inlinedAt: !6367)
!6575 = !DILocation(line: 4029, column: 11, scope: !6576, inlinedAt: !6367)
!6576 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 4029, column: 11)
!6577 = !DILocation(line: 4030, column: 48, scope: !6550, inlinedAt: !6367)
!6578 = !{!6483, !1405, i64 50}
!6579 = !DILocation(line: 4030, column: 28, scope: !6550, inlinedAt: !6367)
!6580 = !DILocation(line: 4030, column: 12, scope: !6550, inlinedAt: !6367)
!6581 = !DILocation(line: 4030, column: 26, scope: !6550, inlinedAt: !6367)
!6582 = !DILocation(line: 4033, column: 11, scope: !6550, inlinedAt: !6367)
!6583 = !DILocation(line: 4036, column: 11, scope: !6584, inlinedAt: !6367)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 4036, column: 11)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 4036, column: 11)
!6586 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4036, column: 11)
!6587 = !DILocation(line: 4036, column: 11, scope: !6585, inlinedAt: !6367)
!6588 = !DILocation(line: 4036, column: 11, scope: !6589, inlinedAt: !6367)
!6589 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 4036, column: 11)
!6590 = !DILocation(line: 4036, column: 11, scope: !6591, inlinedAt: !6367)
!6591 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 4036, column: 11)
!6592 = !DILocation(line: 4036, column: 11, scope: !6586, inlinedAt: !6367)
!6593 = !DILocation(line: 4036, column: 11, scope: !6594, inlinedAt: !6367)
!6594 = distinct !DILexicalBlock(scope: !6591, file: !3, line: 4036, column: 11)
!6595 = !DILocation(line: 4037, column: 15, scope: !6596, inlinedAt: !6367)
!6596 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4037, column: 15)
!6597 = !DILocation(line: 4037, column: 59, scope: !6596, inlinedAt: !6367)
!6598 = !DILocation(line: 4037, column: 15, scope: !6550, inlinedAt: !6367)
!6599 = !DILocation(line: 4039, column: 13, scope: !6600, inlinedAt: !6367)
!6600 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 4037, column: 75)
!6601 = !DILocation(line: 4041, column: 29, scope: !6550, inlinedAt: !6367)
!6602 = !{!6540, !1405, i64 77}
!6603 = !DILocation(line: 4041, column: 27, scope: !6550, inlinedAt: !6367)
!6604 = !DILocation(line: 4044, column: 11, scope: !6550, inlinedAt: !6367)
!6605 = !DILocation(line: 4046, column: 11, scope: !6606, inlinedAt: !6367)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 4046, column: 11)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 4046, column: 11)
!6608 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4046, column: 11)
!6609 = !DILocation(line: 4046, column: 11, scope: !6607, inlinedAt: !6367)
!6610 = !DILocation(line: 4046, column: 11, scope: !6611, inlinedAt: !6367)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 4046, column: 11)
!6612 = !DILocation(line: 4046, column: 11, scope: !6613, inlinedAt: !6367)
!6613 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 4046, column: 11)
!6614 = !DILocation(line: 4046, column: 11, scope: !6608, inlinedAt: !6367)
!6615 = !DILocation(line: 4046, column: 11, scope: !6616, inlinedAt: !6367)
!6616 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 4046, column: 11)
!6617 = !DILocation(line: 4047, column: 15, scope: !6618, inlinedAt: !6367)
!6618 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4047, column: 15)
!6619 = !DILocation(line: 4047, column: 59, scope: !6618, inlinedAt: !6367)
!6620 = !DILocation(line: 4047, column: 15, scope: !6550, inlinedAt: !6367)
!6621 = !DILocation(line: 4049, column: 13, scope: !6622, inlinedAt: !6367)
!6622 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 4047, column: 75)
!6623 = !DILocation(line: 4051, column: 11, scope: !6550, inlinedAt: !6367)
!6624 = !{!6540, !1409, i64 72}
!6625 = !{!3409, !1409, i64 0}
!6626 = !DILocation(line: 4054, column: 11, scope: !6550, inlinedAt: !6367)
!6627 = !DILocation(line: 4056, column: 11, scope: !6628, inlinedAt: !6367)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 4056, column: 11)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4056, column: 11)
!6630 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4056, column: 11)
!6631 = !DILocation(line: 4056, column: 11, scope: !6629, inlinedAt: !6367)
!6632 = !DILocation(line: 4056, column: 11, scope: !6633, inlinedAt: !6367)
!6633 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 4056, column: 11)
!6634 = !DILocation(line: 4056, column: 11, scope: !6635, inlinedAt: !6367)
!6635 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 4056, column: 11)
!6636 = !DILocation(line: 4056, column: 11, scope: !6630, inlinedAt: !6367)
!6637 = !DILocation(line: 4056, column: 11, scope: !6638, inlinedAt: !6367)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 4056, column: 11)
!6639 = !DILocation(line: 4057, column: 37, scope: !6640, inlinedAt: !6367)
!6640 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 4057, column: 15)
!6641 = !DILocation(line: 4057, column: 43, scope: !6640, inlinedAt: !6367)
!6642 = !DILocation(line: 4057, column: 71, scope: !6640, inlinedAt: !6367)
!6643 = !DILocation(line: 4057, column: 15, scope: !6550, inlinedAt: !6367)
!6644 = !DILocation(line: 4058, column: 29, scope: !6645, inlinedAt: !6367)
!6645 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4057, column: 77)
!6646 = !DILocation(line: 4059, column: 11, scope: !6645, inlinedAt: !6367)
!6647 = !DILocation(line: 4060, column: 29, scope: !6648, inlinedAt: !6367)
!6648 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 4059, column: 18)
!6649 = !DILocation(line: 4078, column: 7, scope: !6650, inlinedAt: !6367)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 4078, column: 7)
!6651 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 4078, column: 7)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 4078, column: 7)
!6653 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 4078, column: 7)
!6654 = !DILocation(line: 4078, column: 7, scope: !6651, inlinedAt: !6367)
!6655 = !DILocation(line: 4078, column: 7, scope: !6656, inlinedAt: !6367)
!6656 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 4078, column: 7)
!6657 = !DILocation(line: 4078, column: 7, scope: !6658, inlinedAt: !6367)
!6658 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 4078, column: 7)
!6659 = !DILocation(line: 4078, column: 7, scope: !6652, inlinedAt: !6367)
!6660 = !DILocation(line: 4078, column: 7, scope: !6661, inlinedAt: !6367)
!6661 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 4078, column: 7)
!6662 = !DILocation(line: 4078, column: 7, scope: !6663, inlinedAt: !6367)
!6663 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 4078, column: 7)
!6664 = !DILocation(line: 4078, column: 7, scope: !6653, inlinedAt: !6367)
!6665 = !DILocation(line: 4078, column: 7, scope: !6666, inlinedAt: !6367)
!6666 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 4078, column: 7)
!6667 = !DILocation(line: 4079, column: 32, scope: !6668, inlinedAt: !6367)
!6668 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 4079, column: 11)
!6669 = !DILocation(line: 4079, column: 38, scope: !6668, inlinedAt: !6367)
!6670 = !DILocation(line: 4079, column: 11, scope: !6410, inlinedAt: !6367)
!6671 = !DILocation(line: 0, scope: !6410, inlinedAt: !6367)
!6672 = !DILocation(line: 4083, column: 7, scope: !6410, inlinedAt: !6367)
!6673 = !DILocation(line: 4085, column: 28, scope: !6674, inlinedAt: !6367)
!6674 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 4083, column: 24)
!6675 = !{!6433, !1565, i64 82}
!6676 = !DILocation(line: 4085, column: 12, scope: !6674, inlinedAt: !6367)
!6677 = !DILocation(line: 4085, column: 26, scope: !6674, inlinedAt: !6367)
!6678 = !DILocation(line: 4088, column: 11, scope: !6674, inlinedAt: !6367)
!6679 = !DILocation(line: 4090, column: 54, scope: !6674, inlinedAt: !6367)
!6680 = !{!6433, !1409, i64 264}
!6681 = !DILocation(line: 4090, column: 12, scope: !6674, inlinedAt: !6367)
!6682 = !DILocation(line: 4090, column: 26, scope: !6674, inlinedAt: !6367)
!6683 = !DILocation(line: 4093, column: 11, scope: !6674, inlinedAt: !6367)
!6684 = !DILocation(line: 4124, column: 7, scope: !6410, inlinedAt: !6367)
!6685 = !DILocation(line: 4126, column: 11, scope: !6686, inlinedAt: !6367)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 4126, column: 11)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 4126, column: 11)
!6688 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 4126, column: 11)
!6689 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 4124, column: 24)
!6690 = !DILocation(line: 4126, column: 11, scope: !6687, inlinedAt: !6367)
!6691 = !DILocation(line: 4126, column: 11, scope: !6692, inlinedAt: !6367)
!6692 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 4126, column: 11)
!6693 = !DILocation(line: 4127, column: 29, scope: !6689, inlinedAt: !6367)
!6694 = !DILocation(line: 4127, column: 12, scope: !6689, inlinedAt: !6367)
!6695 = !DILocation(line: 4127, column: 26, scope: !6689, inlinedAt: !6367)
!6696 = !DILocation(line: 4130, column: 11, scope: !6689, inlinedAt: !6367)
!6697 = !DILocation(line: 4199, column: 3, scope: !6358, inlinedAt: !6367)
!6698 = !DILocation(line: 0, scope: !6699, inlinedAt: !6367)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 3884, column: 14)
!6700 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 3884, column: 7)
!6701 = !DILocation(line: 4200, column: 1, scope: !6358, inlinedAt: !6367)
!6702 = !DILocation(line: 3759, column: 7, scope: !6285)
!6703 = !DILocation(line: 3780, column: 3, scope: !6285)
!6704 = !DILocation(line: 3828, column: 3, scope: !6305)
!6705 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6706)
!6706 = distinct !DILocation(line: 3828, column: 3, scope: !6310)
!6707 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6706)
!6708 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6706)
!6709 = !DILocation(line: 3828, column: 3, scope: !6310)
!6710 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6711)
!6711 = distinct !DILocation(line: 3828, column: 3, scope: !6310)
!6712 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6711)
!6713 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6711)
!6714 = !DILocation(line: 3828, column: 3, scope: !6311)
!6715 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !6716)
!6716 = distinct !DILocation(line: 3828, column: 3, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 3828, column: 3)
!6718 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !6716)
!6719 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !6716)
!6720 = !DILocation(line: 3828, column: 3, scope: !6717)
!6721 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6722)
!6722 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6723)
!6723 = distinct !DILocation(line: 3828, column: 3, scope: !6307)
!6724 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6722)
!6725 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6722)
!6726 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6723)
!6727 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6723)
!6728 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6723)
!6729 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6723)
!6730 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6723)
!6731 = !DILocation(line: 3828, column: 3, scope: !6307)
!6732 = !{i32 -2144609153, i32 -2144609140, i32 -2144609115, i32 -2144609091, i32 -2144609066, i32 -2144608991, i32 -2144608966, i32 -2144608822, i32 -2144606599, i32 -2144606510, i32 -2144606389, i32 -2144606294, i32 -2144606193, i32 -2144606166, i32 -2144606083, i32 -2144605994, i32 -2144605873, i32 -2144605773, i32 -2144605667, i32 -2144605559, i32 -2144608534, i32 -2144608481, i32 -2144608450, i32 -2144608419, i32 -2144608398, i32 -2144608376, i32 -2144608327, i32 -2144608306, i32 -2144605476, i32 -2144605387, i32 -2144605266, i32 -2144605167, i32 -2144605061, i32 -2144604959, i32 -2144604926, i32 -2144604853, i32 -2144604785, i32 -2144607932, i32 -2144607879, i32 -2144607848, i32 -2144607817, i32 -2144607796, i32 -2144607774, i32 -2144607725, i32 -2144607704, i32 -2144604730, i32 -2144604641, i32 -2144604520, i32 -2144604421, i32 -2144604315, i32 -2144604213, i32 -2144604180, i32 -2144604097, i32 -2144604008, i32 -2144603887, i32 -2144603787, i32 -2144603761, i32 -2144603658, i32 -2144603632, i32 -2144607446, i32 -2144607379, i32 -2144607354, i32 -2144607290, i32 -2144607174, i32 -2144607149, i32 -2144607124}
!6733 = !DILocation(line: 3830, column: 10, scope: !6285)
!6734 = !DILocation(line: 3830, column: 3, scope: !6285)
!6735 = !DILocation(line: 0, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6320, file: !3, line: 3766, column: 14)
!6737 = !DILocation(line: 3831, column: 1, scope: !6285)
!6738 = distinct !DISubprogram(name: "setsockopt", scope: !3, file: !3, line: 844, type: !6739, isLocal: false, isDefinition: true, scopeLine: 846, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6741)
!6739 = !DISubroutineType(types: !6740)
!6740 = !{!80, !80, !80, !80, !225, !1750}
!6741 = !{!6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6755, !6756, !6765}
!6742 = !DILocalVariable(name: "s", arg: 1, scope: !6738, file: !3, line: 844, type: !80)
!6743 = !DILocalVariable(name: "level", arg: 2, scope: !6738, file: !3, line: 844, type: !80)
!6744 = !DILocalVariable(name: "optname", arg: 3, scope: !6738, file: !3, line: 844, type: !80)
!6745 = !DILocalVariable(name: "optval", arg: 4, scope: !6738, file: !3, line: 844, type: !225)
!6746 = !DILocalVariable(name: "optlen", arg: 5, scope: !6738, file: !3, line: 845, type: !1750)
!6747 = !DILocalVariable(name: "ret", scope: !6738, file: !3, line: 847, type: !80)
!6748 = !DILocalVariable(name: "file", scope: !6738, file: !3, line: 848, type: !1077)
!6749 = !DILocalVariable(name: "tid", scope: !6750, file: !3, line: 850, type: !170)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 850, column: 2)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 850, column: 2)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 850, column: 2)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 850, column: 2)
!6754 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 850, column: 2)
!6755 = !DILocalVariable(name: "_ret", scope: !6750, file: !3, line: 850, type: !135)
!6756 = !DILocalVariable(name: "tid", scope: !6757, file: !3, line: 855, type: !170)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 855, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 855, column: 3)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 855, column: 3)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 855, column: 3)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 855, column: 3)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 855, column: 3)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 851, column: 22)
!6764 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 851, column: 6)
!6765 = !DILocalVariable(name: "tid", scope: !6766, file: !3, line: 859, type: !170)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 859, column: 2)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 859, column: 2)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 859, column: 2)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 859, column: 2)
!6770 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 859, column: 2)
!6771 = !DILocation(line: 844, column: 20, scope: !6738)
!6772 = !DILocation(line: 844, column: 27, scope: !6738)
!6773 = !DILocation(line: 844, column: 38, scope: !6738)
!6774 = !DILocation(line: 844, column: 59, scope: !6738)
!6775 = !DILocation(line: 845, column: 19, scope: !6738)
!6776 = !DILocation(line: 847, column: 6, scope: !6738)
!6777 = !DILocation(line: 848, column: 2, scope: !6738)
!6778 = !DILocation(line: 848, column: 24, scope: !6738)
!6779 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6780)
!6780 = distinct !DILocation(line: 850, column: 2, scope: !6753)
!6781 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6780)
!6782 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6780)
!6783 = !DILocation(line: 850, column: 2, scope: !6753)
!6784 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6785)
!6785 = distinct !DILocation(line: 850, column: 2, scope: !6753)
!6786 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6785)
!6787 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6785)
!6788 = !DILocation(line: 850, column: 2, scope: !6754)
!6789 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !6790)
!6790 = distinct !DILocation(line: 850, column: 2, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 850, column: 2)
!6792 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !6790)
!6793 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !6790)
!6794 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !6790)
!6795 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !6790)
!6796 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !6790)
!6797 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !6790)
!6798 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !6790)
!6799 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !6790)
!6800 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !6790)
!6801 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !6790)
!6802 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !6790)
!6803 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !6790)
!6804 = !DILocation(line: 0, scope: !2856, inlinedAt: !6790)
!6805 = !DILocation(line: 0, scope: !6791)
!6806 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !6790)
!6807 = !DILocation(line: 850, column: 2, scope: !6791)
!6808 = !DILocation(line: 851, column: 6, scope: !6764)
!6809 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6810)
!6810 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6811)
!6811 = distinct !DILocation(line: 850, column: 2, scope: !6750)
!6812 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6810)
!6813 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6810)
!6814 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6811)
!6815 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6811)
!6816 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6811)
!6817 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6811)
!6818 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6811)
!6819 = !DILocation(line: 850, column: 2, scope: !6750)
!6820 = !{i32 -2145453427, i32 -2145453414, i32 -2145453389, i32 -2145453365, i32 -2145453340, i32 -2145453265, i32 -2145453240, i32 -2145453096, i32 -2145449964, i32 -2145449875, i32 -2145449754, i32 -2145449659, i32 -2145449558, i32 -2145449531, i32 -2145449448, i32 -2145449359, i32 -2145449238, i32 -2145449138, i32 -2145449032, i32 -2145448924, i32 -2145452808, i32 -2145452755, i32 -2145452724, i32 -2145452693, i32 -2145452672, i32 -2145452650, i32 -2145452601, i32 -2145452580, i32 -2145448841, i32 -2145448752, i32 -2145448631, i32 -2145448532, i32 -2145448426, i32 -2145448324, i32 -2145448291, i32 -2145448218, i32 -2145448150, i32 -2145452276, i32 -2145452217, i32 -2145452164, i32 -2145452133, i32 -2145452102, i32 -2145452081, i32 -2145452059, i32 -2145452010, i32 -2145451989, i32 -2145448097, i32 -2145448008, i32 -2145447887, i32 -2145447788, i32 -2145447682, i32 -2145447580, i32 -2145447547, i32 -2145447464, i32 -2145447375, i32 -2145447254, i32 -2145447154, i32 -2145447128, i32 -2145447025, i32 -2145446999, i32 -2145451731, i32 -2145451664, i32 -2145451639, i32 -2145451575, i32 -2145451493, i32 -2145451470, i32 -2145451445, i32 -2145451420}
!6821 = !DILocation(line: 850, column: 2, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !3, line: 850, column: 2)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 850, column: 2)
!6824 = distinct !DILexicalBlock(scope: !6750, file: !3, line: 850, column: 2)
!6825 = !{i32 -2145450232, i32 -2145450216}
!6826 = !DILocation(line: 851, column: 6, scope: !6738)
!6827 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6828)
!6828 = distinct !DILocation(line: 855, column: 3, scope: !6760)
!6829 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6828)
!6830 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6828)
!6831 = !DILocation(line: 855, column: 3, scope: !6760)
!6832 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6833)
!6833 = distinct !DILocation(line: 855, column: 3, scope: !6760)
!6834 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6833)
!6835 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6833)
!6836 = !DILocation(line: 855, column: 3, scope: !6761)
!6837 = !DILocation(line: 855, column: 3, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 855, column: 3)
!6839 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !6840)
!6840 = distinct !DILocation(line: 855, column: 3, scope: !6838)
!6841 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !6840)
!6842 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !6840)
!6843 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !6840)
!6844 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !6840)
!6845 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6846)
!6846 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6847)
!6847 = distinct !DILocation(line: 855, column: 3, scope: !6757)
!6848 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6846)
!6849 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6846)
!6850 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6847)
!6851 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6847)
!6852 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6847)
!6853 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6847)
!6854 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6847)
!6855 = !DILocation(line: 855, column: 3, scope: !6757)
!6856 = !{i32 -2145440683, i32 -2145440670, i32 -2145440645, i32 -2145440621, i32 -2145440596, i32 -2145440521, i32 -2145440496, i32 -2145440352, i32 -2145438111, i32 -2145438022, i32 -2145437901, i32 -2145437806, i32 -2145437705, i32 -2145437678, i32 -2145437595, i32 -2145437506, i32 -2145437385, i32 -2145437285, i32 -2145437179, i32 -2145437071, i32 -2145440064, i32 -2145440011, i32 -2145439980, i32 -2145439949, i32 -2145439928, i32 -2145439906, i32 -2145439857, i32 -2145439836, i32 -2145436988, i32 -2145436899, i32 -2145436778, i32 -2145436679, i32 -2145436573, i32 -2145436471, i32 -2145436438, i32 -2145436365, i32 -2145436297, i32 -2145439462, i32 -2145439409, i32 -2145439378, i32 -2145439347, i32 -2145439326, i32 -2145439304, i32 -2145439255, i32 -2145439234, i32 -2145436242, i32 -2145436153, i32 -2145436032, i32 -2145435933, i32 -2145435827, i32 -2145435725, i32 -2145435692, i32 -2145435609, i32 -2145435520, i32 -2145435399, i32 -2145435299, i32 -2145435273, i32 -2145435170, i32 -2145435144, i32 -2145438976, i32 -2145438909, i32 -2145438884, i32 -2145438820, i32 -2145438704, i32 -2145438679, i32 -2145438654}
!6857 = !DILocation(line: 858, column: 30, scope: !6738)
!6858 = !DILocation(line: 858, column: 8, scope: !6738)
!6859 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6860)
!6860 = distinct !DILocation(line: 859, column: 2, scope: !6769)
!6861 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6860)
!6862 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6860)
!6863 = !DILocation(line: 859, column: 2, scope: !6769)
!6864 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6865)
!6865 = distinct !DILocation(line: 859, column: 2, scope: !6769)
!6866 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6865)
!6867 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6865)
!6868 = !DILocation(line: 859, column: 2, scope: !6770)
!6869 = !DILocation(line: 859, column: 2, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 859, column: 2)
!6871 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6872)
!6872 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6873)
!6873 = distinct !DILocation(line: 859, column: 2, scope: !6766)
!6874 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6872)
!6875 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6872)
!6876 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6873)
!6877 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6873)
!6878 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6873)
!6879 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6873)
!6880 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6873)
!6881 = !DILocation(line: 859, column: 2, scope: !6766)
!6882 = !{i32 -2145433180, i32 -2145433167, i32 -2145433142, i32 -2145433118, i32 -2145433093, i32 -2145433018, i32 -2145432993, i32 -2145432849, i32 -2145430622, i32 -2145430533, i32 -2145430412, i32 -2145430317, i32 -2145430216, i32 -2145430189, i32 -2145430106, i32 -2145430017, i32 -2145429896, i32 -2145429796, i32 -2145429690, i32 -2145429582, i32 -2145432561, i32 -2145432508, i32 -2145432477, i32 -2145432446, i32 -2145432425, i32 -2145432403, i32 -2145432354, i32 -2145432333, i32 -2145429499, i32 -2145429410, i32 -2145429289, i32 -2145429190, i32 -2145429084, i32 -2145428982, i32 -2145428949, i32 -2145428876, i32 -2145428808, i32 -2145431959, i32 -2145431906, i32 -2145431875, i32 -2145431844, i32 -2145431823, i32 -2145431801, i32 -2145431752, i32 -2145431731, i32 -2145428756, i32 -2145428667, i32 -2145428546, i32 -2145428447, i32 -2145428341, i32 -2145428239, i32 -2145428206, i32 -2145428123, i32 -2145428034, i32 -2145427913, i32 -2145427813, i32 -2145427787, i32 -2145427684, i32 -2145427658, i32 -2145431473, i32 -2145431406, i32 -2145431381, i32 -2145431317, i32 -2145431201, i32 -2145431176, i32 -2145431151}
!6883 = !DILocation(line: 0, scope: !6738)
!6884 = !DILocation(line: 862, column: 1, scope: !6738)
!6885 = !DILocation(line: 861, column: 2, scope: !6738)
!6886 = distinct !DISubprogram(name: "lwip_setsockopt", scope: !3, file: !3, line: 4203, type: !6739, isLocal: false, isDefinition: true, scopeLine: 4204, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6887)
!6887 = !{!6888, !6889, !6890, !6891, !6892, !6893, !6894, !6895, !6899, !6905, !6907}
!6888 = !DILocalVariable(name: "s", arg: 1, scope: !6886, file: !3, line: 4203, type: !80)
!6889 = !DILocalVariable(name: "level", arg: 2, scope: !6886, file: !3, line: 4203, type: !80)
!6890 = !DILocalVariable(name: "optname", arg: 3, scope: !6886, file: !3, line: 4203, type: !80)
!6891 = !DILocalVariable(name: "optval", arg: 4, scope: !6886, file: !3, line: 4203, type: !225)
!6892 = !DILocalVariable(name: "optlen", arg: 5, scope: !6886, file: !3, line: 4203, type: !1750)
!6893 = !DILocalVariable(name: "err", scope: !6886, file: !3, line: 4205, type: !80)
!6894 = !DILocalVariable(name: "sock", scope: !6886, file: !3, line: 4206, type: !1165)
!6895 = !DILocalVariable(name: "sockerr", scope: !6896, file: !3, line: 4217, type: !1007)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 4217, column: 5)
!6897 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 4216, column: 23)
!6898 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 4216, column: 7)
!6899 = !DILocalVariable(name: "tid", scope: !6900, file: !3, line: 4217, type: !170)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 4217, column: 5)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 4217, column: 5)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 4217, column: 5)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 4217, column: 5)
!6904 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 4217, column: 5)
!6905 = !DILocalVariable(name: "sockerr", scope: !6906, file: !3, line: 4269, type: !1007)
!6906 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 4269, column: 3)
!6907 = !DILocalVariable(name: "tid", scope: !6908, file: !3, line: 4269, type: !170)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 4269, column: 3)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 4269, column: 3)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 4269, column: 3)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !3, line: 4269, column: 3)
!6912 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 4269, column: 3)
!6913 = !DILocation(line: 4203, column: 21, scope: !6886)
!6914 = !DILocation(line: 4203, column: 28, scope: !6886)
!6915 = !DILocation(line: 4203, column: 39, scope: !6886)
!6916 = !DILocation(line: 4203, column: 60, scope: !6886)
!6917 = !DILocation(line: 4203, column: 78, scope: !6886)
!6918 = !DILocation(line: 4205, column: 7, scope: !6886)
!6919 = !DILocation(line: 4206, column: 28, scope: !6886)
!6920 = !DILocation(line: 4206, column: 21, scope: !6886)
!6921 = !DILocation(line: 4212, column: 8, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 4212, column: 7)
!6923 = !DILocation(line: 4212, column: 7, scope: !6886)
!6924 = !DILocation(line: 4216, column: 12, scope: !6898)
!6925 = !DILocation(line: 4216, column: 7, scope: !6886)
!6926 = !DILocation(line: 4217, column: 5, scope: !6896)
!6927 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6928)
!6928 = distinct !DILocation(line: 4217, column: 5, scope: !6903)
!6929 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6928)
!6930 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6928)
!6931 = !DILocation(line: 4217, column: 5, scope: !6903)
!6932 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6933)
!6933 = distinct !DILocation(line: 4217, column: 5, scope: !6903)
!6934 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6933)
!6935 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6933)
!6936 = !DILocation(line: 4217, column: 5, scope: !6904)
!6937 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !6938)
!6938 = distinct !DILocation(line: 4217, column: 5, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 4217, column: 5)
!6940 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !6938)
!6941 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !6938)
!6942 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !6938)
!6943 = !DILocation(line: 4217, column: 5, scope: !6939)
!6944 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !6945)
!6945 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !6946)
!6946 = distinct !DILocation(line: 4217, column: 5, scope: !6900)
!6947 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !6945)
!6948 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !6945)
!6949 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !6946)
!6950 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !6946)
!6951 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !6946)
!6952 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !6946)
!6953 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !6946)
!6954 = !DILocation(line: 4217, column: 5, scope: !6900)
!6955 = !{i32 -2144595634, i32 -2144595621, i32 -2144595596, i32 -2144595572, i32 -2144595547, i32 -2144595472, i32 -2144595447, i32 -2144595303, i32 -2144593080, i32 -2144592991, i32 -2144592870, i32 -2144592775, i32 -2144592674, i32 -2144592647, i32 -2144592564, i32 -2144592475, i32 -2144592354, i32 -2144592254, i32 -2144592148, i32 -2144592040, i32 -2144595015, i32 -2144594962, i32 -2144594931, i32 -2144594900, i32 -2144594879, i32 -2144594857, i32 -2144594808, i32 -2144594787, i32 -2144591957, i32 -2144591868, i32 -2144591747, i32 -2144591648, i32 -2144591542, i32 -2144591440, i32 -2144591407, i32 -2144591334, i32 -2144591266, i32 -2144594413, i32 -2144594360, i32 -2144594329, i32 -2144594298, i32 -2144594277, i32 -2144594255, i32 -2144594206, i32 -2144594185, i32 -2144591211, i32 -2144591122, i32 -2144591001, i32 -2144590902, i32 -2144590796, i32 -2144590694, i32 -2144590661, i32 -2144590578, i32 -2144590489, i32 -2144590368, i32 -2144590268, i32 -2144590242, i32 -2144590139, i32 -2144590113, i32 -2144593927, i32 -2144593860, i32 -2144593835, i32 -2144593771, i32 -2144593655, i32 -2144593630, i32 -2144593605}
!6956 = !DILocation(line: 4219, column: 5, scope: !6897)
!6957 = !DILocation(line: 4224, column: 3, scope: !6886)
!6958 = !DILocalVariable(name: "s", arg: 1, scope: !6959, file: !3, line: 4301, type: !80)
!6959 = distinct !DISubprogram(name: "lwip_setsockopt_impl", scope: !3, file: !3, line: 4301, type: !6739, isLocal: true, isDefinition: true, scopeLine: 4302, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6960)
!6960 = !{!6958, !6961, !6962, !6963, !6964, !6965, !6966, !6967, !6971, !7031, !7034, !7037, !7038, !7039}
!6961 = !DILocalVariable(name: "level", arg: 2, scope: !6959, file: !3, line: 4301, type: !80)
!6962 = !DILocalVariable(name: "optname", arg: 3, scope: !6959, file: !3, line: 4301, type: !80)
!6963 = !DILocalVariable(name: "optval", arg: 4, scope: !6959, file: !3, line: 4301, type: !225)
!6964 = !DILocalVariable(name: "optlen", arg: 5, scope: !6959, file: !3, line: 4301, type: !1750)
!6965 = !DILocalVariable(name: "err", scope: !6959, file: !3, line: 4303, type: !80)
!6966 = !DILocalVariable(name: "sock", scope: !6959, file: !3, line: 4304, type: !1165)
!6967 = !DILocalVariable(name: "iface", scope: !6968, file: !3, line: 4420, type: !1008)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4419, column: 31)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4319, column: 24)
!6970 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4315, column: 18)
!6971 = !DILocalVariable(name: "n", scope: !6968, file: !3, line: 4421, type: !6972)
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6973, size: 64)
!6973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netif", file: !125, line: 260, size: 2240, elements: !6974)
!6974 = !{!6975, !6976, !6977, !6978, !6979, !6981, !6983, !6985, !6986, !6991, !6996, !7001, !7006, !7011, !7012, !7013, !7015, !7016, !7017, !7018, !7020, !7021, !7022, !7023, !7024, !7025, !7026}
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6973, file: !125, line: 263, baseType: !6972, size: 64)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "ip_addr", scope: !6973, file: !125, line: 268, baseType: !1183, size: 192, offset: 64)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "netmask", scope: !6973, file: !125, line: 269, baseType: !1183, size: 192, offset: 256)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "gw", scope: !6973, file: !125, line: 270, baseType: !1183, size: 192, offset: 448)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr", scope: !6973, file: !125, line: 274, baseType: !6980, size: 576, offset: 640)
!6980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1183, size: 576, elements: !505)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_state", scope: !6973, file: !125, line: 277, baseType: !6982, size: 24, offset: 1216)
!6982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 24, elements: !505)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_valid_life", scope: !6973, file: !125, line: 282, baseType: !6984, size: 96, offset: 1248)
!6984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 96, elements: !505)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_addr_pref_life", scope: !6973, file: !125, line: 283, baseType: !6984, size: 96, offset: 1344)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !6973, file: !125, line: 288, baseType: !6987, size: 64, offset: 1472)
!6987 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_input_fn", file: !125, line: 178, baseType: !6988)
!6988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6989, size: 64)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!1283, !1252, !6972}
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !6973, file: !125, line: 294, baseType: !6992, size: 64, offset: 1536)
!6992 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_output_fn", file: !125, line: 189, baseType: !6993)
!6993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6994, size: 64)
!6994 = !DISubroutineType(types: !6995)
!6995 = !{!1283, !6972, !1252, !696}
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "linkoutput", scope: !6973, file: !125, line: 299, baseType: !6997, size: 64, offset: 1600)
!6997 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_linkoutput_fn", file: !125, line: 212, baseType: !6998)
!6998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6999, size: 64)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{!1283, !6972, !1252}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "output_ip6", scope: !6973, file: !125, line: 305, baseType: !7002, size: 64, offset: 1664)
!7002 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_output_ip6_fn", file: !125, line: 202, baseType: !7003)
!7003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7004, size: 64)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!1283, !6972, !1252, !703}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "status_callback", scope: !6973, file: !125, line: 310, baseType: !7007, size: 64, offset: 1728)
!7007 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_status_callback_fn", file: !125, line: 214, baseType: !7008)
!7008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7009, size: 64)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{null, !6972}
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "remove_callback", scope: !6973, file: !125, line: 319, baseType: !7007, size: 64, offset: 1792)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6973, file: !125, line: 323, baseType: !143, size: 64, offset: 1856)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !6973, file: !125, line: 325, baseType: !7014, size: 64, offset: 1920)
!7014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 64, elements: !253)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "chksum_flags", scope: !6973, file: !125, line: 332, baseType: !164, size: 16, offset: 1984)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !6973, file: !125, line: 335, baseType: !164, size: 16, offset: 2000)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !6973, file: !125, line: 338, baseType: !164, size: 16, offset: 2016)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "hwaddr", scope: !6973, file: !125, line: 341, baseType: !7019, size: 48, offset: 2032)
!7019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 48, elements: !1014)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "hwaddr_len", scope: !6973, file: !125, line: 343, baseType: !156, size: 8, offset: 2080)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6973, file: !125, line: 345, baseType: !156, size: 8, offset: 2088)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6973, file: !125, line: 347, baseType: !1146, size: 16, offset: 2096)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6973, file: !125, line: 350, baseType: !156, size: 8, offset: 2112)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_autoconfig_enabled", scope: !6973, file: !125, line: 353, baseType: !156, size: 8, offset: 2120)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "rs_count", scope: !6973, file: !125, line: 357, baseType: !156, size: 8, offset: 2128)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "mld_mac_filter", scope: !6973, file: !125, line: 377, baseType: !7027, size: 64, offset: 2176)
!7027 = !DIDerivedType(tag: DW_TAG_typedef, name: "netif_mld_mac_filter_fn", file: !125, line: 222, baseType: !7028)
!7028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7029, size: 64)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!1283, !6972, !703, !124}
!7031 = !DILocalVariable(name: "if_addr", scope: !7032, file: !3, line: 4495, type: !698)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 4494, column: 31)
!7033 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4466, column: 24)
!7034 = !DILocalVariable(name: "mld6_err", scope: !7035, file: !3, line: 4616, type: !1283)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4614, column: 32)
!7036 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4601, column: 24)
!7037 = !DILocalVariable(name: "netif", scope: !7035, file: !3, line: 4617, type: !6972)
!7038 = !DILocalVariable(name: "multi_addr", scope: !7035, file: !3, line: 4618, type: !705)
!7039 = !DILocalVariable(name: "imr", scope: !7035, file: !3, line: 4619, type: !1036)
!7040 = !DILocation(line: 4301, column: 26, scope: !6959, inlinedAt: !7041)
!7041 = distinct !DILocation(line: 4225, column: 9, scope: !6886)
!7042 = !DILocation(line: 4301, column: 33, scope: !6959, inlinedAt: !7041)
!7043 = !DILocation(line: 4301, column: 44, scope: !6959, inlinedAt: !7041)
!7044 = !DILocation(line: 4301, column: 65, scope: !6959, inlinedAt: !7041)
!7045 = !DILocation(line: 4301, column: 83, scope: !6959, inlinedAt: !7041)
!7046 = !DILocation(line: 4303, column: 7, scope: !6959, inlinedAt: !7041)
!7047 = !DILocation(line: 1458, column: 19, scope: !6374, inlinedAt: !7048)
!7048 = distinct !DILocation(line: 4304, column: 28, scope: !6959, inlinedAt: !7041)
!7049 = !DILocation(line: 1427, column: 26, scope: !6380, inlinedAt: !7050)
!7050 = distinct !DILocation(line: 1460, column: 28, scope: !6374, inlinedAt: !7048)
!7051 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !7052)
!7052 = distinct !DILocation(line: 1429, column: 27, scope: !6380, inlinedAt: !7050)
!7053 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !7052)
!7054 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !7052)
!7055 = !DILocation(line: 1414, column: 5, scope: !6390, inlinedAt: !7052)
!7056 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !7052)
!7057 = !DILocation(line: 1435, column: 3, scope: !6380, inlinedAt: !7050)
!7058 = !DILocation(line: 1461, column: 7, scope: !6374, inlinedAt: !7048)
!7059 = !DILocation(line: 1416, column: 11, scope: !5218, inlinedAt: !7052)
!7060 = !DILocation(line: 1416, column: 3, scope: !5218, inlinedAt: !7052)
!7061 = !DILocation(line: 1462, column: 15, scope: !6397, inlinedAt: !7048)
!7062 = !DILocation(line: 1462, column: 9, scope: !6397, inlinedAt: !7048)
!7063 = !DILocation(line: 1462, column: 9, scope: !6398, inlinedAt: !7048)
!7064 = !DILocation(line: 1467, column: 3, scope: !6374, inlinedAt: !7048)
!7065 = !DILocation(line: 1468, column: 1, scope: !6374, inlinedAt: !7048)
!7066 = !DILocation(line: 4305, column: 7, scope: !6959, inlinedAt: !7041)
!7067 = !DILocation(line: 0, scope: !6959, inlinedAt: !7041)
!7068 = !DILocation(line: 1463, column: 7, scope: !6407, inlinedAt: !7048)
!7069 = !DILocation(line: 4315, column: 3, scope: !6959, inlinedAt: !7041)
!7070 = !DILocation(line: 4319, column: 7, scope: !6970, inlinedAt: !7041)
!7071 = !DILocation(line: 4329, column: 24, scope: !7072, inlinedAt: !7041)
!7072 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4329, column: 15)
!7073 = !DILocation(line: 4329, column: 41, scope: !7072, inlinedAt: !7041)
!7074 = !DILocation(line: 4330, column: 16, scope: !7072, inlinedAt: !7041)
!7075 = !DILocation(line: 4330, column: 52, scope: !7072, inlinedAt: !7041)
!7076 = !DILocation(line: 4329, column: 15, scope: !6969, inlinedAt: !7041)
!7077 = !DILocation(line: 0, scope: !7078, inlinedAt: !7041)
!7078 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 4330, column: 69)
!7079 = !DILocation(line: 3857, column: 27, scope: !6451, inlinedAt: !7080)
!7080 = distinct !DILocation(line: 4335, column: 21, scope: !6969, inlinedAt: !7041)
!7081 = !DILocation(line: 3863, column: 3, scope: !6451, inlinedAt: !7080)
!7082 = !DILocation(line: 3869, column: 5, scope: !6461, inlinedAt: !7080)
!7083 = !DILocation(line: 3871, column: 5, scope: !6457, inlinedAt: !7080)
!7084 = !DILocation(line: 3871, column: 5, scope: !6463, inlinedAt: !7080)
!7085 = !DILocation(line: 0, scope: !6886)
!7086 = !DILocation(line: 3874, column: 1, scope: !6451, inlinedAt: !7080)
!7087 = !DILocation(line: 4337, column: 11, scope: !7088, inlinedAt: !7041)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 4337, column: 11)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 4337, column: 11)
!7090 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4337, column: 11)
!7091 = !DILocation(line: 4337, column: 11, scope: !7089, inlinedAt: !7041)
!7092 = !DILocation(line: 4337, column: 11, scope: !7093, inlinedAt: !7041)
!7093 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 4337, column: 11)
!7094 = !DILocation(line: 4337, column: 11, scope: !7095, inlinedAt: !7041)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 4337, column: 11)
!7096 = !DILocation(line: 4337, column: 11, scope: !7090, inlinedAt: !7041)
!7097 = !DILocation(line: 4337, column: 11, scope: !7098, inlinedAt: !7041)
!7098 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 4337, column: 11)
!7099 = !DILocation(line: 4338, column: 16, scope: !7100, inlinedAt: !7041)
!7100 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4338, column: 15)
!7101 = !DILocation(line: 4338, column: 15, scope: !7100, inlinedAt: !7041)
!7102 = !DILocation(line: 0, scope: !7103, inlinedAt: !7041)
!7103 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 4340, column: 18)
!7104 = !DILocation(line: 4338, column: 15, scope: !6969, inlinedAt: !7041)
!7105 = !DILocation(line: 4339, column: 13, scope: !7106, inlinedAt: !7041)
!7106 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 4338, column: 37)
!7107 = !DILocation(line: 4340, column: 11, scope: !7106, inlinedAt: !7041)
!7108 = !DILocation(line: 4341, column: 13, scope: !7103, inlinedAt: !7041)
!7109 = !DILocation(line: 4404, column: 11, scope: !7110, inlinedAt: !7041)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 4404, column: 11)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 4404, column: 11)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 4404, column: 11)
!7113 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4404, column: 11)
!7114 = !DILocation(line: 4404, column: 11, scope: !7111, inlinedAt: !7041)
!7115 = !DILocation(line: 4404, column: 11, scope: !7116, inlinedAt: !7041)
!7116 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 4404, column: 11)
!7117 = !DILocation(line: 4404, column: 11, scope: !7118, inlinedAt: !7041)
!7118 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 4404, column: 11)
!7119 = !DILocation(line: 4404, column: 11, scope: !7112, inlinedAt: !7041)
!7120 = !DILocation(line: 4404, column: 11, scope: !7121, inlinedAt: !7041)
!7121 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 4404, column: 11)
!7122 = !DILocation(line: 4404, column: 11, scope: !7123, inlinedAt: !7041)
!7123 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 4404, column: 11)
!7124 = !DILocation(line: 4404, column: 11, scope: !7113, inlinedAt: !7041)
!7125 = !DILocation(line: 4404, column: 11, scope: !7126, inlinedAt: !7041)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 4404, column: 11)
!7127 = !DILocation(line: 4412, column: 16, scope: !7128, inlinedAt: !7041)
!7128 = distinct !DILexicalBlock(scope: !6969, file: !3, line: 4412, column: 15)
!7129 = !DILocation(line: 4412, column: 15, scope: !7128, inlinedAt: !7041)
!7130 = !DILocation(line: 0, scope: !7131, inlinedAt: !7041)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 4415, column: 13)
!7132 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 4414, column: 18)
!7133 = !DILocation(line: 4412, column: 15, scope: !6969, inlinedAt: !7041)
!7134 = !DILocation(line: 4413, column: 13, scope: !7135, inlinedAt: !7041)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 4413, column: 13)
!7136 = distinct !DILexicalBlock(scope: !7128, file: !3, line: 4412, column: 37)
!7137 = !DILocation(line: 4414, column: 11, scope: !7136, inlinedAt: !7041)
!7138 = !DILocation(line: 4415, column: 13, scope: !7131, inlinedAt: !7041)
!7139 = !DILocation(line: 4421, column: 25, scope: !6968, inlinedAt: !7041)
!7140 = !DILocation(line: 4423, column: 11, scope: !7141, inlinedAt: !7041)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 4423, column: 11)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 4423, column: 11)
!7143 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 4423, column: 11)
!7144 = !DILocation(line: 4423, column: 11, scope: !7142, inlinedAt: !7041)
!7145 = !DILocation(line: 4423, column: 11, scope: !7146, inlinedAt: !7041)
!7146 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 4423, column: 11)
!7147 = !DILocation(line: 4420, column: 31, scope: !6968, inlinedAt: !7041)
!7148 = !DILocation(line: 4426, column: 15, scope: !7149, inlinedAt: !7041)
!7149 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 4426, column: 15)
!7150 = !DILocation(line: 4426, column: 34, scope: !7149, inlinedAt: !7041)
!7151 = !DILocation(line: 4426, column: 15, scope: !6968, inlinedAt: !7041)
!7152 = !DILocation(line: 4427, column: 17, scope: !7153, inlinedAt: !7041)
!7153 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 4426, column: 40)
!7154 = !DILocation(line: 4428, column: 19, scope: !7155, inlinedAt: !7041)
!7155 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 4428, column: 17)
!7156 = !DILocation(line: 4428, column: 17, scope: !7153, inlinedAt: !7041)
!7157 = !DILocation(line: 4434, column: 19, scope: !6968, inlinedAt: !7041)
!7158 = !DILocation(line: 4430, column: 15, scope: !7159, inlinedAt: !7041)
!7159 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 4428, column: 28)
!7160 = !DILocation(line: 0, scope: !6968, inlinedAt: !7041)
!7161 = !DILocation(line: 4434, column: 11, scope: !6968, inlinedAt: !7041)
!7162 = !DILocation(line: 4437, column: 42, scope: !7163, inlinedAt: !7041)
!7163 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 4434, column: 64)
!7164 = !DILocation(line: 4437, column: 46, scope: !7163, inlinedAt: !7041)
!7165 = !DILocation(line: 4437, column: 15, scope: !7163, inlinedAt: !7041)
!7166 = !DILocation(line: 4438, column: 15, scope: !7163, inlinedAt: !7041)
!7167 = !DILocation(line: 4442, column: 42, scope: !7163, inlinedAt: !7041)
!7168 = !DILocation(line: 4442, column: 46, scope: !7163, inlinedAt: !7041)
!7169 = !DILocation(line: 4442, column: 15, scope: !7163, inlinedAt: !7041)
!7170 = !DILocation(line: 4443, column: 15, scope: !7163, inlinedAt: !7041)
!7171 = !DILocation(line: 4451, column: 15, scope: !7172, inlinedAt: !7041)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 4451, column: 15)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 4451, column: 15)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 4451, column: 15)
!7175 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 4451, column: 15)
!7176 = !DILocation(line: 4451, column: 15, scope: !7177, inlinedAt: !7041)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 4451, column: 15)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 4451, column: 15)
!7179 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 4451, column: 15)
!7180 = !DILocation(line: 4454, column: 9, scope: !6969, inlinedAt: !7041)
!7181 = !DILocation(line: 4466, column: 7, scope: !6970, inlinedAt: !7041)
!7182 = !DILocation(line: 4468, column: 11, scope: !7183, inlinedAt: !7041)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 4468, column: 11)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 4468, column: 11)
!7185 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 4468, column: 11)
!7186 = !DILocation(line: 4468, column: 11, scope: !7184, inlinedAt: !7041)
!7187 = !DILocation(line: 4468, column: 11, scope: !7188, inlinedAt: !7041)
!7188 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 4468, column: 11)
!7189 = !DILocation(line: 4468, column: 11, scope: !7190, inlinedAt: !7041)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 4468, column: 11)
!7191 = !DILocation(line: 4468, column: 11, scope: !7185, inlinedAt: !7041)
!7192 = !DILocation(line: 4468, column: 11, scope: !7193, inlinedAt: !7041)
!7193 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 4468, column: 11)
!7194 = !DILocation(line: 4469, column: 45, scope: !7033, inlinedAt: !7041)
!7195 = !DILocation(line: 4469, column: 44, scope: !7033, inlinedAt: !7041)
!7196 = !DILocation(line: 4469, column: 37, scope: !7033, inlinedAt: !7041)
!7197 = !DILocation(line: 4469, column: 31, scope: !7033, inlinedAt: !7041)
!7198 = !DILocation(line: 4469, column: 35, scope: !7033, inlinedAt: !7041)
!7199 = !DILocation(line: 4472, column: 11, scope: !7033, inlinedAt: !7041)
!7200 = !DILocation(line: 4474, column: 11, scope: !7201, inlinedAt: !7041)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 4474, column: 11)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 4474, column: 11)
!7203 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 4474, column: 11)
!7204 = !DILocation(line: 4474, column: 11, scope: !7202, inlinedAt: !7041)
!7205 = !DILocation(line: 4474, column: 11, scope: !7206, inlinedAt: !7041)
!7206 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 4474, column: 11)
!7207 = !DILocation(line: 4474, column: 11, scope: !7208, inlinedAt: !7041)
!7208 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 4474, column: 11)
!7209 = !DILocation(line: 4474, column: 11, scope: !7203, inlinedAt: !7041)
!7210 = !DILocation(line: 4474, column: 11, scope: !7211, inlinedAt: !7041)
!7211 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 4474, column: 11)
!7212 = !DILocation(line: 4475, column: 45, scope: !7033, inlinedAt: !7041)
!7213 = !DILocation(line: 4475, column: 44, scope: !7033, inlinedAt: !7041)
!7214 = !DILocation(line: 4475, column: 37, scope: !7033, inlinedAt: !7041)
!7215 = !DILocation(line: 4475, column: 31, scope: !7033, inlinedAt: !7041)
!7216 = !DILocation(line: 4475, column: 35, scope: !7033, inlinedAt: !7041)
!7217 = !DILocation(line: 4478, column: 11, scope: !7033, inlinedAt: !7041)
!7218 = !DILocation(line: 4491, column: 11, scope: !7219, inlinedAt: !7041)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 4491, column: 11)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4491, column: 11)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 4491, column: 11)
!7222 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 4491, column: 11)
!7223 = !DILocation(line: 4491, column: 11, scope: !7220, inlinedAt: !7041)
!7224 = !DILocation(line: 4491, column: 11, scope: !7225, inlinedAt: !7041)
!7225 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 4491, column: 11)
!7226 = !DILocation(line: 4491, column: 11, scope: !7227, inlinedAt: !7041)
!7227 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 4491, column: 11)
!7228 = !DILocation(line: 4491, column: 11, scope: !7221, inlinedAt: !7041)
!7229 = !DILocation(line: 4491, column: 11, scope: !7230, inlinedAt: !7041)
!7230 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 4491, column: 11)
!7231 = !DILocation(line: 4491, column: 11, scope: !7232, inlinedAt: !7041)
!7232 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 4491, column: 11)
!7233 = !DILocation(line: 4491, column: 11, scope: !7222, inlinedAt: !7041)
!7234 = !DILocation(line: 4491, column: 11, scope: !7235, inlinedAt: !7041)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 4491, column: 11)
!7236 = !DILocation(line: 4492, column: 11, scope: !7033, inlinedAt: !7041)
!7237 = !DILocation(line: 4493, column: 11, scope: !7033, inlinedAt: !7041)
!7238 = !DILocation(line: 4496, column: 11, scope: !7239, inlinedAt: !7041)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 4496, column: 11)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4496, column: 11)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 4496, column: 11)
!7242 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 4496, column: 11)
!7243 = !DILocation(line: 4496, column: 11, scope: !7240, inlinedAt: !7041)
!7244 = !DILocation(line: 4496, column: 11, scope: !7245, inlinedAt: !7041)
!7245 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 4496, column: 11)
!7246 = !DILocation(line: 4496, column: 11, scope: !7247, inlinedAt: !7041)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 4496, column: 11)
!7248 = !DILocation(line: 4496, column: 11, scope: !7241, inlinedAt: !7041)
!7249 = !DILocation(line: 4496, column: 11, scope: !7250, inlinedAt: !7041)
!7250 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 4496, column: 11)
!7251 = !DILocation(line: 4496, column: 11, scope: !7242, inlinedAt: !7041)
!7252 = !DILocation(line: 4496, column: 11, scope: !7253, inlinedAt: !7041)
!7253 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 4496, column: 11)
!7254 = !DILocation(line: 4497, column: 11, scope: !7032, inlinedAt: !7041)
!7255 = !DILocation(line: 4495, column: 22, scope: !7032, inlinedAt: !7041)
!7256 = !DILocation(line: 4498, column: 11, scope: !7032, inlinedAt: !7041)
!7257 = !DILocation(line: 4499, column: 9, scope: !7033, inlinedAt: !7041)
!7258 = !DILocation(line: 4502, column: 11, scope: !7259, inlinedAt: !7041)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 4502, column: 11)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 4502, column: 11)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 4502, column: 11)
!7262 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 4502, column: 11)
!7263 = !DILocation(line: 4502, column: 11, scope: !7260, inlinedAt: !7041)
!7264 = !DILocation(line: 4502, column: 11, scope: !7265, inlinedAt: !7041)
!7265 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 4502, column: 11)
!7266 = !DILocation(line: 4502, column: 11, scope: !7267, inlinedAt: !7041)
!7267 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 4502, column: 11)
!7268 = !DILocation(line: 4502, column: 11, scope: !7261, inlinedAt: !7041)
!7269 = !DILocation(line: 4502, column: 11, scope: !7270, inlinedAt: !7041)
!7270 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 4502, column: 11)
!7271 = !DILocation(line: 4502, column: 11, scope: !7272, inlinedAt: !7041)
!7272 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 4502, column: 11)
!7273 = !DILocation(line: 4502, column: 11, scope: !7262, inlinedAt: !7041)
!7274 = !DILocation(line: 4502, column: 11, scope: !7275, inlinedAt: !7041)
!7275 = distinct !DILexicalBlock(scope: !7272, file: !3, line: 4502, column: 11)
!7276 = !DILocation(line: 4503, column: 15, scope: !7277, inlinedAt: !7041)
!7277 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 4503, column: 15)
!7278 = !DILocation(line: 0, scope: !7279, inlinedAt: !7041)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 4506, column: 13)
!7280 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 4505, column: 18)
!7281 = !DILocation(line: 4503, column: 15, scope: !7033, inlinedAt: !7041)
!7282 = !DILocation(line: 4504, column: 13, scope: !7283, inlinedAt: !7041)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 4504, column: 13)
!7284 = distinct !DILexicalBlock(scope: !7277, file: !3, line: 4503, column: 38)
!7285 = !DILocation(line: 4505, column: 11, scope: !7284, inlinedAt: !7041)
!7286 = !DILocation(line: 4506, column: 13, scope: !7279, inlinedAt: !7041)
!7287 = !DILocation(line: 4551, column: 7, scope: !7288, inlinedAt: !7041)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 4551, column: 7)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 4551, column: 7)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 4551, column: 7)
!7291 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4551, column: 7)
!7292 = !DILocation(line: 4551, column: 7, scope: !7289, inlinedAt: !7041)
!7293 = !DILocation(line: 4551, column: 7, scope: !7294, inlinedAt: !7041)
!7294 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 4551, column: 7)
!7295 = !DILocation(line: 4551, column: 7, scope: !7296, inlinedAt: !7041)
!7296 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 4551, column: 7)
!7297 = !DILocation(line: 4551, column: 7, scope: !7290, inlinedAt: !7041)
!7298 = !DILocation(line: 4551, column: 7, scope: !7299, inlinedAt: !7041)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 4551, column: 7)
!7300 = !DILocation(line: 4551, column: 7, scope: !7301, inlinedAt: !7041)
!7301 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 4551, column: 7)
!7302 = !DILocation(line: 4551, column: 7, scope: !7291, inlinedAt: !7041)
!7303 = !DILocation(line: 4551, column: 7, scope: !7304, inlinedAt: !7041)
!7304 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 4551, column: 7)
!7305 = !DILocation(line: 4552, column: 32, scope: !7306, inlinedAt: !7041)
!7306 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4552, column: 11)
!7307 = !DILocation(line: 4552, column: 38, scope: !7306, inlinedAt: !7041)
!7308 = !DILocation(line: 4552, column: 11, scope: !6970, inlinedAt: !7041)
!7309 = !DILocation(line: 0, scope: !6970, inlinedAt: !7041)
!7310 = !DILocation(line: 4556, column: 7, scope: !6970, inlinedAt: !7041)
!7311 = !DILocation(line: 4558, column: 16, scope: !7312, inlinedAt: !7041)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 4558, column: 15)
!7313 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 4556, column: 24)
!7314 = !DILocation(line: 4558, column: 15, scope: !7312, inlinedAt: !7041)
!7315 = !DILocation(line: 0, scope: !7316, inlinedAt: !7041)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 4561, column: 13)
!7317 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 4560, column: 18)
!7318 = !DILocation(line: 4558, column: 15, scope: !7313, inlinedAt: !7041)
!7319 = !DILocation(line: 4559, column: 13, scope: !7320, inlinedAt: !7041)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 4559, column: 13)
!7321 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 4558, column: 37)
!7322 = !DILocation(line: 4560, column: 11, scope: !7321, inlinedAt: !7041)
!7323 = !DILocation(line: 4561, column: 13, scope: !7316, inlinedAt: !7041)
!7324 = !DILocation(line: 4567, column: 53, scope: !7313, inlinedAt: !7041)
!7325 = !DILocation(line: 4567, column: 52, scope: !7313, inlinedAt: !7041)
!7326 = !DILocation(line: 4567, column: 32, scope: !7313, inlinedAt: !7041)
!7327 = !DILocation(line: 4567, column: 42, scope: !7313, inlinedAt: !7041)
!7328 = !DILocation(line: 4570, column: 11, scope: !7313, inlinedAt: !7041)
!7329 = !DILocation(line: 4601, column: 7, scope: !6970, inlinedAt: !7041)
!7330 = !DILocation(line: 4603, column: 11, scope: !7331, inlinedAt: !7041)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 4603, column: 11)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 4603, column: 11)
!7333 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4603, column: 11)
!7334 = !DILocation(line: 4603, column: 11, scope: !7332, inlinedAt: !7041)
!7335 = !DILocation(line: 4603, column: 11, scope: !7336, inlinedAt: !7041)
!7336 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 4603, column: 11)
!7337 = !DILocation(line: 4603, column: 11, scope: !7338, inlinedAt: !7041)
!7338 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 4603, column: 11)
!7339 = !DILocation(line: 4603, column: 11, scope: !7333, inlinedAt: !7041)
!7340 = !DILocation(line: 4603, column: 11, scope: !7341, inlinedAt: !7041)
!7341 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 4603, column: 11)
!7342 = !DILocation(line: 4604, column: 16, scope: !7343, inlinedAt: !7041)
!7343 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 4604, column: 15)
!7344 = !DILocation(line: 4604, column: 15, scope: !7343, inlinedAt: !7041)
!7345 = !DILocation(line: 0, scope: !7346, inlinedAt: !7041)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 4607, column: 13)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 4607, column: 13)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 4607, column: 13)
!7349 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 4607, column: 13)
!7350 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 4606, column: 18)
!7351 = !DILocation(line: 4604, column: 15, scope: !7036, inlinedAt: !7041)
!7352 = !DILocation(line: 4605, column: 13, scope: !7353, inlinedAt: !7041)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !3, line: 4605, column: 13)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 4605, column: 13)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 4605, column: 13)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 4605, column: 13)
!7357 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 4604, column: 37)
!7358 = !DILocation(line: 4606, column: 11, scope: !7357, inlinedAt: !7041)
!7359 = !DILocation(line: 4607, column: 13, scope: !7346, inlinedAt: !7041)
!7360 = !DILocation(line: 4618, column: 11, scope: !7035, inlinedAt: !7041)
!7361 = !DILocation(line: 4619, column: 35, scope: !7035, inlinedAt: !7041)
!7362 = !DILocation(line: 4620, column: 11, scope: !7363, inlinedAt: !7041)
!7363 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 4620, column: 11)
!7364 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 4620, column: 11)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 4620, column: 11)
!7366 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4620, column: 11)
!7367 = !DILocation(line: 4620, column: 11, scope: !7364, inlinedAt: !7041)
!7368 = !DILocation(line: 4620, column: 11, scope: !7369, inlinedAt: !7041)
!7369 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 4620, column: 11)
!7370 = !DILocation(line: 4620, column: 11, scope: !7371, inlinedAt: !7041)
!7371 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 4620, column: 11)
!7372 = !DILocation(line: 4620, column: 11, scope: !7365, inlinedAt: !7041)
!7373 = !DILocation(line: 4620, column: 11, scope: !7374, inlinedAt: !7041)
!7374 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 4620, column: 11)
!7375 = !DILocation(line: 4620, column: 11, scope: !7366, inlinedAt: !7041)
!7376 = !DILocation(line: 4621, column: 11, scope: !7377, inlinedAt: !7041)
!7377 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4621, column: 11)
!7378 = !{!1616, !1405, i64 16}
!7379 = !DILocation(line: 4622, column: 11, scope: !7380, inlinedAt: !7041)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 4622, column: 11)
!7381 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4622, column: 11)
!7382 = !{!7383, !1409, i64 16}
!7383 = !{!"ipv6_mreq", !3396, i64 0, !1409, i64 16}
!7384 = !DILocation(line: 4622, column: 11, scope: !7381, inlinedAt: !7041)
!7385 = !DILocation(line: 4622, column: 11, scope: !7386, inlinedAt: !7041)
!7386 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 4622, column: 11)
!7387 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4622, column: 11)
!7388 = !DILocation(line: 4622, column: 11, scope: !7389, inlinedAt: !7041)
!7389 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 4622, column: 11)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 4622, column: 11)
!7391 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 4622, column: 11)
!7392 = !DILocation(line: 4623, column: 38, scope: !7035, inlinedAt: !7041)
!7393 = !DILocation(line: 4623, column: 19, scope: !7035, inlinedAt: !7041)
!7394 = !DILocation(line: 4617, column: 25, scope: !7035, inlinedAt: !7041)
!7395 = !DILocation(line: 4624, column: 21, scope: !7396, inlinedAt: !7041)
!7396 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4624, column: 15)
!7397 = !DILocation(line: 4624, column: 15, scope: !7035, inlinedAt: !7041)
!7398 = !DILocation(line: 4629, column: 23, scope: !7399, inlinedAt: !7041)
!7399 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4629, column: 15)
!7400 = !DILocation(line: 4629, column: 15, scope: !7035, inlinedAt: !7041)
!7401 = !DILocation(line: 4630, column: 63, scope: !7402, inlinedAt: !7041)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 4630, column: 17)
!7403 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 4629, column: 43)
!7404 = !DILocation(line: 4618, column: 22, scope: !7035, inlinedAt: !7041)
!7405 = !DILocalVariable(name: "s", arg: 1, scope: !7406, file: !3, line: 5075, type: !80)
!7406 = distinct !DISubprogram(name: "lwip_socket_register_mld6_membership", scope: !3, file: !3, line: 5075, type: !7407, isLocal: true, isDefinition: true, scopeLine: 5076, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7409)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{!80, !80, !7, !703}
!7409 = !{!7405, !7410, !7411, !7412, !7413}
!7410 = !DILocalVariable(name: "if_idx", arg: 2, scope: !7406, file: !3, line: 5075, type: !7)
!7411 = !DILocalVariable(name: "multi_addr", arg: 3, scope: !7406, file: !3, line: 5075, type: !703)
!7412 = !DILocalVariable(name: "sock", scope: !7406, file: !3, line: 5077, type: !1165)
!7413 = !DILocalVariable(name: "i", scope: !7406, file: !3, line: 5078, type: !80)
!7414 = !DILocation(line: 5075, column: 42, scope: !7406, inlinedAt: !7415)
!7415 = distinct !DILocation(line: 4630, column: 18, scope: !7402, inlinedAt: !7041)
!7416 = !DILocation(line: 5075, column: 58, scope: !7406, inlinedAt: !7415)
!7417 = !DILocation(line: 5075, column: 84, scope: !7406, inlinedAt: !7415)
!7418 = !DILocation(line: 5077, column: 28, scope: !7406, inlinedAt: !7415)
!7419 = !DILocation(line: 5077, column: 21, scope: !7406, inlinedAt: !7415)
!7420 = !DILocation(line: 5080, column: 8, scope: !7421, inlinedAt: !7415)
!7421 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 5080, column: 7)
!7422 = !DILocation(line: 5080, column: 7, scope: !7406, inlinedAt: !7415)
!7423 = !DILocation(line: 0, scope: !7424, inlinedAt: !7415)
!7424 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 5084, column: 3)
!7425 = !DILocation(line: 5078, column: 7, scope: !7406, inlinedAt: !7415)
!7426 = !DILocation(line: 5084, column: 3, scope: !7424, inlinedAt: !7415)
!7427 = !DILocation(line: 5085, column: 46, scope: !7428, inlinedAt: !7415)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 5085, column: 9)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 5084, column: 53)
!7430 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 5084, column: 3)
!7431 = !DILocation(line: 5085, column: 51, scope: !7428, inlinedAt: !7415)
!7432 = !DILocation(line: 5085, column: 9, scope: !7429, inlinedAt: !7415)
!7433 = !DILocation(line: 5084, column: 49, scope: !7430, inlinedAt: !7415)
!7434 = !DILocation(line: 5084, column: 3, scope: !7430, inlinedAt: !7415)
!7435 = !DILocation(line: 5094, column: 3, scope: !7406, inlinedAt: !7415)
!7436 = !DILocation(line: 5095, column: 1, scope: !7406, inlinedAt: !7415)
!7437 = !DILocation(line: 4630, column: 17, scope: !7403, inlinedAt: !7041)
!7438 = !DILocation(line: 4616, column: 17, scope: !7035, inlinedAt: !7041)
!7439 = !DILocation(line: 4634, column: 13, scope: !7440, inlinedAt: !7041)
!7440 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 4630, column: 95)
!7441 = !DILocation(line: 4641, column: 15, scope: !7035, inlinedAt: !7041)
!7442 = !DILocation(line: 5085, column: 9, scope: !7428, inlinedAt: !7415)
!7443 = !DILocation(line: 5086, column: 51, scope: !7444, inlinedAt: !7415)
!7444 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 5085, column: 60)
!7445 = !DILocation(line: 5087, column: 53, scope: !7444, inlinedAt: !7415)
!7446 = !DILocation(line: 5087, column: 44, scope: !7444, inlinedAt: !7415)
!7447 = !DILocation(line: 5087, column: 51, scope: !7444, inlinedAt: !7415)
!7448 = !DILocation(line: 5088, column: 7, scope: !7449, inlinedAt: !7415)
!7449 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 5088, column: 7)
!7450 = !DILocation(line: 5090, column: 7, scope: !7444, inlinedAt: !7415)
!7451 = !DILocation(line: 4635, column: 26, scope: !7452, inlinedAt: !7041)
!7452 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 4634, column: 20)
!7453 = !DILocation(line: 4638, column: 24, scope: !7454, inlinedAt: !7041)
!7454 = distinct !DILexicalBlock(scope: !7399, file: !3, line: 4637, column: 18)
!7455 = !DILocation(line: 4639, column: 60, scope: !7454, inlinedAt: !7041)
!7456 = !DILocalVariable(name: "s", arg: 1, scope: !7457, file: !3, line: 5103, type: !80)
!7457 = distinct !DISubprogram(name: "lwip_socket_unregister_mld6_membership", scope: !3, file: !3, line: 5103, type: !7458, isLocal: true, isDefinition: true, scopeLine: 5104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7460)
!7458 = !DISubroutineType(types: !7459)
!7459 = !{null, !80, !7, !703}
!7460 = !{!7456, !7461, !7462, !7463, !7464}
!7461 = !DILocalVariable(name: "if_idx", arg: 2, scope: !7457, file: !3, line: 5103, type: !7)
!7462 = !DILocalVariable(name: "multi_addr", arg: 3, scope: !7457, file: !3, line: 5103, type: !703)
!7463 = !DILocalVariable(name: "sock", scope: !7457, file: !3, line: 5105, type: !1165)
!7464 = !DILocalVariable(name: "i", scope: !7457, file: !3, line: 5106, type: !80)
!7465 = !DILocation(line: 5103, column: 44, scope: !7457, inlinedAt: !7466)
!7466 = distinct !DILocation(line: 4639, column: 13, scope: !7454, inlinedAt: !7041)
!7467 = !DILocation(line: 5103, column: 60, scope: !7457, inlinedAt: !7466)
!7468 = !DILocation(line: 5103, column: 86, scope: !7457, inlinedAt: !7466)
!7469 = !DILocation(line: 5105, column: 28, scope: !7457, inlinedAt: !7466)
!7470 = !DILocation(line: 5105, column: 21, scope: !7457, inlinedAt: !7466)
!7471 = !DILocation(line: 5108, column: 8, scope: !7472, inlinedAt: !7466)
!7472 = distinct !DILexicalBlock(scope: !7457, file: !3, line: 5108, column: 7)
!7473 = !DILocation(line: 5108, column: 7, scope: !7457, inlinedAt: !7466)
!7474 = !DILocation(line: 0, scope: !7475, inlinedAt: !7466)
!7475 = distinct !DILexicalBlock(scope: !7457, file: !3, line: 5112, column: 3)
!7476 = !DILocation(line: 5106, column: 7, scope: !7457, inlinedAt: !7466)
!7477 = !DILocation(line: 5112, column: 3, scope: !7475, inlinedAt: !7466)
!7478 = !DILocation(line: 5113, column: 47, scope: !7479, inlinedAt: !7466)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 5113, column: 9)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 5112, column: 53)
!7481 = distinct !DILexicalBlock(scope: !7475, file: !3, line: 5112, column: 3)
!7482 = !DILocation(line: 5113, column: 54, scope: !7479, inlinedAt: !7466)
!7483 = !DILocation(line: 5113, column: 63, scope: !7479, inlinedAt: !7466)
!7484 = !DILocation(line: 5114, column: 47, scope: !7479, inlinedAt: !7466)
!7485 = !DILocation(line: 5114, column: 10, scope: !7479, inlinedAt: !7466)
!7486 = !DILocation(line: 5114, column: 54, scope: !7479, inlinedAt: !7466)
!7487 = !DILocation(line: 5114, column: 65, scope: !7479, inlinedAt: !7466)
!7488 = !DILocation(line: 5115, column: 9, scope: !7479, inlinedAt: !7466)
!7489 = !DILocation(line: 5113, column: 9, scope: !7480, inlinedAt: !7466)
!7490 = !DILocation(line: 5116, column: 51, scope: !7491, inlinedAt: !7466)
!7491 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 5115, column: 85)
!7492 = !DILocation(line: 5117, column: 51, scope: !7491, inlinedAt: !7466)
!7493 = !DILocation(line: 5118, column: 7, scope: !7494, inlinedAt: !7466)
!7494 = distinct !DILexicalBlock(scope: !7491, file: !3, line: 5118, column: 7)
!7495 = !DILocation(line: 5119, column: 7, scope: !7491, inlinedAt: !7466)
!7496 = !DILocation(line: 5112, column: 49, scope: !7481, inlinedAt: !7466)
!7497 = !DILocation(line: 5112, column: 3, scope: !7481, inlinedAt: !7466)
!7498 = !DILocation(line: 5112, column: 17, scope: !7481, inlinedAt: !7466)
!7499 = distinct !{!7499, !7500, !7501}
!7500 = !DILocation(line: 5112, column: 3, scope: !7475)
!7501 = !DILocation(line: 5121, column: 3, scope: !7475)
!7502 = !DILocation(line: 5123, column: 1, scope: !7457, inlinedAt: !7466)
!7503 = !DILocation(line: 0, scope: !7454, inlinedAt: !7041)
!7504 = !DILocation(line: 4641, column: 24, scope: !7505, inlinedAt: !7041)
!7505 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4641, column: 15)
!7506 = !DILocation(line: 4644, column: 9, scope: !7036, inlinedAt: !7041)
!7507 = !DILocation(line: 4620, column: 11, scope: !7508, inlinedAt: !7041)
!7508 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 4620, column: 11)
!7509 = !DILocation(line: 0, scope: !7510, inlinedAt: !7041)
!7510 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 4641, column: 35)
!7511 = !DILocation(line: 4737, column: 3, scope: !6959, inlinedAt: !7041)
!7512 = !DILocation(line: 0, scope: !7513, inlinedAt: !7041)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 4305, column: 14)
!7514 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4305, column: 7)
!7515 = !DILocation(line: 4738, column: 1, scope: !6959, inlinedAt: !7041)
!7516 = !DILocation(line: 4226, column: 3, scope: !6886)
!7517 = !DILocation(line: 4269, column: 3, scope: !6906)
!7518 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7519)
!7519 = distinct !DILocation(line: 4269, column: 3, scope: !6911)
!7520 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7519)
!7521 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7519)
!7522 = !DILocation(line: 4269, column: 3, scope: !6911)
!7523 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7524)
!7524 = distinct !DILocation(line: 4269, column: 3, scope: !6911)
!7525 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7524)
!7526 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7524)
!7527 = !DILocation(line: 4269, column: 3, scope: !6912)
!7528 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !7529)
!7529 = distinct !DILocation(line: 4269, column: 3, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 4269, column: 3)
!7531 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !7529)
!7532 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !7529)
!7533 = !DILocation(line: 4269, column: 3, scope: !7530)
!7534 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7535)
!7535 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7536)
!7536 = distinct !DILocation(line: 4269, column: 3, scope: !6908)
!7537 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7535)
!7538 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7535)
!7539 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7536)
!7540 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7536)
!7541 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7536)
!7542 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7536)
!7543 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7536)
!7544 = !DILocation(line: 4269, column: 3, scope: !6908)
!7545 = !{i32 -2144588005, i32 -2144587992, i32 -2144587967, i32 -2144587943, i32 -2144587918, i32 -2144587843, i32 -2144587818, i32 -2144587674, i32 -2144585451, i32 -2144585362, i32 -2144585241, i32 -2144585146, i32 -2144585045, i32 -2144585018, i32 -2144584935, i32 -2144584846, i32 -2144584725, i32 -2144584625, i32 -2144584519, i32 -2144584411, i32 -2144587386, i32 -2144587333, i32 -2144587302, i32 -2144587271, i32 -2144587250, i32 -2144587228, i32 -2144587179, i32 -2144587158, i32 -2144584328, i32 -2144584239, i32 -2144584118, i32 -2144584019, i32 -2144583913, i32 -2144583811, i32 -2144583778, i32 -2144583705, i32 -2144583637, i32 -2144586784, i32 -2144586731, i32 -2144586700, i32 -2144586669, i32 -2144586648, i32 -2144586626, i32 -2144586577, i32 -2144586556, i32 -2144583582, i32 -2144583493, i32 -2144583372, i32 -2144583273, i32 -2144583167, i32 -2144583065, i32 -2144583032, i32 -2144582949, i32 -2144582860, i32 -2144582739, i32 -2144582639, i32 -2144582613, i32 -2144582510, i32 -2144582484, i32 -2144586298, i32 -2144586231, i32 -2144586206, i32 -2144586142, i32 -2144586026, i32 -2144586001, i32 -2144585976}
!7546 = !DILocation(line: 4271, column: 10, scope: !6886)
!7547 = !DILocation(line: 4271, column: 3, scope: !6886)
!7548 = !DILocation(line: 0, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 4212, column: 14)
!7550 = !DILocation(line: 4272, column: 1, scope: !6886)
!7551 = !DILocation(line: 5084, column: 17, scope: !7430, inlinedAt: !7415)
!7552 = distinct !{!7552, !7553, !7554}
!7553 = !DILocation(line: 5084, column: 3, scope: !7424)
!7554 = !DILocation(line: 5092, column: 3, scope: !7424)
!7555 = distinct !DISubprogram(name: "connect", scope: !3, file: !3, line: 864, type: !3458, isLocal: false, isDefinition: true, scopeLine: 865, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7556)
!7556 = !{!7557, !7558, !7559, !7560, !7561, !7562, !7568, !7569, !7578}
!7557 = !DILocalVariable(name: "s", arg: 1, scope: !7555, file: !3, line: 864, type: !80)
!7558 = !DILocalVariable(name: "name", arg: 2, scope: !7555, file: !3, line: 864, type: !228)
!7559 = !DILocalVariable(name: "namelen", arg: 3, scope: !7555, file: !3, line: 864, type: !1750)
!7560 = !DILocalVariable(name: "ret", scope: !7555, file: !3, line: 866, type: !80)
!7561 = !DILocalVariable(name: "file", scope: !7555, file: !3, line: 867, type: !1077)
!7562 = !DILocalVariable(name: "tid", scope: !7563, file: !3, line: 869, type: !170)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 869, column: 2)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 869, column: 2)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 869, column: 2)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 869, column: 2)
!7567 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 869, column: 2)
!7568 = !DILocalVariable(name: "_ret", scope: !7563, file: !3, line: 869, type: !135)
!7569 = !DILocalVariable(name: "tid", scope: !7570, file: !3, line: 874, type: !170)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 874, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 874, column: 3)
!7572 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 874, column: 3)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 874, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 874, column: 3)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !3, line: 874, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 870, column: 22)
!7577 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 870, column: 6)
!7578 = !DILocalVariable(name: "tid", scope: !7579, file: !3, line: 878, type: !170)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 878, column: 2)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 878, column: 2)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 878, column: 2)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 878, column: 2)
!7583 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 878, column: 2)
!7584 = !DILocation(line: 864, column: 17, scope: !7555)
!7585 = !DILocation(line: 864, column: 43, scope: !7555)
!7586 = !DILocation(line: 864, column: 59, scope: !7555)
!7587 = !DILocation(line: 866, column: 6, scope: !7555)
!7588 = !DILocation(line: 867, column: 2, scope: !7555)
!7589 = !DILocation(line: 867, column: 24, scope: !7555)
!7590 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7591)
!7591 = distinct !DILocation(line: 869, column: 2, scope: !7566)
!7592 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7591)
!7593 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7591)
!7594 = !DILocation(line: 869, column: 2, scope: !7566)
!7595 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7596)
!7596 = distinct !DILocation(line: 869, column: 2, scope: !7566)
!7597 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7596)
!7598 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7596)
!7599 = !DILocation(line: 869, column: 2, scope: !7567)
!7600 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !7601)
!7601 = distinct !DILocation(line: 869, column: 2, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 869, column: 2)
!7603 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !7601)
!7604 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !7601)
!7605 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !7601)
!7606 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !7601)
!7607 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !7601)
!7608 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !7601)
!7609 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !7601)
!7610 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !7601)
!7611 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !7601)
!7612 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !7601)
!7613 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !7601)
!7614 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !7601)
!7615 = !DILocation(line: 0, scope: !2856, inlinedAt: !7601)
!7616 = !DILocation(line: 0, scope: !7602)
!7617 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !7601)
!7618 = !DILocation(line: 869, column: 2, scope: !7602)
!7619 = !DILocation(line: 870, column: 6, scope: !7577)
!7620 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7621)
!7621 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7622)
!7622 = distinct !DILocation(line: 869, column: 2, scope: !7563)
!7623 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7621)
!7624 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7621)
!7625 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7622)
!7626 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7622)
!7627 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7622)
!7628 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7622)
!7629 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7622)
!7630 = !DILocation(line: 869, column: 2, scope: !7563)
!7631 = !{i32 -2145425675, i32 -2145425662, i32 -2145425637, i32 -2145425613, i32 -2145425588, i32 -2145425513, i32 -2145425488, i32 -2145425344, i32 -2145422212, i32 -2145422123, i32 -2145422002, i32 -2145421907, i32 -2145421806, i32 -2145421779, i32 -2145421696, i32 -2145421607, i32 -2145421486, i32 -2145421386, i32 -2145421280, i32 -2145421172, i32 -2145425056, i32 -2145425003, i32 -2145424972, i32 -2145424941, i32 -2145424920, i32 -2145424898, i32 -2145424849, i32 -2145424828, i32 -2145421089, i32 -2145421000, i32 -2145420879, i32 -2145420780, i32 -2145420674, i32 -2145420572, i32 -2145420539, i32 -2145420466, i32 -2145420398, i32 -2145424524, i32 -2145424465, i32 -2145424412, i32 -2145424381, i32 -2145424350, i32 -2145424329, i32 -2145424307, i32 -2145424258, i32 -2145424237, i32 -2145420345, i32 -2145420256, i32 -2145420135, i32 -2145420036, i32 -2145419930, i32 -2145419828, i32 -2145419795, i32 -2145419712, i32 -2145419623, i32 -2145419502, i32 -2145419402, i32 -2145419376, i32 -2145419273, i32 -2145419247, i32 -2145423979, i32 -2145423912, i32 -2145423887, i32 -2145423823, i32 -2145423741, i32 -2145423718, i32 -2145423693, i32 -2145423668}
!7632 = !DILocation(line: 869, column: 2, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 869, column: 2)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 869, column: 2)
!7635 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 869, column: 2)
!7636 = !{i32 -2145422480, i32 -2145422464}
!7637 = !DILocation(line: 870, column: 6, scope: !7555)
!7638 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7639)
!7639 = distinct !DILocation(line: 874, column: 3, scope: !7573)
!7640 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7639)
!7641 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7639)
!7642 = !DILocation(line: 874, column: 3, scope: !7573)
!7643 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7644)
!7644 = distinct !DILocation(line: 874, column: 3, scope: !7573)
!7645 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7644)
!7646 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7644)
!7647 = !DILocation(line: 874, column: 3, scope: !7574)
!7648 = !DILocation(line: 874, column: 3, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7573, file: !3, line: 874, column: 3)
!7650 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !7651)
!7651 = distinct !DILocation(line: 874, column: 3, scope: !7649)
!7652 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !7651)
!7653 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !7651)
!7654 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !7651)
!7655 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !7651)
!7656 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7657)
!7657 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7658)
!7658 = distinct !DILocation(line: 874, column: 3, scope: !7570)
!7659 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7657)
!7660 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7657)
!7661 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7658)
!7662 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7658)
!7663 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7658)
!7664 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7658)
!7665 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7658)
!7666 = !DILocation(line: 874, column: 3, scope: !7570)
!7667 = !{i32 -2145416992, i32 -2145416979, i32 -2145416954, i32 -2145416930, i32 -2145416905, i32 -2145416830, i32 -2145416805, i32 -2145416661, i32 -2145414420, i32 -2145414331, i32 -2145414210, i32 -2145414115, i32 -2145414014, i32 -2145413987, i32 -2145413904, i32 -2145413815, i32 -2145413694, i32 -2145413594, i32 -2145413488, i32 -2145413380, i32 -2145416373, i32 -2145416320, i32 -2145416289, i32 -2145416258, i32 -2145416237, i32 -2145416215, i32 -2145416166, i32 -2145416145, i32 -2145413297, i32 -2145413208, i32 -2145413087, i32 -2145412988, i32 -2145412882, i32 -2145412780, i32 -2145412747, i32 -2145412674, i32 -2145412606, i32 -2145415771, i32 -2145415718, i32 -2145415687, i32 -2145415656, i32 -2145415635, i32 -2145415613, i32 -2145415564, i32 -2145415543, i32 -2145412551, i32 -2145412462, i32 -2145412341, i32 -2145412242, i32 -2145412136, i32 -2145412034, i32 -2145412001, i32 -2145411918, i32 -2145411829, i32 -2145411708, i32 -2145411608, i32 -2145411582, i32 -2145411479, i32 -2145411453, i32 -2145415285, i32 -2145415218, i32 -2145415193, i32 -2145415129, i32 -2145415013, i32 -2145414988, i32 -2145414963}
!7668 = !DILocation(line: 877, column: 27, scope: !7555)
!7669 = !DILocation(line: 877, column: 8, scope: !7555)
!7670 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7671)
!7671 = distinct !DILocation(line: 878, column: 2, scope: !7582)
!7672 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7671)
!7673 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7671)
!7674 = !DILocation(line: 878, column: 2, scope: !7582)
!7675 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7676)
!7676 = distinct !DILocation(line: 878, column: 2, scope: !7582)
!7677 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7676)
!7678 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7676)
!7679 = !DILocation(line: 878, column: 2, scope: !7583)
!7680 = !DILocation(line: 878, column: 2, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 878, column: 2)
!7682 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7683)
!7683 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7684)
!7684 = distinct !DILocation(line: 878, column: 2, scope: !7579)
!7685 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7683)
!7686 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7683)
!7687 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7684)
!7688 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7684)
!7689 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7684)
!7690 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7684)
!7691 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7684)
!7692 = !DILocation(line: 878, column: 2, scope: !7579)
!7693 = !{i32 -2145409489, i32 -2145409476, i32 -2145409451, i32 -2145409427, i32 -2145409402, i32 -2145409327, i32 -2145409302, i32 -2145409158, i32 -2145406931, i32 -2145406842, i32 -2145406721, i32 -2145406626, i32 -2145406525, i32 -2145406498, i32 -2145406415, i32 -2145406326, i32 -2145406205, i32 -2145406105, i32 -2145405999, i32 -2145405891, i32 -2145408870, i32 -2145408817, i32 -2145408786, i32 -2145408755, i32 -2145408734, i32 -2145408712, i32 -2145408663, i32 -2145408642, i32 -2145405808, i32 -2145405719, i32 -2145405598, i32 -2145405499, i32 -2145405393, i32 -2145405291, i32 -2145405258, i32 -2145405185, i32 -2145405117, i32 -2145408268, i32 -2145408215, i32 -2145408184, i32 -2145408153, i32 -2145408132, i32 -2145408110, i32 -2145408061, i32 -2145408040, i32 -2145405065, i32 -2145404976, i32 -2145404855, i32 -2145404756, i32 -2145404650, i32 -2145404548, i32 -2145404515, i32 -2145404432, i32 -2145404343, i32 -2145404222, i32 -2145404122, i32 -2145404096, i32 -2145403993, i32 -2145403967, i32 -2145407782, i32 -2145407715, i32 -2145407690, i32 -2145407626, i32 -2145407510, i32 -2145407485, i32 -2145407460}
!7694 = !DILocation(line: 0, scope: !7555)
!7695 = !DILocation(line: 881, column: 1, scope: !7555)
!7696 = !DILocation(line: 880, column: 2, scope: !7555)
!7697 = distinct !DISubprogram(name: "lwip_connect", scope: !3, file: !3, line: 1811, type: !3458, isLocal: false, isDefinition: true, scopeLine: 1812, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7698)
!7698 = !{!7699, !7700, !7701, !7702, !7703, !7704, !7708, !7714, !7717, !7718, !7723, !7729, !7733, !7739, !7741}
!7699 = !DILocalVariable(name: "s", arg: 1, scope: !7697, file: !3, line: 1811, type: !80)
!7700 = !DILocalVariable(name: "name", arg: 2, scope: !7697, file: !3, line: 1811, type: !228)
!7701 = !DILocalVariable(name: "namelen", arg: 3, scope: !7697, file: !3, line: 1811, type: !1750)
!7702 = !DILocalVariable(name: "sock", scope: !7697, file: !3, line: 1813, type: !1165)
!7703 = !DILocalVariable(name: "err", scope: !7697, file: !3, line: 1814, type: !1283)
!7704 = !DILocalVariable(name: "sockerr", scope: !7705, file: !3, line: 1823, type: !1007)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 1823, column: 5)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 1821, column: 52)
!7707 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 1821, column: 7)
!7708 = !DILocalVariable(name: "tid", scope: !7709, file: !3, line: 1823, type: !170)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 1823, column: 5)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !3, line: 1823, column: 5)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 1823, column: 5)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 1823, column: 5)
!7713 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1823, column: 5)
!7714 = !DILocalVariable(name: "remote_addr", scope: !7715, file: !3, line: 1833, type: !1183)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 1832, column: 10)
!7716 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 1829, column: 7)
!7717 = !DILocalVariable(name: "remote_port", scope: !7715, file: !3, line: 1834, type: !164)
!7718 = !DILocalVariable(name: "sockerr", scope: !7719, file: !3, line: 1837, type: !1007)
!7719 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1837, column: 5)
!7720 = distinct !DILexicalBlock(scope: !7721, file: !3, line: 1837, column: 5)
!7721 = distinct !DILexicalBlock(scope: !7722, file: !3, line: 1837, column: 5)
!7722 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1837, column: 5)
!7723 = !DILocalVariable(name: "tid", scope: !7724, file: !3, line: 1837, type: !170)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !3, line: 1837, column: 5)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 1837, column: 5)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1837, column: 5)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !3, line: 1837, column: 5)
!7728 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1837, column: 5)
!7729 = !DILocalVariable(name: "sockerr", scope: !7730, file: !3, line: 1859, type: !1007)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 1859, column: 5)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 1857, column: 22)
!7732 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 1857, column: 7)
!7733 = !DILocalVariable(name: "tid", scope: !7734, file: !3, line: 1859, type: !170)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 1859, column: 5)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !3, line: 1859, column: 5)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1859, column: 5)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 1859, column: 5)
!7738 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 1859, column: 5)
!7739 = !DILocalVariable(name: "sockerr", scope: !7740, file: !3, line: 1865, type: !1007)
!7740 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 1865, column: 3)
!7741 = !DILocalVariable(name: "tid", scope: !7742, file: !3, line: 1865, type: !170)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1865, column: 3)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1865, column: 3)
!7744 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1865, column: 3)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 1865, column: 3)
!7746 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 1865, column: 3)
!7747 = !DILocation(line: 1811, column: 18, scope: !7697)
!7748 = !DILocation(line: 1811, column: 44, scope: !7697)
!7749 = !DILocation(line: 1811, column: 60, scope: !7697)
!7750 = !DILocation(line: 1816, column: 10, scope: !7697)
!7751 = !DILocation(line: 1813, column: 21, scope: !7697)
!7752 = !DILocation(line: 1817, column: 8, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 1817, column: 7)
!7754 = !DILocation(line: 1817, column: 7, scope: !7697)
!7755 = !DILocation(line: 1821, column: 8, scope: !7707)
!7756 = !DILocation(line: 1821, column: 7, scope: !7697)
!7757 = !DILocation(line: 1823, column: 5, scope: !7705)
!7758 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7759)
!7759 = distinct !DILocation(line: 1823, column: 5, scope: !7712)
!7760 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7759)
!7761 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7759)
!7762 = !DILocation(line: 1823, column: 5, scope: !7712)
!7763 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7764)
!7764 = distinct !DILocation(line: 1823, column: 5, scope: !7712)
!7765 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7764)
!7766 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7764)
!7767 = !DILocation(line: 1823, column: 5, scope: !7713)
!7768 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !7769)
!7769 = distinct !DILocation(line: 1823, column: 5, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 1823, column: 5)
!7771 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !7769)
!7772 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !7769)
!7773 = !DILocation(line: 1823, column: 5, scope: !7770)
!7774 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7775)
!7775 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7776)
!7776 = distinct !DILocation(line: 1823, column: 5, scope: !7709)
!7777 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7775)
!7778 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7775)
!7779 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7776)
!7780 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7776)
!7781 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7776)
!7782 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7776)
!7783 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7776)
!7784 = !DILocation(line: 1823, column: 5, scope: !7709)
!7785 = !{i32 -2145104306, i32 -2145104293, i32 -2145104268, i32 -2145104244, i32 -2145104219, i32 -2145104144, i32 -2145104119, i32 -2145103975, i32 -2145101752, i32 -2145101663, i32 -2145101542, i32 -2145101447, i32 -2145101346, i32 -2145101319, i32 -2145101236, i32 -2145101147, i32 -2145101026, i32 -2145100926, i32 -2145100820, i32 -2145100712, i32 -2145103687, i32 -2145103634, i32 -2145103603, i32 -2145103572, i32 -2145103551, i32 -2145103529, i32 -2145103480, i32 -2145103459, i32 -2145100629, i32 -2145100540, i32 -2145100419, i32 -2145100320, i32 -2145100214, i32 -2145100112, i32 -2145100079, i32 -2145100006, i32 -2145099938, i32 -2145103085, i32 -2145103032, i32 -2145103001, i32 -2145102970, i32 -2145102949, i32 -2145102927, i32 -2145102878, i32 -2145102857, i32 -2145099883, i32 -2145099794, i32 -2145099673, i32 -2145099574, i32 -2145099468, i32 -2145099366, i32 -2145099333, i32 -2145099250, i32 -2145099161, i32 -2145099040, i32 -2145098940, i32 -2145098914, i32 -2145098811, i32 -2145098785, i32 -2145102599, i32 -2145102532, i32 -2145102507, i32 -2145102443, i32 -2145102327, i32 -2145102302, i32 -2145102277}
!7786 = !DILocation(line: 1829, column: 7, scope: !7697)
!7787 = !DILocation(line: 1831, column: 36, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 1829, column: 37)
!7789 = !DILocation(line: 1831, column: 11, scope: !7788)
!7790 = !DILocation(line: 1814, column: 9, scope: !7697)
!7791 = !DILocation(line: 1832, column: 3, scope: !7788)
!7792 = !DILocation(line: 1833, column: 5, scope: !7715)
!7793 = !DILocation(line: 1837, column: 5, scope: !7721)
!7794 = !DILocation(line: 1837, column: 5, scope: !7722)
!7795 = !DILocation(line: 1837, column: 5, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 1837, column: 5)
!7797 = !DILocation(line: 1837, column: 5, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 1837, column: 5)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 1837, column: 5)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !3, line: 1837, column: 5)
!7801 = !DILocation(line: 1833, column: 15, scope: !7715)
!7802 = !DILocation(line: 1304, column: 48, scope: !3705, inlinedAt: !7803)
!7803 = distinct !DILocation(line: 1841, column: 5, scope: !7715)
!7804 = !DILocation(line: 1304, column: 69, scope: !3705, inlinedAt: !7803)
!7805 = !DILocation(line: 1306, column: 29, scope: !3717, inlinedAt: !7803)
!7806 = !DILocation(line: 1306, column: 7, scope: !3705, inlinedAt: !7803)
!7807 = !DILocation(line: 1307, column: 5, scope: !3720, inlinedAt: !7803)
!7808 = !DILocation(line: 1307, column: 5, scope: !3724, inlinedAt: !7803)
!7809 = !DILocation(line: 1307, column: 5, scope: !3721, inlinedAt: !7803)
!7810 = !DILocation(line: 1307, column: 5, scope: !3727, inlinedAt: !7803)
!7811 = !DILocation(line: 1310, column: 5, scope: !3729, inlinedAt: !7803)
!7812 = !DILocation(line: 1311, column: 13, scope: !3730, inlinedAt: !7803)
!7813 = !DILocation(line: 1311, column: 18, scope: !3730, inlinedAt: !7803)
!7814 = !DILocation(line: 1313, column: 1, scope: !3705, inlinedAt: !7803)
!7815 = !DILocation(line: 1848, column: 35, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 1848, column: 9)
!7817 = !DILocation(line: 1308, column: 13, scope: !3722, inlinedAt: !7803)
!7818 = !DILocation(line: 1308, column: 18, scope: !3722, inlinedAt: !7803)
!7819 = !DILocation(line: 1309, column: 3, scope: !3722, inlinedAt: !7803)
!7820 = !DILocation(line: 1848, column: 38, scope: !7816)
!7821 = !DILocation(line: 1848, column: 9, scope: !7715)
!7822 = !DILocation(line: 1849, column: 7, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1848, column: 89)
!7824 = !DILocation(line: 1850, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 1850, column: 7)
!7826 = !DILocation(line: 1851, column: 5, scope: !7823)
!7827 = !DILocation(line: 1854, column: 33, scope: !7715)
!7828 = !DILocation(line: 1834, column: 11, scope: !7715)
!7829 = !DILocation(line: 1854, column: 11, scope: !7715)
!7830 = !DILocation(line: 1855, column: 3, scope: !7716)
!7831 = !DILocation(line: 0, scope: !7715)
!7832 = !DILocation(line: 1857, column: 11, scope: !7732)
!7833 = !DILocation(line: 1857, column: 7, scope: !7697)
!7834 = !DILocation(line: 1859, column: 5, scope: !7730)
!7835 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7836)
!7836 = distinct !DILocation(line: 1859, column: 5, scope: !7737)
!7837 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7836)
!7838 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7836)
!7839 = !DILocation(line: 1859, column: 5, scope: !7737)
!7840 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7841)
!7841 = distinct !DILocation(line: 1859, column: 5, scope: !7737)
!7842 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7841)
!7843 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7841)
!7844 = !DILocation(line: 1859, column: 5, scope: !7738)
!7845 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !7846)
!7846 = distinct !DILocation(line: 1859, column: 5, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 1859, column: 5)
!7848 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !7846)
!7849 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !7846)
!7850 = !DILocation(line: 1859, column: 5, scope: !7847)
!7851 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7852)
!7852 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7853)
!7853 = distinct !DILocation(line: 1859, column: 5, scope: !7734)
!7854 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7852)
!7855 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7852)
!7856 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7853)
!7857 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7853)
!7858 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7853)
!7859 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7853)
!7860 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7853)
!7861 = !DILocation(line: 1859, column: 5, scope: !7734)
!7862 = !{i32 -2145079385, i32 -2145079372, i32 -2145079347, i32 -2145079323, i32 -2145079298, i32 -2145079223, i32 -2145079198, i32 -2145079054, i32 -2145076831, i32 -2145076742, i32 -2145076621, i32 -2145076526, i32 -2145076425, i32 -2145076398, i32 -2145076315, i32 -2145076226, i32 -2145076105, i32 -2145076005, i32 -2145075899, i32 -2145075791, i32 -2145078766, i32 -2145078713, i32 -2145078682, i32 -2145078651, i32 -2145078630, i32 -2145078608, i32 -2145078559, i32 -2145078538, i32 -2145075708, i32 -2145075619, i32 -2145075498, i32 -2145075399, i32 -2145075293, i32 -2145075191, i32 -2145075158, i32 -2145075085, i32 -2145075017, i32 -2145078164, i32 -2145078111, i32 -2145078080, i32 -2145078049, i32 -2145078028, i32 -2145078006, i32 -2145077957, i32 -2145077936, i32 -2145074962, i32 -2145074873, i32 -2145074752, i32 -2145074653, i32 -2145074547, i32 -2145074445, i32 -2145074412, i32 -2145074329, i32 -2145074240, i32 -2145074119, i32 -2145074019, i32 -2145073993, i32 -2145073890, i32 -2145073864, i32 -2145077678, i32 -2145077611, i32 -2145077586, i32 -2145077522, i32 -2145077406, i32 -2145077381, i32 -2145077356}
!7863 = !DILocation(line: 1865, column: 3, scope: !7740)
!7864 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7865)
!7865 = distinct !DILocation(line: 1865, column: 3, scope: !7745)
!7866 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7865)
!7867 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7865)
!7868 = !DILocation(line: 1865, column: 3, scope: !7745)
!7869 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7870)
!7870 = distinct !DILocation(line: 1865, column: 3, scope: !7745)
!7871 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7870)
!7872 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7870)
!7873 = !DILocation(line: 1865, column: 3, scope: !7746)
!7874 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !7875)
!7875 = distinct !DILocation(line: 1865, column: 3, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1865, column: 3)
!7877 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !7875)
!7878 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !7875)
!7879 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !7875)
!7880 = !DILocation(line: 1865, column: 3, scope: !7876)
!7881 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7882)
!7882 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7883)
!7883 = distinct !DILocation(line: 1865, column: 3, scope: !7742)
!7884 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7882)
!7885 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7882)
!7886 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7883)
!7887 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7883)
!7888 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7883)
!7889 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7883)
!7890 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7883)
!7891 = !DILocation(line: 1865, column: 3, scope: !7742)
!7892 = !{i32 -2145071828, i32 -2145071815, i32 -2145071790, i32 -2145071766, i32 -2145071741, i32 -2145071666, i32 -2145071641, i32 -2145071497, i32 -2145069274, i32 -2145069185, i32 -2145069064, i32 -2145068969, i32 -2145068868, i32 -2145068841, i32 -2145068758, i32 -2145068669, i32 -2145068548, i32 -2145068448, i32 -2145068342, i32 -2145068234, i32 -2145071209, i32 -2145071156, i32 -2145071125, i32 -2145071094, i32 -2145071073, i32 -2145071051, i32 -2145071002, i32 -2145070981, i32 -2145068151, i32 -2145068062, i32 -2145067941, i32 -2145067842, i32 -2145067736, i32 -2145067634, i32 -2145067601, i32 -2145067528, i32 -2145067460, i32 -2145070607, i32 -2145070554, i32 -2145070523, i32 -2145070492, i32 -2145070471, i32 -2145070449, i32 -2145070400, i32 -2145070379, i32 -2145067405, i32 -2145067316, i32 -2145067195, i32 -2145067096, i32 -2145066990, i32 -2145066888, i32 -2145066855, i32 -2145066772, i32 -2145066683, i32 -2145066562, i32 -2145066462, i32 -2145066436, i32 -2145066333, i32 -2145066307, i32 -2145070121, i32 -2145070054, i32 -2145070029, i32 -2145069965, i32 -2145069849, i32 -2145069824, i32 -2145069799}
!7893 = !DILocation(line: 0, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 1817, column: 14)
!7895 = !DILocation(line: 1868, column: 1, scope: !7697)
!7896 = distinct !DISubprogram(name: "listen", scope: !3, file: !3, line: 883, type: !5480, isLocal: false, isDefinition: true, scopeLine: 884, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7897)
!7897 = !{!7898, !7899, !7900, !7901, !7902, !7908, !7909, !7918}
!7898 = !DILocalVariable(name: "s", arg: 1, scope: !7896, file: !3, line: 883, type: !80)
!7899 = !DILocalVariable(name: "backlog", arg: 2, scope: !7896, file: !3, line: 883, type: !80)
!7900 = !DILocalVariable(name: "ret", scope: !7896, file: !3, line: 885, type: !80)
!7901 = !DILocalVariable(name: "file", scope: !7896, file: !3, line: 886, type: !1077)
!7902 = !DILocalVariable(name: "tid", scope: !7903, file: !3, line: 888, type: !170)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 888, column: 2)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 888, column: 2)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 888, column: 2)
!7906 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 888, column: 2)
!7907 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 888, column: 2)
!7908 = !DILocalVariable(name: "_ret", scope: !7903, file: !3, line: 888, type: !135)
!7909 = !DILocalVariable(name: "tid", scope: !7910, file: !3, line: 893, type: !170)
!7910 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 893, column: 3)
!7911 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 893, column: 3)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 893, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 893, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 893, column: 3)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 893, column: 3)
!7916 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 889, column: 22)
!7917 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 889, column: 6)
!7918 = !DILocalVariable(name: "tid", scope: !7919, file: !3, line: 897, type: !170)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 897, column: 2)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 897, column: 2)
!7921 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 897, column: 2)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 897, column: 2)
!7923 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 897, column: 2)
!7924 = !DILocation(line: 883, column: 16, scope: !7896)
!7925 = !DILocation(line: 883, column: 23, scope: !7896)
!7926 = !DILocation(line: 885, column: 6, scope: !7896)
!7927 = !DILocation(line: 886, column: 2, scope: !7896)
!7928 = !DILocation(line: 886, column: 24, scope: !7896)
!7929 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7930)
!7930 = distinct !DILocation(line: 888, column: 2, scope: !7906)
!7931 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7930)
!7932 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7930)
!7933 = !DILocation(line: 888, column: 2, scope: !7906)
!7934 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7935)
!7935 = distinct !DILocation(line: 888, column: 2, scope: !7906)
!7936 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7935)
!7937 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7935)
!7938 = !DILocation(line: 888, column: 2, scope: !7907)
!7939 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !7940)
!7940 = distinct !DILocation(line: 888, column: 2, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 888, column: 2)
!7942 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !7940)
!7943 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !7940)
!7944 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !7940)
!7945 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !7940)
!7946 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !7940)
!7947 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !7940)
!7948 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !7940)
!7949 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !7940)
!7950 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !7940)
!7951 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !7940)
!7952 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !7940)
!7953 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !7940)
!7954 = !DILocation(line: 0, scope: !2856, inlinedAt: !7940)
!7955 = !DILocation(line: 0, scope: !7941)
!7956 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !7940)
!7957 = !DILocation(line: 888, column: 2, scope: !7941)
!7958 = !DILocation(line: 889, column: 6, scope: !7917)
!7959 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7960)
!7960 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7961)
!7961 = distinct !DILocation(line: 888, column: 2, scope: !7903)
!7962 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7960)
!7963 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7960)
!7964 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7961)
!7965 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7961)
!7966 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7961)
!7967 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7961)
!7968 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7961)
!7969 = !DILocation(line: 888, column: 2, scope: !7903)
!7970 = !{i32 -2145401984, i32 -2145401971, i32 -2145401946, i32 -2145401922, i32 -2145401897, i32 -2145401822, i32 -2145401797, i32 -2145401653, i32 -2145398521, i32 -2145398432, i32 -2145398311, i32 -2145398216, i32 -2145398115, i32 -2145398088, i32 -2145398005, i32 -2145397916, i32 -2145397795, i32 -2145397695, i32 -2145397589, i32 -2145397481, i32 -2145401365, i32 -2145401312, i32 -2145401281, i32 -2145401250, i32 -2145401229, i32 -2145401207, i32 -2145401158, i32 -2145401137, i32 -2145397398, i32 -2145397309, i32 -2145397188, i32 -2145397089, i32 -2145396983, i32 -2145396881, i32 -2145396848, i32 -2145396775, i32 -2145396707, i32 -2145400833, i32 -2145400774, i32 -2145400721, i32 -2145400690, i32 -2145400659, i32 -2145400638, i32 -2145400616, i32 -2145400567, i32 -2145400546, i32 -2145396654, i32 -2145396565, i32 -2145396444, i32 -2145396345, i32 -2145396239, i32 -2145396137, i32 -2145396104, i32 -2145396021, i32 -2145395932, i32 -2145395811, i32 -2145395711, i32 -2145395685, i32 -2145395582, i32 -2145395556, i32 -2145400288, i32 -2145400221, i32 -2145400196, i32 -2145400132, i32 -2145400050, i32 -2145400027, i32 -2145400002, i32 -2145399977}
!7971 = !DILocation(line: 888, column: 2, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 888, column: 2)
!7973 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 888, column: 2)
!7974 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 888, column: 2)
!7975 = !{i32 -2145398789, i32 -2145398773}
!7976 = !DILocation(line: 889, column: 6, scope: !7896)
!7977 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7978)
!7978 = distinct !DILocation(line: 893, column: 3, scope: !7913)
!7979 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7978)
!7980 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7978)
!7981 = !DILocation(line: 893, column: 3, scope: !7913)
!7982 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7983)
!7983 = distinct !DILocation(line: 893, column: 3, scope: !7913)
!7984 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7983)
!7985 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7983)
!7986 = !DILocation(line: 893, column: 3, scope: !7914)
!7987 = !DILocation(line: 893, column: 3, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 893, column: 3)
!7989 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !7990)
!7990 = distinct !DILocation(line: 893, column: 3, scope: !7988)
!7991 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !7990)
!7992 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !7990)
!7993 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !7990)
!7994 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !7990)
!7995 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !7996)
!7996 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !7997)
!7997 = distinct !DILocation(line: 893, column: 3, scope: !7910)
!7998 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !7996)
!7999 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !7996)
!8000 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !7997)
!8001 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !7997)
!8002 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !7997)
!8003 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !7997)
!8004 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !7997)
!8005 = !DILocation(line: 893, column: 3, scope: !7910)
!8006 = !{i32 -2145393301, i32 -2145393288, i32 -2145393263, i32 -2145393239, i32 -2145393214, i32 -2145393139, i32 -2145393114, i32 -2145392970, i32 -2145390729, i32 -2145390640, i32 -2145390519, i32 -2145390424, i32 -2145390323, i32 -2145390296, i32 -2145390213, i32 -2145390124, i32 -2145390003, i32 -2145389903, i32 -2145389797, i32 -2145389689, i32 -2145392682, i32 -2145392629, i32 -2145392598, i32 -2145392567, i32 -2145392546, i32 -2145392524, i32 -2145392475, i32 -2145392454, i32 -2145389606, i32 -2145389517, i32 -2145389396, i32 -2145389297, i32 -2145389191, i32 -2145389089, i32 -2145389056, i32 -2145388983, i32 -2145388915, i32 -2145392080, i32 -2145392027, i32 -2145391996, i32 -2145391965, i32 -2145391944, i32 -2145391922, i32 -2145391873, i32 -2145391852, i32 -2145388860, i32 -2145388771, i32 -2145388650, i32 -2145388551, i32 -2145388445, i32 -2145388343, i32 -2145388310, i32 -2145388227, i32 -2145388138, i32 -2145388017, i32 -2145387917, i32 -2145387891, i32 -2145387788, i32 -2145387762, i32 -2145391594, i32 -2145391527, i32 -2145391502, i32 -2145391438, i32 -2145391322, i32 -2145391297, i32 -2145391272}
!8007 = !DILocation(line: 896, column: 26, scope: !7896)
!8008 = !DILocation(line: 896, column: 8, scope: !7896)
!8009 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8010)
!8010 = distinct !DILocation(line: 897, column: 2, scope: !7922)
!8011 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8010)
!8012 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8010)
!8013 = !DILocation(line: 897, column: 2, scope: !7922)
!8014 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8015)
!8015 = distinct !DILocation(line: 897, column: 2, scope: !7922)
!8016 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8015)
!8017 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8015)
!8018 = !DILocation(line: 897, column: 2, scope: !7923)
!8019 = !DILocation(line: 897, column: 2, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 897, column: 2)
!8021 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8022)
!8022 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8023)
!8023 = distinct !DILocation(line: 897, column: 2, scope: !7919)
!8024 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8022)
!8025 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8022)
!8026 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8023)
!8027 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8023)
!8028 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8023)
!8029 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8023)
!8030 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8023)
!8031 = !DILocation(line: 897, column: 2, scope: !7919)
!8032 = !{i32 -2145385798, i32 -2145385785, i32 -2145385760, i32 -2145385736, i32 -2145385711, i32 -2145385636, i32 -2145385611, i32 -2145385467, i32 -2145383240, i32 -2145383151, i32 -2145383030, i32 -2145382935, i32 -2145382834, i32 -2145382807, i32 -2145382724, i32 -2145382635, i32 -2145382514, i32 -2145382414, i32 -2145382308, i32 -2145382200, i32 -2145385179, i32 -2145385126, i32 -2145385095, i32 -2145385064, i32 -2145385043, i32 -2145385021, i32 -2145384972, i32 -2145384951, i32 -2145382117, i32 -2145382028, i32 -2145381907, i32 -2145381808, i32 -2145381702, i32 -2145381600, i32 -2145381567, i32 -2145381494, i32 -2145381426, i32 -2145384577, i32 -2145384524, i32 -2145384493, i32 -2145384462, i32 -2145384441, i32 -2145384419, i32 -2145384370, i32 -2145384349, i32 -2145381374, i32 -2145381285, i32 -2145381164, i32 -2145381065, i32 -2145380959, i32 -2145380857, i32 -2145380824, i32 -2145380741, i32 -2145380652, i32 -2145380531, i32 -2145380431, i32 -2145380405, i32 -2145380302, i32 -2145380276, i32 -2145384091, i32 -2145384024, i32 -2145383999, i32 -2145383935, i32 -2145383819, i32 -2145383794, i32 -2145383769}
!8033 = !DILocation(line: 0, scope: !7896)
!8034 = !DILocation(line: 900, column: 1, scope: !7896)
!8035 = !DILocation(line: 899, column: 2, scope: !7896)
!8036 = distinct !DISubprogram(name: "lwip_listen", scope: !3, file: !3, line: 1879, type: !5480, isLocal: false, isDefinition: true, scopeLine: 1880, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8037)
!8037 = !{!8038, !8039, !8040, !8041, !8042, !8048, !8054, !8057, !8063, !8065}
!8038 = !DILocalVariable(name: "s", arg: 1, scope: !8036, file: !3, line: 1879, type: !80)
!8039 = !DILocalVariable(name: "backlog", arg: 2, scope: !8036, file: !3, line: 1879, type: !80)
!8040 = !DILocalVariable(name: "sock", scope: !8036, file: !3, line: 1881, type: !1165)
!8041 = !DILocalVariable(name: "err", scope: !8036, file: !3, line: 1882, type: !1283)
!8042 = !DILocalVariable(name: "sockerr", scope: !8043, file: !3, line: 1899, type: !1007)
!8043 = distinct !DILexicalBlock(scope: !8044, file: !3, line: 1899, column: 7)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 1898, column: 69)
!8045 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1898, column: 9)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 1896, column: 22)
!8047 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 1896, column: 7)
!8048 = !DILocalVariable(name: "tid", scope: !8049, file: !3, line: 1899, type: !170)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 1899, column: 7)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 1899, column: 7)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 1899, column: 7)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 1899, column: 7)
!8053 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 1899, column: 7)
!8054 = !DILocalVariable(name: "sockerr", scope: !8055, file: !3, line: 1901, type: !1007)
!8055 = distinct !DILexicalBlock(scope: !8056, file: !3, line: 1901, column: 7)
!8056 = distinct !DILexicalBlock(scope: !8045, file: !3, line: 1900, column: 12)
!8057 = !DILocalVariable(name: "tid", scope: !8058, file: !3, line: 1901, type: !170)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 1901, column: 7)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 1901, column: 7)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 1901, column: 7)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 1901, column: 7)
!8062 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 1901, column: 7)
!8063 = !DILocalVariable(name: "sockerr", scope: !8064, file: !3, line: 1907, type: !1007)
!8064 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 1907, column: 3)
!8065 = !DILocalVariable(name: "tid", scope: !8066, file: !3, line: 1907, type: !170)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1907, column: 3)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1907, column: 3)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 1907, column: 3)
!8069 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 1907, column: 3)
!8070 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 1907, column: 3)
!8071 = !DILocation(line: 1879, column: 17, scope: !8036)
!8072 = !DILocation(line: 1879, column: 24, scope: !8036)
!8073 = !DILocation(line: 1886, column: 10, scope: !8036)
!8074 = !DILocation(line: 1881, column: 21, scope: !8036)
!8075 = !DILocation(line: 1887, column: 8, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 1887, column: 7)
!8077 = !DILocation(line: 1887, column: 7, scope: !8036)
!8078 = !DILocation(line: 1892, column: 13, scope: !8036)
!8079 = !DILocation(line: 1894, column: 43, scope: !8036)
!8080 = !DILocation(line: 1894, column: 9, scope: !8036)
!8081 = !DILocation(line: 1882, column: 9, scope: !8036)
!8082 = !DILocation(line: 1896, column: 11, scope: !8047)
!8083 = !DILocation(line: 1896, column: 7, scope: !8036)
!8084 = !DILocation(line: 1898, column: 9, scope: !8045)
!8085 = !DILocation(line: 1898, column: 53, scope: !8045)
!8086 = !DILocation(line: 1898, column: 9, scope: !8046)
!8087 = !DILocation(line: 1899, column: 7, scope: !8043)
!8088 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8089)
!8089 = distinct !DILocation(line: 1899, column: 7, scope: !8052)
!8090 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8089)
!8091 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8089)
!8092 = !DILocation(line: 1899, column: 7, scope: !8052)
!8093 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8094)
!8094 = distinct !DILocation(line: 1899, column: 7, scope: !8052)
!8095 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8094)
!8096 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8094)
!8097 = !DILocation(line: 1899, column: 7, scope: !8053)
!8098 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8099)
!8099 = distinct !DILocation(line: 1899, column: 7, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 1899, column: 7)
!8101 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8099)
!8102 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8099)
!8103 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8099)
!8104 = !DILocation(line: 1899, column: 7, scope: !8100)
!8105 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8106)
!8106 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8107)
!8107 = distinct !DILocation(line: 1899, column: 7, scope: !8049)
!8108 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8106)
!8109 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8106)
!8110 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8107)
!8111 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8107)
!8112 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8107)
!8113 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8107)
!8114 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8107)
!8115 = !DILocation(line: 1899, column: 7, scope: !8049)
!8116 = !{i32 -2145064037, i32 -2145064024, i32 -2145063999, i32 -2145063975, i32 -2145063950, i32 -2145063875, i32 -2145063850, i32 -2145063706, i32 -2145061483, i32 -2145061394, i32 -2145061273, i32 -2145061178, i32 -2145061077, i32 -2145061050, i32 -2145060967, i32 -2145060878, i32 -2145060757, i32 -2145060657, i32 -2145060551, i32 -2145060443, i32 -2145063418, i32 -2145063365, i32 -2145063334, i32 -2145063303, i32 -2145063282, i32 -2145063260, i32 -2145063211, i32 -2145063190, i32 -2145060360, i32 -2145060271, i32 -2145060150, i32 -2145060051, i32 -2145059945, i32 -2145059843, i32 -2145059810, i32 -2145059737, i32 -2145059669, i32 -2145062816, i32 -2145062763, i32 -2145062732, i32 -2145062701, i32 -2145062680, i32 -2145062658, i32 -2145062609, i32 -2145062588, i32 -2145059614, i32 -2145059525, i32 -2145059404, i32 -2145059305, i32 -2145059199, i32 -2145059097, i32 -2145059064, i32 -2145058981, i32 -2145058892, i32 -2145058771, i32 -2145058671, i32 -2145058645, i32 -2145058542, i32 -2145058516, i32 -2145062330, i32 -2145062263, i32 -2145062238, i32 -2145062174, i32 -2145062058, i32 -2145062033, i32 -2145062008}
!8117 = !DILocation(line: 1901, column: 7, scope: !8055)
!8118 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8119)
!8119 = distinct !DILocation(line: 1901, column: 7, scope: !8061)
!8120 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8119)
!8121 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8119)
!8122 = !DILocation(line: 1901, column: 7, scope: !8061)
!8123 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8124)
!8124 = distinct !DILocation(line: 1901, column: 7, scope: !8061)
!8125 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8124)
!8126 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8124)
!8127 = !DILocation(line: 1901, column: 7, scope: !8062)
!8128 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8129)
!8129 = distinct !DILocation(line: 1901, column: 7, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 1901, column: 7)
!8131 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8129)
!8132 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8129)
!8133 = !DILocation(line: 1901, column: 7, scope: !8130)
!8134 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8135)
!8135 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8136)
!8136 = distinct !DILocation(line: 1901, column: 7, scope: !8058)
!8137 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8135)
!8138 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8135)
!8139 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8136)
!8140 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8136)
!8141 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8136)
!8142 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8136)
!8143 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8136)
!8144 = !DILocation(line: 1901, column: 7, scope: !8058)
!8145 = !{i32 -2145056464, i32 -2145056451, i32 -2145056426, i32 -2145056402, i32 -2145056377, i32 -2145056302, i32 -2145056277, i32 -2145056133, i32 -2145053910, i32 -2145053821, i32 -2145053700, i32 -2145053605, i32 -2145053504, i32 -2145053477, i32 -2145053394, i32 -2145053305, i32 -2145053184, i32 -2145053084, i32 -2145052978, i32 -2145052870, i32 -2145055845, i32 -2145055792, i32 -2145055761, i32 -2145055730, i32 -2145055709, i32 -2145055687, i32 -2145055638, i32 -2145055617, i32 -2145052787, i32 -2145052698, i32 -2145052577, i32 -2145052478, i32 -2145052372, i32 -2145052270, i32 -2145052237, i32 -2145052164, i32 -2145052096, i32 -2145055243, i32 -2145055190, i32 -2145055159, i32 -2145055128, i32 -2145055107, i32 -2145055085, i32 -2145055036, i32 -2145055015, i32 -2145052041, i32 -2145051952, i32 -2145051831, i32 -2145051732, i32 -2145051626, i32 -2145051524, i32 -2145051491, i32 -2145051408, i32 -2145051319, i32 -2145051198, i32 -2145051098, i32 -2145051072, i32 -2145050969, i32 -2145050943, i32 -2145054757, i32 -2145054690, i32 -2145054665, i32 -2145054601, i32 -2145054485, i32 -2145054460, i32 -2145054435}
!8146 = !DILocation(line: 1904, column: 5, scope: !8046)
!8147 = !DILocation(line: 1907, column: 3, scope: !8064)
!8148 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8149)
!8149 = distinct !DILocation(line: 1907, column: 3, scope: !8069)
!8150 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8149)
!8151 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8149)
!8152 = !DILocation(line: 1907, column: 3, scope: !8069)
!8153 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8154)
!8154 = distinct !DILocation(line: 1907, column: 3, scope: !8069)
!8155 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8154)
!8156 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8154)
!8157 = !DILocation(line: 1907, column: 3, scope: !8070)
!8158 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8159)
!8159 = distinct !DILocation(line: 1907, column: 3, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 1907, column: 3)
!8161 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8159)
!8162 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8159)
!8163 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8159)
!8164 = !DILocation(line: 1907, column: 3, scope: !8160)
!8165 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8166)
!8166 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8167)
!8167 = distinct !DILocation(line: 1907, column: 3, scope: !8066)
!8168 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8166)
!8169 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8166)
!8170 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8167)
!8171 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8167)
!8172 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8167)
!8173 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8167)
!8174 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8167)
!8175 = !DILocation(line: 1907, column: 3, scope: !8066)
!8176 = !{i32 -2145048907, i32 -2145048894, i32 -2145048869, i32 -2145048845, i32 -2145048820, i32 -2145048745, i32 -2145048720, i32 -2145048576, i32 -2145046353, i32 -2145046264, i32 -2145046143, i32 -2145046048, i32 -2145045947, i32 -2145045920, i32 -2145045837, i32 -2145045748, i32 -2145045627, i32 -2145045527, i32 -2145045421, i32 -2145045313, i32 -2145048288, i32 -2145048235, i32 -2145048204, i32 -2145048173, i32 -2145048152, i32 -2145048130, i32 -2145048081, i32 -2145048060, i32 -2145045230, i32 -2145045141, i32 -2145045020, i32 -2145044921, i32 -2145044815, i32 -2145044713, i32 -2145044680, i32 -2145044607, i32 -2145044539, i32 -2145047686, i32 -2145047633, i32 -2145047602, i32 -2145047571, i32 -2145047550, i32 -2145047528, i32 -2145047479, i32 -2145047458, i32 -2145044484, i32 -2145044395, i32 -2145044274, i32 -2145044175, i32 -2145044069, i32 -2145043967, i32 -2145043934, i32 -2145043851, i32 -2145043762, i32 -2145043641, i32 -2145043541, i32 -2145043515, i32 -2145043412, i32 -2145043386, i32 -2145047200, i32 -2145047133, i32 -2145047108, i32 -2145047044, i32 -2145046928, i32 -2145046903, i32 -2145046878}
!8177 = !DILocation(line: 0, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 1887, column: 14)
!8179 = !DILocation(line: 1910, column: 1, scope: !8036)
!8180 = distinct !DISubprogram(name: "recv", scope: !3, file: !3, line: 902, type: !8181, isLocal: false, isDefinition: true, scopeLine: 903, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8183)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{!80, !80, !143, !216, !80}
!8183 = !{!8184, !8185, !8186, !8187, !8188, !8189, !8190, !8196, !8197, !8206}
!8184 = !DILocalVariable(name: "s", arg: 1, scope: !8180, file: !3, line: 902, type: !80)
!8185 = !DILocalVariable(name: "mem", arg: 2, scope: !8180, file: !3, line: 902, type: !143)
!8186 = !DILocalVariable(name: "len", arg: 3, scope: !8180, file: !3, line: 902, type: !216)
!8187 = !DILocalVariable(name: "flags", arg: 4, scope: !8180, file: !3, line: 902, type: !80)
!8188 = !DILocalVariable(name: "ret", scope: !8180, file: !3, line: 904, type: !80)
!8189 = !DILocalVariable(name: "file", scope: !8180, file: !3, line: 905, type: !1077)
!8190 = !DILocalVariable(name: "tid", scope: !8191, file: !3, line: 907, type: !170)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 907, column: 2)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 907, column: 2)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 907, column: 2)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 907, column: 2)
!8195 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 907, column: 2)
!8196 = !DILocalVariable(name: "_ret", scope: !8191, file: !3, line: 907, type: !135)
!8197 = !DILocalVariable(name: "tid", scope: !8198, file: !3, line: 912, type: !170)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 912, column: 3)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 912, column: 3)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 912, column: 3)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 912, column: 3)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 912, column: 3)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 912, column: 3)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 908, column: 22)
!8205 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 908, column: 6)
!8206 = !DILocalVariable(name: "tid", scope: !8207, file: !3, line: 916, type: !170)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 916, column: 2)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 916, column: 2)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 916, column: 2)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 916, column: 2)
!8211 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 916, column: 2)
!8212 = !DILocation(line: 902, column: 14, scope: !8180)
!8213 = !DILocation(line: 902, column: 23, scope: !8180)
!8214 = !DILocation(line: 902, column: 35, scope: !8180)
!8215 = !DILocation(line: 902, column: 44, scope: !8180)
!8216 = !DILocation(line: 904, column: 6, scope: !8180)
!8217 = !DILocation(line: 905, column: 2, scope: !8180)
!8218 = !DILocation(line: 905, column: 24, scope: !8180)
!8219 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8220)
!8220 = distinct !DILocation(line: 907, column: 2, scope: !8194)
!8221 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8220)
!8222 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8220)
!8223 = !DILocation(line: 907, column: 2, scope: !8194)
!8224 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8225)
!8225 = distinct !DILocation(line: 907, column: 2, scope: !8194)
!8226 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8225)
!8227 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8225)
!8228 = !DILocation(line: 907, column: 2, scope: !8195)
!8229 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !8230)
!8230 = distinct !DILocation(line: 907, column: 2, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 907, column: 2)
!8232 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !8230)
!8233 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !8230)
!8234 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !8230)
!8235 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !8230)
!8236 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !8230)
!8237 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !8230)
!8238 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !8230)
!8239 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !8230)
!8240 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !8230)
!8241 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !8230)
!8242 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !8230)
!8243 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !8230)
!8244 = !DILocation(line: 0, scope: !2856, inlinedAt: !8230)
!8245 = !DILocation(line: 0, scope: !8231)
!8246 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !8230)
!8247 = !DILocation(line: 907, column: 2, scope: !8231)
!8248 = !DILocation(line: 908, column: 6, scope: !8205)
!8249 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8250)
!8250 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8251)
!8251 = distinct !DILocation(line: 907, column: 2, scope: !8191)
!8252 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8250)
!8253 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8250)
!8254 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8251)
!8255 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8251)
!8256 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8251)
!8257 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8251)
!8258 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8251)
!8259 = !DILocation(line: 907, column: 2, scope: !8191)
!8260 = !{i32 -2145378293, i32 -2145378280, i32 -2145378255, i32 -2145378231, i32 -2145378206, i32 -2145378131, i32 -2145378106, i32 -2145377962, i32 -2145374830, i32 -2145374741, i32 -2145374620, i32 -2145374525, i32 -2145374424, i32 -2145374397, i32 -2145374314, i32 -2145374225, i32 -2145374104, i32 -2145374004, i32 -2145373898, i32 -2145373790, i32 -2145377674, i32 -2145377621, i32 -2145377590, i32 -2145377559, i32 -2145377538, i32 -2145377516, i32 -2145377467, i32 -2145377446, i32 -2145373707, i32 -2145373618, i32 -2145373497, i32 -2145373398, i32 -2145373292, i32 -2145373190, i32 -2145373157, i32 -2145373084, i32 -2145373016, i32 -2145377142, i32 -2145377083, i32 -2145377030, i32 -2145376999, i32 -2145376968, i32 -2145376947, i32 -2145376925, i32 -2145376876, i32 -2145376855, i32 -2145372963, i32 -2145372874, i32 -2145372753, i32 -2145372654, i32 -2145372548, i32 -2145372446, i32 -2145372413, i32 -2145372330, i32 -2145372241, i32 -2145372120, i32 -2145372020, i32 -2145371994, i32 -2145371891, i32 -2145371865, i32 -2145376597, i32 -2145376530, i32 -2145376505, i32 -2145376441, i32 -2145376359, i32 -2145376336, i32 -2145376311, i32 -2145376286}
!8261 = !DILocation(line: 907, column: 2, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 907, column: 2)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 907, column: 2)
!8264 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 907, column: 2)
!8265 = !{i32 -2145375098, i32 -2145375082}
!8266 = !DILocation(line: 908, column: 6, scope: !8180)
!8267 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8268)
!8268 = distinct !DILocation(line: 912, column: 3, scope: !8201)
!8269 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8268)
!8270 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8268)
!8271 = !DILocation(line: 912, column: 3, scope: !8201)
!8272 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8273)
!8273 = distinct !DILocation(line: 912, column: 3, scope: !8201)
!8274 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8273)
!8275 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8273)
!8276 = !DILocation(line: 912, column: 3, scope: !8202)
!8277 = !DILocation(line: 912, column: 3, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 912, column: 3)
!8279 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8280)
!8280 = distinct !DILocation(line: 912, column: 3, scope: !8278)
!8281 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !8280)
!8282 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8280)
!8283 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8280)
!8284 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8280)
!8285 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8286)
!8286 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8287)
!8287 = distinct !DILocation(line: 912, column: 3, scope: !8198)
!8288 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8286)
!8289 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8286)
!8290 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8287)
!8291 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8287)
!8292 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8287)
!8293 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8287)
!8294 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8287)
!8295 = !DILocation(line: 912, column: 3, scope: !8198)
!8296 = !{i32 -2145369610, i32 -2145369597, i32 -2145369572, i32 -2145369548, i32 -2145369523, i32 -2145369448, i32 -2145369423, i32 -2145369279, i32 -2145367038, i32 -2145366949, i32 -2145366828, i32 -2145366733, i32 -2145366632, i32 -2145366605, i32 -2145366522, i32 -2145366433, i32 -2145366312, i32 -2145366212, i32 -2145366106, i32 -2145365998, i32 -2145368991, i32 -2145368938, i32 -2145368907, i32 -2145368876, i32 -2145368855, i32 -2145368833, i32 -2145368784, i32 -2145368763, i32 -2145365915, i32 -2145365826, i32 -2145365705, i32 -2145365606, i32 -2145365500, i32 -2145365398, i32 -2145365365, i32 -2145365292, i32 -2145365224, i32 -2145368389, i32 -2145368336, i32 -2145368305, i32 -2145368274, i32 -2145368253, i32 -2145368231, i32 -2145368182, i32 -2145368161, i32 -2145365169, i32 -2145365080, i32 -2145364959, i32 -2145364860, i32 -2145364754, i32 -2145364652, i32 -2145364619, i32 -2145364536, i32 -2145364447, i32 -2145364326, i32 -2145364226, i32 -2145364200, i32 -2145364097, i32 -2145364071, i32 -2145367903, i32 -2145367836, i32 -2145367811, i32 -2145367747, i32 -2145367631, i32 -2145367606, i32 -2145367581}
!8297 = !DILocation(line: 915, column: 24, scope: !8180)
!8298 = !DILocalVariable(name: "s", arg: 1, scope: !8299, file: !3, line: 2273, type: !80)
!8299 = distinct !DISubprogram(name: "lwip_recv", scope: !3, file: !3, line: 2273, type: !8300, isLocal: false, isDefinition: true, scopeLine: 2274, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8302)
!8300 = !DISubroutineType(types: !8301)
!8301 = !{!206, !80, !143, !216, !80}
!8302 = !{!8298, !8303, !8304, !8305}
!8303 = !DILocalVariable(name: "mem", arg: 2, scope: !8299, file: !3, line: 2273, type: !143)
!8304 = !DILocalVariable(name: "len", arg: 3, scope: !8299, file: !3, line: 2273, type: !216)
!8305 = !DILocalVariable(name: "flags", arg: 4, scope: !8299, file: !3, line: 2273, type: !80)
!8306 = !DILocation(line: 2273, column: 15, scope: !8299, inlinedAt: !8307)
!8307 = distinct !DILocation(line: 915, column: 8, scope: !8180)
!8308 = !DILocation(line: 2273, column: 24, scope: !8299, inlinedAt: !8307)
!8309 = !DILocation(line: 2273, column: 36, scope: !8299, inlinedAt: !8307)
!8310 = !DILocation(line: 2273, column: 45, scope: !8299, inlinedAt: !8307)
!8311 = !DILocation(line: 2275, column: 10, scope: !8299, inlinedAt: !8307)
!8312 = !DILocation(line: 2275, column: 3, scope: !8299, inlinedAt: !8307)
!8313 = !DILocation(line: 915, column: 8, scope: !8180)
!8314 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8315)
!8315 = distinct !DILocation(line: 916, column: 2, scope: !8210)
!8316 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8315)
!8317 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8315)
!8318 = !DILocation(line: 916, column: 2, scope: !8210)
!8319 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8320)
!8320 = distinct !DILocation(line: 916, column: 2, scope: !8210)
!8321 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8320)
!8322 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8320)
!8323 = !DILocation(line: 916, column: 2, scope: !8211)
!8324 = !DILocation(line: 916, column: 2, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 916, column: 2)
!8326 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8327)
!8327 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8328)
!8328 = distinct !DILocation(line: 916, column: 2, scope: !8207)
!8329 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8327)
!8330 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8327)
!8331 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8328)
!8332 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8328)
!8333 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8328)
!8334 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8328)
!8335 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8328)
!8336 = !DILocation(line: 916, column: 2, scope: !8207)
!8337 = !{i32 -2145362107, i32 -2145362094, i32 -2145362069, i32 -2145362045, i32 -2145362020, i32 -2145361945, i32 -2145361920, i32 -2145361776, i32 -2145359549, i32 -2145359460, i32 -2145359339, i32 -2145359244, i32 -2145359143, i32 -2145359116, i32 -2145359033, i32 -2145358944, i32 -2145358823, i32 -2145358723, i32 -2145358617, i32 -2145358509, i32 -2145361488, i32 -2145361435, i32 -2145361404, i32 -2145361373, i32 -2145361352, i32 -2145361330, i32 -2145361281, i32 -2145361260, i32 -2145358426, i32 -2145358337, i32 -2145358216, i32 -2145358117, i32 -2145358011, i32 -2145357909, i32 -2145357876, i32 -2145357803, i32 -2145357735, i32 -2145360886, i32 -2145360833, i32 -2145360802, i32 -2145360771, i32 -2145360750, i32 -2145360728, i32 -2145360679, i32 -2145360658, i32 -2145357683, i32 -2145357594, i32 -2145357473, i32 -2145357374, i32 -2145357268, i32 -2145357166, i32 -2145357133, i32 -2145357050, i32 -2145356961, i32 -2145356840, i32 -2145356740, i32 -2145356714, i32 -2145356611, i32 -2145356585, i32 -2145360400, i32 -2145360333, i32 -2145360308, i32 -2145360244, i32 -2145360128, i32 -2145360103, i32 -2145360078}
!8338 = !DILocation(line: 0, scope: !8180)
!8339 = !DILocation(line: 919, column: 1, scope: !8180)
!8340 = !DILocation(line: 918, column: 2, scope: !8180)
!8341 = !DILocation(line: 2273, column: 15, scope: !8299)
!8342 = !DILocation(line: 2273, column: 24, scope: !8299)
!8343 = !DILocation(line: 2273, column: 36, scope: !8299)
!8344 = !DILocation(line: 2273, column: 45, scope: !8299)
!8345 = !DILocation(line: 2275, column: 10, scope: !8299)
!8346 = !DILocation(line: 2275, column: 3, scope: !8299)
!8347 = distinct !DISubprogram(name: "recvfrom", scope: !3, file: !3, line: 921, type: !8348, isLocal: false, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8350)
!8348 = !DISubroutineType(types: !8349)
!8349 = !{!80, !80, !143, !216, !80, !1004, !2773}
!8350 = !{!8351, !8352, !8353, !8354, !8355, !8356, !8357, !8358, !8359, !8365, !8366, !8375}
!8351 = !DILocalVariable(name: "s", arg: 1, scope: !8347, file: !3, line: 921, type: !80)
!8352 = !DILocalVariable(name: "mem", arg: 2, scope: !8347, file: !3, line: 921, type: !143)
!8353 = !DILocalVariable(name: "len", arg: 3, scope: !8347, file: !3, line: 921, type: !216)
!8354 = !DILocalVariable(name: "flags", arg: 4, scope: !8347, file: !3, line: 921, type: !80)
!8355 = !DILocalVariable(name: "from", arg: 5, scope: !8347, file: !3, line: 922, type: !1004)
!8356 = !DILocalVariable(name: "fromlen", arg: 6, scope: !8347, file: !3, line: 922, type: !2773)
!8357 = !DILocalVariable(name: "ret", scope: !8347, file: !3, line: 924, type: !80)
!8358 = !DILocalVariable(name: "file", scope: !8347, file: !3, line: 925, type: !1077)
!8359 = !DILocalVariable(name: "tid", scope: !8360, file: !3, line: 927, type: !170)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 927, column: 2)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !3, line: 927, column: 2)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 927, column: 2)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 927, column: 2)
!8364 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 927, column: 2)
!8365 = !DILocalVariable(name: "_ret", scope: !8360, file: !3, line: 927, type: !135)
!8366 = !DILocalVariable(name: "tid", scope: !8367, file: !3, line: 932, type: !170)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 932, column: 3)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 932, column: 3)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 932, column: 3)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 932, column: 3)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 932, column: 3)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 932, column: 3)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 928, column: 22)
!8374 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 928, column: 6)
!8375 = !DILocalVariable(name: "tid", scope: !8376, file: !3, line: 936, type: !170)
!8376 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 936, column: 2)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 936, column: 2)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 936, column: 2)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 936, column: 2)
!8380 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 936, column: 2)
!8381 = !DILocation(line: 921, column: 18, scope: !8347)
!8382 = !DILocation(line: 921, column: 27, scope: !8347)
!8383 = !DILocation(line: 921, column: 39, scope: !8347)
!8384 = !DILocation(line: 921, column: 48, scope: !8347)
!8385 = !DILocation(line: 922, column: 26, scope: !8347)
!8386 = !DILocation(line: 922, column: 43, scope: !8347)
!8387 = !DILocation(line: 924, column: 6, scope: !8347)
!8388 = !DILocation(line: 925, column: 2, scope: !8347)
!8389 = !DILocation(line: 925, column: 24, scope: !8347)
!8390 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8391)
!8391 = distinct !DILocation(line: 927, column: 2, scope: !8363)
!8392 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8391)
!8393 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8391)
!8394 = !DILocation(line: 927, column: 2, scope: !8363)
!8395 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8396)
!8396 = distinct !DILocation(line: 927, column: 2, scope: !8363)
!8397 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8396)
!8398 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8396)
!8399 = !DILocation(line: 927, column: 2, scope: !8364)
!8400 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !8401)
!8401 = distinct !DILocation(line: 927, column: 2, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 927, column: 2)
!8403 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !8401)
!8404 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !8401)
!8405 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !8401)
!8406 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !8401)
!8407 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !8401)
!8408 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !8401)
!8409 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !8401)
!8410 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !8401)
!8411 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !8401)
!8412 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !8401)
!8413 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !8401)
!8414 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !8401)
!8415 = !DILocation(line: 0, scope: !2856, inlinedAt: !8401)
!8416 = !DILocation(line: 0, scope: !8402)
!8417 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !8401)
!8418 = !DILocation(line: 927, column: 2, scope: !8402)
!8419 = !DILocation(line: 928, column: 6, scope: !8374)
!8420 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8421)
!8421 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8422)
!8422 = distinct !DILocation(line: 927, column: 2, scope: !8360)
!8423 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8421)
!8424 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8421)
!8425 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8422)
!8426 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8422)
!8427 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8422)
!8428 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8422)
!8429 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8422)
!8430 = !DILocation(line: 927, column: 2, scope: !8360)
!8431 = !{i32 -2145354602, i32 -2145354589, i32 -2145354564, i32 -2145354540, i32 -2145354515, i32 -2145354440, i32 -2145354415, i32 -2145354271, i32 -2145351139, i32 -2145351050, i32 -2145350929, i32 -2145350834, i32 -2145350733, i32 -2145350706, i32 -2145350623, i32 -2145350534, i32 -2145350413, i32 -2145350313, i32 -2145350207, i32 -2145350099, i32 -2145353983, i32 -2145353930, i32 -2145353899, i32 -2145353868, i32 -2145353847, i32 -2145353825, i32 -2145353776, i32 -2145353755, i32 -2145350016, i32 -2145349927, i32 -2145349806, i32 -2145349707, i32 -2145349601, i32 -2145349499, i32 -2145349466, i32 -2145349393, i32 -2145349325, i32 -2145353451, i32 -2145353392, i32 -2145353339, i32 -2145353308, i32 -2145353277, i32 -2145353256, i32 -2145353234, i32 -2145353185, i32 -2145353164, i32 -2145349272, i32 -2145349183, i32 -2145349062, i32 -2145348963, i32 -2145348857, i32 -2145348755, i32 -2145348722, i32 -2145348639, i32 -2145348550, i32 -2145348429, i32 -2145348329, i32 -2145348303, i32 -2145348200, i32 -2145348174, i32 -2145352906, i32 -2145352839, i32 -2145352814, i32 -2145352750, i32 -2145352668, i32 -2145352645, i32 -2145352620, i32 -2145352595}
!8432 = !DILocation(line: 927, column: 2, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 927, column: 2)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 927, column: 2)
!8435 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 927, column: 2)
!8436 = !{i32 -2145351407, i32 -2145351391}
!8437 = !DILocation(line: 928, column: 6, scope: !8347)
!8438 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8439)
!8439 = distinct !DILocation(line: 932, column: 3, scope: !8370)
!8440 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8439)
!8441 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8439)
!8442 = !DILocation(line: 932, column: 3, scope: !8370)
!8443 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8444)
!8444 = distinct !DILocation(line: 932, column: 3, scope: !8370)
!8445 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8444)
!8446 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8444)
!8447 = !DILocation(line: 932, column: 3, scope: !8371)
!8448 = !DILocation(line: 932, column: 3, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 932, column: 3)
!8450 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8451)
!8451 = distinct !DILocation(line: 932, column: 3, scope: !8449)
!8452 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !8451)
!8453 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8451)
!8454 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8451)
!8455 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8451)
!8456 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8457)
!8457 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8458)
!8458 = distinct !DILocation(line: 932, column: 3, scope: !8367)
!8459 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8457)
!8460 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8457)
!8461 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8458)
!8462 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8458)
!8463 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8458)
!8464 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8458)
!8465 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8458)
!8466 = !DILocation(line: 932, column: 3, scope: !8367)
!8467 = !{i32 -2145345919, i32 -2145345906, i32 -2145345881, i32 -2145345857, i32 -2145345832, i32 -2145345757, i32 -2145345732, i32 -2145345588, i32 -2145343347, i32 -2145343258, i32 -2145343137, i32 -2145343042, i32 -2145342941, i32 -2145342914, i32 -2145342831, i32 -2145342742, i32 -2145342621, i32 -2145342521, i32 -2145342415, i32 -2145342307, i32 -2145345300, i32 -2145345247, i32 -2145345216, i32 -2145345185, i32 -2145345164, i32 -2145345142, i32 -2145345093, i32 -2145345072, i32 -2145342224, i32 -2145342135, i32 -2145342014, i32 -2145341915, i32 -2145341809, i32 -2145341707, i32 -2145341674, i32 -2145341601, i32 -2145341533, i32 -2145344698, i32 -2145344645, i32 -2145344614, i32 -2145344583, i32 -2145344562, i32 -2145344540, i32 -2145344491, i32 -2145344470, i32 -2145341478, i32 -2145341389, i32 -2145341268, i32 -2145341169, i32 -2145341063, i32 -2145340961, i32 -2145340928, i32 -2145340845, i32 -2145340756, i32 -2145340635, i32 -2145340535, i32 -2145340509, i32 -2145340406, i32 -2145340380, i32 -2145344212, i32 -2145344145, i32 -2145344120, i32 -2145344056, i32 -2145343940, i32 -2145343915, i32 -2145343890}
!8468 = !DILocation(line: 935, column: 28, scope: !8347)
!8469 = !DILocation(line: 935, column: 8, scope: !8347)
!8470 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8471)
!8471 = distinct !DILocation(line: 936, column: 2, scope: !8379)
!8472 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8471)
!8473 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8471)
!8474 = !DILocation(line: 936, column: 2, scope: !8379)
!8475 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8476)
!8476 = distinct !DILocation(line: 936, column: 2, scope: !8379)
!8477 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8476)
!8478 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8476)
!8479 = !DILocation(line: 936, column: 2, scope: !8380)
!8480 = !DILocation(line: 936, column: 2, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 936, column: 2)
!8482 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8483)
!8483 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8484)
!8484 = distinct !DILocation(line: 936, column: 2, scope: !8376)
!8485 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8483)
!8486 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8483)
!8487 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8484)
!8488 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8484)
!8489 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8484)
!8490 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8484)
!8491 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8484)
!8492 = !DILocation(line: 936, column: 2, scope: !8376)
!8493 = !{i32 -2145338416, i32 -2145338403, i32 -2145338378, i32 -2145338354, i32 -2145338329, i32 -2145338254, i32 -2145338229, i32 -2145338085, i32 -2145335858, i32 -2145335769, i32 -2145335648, i32 -2145335553, i32 -2145335452, i32 -2145335425, i32 -2145335342, i32 -2145335253, i32 -2145335132, i32 -2145335032, i32 -2145334926, i32 -2145334818, i32 -2145337797, i32 -2145337744, i32 -2145337713, i32 -2145337682, i32 -2145337661, i32 -2145337639, i32 -2145337590, i32 -2145337569, i32 -2145334735, i32 -2145334646, i32 -2145334525, i32 -2145334426, i32 -2145334320, i32 -2145334218, i32 -2145334185, i32 -2145334112, i32 -2145334044, i32 -2145337195, i32 -2145337142, i32 -2145337111, i32 -2145337080, i32 -2145337059, i32 -2145337037, i32 -2145336988, i32 -2145336967, i32 -2145333992, i32 -2145333903, i32 -2145333782, i32 -2145333683, i32 -2145333577, i32 -2145333475, i32 -2145333442, i32 -2145333359, i32 -2145333270, i32 -2145333149, i32 -2145333049, i32 -2145333023, i32 -2145332920, i32 -2145332894, i32 -2145336709, i32 -2145336642, i32 -2145336617, i32 -2145336553, i32 -2145336437, i32 -2145336412, i32 -2145336387}
!8494 = !DILocation(line: 0, scope: !8347)
!8495 = !DILocation(line: 939, column: 1, scope: !8347)
!8496 = !DILocation(line: 938, column: 2, scope: !8347)
!8497 = distinct !DISubprogram(name: "lwip_recvfrom", scope: !3, file: !3, line: 2197, type: !8498, isLocal: false, isDefinition: true, scopeLine: 2199, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8500)
!8498 = !DISubroutineType(types: !8499)
!8499 = !{!206, !80, !143, !216, !80, !1004, !2773}
!8500 = !{!8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8509, !8512, !8513, !8514, !8515, !8519, !8525, !8527}
!8501 = !DILocalVariable(name: "s", arg: 1, scope: !8497, file: !3, line: 2197, type: !80)
!8502 = !DILocalVariable(name: "mem", arg: 2, scope: !8497, file: !3, line: 2197, type: !143)
!8503 = !DILocalVariable(name: "len", arg: 3, scope: !8497, file: !3, line: 2197, type: !216)
!8504 = !DILocalVariable(name: "flags", arg: 4, scope: !8497, file: !3, line: 2197, type: !80)
!8505 = !DILocalVariable(name: "from", arg: 5, scope: !8497, file: !3, line: 2198, type: !1004)
!8506 = !DILocalVariable(name: "fromlen", arg: 6, scope: !8497, file: !3, line: 2198, type: !2773)
!8507 = !DILocalVariable(name: "sock", scope: !8497, file: !3, line: 2200, type: !1165)
!8508 = !DILocalVariable(name: "ret", scope: !8497, file: !3, line: 2201, type: !206)
!8509 = !DILocalVariable(name: "datagram_len", scope: !8510, file: !3, line: 2217, type: !164)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 2216, column: 3)
!8511 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2209, column: 7)
!8512 = !DILocalVariable(name: "vec", scope: !8510, file: !3, line: 2218, type: !211)
!8513 = !DILocalVariable(name: "msg", scope: !8510, file: !3, line: 2219, type: !1746)
!8514 = !DILocalVariable(name: "err", scope: !8510, file: !3, line: 2220, type: !1283)
!8515 = !DILocalVariable(name: "sockerr", scope: !8516, file: !3, line: 2234, type: !1007)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 2234, column: 7)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 2231, column: 24)
!8518 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 2231, column: 9)
!8519 = !DILocalVariable(name: "tid", scope: !8520, file: !3, line: 2234, type: !170)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 2234, column: 7)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 2234, column: 7)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 2234, column: 7)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2234, column: 7)
!8524 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 2234, column: 7)
!8525 = !DILocalVariable(name: "sockerr", scope: !8526, file: !3, line: 2244, type: !1007)
!8526 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2244, column: 3)
!8527 = !DILocalVariable(name: "tid", scope: !8528, file: !3, line: 2244, type: !170)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2244, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 2244, column: 3)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 2244, column: 3)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 2244, column: 3)
!8532 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 2244, column: 3)
!8533 = !DILocation(line: 2197, column: 19, scope: !8497)
!8534 = !DILocation(line: 2197, column: 28, scope: !8497)
!8535 = !DILocation(line: 2197, column: 40, scope: !8497)
!8536 = !DILocation(line: 2197, column: 49, scope: !8497)
!8537 = !DILocation(line: 2198, column: 32, scope: !8497)
!8538 = !DILocation(line: 2198, column: 49, scope: !8497)
!8539 = !DILocation(line: 2204, column: 10, scope: !8497)
!8540 = !DILocation(line: 2200, column: 21, scope: !8497)
!8541 = !DILocation(line: 2205, column: 8, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2205, column: 7)
!8543 = !DILocation(line: 2205, column: 7, scope: !8497)
!8544 = !DILocation(line: 2209, column: 7, scope: !8511)
!8545 = !DILocation(line: 2209, column: 51, scope: !8511)
!8546 = !DILocation(line: 2209, column: 7, scope: !8497)
!8547 = !DILocation(line: 2210, column: 11, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 2209, column: 67)
!8549 = !DILocation(line: 2201, column: 11, scope: !8497)
!8550 = !DILocalVariable(name: "sock", arg: 1, scope: !8551, file: !3, line: 2054, type: !1165)
!8551 = distinct !DISubprogram(name: "lwip_recv_tcp_from", scope: !3, file: !3, line: 2054, type: !8552, isLocal: true, isDefinition: true, scopeLine: 2055, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8554)
!8552 = !DISubroutineType(types: !8553)
!8553 = !{!80, !1165, !1004, !2773, !292, !80, !206}
!8554 = !{!8550, !8555, !8556, !8557, !8558, !8559, !8560, !8563}
!8555 = !DILocalVariable(name: "from", arg: 2, scope: !8551, file: !3, line: 2054, type: !1004)
!8556 = !DILocalVariable(name: "fromlen", arg: 3, scope: !8551, file: !3, line: 2054, type: !2773)
!8557 = !DILocalVariable(name: "dbg_fn", arg: 4, scope: !8551, file: !3, line: 2054, type: !292)
!8558 = !DILocalVariable(name: "dbg_s", arg: 5, scope: !8551, file: !3, line: 2054, type: !80)
!8559 = !DILocalVariable(name: "dbg_ret", arg: 6, scope: !8551, file: !3, line: 2054, type: !206)
!8560 = !DILocalVariable(name: "port", scope: !8561, file: !3, line: 2068, type: !164)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 2066, column: 3)
!8562 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 2064, column: 7)
!8563 = !DILocalVariable(name: "tmpaddr", scope: !8561, file: !3, line: 2069, type: !1183)
!8564 = !DILocation(line: 2054, column: 38, scope: !8551, inlinedAt: !8565)
!8565 = distinct !DILocation(line: 2211, column: 5, scope: !8548)
!8566 = !DILocation(line: 2054, column: 61, scope: !8551, inlinedAt: !8565)
!8567 = !DILocation(line: 2054, column: 78, scope: !8551, inlinedAt: !8565)
!8568 = !DILocation(line: 2054, column: 99, scope: !8551, inlinedAt: !8565)
!8569 = !DILocation(line: 2054, column: 111, scope: !8551, inlinedAt: !8565)
!8570 = !DILocation(line: 2054, column: 126, scope: !8551, inlinedAt: !8565)
!8571 = !DILocation(line: 2056, column: 7, scope: !8551, inlinedAt: !8565)
!8572 = !DILocation(line: 2064, column: 7, scope: !8562, inlinedAt: !8565)
!8573 = !DILocation(line: 2064, column: 15, scope: !8562, inlinedAt: !8565)
!8574 = !DILocation(line: 2064, column: 12, scope: !8562, inlinedAt: !8565)
!8575 = !DILocation(line: 2068, column: 5, scope: !8561, inlinedAt: !8565)
!8576 = !DILocation(line: 2069, column: 5, scope: !8561, inlinedAt: !8565)
!8577 = !DILocation(line: 2070, column: 27, scope: !8561, inlinedAt: !8565)
!8578 = !DILocation(line: 2068, column: 11, scope: !8561, inlinedAt: !8565)
!8579 = !DILocation(line: 2069, column: 15, scope: !8561, inlinedAt: !8565)
!8580 = !DILocation(line: 2070, column: 5, scope: !8561, inlinedAt: !8565)
!8581 = !DILocation(line: 2074, column: 14, scope: !8582, inlinedAt: !8565)
!8582 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 2074, column: 9)
!8583 = !DILocation(line: 2075, column: 40, scope: !8584, inlinedAt: !8565)
!8584 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 2074, column: 26)
!8585 = !DILocation(line: 2075, column: 56, scope: !8584, inlinedAt: !8565)
!8586 = !DILocation(line: 2075, column: 14, scope: !8584, inlinedAt: !8565)
!8587 = !DILocation(line: 2075, column: 7, scope: !8584, inlinedAt: !8565)
!8588 = !DILocation(line: 2077, column: 3, scope: !8562, inlinedAt: !8565)
!8589 = !DILocation(line: 2213, column: 5, scope: !8548)
!8590 = !DILocation(line: 2217, column: 5, scope: !8510)
!8591 = !DILocation(line: 2217, column: 11, scope: !8510)
!8592 = !DILocation(line: 2218, column: 5, scope: !8510)
!8593 = !DILocation(line: 2219, column: 5, scope: !8510)
!8594 = !DILocation(line: 2221, column: 9, scope: !8510)
!8595 = !DILocation(line: 2221, column: 18, scope: !8510)
!8596 = !{!8597, !1408, i64 0}
!8597 = !{!"iovec", !1408, i64 0, !1404, i64 8}
!8598 = !DILocation(line: 2222, column: 9, scope: !8510)
!8599 = !DILocation(line: 2222, column: 17, scope: !8510)
!8600 = !{!8597, !1404, i64 8}
!8601 = !DILocation(line: 2223, column: 9, scope: !8510)
!8602 = !DILocation(line: 2223, column: 21, scope: !8510)
!8603 = !DILocation(line: 2224, column: 9, scope: !8510)
!8604 = !DILocation(line: 2224, column: 24, scope: !8510)
!8605 = !DILocation(line: 2225, column: 9, scope: !8510)
!8606 = !DILocation(line: 2225, column: 19, scope: !8510)
!8607 = !DILocation(line: 2226, column: 9, scope: !8510)
!8608 = !DILocation(line: 2226, column: 17, scope: !8510)
!8609 = !DILocation(line: 2227, column: 9, scope: !8510)
!8610 = !DILocation(line: 2227, column: 20, scope: !8510)
!8611 = !DILocation(line: 2228, column: 20, scope: !8510)
!8612 = !DILocation(line: 2228, column: 9, scope: !8510)
!8613 = !DILocation(line: 2228, column: 18, scope: !8510)
!8614 = !DILocation(line: 2229, column: 24, scope: !8510)
!8615 = !DILocation(line: 2229, column: 34, scope: !8510)
!8616 = !DILocation(line: 2229, column: 9, scope: !8510)
!8617 = !DILocation(line: 2229, column: 21, scope: !8510)
!8618 = !DILocation(line: 2219, column: 19, scope: !8510)
!8619 = !DILocation(line: 2230, column: 11, scope: !8510)
!8620 = !DILocation(line: 2220, column: 11, scope: !8510)
!8621 = !DILocation(line: 2231, column: 13, scope: !8518)
!8622 = !DILocation(line: 2231, column: 9, scope: !8510)
!8623 = !DILocation(line: 2234, column: 7, scope: !8516)
!8624 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8625)
!8625 = distinct !DILocation(line: 2234, column: 7, scope: !8523)
!8626 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8625)
!8627 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8625)
!8628 = !DILocation(line: 2234, column: 7, scope: !8523)
!8629 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8630)
!8630 = distinct !DILocation(line: 2234, column: 7, scope: !8523)
!8631 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8630)
!8632 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8630)
!8633 = !DILocation(line: 2234, column: 7, scope: !8524)
!8634 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8635)
!8635 = distinct !DILocation(line: 2234, column: 7, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 2234, column: 7)
!8637 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8635)
!8638 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8635)
!8639 = !DILocation(line: 2234, column: 7, scope: !8636)
!8640 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8641)
!8641 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8642)
!8642 = distinct !DILocation(line: 2234, column: 7, scope: !8520)
!8643 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8641)
!8644 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8641)
!8645 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8642)
!8646 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8642)
!8647 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8642)
!8648 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8642)
!8649 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8642)
!8650 = !DILocation(line: 2234, column: 7, scope: !8520)
!8651 = !{i32 -2145006588, i32 -2145006575, i32 -2145006550, i32 -2145006526, i32 -2145006501, i32 -2145006426, i32 -2145006401, i32 -2145006257, i32 -2145004034, i32 -2145003945, i32 -2145003824, i32 -2145003729, i32 -2145003628, i32 -2145003601, i32 -2145003518, i32 -2145003429, i32 -2145003308, i32 -2145003208, i32 -2145003102, i32 -2145002994, i32 -2145005969, i32 -2145005916, i32 -2145005885, i32 -2145005854, i32 -2145005833, i32 -2145005811, i32 -2145005762, i32 -2145005741, i32 -2145002911, i32 -2145002822, i32 -2145002701, i32 -2145002602, i32 -2145002496, i32 -2145002394, i32 -2145002361, i32 -2145002288, i32 -2145002220, i32 -2145005367, i32 -2145005314, i32 -2145005283, i32 -2145005252, i32 -2145005231, i32 -2145005209, i32 -2145005160, i32 -2145005139, i32 -2145002165, i32 -2145002076, i32 -2145001955, i32 -2145001856, i32 -2145001750, i32 -2145001648, i32 -2145001615, i32 -2145001532, i32 -2145001443, i32 -2145001322, i32 -2145001222, i32 -2145001196, i32 -2145001093, i32 -2145001067, i32 -2145004881, i32 -2145004814, i32 -2145004789, i32 -2145004725, i32 -2145004609, i32 -2145004584, i32 -2145004559}
!8652 = !DILocation(line: 2238, column: 20, scope: !8510)
!8653 = !DILocation(line: 2239, column: 9, scope: !8510)
!8654 = !DILocation(line: 2240, column: 22, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 2239, column: 18)
!8656 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 2239, column: 9)
!8657 = !DILocation(line: 2240, column: 16, scope: !8655)
!8658 = !DILocation(line: 2241, column: 5, scope: !8655)
!8659 = !DILocation(line: 0, scope: !8517)
!8660 = !DILocation(line: 2242, column: 3, scope: !8511)
!8661 = !DILocation(line: 2244, column: 3, scope: !8526)
!8662 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8663)
!8663 = distinct !DILocation(line: 2244, column: 3, scope: !8531)
!8664 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8663)
!8665 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8663)
!8666 = !DILocation(line: 2244, column: 3, scope: !8531)
!8667 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8668)
!8668 = distinct !DILocation(line: 2244, column: 3, scope: !8531)
!8669 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8668)
!8670 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8668)
!8671 = !DILocation(line: 2244, column: 3, scope: !8532)
!8672 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8673)
!8673 = distinct !DILocation(line: 2244, column: 3, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 2244, column: 3)
!8675 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8673)
!8676 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8673)
!8677 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8673)
!8678 = !DILocation(line: 2244, column: 3, scope: !8674)
!8679 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8680)
!8680 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8681)
!8681 = distinct !DILocation(line: 2244, column: 3, scope: !8528)
!8682 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8680)
!8683 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8680)
!8684 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8681)
!8685 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8681)
!8686 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8681)
!8687 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8681)
!8688 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8681)
!8689 = !DILocation(line: 2244, column: 3, scope: !8528)
!8690 = !{i32 -2144998756, i32 -2144998743, i32 -2144998718, i32 -2144998694, i32 -2144998669, i32 -2144998594, i32 -2144998569, i32 -2144998425, i32 -2144996202, i32 -2144996113, i32 -2144995992, i32 -2144995897, i32 -2144995796, i32 -2144995769, i32 -2144995686, i32 -2144995597, i32 -2144995476, i32 -2144995376, i32 -2144995270, i32 -2144995162, i32 -2144998137, i32 -2144998084, i32 -2144998053, i32 -2144998022, i32 -2144998001, i32 -2144997979, i32 -2144997930, i32 -2144997909, i32 -2144995079, i32 -2144994990, i32 -2144994869, i32 -2144994770, i32 -2144994664, i32 -2144994562, i32 -2144994529, i32 -2144994456, i32 -2144994388, i32 -2144997535, i32 -2144997482, i32 -2144997451, i32 -2144997420, i32 -2144997399, i32 -2144997377, i32 -2144997328, i32 -2144997307, i32 -2144994333, i32 -2144994244, i32 -2144994123, i32 -2144994024, i32 -2144993918, i32 -2144993816, i32 -2144993783, i32 -2144993700, i32 -2144993611, i32 -2144993490, i32 -2144993390, i32 -2144993364, i32 -2144993261, i32 -2144993235, i32 -2144997049, i32 -2144996982, i32 -2144996957, i32 -2144996893, i32 -2144996777, i32 -2144996752, i32 -2144996727}
!8691 = !DILocation(line: 0, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 2205, column: 14)
!8693 = !DILocation(line: 2247, column: 1, scope: !8497)
!8694 = distinct !DISubprogram(name: "recvmsg", scope: !3, file: !3, line: 941, type: !8695, isLocal: false, isDefinition: true, scopeLine: 942, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8698)
!8695 = !DISubroutineType(types: !8696)
!8696 = !{!80, !80, !8697, !80}
!8697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!8698 = !{!8699, !8700, !8701, !8702, !8703, !8704, !8710, !8711, !8720}
!8699 = !DILocalVariable(name: "s", arg: 1, scope: !8694, file: !3, line: 941, type: !80)
!8700 = !DILocalVariable(name: "msg", arg: 2, scope: !8694, file: !3, line: 941, type: !8697)
!8701 = !DILocalVariable(name: "flags", arg: 3, scope: !8694, file: !3, line: 941, type: !80)
!8702 = !DILocalVariable(name: "ret", scope: !8694, file: !3, line: 943, type: !80)
!8703 = !DILocalVariable(name: "file", scope: !8694, file: !3, line: 944, type: !1077)
!8704 = !DILocalVariable(name: "tid", scope: !8705, file: !3, line: 946, type: !170)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 946, column: 2)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 946, column: 2)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 946, column: 2)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 946, column: 2)
!8709 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 946, column: 2)
!8710 = !DILocalVariable(name: "_ret", scope: !8705, file: !3, line: 946, type: !135)
!8711 = !DILocalVariable(name: "tid", scope: !8712, file: !3, line: 951, type: !170)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 951, column: 3)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 951, column: 3)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 951, column: 3)
!8715 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 951, column: 3)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 951, column: 3)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 951, column: 3)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 947, column: 22)
!8719 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 947, column: 6)
!8720 = !DILocalVariable(name: "tid", scope: !8721, file: !3, line: 955, type: !170)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 955, column: 2)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 955, column: 2)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 955, column: 2)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 955, column: 2)
!8725 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 955, column: 2)
!8726 = !DILocation(line: 941, column: 17, scope: !8694)
!8727 = !DILocation(line: 941, column: 35, scope: !8694)
!8728 = !DILocation(line: 941, column: 44, scope: !8694)
!8729 = !DILocation(line: 943, column: 6, scope: !8694)
!8730 = !DILocation(line: 944, column: 2, scope: !8694)
!8731 = !DILocation(line: 944, column: 24, scope: !8694)
!8732 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8733)
!8733 = distinct !DILocation(line: 946, column: 2, scope: !8708)
!8734 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8733)
!8735 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8733)
!8736 = !DILocation(line: 946, column: 2, scope: !8708)
!8737 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8738)
!8738 = distinct !DILocation(line: 946, column: 2, scope: !8708)
!8739 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8738)
!8740 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8738)
!8741 = !DILocation(line: 946, column: 2, scope: !8709)
!8742 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !8743)
!8743 = distinct !DILocation(line: 946, column: 2, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 946, column: 2)
!8745 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !8743)
!8746 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !8743)
!8747 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !8743)
!8748 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !8743)
!8749 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !8743)
!8750 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !8743)
!8751 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !8743)
!8752 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !8743)
!8753 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !8743)
!8754 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !8743)
!8755 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !8743)
!8756 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !8743)
!8757 = !DILocation(line: 0, scope: !2856, inlinedAt: !8743)
!8758 = !DILocation(line: 0, scope: !8744)
!8759 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !8743)
!8760 = !DILocation(line: 946, column: 2, scope: !8744)
!8761 = !DILocation(line: 947, column: 6, scope: !8719)
!8762 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8763)
!8763 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 946, column: 2, scope: !8705)
!8765 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8763)
!8766 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8763)
!8767 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8764)
!8768 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8764)
!8769 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8764)
!8770 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8764)
!8771 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8764)
!8772 = !DILocation(line: 946, column: 2, scope: !8705)
!8773 = !{i32 -2145330911, i32 -2145330898, i32 -2145330873, i32 -2145330849, i32 -2145330824, i32 -2145330749, i32 -2145330724, i32 -2145330580, i32 -2145327448, i32 -2145327359, i32 -2145327238, i32 -2145327143, i32 -2145327042, i32 -2145327015, i32 -2145326932, i32 -2145326843, i32 -2145326722, i32 -2145326622, i32 -2145326516, i32 -2145326408, i32 -2145330292, i32 -2145330239, i32 -2145330208, i32 -2145330177, i32 -2145330156, i32 -2145330134, i32 -2145330085, i32 -2145330064, i32 -2145326325, i32 -2145326236, i32 -2145326115, i32 -2145326016, i32 -2145325910, i32 -2145325808, i32 -2145325775, i32 -2145325702, i32 -2145325634, i32 -2145329760, i32 -2145329701, i32 -2145329648, i32 -2145329617, i32 -2145329586, i32 -2145329565, i32 -2145329543, i32 -2145329494, i32 -2145329473, i32 -2145325581, i32 -2145325492, i32 -2145325371, i32 -2145325272, i32 -2145325166, i32 -2145325064, i32 -2145325031, i32 -2145324948, i32 -2145324859, i32 -2145324738, i32 -2145324638, i32 -2145324612, i32 -2145324509, i32 -2145324483, i32 -2145329215, i32 -2145329148, i32 -2145329123, i32 -2145329059, i32 -2145328977, i32 -2145328954, i32 -2145328929, i32 -2145328904}
!8774 = !DILocation(line: 946, column: 2, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 946, column: 2)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 946, column: 2)
!8777 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 946, column: 2)
!8778 = !{i32 -2145327716, i32 -2145327700}
!8779 = !DILocation(line: 947, column: 6, scope: !8694)
!8780 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8781)
!8781 = distinct !DILocation(line: 951, column: 3, scope: !8715)
!8782 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8781)
!8783 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8781)
!8784 = !DILocation(line: 951, column: 3, scope: !8715)
!8785 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8786)
!8786 = distinct !DILocation(line: 951, column: 3, scope: !8715)
!8787 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8786)
!8788 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8786)
!8789 = !DILocation(line: 951, column: 3, scope: !8716)
!8790 = !DILocation(line: 951, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 951, column: 3)
!8792 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8793)
!8793 = distinct !DILocation(line: 951, column: 3, scope: !8791)
!8794 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !8793)
!8795 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8793)
!8796 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8793)
!8797 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8793)
!8798 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8799)
!8799 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8800)
!8800 = distinct !DILocation(line: 951, column: 3, scope: !8712)
!8801 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8799)
!8802 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8799)
!8803 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8800)
!8804 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8800)
!8805 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8800)
!8806 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8800)
!8807 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8800)
!8808 = !DILocation(line: 951, column: 3, scope: !8712)
!8809 = !{i32 -2145322228, i32 -2145322215, i32 -2145322190, i32 -2145322166, i32 -2145322141, i32 -2145322066, i32 -2145322041, i32 -2145321897, i32 -2145319656, i32 -2145319567, i32 -2145319446, i32 -2145319351, i32 -2145319250, i32 -2145319223, i32 -2145319140, i32 -2145319051, i32 -2145318930, i32 -2145318830, i32 -2145318724, i32 -2145318616, i32 -2145321609, i32 -2145321556, i32 -2145321525, i32 -2145321494, i32 -2145321473, i32 -2145321451, i32 -2145321402, i32 -2145321381, i32 -2145318533, i32 -2145318444, i32 -2145318323, i32 -2145318224, i32 -2145318118, i32 -2145318016, i32 -2145317983, i32 -2145317910, i32 -2145317842, i32 -2145321007, i32 -2145320954, i32 -2145320923, i32 -2145320892, i32 -2145320871, i32 -2145320849, i32 -2145320800, i32 -2145320779, i32 -2145317787, i32 -2145317698, i32 -2145317577, i32 -2145317478, i32 -2145317372, i32 -2145317270, i32 -2145317237, i32 -2145317154, i32 -2145317065, i32 -2145316944, i32 -2145316844, i32 -2145316818, i32 -2145316715, i32 -2145316689, i32 -2145320521, i32 -2145320454, i32 -2145320429, i32 -2145320365, i32 -2145320249, i32 -2145320224, i32 -2145320199}
!8810 = !DILocation(line: 954, column: 27, scope: !8694)
!8811 = !DILocation(line: 954, column: 8, scope: !8694)
!8812 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8813)
!8813 = distinct !DILocation(line: 955, column: 2, scope: !8724)
!8814 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8813)
!8815 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8813)
!8816 = !DILocation(line: 955, column: 2, scope: !8724)
!8817 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8818)
!8818 = distinct !DILocation(line: 955, column: 2, scope: !8724)
!8819 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8818)
!8820 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8818)
!8821 = !DILocation(line: 955, column: 2, scope: !8725)
!8822 = !DILocation(line: 955, column: 2, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 955, column: 2)
!8824 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8825)
!8825 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8826)
!8826 = distinct !DILocation(line: 955, column: 2, scope: !8721)
!8827 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8825)
!8828 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8825)
!8829 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8826)
!8830 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8826)
!8831 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8826)
!8832 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8826)
!8833 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8826)
!8834 = !DILocation(line: 955, column: 2, scope: !8721)
!8835 = !{i32 -2145314725, i32 -2145314712, i32 -2145314687, i32 -2145314663, i32 -2145314638, i32 -2145314563, i32 -2145314538, i32 -2145314394, i32 -2145312167, i32 -2145312078, i32 -2145311957, i32 -2145311862, i32 -2145311761, i32 -2145311734, i32 -2145311651, i32 -2145311562, i32 -2145311441, i32 -2145311341, i32 -2145311235, i32 -2145311127, i32 -2145314106, i32 -2145314053, i32 -2145314022, i32 -2145313991, i32 -2145313970, i32 -2145313948, i32 -2145313899, i32 -2145313878, i32 -2145311044, i32 -2145310955, i32 -2145310834, i32 -2145310735, i32 -2145310629, i32 -2145310527, i32 -2145310494, i32 -2145310421, i32 -2145310353, i32 -2145313504, i32 -2145313451, i32 -2145313420, i32 -2145313389, i32 -2145313368, i32 -2145313346, i32 -2145313297, i32 -2145313276, i32 -2145310301, i32 -2145310212, i32 -2145310091, i32 -2145309992, i32 -2145309886, i32 -2145309784, i32 -2145309751, i32 -2145309668, i32 -2145309579, i32 -2145309458, i32 -2145309358, i32 -2145309332, i32 -2145309229, i32 -2145309203, i32 -2145313018, i32 -2145312951, i32 -2145312926, i32 -2145312862, i32 -2145312746, i32 -2145312721, i32 -2145312696}
!8836 = !DILocation(line: 0, scope: !8694)
!8837 = !DILocation(line: 958, column: 1, scope: !8694)
!8838 = !DILocation(line: 957, column: 2, scope: !8694)
!8839 = distinct !DISubprogram(name: "lwip_recvmsg", scope: !3, file: !3, line: 2279, type: !8840, isLocal: false, isDefinition: true, scopeLine: 2280, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8842)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{!206, !80, !8697, !80}
!8842 = !{!8843, !8844, !8845, !8846, !8847, !8848, !8849, !8854, !8860, !8868, !8875, !8881, !8884, !8888, !8892, !8898, !8900, !8901, !8905, !8911, !8913}
!8843 = !DILocalVariable(name: "s", arg: 1, scope: !8839, file: !3, line: 2279, type: !80)
!8844 = !DILocalVariable(name: "message", arg: 2, scope: !8839, file: !3, line: 2279, type: !8697)
!8845 = !DILocalVariable(name: "flags", arg: 3, scope: !8839, file: !3, line: 2279, type: !80)
!8846 = !DILocalVariable(name: "sock", scope: !8839, file: !3, line: 2281, type: !1165)
!8847 = !DILocalVariable(name: "i", scope: !8839, file: !3, line: 2282, type: !80)
!8848 = !DILocalVariable(name: "buflen", scope: !8839, file: !3, line: 2283, type: !206)
!8849 = !DILocalVariable(name: "sockerr", scope: !8850, file: !3, line: 2287, type: !1007)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 2287, column: 3)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2287, column: 3)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 2287, column: 3)
!8853 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2287, column: 3)
!8854 = !DILocalVariable(name: "tid", scope: !8855, file: !3, line: 2287, type: !170)
!8855 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 2287, column: 3)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 2287, column: 3)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 2287, column: 3)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 2287, column: 3)
!8859 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2287, column: 3)
!8860 = !DILocalVariable(name: "tid", scope: !8861, file: !3, line: 2291, type: !170)
!8861 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 2291, column: 5)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2291, column: 5)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2291, column: 5)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 2291, column: 5)
!8865 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 2291, column: 5)
!8866 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 2290, column: 70)
!8867 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2290, column: 7)
!8868 = !DILocalVariable(name: "sockerr", scope: !8869, file: !3, line: 2306, type: !1007)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !3, line: 2306, column: 7)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 2305, column: 74)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 2303, column: 9)
!8872 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 2302, column: 45)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 2302, column: 3)
!8874 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2302, column: 3)
!8875 = !DILocalVariable(name: "tid", scope: !8876, file: !3, line: 2306, type: !170)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 2306, column: 7)
!8877 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 2306, column: 7)
!8878 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2306, column: 7)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 2306, column: 7)
!8880 = distinct !DILexicalBlock(scope: !8869, file: !3, line: 2306, column: 7)
!8881 = !DILocalVariable(name: "recv_flags", scope: !8882, file: !3, line: 2315, type: !80)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !3, line: 2313, column: 67)
!8883 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2313, column: 7)
!8884 = !DILocalVariable(name: "recvd_local", scope: !8885, file: !3, line: 2321, type: !206)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 2319, column: 47)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 2319, column: 5)
!8887 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2319, column: 5)
!8888 = !DILocalVariable(name: "sockerr", scope: !8889, file: !3, line: 2340, type: !1007)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !3, line: 2340, column: 7)
!8890 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 2338, column: 21)
!8891 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2338, column: 9)
!8892 = !DILocalVariable(name: "tid", scope: !8893, file: !3, line: 2340, type: !170)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 2340, column: 7)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 2340, column: 7)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 2340, column: 7)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 2340, column: 7)
!8897 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2340, column: 7)
!8898 = !DILocalVariable(name: "datagram_len", scope: !8899, file: !3, line: 2354, type: !164)
!8899 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2353, column: 3)
!8900 = !DILocalVariable(name: "err", scope: !8899, file: !3, line: 2355, type: !1283)
!8901 = !DILocalVariable(name: "sockerr", scope: !8902, file: !3, line: 2360, type: !1007)
!8902 = distinct !DILexicalBlock(scope: !8903, file: !3, line: 2360, column: 7)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 2357, column: 24)
!8904 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2357, column: 9)
!8905 = !DILocalVariable(name: "tid", scope: !8906, file: !3, line: 2360, type: !170)
!8906 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 2360, column: 7)
!8907 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 2360, column: 7)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 2360, column: 7)
!8909 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 2360, column: 7)
!8910 = distinct !DILexicalBlock(scope: !8902, file: !3, line: 2360, column: 7)
!8911 = !DILocalVariable(name: "sockerr", scope: !8912, file: !3, line: 2368, type: !1007)
!8912 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2368, column: 5)
!8913 = !DILocalVariable(name: "tid", scope: !8914, file: !3, line: 2368, type: !170)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 2368, column: 5)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 2368, column: 5)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 2368, column: 5)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 2368, column: 5)
!8918 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 2368, column: 5)
!8919 = !DILocation(line: 2279, column: 18, scope: !8839)
!8920 = !DILocation(line: 2279, column: 36, scope: !8839)
!8921 = !DILocation(line: 2279, column: 49, scope: !8839)
!8922 = !DILocation(line: 2286, column: 3, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2286, column: 3)
!8924 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2286, column: 3)
!8925 = !DILocation(line: 2286, column: 3, scope: !8924)
!8926 = !DILocation(line: 2286, column: 3, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 2286, column: 3)
!8928 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 2286, column: 3)
!8929 = !DILocation(line: 2286, column: 3, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 2286, column: 3)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 2286, column: 3)
!8932 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 2286, column: 3)
!8933 = !DILocation(line: 2287, column: 3, scope: !8852)
!8934 = !DILocation(line: 2287, column: 3, scope: !8853)
!8935 = !DILocation(line: 2287, column: 3, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 2287, column: 3)
!8937 = !DILocation(line: 2287, column: 3, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 2287, column: 3)
!8939 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 2287, column: 3)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2287, column: 3)
!8941 = !DILocation(line: 2290, column: 17, scope: !8867)
!8942 = !DILocation(line: 2290, column: 28, scope: !8867)
!8943 = !DILocation(line: 2290, column: 34, scope: !8867)
!8944 = !DILocation(line: 2290, column: 58, scope: !8867)
!8945 = !DILocation(line: 2290, column: 7, scope: !8839)
!8946 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8947)
!8947 = distinct !DILocation(line: 2291, column: 5, scope: !8864)
!8948 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8947)
!8949 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8947)
!8950 = !DILocation(line: 2291, column: 5, scope: !8864)
!8951 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8952)
!8952 = distinct !DILocation(line: 2291, column: 5, scope: !8864)
!8953 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8952)
!8954 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8952)
!8955 = !DILocation(line: 2291, column: 5, scope: !8865)
!8956 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !8957)
!8957 = distinct !DILocation(line: 2291, column: 5, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2291, column: 5)
!8959 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !8957)
!8960 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !8957)
!8961 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !8957)
!8962 = !DILocation(line: 2291, column: 5, scope: !8958)
!8963 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8964)
!8964 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !8965)
!8965 = distinct !DILocation(line: 2291, column: 5, scope: !8861)
!8966 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8964)
!8967 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8964)
!8968 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !8965)
!8969 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !8965)
!8970 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !8965)
!8971 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !8965)
!8972 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !8965)
!8973 = !DILocation(line: 2291, column: 5, scope: !8861)
!8974 = !{i32 -2144975589, i32 -2144975576, i32 -2144975551, i32 -2144975527, i32 -2144975502, i32 -2144975427, i32 -2144975402, i32 -2144975258, i32 -2144973034, i32 -2144972945, i32 -2144972824, i32 -2144972729, i32 -2144972628, i32 -2144972601, i32 -2144972518, i32 -2144972429, i32 -2144972308, i32 -2144972208, i32 -2144972102, i32 -2144971994, i32 -2144974970, i32 -2144974917, i32 -2144974886, i32 -2144974855, i32 -2144974834, i32 -2144974812, i32 -2144974763, i32 -2144974742, i32 -2144971911, i32 -2144971822, i32 -2144971701, i32 -2144971602, i32 -2144971496, i32 -2144971394, i32 -2144971361, i32 -2144971288, i32 -2144971220, i32 -2144974368, i32 -2144974315, i32 -2144974284, i32 -2144974253, i32 -2144974232, i32 -2144974210, i32 -2144974161, i32 -2144974140, i32 -2144971165, i32 -2144971076, i32 -2144970955, i32 -2144970856, i32 -2144970750, i32 -2144970648, i32 -2144970615, i32 -2144970532, i32 -2144970443, i32 -2144970322, i32 -2144970222, i32 -2144970196, i32 -2144970093, i32 -2144970067, i32 -2144973882, i32 -2144973815, i32 -2144973790, i32 -2144973726, i32 -2144973610, i32 -2144973585, i32 -2144973560}
!8975 = !DILocation(line: 2292, column: 5, scope: !8866)
!8976 = !DILocation(line: 2295, column: 10, scope: !8839)
!8977 = !DILocation(line: 2281, column: 21, scope: !8839)
!8978 = !DILocation(line: 2296, column: 8, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2296, column: 7)
!8980 = !DILocation(line: 2296, column: 7, scope: !8839)
!8981 = !DILocation(line: 0, scope: !8874)
!8982 = !DILocation(line: 2282, column: 7, scope: !8839)
!8983 = !DILocation(line: 2283, column: 11, scope: !8839)
!8984 = !DILocation(line: 2302, column: 28, scope: !8873)
!8985 = !DILocation(line: 2302, column: 17, scope: !8873)
!8986 = !DILocation(line: 2302, column: 3, scope: !8874)
!8987 = !DILocation(line: 2303, column: 30, scope: !8871)
!8988 = !DILocation(line: 2303, column: 39, scope: !8871)
!8989 = !DILocation(line: 2303, column: 48, scope: !8871)
!8990 = !DILocation(line: 2303, column: 81, scope: !8871)
!8991 = !DILocation(line: 2303, column: 89, scope: !8871)
!8992 = !DILocation(line: 2303, column: 95, scope: !8871)
!8993 = !DILocation(line: 2304, column: 87, scope: !8871)
!8994 = !DILocation(line: 2305, column: 27, scope: !8871)
!8995 = !DILocation(line: 2305, column: 67, scope: !8871)
!8996 = !DILocation(line: 2303, column: 9, scope: !8872)
!8997 = !DILocation(line: 2306, column: 7, scope: !8869)
!8998 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !8999)
!8999 = distinct !DILocation(line: 2306, column: 7, scope: !8879)
!9000 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !8999)
!9001 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !8999)
!9002 = !DILocation(line: 2306, column: 7, scope: !8879)
!9003 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9004)
!9004 = distinct !DILocation(line: 2306, column: 7, scope: !8879)
!9005 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9004)
!9006 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9004)
!9007 = !DILocation(line: 2306, column: 7, scope: !8880)
!9008 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9009)
!9009 = distinct !DILocation(line: 2306, column: 7, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2306, column: 7)
!9011 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9009)
!9012 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9009)
!9013 = !DILocation(line: 2306, column: 7, scope: !9010)
!9014 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9015)
!9015 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9016)
!9016 = distinct !DILocation(line: 2306, column: 7, scope: !8876)
!9017 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9015)
!9018 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9015)
!9019 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9016)
!9020 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9016)
!9021 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9016)
!9022 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9016)
!9023 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9016)
!9024 = !DILocation(line: 2306, column: 7, scope: !8876)
!9025 = !{i32 -2144967999, i32 -2144967986, i32 -2144967961, i32 -2144967937, i32 -2144967912, i32 -2144967837, i32 -2144967812, i32 -2144967668, i32 -2144965445, i32 -2144965356, i32 -2144965235, i32 -2144965140, i32 -2144965039, i32 -2144965012, i32 -2144964929, i32 -2144964840, i32 -2144964719, i32 -2144964619, i32 -2144964513, i32 -2144964405, i32 -2144967380, i32 -2144967327, i32 -2144967296, i32 -2144967265, i32 -2144967244, i32 -2144967222, i32 -2144967173, i32 -2144967152, i32 -2144964322, i32 -2144964233, i32 -2144964112, i32 -2144964013, i32 -2144963907, i32 -2144963805, i32 -2144963772, i32 -2144963699, i32 -2144963631, i32 -2144966778, i32 -2144966725, i32 -2144966694, i32 -2144966663, i32 -2144966642, i32 -2144966620, i32 -2144966571, i32 -2144966550, i32 -2144963576, i32 -2144963487, i32 -2144963366, i32 -2144963267, i32 -2144963161, i32 -2144963059, i32 -2144963026, i32 -2144962943, i32 -2144962854, i32 -2144962733, i32 -2144962633, i32 -2144962607, i32 -2144962504, i32 -2144962478, i32 -2144966292, i32 -2144966225, i32 -2144966200, i32 -2144966136, i32 -2144966020, i32 -2144965995, i32 -2144965970}
!9026 = !DILocation(line: 2308, column: 7, scope: !8870)
!9027 = !DILocation(line: 2302, column: 41, scope: !8873)
!9028 = !DILocation(line: 2302, column: 3, scope: !8873)
!9029 = distinct !{!9029, !8986, !9030}
!9030 = !DILocation(line: 2311, column: 3, scope: !8874)
!9031 = !DILocation(line: 0, scope: !8872)
!9032 = !DILocation(line: 2313, column: 7, scope: !8883)
!9033 = !DILocation(line: 2313, column: 51, scope: !8883)
!9034 = !DILocation(line: 2313, column: 7, scope: !8839)
!9035 = !DILocation(line: 2315, column: 9, scope: !8882)
!9036 = !DILocation(line: 2316, column: 14, scope: !8882)
!9037 = !DILocation(line: 2316, column: 24, scope: !8882)
!9038 = !DILocation(line: 2319, column: 10, scope: !8887)
!9039 = !DILocation(line: 2319, column: 5, scope: !8887)
!9040 = !DILocation(line: 2321, column: 58, scope: !8885)
!9041 = !DILocation(line: 2321, column: 69, scope: !8885)
!9042 = !DILocation(line: 2321, column: 99, scope: !8885)
!9043 = !DILocation(line: 2321, column: 29, scope: !8885)
!9044 = !DILocation(line: 2321, column: 15, scope: !8885)
!9045 = !DILocation(line: 2322, column: 23, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2322, column: 11)
!9047 = !DILocation(line: 2322, column: 11, scope: !8885)
!9048 = !DILocation(line: 2324, column: 16, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 2322, column: 28)
!9050 = !DILocation(line: 2325, column: 7, scope: !9049)
!9051 = !DILocation(line: 2326, column: 29, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2326, column: 11)
!9053 = !DILocation(line: 2326, column: 24, scope: !9052)
!9054 = !DILocation(line: 2326, column: 61, scope: !9052)
!9055 = !DILocation(line: 2326, column: 72, scope: !9052)
!9056 = !DILocation(line: 2326, column: 47, scope: !9052)
!9057 = !DILocation(line: 2326, column: 45, scope: !9052)
!9058 = !DILocation(line: 2326, column: 81, scope: !9052)
!9059 = !DILocation(line: 2326, column: 11, scope: !8885)
!9060 = !DILocation(line: 2329, column: 20, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 2329, column: 13)
!9062 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 2327, column: 31)
!9063 = !DILocation(line: 2329, column: 13, scope: !9062)
!9064 = !DILocation(line: 2332, column: 9, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 2329, column: 26)
!9066 = !DILocation(line: 0, scope: !9049)
!9067 = !DILocation(line: 2333, column: 9, scope: !9062)
!9068 = !DILocation(line: 2336, column: 18, scope: !8885)
!9069 = !DILocation(line: 2337, column: 5, scope: !8886)
!9070 = !DILocation(line: 2319, column: 43, scope: !8886)
!9071 = !DILocation(line: 2319, column: 5, scope: !8886)
!9072 = !DILocation(line: 2319, column: 30, scope: !8886)
!9073 = !DILocation(line: 2319, column: 19, scope: !8886)
!9074 = distinct !{!9074, !9039, !9075}
!9075 = !DILocation(line: 2337, column: 5, scope: !8887)
!9076 = !DILocation(line: 0, scope: !8882)
!9077 = !DILocation(line: 2338, column: 16, scope: !8891)
!9078 = !DILocation(line: 2338, column: 9, scope: !8882)
!9079 = !DILocation(line: 2340, column: 7, scope: !8889)
!9080 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9081)
!9081 = distinct !DILocation(line: 2340, column: 7, scope: !8896)
!9082 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9081)
!9083 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9081)
!9084 = !DILocation(line: 2340, column: 7, scope: !8896)
!9085 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9086)
!9086 = distinct !DILocation(line: 2340, column: 7, scope: !8896)
!9087 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9086)
!9088 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9086)
!9089 = !DILocation(line: 2340, column: 7, scope: !8897)
!9090 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !9091)
!9091 = distinct !DILocation(line: 2340, column: 7, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 2340, column: 7)
!9093 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9091)
!9094 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9091)
!9095 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9091)
!9096 = !DILocation(line: 2340, column: 7, scope: !9092)
!9097 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9098)
!9098 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9099)
!9099 = distinct !DILocation(line: 2340, column: 7, scope: !8893)
!9100 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9098)
!9101 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9098)
!9102 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9099)
!9103 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9099)
!9104 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9099)
!9105 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9099)
!9106 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9099)
!9107 = !DILocation(line: 2340, column: 7, scope: !8893)
!9108 = !{i32 -2144960374, i32 -2144960361, i32 -2144960336, i32 -2144960312, i32 -2144960287, i32 -2144960212, i32 -2144960187, i32 -2144960043, i32 -2144957820, i32 -2144957731, i32 -2144957610, i32 -2144957515, i32 -2144957414, i32 -2144957387, i32 -2144957304, i32 -2144957215, i32 -2144957094, i32 -2144956994, i32 -2144956888, i32 -2144956780, i32 -2144959755, i32 -2144959702, i32 -2144959671, i32 -2144959640, i32 -2144959619, i32 -2144959597, i32 -2144959548, i32 -2144959527, i32 -2144956697, i32 -2144956608, i32 -2144956487, i32 -2144956388, i32 -2144956282, i32 -2144956180, i32 -2144956147, i32 -2144956074, i32 -2144956006, i32 -2144959153, i32 -2144959100, i32 -2144959069, i32 -2144959038, i32 -2144959017, i32 -2144958995, i32 -2144958946, i32 -2144958925, i32 -2144955951, i32 -2144955862, i32 -2144955741, i32 -2144955642, i32 -2144955536, i32 -2144955434, i32 -2144955401, i32 -2144955318, i32 -2144955229, i32 -2144955108, i32 -2144955008, i32 -2144954982, i32 -2144954879, i32 -2144954853, i32 -2144958667, i32 -2144958600, i32 -2144958575, i32 -2144958511, i32 -2144958395, i32 -2144958370, i32 -2144958345}
!9109 = !DILocation(line: 2341, column: 5, scope: !8890)
!9110 = !DILocation(line: 0, scope: !8890)
!9111 = !DILocation(line: 2354, column: 5, scope: !8899)
!9112 = !DILocation(line: 2354, column: 11, scope: !8899)
!9113 = !DILocation(line: 2356, column: 11, scope: !8899)
!9114 = !DILocation(line: 2355, column: 11, scope: !8899)
!9115 = !DILocation(line: 2357, column: 13, scope: !8904)
!9116 = !DILocation(line: 2357, column: 9, scope: !8899)
!9117 = !DILocation(line: 2360, column: 7, scope: !8902)
!9118 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9119)
!9119 = distinct !DILocation(line: 2360, column: 7, scope: !8909)
!9120 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9119)
!9121 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9119)
!9122 = !DILocation(line: 2360, column: 7, scope: !8909)
!9123 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9124)
!9124 = distinct !DILocation(line: 2360, column: 7, scope: !8909)
!9125 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9124)
!9126 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9124)
!9127 = !DILocation(line: 2360, column: 7, scope: !8910)
!9128 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9129)
!9129 = distinct !DILocation(line: 2360, column: 7, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 2360, column: 7)
!9131 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9129)
!9132 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9129)
!9133 = !DILocation(line: 2360, column: 7, scope: !9130)
!9134 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9135)
!9135 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9136)
!9136 = distinct !DILocation(line: 2360, column: 7, scope: !8906)
!9137 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9135)
!9138 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9135)
!9139 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9136)
!9140 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9136)
!9141 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9136)
!9142 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9136)
!9143 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9136)
!9144 = !DILocation(line: 2360, column: 7, scope: !8906)
!9145 = !{i32 -2144952797, i32 -2144952784, i32 -2144952759, i32 -2144952735, i32 -2144952710, i32 -2144952635, i32 -2144952610, i32 -2144952466, i32 -2144950243, i32 -2144950154, i32 -2144950033, i32 -2144949938, i32 -2144949837, i32 -2144949810, i32 -2144949727, i32 -2144949638, i32 -2144949517, i32 -2144949417, i32 -2144949311, i32 -2144949203, i32 -2144952178, i32 -2144952125, i32 -2144952094, i32 -2144952063, i32 -2144952042, i32 -2144952020, i32 -2144951971, i32 -2144951950, i32 -2144949120, i32 -2144949031, i32 -2144948910, i32 -2144948811, i32 -2144948705, i32 -2144948603, i32 -2144948570, i32 -2144948497, i32 -2144948429, i32 -2144951576, i32 -2144951523, i32 -2144951492, i32 -2144951461, i32 -2144951440, i32 -2144951418, i32 -2144951369, i32 -2144951348, i32 -2144948374, i32 -2144948285, i32 -2144948164, i32 -2144948065, i32 -2144947959, i32 -2144947857, i32 -2144947824, i32 -2144947741, i32 -2144947652, i32 -2144947531, i32 -2144947431, i32 -2144947405, i32 -2144947302, i32 -2144947276, i32 -2144951090, i32 -2144951023, i32 -2144950998, i32 -2144950934, i32 -2144950818, i32 -2144950793, i32 -2144950768}
!9146 = !DILocation(line: 2362, column: 7, scope: !8903)
!9147 = !DILocation(line: 2364, column: 9, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2364, column: 9)
!9149 = !DILocation(line: 2364, column: 22, scope: !9148)
!9150 = !DILocation(line: 2364, column: 9, scope: !8899)
!9151 = !DILocation(line: 2365, column: 16, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 2364, column: 32)
!9153 = !DILocation(line: 2365, column: 26, scope: !9152)
!9154 = !DILocation(line: 2366, column: 5, scope: !9152)
!9155 = !DILocation(line: 2368, column: 5, scope: !8912)
!9156 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9157)
!9157 = distinct !DILocation(line: 2368, column: 5, scope: !8917)
!9158 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9157)
!9159 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9157)
!9160 = !DILocation(line: 2368, column: 5, scope: !8917)
!9161 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9162)
!9162 = distinct !DILocation(line: 2368, column: 5, scope: !8917)
!9163 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9162)
!9164 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9162)
!9165 = !DILocation(line: 2368, column: 5, scope: !8918)
!9166 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !9167)
!9167 = distinct !DILocation(line: 2368, column: 5, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 2368, column: 5)
!9169 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9167)
!9170 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9167)
!9171 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9167)
!9172 = !DILocation(line: 2368, column: 5, scope: !9168)
!9173 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9174)
!9174 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9175)
!9175 = distinct !DILocation(line: 2368, column: 5, scope: !8914)
!9176 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9174)
!9177 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9174)
!9178 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9175)
!9179 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9175)
!9180 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9175)
!9181 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9175)
!9182 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9175)
!9183 = !DILocation(line: 2368, column: 5, scope: !8914)
!9184 = !{i32 -2144945235, i32 -2144945222, i32 -2144945197, i32 -2144945173, i32 -2144945148, i32 -2144945073, i32 -2144945048, i32 -2144944904, i32 -2144942681, i32 -2144942592, i32 -2144942471, i32 -2144942376, i32 -2144942275, i32 -2144942248, i32 -2144942165, i32 -2144942076, i32 -2144941955, i32 -2144941855, i32 -2144941749, i32 -2144941641, i32 -2144944616, i32 -2144944563, i32 -2144944532, i32 -2144944501, i32 -2144944480, i32 -2144944458, i32 -2144944409, i32 -2144944388, i32 -2144941558, i32 -2144941469, i32 -2144941348, i32 -2144941249, i32 -2144941143, i32 -2144941041, i32 -2144941008, i32 -2144940935, i32 -2144940867, i32 -2144944014, i32 -2144943961, i32 -2144943930, i32 -2144943899, i32 -2144943878, i32 -2144943856, i32 -2144943807, i32 -2144943786, i32 -2144940812, i32 -2144940723, i32 -2144940602, i32 -2144940503, i32 -2144940397, i32 -2144940295, i32 -2144940262, i32 -2144940179, i32 -2144940090, i32 -2144939969, i32 -2144939869, i32 -2144939843, i32 -2144939740, i32 -2144939714, i32 -2144943528, i32 -2144943461, i32 -2144943436, i32 -2144943372, i32 -2144943256, i32 -2144943231, i32 -2144943206}
!9185 = !DILocation(line: 2370, column: 17, scope: !8899)
!9186 = !DILocation(line: 2370, column: 12, scope: !8899)
!9187 = !DILocation(line: 2370, column: 5, scope: !8899)
!9188 = !DILocation(line: 0, scope: !8899)
!9189 = !DILocation(line: 0, scope: !8903)
!9190 = !DILocation(line: 2371, column: 3, scope: !8839)
!9191 = !DILocation(line: 2377, column: 1, scope: !8839)
!9192 = !DILocation(line: 0, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 2296, column: 14)
!9194 = distinct !DISubprogram(name: "send", scope: !3, file: !3, line: 960, type: !9195, isLocal: false, isDefinition: true, scopeLine: 961, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9197)
!9195 = !DISubroutineType(types: !9196)
!9196 = !{!80, !80, !225, !216, !80}
!9197 = !{!9198, !9199, !9200, !9201, !9202, !9203, !9204, !9210, !9211, !9220}
!9198 = !DILocalVariable(name: "s", arg: 1, scope: !9194, file: !3, line: 960, type: !80)
!9199 = !DILocalVariable(name: "dataptr", arg: 2, scope: !9194, file: !3, line: 960, type: !225)
!9200 = !DILocalVariable(name: "size", arg: 3, scope: !9194, file: !3, line: 960, type: !216)
!9201 = !DILocalVariable(name: "flags", arg: 4, scope: !9194, file: !3, line: 960, type: !80)
!9202 = !DILocalVariable(name: "ret", scope: !9194, file: !3, line: 962, type: !80)
!9203 = !DILocalVariable(name: "file", scope: !9194, file: !3, line: 963, type: !1077)
!9204 = !DILocalVariable(name: "tid", scope: !9205, file: !3, line: 965, type: !170)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 965, column: 2)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 965, column: 2)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 965, column: 2)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 965, column: 2)
!9209 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 965, column: 2)
!9210 = !DILocalVariable(name: "_ret", scope: !9205, file: !3, line: 965, type: !135)
!9211 = !DILocalVariable(name: "tid", scope: !9212, file: !3, line: 970, type: !170)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 970, column: 3)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !3, line: 970, column: 3)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 970, column: 3)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 970, column: 3)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 970, column: 3)
!9217 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 970, column: 3)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 966, column: 22)
!9219 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 966, column: 6)
!9220 = !DILocalVariable(name: "tid", scope: !9221, file: !3, line: 974, type: !170)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !3, line: 974, column: 2)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 974, column: 2)
!9223 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 974, column: 2)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 974, column: 2)
!9225 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 974, column: 2)
!9226 = !DILocation(line: 960, column: 14, scope: !9194)
!9227 = !DILocation(line: 960, column: 29, scope: !9194)
!9228 = !DILocation(line: 960, column: 45, scope: !9194)
!9229 = !DILocation(line: 960, column: 55, scope: !9194)
!9230 = !DILocation(line: 962, column: 6, scope: !9194)
!9231 = !DILocation(line: 963, column: 2, scope: !9194)
!9232 = !DILocation(line: 963, column: 24, scope: !9194)
!9233 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9234)
!9234 = distinct !DILocation(line: 965, column: 2, scope: !9208)
!9235 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9234)
!9236 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9234)
!9237 = !DILocation(line: 965, column: 2, scope: !9208)
!9238 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9239)
!9239 = distinct !DILocation(line: 965, column: 2, scope: !9208)
!9240 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9239)
!9241 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9239)
!9242 = !DILocation(line: 965, column: 2, scope: !9209)
!9243 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !9244)
!9244 = distinct !DILocation(line: 965, column: 2, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 965, column: 2)
!9246 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !9244)
!9247 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !9244)
!9248 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !9244)
!9249 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !9244)
!9250 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !9244)
!9251 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !9244)
!9252 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !9244)
!9253 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !9244)
!9254 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !9244)
!9255 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !9244)
!9256 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !9244)
!9257 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !9244)
!9258 = !DILocation(line: 0, scope: !2856, inlinedAt: !9244)
!9259 = !DILocation(line: 0, scope: !9245)
!9260 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !9244)
!9261 = !DILocation(line: 965, column: 2, scope: !9245)
!9262 = !DILocation(line: 966, column: 6, scope: !9219)
!9263 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9264)
!9264 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9265)
!9265 = distinct !DILocation(line: 965, column: 2, scope: !9205)
!9266 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9264)
!9267 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9264)
!9268 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9265)
!9269 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9265)
!9270 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9265)
!9271 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9265)
!9272 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9265)
!9273 = !DILocation(line: 965, column: 2, scope: !9205)
!9274 = !{i32 -2145303159, i32 -2145303146, i32 -2145303121, i32 -2145303097, i32 -2145303072, i32 -2145302997, i32 -2145302972, i32 -2145302828, i32 -2145299696, i32 -2145299607, i32 -2145299486, i32 -2145299391, i32 -2145299290, i32 -2145299263, i32 -2145299180, i32 -2145299091, i32 -2145298970, i32 -2145298870, i32 -2145298764, i32 -2145298656, i32 -2145302540, i32 -2145302487, i32 -2145302456, i32 -2145302425, i32 -2145302404, i32 -2145302382, i32 -2145302333, i32 -2145302312, i32 -2145298573, i32 -2145298484, i32 -2145298363, i32 -2145298264, i32 -2145298158, i32 -2145298056, i32 -2145298023, i32 -2145297950, i32 -2145297882, i32 -2145302008, i32 -2145301949, i32 -2145301896, i32 -2145301865, i32 -2145301834, i32 -2145301813, i32 -2145301791, i32 -2145301742, i32 -2145301721, i32 -2145297829, i32 -2145297740, i32 -2145297619, i32 -2145297520, i32 -2145297414, i32 -2145297312, i32 -2145297279, i32 -2145297196, i32 -2145297107, i32 -2145296986, i32 -2145296886, i32 -2145296860, i32 -2145296757, i32 -2145296731, i32 -2145301463, i32 -2145301396, i32 -2145301371, i32 -2145301307, i32 -2145301225, i32 -2145301202, i32 -2145301177, i32 -2145301152}
!9275 = !DILocation(line: 965, column: 2, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 965, column: 2)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 965, column: 2)
!9278 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 965, column: 2)
!9279 = !{i32 -2145299964, i32 -2145299948}
!9280 = !DILocation(line: 966, column: 6, scope: !9194)
!9281 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 970, column: 3, scope: !9215)
!9283 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9282)
!9284 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9282)
!9285 = !DILocation(line: 970, column: 3, scope: !9215)
!9286 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9287)
!9287 = distinct !DILocation(line: 970, column: 3, scope: !9215)
!9288 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9287)
!9289 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9287)
!9290 = !DILocation(line: 970, column: 3, scope: !9216)
!9291 = !DILocation(line: 970, column: 3, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 970, column: 3)
!9293 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !9294)
!9294 = distinct !DILocation(line: 970, column: 3, scope: !9292)
!9295 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !9294)
!9296 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9294)
!9297 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9294)
!9298 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9294)
!9299 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9300)
!9300 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9301)
!9301 = distinct !DILocation(line: 970, column: 3, scope: !9212)
!9302 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9300)
!9303 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9300)
!9304 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9301)
!9305 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9301)
!9306 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9301)
!9307 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9301)
!9308 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9301)
!9309 = !DILocation(line: 970, column: 3, scope: !9212)
!9310 = !{i32 -2145294476, i32 -2145294463, i32 -2145294438, i32 -2145294414, i32 -2145294389, i32 -2145294314, i32 -2145294289, i32 -2145294145, i32 -2145291904, i32 -2145291815, i32 -2145291694, i32 -2145291599, i32 -2145291498, i32 -2145291471, i32 -2145291388, i32 -2145291299, i32 -2145291178, i32 -2145291078, i32 -2145290972, i32 -2145290864, i32 -2145293857, i32 -2145293804, i32 -2145293773, i32 -2145293742, i32 -2145293721, i32 -2145293699, i32 -2145293650, i32 -2145293629, i32 -2145290781, i32 -2145290692, i32 -2145290571, i32 -2145290472, i32 -2145290366, i32 -2145290264, i32 -2145290231, i32 -2145290158, i32 -2145290090, i32 -2145293255, i32 -2145293202, i32 -2145293171, i32 -2145293140, i32 -2145293119, i32 -2145293097, i32 -2145293048, i32 -2145293027, i32 -2145290035, i32 -2145289946, i32 -2145289825, i32 -2145289726, i32 -2145289620, i32 -2145289518, i32 -2145289485, i32 -2145289402, i32 -2145289313, i32 -2145289192, i32 -2145289092, i32 -2145289066, i32 -2145288963, i32 -2145288937, i32 -2145292769, i32 -2145292702, i32 -2145292677, i32 -2145292613, i32 -2145292497, i32 -2145292472, i32 -2145292447}
!9311 = !DILocation(line: 973, column: 24, scope: !9194)
!9312 = !DILocation(line: 973, column: 8, scope: !9194)
!9313 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9314)
!9314 = distinct !DILocation(line: 974, column: 2, scope: !9224)
!9315 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9314)
!9316 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9314)
!9317 = !DILocation(line: 974, column: 2, scope: !9224)
!9318 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9319)
!9319 = distinct !DILocation(line: 974, column: 2, scope: !9224)
!9320 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9319)
!9321 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9319)
!9322 = !DILocation(line: 974, column: 2, scope: !9225)
!9323 = !DILocation(line: 974, column: 2, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 974, column: 2)
!9325 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9326)
!9326 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9327)
!9327 = distinct !DILocation(line: 974, column: 2, scope: !9221)
!9328 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9326)
!9329 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9326)
!9330 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9327)
!9331 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9327)
!9332 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9327)
!9333 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9327)
!9334 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9327)
!9335 = !DILocation(line: 974, column: 2, scope: !9221)
!9336 = !{i32 -2145286973, i32 -2145286960, i32 -2145286935, i32 -2145286911, i32 -2145286886, i32 -2145286811, i32 -2145286786, i32 -2145286642, i32 -2145284415, i32 -2145284326, i32 -2145284205, i32 -2145284110, i32 -2145284009, i32 -2145283982, i32 -2145283899, i32 -2145283810, i32 -2145283689, i32 -2145283589, i32 -2145283483, i32 -2145283375, i32 -2145286354, i32 -2145286301, i32 -2145286270, i32 -2145286239, i32 -2145286218, i32 -2145286196, i32 -2145286147, i32 -2145286126, i32 -2145283292, i32 -2145283203, i32 -2145283082, i32 -2145282983, i32 -2145282877, i32 -2145282775, i32 -2145282742, i32 -2145282669, i32 -2145282601, i32 -2145285752, i32 -2145285699, i32 -2145285668, i32 -2145285637, i32 -2145285616, i32 -2145285594, i32 -2145285545, i32 -2145285524, i32 -2145282549, i32 -2145282460, i32 -2145282339, i32 -2145282240, i32 -2145282134, i32 -2145282032, i32 -2145281999, i32 -2145281916, i32 -2145281827, i32 -2145281706, i32 -2145281606, i32 -2145281580, i32 -2145281477, i32 -2145281451, i32 -2145285266, i32 -2145285199, i32 -2145285174, i32 -2145285110, i32 -2145284994, i32 -2145284969, i32 -2145284944}
!9337 = !DILocation(line: 0, scope: !9194)
!9338 = !DILocation(line: 977, column: 1, scope: !9194)
!9339 = !DILocation(line: 976, column: 2, scope: !9194)
!9340 = distinct !DISubprogram(name: "lwip_send", scope: !3, file: !3, line: 2380, type: !9341, isLocal: false, isDefinition: true, scopeLine: 2381, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!206, !80, !225, !216, !80}
!9343 = !{!9344, !9345, !9346, !9347, !9348, !9349, !9350, !9351, !9352, !9354}
!9344 = !DILocalVariable(name: "s", arg: 1, scope: !9340, file: !3, line: 2380, type: !80)
!9345 = !DILocalVariable(name: "data", arg: 2, scope: !9340, file: !3, line: 2380, type: !225)
!9346 = !DILocalVariable(name: "size", arg: 3, scope: !9340, file: !3, line: 2380, type: !216)
!9347 = !DILocalVariable(name: "flags", arg: 4, scope: !9340, file: !3, line: 2380, type: !80)
!9348 = !DILocalVariable(name: "sock", scope: !9340, file: !3, line: 2382, type: !1165)
!9349 = !DILocalVariable(name: "err", scope: !9340, file: !3, line: 2383, type: !1283)
!9350 = !DILocalVariable(name: "write_flags", scope: !9340, file: !3, line: 2384, type: !156)
!9351 = !DILocalVariable(name: "written", scope: !9340, file: !3, line: 2385, type: !216)
!9352 = !DILocalVariable(name: "sockerr", scope: !9353, file: !3, line: 2413, type: !1007)
!9353 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 2413, column: 3)
!9354 = !DILocalVariable(name: "tid", scope: !9355, file: !3, line: 2413, type: !170)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 2413, column: 3)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !3, line: 2413, column: 3)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 2413, column: 3)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 2413, column: 3)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 2413, column: 3)
!9360 = !DILocation(line: 2380, column: 15, scope: !9340)
!9361 = !DILocation(line: 2380, column: 30, scope: !9340)
!9362 = !DILocation(line: 2380, column: 43, scope: !9340)
!9363 = !DILocation(line: 2380, column: 53, scope: !9340)
!9364 = !DILocation(line: 2385, column: 3, scope: !9340)
!9365 = !DILocation(line: 2390, column: 10, scope: !9340)
!9366 = !DILocation(line: 2382, column: 21, scope: !9340)
!9367 = !DILocation(line: 2391, column: 8, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 2391, column: 7)
!9369 = !DILocation(line: 2391, column: 7, scope: !9340)
!9370 = !DILocation(line: 2395, column: 7, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9340, file: !3, line: 2395, column: 7)
!9372 = !DILocation(line: 2395, column: 51, scope: !9371)
!9373 = !DILocation(line: 2395, column: 7, scope: !9340)
!9374 = !DILocation(line: 2398, column: 12, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 2395, column: 67)
!9376 = !DILocation(line: 2398, column: 5, scope: !9375)
!9377 = !DILocation(line: 2407, column: 25, scope: !9340)
!9378 = !DILocation(line: 2408, column: 25, scope: !9340)
!9379 = !DILocation(line: 2407, column: 73, scope: !9340)
!9380 = !DILocation(line: 2406, column: 17, scope: !9340)
!9381 = !DILocation(line: 2384, column: 8, scope: !9340)
!9382 = !DILocation(line: 2385, column: 10, scope: !9340)
!9383 = !DILocation(line: 2409, column: 11, scope: !9340)
!9384 = !DILocation(line: 2410, column: 9, scope: !9340)
!9385 = !DILocation(line: 2383, column: 9, scope: !9340)
!9386 = !DILocation(line: 2413, column: 3, scope: !9353)
!9387 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9388)
!9388 = distinct !DILocation(line: 2413, column: 3, scope: !9358)
!9389 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9388)
!9390 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9388)
!9391 = !DILocation(line: 2413, column: 3, scope: !9358)
!9392 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9393)
!9393 = distinct !DILocation(line: 2413, column: 3, scope: !9358)
!9394 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9393)
!9395 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9393)
!9396 = !DILocation(line: 2413, column: 3, scope: !9359)
!9397 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9398)
!9398 = distinct !DILocation(line: 2413, column: 3, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 2413, column: 3)
!9400 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9398)
!9401 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9398)
!9402 = !DILocation(line: 2413, column: 3, scope: !9399)
!9403 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9405)
!9405 = distinct !DILocation(line: 2413, column: 3, scope: !9355)
!9406 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9404)
!9407 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9404)
!9408 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9405)
!9409 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9405)
!9410 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9405)
!9411 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9405)
!9412 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9405)
!9413 = !DILocation(line: 2413, column: 3, scope: !9355)
!9414 = !{i32 -2144937565, i32 -2144937552, i32 -2144937527, i32 -2144937503, i32 -2144937478, i32 -2144937403, i32 -2144937378, i32 -2144937234, i32 -2144935011, i32 -2144934922, i32 -2144934801, i32 -2144934706, i32 -2144934605, i32 -2144934578, i32 -2144934495, i32 -2144934406, i32 -2144934285, i32 -2144934185, i32 -2144934079, i32 -2144933971, i32 -2144936946, i32 -2144936893, i32 -2144936862, i32 -2144936831, i32 -2144936810, i32 -2144936788, i32 -2144936739, i32 -2144936718, i32 -2144933888, i32 -2144933799, i32 -2144933678, i32 -2144933579, i32 -2144933473, i32 -2144933371, i32 -2144933338, i32 -2144933265, i32 -2144933197, i32 -2144936344, i32 -2144936291, i32 -2144936260, i32 -2144936229, i32 -2144936208, i32 -2144936186, i32 -2144936137, i32 -2144936116, i32 -2144933142, i32 -2144933053, i32 -2144932932, i32 -2144932833, i32 -2144932727, i32 -2144932625, i32 -2144932592, i32 -2144932509, i32 -2144932420, i32 -2144932299, i32 -2144932199, i32 -2144932173, i32 -2144932070, i32 -2144932044, i32 -2144935858, i32 -2144935791, i32 -2144935766, i32 -2144935702, i32 -2144935586, i32 -2144935561, i32 -2144935536}
!9415 = !DILocation(line: 2416, column: 15, scope: !9340)
!9416 = !DILocation(line: 2416, column: 36, scope: !9340)
!9417 = !DILocation(line: 2416, column: 11, scope: !9340)
!9418 = !DILocation(line: 2416, column: 3, scope: !9340)
!9419 = !DILocation(line: 0, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 2391, column: 14)
!9421 = !DILocation(line: 2417, column: 1, scope: !9340)
!9422 = distinct !DISubprogram(name: "sendmsg", scope: !3, file: !3, line: 979, type: !9423, isLocal: false, isDefinition: true, scopeLine: 980, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9427)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{!80, !80, !9425, !80}
!9425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9426, size: 64)
!9426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1746)
!9427 = !{!9428, !9429, !9430, !9431, !9432, !9433, !9439, !9440, !9449}
!9428 = !DILocalVariable(name: "s", arg: 1, scope: !9422, file: !3, line: 979, type: !80)
!9429 = !DILocalVariable(name: "message", arg: 2, scope: !9422, file: !3, line: 979, type: !9425)
!9430 = !DILocalVariable(name: "flags", arg: 3, scope: !9422, file: !3, line: 979, type: !80)
!9431 = !DILocalVariable(name: "ret", scope: !9422, file: !3, line: 981, type: !80)
!9432 = !DILocalVariable(name: "file", scope: !9422, file: !3, line: 982, type: !1077)
!9433 = !DILocalVariable(name: "tid", scope: !9434, file: !3, line: 984, type: !170)
!9434 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 984, column: 2)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 984, column: 2)
!9436 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 984, column: 2)
!9437 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 984, column: 2)
!9438 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 984, column: 2)
!9439 = !DILocalVariable(name: "_ret", scope: !9434, file: !3, line: 984, type: !135)
!9440 = !DILocalVariable(name: "tid", scope: !9441, file: !3, line: 989, type: !170)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 989, column: 3)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 989, column: 3)
!9443 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 989, column: 3)
!9444 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 989, column: 3)
!9445 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 989, column: 3)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 989, column: 3)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 985, column: 22)
!9448 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 985, column: 6)
!9449 = !DILocalVariable(name: "tid", scope: !9450, file: !3, line: 993, type: !170)
!9450 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 993, column: 2)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 993, column: 2)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 993, column: 2)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 993, column: 2)
!9454 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 993, column: 2)
!9455 = !DILocation(line: 979, column: 17, scope: !9422)
!9456 = !DILocation(line: 979, column: 41, scope: !9422)
!9457 = !DILocation(line: 979, column: 54, scope: !9422)
!9458 = !DILocation(line: 981, column: 6, scope: !9422)
!9459 = !DILocation(line: 982, column: 2, scope: !9422)
!9460 = !DILocation(line: 982, column: 24, scope: !9422)
!9461 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9462)
!9462 = distinct !DILocation(line: 984, column: 2, scope: !9437)
!9463 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9462)
!9464 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9462)
!9465 = !DILocation(line: 984, column: 2, scope: !9437)
!9466 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9467)
!9467 = distinct !DILocation(line: 984, column: 2, scope: !9437)
!9468 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9467)
!9469 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9467)
!9470 = !DILocation(line: 984, column: 2, scope: !9438)
!9471 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !9472)
!9472 = distinct !DILocation(line: 984, column: 2, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 984, column: 2)
!9474 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !9472)
!9475 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !9472)
!9476 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !9472)
!9477 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !9472)
!9478 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !9472)
!9479 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !9472)
!9480 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !9472)
!9481 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !9472)
!9482 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !9472)
!9483 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !9472)
!9484 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !9472)
!9485 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !9472)
!9486 = !DILocation(line: 0, scope: !2856, inlinedAt: !9472)
!9487 = !DILocation(line: 0, scope: !9473)
!9488 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !9472)
!9489 = !DILocation(line: 984, column: 2, scope: !9473)
!9490 = !DILocation(line: 985, column: 6, scope: !9448)
!9491 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9492)
!9492 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9493)
!9493 = distinct !DILocation(line: 984, column: 2, scope: !9434)
!9494 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9492)
!9495 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9492)
!9496 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9493)
!9497 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9493)
!9498 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9493)
!9499 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9493)
!9500 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9493)
!9501 = !DILocation(line: 984, column: 2, scope: !9434)
!9502 = !{i32 -2145279468, i32 -2145279455, i32 -2145279430, i32 -2145279406, i32 -2145279381, i32 -2145279306, i32 -2145279281, i32 -2145279137, i32 -2145276005, i32 -2145275916, i32 -2145275795, i32 -2145275700, i32 -2145275599, i32 -2145275572, i32 -2145275489, i32 -2145275400, i32 -2145275279, i32 -2145275179, i32 -2145275073, i32 -2145274965, i32 -2145278849, i32 -2145278796, i32 -2145278765, i32 -2145278734, i32 -2145278713, i32 -2145278691, i32 -2145278642, i32 -2145278621, i32 -2145274882, i32 -2145274793, i32 -2145274672, i32 -2145274573, i32 -2145274467, i32 -2145274365, i32 -2145274332, i32 -2145274259, i32 -2145274191, i32 -2145278317, i32 -2145278258, i32 -2145278205, i32 -2145278174, i32 -2145278143, i32 -2145278122, i32 -2145278100, i32 -2145278051, i32 -2145278030, i32 -2145274138, i32 -2145274049, i32 -2145273928, i32 -2145273829, i32 -2145273723, i32 -2145273621, i32 -2145273588, i32 -2145273505, i32 -2145273416, i32 -2145273295, i32 -2145273195, i32 -2145273169, i32 -2145273066, i32 -2145273040, i32 -2145277772, i32 -2145277705, i32 -2145277680, i32 -2145277616, i32 -2145277534, i32 -2145277511, i32 -2145277486, i32 -2145277461}
!9503 = !DILocation(line: 984, column: 2, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 984, column: 2)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 984, column: 2)
!9506 = distinct !DILexicalBlock(scope: !9434, file: !3, line: 984, column: 2)
!9507 = !{i32 -2145276273, i32 -2145276257}
!9508 = !DILocation(line: 985, column: 6, scope: !9422)
!9509 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9510)
!9510 = distinct !DILocation(line: 989, column: 3, scope: !9444)
!9511 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9510)
!9512 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9510)
!9513 = !DILocation(line: 989, column: 3, scope: !9444)
!9514 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9515)
!9515 = distinct !DILocation(line: 989, column: 3, scope: !9444)
!9516 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9515)
!9517 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9515)
!9518 = !DILocation(line: 989, column: 3, scope: !9445)
!9519 = !DILocation(line: 989, column: 3, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 989, column: 3)
!9521 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !9522)
!9522 = distinct !DILocation(line: 989, column: 3, scope: !9520)
!9523 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !9522)
!9524 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9522)
!9525 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9522)
!9526 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9522)
!9527 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9528)
!9528 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9529)
!9529 = distinct !DILocation(line: 989, column: 3, scope: !9441)
!9530 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9528)
!9531 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9528)
!9532 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9529)
!9533 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9529)
!9534 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9529)
!9535 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9529)
!9536 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9529)
!9537 = !DILocation(line: 989, column: 3, scope: !9441)
!9538 = !{i32 -2145270785, i32 -2145270772, i32 -2145270747, i32 -2145270723, i32 -2145270698, i32 -2145270623, i32 -2145270598, i32 -2145270454, i32 -2145268213, i32 -2145268124, i32 -2145268003, i32 -2145267908, i32 -2145267807, i32 -2145267780, i32 -2145267697, i32 -2145267608, i32 -2145267487, i32 -2145267387, i32 -2145267281, i32 -2145267173, i32 -2145270166, i32 -2145270113, i32 -2145270082, i32 -2145270051, i32 -2145270030, i32 -2145270008, i32 -2145269959, i32 -2145269938, i32 -2145267090, i32 -2145267001, i32 -2145266880, i32 -2145266781, i32 -2145266675, i32 -2145266573, i32 -2145266540, i32 -2145266467, i32 -2145266399, i32 -2145269564, i32 -2145269511, i32 -2145269480, i32 -2145269449, i32 -2145269428, i32 -2145269406, i32 -2145269357, i32 -2145269336, i32 -2145266344, i32 -2145266255, i32 -2145266134, i32 -2145266035, i32 -2145265929, i32 -2145265827, i32 -2145265794, i32 -2145265711, i32 -2145265622, i32 -2145265501, i32 -2145265401, i32 -2145265375, i32 -2145265272, i32 -2145265246, i32 -2145269078, i32 -2145269011, i32 -2145268986, i32 -2145268922, i32 -2145268806, i32 -2145268781, i32 -2145268756}
!9539 = !DILocation(line: 992, column: 27, scope: !9422)
!9540 = !DILocation(line: 992, column: 8, scope: !9422)
!9541 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9542)
!9542 = distinct !DILocation(line: 993, column: 2, scope: !9453)
!9543 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9542)
!9544 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9542)
!9545 = !DILocation(line: 993, column: 2, scope: !9453)
!9546 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9547)
!9547 = distinct !DILocation(line: 993, column: 2, scope: !9453)
!9548 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9547)
!9549 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9547)
!9550 = !DILocation(line: 993, column: 2, scope: !9454)
!9551 = !DILocation(line: 993, column: 2, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 993, column: 2)
!9553 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9554)
!9554 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9555)
!9555 = distinct !DILocation(line: 993, column: 2, scope: !9450)
!9556 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9554)
!9557 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9554)
!9558 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9555)
!9559 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9555)
!9560 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9555)
!9561 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9555)
!9562 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9555)
!9563 = !DILocation(line: 993, column: 2, scope: !9450)
!9564 = !{i32 -2145263282, i32 -2145263269, i32 -2145263244, i32 -2145263220, i32 -2145263195, i32 -2145263120, i32 -2145263095, i32 -2145262951, i32 -2145260724, i32 -2145260635, i32 -2145260514, i32 -2145260419, i32 -2145260318, i32 -2145260291, i32 -2145260208, i32 -2145260119, i32 -2145259998, i32 -2145259898, i32 -2145259792, i32 -2145259684, i32 -2145262663, i32 -2145262610, i32 -2145262579, i32 -2145262548, i32 -2145262527, i32 -2145262505, i32 -2145262456, i32 -2145262435, i32 -2145259601, i32 -2145259512, i32 -2145259391, i32 -2145259292, i32 -2145259186, i32 -2145259084, i32 -2145259051, i32 -2145258978, i32 -2145258910, i32 -2145262061, i32 -2145262008, i32 -2145261977, i32 -2145261946, i32 -2145261925, i32 -2145261903, i32 -2145261854, i32 -2145261833, i32 -2145258858, i32 -2145258769, i32 -2145258648, i32 -2145258549, i32 -2145258443, i32 -2145258341, i32 -2145258308, i32 -2145258225, i32 -2145258136, i32 -2145258015, i32 -2145257915, i32 -2145257889, i32 -2145257786, i32 -2145257760, i32 -2145261575, i32 -2145261508, i32 -2145261483, i32 -2145261419, i32 -2145261303, i32 -2145261278, i32 -2145261253}
!9565 = !DILocation(line: 0, scope: !9422)
!9566 = !DILocation(line: 996, column: 1, scope: !9422)
!9567 = !DILocation(line: 995, column: 2, scope: !9422)
!9568 = distinct !DISubprogram(name: "lwip_sendmsg", scope: !3, file: !3, line: 2420, type: !9569, isLocal: false, isDefinition: true, scopeLine: 2421, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9571)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{!206, !80, !9425, !80}
!9571 = !{!9572, !9573, !9574, !9575, !9576, !9577, !9578, !9579, !9584, !9590, !9595, !9601, !9606, !9612, !9617, !9623, !9627, !9633, !9635, !9636, !9637, !9642, !9648, !9651, !9655, !9657, !9663, !9665}
!9572 = !DILocalVariable(name: "s", arg: 1, scope: !9568, file: !3, line: 2420, type: !80)
!9573 = !DILocalVariable(name: "msg", arg: 2, scope: !9568, file: !3, line: 2420, type: !9425)
!9574 = !DILocalVariable(name: "flags", arg: 3, scope: !9568, file: !3, line: 2420, type: !80)
!9575 = !DILocalVariable(name: "sock", scope: !9568, file: !3, line: 2422, type: !1165)
!9576 = !DILocalVariable(name: "write_flags", scope: !9568, file: !3, line: 2424, type: !156)
!9577 = !DILocalVariable(name: "written", scope: !9568, file: !3, line: 2425, type: !216)
!9578 = !DILocalVariable(name: "err", scope: !9568, file: !3, line: 2427, type: !1283)
!9579 = !DILocalVariable(name: "sockerr", scope: !9580, file: !3, line: 2434, type: !1007)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 2434, column: 3)
!9581 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 2434, column: 3)
!9582 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 2434, column: 3)
!9583 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2434, column: 3)
!9584 = !DILocalVariable(name: "tid", scope: !9585, file: !3, line: 2434, type: !170)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2434, column: 3)
!9586 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 2434, column: 3)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 2434, column: 3)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 2434, column: 3)
!9589 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 2434, column: 3)
!9590 = !DILocalVariable(name: "sockerr", scope: !9591, file: !3, line: 2436, type: !1007)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 2436, column: 3)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2436, column: 3)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 2436, column: 3)
!9594 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2436, column: 3)
!9595 = !DILocalVariable(name: "tid", scope: !9596, file: !3, line: 2436, type: !170)
!9596 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 2436, column: 3)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 2436, column: 3)
!9598 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 2436, column: 3)
!9599 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 2436, column: 3)
!9600 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 2436, column: 3)
!9601 = !DILocalVariable(name: "sockerr", scope: !9602, file: !3, line: 2438, type: !1007)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 2438, column: 3)
!9603 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 2438, column: 3)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2438, column: 3)
!9605 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2438, column: 3)
!9606 = !DILocalVariable(name: "tid", scope: !9607, file: !3, line: 2438, type: !170)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 2438, column: 3)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 2438, column: 3)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 2438, column: 3)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 2438, column: 3)
!9611 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 2438, column: 3)
!9612 = !DILocalVariable(name: "sockerr", scope: !9613, file: !3, line: 2440, type: !1007)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2440, column: 3)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 2440, column: 3)
!9615 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2440, column: 3)
!9616 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2440, column: 3)
!9617 = !DILocalVariable(name: "tid", scope: !9618, file: !3, line: 2440, type: !170)
!9618 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 2440, column: 3)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 2440, column: 3)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 2440, column: 3)
!9621 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 2440, column: 3)
!9622 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2440, column: 3)
!9623 = !DILocalVariable(name: "sockerr", scope: !9624, file: !3, line: 2455, type: !1007)
!9624 = distinct !DILexicalBlock(scope: !9625, file: !3, line: 2455, column: 5)
!9625 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 2447, column: 67)
!9626 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2447, column: 7)
!9627 = !DILocalVariable(name: "tid", scope: !9628, file: !3, line: 2455, type: !170)
!9628 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 2455, column: 5)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 2455, column: 5)
!9630 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 2455, column: 5)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !3, line: 2455, column: 5)
!9632 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 2455, column: 5)
!9633 = !DILocalVariable(name: "chain_buf", scope: !9634, file: !3, line: 2468, type: !1371)
!9634 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2467, column: 3)
!9635 = !DILocalVariable(name: "i", scope: !9634, file: !3, line: 2469, type: !80)
!9636 = !DILocalVariable(name: "size", scope: !9634, file: !3, line: 2470, type: !206)
!9637 = !DILocalVariable(name: "sockerr", scope: !9638, file: !3, line: 2473, type: !1007)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2473, column: 5)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 2473, column: 5)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 2473, column: 5)
!9641 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2473, column: 5)
!9642 = !DILocalVariable(name: "tid", scope: !9643, file: !3, line: 2473, type: !170)
!9643 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 2473, column: 5)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !3, line: 2473, column: 5)
!9645 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 2473, column: 5)
!9646 = distinct !DILexicalBlock(scope: !9647, file: !3, line: 2473, column: 5)
!9647 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 2473, column: 5)
!9648 = !DILocalVariable(name: "remote_port", scope: !9649, file: !3, line: 2480, type: !164)
!9649 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 2479, column: 24)
!9650 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2479, column: 9)
!9651 = !DILocalVariable(name: "p", scope: !9652, file: !3, line: 2519, type: !1252)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 2518, column: 43)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 2518, column: 5)
!9654 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2518, column: 5)
!9655 = !DILocalVariable(name: "sockerr", scope: !9656, file: !3, line: 2566, type: !1007)
!9656 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2566, column: 5)
!9657 = !DILocalVariable(name: "tid", scope: !9658, file: !3, line: 2566, type: !170)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 2566, column: 5)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2566, column: 5)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 2566, column: 5)
!9661 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 2566, column: 5)
!9662 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 2566, column: 5)
!9663 = !DILocalVariable(name: "sockerr", scope: !9664, file: !3, line: 2570, type: !1007)
!9664 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2570, column: 5)
!9665 = !DILocalVariable(name: "tid", scope: !9666, file: !3, line: 2570, type: !170)
!9666 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 2570, column: 5)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 2570, column: 5)
!9668 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 2570, column: 5)
!9669 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 2570, column: 5)
!9670 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 2570, column: 5)
!9671 = !DILocation(line: 2420, column: 18, scope: !9568)
!9672 = !DILocation(line: 2420, column: 42, scope: !9568)
!9673 = !DILocation(line: 2420, column: 51, scope: !9568)
!9674 = !DILocation(line: 2425, column: 3, scope: !9568)
!9675 = !DILocation(line: 2427, column: 9, scope: !9568)
!9676 = !DILocation(line: 2429, column: 10, scope: !9568)
!9677 = !DILocation(line: 2422, column: 21, scope: !9568)
!9678 = !DILocation(line: 2430, column: 8, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2430, column: 7)
!9680 = !DILocation(line: 2430, column: 7, scope: !9568)
!9681 = !DILocation(line: 2434, column: 3, scope: !9582)
!9682 = !DILocation(line: 2434, column: 3, scope: !9583)
!9683 = !DILocation(line: 2434, column: 3, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 2434, column: 3)
!9685 = !DILocation(line: 2434, column: 3, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9687, file: !3, line: 2434, column: 3)
!9687 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2434, column: 3)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 2434, column: 3)
!9689 = !DILocation(line: 2436, column: 3, scope: !9593)
!9690 = !DILocation(line: 2436, column: 3, scope: !9594)
!9691 = !DILocation(line: 2436, column: 3, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 2436, column: 3)
!9693 = !DILocation(line: 2436, column: 3, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2436, column: 3)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 2436, column: 3)
!9696 = distinct !DILexicalBlock(scope: !9692, file: !3, line: 2436, column: 3)
!9697 = !DILocation(line: 2438, column: 3, scope: !9604)
!9698 = !DILocation(line: 2438, column: 3, scope: !9605)
!9699 = !DILocation(line: 2438, column: 3, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 2438, column: 3)
!9701 = !DILocation(line: 2438, column: 3, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2438, column: 3)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2438, column: 3)
!9704 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 2438, column: 3)
!9705 = !DILocation(line: 2440, column: 3, scope: !9615)
!9706 = !DILocation(line: 2440, column: 3, scope: !9616)
!9707 = !DILocation(line: 2440, column: 3, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2440, column: 3)
!9709 = !DILocation(line: 2440, column: 3, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 2440, column: 3)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 2440, column: 3)
!9712 = distinct !DILexicalBlock(scope: !9708, file: !3, line: 2440, column: 3)
!9713 = !DILocation(line: 2447, column: 7, scope: !9626)
!9714 = !DILocation(line: 2447, column: 51, scope: !9626)
!9715 = !DILocation(line: 2447, column: 7, scope: !9568)
!9716 = !DILocation(line: 2450, column: 27, scope: !9625)
!9717 = !DILocation(line: 2451, column: 27, scope: !9625)
!9718 = !DILocation(line: 2450, column: 75, scope: !9625)
!9719 = !DILocation(line: 2449, column: 19, scope: !9625)
!9720 = !DILocation(line: 2424, column: 8, scope: !9568)
!9721 = !DILocation(line: 2425, column: 10, scope: !9568)
!9722 = !DILocation(line: 2453, column: 13, scope: !9625)
!9723 = !DILocation(line: 2454, column: 86, scope: !9625)
!9724 = !DILocation(line: 2454, column: 11, scope: !9625)
!9725 = !DILocation(line: 2455, column: 5, scope: !9624)
!9726 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9727)
!9727 = distinct !DILocation(line: 2455, column: 5, scope: !9631)
!9728 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9727)
!9729 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9727)
!9730 = !DILocation(line: 2455, column: 5, scope: !9631)
!9731 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9732)
!9732 = distinct !DILocation(line: 2455, column: 5, scope: !9631)
!9733 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9732)
!9734 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9732)
!9735 = !DILocation(line: 2455, column: 5, scope: !9632)
!9736 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9737)
!9737 = distinct !DILocation(line: 2455, column: 5, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 2455, column: 5)
!9739 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9737)
!9740 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9737)
!9741 = !DILocation(line: 2455, column: 5, scope: !9738)
!9742 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9743)
!9743 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9744)
!9744 = distinct !DILocation(line: 2455, column: 5, scope: !9628)
!9745 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9743)
!9746 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9743)
!9747 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9744)
!9748 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9744)
!9749 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9744)
!9750 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9744)
!9751 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9744)
!9752 = !DILocation(line: 2455, column: 5, scope: !9628)
!9753 = !{i32 -2144886194, i32 -2144886181, i32 -2144886156, i32 -2144886132, i32 -2144886107, i32 -2144886032, i32 -2144886007, i32 -2144885863, i32 -2144883640, i32 -2144883551, i32 -2144883430, i32 -2144883335, i32 -2144883234, i32 -2144883207, i32 -2144883124, i32 -2144883035, i32 -2144882914, i32 -2144882814, i32 -2144882708, i32 -2144882600, i32 -2144885575, i32 -2144885522, i32 -2144885491, i32 -2144885460, i32 -2144885439, i32 -2144885417, i32 -2144885368, i32 -2144885347, i32 -2144882517, i32 -2144882428, i32 -2144882307, i32 -2144882208, i32 -2144882102, i32 -2144882000, i32 -2144881967, i32 -2144881894, i32 -2144881826, i32 -2144884973, i32 -2144884920, i32 -2144884889, i32 -2144884858, i32 -2144884837, i32 -2144884815, i32 -2144884766, i32 -2144884745, i32 -2144881771, i32 -2144881682, i32 -2144881561, i32 -2144881462, i32 -2144881356, i32 -2144881254, i32 -2144881221, i32 -2144881138, i32 -2144881049, i32 -2144880928, i32 -2144880828, i32 -2144880802, i32 -2144880699, i32 -2144880673, i32 -2144884487, i32 -2144884420, i32 -2144884395, i32 -2144884331, i32 -2144884215, i32 -2144884190, i32 -2144884165}
!9754 = !DILocation(line: 2458, column: 17, scope: !9625)
!9755 = !DILocation(line: 2458, column: 38, scope: !9625)
!9756 = !DILocation(line: 2458, column: 13, scope: !9625)
!9757 = !DILocation(line: 2458, column: 5, scope: !9625)
!9758 = !DILocation(line: 2468, column: 5, scope: !9634)
!9759 = !DILocation(line: 2470, column: 13, scope: !9634)
!9760 = !DILocation(line: 2473, column: 5, scope: !9640)
!9761 = !DILocation(line: 2473, column: 5, scope: !9641)
!9762 = !DILocation(line: 2473, column: 5, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2473, column: 5)
!9764 = !DILocation(line: 2473, column: 5, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 2473, column: 5)
!9766 = distinct !DILexicalBlock(scope: !9767, file: !3, line: 2473, column: 5)
!9767 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 2473, column: 5)
!9768 = !DILocation(line: 2478, column: 5, scope: !9634)
!9769 = !DILocation(line: 2479, column: 14, scope: !9650)
!9770 = !DILocation(line: 2479, column: 9, scope: !9650)
!9771 = !DILocation(line: 2479, column: 9, scope: !9634)
!9772 = !DILocation(line: 2481, column: 7, scope: !9649)
!9773 = !DILocation(line: 1304, column: 48, scope: !3705, inlinedAt: !9774)
!9774 = distinct !DILocation(line: 2481, column: 7, scope: !9649)
!9775 = !DILocation(line: 1304, column: 69, scope: !3705, inlinedAt: !9774)
!9776 = !DILocation(line: 1306, column: 18, scope: !3717, inlinedAt: !9774)
!9777 = !DILocation(line: 1306, column: 29, scope: !3717, inlinedAt: !9774)
!9778 = !DILocation(line: 1306, column: 7, scope: !3705, inlinedAt: !9774)
!9779 = !DILocation(line: 1307, column: 5, scope: !3720, inlinedAt: !9774)
!9780 = !DILocation(line: 1307, column: 5, scope: !3724, inlinedAt: !9774)
!9781 = !DILocation(line: 1307, column: 5, scope: !3721, inlinedAt: !9774)
!9782 = !DILocation(line: 1307, column: 5, scope: !3727, inlinedAt: !9774)
!9783 = !DILocation(line: 1310, column: 5, scope: !3729, inlinedAt: !9774)
!9784 = !DILocation(line: 0, scope: !9649)
!9785 = !DILocation(line: 1313, column: 1, scope: !3705, inlinedAt: !9774)
!9786 = !DILocation(line: 2480, column: 13, scope: !9649)
!9787 = !DILocation(line: 2482, column: 7, scope: !9649)
!9788 = !DILocation(line: 2482, column: 35, scope: !9649)
!9789 = !{!9790, !1565, i64 40}
!9790 = !{!"netbuf", !1408, i64 0, !1408, i64 8, !1627, i64 16, !1565, i64 40}
!9791 = !DILocation(line: 2483, column: 5, scope: !9649)
!9792 = !DILocation(line: 2469, column: 9, scope: !9634)
!9793 = !DILocation(line: 2518, column: 10, scope: !9654)
!9794 = !DILocation(line: 2518, column: 26, scope: !9653)
!9795 = !DILocation(line: 2518, column: 19, scope: !9653)
!9796 = !DILocation(line: 2518, column: 5, scope: !9654)
!9797 = !DILocation(line: 2520, column: 16, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 2520, column: 11)
!9799 = !DILocation(line: 2520, column: 27, scope: !9798)
!9800 = !DILocation(line: 2520, column: 35, scope: !9798)
!9801 = !DILocation(line: 2520, column: 11, scope: !9652)
!9802 = !DILocation(line: 2524, column: 11, scope: !9652)
!9803 = !DILocation(line: 2519, column: 20, scope: !9652)
!9804 = !DILocation(line: 2525, column: 13, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 2525, column: 11)
!9806 = !DILocation(line: 2525, column: 11, scope: !9652)
!9807 = !DILocation(line: 2529, column: 25, scope: !9652)
!9808 = !DILocation(line: 2529, column: 36, scope: !9652)
!9809 = !DILocation(line: 2529, column: 10, scope: !9652)
!9810 = !DILocation(line: 2529, column: 18, scope: !9652)
!9811 = !{!9812, !1408, i64 8}
!9812 = !{!"pbuf", !1408, i64 0, !1408, i64 8, !1565, i64 16, !1565, i64 18, !1405, i64 20, !1405, i64 21, !1405, i64 22, !1405, i64 23}
!9813 = !DILocation(line: 2530, column: 52, scope: !9652)
!9814 = !DILocation(line: 2530, column: 29, scope: !9652)
!9815 = !DILocation(line: 2530, column: 19, scope: !9652)
!9816 = !DILocation(line: 2530, column: 27, scope: !9652)
!9817 = !{!9812, !1565, i64 16}
!9818 = !DILocation(line: 2530, column: 10, scope: !9652)
!9819 = !DILocation(line: 2530, column: 14, scope: !9652)
!9820 = !{!9812, !1565, i64 18}
!9821 = !DILocation(line: 2532, column: 21, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 2532, column: 11)
!9823 = !{!9790, !1408, i64 0}
!9824 = !DILocation(line: 2532, column: 23, scope: !9822)
!9825 = !DILocation(line: 2532, column: 11, scope: !9652)
!9826 = !DILocation(line: 2533, column: 37, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 2532, column: 32)
!9828 = !{!9790, !1408, i64 8}
!9829 = !DILocation(line: 2533, column: 21, scope: !9827)
!9830 = !DILocation(line: 2535, column: 7, scope: !9827)
!9831 = !DILocation(line: 2536, column: 26, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 2536, column: 13)
!9833 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 2535, column: 14)
!9834 = !DILocation(line: 2536, column: 13, scope: !9832)
!9835 = !DILocation(line: 2536, column: 36, scope: !9832)
!9836 = !DILocation(line: 2536, column: 34, scope: !9832)
!9837 = !DILocation(line: 2536, column: 43, scope: !9832)
!9838 = !DILocation(line: 2536, column: 13, scope: !9833)
!9839 = !DILocation(line: 2538, column: 11, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 2536, column: 53)
!9841 = !DILocation(line: 2539, column: 11, scope: !9840)
!9842 = !DILocation(line: 2541, column: 9, scope: !9833)
!9843 = !DILocation(line: 2543, column: 5, scope: !9653)
!9844 = !DILocation(line: 2518, column: 39, scope: !9653)
!9845 = !DILocation(line: 2518, column: 5, scope: !9653)
!9846 = distinct !{!9846, !9796, !9847}
!9847 = !DILocation(line: 2543, column: 5, scope: !9654)
!9848 = !DILocation(line: 2527, column: 9, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 2525, column: 22)
!9850 = !DILocation(line: 2545, column: 9, scope: !9634)
!9851 = !DILocation(line: 2550, column: 9, scope: !9634)
!9852 = !DILocation(line: 2546, column: 14, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 2545, column: 24)
!9854 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2545, column: 9)
!9855 = !DILocation(line: 2547, column: 5, scope: !9853)
!9856 = !DILocation(line: 2553, column: 11, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 2553, column: 11)
!9858 = distinct !DILexicalBlock(scope: !9859, file: !3, line: 2550, column: 24)
!9859 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2550, column: 9)
!9860 = !{!9790, !1405, i64 36}
!9861 = !DILocation(line: 2553, column: 40, scope: !9857)
!9862 = !DILocation(line: 2553, column: 43, scope: !9857)
!9863 = !DILocation(line: 2553, column: 11, scope: !9858)
!9864 = !DILocation(line: 2554, column: 9, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 2553, column: 97)
!9866 = !DILocation(line: 2555, column: 9, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2555, column: 9)
!9868 = !DILocation(line: 2556, column: 7, scope: !9865)
!9869 = !DILocation(line: 2560, column: 32, scope: !9858)
!9870 = !DILocation(line: 2468, column: 19, scope: !9634)
!9871 = !DILocation(line: 2560, column: 13, scope: !9858)
!9872 = !DILocation(line: 2561, column: 5, scope: !9858)
!9873 = !DILocation(line: 0, scope: !9568)
!9874 = !DILocation(line: 0, scope: !9858)
!9875 = !DILocation(line: 2564, column: 5, scope: !9634)
!9876 = !DILocation(line: 2566, column: 5, scope: !9656)
!9877 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9878)
!9878 = distinct !DILocation(line: 2566, column: 5, scope: !9661)
!9879 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9878)
!9880 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9878)
!9881 = !DILocation(line: 2566, column: 5, scope: !9661)
!9882 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9883)
!9883 = distinct !DILocation(line: 2566, column: 5, scope: !9661)
!9884 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9883)
!9885 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9883)
!9886 = !DILocation(line: 2566, column: 5, scope: !9662)
!9887 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9888)
!9888 = distinct !DILocation(line: 2566, column: 5, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 2566, column: 5)
!9890 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9888)
!9891 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9888)
!9892 = !DILocation(line: 2566, column: 5, scope: !9889)
!9893 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9894)
!9894 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9895)
!9895 = distinct !DILocation(line: 2566, column: 5, scope: !9658)
!9896 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9894)
!9897 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9894)
!9898 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9895)
!9899 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9895)
!9900 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9895)
!9901 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9895)
!9902 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9895)
!9903 = !DILocation(line: 2566, column: 5, scope: !9658)
!9904 = !{i32 -2144866215, i32 -2144866202, i32 -2144866177, i32 -2144866153, i32 -2144866128, i32 -2144866053, i32 -2144866028, i32 -2144865884, i32 -2144863661, i32 -2144863572, i32 -2144863451, i32 -2144863356, i32 -2144863255, i32 -2144863228, i32 -2144863145, i32 -2144863056, i32 -2144862935, i32 -2144862835, i32 -2144862729, i32 -2144862621, i32 -2144865596, i32 -2144865543, i32 -2144865512, i32 -2144865481, i32 -2144865460, i32 -2144865438, i32 -2144865389, i32 -2144865368, i32 -2144862538, i32 -2144862449, i32 -2144862328, i32 -2144862229, i32 -2144862123, i32 -2144862021, i32 -2144861988, i32 -2144861915, i32 -2144861847, i32 -2144864994, i32 -2144864941, i32 -2144864910, i32 -2144864879, i32 -2144864858, i32 -2144864836, i32 -2144864787, i32 -2144864766, i32 -2144861792, i32 -2144861703, i32 -2144861582, i32 -2144861483, i32 -2144861377, i32 -2144861275, i32 -2144861242, i32 -2144861159, i32 -2144861070, i32 -2144860949, i32 -2144860849, i32 -2144860823, i32 -2144860720, i32 -2144860694, i32 -2144864508, i32 -2144864441, i32 -2144864416, i32 -2144864352, i32 -2144864236, i32 -2144864211, i32 -2144864186}
!9905 = !DILocation(line: 2568, column: 17, scope: !9634)
!9906 = !DILocation(line: 2568, column: 13, scope: !9634)
!9907 = !DILocation(line: 2568, column: 5, scope: !9634)
!9908 = !DILocation(line: 0, scope: !9840)
!9909 = !DILocation(line: 2570, column: 5, scope: !9664)
!9910 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9911)
!9911 = distinct !DILocation(line: 2570, column: 5, scope: !9669)
!9912 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9911)
!9913 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9911)
!9914 = !DILocation(line: 2570, column: 5, scope: !9669)
!9915 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9916)
!9916 = distinct !DILocation(line: 2570, column: 5, scope: !9669)
!9917 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9916)
!9918 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9916)
!9919 = !DILocation(line: 2570, column: 5, scope: !9670)
!9920 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !9921)
!9921 = distinct !DILocation(line: 2570, column: 5, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 2570, column: 5)
!9923 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !9921)
!9924 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !9921)
!9925 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !9921)
!9926 = !DILocation(line: 2570, column: 5, scope: !9922)
!9927 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9928)
!9928 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !9929)
!9929 = distinct !DILocation(line: 2570, column: 5, scope: !9666)
!9930 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9928)
!9931 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9928)
!9932 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !9929)
!9933 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !9929)
!9934 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !9929)
!9935 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !9929)
!9936 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !9929)
!9937 = !DILocation(line: 2570, column: 5, scope: !9666)
!9938 = !{i32 -2144858652, i32 -2144858639, i32 -2144858614, i32 -2144858590, i32 -2144858565, i32 -2144858490, i32 -2144858465, i32 -2144858321, i32 -2144856098, i32 -2144856009, i32 -2144855888, i32 -2144855793, i32 -2144855692, i32 -2144855665, i32 -2144855582, i32 -2144855493, i32 -2144855372, i32 -2144855272, i32 -2144855166, i32 -2144855058, i32 -2144858033, i32 -2144857980, i32 -2144857949, i32 -2144857918, i32 -2144857897, i32 -2144857875, i32 -2144857826, i32 -2144857805, i32 -2144854975, i32 -2144854886, i32 -2144854765, i32 -2144854666, i32 -2144854560, i32 -2144854458, i32 -2144854425, i32 -2144854352, i32 -2144854284, i32 -2144857431, i32 -2144857378, i32 -2144857347, i32 -2144857316, i32 -2144857295, i32 -2144857273, i32 -2144857224, i32 -2144857203, i32 -2144854229, i32 -2144854140, i32 -2144854019, i32 -2144853920, i32 -2144853814, i32 -2144853712, i32 -2144853679, i32 -2144853596, i32 -2144853507, i32 -2144853386, i32 -2144853286, i32 -2144853260, i32 -2144853157, i32 -2144853131, i32 -2144856945, i32 -2144856878, i32 -2144856853, i32 -2144856789, i32 -2144856673, i32 -2144856648, i32 -2144856623}
!9939 = !DILocation(line: 2571, column: 5, scope: !9634)
!9940 = !DILocation(line: 2573, column: 5, scope: !9634)
!9941 = !DILocation(line: 0, scope: !9634)
!9942 = !DILocation(line: 2574, column: 3, scope: !9568)
!9943 = !DILocation(line: 2580, column: 1, scope: !9568)
!9944 = distinct !DISubprogram(name: "sendto", scope: !3, file: !3, line: 998, type: !9945, isLocal: false, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9947)
!9945 = !DISubroutineType(types: !9946)
!9946 = !{!80, !80, !225, !216, !80, !228, !1750}
!9947 = !{!9948, !9949, !9950, !9951, !9952, !9953, !9954, !9955, !9956, !9962, !9963, !9972}
!9948 = !DILocalVariable(name: "s", arg: 1, scope: !9944, file: !3, line: 998, type: !80)
!9949 = !DILocalVariable(name: "dataptr", arg: 2, scope: !9944, file: !3, line: 998, type: !225)
!9950 = !DILocalVariable(name: "size", arg: 3, scope: !9944, file: !3, line: 998, type: !216)
!9951 = !DILocalVariable(name: "flags", arg: 4, scope: !9944, file: !3, line: 998, type: !80)
!9952 = !DILocalVariable(name: "to", arg: 5, scope: !9944, file: !3, line: 999, type: !228)
!9953 = !DILocalVariable(name: "tolen", arg: 6, scope: !9944, file: !3, line: 999, type: !1750)
!9954 = !DILocalVariable(name: "ret", scope: !9944, file: !3, line: 1001, type: !80)
!9955 = !DILocalVariable(name: "file", scope: !9944, file: !3, line: 1002, type: !1077)
!9956 = !DILocalVariable(name: "tid", scope: !9957, file: !3, line: 1004, type: !170)
!9957 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 1004, column: 2)
!9958 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1004, column: 2)
!9959 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 1004, column: 2)
!9960 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1004, column: 2)
!9961 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 1004, column: 2)
!9962 = !DILocalVariable(name: "_ret", scope: !9957, file: !3, line: 1004, type: !135)
!9963 = !DILocalVariable(name: "tid", scope: !9964, file: !3, line: 1009, type: !170)
!9964 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1009, column: 3)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1009, column: 3)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 1009, column: 3)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1009, column: 3)
!9968 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1009, column: 3)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1009, column: 3)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 1005, column: 22)
!9971 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 1005, column: 6)
!9972 = !DILocalVariable(name: "tid", scope: !9973, file: !3, line: 1013, type: !170)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 1013, column: 2)
!9974 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 1013, column: 2)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1013, column: 2)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1013, column: 2)
!9977 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 1013, column: 2)
!9978 = !DILocation(line: 998, column: 16, scope: !9944)
!9979 = !DILocation(line: 998, column: 31, scope: !9944)
!9980 = !DILocation(line: 998, column: 47, scope: !9944)
!9981 = !DILocation(line: 998, column: 57, scope: !9944)
!9982 = !DILocation(line: 999, column: 30, scope: !9944)
!9983 = !DILocation(line: 999, column: 44, scope: !9944)
!9984 = !DILocation(line: 1001, column: 6, scope: !9944)
!9985 = !DILocation(line: 1002, column: 2, scope: !9944)
!9986 = !DILocation(line: 1002, column: 24, scope: !9944)
!9987 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9988)
!9988 = distinct !DILocation(line: 1004, column: 2, scope: !9960)
!9989 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9988)
!9990 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9988)
!9991 = !DILocation(line: 1004, column: 2, scope: !9960)
!9992 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !9993)
!9993 = distinct !DILocation(line: 1004, column: 2, scope: !9960)
!9994 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !9993)
!9995 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !9993)
!9996 = !DILocation(line: 1004, column: 2, scope: !9961)
!9997 = !DILocation(line: 166, column: 45, scope: !2829, inlinedAt: !9998)
!9998 = distinct !DILocation(line: 1004, column: 2, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 1004, column: 2)
!10000 = !DILocation(line: 168, column: 24, scope: !2829, inlinedAt: !9998)
!10001 = !DILocation(line: 171, column: 8, scope: !2829, inlinedAt: !9998)
!10002 = !DILocation(line: 169, column: 23, scope: !2829, inlinedAt: !9998)
!10003 = !DILocation(line: 172, column: 7, scope: !2842, inlinedAt: !9998)
!10004 = !DILocation(line: 172, column: 6, scope: !2829, inlinedAt: !9998)
!10005 = !DILocation(line: 178, column: 11, scope: !2845, inlinedAt: !9998)
!10006 = !DILocation(line: 178, column: 21, scope: !2845, inlinedAt: !9998)
!10007 = !DILocation(line: 178, column: 30, scope: !2845, inlinedAt: !9998)
!10008 = !DILocation(line: 178, column: 37, scope: !2845, inlinedAt: !9998)
!10009 = !DILocation(line: 178, column: 6, scope: !2829, inlinedAt: !9998)
!10010 = !DILocation(line: 184, column: 14, scope: !2829, inlinedAt: !9998)
!10011 = !DILocation(line: 184, column: 2, scope: !2829, inlinedAt: !9998)
!10012 = !DILocation(line: 0, scope: !2856, inlinedAt: !9998)
!10013 = !DILocation(line: 0, scope: !9999)
!10014 = !DILocation(line: 186, column: 2, scope: !2829, inlinedAt: !9998)
!10015 = !DILocation(line: 1004, column: 2, scope: !9999)
!10016 = !DILocation(line: 1005, column: 6, scope: !9971)
!10017 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10018)
!10018 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10019)
!10019 = distinct !DILocation(line: 1004, column: 2, scope: !9957)
!10020 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10018)
!10021 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10018)
!10022 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10019)
!10023 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10019)
!10024 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10019)
!10025 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10019)
!10026 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10019)
!10027 = !DILocation(line: 1004, column: 2, scope: !9957)
!10028 = !{i32 -2145255773, i32 -2145255760, i32 -2145255735, i32 -2145255711, i32 -2145255686, i32 -2145255611, i32 -2145255586, i32 -2145255442, i32 -2145252310, i32 -2145252221, i32 -2145252100, i32 -2145252005, i32 -2145251904, i32 -2145251877, i32 -2145251794, i32 -2145251705, i32 -2145251584, i32 -2145251484, i32 -2145251378, i32 -2145251270, i32 -2145255154, i32 -2145255101, i32 -2145255070, i32 -2145255039, i32 -2145255018, i32 -2145254996, i32 -2145254947, i32 -2145254926, i32 -2145251187, i32 -2145251098, i32 -2145250977, i32 -2145250878, i32 -2145250772, i32 -2145250670, i32 -2145250637, i32 -2145250564, i32 -2145250496, i32 -2145254622, i32 -2145254563, i32 -2145254510, i32 -2145254479, i32 -2145254448, i32 -2145254427, i32 -2145254405, i32 -2145254356, i32 -2145254335, i32 -2145250443, i32 -2145250354, i32 -2145250233, i32 -2145250134, i32 -2145250028, i32 -2145249926, i32 -2145249893, i32 -2145249810, i32 -2145249721, i32 -2145249600, i32 -2145249500, i32 -2145249474, i32 -2145249371, i32 -2145249345, i32 -2145254077, i32 -2145254010, i32 -2145253985, i32 -2145253921, i32 -2145253839, i32 -2145253816, i32 -2145253791, i32 -2145253766}
!10029 = !DILocation(line: 1004, column: 2, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 1004, column: 2)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 1004, column: 2)
!10032 = distinct !DILexicalBlock(scope: !9957, file: !3, line: 1004, column: 2)
!10033 = !{i32 -2145252578, i32 -2145252562}
!10034 = !DILocation(line: 1005, column: 6, scope: !9944)
!10035 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10036)
!10036 = distinct !DILocation(line: 1009, column: 3, scope: !9967)
!10037 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10036)
!10038 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10036)
!10039 = !DILocation(line: 1009, column: 3, scope: !9967)
!10040 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10041)
!10041 = distinct !DILocation(line: 1009, column: 3, scope: !9967)
!10042 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10041)
!10043 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10041)
!10044 = !DILocation(line: 1009, column: 3, scope: !9968)
!10045 = !DILocation(line: 1009, column: 3, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 1009, column: 3)
!10047 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !10048)
!10048 = distinct !DILocation(line: 1009, column: 3, scope: !10046)
!10049 = !DILocation(line: 90, column: 11, scope: !1664, inlinedAt: !10048)
!10050 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !10048)
!10051 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !10048)
!10052 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !10048)
!10053 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10054)
!10054 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10055)
!10055 = distinct !DILocation(line: 1009, column: 3, scope: !9964)
!10056 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10054)
!10057 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10054)
!10058 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10055)
!10059 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10055)
!10060 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10055)
!10061 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10055)
!10062 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10055)
!10063 = !DILocation(line: 1009, column: 3, scope: !9964)
!10064 = !{i32 -2145247086, i32 -2145247073, i32 -2145247048, i32 -2145247024, i32 -2145246999, i32 -2145246924, i32 -2145246899, i32 -2145246755, i32 -2145244514, i32 -2145244425, i32 -2145244304, i32 -2145244209, i32 -2145244108, i32 -2145244081, i32 -2145243998, i32 -2145243909, i32 -2145243788, i32 -2145243688, i32 -2145243582, i32 -2145243474, i32 -2145246467, i32 -2145246414, i32 -2145246383, i32 -2145246352, i32 -2145246331, i32 -2145246309, i32 -2145246260, i32 -2145246239, i32 -2145243391, i32 -2145243302, i32 -2145243181, i32 -2145243082, i32 -2145242976, i32 -2145242874, i32 -2145242841, i32 -2145242768, i32 -2145242700, i32 -2145245865, i32 -2145245812, i32 -2145245781, i32 -2145245750, i32 -2145245729, i32 -2145245707, i32 -2145245658, i32 -2145245637, i32 -2145242645, i32 -2145242556, i32 -2145242435, i32 -2145242336, i32 -2145242230, i32 -2145242128, i32 -2145242095, i32 -2145242012, i32 -2145241923, i32 -2145241802, i32 -2145241702, i32 -2145241676, i32 -2145241573, i32 -2145241547, i32 -2145245379, i32 -2145245312, i32 -2145245287, i32 -2145245223, i32 -2145245107, i32 -2145245082, i32 -2145245057}
!10065 = !DILocation(line: 1012, column: 26, scope: !9944)
!10066 = !DILocation(line: 1012, column: 8, scope: !9944)
!10067 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10068)
!10068 = distinct !DILocation(line: 1013, column: 2, scope: !9976)
!10069 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10068)
!10070 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10068)
!10071 = !DILocation(line: 1013, column: 2, scope: !9976)
!10072 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10073)
!10073 = distinct !DILocation(line: 1013, column: 2, scope: !9976)
!10074 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10073)
!10075 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10073)
!10076 = !DILocation(line: 1013, column: 2, scope: !9977)
!10077 = !DILocation(line: 1013, column: 2, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1013, column: 2)
!10079 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10080)
!10080 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10081)
!10081 = distinct !DILocation(line: 1013, column: 2, scope: !9973)
!10082 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10080)
!10083 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10080)
!10084 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10081)
!10085 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10081)
!10086 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10081)
!10087 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10081)
!10088 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10081)
!10089 = !DILocation(line: 1013, column: 2, scope: !9973)
!10090 = !{i32 -2145239579, i32 -2145239566, i32 -2145239541, i32 -2145239517, i32 -2145239492, i32 -2145239417, i32 -2145239392, i32 -2145239248, i32 -2145237021, i32 -2145236932, i32 -2145236811, i32 -2145236716, i32 -2145236615, i32 -2145236588, i32 -2145236505, i32 -2145236416, i32 -2145236295, i32 -2145236195, i32 -2145236089, i32 -2145235981, i32 -2145238960, i32 -2145238907, i32 -2145238876, i32 -2145238845, i32 -2145238824, i32 -2145238802, i32 -2145238753, i32 -2145238732, i32 -2145235898, i32 -2145235809, i32 -2145235688, i32 -2145235589, i32 -2145235483, i32 -2145235381, i32 -2145235348, i32 -2145235275, i32 -2145235207, i32 -2145238358, i32 -2145238305, i32 -2145238274, i32 -2145238243, i32 -2145238222, i32 -2145238200, i32 -2145238151, i32 -2145238130, i32 -2145235155, i32 -2145235066, i32 -2145234945, i32 -2145234846, i32 -2145234740, i32 -2145234638, i32 -2145234605, i32 -2145234522, i32 -2145234433, i32 -2145234312, i32 -2145234212, i32 -2145234186, i32 -2145234083, i32 -2145234057, i32 -2145237872, i32 -2145237805, i32 -2145237780, i32 -2145237716, i32 -2145237600, i32 -2145237575, i32 -2145237550}
!10091 = !DILocation(line: 0, scope: !9944)
!10092 = !DILocation(line: 1016, column: 1, scope: !9944)
!10093 = !DILocation(line: 1015, column: 2, scope: !9944)
!10094 = distinct !DISubprogram(name: "lwip_sendto", scope: !3, file: !3, line: 2583, type: !10095, isLocal: false, isDefinition: true, scopeLine: 2585, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10097)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{!206, !80, !225, !216, !80, !228, !1750}
!10097 = !{!10098, !10099, !10100, !10101, !10102, !10103, !10104, !10105, !10106, !10107, !10108, !10109, !10113, !10119, !10124, !10130, !10132}
!10098 = !DILocalVariable(name: "s", arg: 1, scope: !10094, file: !3, line: 2583, type: !80)
!10099 = !DILocalVariable(name: "data", arg: 2, scope: !10094, file: !3, line: 2583, type: !225)
!10100 = !DILocalVariable(name: "size", arg: 3, scope: !10094, file: !3, line: 2583, type: !216)
!10101 = !DILocalVariable(name: "flags", arg: 4, scope: !10094, file: !3, line: 2583, type: !80)
!10102 = !DILocalVariable(name: "to", arg: 5, scope: !10094, file: !3, line: 2584, type: !228)
!10103 = !DILocalVariable(name: "tolen", arg: 6, scope: !10094, file: !3, line: 2584, type: !1750)
!10104 = !DILocalVariable(name: "sock", scope: !10094, file: !3, line: 2586, type: !1165)
!10105 = !DILocalVariable(name: "err", scope: !10094, file: !3, line: 2587, type: !1283)
!10106 = !DILocalVariable(name: "short_size", scope: !10094, file: !3, line: 2588, type: !164)
!10107 = !DILocalVariable(name: "remote_port", scope: !10094, file: !3, line: 2589, type: !164)
!10108 = !DILocalVariable(name: "buf", scope: !10094, file: !3, line: 2590, type: !1371)
!10109 = !DILocalVariable(name: "sockerr", scope: !10110, file: !3, line: 2611, type: !1007)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 2611, column: 5)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 2609, column: 43)
!10112 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2609, column: 7)
!10113 = !DILocalVariable(name: "tid", scope: !10114, file: !3, line: 2611, type: !170)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2611, column: 5)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 2611, column: 5)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 2611, column: 5)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !3, line: 2611, column: 5)
!10118 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 2611, column: 5)
!10119 = !DILocalVariable(name: "sockerr", scope: !10120, file: !3, line: 2616, type: !1007)
!10120 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 2616, column: 3)
!10121 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 2616, column: 3)
!10122 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 2616, column: 3)
!10123 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2616, column: 3)
!10124 = !DILocalVariable(name: "tid", scope: !10125, file: !3, line: 2616, type: !170)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 2616, column: 3)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 2616, column: 3)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 2616, column: 3)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 2616, column: 3)
!10129 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 2616, column: 3)
!10130 = !DILocalVariable(name: "sockerr", scope: !10131, file: !3, line: 2677, type: !1007)
!10131 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2677, column: 3)
!10132 = !DILocalVariable(name: "tid", scope: !10133, file: !3, line: 2677, type: !170)
!10133 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 2677, column: 3)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 2677, column: 3)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 2677, column: 3)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 2677, column: 3)
!10137 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 2677, column: 3)
!10138 = !DILocation(line: 2583, column: 17, scope: !10094)
!10139 = !DILocation(line: 2583, column: 32, scope: !10094)
!10140 = !DILocation(line: 2583, column: 45, scope: !10094)
!10141 = !DILocation(line: 2583, column: 55, scope: !10094)
!10142 = !DILocation(line: 2584, column: 36, scope: !10094)
!10143 = !DILocation(line: 2584, column: 50, scope: !10094)
!10144 = !DILocation(line: 2590, column: 3, scope: !10094)
!10145 = !DILocation(line: 2592, column: 10, scope: !10094)
!10146 = !DILocation(line: 2586, column: 21, scope: !10094)
!10147 = !DILocation(line: 2593, column: 8, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2593, column: 7)
!10149 = !DILocation(line: 2593, column: 7, scope: !10094)
!10150 = !DILocation(line: 2597, column: 7, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2597, column: 7)
!10152 = !DILocation(line: 2597, column: 51, scope: !10151)
!10153 = !DILocation(line: 2597, column: 7, scope: !10094)
!10154 = !DILocation(line: 2600, column: 12, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 2597, column: 67)
!10156 = !DILocation(line: 2600, column: 5, scope: !10155)
!10157 = !DILocation(line: 2609, column: 12, scope: !10112)
!10158 = !DILocation(line: 2609, column: 7, scope: !10094)
!10159 = !DILocation(line: 2611, column: 5, scope: !10110)
!10160 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10161)
!10161 = distinct !DILocation(line: 2611, column: 5, scope: !10117)
!10162 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10161)
!10163 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10161)
!10164 = !DILocation(line: 2611, column: 5, scope: !10117)
!10165 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10166)
!10166 = distinct !DILocation(line: 2611, column: 5, scope: !10117)
!10167 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10166)
!10168 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10166)
!10169 = !DILocation(line: 2611, column: 5, scope: !10118)
!10170 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !10171)
!10171 = distinct !DILocation(line: 2611, column: 5, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 2611, column: 5)
!10173 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !10171)
!10174 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !10171)
!10175 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !10171)
!10176 = !DILocation(line: 2611, column: 5, scope: !10172)
!10177 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10178)
!10178 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10179)
!10179 = distinct !DILocation(line: 2611, column: 5, scope: !10114)
!10180 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10178)
!10181 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10178)
!10182 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10179)
!10183 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10179)
!10184 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10179)
!10185 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10179)
!10186 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10179)
!10187 = !DILocation(line: 2611, column: 5, scope: !10114)
!10188 = !{i32 -2144850922, i32 -2144850909, i32 -2144850884, i32 -2144850860, i32 -2144850835, i32 -2144850760, i32 -2144850735, i32 -2144850591, i32 -2144848368, i32 -2144848279, i32 -2144848158, i32 -2144848063, i32 -2144847962, i32 -2144847935, i32 -2144847852, i32 -2144847763, i32 -2144847642, i32 -2144847542, i32 -2144847436, i32 -2144847328, i32 -2144850303, i32 -2144850250, i32 -2144850219, i32 -2144850188, i32 -2144850167, i32 -2144850145, i32 -2144850096, i32 -2144850075, i32 -2144847245, i32 -2144847156, i32 -2144847035, i32 -2144846936, i32 -2144846830, i32 -2144846728, i32 -2144846695, i32 -2144846622, i32 -2144846554, i32 -2144849701, i32 -2144849648, i32 -2144849617, i32 -2144849586, i32 -2144849565, i32 -2144849543, i32 -2144849494, i32 -2144849473, i32 -2144846499, i32 -2144846410, i32 -2144846289, i32 -2144846190, i32 -2144846084, i32 -2144845982, i32 -2144845949, i32 -2144845866, i32 -2144845777, i32 -2144845656, i32 -2144845556, i32 -2144845530, i32 -2144845427, i32 -2144845401, i32 -2144849215, i32 -2144849148, i32 -2144849123, i32 -2144849059, i32 -2144848943, i32 -2144848918, i32 -2144848893}
!10189 = !DILocation(line: 2613, column: 5, scope: !10111)
!10190 = !DILocation(line: 2615, column: 16, scope: !10094)
!10191 = !DILocation(line: 2588, column: 9, scope: !10094)
!10192 = !DILocation(line: 2616, column: 3, scope: !10122)
!10193 = !DILocation(line: 2616, column: 3, scope: !10123)
!10194 = !DILocation(line: 2616, column: 3, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 2616, column: 3)
!10196 = !DILocation(line: 2616, column: 3, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 2616, column: 3)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !3, line: 2616, column: 3)
!10199 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 2616, column: 3)
!10200 = !DILocation(line: 2623, column: 9, scope: !10094)
!10201 = !DILocation(line: 2627, column: 7, scope: !10094)
!10202 = !DILocation(line: 2628, column: 5, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 2627, column: 11)
!10204 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2627, column: 7)
!10205 = !DILocation(line: 1304, column: 48, scope: !3705, inlinedAt: !10206)
!10206 = distinct !DILocation(line: 2628, column: 5, scope: !10203)
!10207 = !DILocation(line: 1304, column: 69, scope: !3705, inlinedAt: !10206)
!10208 = !DILocation(line: 1306, column: 18, scope: !3717, inlinedAt: !10206)
!10209 = !DILocation(line: 1306, column: 29, scope: !3717, inlinedAt: !10206)
!10210 = !DILocation(line: 1306, column: 7, scope: !3705, inlinedAt: !10206)
!10211 = !DILocation(line: 1307, column: 5, scope: !3720, inlinedAt: !10206)
!10212 = !DILocation(line: 1307, column: 5, scope: !3724, inlinedAt: !10206)
!10213 = !DILocation(line: 1307, column: 5, scope: !3721, inlinedAt: !10206)
!10214 = !DILocation(line: 1307, column: 5, scope: !3727, inlinedAt: !10206)
!10215 = !DILocation(line: 1308, column: 13, scope: !3722, inlinedAt: !10206)
!10216 = !DILocation(line: 1308, column: 18, scope: !3722, inlinedAt: !10206)
!10217 = !DILocation(line: 1309, column: 3, scope: !3722, inlinedAt: !10206)
!10218 = !DILocation(line: 1310, column: 5, scope: !3729, inlinedAt: !10206)
!10219 = !DILocation(line: 1311, column: 13, scope: !3730, inlinedAt: !10206)
!10220 = !DILocation(line: 1311, column: 18, scope: !3730, inlinedAt: !10206)
!10221 = !DILocation(line: 2638, column: 3, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 2638, column: 3)
!10223 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2638, column: 3)
!10224 = !DILocation(line: 0, scope: !10203)
!10225 = !DILocation(line: 1313, column: 1, scope: !3705, inlinedAt: !10206)
!10226 = !DILocation(line: 2629, column: 3, scope: !10203)
!10227 = !DILocation(line: 2589, column: 9, scope: !10094)
!10228 = !DILocation(line: 2631, column: 5, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 2631, column: 5)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 2631, column: 5)
!10231 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 2629, column: 10)
!10232 = !DILocation(line: 2631, column: 5, scope: !10230)
!10233 = !DILocation(line: 2631, column: 5, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 2631, column: 5)
!10235 = !DILocation(line: 2631, column: 5, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 2631, column: 5)
!10237 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 2631, column: 5)
!10238 = !DILocation(line: 2631, column: 5, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 2631, column: 5)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 2631, column: 5)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 2631, column: 5)
!10242 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 2631, column: 5)
!10243 = !DILocation(line: 2631, column: 5, scope: !10237)
!10244 = !DILocation(line: 2631, column: 5, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !3, line: 2631, column: 5)
!10246 = distinct !DILexicalBlock(scope: !10247, file: !3, line: 2631, column: 5)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 2631, column: 5)
!10248 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 2631, column: 5)
!10249 = !DILocation(line: 2631, column: 5, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 2631, column: 5)
!10251 = !DILocation(line: 2633, column: 3, scope: !10094)
!10252 = !DILocation(line: 2633, column: 25, scope: !10094)
!10253 = !DILocation(line: 2590, column: 17, scope: !10094)
!10254 = !DILocation(line: 2659, column: 9, scope: !10094)
!10255 = !DILocation(line: 2587, column: 9, scope: !10094)
!10256 = !DILocation(line: 2661, column: 11, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 2661, column: 7)
!10258 = !DILocation(line: 2661, column: 7, scope: !10094)
!10259 = !DILocation(line: 2664, column: 9, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 2664, column: 9)
!10261 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 2661, column: 22)
!10262 = !DILocation(line: 2664, column: 32, scope: !10260)
!10263 = !DILocation(line: 2664, column: 35, scope: !10260)
!10264 = !DILocation(line: 2664, column: 9, scope: !10261)
!10265 = !DILocation(line: 2665, column: 7, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 2664, column: 83)
!10267 = !DILocation(line: 2666, column: 7, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10266, file: !3, line: 2666, column: 7)
!10269 = !DILocation(line: 2667, column: 5, scope: !10266)
!10270 = !DILocation(line: 2671, column: 30, scope: !10261)
!10271 = !DILocation(line: 2671, column: 11, scope: !10261)
!10272 = !DILocation(line: 2672, column: 3, scope: !10261)
!10273 = !DILocation(line: 0, scope: !10094)
!10274 = !DILocation(line: 2675, column: 3, scope: !10094)
!10275 = !DILocation(line: 2677, column: 3, scope: !10131)
!10276 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10277)
!10277 = distinct !DILocation(line: 2677, column: 3, scope: !10136)
!10278 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10277)
!10279 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10277)
!10280 = !DILocation(line: 2677, column: 3, scope: !10136)
!10281 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 2677, column: 3, scope: !10136)
!10283 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10282)
!10284 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10282)
!10285 = !DILocation(line: 2677, column: 3, scope: !10137)
!10286 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !10287)
!10287 = distinct !DILocation(line: 2677, column: 3, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 2677, column: 3)
!10289 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !10287)
!10290 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !10287)
!10291 = !DILocation(line: 2677, column: 3, scope: !10288)
!10292 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10293)
!10293 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10294)
!10294 = distinct !DILocation(line: 2677, column: 3, scope: !10133)
!10295 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10293)
!10296 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10293)
!10297 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10294)
!10298 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10294)
!10299 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10294)
!10300 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10294)
!10301 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10294)
!10302 = !DILocation(line: 2677, column: 3, scope: !10133)
!10303 = !{i32 -2144824203, i32 -2144824190, i32 -2144824165, i32 -2144824141, i32 -2144824116, i32 -2144824041, i32 -2144824016, i32 -2144823872, i32 -2144821649, i32 -2144821560, i32 -2144821439, i32 -2144821344, i32 -2144821243, i32 -2144821216, i32 -2144821133, i32 -2144821044, i32 -2144820923, i32 -2144820823, i32 -2144820717, i32 -2144820609, i32 -2144823584, i32 -2144823531, i32 -2144823500, i32 -2144823469, i32 -2144823448, i32 -2144823426, i32 -2144823377, i32 -2144823356, i32 -2144820526, i32 -2144820437, i32 -2144820316, i32 -2144820217, i32 -2144820111, i32 -2144820009, i32 -2144819976, i32 -2144819903, i32 -2144819835, i32 -2144822982, i32 -2144822929, i32 -2144822898, i32 -2144822867, i32 -2144822846, i32 -2144822824, i32 -2144822775, i32 -2144822754, i32 -2144819780, i32 -2144819691, i32 -2144819570, i32 -2144819471, i32 -2144819365, i32 -2144819263, i32 -2144819230, i32 -2144819147, i32 -2144819058, i32 -2144818937, i32 -2144818837, i32 -2144818811, i32 -2144818708, i32 -2144818682, i32 -2144822496, i32 -2144822429, i32 -2144822404, i32 -2144822340, i32 -2144822224, i32 -2144822199, i32 -2144822174}
!10304 = !DILocation(line: 2679, column: 15, scope: !10094)
!10305 = !DILocation(line: 2679, column: 27, scope: !10094)
!10306 = !DILocation(line: 2679, column: 10, scope: !10094)
!10307 = !DILocation(line: 2679, column: 3, scope: !10094)
!10308 = !DILocation(line: 0, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 2593, column: 14)
!10310 = !DILocation(line: 2680, column: 1, scope: !10094)
!10311 = distinct !DISubprogram(name: "socketpair", scope: !3, file: !3, line: 1018, type: !10312, isLocal: false, isDefinition: true, scopeLine: 1019, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10314)
!10312 = !DISubroutineType(types: !10313)
!10313 = !{!80, !80, !80, !80, !369}
!10314 = !{!10315, !10316, !10317, !10318}
!10315 = !DILocalVariable(name: "domain", arg: 1, scope: !10311, file: !3, line: 1018, type: !80)
!10316 = !DILocalVariable(name: "type", arg: 2, scope: !10311, file: !3, line: 1018, type: !80)
!10317 = !DILocalVariable(name: "protocol", arg: 3, scope: !10311, file: !3, line: 1018, type: !80)
!10318 = !DILocalVariable(name: "sv", arg: 4, scope: !10311, file: !3, line: 1018, type: !369)
!10319 = !DILocation(line: 1018, column: 20, scope: !10311)
!10320 = !DILocation(line: 1018, column: 32, scope: !10311)
!10321 = !DILocation(line: 1018, column: 42, scope: !10311)
!10322 = !DILocation(line: 1018, column: 56, scope: !10311)
!10323 = !DILocation(line: 1020, column: 2, scope: !10311)
!10324 = !DILocation(line: 1020, column: 8, scope: !10311)
!10325 = !DILocation(line: 1021, column: 2, scope: !10311)
!10326 = distinct !DISubprogram(name: "if_nametoindex", scope: !3, file: !3, line: 1025, type: !10327, isLocal: false, isDefinition: true, scopeLine: 1026, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10329)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{!7, !292}
!10329 = !{!10330, !10331}
!10330 = !DILocalVariable(name: "ifname", arg: 1, scope: !10326, file: !3, line: 1025, type: !292)
!10331 = !DILocalVariable(name: "ret", scope: !10326, file: !3, line: 1027, type: !80)
!10332 = !DILocation(line: 1025, column: 41, scope: !10326)
!10333 = !DILocation(line: 1029, column: 8, scope: !10326)
!10334 = !DILocation(line: 1027, column: 6, scope: !10326)
!10335 = !DILocation(line: 1031, column: 2, scope: !10326)
!10336 = distinct !DISubprogram(name: "if_indextoname", scope: !3, file: !3, line: 1034, type: !10337, isLocal: false, isDefinition: true, scopeLine: 1035, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10339)
!10337 = !DISubroutineType(types: !10338)
!10338 = !{!144, !7, !144}
!10339 = !{!10340, !10341, !10342}
!10340 = !DILocalVariable(name: "ifindex", arg: 1, scope: !10336, file: !3, line: 1034, type: !7)
!10341 = !DILocalVariable(name: "ifname", arg: 2, scope: !10336, file: !3, line: 1034, type: !144)
!10342 = !DILocalVariable(name: "ret", scope: !10336, file: !3, line: 1036, type: !144)
!10343 = !DILocation(line: 1034, column: 35, scope: !10336)
!10344 = !DILocation(line: 1034, column: 50, scope: !10336)
!10345 = !DILocation(line: 1038, column: 8, scope: !10336)
!10346 = !DILocation(line: 1036, column: 8, scope: !10336)
!10347 = !DILocation(line: 1040, column: 2, scope: !10336)
!10348 = distinct !DISubprogram(name: "lwip_socket_thread_init", scope: !3, file: !3, line: 1318, type: !632, isLocal: false, isDefinition: true, scopeLine: 1319, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1489)
!10349 = !DILocation(line: 1321, column: 1, scope: !10348)
!10350 = distinct !DISubprogram(name: "lwip_socket_thread_cleanup", scope: !3, file: !3, line: 1325, type: !632, isLocal: false, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1489)
!10351 = !DILocation(line: 1328, column: 1, scope: !10350)
!10352 = distinct !DISubprogram(name: "lwip_socket_dbg_get_socket", scope: !3, file: !3, line: 1420, type: !5211, isLocal: false, isDefinition: true, scopeLine: 1421, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10353)
!10353 = !{!10354}
!10354 = !DILocalVariable(name: "fd", arg: 1, scope: !10352, file: !3, line: 1420, type: !80)
!10355 = !DILocation(line: 1420, column: 32, scope: !10352)
!10356 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !10357)
!10357 = distinct !DILocation(line: 1422, column: 10, scope: !10352)
!10358 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !10357)
!10359 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !10357)
!10360 = !DILocation(line: 1416, column: 11, scope: !5218, inlinedAt: !10357)
!10361 = !DILocation(line: 0, scope: !10352)
!10362 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !10357)
!10363 = !DILocation(line: 1422, column: 3, scope: !10352)
!10364 = distinct !DISubprogram(name: "get_socket", scope: !3, file: !3, line: 1477, type: !5211, isLocal: true, isDefinition: true, scopeLine: 1478, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10365)
!10365 = !{!10366, !10367, !10368}
!10366 = !DILocalVariable(name: "fd", arg: 1, scope: !10364, file: !3, line: 1477, type: !80)
!10367 = !DILocalVariable(name: "sock", scope: !10364, file: !3, line: 1479, type: !1165)
!10368 = !DILocalVariable(name: "tid", scope: !10369, file: !3, line: 1484, type: !170)
!10369 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 1484, column: 5)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 1484, column: 5)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 1484, column: 5)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 1484, column: 5)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 1484, column: 5)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1480, column: 14)
!10375 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 1480, column: 7)
!10376 = !DILocation(line: 1477, column: 16, scope: !10364)
!10377 = !DILocation(line: 1458, column: 19, scope: !6374, inlinedAt: !10378)
!10378 = distinct !DILocation(line: 1479, column: 28, scope: !10364)
!10379 = !DILocation(line: 1427, column: 26, scope: !6380, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 1460, column: 28, scope: !6374, inlinedAt: !10378)
!10381 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !10382)
!10382 = distinct !DILocation(line: 1429, column: 27, scope: !6380, inlinedAt: !10380)
!10383 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !10382)
!10384 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !10382)
!10385 = !DILocation(line: 1414, column: 5, scope: !6390, inlinedAt: !10382)
!10386 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !10382)
!10387 = !DILocation(line: 1429, column: 21, scope: !6380, inlinedAt: !10380)
!10388 = !DILocation(line: 1435, column: 3, scope: !6380, inlinedAt: !10380)
!10389 = !DILocation(line: 1460, column: 21, scope: !6374, inlinedAt: !10378)
!10390 = !DILocation(line: 1461, column: 7, scope: !6374, inlinedAt: !10378)
!10391 = !DILocation(line: 1416, column: 11, scope: !5218, inlinedAt: !10382)
!10392 = !DILocation(line: 1416, column: 3, scope: !5218, inlinedAt: !10382)
!10393 = !DILocation(line: 1462, column: 15, scope: !6397, inlinedAt: !10378)
!10394 = !DILocation(line: 1462, column: 9, scope: !6397, inlinedAt: !10378)
!10395 = !DILocation(line: 1462, column: 9, scope: !6398, inlinedAt: !10378)
!10396 = !DILocation(line: 1467, column: 3, scope: !6374, inlinedAt: !10378)
!10397 = !DILocation(line: 1468, column: 1, scope: !6374, inlinedAt: !10378)
!10398 = !DILocation(line: 1479, column: 21, scope: !10364)
!10399 = !DILocation(line: 1480, column: 7, scope: !10364)
!10400 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10401)
!10401 = distinct !DILocation(line: 1484, column: 5, scope: !10372)
!10402 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10401)
!10403 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10401)
!10404 = !DILocation(line: 1484, column: 5, scope: !10372)
!10405 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10406)
!10406 = distinct !DILocation(line: 1484, column: 5, scope: !10372)
!10407 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10406)
!10408 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10406)
!10409 = !DILocation(line: 1484, column: 5, scope: !10373)
!10410 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !10411)
!10411 = distinct !DILocation(line: 1484, column: 5, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 1484, column: 5)
!10413 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !10411)
!10414 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !10411)
!10415 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !10411)
!10416 = !DILocation(line: 1484, column: 5, scope: !10412)
!10417 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10418)
!10418 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10419)
!10419 = distinct !DILocation(line: 1484, column: 5, scope: !10369)
!10420 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10418)
!10421 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10418)
!10422 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10419)
!10423 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10419)
!10424 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10419)
!10425 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10419)
!10426 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10419)
!10427 = !DILocation(line: 1484, column: 5, scope: !10369)
!10428 = !{i32 -2145227087, i32 -2145227074, i32 -2145227049, i32 -2145227025, i32 -2145227000, i32 -2145226925, i32 -2145226900, i32 -2145226756, i32 -2145224536, i32 -2145224447, i32 -2145224326, i32 -2145224231, i32 -2145224130, i32 -2145224103, i32 -2145224020, i32 -2145223931, i32 -2145223810, i32 -2145223710, i32 -2145223604, i32 -2145223496, i32 -2145226468, i32 -2145226415, i32 -2145226384, i32 -2145226353, i32 -2145226332, i32 -2145226310, i32 -2145226261, i32 -2145226240, i32 -2145223413, i32 -2145223324, i32 -2145223203, i32 -2145223104, i32 -2145222998, i32 -2145222896, i32 -2145222863, i32 -2145222790, i32 -2145222722, i32 -2145225866, i32 -2145225813, i32 -2145225782, i32 -2145225751, i32 -2145225730, i32 -2145225708, i32 -2145225659, i32 -2145225638, i32 -2145222667, i32 -2145222578, i32 -2145222457, i32 -2145222358, i32 -2145222252, i32 -2145222150, i32 -2145222117, i32 -2145222034, i32 -2145221945, i32 -2145221824, i32 -2145221724, i32 -2145221698, i32 -2145221595, i32 -2145221569, i32 -2145225380, i32 -2145225313, i32 -2145225288, i32 -2145225224, i32 -2145225108, i32 -2145225083, i32 -2145225058}
!10429 = !DILocation(line: 1463, column: 7, scope: !6407, inlinedAt: !10378)
!10430 = !DILocation(line: 1487, column: 3, scope: !10364)
!10431 = !DILocation(line: 0, scope: !10374)
!10432 = !DILocation(line: 1488, column: 1, scope: !10364)
!10433 = distinct !DISubprogram(name: "alloc_socket", scope: !3, file: !3, line: 1499, type: !10434, isLocal: true, isDefinition: true, scopeLine: 1500, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10436)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{!80, !1169, !80}
!10436 = !{!10437, !10438, !10439, !10440}
!10437 = !DILocalVariable(name: "newconn", arg: 1, scope: !10433, file: !3, line: 1499, type: !1169)
!10438 = !DILocalVariable(name: "accepted", arg: 2, scope: !10433, file: !3, line: 1499, type: !80)
!10439 = !DILocalVariable(name: "i", scope: !10433, file: !3, line: 1501, type: !80)
!10440 = !DILocalVariable(name: "lev", scope: !10433, file: !3, line: 1502, type: !134)
!10441 = !DILocation(line: 1499, column: 30, scope: !10433)
!10442 = !DILocation(line: 1499, column: 43, scope: !10433)
!10443 = !DILocation(line: 1501, column: 7, scope: !10433)
!10444 = !DILocation(line: 1506, column: 8, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 1506, column: 3)
!10446 = !DILocation(line: 1506, column: 3, scope: !10445)
!10447 = !DILocation(line: 1508, column: 5, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 1508, column: 5)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 1506, column: 37)
!10450 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 1506, column: 3)
!10451 = !DILocation(line: 1502, column: 3, scope: !10433)
!10452 = !DILocation(line: 1509, column: 21, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 1509, column: 9)
!10454 = !DILocation(line: 1509, column: 10, scope: !10453)
!10455 = !DILocation(line: 1509, column: 9, scope: !10449)
!10456 = !DILocation(line: 1518, column: 29, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 1509, column: 27)
!10458 = !DILocation(line: 1521, column: 7, scope: !10457)
!10459 = !DILocation(line: 1522, column: 18, scope: !10457)
!10460 = !DILocation(line: 1522, column: 27, scope: !10457)
!10461 = !DILocation(line: 1522, column: 32, scope: !10457)
!10462 = !DILocation(line: 1524, column: 7, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 1524, column: 7)
!10464 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 1524, column: 7)
!10465 = !DILocation(line: 1524, column: 7, scope: !10464)
!10466 = !DILocation(line: 1524, column: 7, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 1524, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 1524, column: 7)
!10469 = !DILocation(line: 1524, column: 7, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 1524, column: 7)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 1524, column: 7)
!10472 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1524, column: 7)
!10473 = !DILocation(line: 1525, column: 18, scope: !10457)
!10474 = !DILocation(line: 1525, column: 29, scope: !10457)
!10475 = !{!1564, !1565, i64 16}
!10476 = !DILocation(line: 1528, column: 32, scope: !10457)
!10477 = !DILocation(line: 1528, column: 65, scope: !10457)
!10478 = !DILocation(line: 1528, column: 92, scope: !10457)
!10479 = !DILocation(line: 1528, column: 31, scope: !10457)
!10480 = !DILocation(line: 1528, column: 18, scope: !10457)
!10481 = !DILocation(line: 1528, column: 29, scope: !10457)
!10482 = !{!1564, !1565, i64 18}
!10483 = !DILocation(line: 1529, column: 18, scope: !10457)
!10484 = !DILocation(line: 1529, column: 29, scope: !10457)
!10485 = !{!1564, !1565, i64 20}
!10486 = !DILocation(line: 1531, column: 7, scope: !10457)
!10487 = !DILocation(line: 1533, column: 5, scope: !10449)
!10488 = !DILocation(line: 1506, column: 32, scope: !10450)
!10489 = !DILocation(line: 1506, column: 3, scope: !10450)
!10490 = !DILocation(line: 1506, column: 17, scope: !10450)
!10491 = distinct !{!10491, !10446, !10492}
!10492 = !DILocation(line: 1534, column: 3, scope: !10445)
!10493 = !DILocation(line: 0, scope: !10433)
!10494 = !DILocation(line: 0, scope: !10457)
!10495 = !DILocation(line: 1536, column: 1, scope: !10433)
!10496 = !DILocation(line: 1592, column: 31, scope: !3287)
!10497 = !DILocation(line: 1592, column: 41, scope: !3287)
!10498 = !DILocation(line: 1600, column: 3, scope: !3299)
!10499 = !DILocation(line: 1597, column: 3, scope: !3287)
!10500 = !DILocation(line: 1595, column: 19, scope: !3287)
!10501 = !DILocation(line: 1596, column: 28, scope: !3287)
!10502 = !DILocation(line: 1546, column: 38, scope: !3304, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 1602, column: 11, scope: !3287)
!10504 = !DILocation(line: 1546, column: 48, scope: !3304, inlinedAt: !10503)
!10505 = !DILocation(line: 1546, column: 73, scope: !3304, inlinedAt: !10503)
!10506 = !DILocation(line: 1547, column: 46, scope: !3304, inlinedAt: !10503)
!10507 = !DILocation(line: 1560, column: 21, scope: !3304, inlinedAt: !10503)
!10508 = !DILocation(line: 1561, column: 23, scope: !3304, inlinedAt: !10503)
!10509 = !DILocation(line: 1562, column: 17, scope: !3304, inlinedAt: !10503)
!10510 = !DILocation(line: 1563, column: 14, scope: !3304, inlinedAt: !10503)
!10511 = !DILocation(line: 1564, column: 3, scope: !3304, inlinedAt: !10503)
!10512 = !DILocation(line: 1594, column: 7, scope: !3287)
!10513 = !DILocation(line: 1603, column: 3, scope: !3287)
!10514 = !DILocation(line: 1606, column: 7, scope: !3287)
!10515 = !DILocation(line: 1570, column: 31, scope: !3326, inlinedAt: !10516)
!10516 = distinct !DILocation(line: 1607, column: 5, scope: !3334)
!10517 = !DILocation(line: 1570, column: 55, scope: !3326, inlinedAt: !10516)
!10518 = !DILocation(line: 1570, column: 87, scope: !3326, inlinedAt: !10516)
!10519 = !DILocation(line: 1572, column: 22, scope: !3339, inlinedAt: !10516)
!10520 = !DILocation(line: 1572, column: 7, scope: !3326, inlinedAt: !10516)
!10521 = !DILocation(line: 1573, column: 9, scope: !3345, inlinedAt: !10516)
!10522 = !DILocation(line: 1573, column: 9, scope: !3342, inlinedAt: !10516)
!10523 = !DILocation(line: 1574, column: 7, scope: !3344, inlinedAt: !10516)
!10524 = !DILocation(line: 1575, column: 5, scope: !3344, inlinedAt: !10516)
!10525 = !DILocation(line: 1576, column: 7, scope: !10526, inlinedAt: !10516)
!10526 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1575, column: 12)
!10527 = !DILocation(line: 1579, column: 12, scope: !3348, inlinedAt: !10516)
!10528 = !DILocation(line: 1579, column: 7, scope: !3326, inlinedAt: !10516)
!10529 = !DILocation(line: 1581, column: 5, scope: !3351, inlinedAt: !10516)
!10530 = !DILocation(line: 1582, column: 3, scope: !3351, inlinedAt: !10516)
!10531 = !DILocation(line: 1583, column: 1, scope: !3326, inlinedAt: !10516)
!10532 = !DILocation(line: 1608, column: 3, scope: !3334)
!10533 = !DILocation(line: 1609, column: 1, scope: !3287)
!10534 = distinct !DISubprogram(name: "lwip_recv_tcp", scope: !3, file: !3, line: 1918, type: !10535, isLocal: true, isDefinition: true, scopeLine: 1919, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!206, !1165, !143, !216, !80}
!10537 = !{!10538, !10539, !10540, !10541, !10542, !10543, !10544, !10545, !10547, !10548, !10549, !10555, !10561, !10563}
!10538 = !DILocalVariable(name: "sock", arg: 1, scope: !10534, file: !3, line: 1918, type: !1165)
!10539 = !DILocalVariable(name: "mem", arg: 2, scope: !10534, file: !3, line: 1918, type: !143)
!10540 = !DILocalVariable(name: "len", arg: 3, scope: !10534, file: !3, line: 1918, type: !216)
!10541 = !DILocalVariable(name: "flags", arg: 4, scope: !10534, file: !3, line: 1918, type: !80)
!10542 = !DILocalVariable(name: "apiflags", scope: !10534, file: !3, line: 1920, type: !156)
!10543 = !DILocalVariable(name: "recvd", scope: !10534, file: !3, line: 1921, type: !206)
!10544 = !DILocalVariable(name: "recv_left", scope: !10534, file: !3, line: 1922, type: !206)
!10545 = !DILocalVariable(name: "p", scope: !10546, file: !3, line: 1932, type: !1252)
!10546 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 1931, column: 6)
!10547 = !DILocalVariable(name: "err", scope: !10546, file: !3, line: 1933, type: !1283)
!10548 = !DILocalVariable(name: "copylen", scope: !10546, file: !3, line: 1934, type: !164)
!10549 = !DILocalVariable(name: "sockerr", scope: !10550, file: !3, line: 1956, type: !1007)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 1956, column: 9)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 1947, column: 26)
!10552 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 1947, column: 11)
!10553 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 1940, column: 12)
!10554 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 1938, column: 9)
!10555 = !DILocalVariable(name: "tid", scope: !10556, file: !3, line: 1956, type: !170)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 1956, column: 9)
!10557 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 1956, column: 9)
!10558 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 1956, column: 9)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !3, line: 1956, column: 9)
!10560 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 1956, column: 9)
!10561 = !DILocalVariable(name: "sockerr", scope: !10562, file: !3, line: 2014, type: !1007)
!10562 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 2014, column: 3)
!10563 = !DILocalVariable(name: "tid", scope: !10564, file: !3, line: 2014, type: !170)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 2014, column: 3)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 2014, column: 3)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 2014, column: 3)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 2014, column: 3)
!10568 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 2014, column: 3)
!10569 = !DILocation(line: 1918, column: 33, scope: !10534)
!10570 = !DILocation(line: 1918, column: 45, scope: !10534)
!10571 = !DILocation(line: 1918, column: 57, scope: !10534)
!10572 = !DILocation(line: 1918, column: 66, scope: !10534)
!10573 = !DILocation(line: 1920, column: 8, scope: !10534)
!10574 = !DILocation(line: 1921, column: 11, scope: !10534)
!10575 = !DILocation(line: 1922, column: 28, scope: !10534)
!10576 = !DILocation(line: 1922, column: 23, scope: !10534)
!10577 = !DILocation(line: 1922, column: 11, scope: !10534)
!10578 = !DILocation(line: 1924, column: 3, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 1924, column: 3)
!10580 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 1924, column: 3)
!10581 = !DILocation(line: 1924, column: 3, scope: !10580)
!10582 = !DILocation(line: 1924, column: 3, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 1924, column: 3)
!10584 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1924, column: 3)
!10585 = !DILocation(line: 1924, column: 3, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1924, column: 3)
!10587 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 1924, column: 3)
!10588 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1924, column: 3)
!10589 = !DILocation(line: 1925, column: 3, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 1925, column: 3)
!10591 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 1925, column: 3)
!10592 = !DILocation(line: 1925, column: 3, scope: !10591)
!10593 = !DILocation(line: 1925, column: 3, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 1925, column: 3)
!10595 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 1925, column: 3)
!10596 = !DILocation(line: 1925, column: 3, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 1925, column: 3)
!10598 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1925, column: 3)
!10599 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 1925, column: 3)
!10600 = !DILocation(line: 1927, column: 13, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 1927, column: 7)
!10602 = !DILocation(line: 1927, column: 7, scope: !10534)
!10603 = !DILocation(line: 1929, column: 3, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 1927, column: 29)
!10605 = !DILocation(line: 0, scope: !10534)
!10606 = !DILocation(line: 1931, column: 3, scope: !10534)
!10607 = !DILocation(line: 0, scope: !10546)
!10608 = !DILocation(line: 1932, column: 5, scope: !10546)
!10609 = !DILocation(line: 1938, column: 24, scope: !10554)
!10610 = !DILocation(line: 1938, column: 9, scope: !10554)
!10611 = !DILocation(line: 1938, column: 9, scope: !10546)
!10612 = !DILocation(line: 1932, column: 18, scope: !10546)
!10613 = !DILocation(line: 1939, column: 9, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10554, file: !3, line: 1938, column: 30)
!10615 = !DILocation(line: 1940, column: 5, scope: !10614)
!10616 = !DILocation(line: 1943, column: 47, scope: !10553)
!10617 = !DILocation(line: 1943, column: 13, scope: !10553)
!10618 = !DILocation(line: 1933, column: 11, scope: !10546)
!10619 = !DILocation(line: 1947, column: 15, scope: !10552)
!10620 = !DILocation(line: 1947, column: 11, scope: !10553)
!10621 = !DILocation(line: 1948, column: 19, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 1948, column: 13)
!10623 = !DILocation(line: 1948, column: 13, scope: !10551)
!10624 = !DILocation(line: 1956, column: 9, scope: !10550)
!10625 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10626)
!10626 = distinct !DILocation(line: 1956, column: 9, scope: !10559)
!10627 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10626)
!10628 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10626)
!10629 = !DILocation(line: 1956, column: 9, scope: !10559)
!10630 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10631)
!10631 = distinct !DILocation(line: 1956, column: 9, scope: !10559)
!10632 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10631)
!10633 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10631)
!10634 = !DILocation(line: 1956, column: 9, scope: !10560)
!10635 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !10636)
!10636 = distinct !DILocation(line: 1956, column: 9, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 1956, column: 9)
!10638 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !10636)
!10639 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !10636)
!10640 = !DILocation(line: 1956, column: 9, scope: !10637)
!10641 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10642)
!10642 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10643)
!10643 = distinct !DILocation(line: 1956, column: 9, scope: !10556)
!10644 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10642)
!10645 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10642)
!10646 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10643)
!10647 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10643)
!10648 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10643)
!10649 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10643)
!10650 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10643)
!10651 = !DILocation(line: 1956, column: 9, scope: !10556)
!10652 = !{i32 -2145040126, i32 -2145040113, i32 -2145040088, i32 -2145040064, i32 -2145040039, i32 -2145039964, i32 -2145039939, i32 -2145039795, i32 -2145037572, i32 -2145037483, i32 -2145037362, i32 -2145037267, i32 -2145037166, i32 -2145037139, i32 -2145037056, i32 -2145036967, i32 -2145036846, i32 -2145036746, i32 -2145036640, i32 -2145036532, i32 -2145039507, i32 -2145039454, i32 -2145039423, i32 -2145039392, i32 -2145039371, i32 -2145039349, i32 -2145039300, i32 -2145039279, i32 -2145036449, i32 -2145036360, i32 -2145036239, i32 -2145036140, i32 -2145036034, i32 -2145035932, i32 -2145035899, i32 -2145035826, i32 -2145035758, i32 -2145038905, i32 -2145038852, i32 -2145038821, i32 -2145038790, i32 -2145038769, i32 -2145038747, i32 -2145038698, i32 -2145038677, i32 -2145035703, i32 -2145035614, i32 -2145035493, i32 -2145035394, i32 -2145035288, i32 -2145035186, i32 -2145035153, i32 -2145035070, i32 -2145034981, i32 -2145034860, i32 -2145034760, i32 -2145034734, i32 -2145034631, i32 -2145034605, i32 -2145038419, i32 -2145038352, i32 -2145038327, i32 -2145038263, i32 -2145038147, i32 -2145038122, i32 -2145038097}
!10653 = !DILocation(line: 1957, column: 17, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 1957, column: 13)
!10655 = !DILocation(line: 1957, column: 13, scope: !10551)
!10656 = !DILocation(line: 0, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 1959, column: 16)
!10658 = !DILocation(line: 1958, column: 11, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10654, file: !3, line: 1957, column: 30)
!10660 = !DILocation(line: 2008, column: 3, scope: !10534)
!10661 = !DILocation(line: 1963, column: 7, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 1963, column: 7)
!10663 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 1963, column: 7)
!10664 = !DILocation(line: 1963, column: 7, scope: !10663)
!10665 = !DILocation(line: 1963, column: 7, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 1963, column: 7)
!10667 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 1963, column: 7)
!10668 = !DILocation(line: 1963, column: 7, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 1963, column: 7)
!10670 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 1963, column: 7)
!10671 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1963, column: 7)
!10672 = !DILocation(line: 1964, column: 27, scope: !10553)
!10673 = !DILocation(line: 1970, column: 21, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 1970, column: 9)
!10675 = !DILocation(line: 1970, column: 24, scope: !10674)
!10676 = !DILocation(line: 1970, column: 19, scope: !10674)
!10677 = !DILocation(line: 1970, column: 9, scope: !10546)
!10678 = !DILocation(line: 1934, column: 11, scope: !10546)
!10679 = !DILocation(line: 1972, column: 5, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1970, column: 33)
!10681 = !DILocation(line: 1973, column: 17, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1972, column: 12)
!10683 = !DILocation(line: 1984, column: 14, scope: !10546)
!10684 = !DILocation(line: 0, scope: !10682)
!10685 = !DILocation(line: 1975, column: 9, scope: !10546)
!10686 = !DILocation(line: 1982, column: 38, scope: !10546)
!10687 = !DILocation(line: 1982, column: 5, scope: !10546)
!10688 = !DILocation(line: 1984, column: 11, scope: !10546)
!10689 = !DILocation(line: 1987, column: 5, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 1987, column: 5)
!10691 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 1987, column: 5)
!10692 = !DILocation(line: 1987, column: 5, scope: !10691)
!10693 = !DILocation(line: 1987, column: 5, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 1987, column: 5)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !3, line: 1987, column: 5)
!10696 = !DILocation(line: 1987, column: 5, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 1987, column: 5)
!10698 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1987, column: 5)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 1987, column: 5)
!10700 = !DILocation(line: 1988, column: 15, scope: !10546)
!10701 = !DILocation(line: 1991, column: 9, scope: !10546)
!10702 = !DILocation(line: 1993, column: 7, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 1993, column: 7)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 1993, column: 7)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 1991, column: 34)
!10706 = distinct !DILexicalBlock(scope: !10546, file: !3, line: 1991, column: 9)
!10707 = !DILocation(line: 1993, column: 7, scope: !10704)
!10708 = !DILocation(line: 1993, column: 7, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 1993, column: 7)
!10710 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 1993, column: 7)
!10711 = !DILocation(line: 1993, column: 7, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1993, column: 7)
!10713 = distinct !DILexicalBlock(scope: !10714, file: !3, line: 1993, column: 7)
!10714 = distinct !DILexicalBlock(scope: !10709, file: !3, line: 1993, column: 7)
!10715 = !DILocation(line: 1994, column: 32, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 1994, column: 11)
!10717 = !DILocation(line: 1994, column: 11, scope: !10705)
!10718 = !DILocation(line: 1997, column: 31, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 1994, column: 37)
!10720 = !DILocation(line: 1997, column: 29, scope: !10719)
!10721 = !DILocation(line: 1999, column: 7, scope: !10719)
!10722 = !DILocation(line: 2000, column: 29, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 1999, column: 14)
!10724 = !DILocation(line: 2002, column: 9, scope: !10723)
!10725 = !DILocation(line: 1951, column: 11, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 1948, column: 24)
!10727 = !DILocation(line: 2010, column: 19, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 2010, column: 7)
!10729 = !DILocation(line: 2008, column: 23, scope: !10534)
!10730 = !DILocation(line: 2008, column: 28, scope: !10534)
!10731 = !DILocation(line: 2006, column: 14, scope: !10546)
!10732 = !DILocation(line: 2008, column: 3, scope: !10546)
!10733 = distinct !{!10733, !10606, !10734}
!10734 = !DILocation(line: 2008, column: 50, scope: !10534)
!10735 = !DILocation(line: 2010, column: 14, scope: !10728)
!10736 = !DILocation(line: 2010, column: 7, scope: !10534)
!10737 = !DILocation(line: 2012, column: 29, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10728, file: !3, line: 2010, column: 43)
!10739 = !DILocation(line: 2012, column: 5, scope: !10738)
!10740 = !DILocation(line: 2013, column: 3, scope: !10738)
!10741 = !DILocation(line: 2014, column: 3, scope: !10562)
!10742 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10743)
!10743 = distinct !DILocation(line: 2014, column: 3, scope: !10567)
!10744 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10743)
!10745 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10743)
!10746 = !DILocation(line: 2014, column: 3, scope: !10567)
!10747 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10748)
!10748 = distinct !DILocation(line: 2014, column: 3, scope: !10567)
!10749 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10748)
!10750 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10748)
!10751 = !DILocation(line: 2014, column: 3, scope: !10568)
!10752 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !10753)
!10753 = distinct !DILocation(line: 2014, column: 3, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 2014, column: 3)
!10755 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !10753)
!10756 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !10753)
!10757 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !10753)
!10758 = !DILocation(line: 2014, column: 3, scope: !10754)
!10759 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !10760)
!10760 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !10761)
!10761 = distinct !DILocation(line: 2014, column: 3, scope: !10564)
!10762 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !10760)
!10763 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !10760)
!10764 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !10761)
!10765 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !10761)
!10766 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !10761)
!10767 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !10761)
!10768 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !10761)
!10769 = !DILocation(line: 2014, column: 3, scope: !10564)
!10770 = !{i32 -2145030958, i32 -2145030945, i32 -2145030920, i32 -2145030896, i32 -2145030871, i32 -2145030796, i32 -2145030771, i32 -2145030627, i32 -2145028404, i32 -2145028315, i32 -2145028194, i32 -2145028099, i32 -2145027998, i32 -2145027971, i32 -2145027888, i32 -2145027799, i32 -2145027678, i32 -2145027578, i32 -2145027472, i32 -2145027364, i32 -2145030339, i32 -2145030286, i32 -2145030255, i32 -2145030224, i32 -2145030203, i32 -2145030181, i32 -2145030132, i32 -2145030111, i32 -2145027281, i32 -2145027192, i32 -2145027071, i32 -2145026972, i32 -2145026866, i32 -2145026764, i32 -2145026731, i32 -2145026658, i32 -2145026590, i32 -2145029737, i32 -2145029684, i32 -2145029653, i32 -2145029622, i32 -2145029601, i32 -2145029579, i32 -2145029530, i32 -2145029509, i32 -2145026535, i32 -2145026446, i32 -2145026325, i32 -2145026226, i32 -2145026120, i32 -2145026018, i32 -2145025985, i32 -2145025902, i32 -2145025813, i32 -2145025692, i32 -2145025592, i32 -2145025566, i32 -2145025463, i32 -2145025437, i32 -2145029251, i32 -2145029184, i32 -2145029159, i32 -2145029095, i32 -2145028979, i32 -2145028954, i32 -2145028929}
!10771 = !DILocation(line: 2015, column: 3, scope: !10534)
!10772 = !DILocation(line: 2016, column: 1, scope: !10534)
!10773 = distinct !DISubprogram(name: "lwip_recvfrom_udp_raw", scope: !3, file: !3, line: 2086, type: !10774, isLocal: true, isDefinition: true, scopeLine: 2087, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10776)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{!1283, !1165, !80, !8697, !3709, !80}
!10776 = !{!10777, !10778, !10779, !10780, !10781, !10782, !10783, !10784, !10785, !10786, !10787, !10788, !10789, !10793}
!10777 = !DILocalVariable(name: "sock", arg: 1, scope: !10773, file: !3, line: 2086, type: !1165)
!10778 = !DILocalVariable(name: "flags", arg: 2, scope: !10773, file: !3, line: 2086, type: !80)
!10779 = !DILocalVariable(name: "msg", arg: 3, scope: !10773, file: !3, line: 2086, type: !8697)
!10780 = !DILocalVariable(name: "datagram_len", arg: 4, scope: !10773, file: !3, line: 2086, type: !3709)
!10781 = !DILocalVariable(name: "dbg_s", arg: 5, scope: !10773, file: !3, line: 2086, type: !80)
!10782 = !DILocalVariable(name: "buf", scope: !10773, file: !3, line: 2088, type: !1370)
!10783 = !DILocalVariable(name: "apiflags", scope: !10773, file: !3, line: 2089, type: !156)
!10784 = !DILocalVariable(name: "err", scope: !10773, file: !3, line: 2090, type: !1283)
!10785 = !DILocalVariable(name: "buflen", scope: !10773, file: !3, line: 2091, type: !164)
!10786 = !DILocalVariable(name: "copylen", scope: !10773, file: !3, line: 2091, type: !164)
!10787 = !DILocalVariable(name: "copied", scope: !10773, file: !3, line: 2091, type: !164)
!10788 = !DILocalVariable(name: "i", scope: !10773, file: !3, line: 2092, type: !80)
!10789 = !DILocalVariable(name: "len_left", scope: !10790, file: !3, line: 2125, type: !164)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 2124, column: 64)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 2124, column: 3)
!10792 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2124, column: 3)
!10793 = !DILocalVariable(name: "wrote_msg", scope: !10794, file: !3, line: 2156, type: !156)
!10794 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 2155, column: 25)
!10795 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2155, column: 7)
!10796 = !DILocation(line: 2086, column: 41, scope: !10773)
!10797 = !DILocation(line: 2086, column: 51, scope: !10773)
!10798 = !DILocation(line: 2086, column: 73, scope: !10773)
!10799 = !DILocation(line: 2086, column: 85, scope: !10773)
!10800 = !DILocation(line: 2086, column: 103, scope: !10773)
!10801 = !DILocation(line: 2088, column: 3, scope: !10773)
!10802 = !DILocation(line: 2095, column: 3, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 2095, column: 3)
!10804 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2095, column: 3)
!10805 = !DILocation(line: 2095, column: 3, scope: !10804)
!10806 = !DILocation(line: 2095, column: 3, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 2095, column: 3)
!10808 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 2095, column: 3)
!10809 = !DILocation(line: 2095, column: 3, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 2095, column: 3)
!10811 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 2095, column: 3)
!10812 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 2095, column: 3)
!10813 = !DILocation(line: 2097, column: 7, scope: !10773)
!10814 = !DILocation(line: 2105, column: 24, scope: !10773)
!10815 = !DILocation(line: 2088, column: 18, scope: !10773)
!10816 = !DILocation(line: 2105, column: 7, scope: !10773)
!10817 = !DILocation(line: 2106, column: 11, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2106, column: 7)
!10819 = !DILocation(line: 2106, column: 7, scope: !10773)
!10820 = !DILocation(line: 2089, column: 8, scope: !10773)
!10821 = !DILocation(line: 2109, column: 51, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 2106, column: 20)
!10823 = !DILocation(line: 2109, column: 11, scope: !10822)
!10824 = !DILocation(line: 2090, column: 9, scope: !10773)
!10825 = !DILocation(line: 2113, column: 13, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 2113, column: 9)
!10827 = !DILocation(line: 2113, column: 9, scope: !10822)
!10828 = !DILocation(line: 2116, column: 5, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 2116, column: 5)
!10830 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 2116, column: 5)
!10831 = !DILocation(line: 2116, column: 5, scope: !10830)
!10832 = !DILocation(line: 2116, column: 5, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 2116, column: 5)
!10834 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 2116, column: 5)
!10835 = !DILocation(line: 2116, column: 5, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 2116, column: 5)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 2116, column: 5)
!10838 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 2116, column: 5)
!10839 = !DILocation(line: 2117, column: 27, scope: !10822)
!10840 = !DILocation(line: 2118, column: 3, scope: !10822)
!10841 = !DILocation(line: 2119, column: 12, scope: !10773)
!10842 = !DILocation(line: 2119, column: 17, scope: !10773)
!10843 = !DILocation(line: 2119, column: 20, scope: !10773)
!10844 = !DILocation(line: 2091, column: 9, scope: !10773)
!10845 = !DILocation(line: 2091, column: 26, scope: !10773)
!10846 = !DILocation(line: 2092, column: 7, scope: !10773)
!10847 = !DILocation(line: 2124, column: 8, scope: !10792)
!10848 = !DILocation(line: 2124, column: 25, scope: !10791)
!10849 = !DILocation(line: 2124, column: 18, scope: !10791)
!10850 = !DILocation(line: 2124, column: 37, scope: !10791)
!10851 = !DILocation(line: 2124, column: 48, scope: !10791)
!10852 = !DILocation(line: 2124, column: 3, scope: !10792)
!10853 = !DILocation(line: 2125, column: 37, scope: !10790)
!10854 = !DILocation(line: 2125, column: 11, scope: !10790)
!10855 = !DILocation(line: 2126, column: 14, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 2126, column: 9)
!10857 = !DILocation(line: 2126, column: 25, scope: !10856)
!10858 = !DILocation(line: 2126, column: 35, scope: !10856)
!10859 = !DILocation(line: 2126, column: 33, scope: !10856)
!10860 = !DILocation(line: 2126, column: 9, scope: !10790)
!10861 = !DILocation(line: 2091, column: 17, scope: !10773)
!10862 = !DILocation(line: 2129, column: 17, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 2128, column: 12)
!10864 = !DILocation(line: 2134, column: 23, scope: !10790)
!10865 = !DILocation(line: 2134, column: 28, scope: !10790)
!10866 = !DILocation(line: 2134, column: 55, scope: !10790)
!10867 = !DILocation(line: 2134, column: 5, scope: !10790)
!10868 = !DILocation(line: 2135, column: 29, scope: !10790)
!10869 = !DILocation(line: 2124, column: 60, scope: !10791)
!10870 = !DILocation(line: 2124, column: 3, scope: !10791)
!10871 = distinct !{!10871, !10852, !10872}
!10872 = !DILocation(line: 2136, column: 3, scope: !10792)
!10873 = !DILocation(line: 2140, column: 12, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2140, column: 7)
!10875 = !DILocation(line: 2140, column: 7, scope: !10874)
!10876 = !DILocation(line: 2140, column: 21, scope: !10874)
!10877 = !DILocation(line: 2140, column: 29, scope: !10874)
!10878 = !DILocation(line: 2140, column: 24, scope: !10874)
!10879 = !DILocation(line: 2140, column: 7, scope: !10773)
!10880 = !DILocation(line: 2146, column: 23, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 2146, column: 9)
!10882 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 2142, column: 3)
!10883 = !DILocation(line: 2146, column: 9, scope: !10882)
!10884 = !DILocation(line: 2147, column: 33, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 2146, column: 44)
!10886 = !DILocation(line: 2147, column: 39, scope: !10885)
!10887 = !DILocation(line: 2147, column: 61, scope: !10885)
!10888 = !DILocation(line: 2148, column: 27, scope: !10885)
!10889 = !DILocation(line: 2147, column: 7, scope: !10885)
!10890 = !DILocation(line: 2149, column: 5, scope: !10885)
!10891 = !DILocation(line: 2153, column: 8, scope: !10773)
!10892 = !DILocation(line: 2153, column: 18, scope: !10773)
!10893 = !DILocation(line: 2155, column: 12, scope: !10795)
!10894 = !DILocation(line: 2155, column: 7, scope: !10795)
!10895 = !DILocation(line: 2155, column: 7, scope: !10773)
!10896 = !DILocation(line: 2156, column: 10, scope: !10794)
!10897 = !DILocation(line: 2180, column: 9, scope: !10794)
!10898 = !DILocation(line: 2181, column: 12, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !3, line: 2180, column: 21)
!10900 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 2180, column: 9)
!10901 = !DILocation(line: 2181, column: 27, scope: !10899)
!10902 = !DILocation(line: 2182, column: 5, scope: !10899)
!10903 = !DILocation(line: 2183, column: 3, scope: !10794)
!10904 = !DILocation(line: 2186, column: 14, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2186, column: 7)
!10906 = !DILocation(line: 2186, column: 26, scope: !10905)
!10907 = !DILocation(line: 2186, column: 7, scope: !10773)
!10908 = !DILocation(line: 2187, column: 27, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 2186, column: 32)
!10910 = !DILocation(line: 2188, column: 19, scope: !10909)
!10911 = !DILocation(line: 2188, column: 5, scope: !10909)
!10912 = !DILocation(line: 2189, column: 3, scope: !10909)
!10913 = !DILocation(line: 2190, column: 7, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2190, column: 7)
!10915 = !DILocation(line: 2190, column: 7, scope: !10773)
!10916 = !DILocation(line: 2191, column: 19, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 2190, column: 21)
!10918 = !DILocation(line: 2192, column: 3, scope: !10917)
!10919 = !DILocation(line: 0, scope: !10773)
!10920 = !DILocation(line: 0, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 2113, column: 24)
!10922 = !DILocation(line: 2194, column: 1, scope: !10773)
!10923 = distinct !DISubprogram(name: "lwip_read", scope: !3, file: !3, line: 2250, type: !10924, isLocal: false, isDefinition: true, scopeLine: 2251, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10926)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!206, !80, !143, !216}
!10926 = !{!10927, !10928, !10929}
!10927 = !DILocalVariable(name: "s", arg: 1, scope: !10923, file: !3, line: 2250, type: !80)
!10928 = !DILocalVariable(name: "mem", arg: 2, scope: !10923, file: !3, line: 2250, type: !143)
!10929 = !DILocalVariable(name: "len", arg: 3, scope: !10923, file: !3, line: 2250, type: !216)
!10930 = !DILocation(line: 2250, column: 15, scope: !10923)
!10931 = !DILocation(line: 2250, column: 24, scope: !10923)
!10932 = !DILocation(line: 2250, column: 36, scope: !10923)
!10933 = !DILocation(line: 2252, column: 10, scope: !10923)
!10934 = !DILocation(line: 2252, column: 3, scope: !10923)
!10935 = distinct !DISubprogram(name: "event_callback", scope: !3, file: !3, line: 3475, type: !1364, isLocal: true, isDefinition: true, scopeLine: 3476, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10936)
!10936 = !{!10937, !10938, !10939, !10940, !10941, !10942, !10943, !10944, !10947, !10948}
!10937 = !DILocalVariable(name: "conn", arg: 1, scope: !10935, file: !3, line: 3475, type: !1169)
!10938 = !DILocalVariable(name: "evt", arg: 2, scope: !10935, file: !3, line: 3475, type: !71)
!10939 = !DILocalVariable(name: "len", arg: 3, scope: !10935, file: !3, line: 3475, type: !164)
!10940 = !DILocalVariable(name: "s", scope: !10935, file: !3, line: 3477, type: !80)
!10941 = !DILocalVariable(name: "check_waiters", scope: !10935, file: !3, line: 3477, type: !80)
!10942 = !DILocalVariable(name: "sock", scope: !10935, file: !3, line: 3478, type: !1165)
!10943 = !DILocalVariable(name: "lev", scope: !10935, file: !3, line: 3479, type: !134)
!10944 = !DILocalVariable(name: "has_recvevent", scope: !10945, file: !3, line: 3548, type: !80)
!10945 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 3546, column: 46)
!10946 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 3546, column: 7)
!10947 = !DILocalVariable(name: "has_sendevent", scope: !10945, file: !3, line: 3548, type: !80)
!10948 = !DILocalVariable(name: "has_errevent", scope: !10945, file: !3, line: 3548, type: !80)
!10949 = !DILocation(line: 3475, column: 32, scope: !10935)
!10950 = !DILocation(line: 3475, column: 55, scope: !10935)
!10951 = !DILocation(line: 3475, column: 66, scope: !10935)
!10952 = !DILocation(line: 3484, column: 7, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 3484, column: 7)
!10954 = !DILocation(line: 3484, column: 7, scope: !10935)
!10955 = !DILocation(line: 3485, column: 15, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 3484, column: 13)
!10957 = !DILocation(line: 3477, column: 7, scope: !10935)
!10958 = !DILocation(line: 3486, column: 11, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10956, file: !3, line: 3486, column: 9)
!10960 = !DILocation(line: 3486, column: 9, scope: !10956)
!10961 = !DILocation(line: 3492, column: 7, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10963, file: !3, line: 3492, column: 7)
!10963 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3486, column: 16)
!10964 = !DILocation(line: 3479, column: 3, scope: !10935)
!10965 = !DILocation(line: 3493, column: 17, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10963, file: !3, line: 3493, column: 11)
!10967 = !DILocation(line: 3493, column: 24, scope: !10966)
!10968 = !DILocation(line: 3493, column: 11, scope: !10963)
!10969 = !DILocation(line: 3494, column: 17, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 3494, column: 13)
!10971 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 3493, column: 29)
!10972 = !DILocation(line: 3494, column: 13, scope: !10971)
!10973 = !DILocation(line: 3497, column: 23, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 3494, column: 41)
!10975 = !DILocation(line: 3498, column: 9, scope: !10974)
!10976 = !DILocation(line: 3499, column: 9, scope: !10971)
!10977 = !DILocation(line: 3500, column: 9, scope: !10971)
!10978 = !DILocation(line: 3503, column: 7, scope: !10963)
!10979 = !DILocation(line: 3504, column: 5, scope: !10963)
!10980 = !DILocation(line: 0, scope: !10956)
!10981 = !DILocation(line: 3506, column: 12, scope: !10956)
!10982 = !DILocation(line: 3478, column: 21, scope: !10935)
!10983 = !DILocation(line: 3507, column: 10, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10956, file: !3, line: 3507, column: 9)
!10985 = !DILocation(line: 3507, column: 9, scope: !10956)
!10986 = !DILocation(line: 3477, column: 10, scope: !10935)
!10987 = !DILocation(line: 3515, column: 3, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 3515, column: 3)
!10989 = !DILocation(line: 3517, column: 3, scope: !10935)
!10990 = !DILocation(line: 3519, column: 13, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 3517, column: 16)
!10992 = !DILocation(line: 3519, column: 21, scope: !10991)
!10993 = !DILocation(line: 3520, column: 26, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3520, column: 11)
!10995 = !DILocation(line: 3520, column: 11, scope: !10991)
!10996 = !DILocation(line: 3525, column: 13, scope: !10991)
!10997 = !DILocation(line: 3525, column: 21, scope: !10991)
!10998 = !DILocation(line: 3527, column: 7, scope: !10991)
!10999 = !DILocation(line: 3529, column: 17, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3529, column: 11)
!11001 = !DILocation(line: 3529, column: 11, scope: !11000)
!11002 = !DILocation(line: 3529, column: 11, scope: !10991)
!11003 = !DILocation(line: 3531, column: 7, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 3529, column: 28)
!11005 = !DILocation(line: 0, scope: !10935)
!11006 = !DILocation(line: 3532, column: 23, scope: !10991)
!11007 = !DILocation(line: 3533, column: 7, scope: !10991)
!11008 = !DILocation(line: 3535, column: 13, scope: !10991)
!11009 = !DILocation(line: 3535, column: 23, scope: !10991)
!11010 = !DILocation(line: 3537, column: 7, scope: !10991)
!11011 = !DILocation(line: 3539, column: 13, scope: !10991)
!11012 = !DILocation(line: 3539, column: 22, scope: !10991)
!11013 = !DILocation(line: 3540, column: 7, scope: !10991)
!11014 = !DILocation(line: 3542, column: 7, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 3542, column: 7)
!11016 = distinct !DILexicalBlock(scope: !11017, file: !3, line: 3542, column: 7)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 3542, column: 7)
!11018 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3542, column: 7)
!11019 = !DILocation(line: 3542, column: 7, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 3542, column: 7)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 3542, column: 7)
!11022 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 3542, column: 7)
!11023 = !DILocation(line: 0, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 3520, column: 31)
!11025 = !DILocation(line: 3546, column: 28, scope: !10946)
!11026 = !DILocation(line: 0, scope: !10991)
!11027 = !DILocation(line: 3546, column: 13, scope: !10946)
!11028 = !DILocation(line: 3546, column: 7, scope: !10946)
!11029 = !DILocation(line: 3546, column: 31, scope: !10946)
!11030 = !DILocation(line: 3549, column: 27, scope: !10945)
!11031 = !DILocation(line: 3550, column: 27, scope: !10945)
!11032 = !DILocation(line: 3551, column: 26, scope: !10945)
!11033 = !DILocation(line: 3552, column: 5, scope: !10945)
!11034 = !DILocalVariable(name: "s", arg: 1, scope: !11035, file: !3, line: 3574, type: !80)
!11035 = distinct !DISubprogram(name: "select_check_waiters", scope: !3, file: !3, line: 3574, type: !11036, isLocal: true, isDefinition: true, scopeLine: 3575, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11038)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{null, !80, !80, !80, !80}
!11038 = !{!11034, !11039, !11040, !11041, !11042, !11043}
!11039 = !DILocalVariable(name: "has_recvevent", arg: 2, scope: !11035, file: !3, line: 3574, type: !80)
!11040 = !DILocalVariable(name: "has_sendevent", arg: 3, scope: !11035, file: !3, line: 3574, type: !80)
!11041 = !DILocalVariable(name: "has_errevent", arg: 4, scope: !11035, file: !3, line: 3574, type: !80)
!11042 = !DILocalVariable(name: "scb", scope: !11035, file: !3, line: 3576, type: !238)
!11043 = !DILocalVariable(name: "do_signal", scope: !11044, file: !3, line: 3593, type: !80)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !3, line: 3591, column: 34)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 3591, column: 9)
!11046 = distinct !DILexicalBlock(scope: !11047, file: !3, line: 3590, column: 60)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 3590, column: 3)
!11048 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 3590, column: 3)
!11049 = !DILocation(line: 3574, column: 38, scope: !11035, inlinedAt: !11050)
!11050 = distinct !DILocation(line: 3554, column: 5, scope: !10945)
!11051 = !DILocation(line: 3590, column: 14, scope: !11048, inlinedAt: !11050)
!11052 = !DILocation(line: 3576, column: 26, scope: !11035, inlinedAt: !11050)
!11053 = !DILocation(line: 3590, column: 8, scope: !11048, inlinedAt: !11050)
!11054 = !DILocation(line: 3590, column: 34, scope: !11047, inlinedAt: !11050)
!11055 = !DILocation(line: 3590, column: 3, scope: !11048, inlinedAt: !11050)
!11056 = !DILocation(line: 3551, column: 35, scope: !10945)
!11057 = !DILocation(line: 3550, column: 37, scope: !10945)
!11058 = !DILocation(line: 3549, column: 36, scope: !10945)
!11059 = !DILocation(line: 3591, column: 14, scope: !11045, inlinedAt: !11050)
!11060 = !{!4117, !1409, i64 52}
!11061 = !DILocation(line: 3591, column: 28, scope: !11045, inlinedAt: !11050)
!11062 = !DILocation(line: 3591, column: 9, scope: !11046, inlinedAt: !11050)
!11063 = !DILocation(line: 3593, column: 11, scope: !11044, inlinedAt: !11050)
!11064 = !DILocation(line: 3595, column: 16, scope: !11065, inlinedAt: !11050)
!11065 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 3595, column: 11)
!11066 = !DILocation(line: 3595, column: 25, scope: !11065, inlinedAt: !11050)
!11067 = !DILocation(line: 3595, column: 11, scope: !11044, inlinedAt: !11050)
!11068 = !DILocation(line: 0, scope: !11069, inlinedAt: !11050)
!11069 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 3595, column: 34)
!11070 = !DILocalVariable(name: "scb", arg: 1, scope: !11071, file: !3, line: 3436, type: !11074)
!11071 = distinct !DISubprogram(name: "lwip_poll_should_wake", scope: !3, file: !3, line: 3436, type: !11072, isLocal: true, isDefinition: true, scopeLine: 3437, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11076)
!11072 = !DISubroutineType(types: !11073)
!11073 = !{!80, !11074, !80, !80, !80, !80}
!11074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11075, size: 64)
!11075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!11076 = !{!11070, !11077, !11078, !11079, !11080, !11081, !11082}
!11077 = !DILocalVariable(name: "fd", arg: 2, scope: !11071, file: !3, line: 3436, type: !80)
!11078 = !DILocalVariable(name: "has_recvevent", arg: 3, scope: !11071, file: !3, line: 3436, type: !80)
!11079 = !DILocalVariable(name: "has_sendevent", arg: 4, scope: !11071, file: !3, line: 3436, type: !80)
!11080 = !DILocalVariable(name: "has_errevent", arg: 5, scope: !11071, file: !3, line: 3436, type: !80)
!11081 = !DILocalVariable(name: "fdi", scope: !11071, file: !3, line: 3438, type: !265)
!11082 = !DILocalVariable(name: "pollfd", scope: !11083, file: !3, line: 3440, type: !11086)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 3439, column: 46)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 3439, column: 3)
!11085 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 3439, column: 3)
!11086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11087, size: 64)
!11087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!11088 = !DILocation(line: 3436, column: 52, scope: !11071, inlinedAt: !11089)
!11089 = distinct !DILocation(line: 3596, column: 21, scope: !11069, inlinedAt: !11050)
!11090 = !DILocation(line: 3436, column: 61, scope: !11071, inlinedAt: !11089)
!11091 = !DILocation(line: 3438, column: 10, scope: !11071, inlinedAt: !11089)
!11092 = !DILocation(line: 3439, column: 28, scope: !11084, inlinedAt: !11089)
!11093 = !DILocation(line: 3439, column: 21, scope: !11084, inlinedAt: !11089)
!11094 = !DILocation(line: 3439, column: 3, scope: !11085, inlinedAt: !11089)
!11095 = !DILocation(line: 3441, column: 17, scope: !11096, inlinedAt: !11089)
!11096 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 3441, column: 9)
!11097 = !DILocation(line: 3441, column: 20, scope: !11096, inlinedAt: !11089)
!11098 = !DILocation(line: 3441, column: 9, scope: !11083, inlinedAt: !11089)
!11099 = !DILocation(line: 3445, column: 25, scope: !11100, inlinedAt: !11089)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 3445, column: 11)
!11101 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 3441, column: 27)
!11102 = !DILocation(line: 3445, column: 37, scope: !11100, inlinedAt: !11089)
!11103 = !DILocation(line: 3445, column: 44, scope: !11100, inlinedAt: !11089)
!11104 = !DILocation(line: 3445, column: 54, scope: !11100, inlinedAt: !11089)
!11105 = !DILocation(line: 3445, column: 11, scope: !11101, inlinedAt: !11089)
!11106 = !DILocation(line: 3448, column: 25, scope: !11107, inlinedAt: !11089)
!11107 = distinct !DILexicalBlock(scope: !11101, file: !3, line: 3448, column: 11)
!11108 = !DILocation(line: 3448, column: 37, scope: !11107, inlinedAt: !11089)
!11109 = !DILocation(line: 3448, column: 44, scope: !11107, inlinedAt: !11089)
!11110 = !DILocation(line: 3448, column: 55, scope: !11107, inlinedAt: !11089)
!11111 = !DILocation(line: 3448, column: 11, scope: !11101, inlinedAt: !11089)
!11112 = !DILocation(line: 3451, column: 11, scope: !11101, inlinedAt: !11089)
!11113 = !DILocation(line: 3456, column: 3, scope: !11084, inlinedAt: !11089)
!11114 = !DILocation(line: 3439, column: 42, scope: !11084, inlinedAt: !11089)
!11115 = !DILocation(line: 3439, column: 3, scope: !11084, inlinedAt: !11089)
!11116 = distinct !{!11116, !11117, !11118}
!11117 = !DILocation(line: 3439, column: 3, scope: !11085)
!11118 = !DILocation(line: 3456, column: 3, scope: !11085)
!11119 = !DILocation(line: 3605, column: 13, scope: !11120, inlinedAt: !11050)
!11120 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 3603, column: 7)
!11121 = !DILocation(line: 3606, column: 20, scope: !11122, inlinedAt: !11050)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 3606, column: 15)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3605, column: 28)
!11124 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 3605, column: 13)
!11125 = !DILocation(line: 3606, column: 15, scope: !11122, inlinedAt: !11050)
!11126 = !DILocation(line: 3606, column: 28, scope: !11122, inlinedAt: !11050)
!11127 = !DILocation(line: 3606, column: 31, scope: !11122, inlinedAt: !11050)
!11128 = !DILocation(line: 3606, column: 15, scope: !11123, inlinedAt: !11050)
!11129 = !DILocation(line: 3610, column: 13, scope: !11120, inlinedAt: !11050)
!11130 = !DILocation(line: 3611, column: 34, scope: !11131, inlinedAt: !11050)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 3611, column: 15)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 3610, column: 28)
!11133 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 3610, column: 13)
!11134 = !DILocation(line: 3611, column: 29, scope: !11131, inlinedAt: !11050)
!11135 = !DILocation(line: 3611, column: 43, scope: !11131, inlinedAt: !11050)
!11136 = !DILocation(line: 3611, column: 46, scope: !11131, inlinedAt: !11050)
!11137 = !DILocation(line: 3611, column: 15, scope: !11132, inlinedAt: !11050)
!11138 = !DILocation(line: 3615, column: 13, scope: !11120, inlinedAt: !11050)
!11139 = !DILocation(line: 3616, column: 34, scope: !11140, inlinedAt: !11050)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !3, line: 3616, column: 15)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !3, line: 3615, column: 27)
!11142 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 3615, column: 13)
!11143 = !DILocation(line: 3616, column: 29, scope: !11140, inlinedAt: !11050)
!11144 = !DILocation(line: 3616, column: 44, scope: !11140, inlinedAt: !11050)
!11145 = !DILocation(line: 3616, column: 47, scope: !11140, inlinedAt: !11050)
!11146 = !DILocation(line: 3616, column: 15, scope: !11141, inlinedAt: !11050)
!11147 = !DILocation(line: 0, scope: !10945)
!11148 = !DILocation(line: 3622, column: 11, scope: !11044, inlinedAt: !11050)
!11149 = !DILocation(line: 3457, column: 3, scope: !11071, inlinedAt: !11089)
!11150 = !DILocation(line: 3458, column: 1, scope: !11071, inlinedAt: !11089)
!11151 = !DILocation(line: 3597, column: 7, scope: !11069, inlinedAt: !11050)
!11152 = !DILocation(line: 3623, column: 28, scope: !11153, inlinedAt: !11050)
!11153 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 3622, column: 22)
!11154 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 3622, column: 11)
!11155 = !DILocation(line: 3627, column: 24, scope: !11153, inlinedAt: !11050)
!11156 = !DILocation(line: 3627, column: 9, scope: !11153, inlinedAt: !11050)
!11157 = !DILocation(line: 3628, column: 7, scope: !11153, inlinedAt: !11050)
!11158 = !DILocation(line: 3629, column: 5, scope: !11044, inlinedAt: !11050)
!11159 = !DILocation(line: 3590, column: 54, scope: !11047, inlinedAt: !11050)
!11160 = !DILocation(line: 3590, column: 3, scope: !11047, inlinedAt: !11050)
!11161 = distinct !{!11161, !11162, !11163}
!11162 = !DILocation(line: 3590, column: 3, scope: !11048)
!11163 = !DILocation(line: 3631, column: 3, scope: !11048)
!11164 = !DILocation(line: 3646, column: 1, scope: !11035, inlinedAt: !11050)
!11165 = !DILocation(line: 3555, column: 3, scope: !10945)
!11166 = !DILocation(line: 3556, column: 5, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 3555, column: 10)
!11168 = !DILocation(line: 3559, column: 1, scope: !10935)
!11169 = !DILocation(line: 0, scope: !10971)
!11170 = distinct !DISubprogram(name: "lwip_write", scope: !3, file: !3, line: 2744, type: !11171, isLocal: false, isDefinition: true, scopeLine: 2745, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11173)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{!206, !80, !225, !216}
!11173 = !{!11174, !11175, !11176}
!11174 = !DILocalVariable(name: "s", arg: 1, scope: !11170, file: !3, line: 2744, type: !80)
!11175 = !DILocalVariable(name: "data", arg: 2, scope: !11170, file: !3, line: 2744, type: !225)
!11176 = !DILocalVariable(name: "size", arg: 3, scope: !11170, file: !3, line: 2744, type: !216)
!11177 = !DILocation(line: 2744, column: 16, scope: !11170)
!11178 = !DILocation(line: 2744, column: 31, scope: !11170)
!11179 = !DILocation(line: 2744, column: 44, scope: !11170)
!11180 = !DILocation(line: 2746, column: 10, scope: !11170)
!11181 = !DILocation(line: 2746, column: 3, scope: !11170)
!11182 = distinct !DISubprogram(name: "lwip_selscan", scope: !3, file: !3, line: 2833, type: !11183, isLocal: true, isDefinition: true, scopeLine: 2835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11185)
!11183 = !DISubroutineType(types: !11184)
!11184 = !{!80, !80, !245, !245, !245, !245, !245, !245}
!11185 = !{!11186, !11187, !11188, !11189, !11190, !11191, !11192, !11193, !11194, !11195, !11196, !11197, !11198, !11199, !11200, !11202, !11203, !11205, !11206, !11208, !11209, !11215, !11216, !11217}
!11186 = !DILocalVariable(name: "maxfdp1", arg: 1, scope: !11182, file: !3, line: 2833, type: !80)
!11187 = !DILocalVariable(name: "readset_in", arg: 2, scope: !11182, file: !3, line: 2833, type: !245)
!11188 = !DILocalVariable(name: "writeset_in", arg: 3, scope: !11182, file: !3, line: 2833, type: !245)
!11189 = !DILocalVariable(name: "exceptset_in", arg: 4, scope: !11182, file: !3, line: 2833, type: !245)
!11190 = !DILocalVariable(name: "readset_out", arg: 5, scope: !11182, file: !3, line: 2834, type: !245)
!11191 = !DILocalVariable(name: "writeset_out", arg: 6, scope: !11182, file: !3, line: 2834, type: !245)
!11192 = !DILocalVariable(name: "exceptset_out", arg: 7, scope: !11182, file: !3, line: 2834, type: !245)
!11193 = !DILocalVariable(name: "i", scope: !11182, file: !3, line: 2836, type: !80)
!11194 = !DILocalVariable(name: "nready", scope: !11182, file: !3, line: 2836, type: !80)
!11195 = !DILocalVariable(name: "lreadset", scope: !11182, file: !3, line: 2837, type: !246)
!11196 = !DILocalVariable(name: "lwriteset", scope: !11182, file: !3, line: 2837, type: !246)
!11197 = !DILocalVariable(name: "lexceptset", scope: !11182, file: !3, line: 2837, type: !246)
!11198 = !DILocalVariable(name: "sock", scope: !11182, file: !3, line: 2838, type: !1165)
!11199 = !DILocalVariable(name: "lev", scope: !11182, file: !3, line: 2839, type: !134)
!11200 = !DILocalVariable(name: "__i", scope: !11201, file: !3, line: 2841, type: !216)
!11201 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2841, column: 3)
!11202 = !DILocalVariable(name: "__tmp", scope: !11201, file: !3, line: 2841, type: !144)
!11203 = !DILocalVariable(name: "__i", scope: !11204, file: !3, line: 2842, type: !216)
!11204 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2842, column: 3)
!11205 = !DILocalVariable(name: "__tmp", scope: !11204, file: !3, line: 2842, type: !144)
!11206 = !DILocalVariable(name: "__i", scope: !11207, file: !3, line: 2843, type: !216)
!11207 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2843, column: 3)
!11208 = !DILocalVariable(name: "__tmp", scope: !11207, file: !3, line: 2843, type: !144)
!11209 = !DILocalVariable(name: "lastdata", scope: !11210, file: !3, line: 2858, type: !143)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 2857, column: 23)
!11211 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2857, column: 9)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 2847, column: 50)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !3, line: 2847, column: 3)
!11214 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2847, column: 3)
!11215 = !DILocalVariable(name: "rcvevent", scope: !11210, file: !3, line: 2859, type: !146)
!11216 = !DILocalVariable(name: "sendevent", scope: !11210, file: !3, line: 2860, type: !164)
!11217 = !DILocalVariable(name: "errevent", scope: !11210, file: !3, line: 2861, type: !164)
!11218 = !DILocation(line: 2833, column: 18, scope: !11182)
!11219 = !DILocation(line: 2833, column: 35, scope: !11182)
!11220 = !DILocation(line: 2833, column: 55, scope: !11182)
!11221 = !DILocation(line: 2833, column: 76, scope: !11182)
!11222 = !DILocation(line: 2834, column: 22, scope: !11182)
!11223 = !DILocation(line: 2834, column: 43, scope: !11182)
!11224 = !DILocation(line: 2834, column: 65, scope: !11182)
!11225 = !DILocation(line: 2836, column: 10, scope: !11182)
!11226 = !DILocation(line: 2837, column: 3, scope: !11182)
!11227 = !DILocation(line: 2841, column: 3, scope: !11201)
!11228 = !DILocation(line: 2841, column: 3, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2841, column: 3)
!11230 = !DILocation(line: 2841, column: 3, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 2841, column: 3)
!11232 = !DILocation(line: 2842, column: 3, scope: !11204)
!11233 = !DILocation(line: 2842, column: 3, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 2842, column: 3)
!11235 = !DILocation(line: 2842, column: 3, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 2842, column: 3)
!11237 = !DILocation(line: 2843, column: 3, scope: !11207)
!11238 = !DILocation(line: 2843, column: 3, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 2843, column: 3)
!11240 = !DILocation(line: 2843, column: 3, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 2843, column: 3)
!11242 = !DILocation(line: 2836, column: 7, scope: !11182)
!11243 = !DILocation(line: 2847, column: 8, scope: !11214)
!11244 = !DILocation(line: 2847, column: 34, scope: !11213)
!11245 = !DILocation(line: 2847, column: 3, scope: !11214)
!11246 = !DILocation(line: 2891, column: 18, scope: !11182)
!11247 = !DILocation(line: 2892, column: 19, scope: !11182)
!11248 = !DILocation(line: 2893, column: 20, scope: !11182)
!11249 = !DILocation(line: 2867, column: 9, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 2866, column: 92)
!11251 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 2866, column: 11)
!11252 = !DILocation(line: 2873, column: 9, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 2872, column: 72)
!11254 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 2872, column: 11)
!11255 = !DILocation(line: 2879, column: 9, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 2878, column: 73)
!11257 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 2878, column: 11)
!11258 = !DILocation(line: 2849, column: 22, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2849, column: 9)
!11260 = !DILocation(line: 2849, column: 25, scope: !11259)
!11261 = !DILocation(line: 2849, column: 50, scope: !11259)
!11262 = !DILocation(line: 2850, column: 23, scope: !11259)
!11263 = !DILocation(line: 2850, column: 26, scope: !11259)
!11264 = !DILocation(line: 2850, column: 52, scope: !11259)
!11265 = !DILocation(line: 2851, column: 24, scope: !11259)
!11266 = !DILocation(line: 2851, column: 27, scope: !11259)
!11267 = !DILocation(line: 2849, column: 9, scope: !11212)
!11268 = !DILocation(line: 2855, column: 5, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2855, column: 5)
!11270 = !DILocation(line: 2839, column: 3, scope: !11182)
!11271 = !DILocation(line: 1440, column: 33, scope: !5210, inlinedAt: !11272)
!11272 = distinct !DILocation(line: 2856, column: 12, scope: !11212)
!11273 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !11274)
!11274 = distinct !DILocation(line: 1442, column: 27, scope: !5210, inlinedAt: !11272)
!11275 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !11274)
!11276 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !11274)
!11277 = !DILocation(line: 1416, column: 3, scope: !5218, inlinedAt: !11274)
!11278 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !11274)
!11279 = !DILocation(line: 1448, column: 3, scope: !5210, inlinedAt: !11272)
!11280 = !DILocation(line: 2857, column: 9, scope: !11212)
!11281 = !DILocation(line: 2858, column: 30, scope: !11210)
!11282 = !DILocation(line: 2858, column: 39, scope: !11210)
!11283 = !DILocation(line: 2858, column: 13, scope: !11210)
!11284 = !DILocation(line: 2859, column: 30, scope: !11210)
!11285 = !DILocation(line: 2859, column: 13, scope: !11210)
!11286 = !DILocation(line: 2860, column: 31, scope: !11210)
!11287 = !DILocation(line: 2860, column: 13, scope: !11210)
!11288 = !DILocation(line: 2861, column: 30, scope: !11210)
!11289 = !DILocation(line: 2861, column: 13, scope: !11210)
!11290 = !DILocation(line: 2862, column: 7, scope: !11210)
!11291 = !DILocation(line: 2866, column: 22, scope: !11251)
!11292 = !DILocation(line: 2866, column: 25, scope: !11251)
!11293 = !DILocation(line: 2866, column: 49, scope: !11251)
!11294 = !DILocation(line: 2866, column: 63, scope: !11251)
!11295 = !DILocation(line: 2866, column: 72, scope: !11251)
!11296 = !DILocation(line: 2866, column: 85, scope: !11251)
!11297 = !DILocation(line: 2866, column: 11, scope: !11210)
!11298 = !DILocation(line: 2869, column: 15, scope: !11250)
!11299 = !DILocation(line: 2870, column: 7, scope: !11250)
!11300 = !DILocation(line: 0, scope: !11182)
!11301 = !DILocation(line: 2872, column: 23, scope: !11254)
!11302 = !DILocation(line: 2872, column: 26, scope: !11254)
!11303 = !DILocation(line: 2872, column: 51, scope: !11254)
!11304 = !DILocation(line: 2872, column: 65, scope: !11254)
!11305 = !DILocation(line: 2872, column: 11, scope: !11210)
!11306 = !DILocation(line: 2875, column: 15, scope: !11253)
!11307 = !DILocation(line: 2876, column: 7, scope: !11253)
!11308 = !DILocation(line: 0, scope: !11250)
!11309 = !DILocation(line: 2878, column: 24, scope: !11257)
!11310 = !DILocation(line: 2878, column: 27, scope: !11257)
!11311 = !DILocation(line: 2878, column: 53, scope: !11257)
!11312 = !DILocation(line: 2878, column: 66, scope: !11257)
!11313 = !DILocation(line: 2878, column: 11, scope: !11210)
!11314 = !DILocation(line: 2881, column: 15, scope: !11256)
!11315 = !DILocation(line: 2882, column: 7, scope: !11256)
!11316 = !DILocation(line: 0, scope: !11253)
!11317 = !DILocation(line: 2889, column: 3, scope: !11212)
!11318 = !DILocation(line: 1414, column: 5, scope: !6390, inlinedAt: !11274)
!11319 = !DILocation(line: 2885, column: 7, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 2884, column: 12)
!11321 = !DILocation(line: 2887, column: 7, scope: !11320)
!11322 = !DILocation(line: 2847, column: 46, scope: !11213)
!11323 = !DILocation(line: 2847, column: 3, scope: !11213)
!11324 = distinct !{!11324, !11245, !11325}
!11325 = !DILocation(line: 2889, column: 3, scope: !11214)
!11326 = !DILocation(line: 0, scope: !11256)
!11327 = !DILocation(line: 2895, column: 3, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 2895, column: 3)
!11329 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 2895, column: 3)
!11330 = !DILocation(line: 2895, column: 3, scope: !11329)
!11331 = !DILocation(line: 2895, column: 3, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 2895, column: 3)
!11333 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 2895, column: 3)
!11334 = !DILocation(line: 2895, column: 3, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 2895, column: 3)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 2895, column: 3)
!11337 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 2895, column: 3)
!11338 = !DILocation(line: 0, scope: !11320)
!11339 = !DILocation(line: 2897, column: 1, scope: !11182)
!11340 = distinct !DISubprogram(name: "lwip_unlink_select_cb", scope: !3, file: !3, line: 2793, type: !4170, isLocal: true, isDefinition: true, scopeLine: 2794, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11341)
!11341 = !{!11342}
!11342 = !DILocalVariable(name: "select_cb", arg: 1, scope: !11340, file: !3, line: 2793, type: !238)
!11343 = !DILocation(line: 2793, column: 46, scope: !11340)
!11344 = !DILocation(line: 2798, column: 3, scope: !11340)
!11345 = !DILocation(line: 2799, column: 18, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2799, column: 7)
!11347 = !DILocation(line: 2799, column: 23, scope: !11346)
!11348 = !DILocation(line: 2799, column: 7, scope: !11340)
!11349 = !DILocation(line: 0, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11346, file: !3, line: 2799, column: 32)
!11351 = !DILocation(line: 2800, column: 40, scope: !11350)
!11352 = !DILocation(line: 2800, column: 22, scope: !11350)
!11353 = !DILocation(line: 2800, column: 27, scope: !11350)
!11354 = !DILocation(line: 2801, column: 3, scope: !11350)
!11355 = !DILocation(line: 2802, column: 7, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2802, column: 7)
!11357 = !DILocation(line: 2802, column: 22, scope: !11356)
!11358 = !DILocation(line: 0, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 2806, column: 5)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 2806, column: 5)
!11361 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 2805, column: 10)
!11362 = !DILocation(line: 2802, column: 7, scope: !11340)
!11363 = !DILocation(line: 0, scope: !11360)
!11364 = !DILocation(line: 2803, column: 5, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 2803, column: 5)
!11366 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 2802, column: 36)
!11367 = !DILocation(line: 2803, column: 5, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 2803, column: 5)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 2803, column: 5)
!11370 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 2803, column: 5)
!11371 = !DILocation(line: 2803, column: 5, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 2803, column: 5)
!11373 = distinct !DILexicalBlock(scope: !11374, file: !3, line: 2803, column: 5)
!11374 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 2803, column: 5)
!11375 = !DILocation(line: 2806, column: 5, scope: !11360)
!11376 = !DILocation(line: 2806, column: 5, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 2806, column: 5)
!11378 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 2806, column: 5)
!11379 = !DILocation(line: 2806, column: 5, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 2806, column: 5)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 2806, column: 5)
!11382 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 2806, column: 5)
!11383 = !DILocation(line: 2807, column: 27, scope: !11361)
!11384 = !DILocation(line: 0, scope: !11366)
!11385 = !DILocation(line: 2813, column: 3, scope: !11340)
!11386 = !DILocation(line: 2814, column: 1, scope: !11340)
!11387 = distinct !DISubprogram(name: "lwip_pollscan", scope: !3, file: !3, line: 3191, type: !11388, isLocal: true, isDefinition: true, scopeLine: 3192, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11390)
!11388 = !DISubroutineType(types: !11389)
!11389 = !{!80, !258, !265, !119}
!11390 = !{!11391, !11392, !11393, !11394, !11395, !11396, !11397, !11398, !11406, !11407, !11408}
!11391 = !DILocalVariable(name: "fds", arg: 1, scope: !11387, file: !3, line: 3191, type: !258)
!11392 = !DILocalVariable(name: "nfds", arg: 2, scope: !11387, file: !3, line: 3191, type: !265)
!11393 = !DILocalVariable(name: "opts", arg: 3, scope: !11387, file: !3, line: 3191, type: !119)
!11394 = !DILocalVariable(name: "nready", scope: !11387, file: !3, line: 3193, type: !80)
!11395 = !DILocalVariable(name: "fdi", scope: !11387, file: !3, line: 3194, type: !265)
!11396 = !DILocalVariable(name: "sock", scope: !11387, file: !3, line: 3195, type: !1165)
!11397 = !DILocalVariable(name: "lev", scope: !11387, file: !3, line: 3196, type: !134)
!11398 = !DILocalVariable(name: "lastdata", scope: !11399, file: !3, line: 3213, type: !143)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 3212, column: 25)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 3212, column: 11)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 3208, column: 65)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 3208, column: 9)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !3, line: 3199, column: 36)
!11404 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 3199, column: 3)
!11405 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 3199, column: 3)
!11406 = !DILocalVariable(name: "rcvevent", scope: !11399, file: !3, line: 3214, type: !146)
!11407 = !DILocalVariable(name: "sendevent", scope: !11399, file: !3, line: 3215, type: !164)
!11408 = !DILocalVariable(name: "errevent", scope: !11399, file: !3, line: 3216, type: !164)
!11409 = !DILocation(line: 3191, column: 30, scope: !11387)
!11410 = !DILocation(line: 3191, column: 42, scope: !11387)
!11411 = !DILocation(line: 3191, column: 72, scope: !11387)
!11412 = !DILocation(line: 3193, column: 7, scope: !11387)
!11413 = !DILocation(line: 3194, column: 10, scope: !11387)
!11414 = !DILocation(line: 3199, column: 8, scope: !11405)
!11415 = !DILocation(line: 3199, column: 21, scope: !11404)
!11416 = !DILocation(line: 3199, column: 3, scope: !11405)
!11417 = !DILocation(line: 3271, column: 3, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 3271, column: 3)
!11419 = !DILocation(line: 3200, column: 9, scope: !11403)
!11420 = !DILocation(line: 3201, column: 16, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 3200, column: 44)
!11422 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 3200, column: 9)
!11423 = !DILocation(line: 3201, column: 24, scope: !11421)
!11424 = !DILocation(line: 3202, column: 5, scope: !11421)
!11425 = !DILocation(line: 3208, column: 18, scope: !11402)
!11426 = !DILocation(line: 3208, column: 21, scope: !11402)
!11427 = !DILocation(line: 3208, column: 26, scope: !11402)
!11428 = !DILocation(line: 0, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 3266, column: 9)
!11430 = !DILocation(line: 3208, column: 39, scope: !11402)
!11431 = !DILocation(line: 3208, column: 47, scope: !11402)
!11432 = !DILocation(line: 3208, column: 59, scope: !11402)
!11433 = !DILocation(line: 3208, column: 9, scope: !11403)
!11434 = !DILocation(line: 3210, column: 7, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 3210, column: 7)
!11436 = !DILocation(line: 3196, column: 3, scope: !11387)
!11437 = !DILocation(line: 3211, column: 51, scope: !11401)
!11438 = !DILocation(line: 1440, column: 33, scope: !5210, inlinedAt: !11439)
!11439 = distinct !DILocation(line: 3211, column: 14, scope: !11401)
!11440 = !DILocation(line: 1409, column: 32, scope: !5218, inlinedAt: !11441)
!11441 = distinct !DILocation(line: 1442, column: 27, scope: !5210, inlinedAt: !11439)
!11442 = !DILocation(line: 1411, column: 7, scope: !5218, inlinedAt: !11441)
!11443 = !DILocation(line: 1412, column: 15, scope: !5225, inlinedAt: !11441)
!11444 = !DILocation(line: 1416, column: 11, scope: !5218, inlinedAt: !11441)
!11445 = !DILocation(line: 1416, column: 3, scope: !5218, inlinedAt: !11441)
!11446 = !DILocation(line: 1417, column: 1, scope: !5218, inlinedAt: !11441)
!11447 = !DILocation(line: 1448, column: 3, scope: !5210, inlinedAt: !11439)
!11448 = !DILocation(line: 3212, column: 11, scope: !11401)
!11449 = !DILocation(line: 3213, column: 32, scope: !11399)
!11450 = !DILocation(line: 3213, column: 41, scope: !11399)
!11451 = !DILocation(line: 3213, column: 15, scope: !11399)
!11452 = !DILocation(line: 3214, column: 32, scope: !11399)
!11453 = !DILocation(line: 3214, column: 15, scope: !11399)
!11454 = !DILocation(line: 3215, column: 33, scope: !11399)
!11455 = !DILocation(line: 3215, column: 15, scope: !11399)
!11456 = !DILocation(line: 3216, column: 32, scope: !11399)
!11457 = !DILocation(line: 3216, column: 15, scope: !11399)
!11458 = !DILocation(line: 3218, column: 13, scope: !11399)
!11459 = !DILocation(line: 3219, column: 17, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 3218, column: 51)
!11461 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 3218, column: 13)
!11462 = !DILocation(line: 3219, column: 31, scope: !11460)
!11463 = !DILocation(line: 3220, column: 36, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 3220, column: 15)
!11465 = !DILocation(line: 3220, column: 15, scope: !11460)
!11466 = !DILocation(line: 3228, column: 20, scope: !11461)
!11467 = !DILocation(line: 3230, column: 11, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !3, line: 3230, column: 11)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 3230, column: 11)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 3228, column: 58)
!11471 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 3228, column: 20)
!11472 = !DILocation(line: 3230, column: 11, scope: !11469)
!11473 = !DILocation(line: 3230, column: 11, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 3230, column: 11)
!11475 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 3230, column: 11)
!11476 = !DILocation(line: 3230, column: 11, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 3230, column: 11)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 3230, column: 11)
!11479 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 3230, column: 11)
!11480 = !DILocation(line: 3231, column: 15, scope: !11470)
!11481 = !DILocation(line: 3232, column: 33, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !3, line: 3231, column: 41)
!11483 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 3231, column: 15)
!11484 = !DILocation(line: 3233, column: 11, scope: !11482)
!11485 = !DILocation(line: 3235, column: 9, scope: !11399)
!11486 = !DILocation(line: 3240, column: 23, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 3240, column: 13)
!11488 = !DILocation(line: 3240, column: 30, scope: !11487)
!11489 = !DILocation(line: 3240, column: 40, scope: !11487)
!11490 = !DILocation(line: 3240, column: 45, scope: !11487)
!11491 = !DILocation(line: 3240, column: 59, scope: !11487)
!11492 = !DILocation(line: 3240, column: 68, scope: !11487)
!11493 = !DILocation(line: 3240, column: 81, scope: !11487)
!11494 = !DILocation(line: 3240, column: 13, scope: !11399)
!11495 = !DILocation(line: 3241, column: 28, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 3240, column: 88)
!11497 = !DILocation(line: 3243, column: 9, scope: !11496)
!11498 = !DILocation(line: 3245, column: 30, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 3245, column: 13)
!11500 = !DILocation(line: 3245, column: 41, scope: !11499)
!11501 = !DILocation(line: 3245, column: 46, scope: !11499)
!11502 = !DILocation(line: 3245, column: 60, scope: !11499)
!11503 = !DILocation(line: 3245, column: 13, scope: !11399)
!11504 = !DILocation(line: 3246, column: 28, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 3245, column: 67)
!11506 = !DILocation(line: 3248, column: 9, scope: !11505)
!11507 = !DILocation(line: 3250, column: 22, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 3250, column: 13)
!11509 = !DILocation(line: 3250, column: 13, scope: !11399)
!11510 = !DILocation(line: 3252, column: 28, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 3250, column: 28)
!11512 = !DILocation(line: 3254, column: 9, scope: !11511)
!11513 = !DILocation(line: 3255, column: 7, scope: !11400)
!11514 = !DILocation(line: 3222, column: 33, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 3220, column: 42)
!11516 = !DILocation(line: 3224, column: 13, scope: !11515)
!11517 = !DILocation(line: 3226, column: 13, scope: !11515)
!11518 = !DILocation(line: 1414, column: 5, scope: !6390, inlinedAt: !11441)
!11519 = !DILocation(line: 3257, column: 9, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 3255, column: 14)
!11521 = !DILocation(line: 3259, column: 26, scope: !11520)
!11522 = !DILocation(line: 3260, column: 9, scope: !11520)
!11523 = !DILocation(line: 3266, column: 18, scope: !11429)
!11524 = !DILocation(line: 3266, column: 26, scope: !11429)
!11525 = !DILocation(line: 3266, column: 9, scope: !11403)
!11526 = !DILocation(line: 3267, column: 13, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 3266, column: 32)
!11528 = !DILocation(line: 3268, column: 5, scope: !11527)
!11529 = !DILocation(line: 0, scope: !11515)
!11530 = !DILocation(line: 3199, column: 32, scope: !11404)
!11531 = !DILocation(line: 3199, column: 3, scope: !11404)
!11532 = distinct !{!11532, !11416, !11533}
!11533 = !DILocation(line: 3269, column: 3, scope: !11405)
!11534 = !DILocation(line: 3271, column: 3, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 3271, column: 3)
!11536 = !DILocation(line: 3271, column: 3, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 3271, column: 3)
!11538 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 3271, column: 3)
!11539 = !DILocation(line: 3271, column: 3, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 3271, column: 3)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 3271, column: 3)
!11542 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 3271, column: 3)
!11543 = !DILocation(line: 0, scope: !11520)
!11544 = !DILocation(line: 3273, column: 1, scope: !11387)
!11545 = distinct !DISubprogram(name: "lwip_getaddrname", scope: !3, file: !3, line: 3698, type: !11546, isLocal: true, isDefinition: true, scopeLine: 3699, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11548)
!11546 = !DISubroutineType(types: !11547)
!11547 = !{!80, !80, !1004, !2773, !156}
!11548 = !{!11549, !11550, !11551, !11552, !11553, !11554, !11555, !11556, !11557, !11558, !11562, !11568, !11570}
!11549 = !DILocalVariable(name: "s", arg: 1, scope: !11545, file: !3, line: 3698, type: !80)
!11550 = !DILocalVariable(name: "name", arg: 2, scope: !11545, file: !3, line: 3698, type: !1004)
!11551 = !DILocalVariable(name: "namelen", arg: 3, scope: !11545, file: !3, line: 3698, type: !2773)
!11552 = !DILocalVariable(name: "local", arg: 4, scope: !11545, file: !3, line: 3698, type: !156)
!11553 = !DILocalVariable(name: "sock", scope: !11545, file: !3, line: 3700, type: !1165)
!11554 = !DILocalVariable(name: "saddr", scope: !11545, file: !3, line: 3701, type: !3054)
!11555 = !DILocalVariable(name: "naddr", scope: !11545, file: !3, line: 3702, type: !1183)
!11556 = !DILocalVariable(name: "port", scope: !11545, file: !3, line: 3703, type: !164)
!11557 = !DILocalVariable(name: "err", scope: !11545, file: !3, line: 3704, type: !1283)
!11558 = !DILocalVariable(name: "sockerr", scope: !11559, file: !3, line: 3714, type: !1007)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 3714, column: 5)
!11560 = distinct !DILexicalBlock(scope: !11561, file: !3, line: 3713, column: 22)
!11561 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3713, column: 7)
!11562 = !DILocalVariable(name: "tid", scope: !11563, file: !3, line: 3714, type: !170)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !3, line: 3714, column: 5)
!11564 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 3714, column: 5)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 3714, column: 5)
!11566 = distinct !DILexicalBlock(scope: !11567, file: !3, line: 3714, column: 5)
!11567 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 3714, column: 5)
!11568 = !DILocalVariable(name: "sockerr", scope: !11569, file: !3, line: 3739, type: !1007)
!11569 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3739, column: 3)
!11570 = !DILocalVariable(name: "tid", scope: !11571, file: !3, line: 3739, type: !170)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 3739, column: 3)
!11572 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 3739, column: 3)
!11573 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 3739, column: 3)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 3739, column: 3)
!11575 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 3739, column: 3)
!11576 = !DILocation(line: 3698, column: 22, scope: !11545)
!11577 = !DILocation(line: 3698, column: 42, scope: !11545)
!11578 = !DILocation(line: 3698, column: 59, scope: !11545)
!11579 = !DILocation(line: 3698, column: 73, scope: !11545)
!11580 = !DILocation(line: 3701, column: 3, scope: !11545)
!11581 = !DILocation(line: 3702, column: 3, scope: !11545)
!11582 = !DILocation(line: 3703, column: 3, scope: !11545)
!11583 = !DILocation(line: 3706, column: 10, scope: !11545)
!11584 = !DILocation(line: 3700, column: 21, scope: !11545)
!11585 = !DILocation(line: 3707, column: 8, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3707, column: 7)
!11587 = !DILocation(line: 3707, column: 7, scope: !11545)
!11588 = !DILocation(line: 3712, column: 31, scope: !11545)
!11589 = !DILocation(line: 3702, column: 13, scope: !11545)
!11590 = !DILocation(line: 3703, column: 9, scope: !11545)
!11591 = !DILocation(line: 3712, column: 9, scope: !11545)
!11592 = !DILocation(line: 3704, column: 9, scope: !11545)
!11593 = !DILocation(line: 3713, column: 11, scope: !11561)
!11594 = !DILocation(line: 3713, column: 7, scope: !11545)
!11595 = !DILocation(line: 3714, column: 5, scope: !11559)
!11596 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11597)
!11597 = distinct !DILocation(line: 3714, column: 5, scope: !11566)
!11598 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11597)
!11599 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11597)
!11600 = !DILocation(line: 3714, column: 5, scope: !11566)
!11601 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11602)
!11602 = distinct !DILocation(line: 3714, column: 5, scope: !11566)
!11603 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11602)
!11604 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11602)
!11605 = !DILocation(line: 3714, column: 5, scope: !11567)
!11606 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11607)
!11607 = distinct !DILocation(line: 3714, column: 5, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 3714, column: 5)
!11609 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11607)
!11610 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11607)
!11611 = !DILocation(line: 3714, column: 5, scope: !11608)
!11612 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11613)
!11613 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11614)
!11614 = distinct !DILocation(line: 3714, column: 5, scope: !11563)
!11615 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11613)
!11616 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11613)
!11617 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11614)
!11618 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11614)
!11619 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11614)
!11620 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11614)
!11621 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11614)
!11622 = !DILocation(line: 3714, column: 5, scope: !11563)
!11623 = !{i32 -2144640107, i32 -2144640094, i32 -2144640069, i32 -2144640045, i32 -2144640020, i32 -2144639945, i32 -2144639920, i32 -2144639776, i32 -2144637553, i32 -2144637464, i32 -2144637343, i32 -2144637248, i32 -2144637147, i32 -2144637120, i32 -2144637037, i32 -2144636948, i32 -2144636827, i32 -2144636727, i32 -2144636621, i32 -2144636513, i32 -2144639488, i32 -2144639435, i32 -2144639404, i32 -2144639373, i32 -2144639352, i32 -2144639330, i32 -2144639281, i32 -2144639260, i32 -2144636430, i32 -2144636341, i32 -2144636220, i32 -2144636121, i32 -2144636015, i32 -2144635913, i32 -2144635880, i32 -2144635807, i32 -2144635739, i32 -2144638886, i32 -2144638833, i32 -2144638802, i32 -2144638771, i32 -2144638750, i32 -2144638728, i32 -2144638679, i32 -2144638658, i32 -2144635684, i32 -2144635595, i32 -2144635474, i32 -2144635375, i32 -2144635269, i32 -2144635167, i32 -2144635134, i32 -2144635051, i32 -2144634962, i32 -2144634841, i32 -2144634741, i32 -2144634715, i32 -2144634612, i32 -2144634586, i32 -2144638400, i32 -2144638333, i32 -2144638308, i32 -2144638244, i32 -2144638128, i32 -2144638103, i32 -2144638078}
!11624 = !DILocation(line: 3721, column: 7, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3721, column: 7)
!11626 = !DILocation(line: 3721, column: 52, scope: !11625)
!11627 = !DILocation(line: 0, scope: !11625)
!11628 = !DILocation(line: 3722, column: 7, scope: !11625)
!11629 = !DILocation(line: 3721, column: 7, scope: !11545)
!11630 = !DILocation(line: 3723, column: 5, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 3723, column: 5)
!11632 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 3722, column: 28)
!11633 = !DILocation(line: 3724, column: 5, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 3724, column: 5)
!11635 = !DILocation(line: 3725, column: 3, scope: !11632)
!11636 = !DILocation(line: 3728, column: 3, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 3728, column: 3)
!11638 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3728, column: 3)
!11639 = !DILocation(line: 3728, column: 3, scope: !11638)
!11640 = !DILocation(line: 3728, column: 3, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 3728, column: 3)
!11642 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 3728, column: 3)
!11643 = !DILocation(line: 3728, column: 3, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 3728, column: 3)
!11645 = !DILocation(line: 3728, column: 3, scope: !11642)
!11646 = !DILocation(line: 3728, column: 3, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 3728, column: 3)
!11648 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 3728, column: 3)
!11649 = !DILocation(line: 3734, column: 7, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3734, column: 7)
!11651 = !DILocation(line: 3734, column: 27, scope: !11650)
!11652 = !DILocation(line: 3734, column: 18, scope: !11650)
!11653 = !DILocation(line: 3734, column: 16, scope: !11650)
!11654 = !DILocation(line: 3734, column: 7, scope: !11545)
!11655 = !DILocation(line: 3735, column: 14, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 3734, column: 35)
!11657 = !DILocation(line: 3736, column: 3, scope: !11656)
!11658 = !DILocation(line: 3737, column: 3, scope: !11545)
!11659 = !DILocation(line: 3739, column: 3, scope: !11569)
!11660 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11661)
!11661 = distinct !DILocation(line: 3739, column: 3, scope: !11574)
!11662 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11661)
!11663 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11661)
!11664 = !DILocation(line: 3739, column: 3, scope: !11574)
!11665 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 3739, column: 3, scope: !11574)
!11667 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11666)
!11668 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11666)
!11669 = !DILocation(line: 3739, column: 3, scope: !11575)
!11670 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !11671)
!11671 = distinct !DILocation(line: 3739, column: 3, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11574, file: !3, line: 3739, column: 3)
!11673 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11671)
!11674 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11671)
!11675 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11671)
!11676 = !DILocation(line: 3739, column: 3, scope: !11672)
!11677 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11678)
!11678 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11679)
!11679 = distinct !DILocation(line: 3739, column: 3, scope: !11571)
!11680 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11678)
!11681 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11678)
!11682 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11679)
!11683 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11679)
!11684 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11679)
!11685 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11679)
!11686 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11679)
!11687 = !DILocation(line: 3739, column: 3, scope: !11571)
!11688 = !{i32 -2144624369, i32 -2144624356, i32 -2144624331, i32 -2144624307, i32 -2144624282, i32 -2144624207, i32 -2144624182, i32 -2144624038, i32 -2144621815, i32 -2144621726, i32 -2144621605, i32 -2144621510, i32 -2144621409, i32 -2144621382, i32 -2144621299, i32 -2144621210, i32 -2144621089, i32 -2144620989, i32 -2144620883, i32 -2144620775, i32 -2144623750, i32 -2144623697, i32 -2144623666, i32 -2144623635, i32 -2144623614, i32 -2144623592, i32 -2144623543, i32 -2144623522, i32 -2144620692, i32 -2144620603, i32 -2144620482, i32 -2144620383, i32 -2144620277, i32 -2144620175, i32 -2144620142, i32 -2144620069, i32 -2144620001, i32 -2144623148, i32 -2144623095, i32 -2144623064, i32 -2144623033, i32 -2144623012, i32 -2144622990, i32 -2144622941, i32 -2144622920, i32 -2144619946, i32 -2144619857, i32 -2144619736, i32 -2144619637, i32 -2144619531, i32 -2144619429, i32 -2144619396, i32 -2144619313, i32 -2144619224, i32 -2144619103, i32 -2144619003, i32 -2144618977, i32 -2144618874, i32 -2144618848, i32 -2144622662, i32 -2144622595, i32 -2144622570, i32 -2144622506, i32 -2144622390, i32 -2144622365, i32 -2144622340}
!11689 = !DILocation(line: 0, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 3707, column: 14)
!11691 = !DILocation(line: 3742, column: 1, scope: !11545)
!11692 = distinct !DISubprogram(name: "lwip_fcntl", scope: !3, file: !3, line: 4834, type: !2106, isLocal: false, isDefinition: true, scopeLine: 4835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11693)
!11693 = !{!11694, !11695, !11696, !11697, !11698, !11699, !11700, !11703, !11709, !11713, !11719, !11722, !11728, !11730}
!11694 = !DILocalVariable(name: "s", arg: 1, scope: !11692, file: !3, line: 4834, type: !80)
!11695 = !DILocalVariable(name: "cmd", arg: 2, scope: !11692, file: !3, line: 4834, type: !80)
!11696 = !DILocalVariable(name: "val", arg: 3, scope: !11692, file: !3, line: 4834, type: !80)
!11697 = !DILocalVariable(name: "sock", scope: !11692, file: !3, line: 4836, type: !1165)
!11698 = !DILocalVariable(name: "ret", scope: !11692, file: !3, line: 4837, type: !80)
!11699 = !DILocalVariable(name: "op_mode", scope: !11692, file: !3, line: 4838, type: !80)
!11700 = !DILocalVariable(name: "sockerr", scope: !11701, file: !3, line: 4847, type: !1007)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 4847, column: 7)
!11702 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 4844, column: 16)
!11703 = !DILocalVariable(name: "tid", scope: !11704, file: !3, line: 4847, type: !170)
!11704 = distinct !DILexicalBlock(scope: !11705, file: !3, line: 4847, column: 7)
!11705 = distinct !DILexicalBlock(scope: !11706, file: !3, line: 4847, column: 7)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 4847, column: 7)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 4847, column: 7)
!11708 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 4847, column: 7)
!11709 = !DILocalVariable(name: "sockerr", scope: !11710, file: !3, line: 4888, type: !1007)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 4888, column: 9)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 4884, column: 37)
!11712 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 4884, column: 11)
!11713 = !DILocalVariable(name: "tid", scope: !11714, file: !3, line: 4888, type: !170)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 4888, column: 9)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 4888, column: 9)
!11716 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 4888, column: 9)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 4888, column: 9)
!11718 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 4888, column: 9)
!11719 = !DILocalVariable(name: "sockerr", scope: !11720, file: !3, line: 4890, type: !1007)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 4890, column: 9)
!11721 = distinct !DILexicalBlock(scope: !11712, file: !3, line: 4889, column: 14)
!11722 = !DILocalVariable(name: "tid", scope: !11723, file: !3, line: 4890, type: !170)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !3, line: 4890, column: 9)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 4890, column: 9)
!11725 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 4890, column: 9)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 4890, column: 9)
!11727 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 4890, column: 9)
!11728 = !DILocalVariable(name: "sockerr", scope: !11729, file: !3, line: 4895, type: !1007)
!11729 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 4895, column: 7)
!11730 = !DILocalVariable(name: "tid", scope: !11731, file: !3, line: 4895, type: !170)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !3, line: 4895, column: 7)
!11732 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 4895, column: 7)
!11733 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 4895, column: 7)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 4895, column: 7)
!11735 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 4895, column: 7)
!11736 = !DILocation(line: 4834, column: 16, scope: !11692)
!11737 = !DILocation(line: 4834, column: 23, scope: !11692)
!11738 = !DILocation(line: 4834, column: 32, scope: !11692)
!11739 = !DILocation(line: 4836, column: 28, scope: !11692)
!11740 = !DILocation(line: 4836, column: 21, scope: !11692)
!11741 = !DILocation(line: 4837, column: 7, scope: !11692)
!11742 = !DILocation(line: 4838, column: 7, scope: !11692)
!11743 = !DILocation(line: 4840, column: 8, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 4840, column: 7)
!11745 = !DILocation(line: 4840, column: 7, scope: !11692)
!11746 = !DILocation(line: 0, scope: !11692)
!11747 = !DILocation(line: 4844, column: 3, scope: !11692)
!11748 = !DILocation(line: 4846, column: 13, scope: !11702)
!11749 = !DILocation(line: 4847, column: 7, scope: !11701)
!11750 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11751)
!11751 = distinct !DILocation(line: 4847, column: 7, scope: !11707)
!11752 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11751)
!11753 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11751)
!11754 = !DILocation(line: 4847, column: 7, scope: !11707)
!11755 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11756)
!11756 = distinct !DILocation(line: 4847, column: 7, scope: !11707)
!11757 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11756)
!11758 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11756)
!11759 = !DILocation(line: 4847, column: 7, scope: !11708)
!11760 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !11761)
!11761 = distinct !DILocation(line: 4847, column: 7, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 4847, column: 7)
!11763 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11761)
!11764 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11761)
!11765 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11761)
!11766 = !DILocation(line: 4847, column: 7, scope: !11762)
!11767 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11768)
!11768 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11769)
!11769 = distinct !DILocation(line: 4847, column: 7, scope: !11704)
!11770 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11768)
!11771 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11768)
!11772 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11769)
!11773 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11769)
!11774 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11769)
!11775 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11769)
!11776 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11769)
!11777 = !DILocation(line: 4847, column: 7, scope: !11704)
!11778 = !{i32 -2144554807, i32 -2144554794, i32 -2144554769, i32 -2144554745, i32 -2144554720, i32 -2144554645, i32 -2144554620, i32 -2144554476, i32 -2144552253, i32 -2144552164, i32 -2144552043, i32 -2144551948, i32 -2144551847, i32 -2144551820, i32 -2144551737, i32 -2144551648, i32 -2144551527, i32 -2144551427, i32 -2144551321, i32 -2144551213, i32 -2144554188, i32 -2144554135, i32 -2144554104, i32 -2144554073, i32 -2144554052, i32 -2144554030, i32 -2144553981, i32 -2144553960, i32 -2144551130, i32 -2144551041, i32 -2144550920, i32 -2144550821, i32 -2144550715, i32 -2144550613, i32 -2144550580, i32 -2144550507, i32 -2144550439, i32 -2144553586, i32 -2144553533, i32 -2144553502, i32 -2144553471, i32 -2144553450, i32 -2144553428, i32 -2144553379, i32 -2144553358, i32 -2144550384, i32 -2144550295, i32 -2144550174, i32 -2144550075, i32 -2144549969, i32 -2144549867, i32 -2144549834, i32 -2144549751, i32 -2144549662, i32 -2144549541, i32 -2144549441, i32 -2144549415, i32 -2144549312, i32 -2144549286, i32 -2144553100, i32 -2144553033, i32 -2144553008, i32 -2144552944, i32 -2144552828, i32 -2144552803, i32 -2144552778}
!11779 = !DILocation(line: 4849, column: 11, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 4849, column: 11)
!11781 = !DILocation(line: 4849, column: 55, scope: !11780)
!11782 = !DILocation(line: 4849, column: 11, scope: !11702)
!11783 = !DILocation(line: 4851, column: 9, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11780, file: !3, line: 4849, column: 71)
!11785 = !DILocation(line: 4859, column: 19, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 4859, column: 13)
!11787 = !DILocation(line: 4859, column: 25, scope: !11786)
!11788 = !DILocation(line: 4859, column: 29, scope: !11786)
!11789 = !DILocation(line: 4859, column: 13, scope: !11786)
!11790 = !DILocation(line: 4859, column: 13, scope: !11784)
!11791 = !DILocation(line: 4860, column: 38, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 4860, column: 15)
!11793 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 4859, column: 34)
!11794 = !DILocation(line: 4860, column: 44, scope: !11792)
!11795 = !DILocation(line: 4860, column: 15, scope: !11793)
!11796 = !DILocation(line: 4862, column: 11, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 4860, column: 60)
!11798 = !DILocation(line: 4863, column: 44, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 4863, column: 15)
!11800 = !DILocation(line: 4863, column: 15, scope: !11793)
!11801 = !DILocation(line: 4869, column: 9, scope: !11784)
!11802 = !DILocation(line: 4878, column: 14, scope: !11702)
!11803 = !DILocation(line: 4865, column: 11, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11799, file: !3, line: 4863, column: 55)
!11805 = !DILocation(line: 4878, column: 11, scope: !11702)
!11806 = !DILocation(line: 4880, column: 7, scope: !11702)
!11807 = !DILocation(line: 4884, column: 16, scope: !11712)
!11808 = !DILocation(line: 4884, column: 31, scope: !11712)
!11809 = !DILocation(line: 4884, column: 11, scope: !11702)
!11810 = !DILocation(line: 4886, column: 9, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 4886, column: 9)
!11812 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 4886, column: 9)
!11813 = !DILocation(line: 4886, column: 9, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 4886, column: 9)
!11815 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 4886, column: 9)
!11816 = !DILocation(line: 4886, column: 9, scope: !11812)
!11817 = !DILocation(line: 4886, column: 9, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 4886, column: 9)
!11819 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 4886, column: 9)
!11820 = !DILocation(line: 4888, column: 9, scope: !11710)
!11821 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11822)
!11822 = distinct !DILocation(line: 4888, column: 9, scope: !11717)
!11823 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11822)
!11824 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11822)
!11825 = !DILocation(line: 4888, column: 9, scope: !11717)
!11826 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11827)
!11827 = distinct !DILocation(line: 4888, column: 9, scope: !11717)
!11828 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11827)
!11829 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11827)
!11830 = !DILocation(line: 4888, column: 9, scope: !11718)
!11831 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !11832)
!11832 = distinct !DILocation(line: 4888, column: 9, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 4888, column: 9)
!11834 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11832)
!11835 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11832)
!11836 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11832)
!11837 = !DILocation(line: 4888, column: 9, scope: !11833)
!11838 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11839)
!11839 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11840)
!11840 = distinct !DILocation(line: 4888, column: 9, scope: !11714)
!11841 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11839)
!11842 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11839)
!11843 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11840)
!11844 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11840)
!11845 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11840)
!11846 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11840)
!11847 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11840)
!11848 = !DILocation(line: 4888, column: 9, scope: !11714)
!11849 = !{i32 -2144546643, i32 -2144546630, i32 -2144546605, i32 -2144546581, i32 -2144546556, i32 -2144546481, i32 -2144546456, i32 -2144546312, i32 -2144544089, i32 -2144544000, i32 -2144543879, i32 -2144543784, i32 -2144543683, i32 -2144543656, i32 -2144543573, i32 -2144543484, i32 -2144543363, i32 -2144543263, i32 -2144543157, i32 -2144543049, i32 -2144546024, i32 -2144545971, i32 -2144545940, i32 -2144545909, i32 -2144545888, i32 -2144545866, i32 -2144545817, i32 -2144545796, i32 -2144542966, i32 -2144542877, i32 -2144542756, i32 -2144542657, i32 -2144542551, i32 -2144542449, i32 -2144542416, i32 -2144542343, i32 -2144542275, i32 -2144545422, i32 -2144545369, i32 -2144545338, i32 -2144545307, i32 -2144545286, i32 -2144545264, i32 -2144545215, i32 -2144545194, i32 -2144542220, i32 -2144542131, i32 -2144542010, i32 -2144541911, i32 -2144541805, i32 -2144541703, i32 -2144541670, i32 -2144541587, i32 -2144541498, i32 -2144541377, i32 -2144541277, i32 -2144541251, i32 -2144541148, i32 -2144541122, i32 -2144544936, i32 -2144544869, i32 -2144544844, i32 -2144544780, i32 -2144544664, i32 -2144544639, i32 -2144544614}
!11850 = !DILocation(line: 4889, column: 7, scope: !11711)
!11851 = !DILocation(line: 4890, column: 9, scope: !11720)
!11852 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 4890, column: 9, scope: !11726)
!11854 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11853)
!11855 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11853)
!11856 = !DILocation(line: 4890, column: 9, scope: !11726)
!11857 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11858)
!11858 = distinct !DILocation(line: 4890, column: 9, scope: !11726)
!11859 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11858)
!11860 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11858)
!11861 = !DILocation(line: 4890, column: 9, scope: !11727)
!11862 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !11863)
!11863 = distinct !DILocation(line: 4890, column: 9, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 4890, column: 9)
!11865 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11863)
!11866 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11863)
!11867 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11863)
!11868 = !DILocation(line: 4890, column: 9, scope: !11864)
!11869 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11871)
!11871 = distinct !DILocation(line: 4890, column: 9, scope: !11723)
!11872 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11870)
!11873 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11870)
!11874 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11871)
!11875 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11871)
!11876 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11871)
!11877 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11871)
!11878 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11871)
!11879 = !DILocation(line: 4890, column: 9, scope: !11723)
!11880 = !{i32 -2144539082, i32 -2144539069, i32 -2144539044, i32 -2144539020, i32 -2144538995, i32 -2144538920, i32 -2144538895, i32 -2144538751, i32 -2144536528, i32 -2144536439, i32 -2144536318, i32 -2144536223, i32 -2144536122, i32 -2144536095, i32 -2144536012, i32 -2144535923, i32 -2144535802, i32 -2144535702, i32 -2144535596, i32 -2144535488, i32 -2144538463, i32 -2144538410, i32 -2144538379, i32 -2144538348, i32 -2144538327, i32 -2144538305, i32 -2144538256, i32 -2144538235, i32 -2144535405, i32 -2144535316, i32 -2144535195, i32 -2144535096, i32 -2144534990, i32 -2144534888, i32 -2144534855, i32 -2144534782, i32 -2144534714, i32 -2144537861, i32 -2144537808, i32 -2144537777, i32 -2144537746, i32 -2144537725, i32 -2144537703, i32 -2144537654, i32 -2144537633, i32 -2144534659, i32 -2144534570, i32 -2144534449, i32 -2144534350, i32 -2144534244, i32 -2144534142, i32 -2144534109, i32 -2144534026, i32 -2144533937, i32 -2144533816, i32 -2144533716, i32 -2144533690, i32 -2144533587, i32 -2144533561, i32 -2144537375, i32 -2144537308, i32 -2144537283, i32 -2144537219, i32 -2144537103, i32 -2144537078, i32 -2144537053}
!11881 = !DILocation(line: 4895, column: 7, scope: !11729)
!11882 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11883)
!11883 = distinct !DILocation(line: 4895, column: 7, scope: !11734)
!11884 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11883)
!11885 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11883)
!11886 = !DILocation(line: 4895, column: 7, scope: !11734)
!11887 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 4895, column: 7, scope: !11734)
!11889 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11888)
!11890 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11888)
!11891 = !DILocation(line: 4895, column: 7, scope: !11735)
!11892 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !11893)
!11893 = distinct !DILocation(line: 4895, column: 7, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 4895, column: 7)
!11895 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11893)
!11896 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11893)
!11897 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11893)
!11898 = !DILocation(line: 4895, column: 7, scope: !11894)
!11899 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11900)
!11900 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11901)
!11901 = distinct !DILocation(line: 4895, column: 7, scope: !11731)
!11902 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11900)
!11903 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11900)
!11904 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11901)
!11905 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11901)
!11906 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11901)
!11907 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11901)
!11908 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11901)
!11909 = !DILocation(line: 4895, column: 7, scope: !11731)
!11910 = !{i32 -2144531521, i32 -2144531508, i32 -2144531483, i32 -2144531459, i32 -2144531434, i32 -2144531359, i32 -2144531334, i32 -2144531190, i32 -2144528967, i32 -2144528878, i32 -2144528757, i32 -2144528662, i32 -2144528561, i32 -2144528534, i32 -2144528451, i32 -2144528362, i32 -2144528241, i32 -2144528141, i32 -2144528035, i32 -2144527927, i32 -2144530902, i32 -2144530849, i32 -2144530818, i32 -2144530787, i32 -2144530766, i32 -2144530744, i32 -2144530695, i32 -2144530674, i32 -2144527844, i32 -2144527755, i32 -2144527634, i32 -2144527535, i32 -2144527429, i32 -2144527327, i32 -2144527294, i32 -2144527221, i32 -2144527153, i32 -2144530300, i32 -2144530247, i32 -2144530216, i32 -2144530185, i32 -2144530164, i32 -2144530142, i32 -2144530093, i32 -2144530072, i32 -2144527098, i32 -2144527009, i32 -2144526888, i32 -2144526789, i32 -2144526683, i32 -2144526581, i32 -2144526548, i32 -2144526465, i32 -2144526376, i32 -2144526255, i32 -2144526155, i32 -2144526129, i32 -2144526026, i32 -2144526000, i32 -2144529814, i32 -2144529747, i32 -2144529722, i32 -2144529658, i32 -2144529542, i32 -2144529517, i32 -2144529492}
!11911 = !DILocation(line: 4896, column: 7, scope: !11702)
!11912 = !DILocation(line: 0, scope: !11702)
!11913 = !DILocation(line: 4899, column: 3, scope: !11692)
!11914 = !DILocation(line: 0, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 4840, column: 14)
!11916 = !DILocation(line: 4900, column: 1, scope: !11692)
!11917 = distinct !DISubprogram(name: "lwip_inet_ntop", scope: !3, file: !3, line: 4917, type: !11918, isLocal: false, isDefinition: true, scopeLine: 4918, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11920)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!292, !80, !225, !144, !1750}
!11920 = !{!11921, !11922, !11923, !11924, !11925, !11926, !11927, !11935, !11944, !11952}
!11921 = !DILocalVariable(name: "af", arg: 1, scope: !11917, file: !3, line: 4917, type: !80)
!11922 = !DILocalVariable(name: "src", arg: 2, scope: !11917, file: !3, line: 4917, type: !225)
!11923 = !DILocalVariable(name: "dst", arg: 3, scope: !11917, file: !3, line: 4917, type: !144)
!11924 = !DILocalVariable(name: "size", arg: 4, scope: !11917, file: !3, line: 4917, type: !1750)
!11925 = !DILocalVariable(name: "ret", scope: !11917, file: !3, line: 4919, type: !292)
!11926 = !DILocalVariable(name: "size_int", scope: !11917, file: !3, line: 4920, type: !80)
!11927 = !DILocalVariable(name: "tid", scope: !11928, file: !3, line: 4922, type: !170)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 4922, column: 5)
!11929 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 4922, column: 5)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 4922, column: 5)
!11931 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 4922, column: 5)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !3, line: 4922, column: 5)
!11933 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 4921, column: 21)
!11934 = distinct !DILexicalBlock(scope: !11917, file: !3, line: 4921, column: 7)
!11935 = !DILocalVariable(name: "tid", scope: !11936, file: !3, line: 4930, type: !170)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 4930, column: 9)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !3, line: 4930, column: 9)
!11938 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 4930, column: 9)
!11939 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 4930, column: 9)
!11940 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 4930, column: 9)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 4929, column: 24)
!11942 = distinct !DILexicalBlock(scope: !11943, file: !3, line: 4929, column: 11)
!11943 = distinct !DILexicalBlock(scope: !11917, file: !3, line: 4925, column: 15)
!11944 = !DILocalVariable(name: "tid", scope: !11945, file: !3, line: 4938, type: !170)
!11945 = distinct !DILexicalBlock(scope: !11946, file: !3, line: 4938, column: 9)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 4938, column: 9)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !3, line: 4938, column: 9)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !3, line: 4938, column: 9)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 4938, column: 9)
!11950 = distinct !DILexicalBlock(scope: !11951, file: !3, line: 4937, column: 24)
!11951 = distinct !DILexicalBlock(scope: !11943, file: !3, line: 4937, column: 11)
!11952 = !DILocalVariable(name: "tid", scope: !11953, file: !3, line: 4943, type: !170)
!11953 = distinct !DILexicalBlock(scope: !11954, file: !3, line: 4943, column: 7)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 4943, column: 7)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 4943, column: 7)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 4943, column: 7)
!11957 = distinct !DILexicalBlock(scope: !11943, file: !3, line: 4943, column: 7)
!11958 = !DILocation(line: 4917, column: 20, scope: !11917)
!11959 = !DILocation(line: 4917, column: 36, scope: !11917)
!11960 = !DILocation(line: 4917, column: 47, scope: !11917)
!11961 = !DILocation(line: 4917, column: 62, scope: !11917)
!11962 = !DILocation(line: 4919, column: 15, scope: !11917)
!11963 = !DILocation(line: 4920, column: 7, scope: !11917)
!11964 = !DILocation(line: 4921, column: 16, scope: !11934)
!11965 = !DILocation(line: 4921, column: 7, scope: !11917)
!11966 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11967)
!11967 = distinct !DILocation(line: 4922, column: 5, scope: !11931)
!11968 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11967)
!11969 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11967)
!11970 = !DILocation(line: 4922, column: 5, scope: !11931)
!11971 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11972)
!11972 = distinct !DILocation(line: 4922, column: 5, scope: !11931)
!11973 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11972)
!11974 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11972)
!11975 = !DILocation(line: 4922, column: 5, scope: !11932)
!11976 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !11977)
!11977 = distinct !DILocation(line: 4922, column: 5, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 4922, column: 5)
!11979 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !11977)
!11980 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !11977)
!11981 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !11977)
!11982 = !DILocation(line: 4922, column: 5, scope: !11978)
!11983 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !11984)
!11984 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !11985)
!11985 = distinct !DILocation(line: 4922, column: 5, scope: !11928)
!11986 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !11984)
!11987 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !11984)
!11988 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !11985)
!11989 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !11985)
!11990 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !11985)
!11991 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !11985)
!11992 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !11985)
!11993 = !DILocation(line: 4922, column: 5, scope: !11928)
!11994 = !{i32 -2144524073, i32 -2144524060, i32 -2144524035, i32 -2144524011, i32 -2144523986, i32 -2144523911, i32 -2144523886, i32 -2144523742, i32 -2144521520, i32 -2144521431, i32 -2144521310, i32 -2144521215, i32 -2144521114, i32 -2144521087, i32 -2144521004, i32 -2144520915, i32 -2144520794, i32 -2144520694, i32 -2144520588, i32 -2144520480, i32 -2144523454, i32 -2144523401, i32 -2144523370, i32 -2144523339, i32 -2144523318, i32 -2144523296, i32 -2144523247, i32 -2144523226, i32 -2144520397, i32 -2144520308, i32 -2144520187, i32 -2144520088, i32 -2144519982, i32 -2144519880, i32 -2144519847, i32 -2144519774, i32 -2144519706, i32 -2144522852, i32 -2144522799, i32 -2144522768, i32 -2144522737, i32 -2144522716, i32 -2144522694, i32 -2144522645, i32 -2144522624, i32 -2144519651, i32 -2144519562, i32 -2144519441, i32 -2144519342, i32 -2144519236, i32 -2144519134, i32 -2144519101, i32 -2144519018, i32 -2144518929, i32 -2144518808, i32 -2144518708, i32 -2144518682, i32 -2144518579, i32 -2144518553, i32 -2144522366, i32 -2144522299, i32 -2144522274, i32 -2144522210, i32 -2144522094, i32 -2144522069, i32 -2144522044}
!11995 = !DILocation(line: 4923, column: 5, scope: !11933)
!11996 = !DILocation(line: 4925, column: 3, scope: !11917)
!11997 = !DILocation(line: 4928, column: 28, scope: !11943)
!11998 = !DILocation(line: 4928, column: 13, scope: !11943)
!11999 = !DILocation(line: 4929, column: 15, scope: !11942)
!12000 = !DILocation(line: 4929, column: 11, scope: !11943)
!12001 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12002)
!12002 = distinct !DILocation(line: 4930, column: 9, scope: !11939)
!12003 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12002)
!12004 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12002)
!12005 = !DILocation(line: 4930, column: 9, scope: !11939)
!12006 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12007)
!12007 = distinct !DILocation(line: 4930, column: 9, scope: !11939)
!12008 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12007)
!12009 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12007)
!12010 = !DILocation(line: 4930, column: 9, scope: !11940)
!12011 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !12012)
!12012 = distinct !DILocation(line: 4930, column: 9, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 4930, column: 9)
!12014 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !12012)
!12015 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !12012)
!12016 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !12012)
!12017 = !DILocation(line: 4930, column: 9, scope: !12013)
!12018 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12019)
!12019 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12020)
!12020 = distinct !DILocation(line: 4930, column: 9, scope: !11936)
!12021 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12019)
!12022 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12019)
!12023 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12020)
!12024 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12020)
!12025 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12020)
!12026 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12020)
!12027 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12020)
!12028 = !DILocation(line: 4930, column: 9, scope: !11936)
!12029 = !{i32 -2144516614, i32 -2144516601, i32 -2144516576, i32 -2144516552, i32 -2144516527, i32 -2144516452, i32 -2144516427, i32 -2144516283, i32 -2144514061, i32 -2144513972, i32 -2144513851, i32 -2144513756, i32 -2144513655, i32 -2144513628, i32 -2144513545, i32 -2144513456, i32 -2144513335, i32 -2144513235, i32 -2144513129, i32 -2144513021, i32 -2144515995, i32 -2144515942, i32 -2144515911, i32 -2144515880, i32 -2144515859, i32 -2144515837, i32 -2144515788, i32 -2144515767, i32 -2144512938, i32 -2144512849, i32 -2144512728, i32 -2144512629, i32 -2144512523, i32 -2144512421, i32 -2144512388, i32 -2144512315, i32 -2144512247, i32 -2144515393, i32 -2144515340, i32 -2144515309, i32 -2144515278, i32 -2144515257, i32 -2144515235, i32 -2144515186, i32 -2144515165, i32 -2144512192, i32 -2144512103, i32 -2144511982, i32 -2144511883, i32 -2144511777, i32 -2144511675, i32 -2144511642, i32 -2144511559, i32 -2144511470, i32 -2144511349, i32 -2144511249, i32 -2144511223, i32 -2144511120, i32 -2144511094, i32 -2144514907, i32 -2144514840, i32 -2144514815, i32 -2144514751, i32 -2144514635, i32 -2144514610, i32 -2144514585}
!12030 = !DILocation(line: 4936, column: 28, scope: !11943)
!12031 = !DILocation(line: 4936, column: 13, scope: !11943)
!12032 = !DILocation(line: 4937, column: 15, scope: !11951)
!12033 = !DILocation(line: 4937, column: 11, scope: !11943)
!12034 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12035)
!12035 = distinct !DILocation(line: 4938, column: 9, scope: !11948)
!12036 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12035)
!12037 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12035)
!12038 = !DILocation(line: 4938, column: 9, scope: !11948)
!12039 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12040)
!12040 = distinct !DILocation(line: 4938, column: 9, scope: !11948)
!12041 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12040)
!12042 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12040)
!12043 = !DILocation(line: 4938, column: 9, scope: !11949)
!12044 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !12045)
!12045 = distinct !DILocation(line: 4938, column: 9, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !11948, file: !3, line: 4938, column: 9)
!12047 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !12045)
!12048 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !12045)
!12049 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !12045)
!12050 = !DILocation(line: 4938, column: 9, scope: !12046)
!12051 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12052)
!12052 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12053)
!12053 = distinct !DILocation(line: 4938, column: 9, scope: !11945)
!12054 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12052)
!12055 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12052)
!12056 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12053)
!12057 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12053)
!12058 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12053)
!12059 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12053)
!12060 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12053)
!12061 = !DILocation(line: 4938, column: 9, scope: !11945)
!12062 = !{i32 -2144509166, i32 -2144509153, i32 -2144509128, i32 -2144509104, i32 -2144509079, i32 -2144509004, i32 -2144508979, i32 -2144508835, i32 -2144506613, i32 -2144506524, i32 -2144506403, i32 -2144506308, i32 -2144506207, i32 -2144506180, i32 -2144502036, i32 -2144501947, i32 -2144501826, i32 -2144501726, i32 -2144501620, i32 -2144501512, i32 -2144508547, i32 -2144508494, i32 -2144508463, i32 -2144508432, i32 -2144508411, i32 -2144508389, i32 -2144508340, i32 -2144508319, i32 -2144501429, i32 -2144501340, i32 -2144501219, i32 -2144501120, i32 -2144501014, i32 -2144500912, i32 -2144500879, i32 -2144500806, i32 -2144500738, i32 -2144507945, i32 -2144507892, i32 -2144507861, i32 -2144507830, i32 -2144507809, i32 -2144507787, i32 -2144507738, i32 -2144507717, i32 -2144500683, i32 -2144500594, i32 -2144500473, i32 -2144500374, i32 -2144500268, i32 -2144500166, i32 -2144500133, i32 -2144500050, i32 -2144499961, i32 -2144499840, i32 -2144499740, i32 -2144499714, i32 -2144499611, i32 -2144499585, i32 -2144507459, i32 -2144507392, i32 -2144507367, i32 -2144507303, i32 -2144507187, i32 -2144507162, i32 -2144507137}
!12063 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12064)
!12064 = distinct !DILocation(line: 4943, column: 7, scope: !11956)
!12065 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12064)
!12066 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12064)
!12067 = !DILocation(line: 4943, column: 7, scope: !11956)
!12068 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12069)
!12069 = distinct !DILocation(line: 4943, column: 7, scope: !11956)
!12070 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12069)
!12071 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12069)
!12072 = !DILocation(line: 4943, column: 7, scope: !11957)
!12073 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !12074)
!12074 = distinct !DILocation(line: 4943, column: 7, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 4943, column: 7)
!12076 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !12074)
!12077 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !12074)
!12078 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !12074)
!12079 = !DILocation(line: 4943, column: 7, scope: !12075)
!12080 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12081)
!12081 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 4943, column: 7, scope: !11953)
!12083 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12081)
!12084 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12081)
!12085 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12082)
!12086 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12082)
!12087 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12082)
!12088 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12082)
!12089 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12082)
!12090 = !DILocation(line: 4943, column: 7, scope: !11953)
!12091 = !{i32 -2144497652, i32 -2144497639, i32 -2144497614, i32 -2144497590, i32 -2144497565, i32 -2144497490, i32 -2144497465, i32 -2144497321, i32 -2144495097, i32 -2144495008, i32 -2144494887, i32 -2144494792, i32 -2144494691, i32 -2144494664, i32 -2144494581, i32 -2144494492, i32 -2144494371, i32 -2144494271, i32 -2144494165, i32 -2144494057, i32 -2144497033, i32 -2144496980, i32 -2144496949, i32 -2144496918, i32 -2144496897, i32 -2144496875, i32 -2144496826, i32 -2144496805, i32 -2144493974, i32 -2144493885, i32 -2144493764, i32 -2144493665, i32 -2144493559, i32 -2144493457, i32 -2144493424, i32 -2144493351, i32 -2144493283, i32 -2144496431, i32 -2144496378, i32 -2144496347, i32 -2144496316, i32 -2144496295, i32 -2144496273, i32 -2144496224, i32 -2144496203, i32 -2144493228, i32 -2144493139, i32 -2144493018, i32 -2144492919, i32 -2144492813, i32 -2144492711, i32 -2144492678, i32 -2144492595, i32 -2144492506, i32 -2144492385, i32 -2144492285, i32 -2144492259, i32 -2144492156, i32 -2144492130, i32 -2144495945, i32 -2144495878, i32 -2144495853, i32 -2144495789, i32 -2144495673, i32 -2144495648, i32 -2144495623}
!12092 = !DILocation(line: 0, scope: !11917)
!12093 = !DILocation(line: 0, scope: !11933)
!12094 = !DILocation(line: 4947, column: 1, scope: !11917)
!12095 = distinct !DISubprogram(name: "lwip_inet_pton", scope: !3, file: !3, line: 4950, type: !12096, isLocal: false, isDefinition: true, scopeLine: 4951, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12098)
!12096 = !DISubroutineType(types: !12097)
!12097 = !{!80, !80, !292, !143}
!12098 = !{!12099, !12100, !12101, !12102, !12103, !12106}
!12099 = !DILocalVariable(name: "af", arg: 1, scope: !12095, file: !3, line: 4950, type: !80)
!12100 = !DILocalVariable(name: "src", arg: 2, scope: !12095, file: !3, line: 4950, type: !292)
!12101 = !DILocalVariable(name: "dst", arg: 3, scope: !12095, file: !3, line: 4950, type: !143)
!12102 = !DILocalVariable(name: "err", scope: !12095, file: !3, line: 4952, type: !80)
!12103 = !DILocalVariable(name: "addr", scope: !12104, file: !3, line: 4963, type: !705)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 4960, column: 20)
!12105 = distinct !DILexicalBlock(scope: !12095, file: !3, line: 4953, column: 15)
!12106 = !DILocalVariable(name: "tid", scope: !12107, file: !3, line: 4973, type: !170)
!12107 = distinct !DILexicalBlock(scope: !12108, file: !3, line: 4973, column: 7)
!12108 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 4973, column: 7)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 4973, column: 7)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 4973, column: 7)
!12111 = distinct !DILexicalBlock(scope: !12105, file: !3, line: 4973, column: 7)
!12112 = !DILocation(line: 4950, column: 20, scope: !12095)
!12113 = !DILocation(line: 4950, column: 36, scope: !12095)
!12114 = !DILocation(line: 4950, column: 47, scope: !12095)
!12115 = !DILocation(line: 4953, column: 3, scope: !12095)
!12116 = !DILocation(line: 4956, column: 31, scope: !12105)
!12117 = !DILocation(line: 4956, column: 13, scope: !12105)
!12118 = !DILocation(line: 4952, column: 7, scope: !12095)
!12119 = !DILocation(line: 4957, column: 7, scope: !12105)
!12120 = !DILocation(line: 4963, column: 7, scope: !12104)
!12121 = !DILocation(line: 4963, column: 18, scope: !12104)
!12122 = !DILocation(line: 4964, column: 13, scope: !12104)
!12123 = !DILocation(line: 4965, column: 11, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 4965, column: 11)
!12125 = !DILocation(line: 4965, column: 11, scope: !12104)
!12126 = !DILocation(line: 4966, column: 9, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 4965, column: 16)
!12128 = !DILocation(line: 4967, column: 7, scope: !12127)
!12129 = !DILocation(line: 4969, column: 5, scope: !12105)
!12130 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12131)
!12131 = distinct !DILocation(line: 4973, column: 7, scope: !12110)
!12132 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12131)
!12133 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12131)
!12134 = !DILocation(line: 4973, column: 7, scope: !12110)
!12135 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12136)
!12136 = distinct !DILocation(line: 4973, column: 7, scope: !12110)
!12137 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12136)
!12138 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12136)
!12139 = !DILocation(line: 4973, column: 7, scope: !12111)
!12140 = !DILocation(line: 88, column: 30, scope: !1664, inlinedAt: !12141)
!12141 = distinct !DILocation(line: 4973, column: 7, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 4973, column: 7)
!12143 = !DILocation(line: 90, column: 3, scope: !1664, inlinedAt: !12141)
!12144 = !DILocation(line: 90, column: 9, scope: !1664, inlinedAt: !12141)
!12145 = !DILocation(line: 91, column: 1, scope: !1664, inlinedAt: !12141)
!12146 = !DILocation(line: 4973, column: 7, scope: !12142)
!12147 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12148)
!12148 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12149)
!12149 = distinct !DILocation(line: 4973, column: 7, scope: !12107)
!12150 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12148)
!12151 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12148)
!12152 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12149)
!12153 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12149)
!12154 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12149)
!12155 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12149)
!12156 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12149)
!12157 = !DILocation(line: 4973, column: 7, scope: !12107)
!12158 = !{i32 -2144490188, i32 -2144490175, i32 -2144490150, i32 -2144490126, i32 -2144490101, i32 -2144490026, i32 -2144490001, i32 -2144489857, i32 -2144487633, i32 -2144487544, i32 -2144487423, i32 -2144487328, i32 -2144487227, i32 -2144487200, i32 -2144487117, i32 -2144487028, i32 -2144486907, i32 -2144486807, i32 -2144486701, i32 -2144486593, i32 -2144489569, i32 -2144489516, i32 -2144489485, i32 -2144489454, i32 -2144489433, i32 -2144489411, i32 -2144489362, i32 -2144489341, i32 -2144486510, i32 -2144486421, i32 -2144486300, i32 -2144486201, i32 -2144486095, i32 -2144485993, i32 -2144485960, i32 -2144485887, i32 -2144485819, i32 -2144488967, i32 -2144488914, i32 -2144488883, i32 -2144488852, i32 -2144488831, i32 -2144488809, i32 -2144488760, i32 -2144488739, i32 -2144485764, i32 -2144485675, i32 -2144485554, i32 -2144485455, i32 -2144485349, i32 -2144485247, i32 -2144485214, i32 -2144485131, i32 -2144485042, i32 -2144484921, i32 -2144484821, i32 -2144484795, i32 -2144484692, i32 -2144484666, i32 -2144488481, i32 -2144488414, i32 -2144488389, i32 -2144488325, i32 -2144488209, i32 -2144488184, i32 -2144488159}
!12159 = !DILocation(line: 0, scope: !12105)
!12160 = !DILocation(line: 4976, column: 3, scope: !12095)
!12161 = !DILocation(line: 100, column: 9, scope: !1488)
!12162 = !DILocation(line: 100, column: 2, scope: !1488)
!12163 = distinct !DISubprogram(name: "uk_mutex_unlock", scope: !817, file: !817, line: 149, type: !12164, isLocal: true, isDefinition: true, scopeLine: 150, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12167)
!12164 = !DISubroutineType(types: !12165)
!12165 = !{null, !12166}
!12166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!12167 = !{!12168, !12169, !12170}
!12168 = !DILocalVariable(name: "m", arg: 1, scope: !12163, file: !817, line: 149, type: !12166)
!12169 = !DILocalVariable(name: "irqf", scope: !12163, file: !817, line: 151, type: !134)
!12170 = !DILocalVariable(name: "wq", scope: !12163, file: !817, line: 153, type: !12171)
!12171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12172, size: 64)
!12172 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !278)
!12173 = !DILocation(line: 149, column: 53, scope: !12163)
!12174 = !DILocation(line: 153, column: 28, scope: !12163)
!12175 = !DILocation(line: 155, column: 2, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !817, line: 155, column: 2)
!12177 = distinct !DILexicalBlock(scope: !12163, file: !817, line: 155, column: 2)
!12178 = !DILocation(line: 155, column: 2, scope: !12177)
!12179 = !DILocation(line: 155, column: 2, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12176, file: !817, line: 155, column: 2)
!12181 = !DILocation(line: 157, column: 9, scope: !12163)
!12182 = !DILocation(line: 151, column: 16, scope: !12163)
!12183 = !DILocation(line: 158, column: 2, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !817, line: 158, column: 2)
!12185 = distinct !DILexicalBlock(scope: !12163, file: !817, line: 158, column: 2)
!12186 = !{!1410, !1409, i64 0}
!12187 = !DILocation(line: 158, column: 2, scope: !12185)
!12188 = !DILocation(line: 158, column: 2, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12184, file: !817, line: 158, column: 2)
!12190 = !DILocation(line: 159, column: 6, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12163, file: !817, line: 159, column: 6)
!12192 = !DILocation(line: 159, column: 22, scope: !12191)
!12193 = !DILocation(line: 159, column: 6, scope: !12163)
!12194 = !DILocation(line: 160, column: 6, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12191, file: !817, line: 159, column: 28)
!12196 = !DILocation(line: 160, column: 12, scope: !12195)
!12197 = !{!1410, !1408, i64 8}
!12198 = !DILocalVariable(name: "wq", arg: 1, scope: !12199, file: !12200, line: 99, type: !12203)
!12199 = distinct !DISubprogram(name: "uk_waitq_wake_up", scope: !12200, file: !12200, line: 99, type: !12201, isLocal: true, isDefinition: true, scopeLine: 100, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12204)
!12200 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uksched/include/uk/wait.h", directory: "/root/.unikraft/apps/redis/build")
!12201 = !DISubroutineType(types: !12202)
!12202 = !{null, !12203}
!12203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!12204 = !{!12198, !12205, !12206, !12207}
!12205 = !DILocalVariable(name: "flags", scope: !12199, file: !12200, line: 101, type: !134)
!12206 = !DILocalVariable(name: "curr", scope: !12199, file: !12200, line: 102, type: !282)
!12207 = !DILocalVariable(name: "tmp", scope: !12199, file: !12200, line: 102, type: !282)
!12208 = !DILocation(line: 99, column: 40, scope: !12199, inlinedAt: !12209)
!12209 = distinct !DILocation(line: 161, column: 3, scope: !12195)
!12210 = !DILocation(line: 104, column: 10, scope: !12199, inlinedAt: !12209)
!12211 = !DILocation(line: 101, column: 16, scope: !12199, inlinedAt: !12209)
!12212 = !DILocation(line: 105, column: 2, scope: !12213, inlinedAt: !12209)
!12213 = distinct !DILexicalBlock(scope: !12199, file: !12200, line: 105, column: 2)
!12214 = !{!1411, !1408, i64 0}
!12215 = !DILocation(line: 102, column: 25, scope: !12199, inlinedAt: !12209)
!12216 = !DILocation(line: 105, column: 2, scope: !12217, inlinedAt: !12209)
!12217 = distinct !DILexicalBlock(scope: !12213, file: !12200, line: 105, column: 2)
!12218 = !{!12219, !1408, i64 16}
!12219 = !{!"uk_waitq_entry", !1409, i64 0, !1408, i64 8, !12220, i64 16}
!12220 = !{!"", !1408, i64 0}
!12221 = !DILocation(line: 102, column: 32, scope: !12199, inlinedAt: !12209)
!12222 = !DILocation(line: 106, column: 24, scope: !12217, inlinedAt: !12209)
!12223 = !{!12219, !1408, i64 8}
!12224 = !DILocation(line: 106, column: 3, scope: !12217, inlinedAt: !12209)
!12225 = distinct !{!12225, !12226, !12227}
!12226 = !DILocation(line: 105, column: 2, scope: !12213)
!12227 = !DILocation(line: 106, column: 30, scope: !12213)
!12228 = !DILocation(line: 107, column: 2, scope: !12199, inlinedAt: !12209)
!12229 = !DILocation(line: 108, column: 1, scope: !12199, inlinedAt: !12209)
!12230 = !DILocation(line: 162, column: 2, scope: !12195)
!12231 = !DILocation(line: 163, column: 2, scope: !12163)
!12232 = !DILocation(line: 164, column: 1, scope: !12163)
!12233 = distinct !DISubprogram(name: "sock_net_close", scope: !3, file: !3, line: 302, type: !828, isLocal: true, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12234)
!12234 = !{!12235, !12236, !12237, !12238, !12244}
!12235 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12233, file: !3, line: 302, type: !713)
!12236 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !12233, file: !3, line: 303, type: !785)
!12237 = !DILocalVariable(name: "ret", scope: !12233, file: !3, line: 304, type: !80)
!12238 = !DILocalVariable(name: "tid", scope: !12239, file: !3, line: 305, type: !170)
!12239 = distinct !DILexicalBlock(scope: !12240, file: !3, line: 305, column: 2)
!12240 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 305, column: 2)
!12241 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 305, column: 2)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 305, column: 2)
!12243 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 305, column: 2)
!12244 = !DILocalVariable(name: "_ret", scope: !12239, file: !3, line: 305, type: !135)
!12245 = !DILocation(line: 302, column: 34, scope: !12233)
!12246 = !DILocation(line: 303, column: 25, scope: !12233)
!12247 = !DILocation(line: 304, column: 2, scope: !12233)
!12248 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12249)
!12249 = distinct !DILocation(line: 305, column: 2, scope: !12242)
!12250 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12249)
!12251 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12249)
!12252 = !DILocation(line: 305, column: 2, scope: !12242)
!12253 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12254)
!12254 = distinct !DILocation(line: 305, column: 2, scope: !12242)
!12255 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12254)
!12256 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12254)
!12257 = !DILocation(line: 305, column: 2, scope: !12243)
!12258 = !DILocation(line: 305, column: 2, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 305, column: 2)
!12260 = !DILocation(line: 304, column: 6, scope: !12233)
!12261 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12262)
!12262 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12263)
!12263 = distinct !DILocation(line: 305, column: 2, scope: !12239)
!12264 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12262)
!12265 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12262)
!12266 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12263)
!12267 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12263)
!12268 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12263)
!12269 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12263)
!12270 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12263)
!12271 = !DILocation(line: 305, column: 2, scope: !12239)
!12272 = !{i32 -2145731797, i32 -2145731784, i32 -2145731759, i32 -2145731735, i32 -2145731710, i32 -2145731635, i32 -2145731610, i32 -2145731466, i32 -2145728286, i32 -2145728197, i32 -2145728076, i32 -2145727981, i32 -2145727880, i32 -2145727853, i32 -2145727770, i32 -2145727681, i32 -2145727560, i32 -2145727460, i32 -2145727354, i32 -2145727246, i32 -2145731174, i32 -2145731121, i32 -2145731090, i32 -2145731059, i32 -2145731038, i32 -2145731016, i32 -2145730967, i32 -2145730946, i32 -2145727163, i32 -2145727074, i32 -2145726953, i32 -2145726854, i32 -2145726748, i32 -2145726646, i32 -2145726613, i32 -2145726540, i32 -2145726472, i32 -2145730639, i32 -2145730580, i32 -2145730527, i32 -2145730496, i32 -2145730465, i32 -2145730444, i32 -2145730422, i32 -2145730373, i32 -2145730352, i32 -2145726421, i32 -2145726332, i32 -2145726211, i32 -2145726112, i32 -2145726006, i32 -2145725904, i32 -2145725871, i32 -2145725788, i32 -2145725699, i32 -2145725578, i32 -2145725478, i32 -2145725452, i32 -2145725349, i32 -2145725323, i32 -2145730094, i32 -2145730027, i32 -2145730002, i32 -2145729938, i32 -2145729856, i32 -2145729833, i32 -2145729808, i32 -2145729783}
!12273 = !DILocation(line: 305, column: 2, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 305, column: 2)
!12275 = distinct !DILexicalBlock(scope: !12239, file: !3, line: 305, column: 2)
!12276 = !{i32 -2145728768, i32 -2145728751}
!12277 = !DILocation(line: 307, column: 9, scope: !12233)
!12278 = !DILocation(line: 308, column: 1, scope: !12233)
!12279 = !DILocation(line: 307, column: 2, scope: !12233)
!12280 = distinct !DISubprogram(name: "sock_net_read", scope: !3, file: !3, line: 383, type: !833, isLocal: true, isDefinition: true, scopeLine: 386, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12281)
!12281 = !{!12282, !12283, !12284, !12285, !12286, !12287, !12293, !12294, !12295}
!12282 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12280, file: !3, line: 383, type: !713)
!12283 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !12280, file: !3, line: 384, type: !785)
!12284 = !DILocalVariable(name: "buf", arg: 3, scope: !12280, file: !3, line: 385, type: !835)
!12285 = !DILocalVariable(name: "ioflag", arg: 4, scope: !12280, file: !3, line: 385, type: !80)
!12286 = !DILocalVariable(name: "ret", scope: !12280, file: !3, line: 386, type: !80)
!12287 = !DILocalVariable(name: "tid", scope: !12288, file: !3, line: 387, type: !170)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !3, line: 387, column: 2)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 387, column: 2)
!12290 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 387, column: 2)
!12291 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 387, column: 2)
!12292 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 387, column: 2)
!12293 = !DILocalVariable(name: "_ret", scope: !12288, file: !3, line: 387, type: !135)
!12294 = !DILocalVariable(name: "_arg3", scope: !12288, file: !3, line: 387, type: !135)
!12295 = !DILocalVariable(name: "_arg4", scope: !12288, file: !3, line: 387, type: !135)
!12296 = !DILocation(line: 383, column: 33, scope: !12280)
!12297 = !DILocation(line: 384, column: 25, scope: !12280)
!12298 = !DILocation(line: 385, column: 16, scope: !12280)
!12299 = !DILocation(line: 385, column: 25, scope: !12280)
!12300 = !DILocation(line: 386, column: 2, scope: !12280)
!12301 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12302)
!12302 = distinct !DILocation(line: 387, column: 2, scope: !12291)
!12303 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12302)
!12304 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12302)
!12305 = !DILocation(line: 387, column: 2, scope: !12291)
!12306 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12307)
!12307 = distinct !DILocation(line: 387, column: 2, scope: !12291)
!12308 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12307)
!12309 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12307)
!12310 = !DILocation(line: 387, column: 2, scope: !12292)
!12311 = !DILocation(line: 387, column: 2, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12291, file: !3, line: 387, column: 2)
!12313 = !DILocation(line: 386, column: 6, scope: !12280)
!12314 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12315)
!12315 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12316)
!12316 = distinct !DILocation(line: 387, column: 2, scope: !12288)
!12317 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12315)
!12318 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12315)
!12319 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12316)
!12320 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12316)
!12321 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12316)
!12322 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12316)
!12323 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12316)
!12324 = !DILocation(line: 387, column: 2, scope: !12288)
!12325 = !{i32 -2145709632, i32 -2145709619, i32 -2145709594, i32 -2145709570, i32 -2145709545, i32 -2145709470, i32 -2145709445, i32 -2145709301, i32 -2145709276, i32 -2145705953, i32 -2145705864, i32 -2145705743, i32 -2145705648, i32 -2145705547, i32 -2145705520, i32 -2145705437, i32 -2145705348, i32 -2145705227, i32 -2145705127, i32 -2145705021, i32 -2145704913, i32 -2145708939, i32 -2145708886, i32 -2145708855, i32 -2145708824, i32 -2145708803, i32 -2145708781, i32 -2145708732, i32 -2145708711, i32 -2145708608, i32 -2145708576, i32 -2145704830, i32 -2145704741, i32 -2145704620, i32 -2145704521, i32 -2145704415, i32 -2145704313, i32 -2145704280, i32 -2145704207, i32 -2145704139, i32 -2145708386, i32 -2145708327, i32 -2145708274, i32 -2145708243, i32 -2145708212, i32 -2145708191, i32 -2145708169, i32 -2145708120, i32 -2145708099, i32 -2145704089, i32 -2145704000, i32 -2145703879, i32 -2145703780, i32 -2145703674, i32 -2145703572, i32 -2145703539, i32 -2145703456, i32 -2145703367, i32 -2145703246, i32 -2145703146, i32 -2145703120, i32 -2145703017, i32 -2145702991, i32 -2145707841, i32 -2145707816, i32 -2145707749, i32 -2145707724, i32 -2145707660, i32 -2145707578, i32 -2145707555, i32 -2145707530, i32 -2145707505}
!12326 = !DILocation(line: 387, column: 2, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 387, column: 2)
!12328 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 387, column: 2)
!12329 = !{i32 -2145706444, i32 -2145706427}
!12330 = !DILocation(line: 389, column: 9, scope: !12280)
!12331 = !DILocation(line: 390, column: 1, scope: !12280)
!12332 = !DILocation(line: 389, column: 2, scope: !12280)
!12333 = distinct !DISubprogram(name: "sock_net_write", scope: !3, file: !3, line: 349, type: !846, isLocal: true, isDefinition: true, scopeLine: 351, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12334)
!12334 = !{!12335, !12336, !12337, !12338, !12339, !12345, !12346}
!12335 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12333, file: !3, line: 349, type: !713)
!12336 = !DILocalVariable(name: "buf", arg: 2, scope: !12333, file: !3, line: 350, type: !835)
!12337 = !DILocalVariable(name: "ioflag", arg: 3, scope: !12333, file: !3, line: 350, type: !80)
!12338 = !DILocalVariable(name: "ret", scope: !12333, file: !3, line: 351, type: !80)
!12339 = !DILocalVariable(name: "tid", scope: !12340, file: !3, line: 352, type: !170)
!12340 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 352, column: 2)
!12341 = distinct !DILexicalBlock(scope: !12342, file: !3, line: 352, column: 2)
!12342 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 352, column: 2)
!12343 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 352, column: 2)
!12344 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 352, column: 2)
!12345 = !DILocalVariable(name: "_ret", scope: !12340, file: !3, line: 352, type: !135)
!12346 = !DILocalVariable(name: "_arg3", scope: !12340, file: !3, line: 352, type: !135)
!12347 = !DILocation(line: 349, column: 34, scope: !12333)
!12348 = !DILocation(line: 350, column: 16, scope: !12333)
!12349 = !DILocation(line: 350, column: 25, scope: !12333)
!12350 = !DILocation(line: 351, column: 2, scope: !12333)
!12351 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12352)
!12352 = distinct !DILocation(line: 352, column: 2, scope: !12343)
!12353 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12352)
!12354 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12352)
!12355 = !DILocation(line: 352, column: 2, scope: !12343)
!12356 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12357)
!12357 = distinct !DILocation(line: 352, column: 2, scope: !12343)
!12358 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12357)
!12359 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12357)
!12360 = !DILocation(line: 352, column: 2, scope: !12344)
!12361 = !DILocation(line: 352, column: 2, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 352, column: 2)
!12363 = !DILocation(line: 351, column: 6, scope: !12333)
!12364 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12365)
!12365 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12366)
!12366 = distinct !DILocation(line: 352, column: 2, scope: !12340)
!12367 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12365)
!12368 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12365)
!12369 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12366)
!12370 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12366)
!12371 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12366)
!12372 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12366)
!12373 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12366)
!12374 = !DILocation(line: 352, column: 2, scope: !12340)
!12375 = !{i32 -2145718586, i32 -2145718573, i32 -2145718548, i32 -2145718524, i32 -2145718499, i32 -2145718424, i32 -2145718399, i32 -2145718255, i32 -2145715030, i32 -2145714941, i32 -2145714820, i32 -2145714725, i32 -2145714624, i32 -2145714597, i32 -2145714514, i32 -2145714425, i32 -2145714304, i32 -2145714204, i32 -2145714098, i32 -2145713990, i32 -2145717925, i32 -2145717872, i32 -2145717841, i32 -2145717810, i32 -2145717789, i32 -2145717767, i32 -2145717718, i32 -2145717697, i32 -2145717594, i32 -2145713907, i32 -2145713818, i32 -2145713697, i32 -2145713598, i32 -2145713492, i32 -2145713390, i32 -2145713357, i32 -2145713284, i32 -2145713216, i32 -2145717404, i32 -2145717345, i32 -2145717292, i32 -2145717261, i32 -2145717230, i32 -2145717209, i32 -2145717187, i32 -2145717138, i32 -2145717117, i32 -2145713165, i32 -2145713076, i32 -2145712955, i32 -2145712856, i32 -2145712750, i32 -2145712648, i32 -2145712615, i32 -2145712532, i32 -2145712443, i32 -2145712322, i32 -2145712222, i32 -2145712196, i32 -2145712093, i32 -2145712067, i32 -2145716859, i32 -2145716792, i32 -2145716767, i32 -2145716703, i32 -2145716621, i32 -2145716598, i32 -2145716573, i32 -2145716548}
!12376 = !DILocation(line: 352, column: 2, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !3, line: 352, column: 2)
!12378 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 352, column: 2)
!12379 = !{i32 -2145715510, i32 -2145715493}
!12380 = !DILocation(line: 354, column: 9, scope: !12333)
!12381 = !DILocation(line: 355, column: 1, scope: !12333)
!12382 = !DILocation(line: 354, column: 2, scope: !12333)
!12383 = distinct !DISubprogram(name: "sock_net_ioctl", scope: !3, file: !3, line: 419, type: !856, isLocal: true, isDefinition: true, scopeLine: 423, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12384)
!12384 = !{!12385, !12386, !12387, !12388, !12389, !12390, !12396, !12397, !12398}
!12385 = !DILocalVariable(name: "s_vnode", arg: 1, scope: !12383, file: !3, line: 419, type: !713)
!12386 = !DILocalVariable(name: "vfscore_file", arg: 2, scope: !12383, file: !3, line: 420, type: !785)
!12387 = !DILocalVariable(name: "request", arg: 3, scope: !12383, file: !3, line: 421, type: !134)
!12388 = !DILocalVariable(name: "buf", arg: 4, scope: !12383, file: !3, line: 422, type: !143)
!12389 = !DILocalVariable(name: "ret", scope: !12383, file: !3, line: 423, type: !80)
!12390 = !DILocalVariable(name: "tid", scope: !12391, file: !3, line: 424, type: !170)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 424, column: 2)
!12392 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 424, column: 2)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !3, line: 424, column: 2)
!12394 = distinct !DILexicalBlock(scope: !12395, file: !3, line: 424, column: 2)
!12395 = distinct !DILexicalBlock(scope: !12383, file: !3, line: 424, column: 2)
!12396 = !DILocalVariable(name: "_ret", scope: !12391, file: !3, line: 424, type: !135)
!12397 = !DILocalVariable(name: "_arg3", scope: !12391, file: !3, line: 424, type: !135)
!12398 = !DILocalVariable(name: "_arg4", scope: !12391, file: !3, line: 424, type: !135)
!12399 = !DILocation(line: 419, column: 34, scope: !12383)
!12400 = !DILocation(line: 420, column: 25, scope: !12383)
!12401 = !DILocation(line: 421, column: 18, scope: !12383)
!12402 = !DILocation(line: 422, column: 10, scope: !12383)
!12403 = !DILocation(line: 423, column: 2, scope: !12383)
!12404 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12405)
!12405 = distinct !DILocation(line: 424, column: 2, scope: !12394)
!12406 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12405)
!12407 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12405)
!12408 = !DILocation(line: 424, column: 2, scope: !12394)
!12409 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12410)
!12410 = distinct !DILocation(line: 424, column: 2, scope: !12394)
!12411 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12410)
!12412 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12410)
!12413 = !DILocation(line: 424, column: 2, scope: !12395)
!12414 = !DILocation(line: 429, column: 35, scope: !1969, inlinedAt: !12415)
!12415 = distinct !DILocation(line: 424, column: 2, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12394, file: !3, line: 424, column: 2)
!12417 = !DILocation(line: 429, column: 65, scope: !1969, inlinedAt: !12415)
!12418 = !DILocation(line: 430, column: 21, scope: !1969, inlinedAt: !12415)
!12419 = !DILocation(line: 430, column: 36, scope: !1969, inlinedAt: !12415)
!12420 = !DILocation(line: 431, column: 24, scope: !1969, inlinedAt: !12415)
!12421 = !DILocation(line: 433, column: 18, scope: !1969, inlinedAt: !12415)
!12422 = !DILocation(line: 438, column: 29, scope: !1969, inlinedAt: !12415)
!12423 = !DILocation(line: 438, column: 12, scope: !1969, inlinedAt: !12415)
!12424 = !DILocation(line: 438, column: 6, scope: !1969, inlinedAt: !12415)
!12425 = !DILocation(line: 439, column: 2, scope: !1969, inlinedAt: !12415)
!12426 = !DILocation(line: 423, column: 6, scope: !12383)
!12427 = !DILocation(line: 424, column: 2, scope: !12416)
!12428 = !DILocation(line: 120, column: 2, scope: !1471, inlinedAt: !12429)
!12429 = distinct !DILocation(line: 49, column: 21, scope: !1498, inlinedAt: !12430)
!12430 = distinct !DILocation(line: 424, column: 2, scope: !12391)
!12431 = !DILocation(line: 118, column: 16, scope: !1471, inlinedAt: !12429)
!12432 = !DILocation(line: 121, column: 2, scope: !1471, inlinedAt: !12429)
!12433 = !DILocation(line: 49, column: 16, scope: !1498, inlinedAt: !12430)
!12434 = !DILocation(line: 50, column: 19, scope: !1498, inlinedAt: !12430)
!12435 = !DILocation(line: 50, column: 11, scope: !1498, inlinedAt: !12430)
!12436 = !DILocation(line: 50, column: 9, scope: !1498, inlinedAt: !12430)
!12437 = !DILocation(line: 50, column: 2, scope: !1498, inlinedAt: !12430)
!12438 = !DILocation(line: 424, column: 2, scope: !12391)
!12439 = !{i32 -2145700545, i32 -2145700532, i32 -2145700507, i32 -2145700483, i32 -2145700458, i32 -2145700383, i32 -2145700358, i32 -2145700214, i32 -2145700189, i32 -2145696863, i32 -2145696774, i32 -2145696653, i32 -2145696558, i32 -2145696457, i32 -2145696430, i32 -2145696347, i32 -2145696258, i32 -2145696137, i32 -2145696037, i32 -2145695931, i32 -2145695823, i32 -2145699852, i32 -2145699799, i32 -2145699768, i32 -2145699737, i32 -2145699716, i32 -2145699694, i32 -2145699645, i32 -2145699624, i32 -2145699521, i32 -2145699489, i32 -2145695740, i32 -2145695651, i32 -2145695530, i32 -2145695431, i32 -2145695325, i32 -2145695223, i32 -2145695190, i32 -2145695117, i32 -2145695049, i32 -2145699299, i32 -2145699240, i32 -2145699187, i32 -2145699156, i32 -2145699125, i32 -2145699104, i32 -2145699082, i32 -2145699033, i32 -2145699012, i32 -2145694998, i32 -2145694909, i32 -2145694788, i32 -2145694689, i32 -2145694583, i32 -2145694481, i32 -2145694448, i32 -2145694365, i32 -2145694276, i32 -2145694155, i32 -2145694055, i32 -2145694029, i32 -2145693926, i32 -2145693900, i32 -2145698754, i32 -2145698729, i32 -2145698662, i32 -2145698637, i32 -2145698573, i32 -2145698491, i32 -2145698468, i32 -2145698443, i32 -2145698418}
!12440 = !DILocation(line: 424, column: 2, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12442, file: !3, line: 424, column: 2)
!12442 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 424, column: 2)
!12443 = !{i32 -2145697357, i32 -2145697340}
!12444 = !DILocation(line: 426, column: 9, scope: !12383)
!12445 = !DILocation(line: 427, column: 1, scope: !12383)
!12446 = !DILocation(line: 426, column: 2, scope: !12383)
!12447 = distinct !DISubprogram(name: "lwip_sock_make_addr", scope: !3, file: !3, line: 2021, type: !12448, isLocal: true, isDefinition: true, scopeLine: 2023, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !12450)
!12448 = !DISubroutineType(types: !12449)
!12449 = !{!80, !1169, !3708, !164, !1004, !2773}
!12450 = !{!12451, !12452, !12453, !12454, !12455, !12456, !12457}
!12451 = !DILocalVariable(name: "conn", arg: 1, scope: !12447, file: !3, line: 2021, type: !1169)
!12452 = !DILocalVariable(name: "fromaddr", arg: 2, scope: !12447, file: !3, line: 2021, type: !3708)
!12453 = !DILocalVariable(name: "port", arg: 3, scope: !12447, file: !3, line: 2021, type: !164)
!12454 = !DILocalVariable(name: "from", arg: 4, scope: !12447, file: !3, line: 2022, type: !1004)
!12455 = !DILocalVariable(name: "fromlen", arg: 5, scope: !12447, file: !3, line: 2022, type: !2773)
!12456 = !DILocalVariable(name: "truncated", scope: !12447, file: !3, line: 2024, type: !80)
!12457 = !DILocalVariable(name: "saddr", scope: !12447, file: !3, line: 2025, type: !3054)
!12458 = !DILocation(line: 2021, column: 37, scope: !12447)
!12459 = !DILocation(line: 2021, column: 54, scope: !12447)
!12460 = !DILocation(line: 2021, column: 70, scope: !12447)
!12461 = !DILocation(line: 2022, column: 38, scope: !12447)
!12462 = !DILocation(line: 2022, column: 55, scope: !12447)
!12463 = !DILocation(line: 2024, column: 7, scope: !12447)
!12464 = !DILocation(line: 2025, column: 3, scope: !12447)
!12465 = !DILocation(line: 2029, column: 3, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 2029, column: 3)
!12467 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 2029, column: 3)
!12468 = !DILocation(line: 2029, column: 3, scope: !12467)
!12469 = !DILocation(line: 2029, column: 3, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 2029, column: 3)
!12471 = distinct !DILexicalBlock(scope: !12466, file: !3, line: 2029, column: 3)
!12472 = !DILocation(line: 2029, column: 3, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 2029, column: 3)
!12474 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 2029, column: 3)
!12475 = distinct !DILexicalBlock(scope: !12470, file: !3, line: 2029, column: 3)
!12476 = !DILocation(line: 2030, column: 3, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 2030, column: 3)
!12478 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 2030, column: 3)
!12479 = !DILocation(line: 2030, column: 3, scope: !12478)
!12480 = !DILocation(line: 2030, column: 3, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 2030, column: 3)
!12482 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 2030, column: 3)
!12483 = !DILocation(line: 2030, column: 3, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 2030, column: 3)
!12485 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 2030, column: 3)
!12486 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 2030, column: 3)
!12487 = !DILocation(line: 2031, column: 3, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !3, line: 2031, column: 3)
!12489 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 2031, column: 3)
!12490 = !DILocation(line: 2031, column: 3, scope: !12489)
!12491 = !DILocation(line: 2031, column: 3, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 2031, column: 3)
!12493 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 2031, column: 3)
!12494 = !DILocation(line: 2031, column: 3, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 2031, column: 3)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 2031, column: 3)
!12497 = distinct !DILexicalBlock(scope: !12492, file: !3, line: 2031, column: 3)
!12498 = !DILocation(line: 2035, column: 7, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 2035, column: 7)
!12500 = !DILocation(line: 2035, column: 46, scope: !12499)
!12501 = !DILocation(line: 2041, column: 3, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !3, line: 2041, column: 3)
!12503 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 2041, column: 3)
!12504 = !DILocation(line: 2035, column: 49, scope: !12499)
!12505 = !DILocation(line: 2035, column: 7, scope: !12447)
!12506 = !DILocation(line: 2036, column: 5, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 2036, column: 5)
!12508 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 2035, column: 69)
!12509 = !DILocation(line: 2037, column: 5, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12508, file: !3, line: 2037, column: 5)
!12511 = !DILocation(line: 2037, column: 5, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12513, file: !3, line: 2037, column: 5)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 2037, column: 5)
!12514 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 2037, column: 5)
!12515 = !DILocation(line: 2037, column: 5, scope: !12513)
!12516 = !DILocation(line: 2041, column: 3, scope: !12503)
!12517 = !DILocation(line: 2041, column: 3, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !3, line: 2041, column: 3)
!12519 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 2041, column: 3)
!12520 = !DILocation(line: 2041, column: 3, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 2041, column: 3)
!12522 = !DILocation(line: 2041, column: 3, scope: !12519)
!12523 = !DILocation(line: 2041, column: 3, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 2041, column: 3)
!12525 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 2041, column: 3)
!12526 = !DILocation(line: 2042, column: 27, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12447, file: !3, line: 2042, column: 7)
!12528 = !DILocation(line: 2042, column: 7, scope: !12527)
!12529 = !DILocation(line: 2042, column: 16, scope: !12527)
!12530 = !DILocation(line: 2042, column: 7, scope: !12447)
!12531 = !DILocation(line: 2044, column: 23, scope: !12532)
!12532 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 2044, column: 14)
!12533 = !DILocation(line: 2044, column: 14, scope: !12527)
!12534 = !DILocation(line: 2045, column: 14, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 2044, column: 42)
!12536 = !DILocation(line: 2046, column: 3, scope: !12535)
!12537 = !DILocation(line: 0, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 2042, column: 35)
!12539 = !DILocation(line: 2047, column: 3, scope: !12447)
!12540 = !DILocation(line: 0, scope: !12447)
!12541 = !DILocation(line: 2049, column: 1, scope: !12447)
!12542 = !DILocation(line: 2048, column: 3, scope: !12447)
