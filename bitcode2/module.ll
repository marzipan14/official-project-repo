; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.0, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.redisCommand = type { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.redisObject = type { i32, i32, i8* }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.0 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.clusterState = type { %struct.clusterNode*, i64, i32, i32, %struct.dict*, %struct.dict*, [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x i64], %struct.rax*, i64, i32, i32, i32, i64, i32, i64, %struct.clusterNode*, i64, i32, i64, i32, [10 x i64], [10 x i64], i64 }
%struct.clusterNode = type { i64, [40 x i8], i32, i64, [2048 x i8], i32, i32, %struct.clusterNode**, %struct.clusterNode*, i64, i64, i64, i64, i64, i64, i64, [46 x i8], i32, i32, %struct.clusterLink*, %struct.list* }
%struct.clusterLink = type { i64, i32, i8*, i8*, %struct.clusterNode* }
%struct.lua_State = type opaque
%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon, %struct.dictEntry* }
%union.anon = type { i8* }
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.anon.10 = type { i64, %struct.RedisModuleType* }
%struct.RedisModuleType = type { i64, %struct.RedisModule*, i8* (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i8*)*, void (%struct.RedisModuleIO*, %struct.redisObject*, i8*)*, i64 (i8*)*, void (%struct.RedisModuleDigest*, i8*)*, void (i8*)*, i32 (%struct.RedisModuleIO*, i32, i32)*, void (%struct.RedisModuleIO*, i32)*, i32, [10 x i8] }
%struct.RedisModule = type { i8*, i8*, i32, i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, i32 }
%struct.RedisModuleIO = type { i64, %struct._rio*, %struct.RedisModuleType*, i32, i32, %struct.RedisModuleCtx*, %struct.redisObject* }
%struct._rio = type { i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*)*, i32 (%struct._rio*)*, void (%struct._rio*, i8*, i64)*, i64, i64, i64, %union.anon.2 }
%union.anon.2 = type { %struct.anon.6 }
%struct.anon.6 = type { i32*, i32*, i32, i64, i8* }
%struct.RedisModuleCtx = type { i8*, %struct.RedisModule*, %struct.client*, %struct.RedisModuleBlockedClient*, %struct.AutoMemEntry*, i32, i32, i32, i8**, i32, i8*, i32*, i32, %struct.RedisModulePoolAllocBlock* }
%struct.RedisModuleBlockedClient = type { %struct.client*, %struct.RedisModule*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*, void (%struct.RedisModuleCtx*, i8*)*, i8*, %struct.client*, i32 }
%struct.AutoMemEntry = type { i8*, i32 }
%struct.RedisModulePoolAllocBlock = type { i32, i32, %struct.RedisModulePoolAllocBlock*, [0 x i8] }
%struct.RedisModuleDigest = type { [20 x i8], [20 x i8] }
%struct.moduleClusterReceiver = type { i64, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*, %struct.RedisModule*, %struct.moduleClusterReceiver* }
%struct.RedisModuleKey = type { %struct.RedisModuleCtx*, %struct.redisDb*, %struct.redisObject*, %struct.redisObject*, i8*, i32, i32, %struct.zrangespec, %struct.zlexrangespec, i32, i32, i8*, i32 }
%struct.zrangespec = type { double, double, i32, i32 }
%struct.zlexrangespec = type { i8*, i8*, i32, i32 }
%struct.quicklist = type { %struct.quicklistNode*, %struct.quicklistNode*, i64, i64, i32 }
%struct.quicklistNode = type { %struct.quicklistNode*, %struct.quicklistNode*, i8*, i32, i32 }
%struct.RedisModuleCallReply = type { %struct.RedisModuleCtx*, i32, i32, i64, i8*, i64, %union.anon.1 }
%union.anon.1 = type { i8* }
%struct.RedisModuleCommandProxy = type { %struct.RedisModule*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, %struct.redisCommand* }
%struct.RedisModuleDict = type { %struct.rax* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.zset = type { %struct.dict*, %struct.zskiplist* }
%struct.zskiplist = type { %struct.zskiplistNode*, %struct.zskiplistNode*, i64, i32 }
%struct.zskiplistNode = type { i8*, double, %struct.zskiplistNode*, [0 x %struct.zskiplistLevel] }
%struct.zskiplistLevel = type { %struct.zskiplistNode*, i64 }
%struct.clientReplyBlock = type { i64, i64, [0 x i8] }
%struct.listIter = type { %struct.listNode*, i32 }
%struct.RedisModuleCommandFilterCtx = type { %struct.redisObject**, i32 }
%struct.RedisModuleCommandFilter = type { %struct.RedisModule*, void (%struct.RedisModuleCommandFilterCtx*)*, i32 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.moduleValue = type { %struct.RedisModuleType*, i8* }
%struct.RedisModuleKeyspaceSubscriber = type { %struct.RedisModule*, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*, i32, i32 }
%struct.raxIterator = type { i32, %struct.rax*, i8*, i8*, i64, i64, [128 x i8], %struct.raxNode*, %struct.raxStack, i32 (%struct.raxNode**)* }
%struct.raxStack = type { i8**, i64, i64, [32 x i8*], i32 }
%struct.RedisModuleTimer = type { %struct.RedisModule*, void (%struct.RedisModuleCtx*, i8*)*, i8*, i32 }
%struct.RedisModuleDictIter = type { %struct.RedisModuleDict*, %struct.raxIterator }
%struct.RedisModuleSharedAPI = type { i8*, %struct.RedisModule* }
%struct.moduleLoadQueueEntry = type { i8*, i32, %struct.redisObject** }

@server = external dso_local global %struct.redisServer, align 8
@.str = private unnamed_addr constant [166 x i8] c"API misuse detected in module %s: RedisModule_ReplyWithArray(REDISMODULE_POSTPONED_ARRAY_LEN) not matched by the same number of RedisModule_SetReplyArrayLen() calls.\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"EXEC\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"admin\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"deny-oom\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"deny-script\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"allow-loading\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"pubsub\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"allow-stale\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"no-monitor\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"getkeys-api\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"no-cluster\00", align 1
@modules = internal unnamed_addr global %struct.dict* null, align 8, !dbg !0
@.str.16 = private unnamed_addr constant [41 x i8] c"(NULL string reply referenced in module)\00", align 1
@.str.17 = private unnamed_addr constant [150 x i8] c"Module attempted to use an in-place string modify operation with a string referenced multiple times. Please check the code for API usage correctness.\00", align 1
@.str.18 = private unnamed_addr constant [43 x i8] c"wrong number of arguments for '%s' command\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.22 = private unnamed_addr constant [162 x i8] c"API misuse detected in module %s: RedisModule_ReplySetArrayLength() called without previous RedisModule_ReplyWithArray(ctx,REDISMODULE_POSTPONED_ARRAY_LEN) call.\00", align 1
@shared = external dso_local local_unnamed_addr global %struct.sharedObjectsStruct, align 8
@.str.23 = private unnamed_addr constant [19 x i8] c"<dma-empty-string>\00", align 1
@.str.24 = private unnamed_addr constant [74 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Unsupported zset encoding\00", align 1
@.str.26 = private unnamed_addr constant [65 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\00", align 1
@ModuleTypeNameCharSet = dso_local local_unnamed_addr global i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.26, i64 0, i64 0), align 8, !dbg !732
@moduleTypeLookupModuleByID.cache = internal unnamed_addr global [3 x %struct.anon.10] zeroinitializer, align 16, !dbg !734
@.str.27 = private unnamed_addr constant [134 x i8] c"Error loading data from RDB (short read or EOF). Read performed by module '%s' about type '%s' after reading '%llu' bytes of a value.\00", align 1
@.str.28 = private unnamed_addr constant [79 x i8] c"Fatal: AOF method for module data type '%s' tried to emit unknown command '%s'\00", align 1
@.str.29 = private unnamed_addr constant [114 x i8] c"Fatal: AOF method for module data type '%s' tried to call RedisModule_EmitAOF() with wrong format specifiers '%s'\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"notice\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"<%s> \00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.36 = private unnamed_addr constant [47 x i8] c"Blocking module command called from Lua script\00", align 1
@.str.37 = private unnamed_addr constant [48 x i8] c"Blocking module command called from transaction\00", align 1
@moduleUnblockedClientsMutex = internal global %struct.pthread_mutex_t_* inttoptr (i64 -1 to %struct.pthread_mutex_t_*), align 8, !dbg !824
@moduleUnblockedClients = internal unnamed_addr global %struct.list* null, align 8, !dbg !776
@.str.38 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@moduleGIL = internal global %struct.pthread_mutex_t_* inttoptr (i64 -1 to %struct.pthread_mutex_t_*), align 8, !dbg !830
@moduleKeyspaceSubscribers = internal unnamed_addr global %struct.list* null, align 8, !dbg !778
@moduleFreeContextReusedClient = internal unnamed_addr global %struct.client* null, align 8, !dbg !780
@clusterReceivers = internal unnamed_addr global [255 x %struct.moduleClusterReceiver*] zeroinitializer, align 16, !dbg !784
@aeTimer = dso_local local_unnamed_addr global i64 -1, align 8, !dbg !772
@Timers = internal unnamed_addr global %struct.rax* null, align 8, !dbg !804
@.str.39 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@raxNotFound = external dso_local local_unnamed_addr global i8*, align 8
@moduleCommandFilters = internal unnamed_addr global %struct.list* null, align 8, !dbg !782
@moduleAPIDictType = dso_local global %struct.dictType { i64 (i8*)* @dictCStringKeyHash, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @dictCStringKeyCompare, void (i8*, i8*)* null, void (i8*, i8*)* null }, align 8, !dbg !774
@modulesDictType = external dso_local global %struct.dictType, align 8
@.str.40 = private unnamed_addr constant [55 x i8] c"Can't create the pipe for module blocking commands: %s\00", align 1
@.str.41 = private unnamed_addr constant [43 x i8] c"Can't load module from %s: server aborting\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"Module %s failed to load: %s\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"RedisModule_OnLoad\00", align 1
@.str.44 = private unnamed_addr constant [74 x i8] c"Module %s does not export RedisModule_OnLoad() symbol. Module not loaded.\00", align 1
@.str.45 = private unnamed_addr constant [51 x i8] c"Module %s initialization failed. Module not loaded\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"Module '%s' loaded from %s\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.48 = private unnamed_addr constant [45 x i8] c"Error when trying to close the %s module: %s\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"Module %s unloaded\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.51 = private unnamed_addr constant [41 x i8] c"LIST -- Return a list of loaded modules.\00", align 1
@.str.52 = private unnamed_addr constant [60 x i8] c"LOAD <path> [arg ...] -- Load a module library from <path>.\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"UNLOAD <name> -- Unload a module.\00", align 1
@moduleCommand.help = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i32 0, i32 0), i8* null], align 16
@.str.54 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.55 = private unnamed_addr constant [59 x i8] c"Error loading the extension. Please check the server logs.\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"unload\00", align 1
@.str.57 = private unnamed_addr constant [30 x i8] c"no such module with that name\00", align 1
@.str.58 = private unnamed_addr constant [68 x i8] c"the module exports one or more module-side data types, can't unload\00", align 1
@.str.59 = private unnamed_addr constant [86 x i8] c"the module exports APIs used by other modules. Please unload them first and try again\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"operation not possible.\00", align 1
@.str.61 = private unnamed_addr constant [27 x i8] c"Error unloading module: %s\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"ver\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"RedisModule_Alloc\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"RedisModule_Calloc\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"RedisModule_Realloc\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"RedisModule_Free\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"RedisModule_Strdup\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"RedisModule_CreateCommand\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"RedisModule_SetModuleAttribs\00", align 1
@.str.72 = private unnamed_addr constant [29 x i8] c"RedisModule_IsModuleNameBusy\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"RedisModule_WrongArity\00", align 1
@.str.74 = private unnamed_addr constant [30 x i8] c"RedisModule_ReplyWithLongLong\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"RedisModule_ReplyWithError\00", align 1
@.str.76 = private unnamed_addr constant [34 x i8] c"RedisModule_ReplyWithSimpleString\00", align 1
@.str.77 = private unnamed_addr constant [27 x i8] c"RedisModule_ReplyWithArray\00", align 1
@.str.78 = private unnamed_addr constant [32 x i8] c"RedisModule_ReplySetArrayLength\00", align 1
@.str.79 = private unnamed_addr constant [28 x i8] c"RedisModule_ReplyWithString\00", align 1
@.str.80 = private unnamed_addr constant [34 x i8] c"RedisModule_ReplyWithStringBuffer\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"RedisModule_ReplyWithCString\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"RedisModule_ReplyWithNull\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"RedisModule_ReplyWithCallReply\00", align 1
@.str.84 = private unnamed_addr constant [28 x i8] c"RedisModule_ReplyWithDouble\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"RedisModule_GetSelectedDb\00", align 1
@.str.86 = private unnamed_addr constant [21 x i8] c"RedisModule_SelectDb\00", align 1
@.str.87 = private unnamed_addr constant [20 x i8] c"RedisModule_OpenKey\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"RedisModule_CloseKey\00", align 1
@.str.89 = private unnamed_addr constant [20 x i8] c"RedisModule_KeyType\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"RedisModule_ValueLength\00", align 1
@.str.91 = private unnamed_addr constant [21 x i8] c"RedisModule_ListPush\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"RedisModule_ListPop\00", align 1
@.str.93 = private unnamed_addr constant [29 x i8] c"RedisModule_StringToLongLong\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"RedisModule_StringToDouble\00", align 1
@.str.95 = private unnamed_addr constant [17 x i8] c"RedisModule_Call\00", align 1
@.str.96 = private unnamed_addr constant [27 x i8] c"RedisModule_CallReplyProto\00", align 1
@.str.97 = private unnamed_addr constant [26 x i8] c"RedisModule_FreeCallReply\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"RedisModule_CallReplyInteger\00", align 1
@.str.99 = private unnamed_addr constant [26 x i8] c"RedisModule_CallReplyType\00", align 1
@.str.100 = private unnamed_addr constant [28 x i8] c"RedisModule_CallReplyLength\00", align 1
@.str.101 = private unnamed_addr constant [34 x i8] c"RedisModule_CallReplyArrayElement\00", align 1
@.str.102 = private unnamed_addr constant [31 x i8] c"RedisModule_CallReplyStringPtr\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"RedisModule_CreateStringFromCallReply\00", align 1
@.str.104 = private unnamed_addr constant [25 x i8] c"RedisModule_CreateString\00", align 1
@.str.105 = private unnamed_addr constant [37 x i8] c"RedisModule_CreateStringFromLongLong\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"RedisModule_CreateStringFromString\00", align 1
@.str.107 = private unnamed_addr constant [31 x i8] c"RedisModule_CreateStringPrintf\00", align 1
@.str.108 = private unnamed_addr constant [23 x i8] c"RedisModule_FreeString\00", align 1
@.str.109 = private unnamed_addr constant [25 x i8] c"RedisModule_StringPtrLen\00", align 1
@.str.110 = private unnamed_addr constant [23 x i8] c"RedisModule_AutoMemory\00", align 1
@.str.111 = private unnamed_addr constant [22 x i8] c"RedisModule_Replicate\00", align 1
@.str.112 = private unnamed_addr constant [30 x i8] c"RedisModule_ReplicateVerbatim\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"RedisModule_DeleteKey\00", align 1
@.str.114 = private unnamed_addr constant [22 x i8] c"RedisModule_UnlinkKey\00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"RedisModule_StringSet\00", align 1
@.str.116 = private unnamed_addr constant [22 x i8] c"RedisModule_StringDMA\00", align 1
@.str.117 = private unnamed_addr constant [27 x i8] c"RedisModule_StringTruncate\00", align 1
@.str.118 = private unnamed_addr constant [22 x i8] c"RedisModule_SetExpire\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c"RedisModule_GetExpire\00", align 1
@.str.120 = private unnamed_addr constant [20 x i8] c"RedisModule_ZsetAdd\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"RedisModule_ZsetIncrby\00", align 1
@.str.122 = private unnamed_addr constant [22 x i8] c"RedisModule_ZsetScore\00", align 1
@.str.123 = private unnamed_addr constant [20 x i8] c"RedisModule_ZsetRem\00", align 1
@.str.124 = private unnamed_addr constant [26 x i8] c"RedisModule_ZsetRangeStop\00", align 1
@.str.125 = private unnamed_addr constant [34 x i8] c"RedisModule_ZsetFirstInScoreRange\00", align 1
@.str.126 = private unnamed_addr constant [33 x i8] c"RedisModule_ZsetLastInScoreRange\00", align 1
@.str.127 = private unnamed_addr constant [32 x i8] c"RedisModule_ZsetFirstInLexRange\00", align 1
@.str.128 = private unnamed_addr constant [31 x i8] c"RedisModule_ZsetLastInLexRange\00", align 1
@.str.129 = private unnamed_addr constant [36 x i8] c"RedisModule_ZsetRangeCurrentElement\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"RedisModule_ZsetRangeNext\00", align 1
@.str.131 = private unnamed_addr constant [26 x i8] c"RedisModule_ZsetRangePrev\00", align 1
@.str.132 = private unnamed_addr constant [32 x i8] c"RedisModule_ZsetRangeEndReached\00", align 1
@.str.133 = private unnamed_addr constant [20 x i8] c"RedisModule_HashSet\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"RedisModule_HashGet\00", align 1
@.str.135 = private unnamed_addr constant [34 x i8] c"RedisModule_IsKeysPositionRequest\00", align 1
@.str.136 = private unnamed_addr constant [21 x i8] c"RedisModule_KeyAtPos\00", align 1
@.str.137 = private unnamed_addr constant [24 x i8] c"RedisModule_GetClientId\00", align 1
@.str.138 = private unnamed_addr constant [28 x i8] c"RedisModule_GetContextFlags\00", align 1
@.str.139 = private unnamed_addr constant [22 x i8] c"RedisModule_PoolAlloc\00", align 1
@.str.140 = private unnamed_addr constant [27 x i8] c"RedisModule_CreateDataType\00", align 1
@.str.141 = private unnamed_addr constant [31 x i8] c"RedisModule_ModuleTypeSetValue\00", align 1
@.str.142 = private unnamed_addr constant [30 x i8] c"RedisModule_ModuleTypeGetType\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"RedisModule_ModuleTypeGetValue\00", align 1
@.str.144 = private unnamed_addr constant [25 x i8] c"RedisModule_SaveUnsigned\00", align 1
@.str.145 = private unnamed_addr constant [25 x i8] c"RedisModule_LoadUnsigned\00", align 1
@.str.146 = private unnamed_addr constant [23 x i8] c"RedisModule_SaveSigned\00", align 1
@.str.147 = private unnamed_addr constant [23 x i8] c"RedisModule_LoadSigned\00", align 1
@.str.148 = private unnamed_addr constant [23 x i8] c"RedisModule_SaveString\00", align 1
@.str.149 = private unnamed_addr constant [29 x i8] c"RedisModule_SaveStringBuffer\00", align 1
@.str.150 = private unnamed_addr constant [23 x i8] c"RedisModule_LoadString\00", align 1
@.str.151 = private unnamed_addr constant [29 x i8] c"RedisModule_LoadStringBuffer\00", align 1
@.str.152 = private unnamed_addr constant [23 x i8] c"RedisModule_SaveDouble\00", align 1
@.str.153 = private unnamed_addr constant [23 x i8] c"RedisModule_LoadDouble\00", align 1
@.str.154 = private unnamed_addr constant [22 x i8] c"RedisModule_SaveFloat\00", align 1
@.str.155 = private unnamed_addr constant [22 x i8] c"RedisModule_LoadFloat\00", align 1
@.str.156 = private unnamed_addr constant [20 x i8] c"RedisModule_EmitAOF\00", align 1
@.str.157 = private unnamed_addr constant [16 x i8] c"RedisModule_Log\00", align 1
@.str.158 = private unnamed_addr constant [23 x i8] c"RedisModule_LogIOError\00", align 1
@.str.159 = private unnamed_addr constant [31 x i8] c"RedisModule_StringAppendBuffer\00", align 1
@.str.160 = private unnamed_addr constant [25 x i8] c"RedisModule_RetainString\00", align 1
@.str.161 = private unnamed_addr constant [26 x i8] c"RedisModule_StringCompare\00", align 1
@.str.162 = private unnamed_addr constant [29 x i8] c"RedisModule_GetContextFromIO\00", align 1
@.str.163 = private unnamed_addr constant [29 x i8] c"RedisModule_GetKeyNameFromIO\00", align 1
@.str.164 = private unnamed_addr constant [24 x i8] c"RedisModule_BlockClient\00", align 1
@.str.165 = private unnamed_addr constant [26 x i8] c"RedisModule_UnblockClient\00", align 1
@.str.166 = private unnamed_addr constant [34 x i8] c"RedisModule_IsBlockedReplyRequest\00", align 1
@.str.167 = private unnamed_addr constant [36 x i8] c"RedisModule_IsBlockedTimeoutRequest\00", align 1
@.str.168 = private unnamed_addr constant [40 x i8] c"RedisModule_GetBlockedClientPrivateData\00", align 1
@.str.169 = private unnamed_addr constant [23 x i8] c"RedisModule_AbortBlock\00", align 1
@.str.170 = private unnamed_addr constant [25 x i8] c"RedisModule_Milliseconds\00", align 1
@.str.171 = private unnamed_addr constant [33 x i8] c"RedisModule_GetThreadSafeContext\00", align 1
@.str.172 = private unnamed_addr constant [34 x i8] c"RedisModule_FreeThreadSafeContext\00", align 1
@.str.173 = private unnamed_addr constant [34 x i8] c"RedisModule_ThreadSafeContextLock\00", align 1
@.str.174 = private unnamed_addr constant [36 x i8] c"RedisModule_ThreadSafeContextUnlock\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"RedisModule_DigestAddStringBuffer\00", align 1
@.str.176 = private unnamed_addr constant [30 x i8] c"RedisModule_DigestAddLongLong\00", align 1
@.str.177 = private unnamed_addr constant [30 x i8] c"RedisModule_DigestEndSequence\00", align 1
@.str.178 = private unnamed_addr constant [38 x i8] c"RedisModule_SubscribeToKeyspaceEvents\00", align 1
@.str.179 = private unnamed_addr constant [43 x i8] c"RedisModule_RegisterClusterMessageReceiver\00", align 1
@.str.180 = private unnamed_addr constant [31 x i8] c"RedisModule_SendClusterMessage\00", align 1
@.str.181 = private unnamed_addr constant [31 x i8] c"RedisModule_GetClusterNodeInfo\00", align 1
@.str.182 = private unnamed_addr constant [32 x i8] c"RedisModule_GetClusterNodesList\00", align 1
@.str.183 = private unnamed_addr constant [33 x i8] c"RedisModule_FreeClusterNodesList\00", align 1
@.str.184 = private unnamed_addr constant [24 x i8] c"RedisModule_CreateTimer\00", align 1
@.str.185 = private unnamed_addr constant [22 x i8] c"RedisModule_StopTimer\00", align 1
@.str.186 = private unnamed_addr constant [25 x i8] c"RedisModule_GetTimerInfo\00", align 1
@.str.187 = private unnamed_addr constant [27 x i8] c"RedisModule_GetMyClusterID\00", align 1
@.str.188 = private unnamed_addr constant [27 x i8] c"RedisModule_GetClusterSize\00", align 1
@.str.189 = private unnamed_addr constant [27 x i8] c"RedisModule_GetRandomBytes\00", align 1
@.str.190 = private unnamed_addr constant [30 x i8] c"RedisModule_GetRandomHexChars\00", align 1
@.str.191 = private unnamed_addr constant [38 x i8] c"RedisModule_BlockedClientDisconnected\00", align 1
@.str.192 = private unnamed_addr constant [34 x i8] c"RedisModule_SetDisconnectCallback\00", align 1
@.str.193 = private unnamed_addr constant [35 x i8] c"RedisModule_GetBlockedClientHandle\00", align 1
@.str.194 = private unnamed_addr constant [28 x i8] c"RedisModule_SetClusterFlags\00", align 1
@.str.195 = private unnamed_addr constant [23 x i8] c"RedisModule_CreateDict\00", align 1
@.str.196 = private unnamed_addr constant [21 x i8] c"RedisModule_FreeDict\00", align 1
@.str.197 = private unnamed_addr constant [21 x i8] c"RedisModule_DictSize\00", align 1
@.str.198 = private unnamed_addr constant [21 x i8] c"RedisModule_DictSetC\00", align 1
@.str.199 = private unnamed_addr constant [25 x i8] c"RedisModule_DictReplaceC\00", align 1
@.str.200 = private unnamed_addr constant [20 x i8] c"RedisModule_DictSet\00", align 1
@.str.201 = private unnamed_addr constant [24 x i8] c"RedisModule_DictReplace\00", align 1
@.str.202 = private unnamed_addr constant [21 x i8] c"RedisModule_DictGetC\00", align 1
@.str.203 = private unnamed_addr constant [20 x i8] c"RedisModule_DictGet\00", align 1
@.str.204 = private unnamed_addr constant [21 x i8] c"RedisModule_DictDelC\00", align 1
@.str.205 = private unnamed_addr constant [20 x i8] c"RedisModule_DictDel\00", align 1
@.str.206 = private unnamed_addr constant [31 x i8] c"RedisModule_DictIteratorStartC\00", align 1
@.str.207 = private unnamed_addr constant [30 x i8] c"RedisModule_DictIteratorStart\00", align 1
@.str.208 = private unnamed_addr constant [29 x i8] c"RedisModule_DictIteratorStop\00", align 1
@.str.209 = private unnamed_addr constant [32 x i8] c"RedisModule_DictIteratorReseekC\00", align 1
@.str.210 = private unnamed_addr constant [31 x i8] c"RedisModule_DictIteratorReseek\00", align 1
@.str.211 = private unnamed_addr constant [22 x i8] c"RedisModule_DictNextC\00", align 1
@.str.212 = private unnamed_addr constant [22 x i8] c"RedisModule_DictPrevC\00", align 1
@.str.213 = private unnamed_addr constant [21 x i8] c"RedisModule_DictNext\00", align 1
@.str.214 = private unnamed_addr constant [21 x i8] c"RedisModule_DictPrev\00", align 1
@.str.215 = private unnamed_addr constant [25 x i8] c"RedisModule_DictCompareC\00", align 1
@.str.216 = private unnamed_addr constant [24 x i8] c"RedisModule_DictCompare\00", align 1
@.str.217 = private unnamed_addr constant [28 x i8] c"RedisModule_ExportSharedAPI\00", align 1
@.str.218 = private unnamed_addr constant [25 x i8] c"RedisModule_GetSharedAPI\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"RedisModule_RegisterCommandFilter\00", align 1
@.str.220 = private unnamed_addr constant [36 x i8] c"RedisModule_UnregisterCommandFilter\00", align 1
@.str.221 = private unnamed_addr constant [35 x i8] c"RedisModule_CommandFilterArgsCount\00", align 1
@.str.222 = private unnamed_addr constant [32 x i8] c"RedisModule_CommandFilterArgGet\00", align 1
@.str.223 = private unnamed_addr constant [35 x i8] c"RedisModule_CommandFilterArgInsert\00", align 1
@.str.224 = private unnamed_addr constant [36 x i8] c"RedisModule_CommandFilterArgReplace\00", align 1
@.str.225 = private unnamed_addr constant [35 x i8] c"RedisModule_CommandFilterArgDelete\00", align 1
@__A_VARIABLE = internal global i32 0
@switch.table.RM_KeyType = private unnamed_addr constant [6 x i32] [i32 1, i32 2, i32 4, i32 5, i32 3, i32 6]

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Alloc(i64) #0 !dbg !836 {
  %2 = tail call i8* @zmalloc(i64 %0) #9, !dbg !842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !843
  ret i8* %2, !dbg !843
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Calloc(i64, i64) #0 !dbg !844 {
  %3 = mul i64 %1, %0, !dbg !852
  %4 = tail call i8* @zcalloc(i64 %3) #9, !dbg !853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !854
  ret i8* %4, !dbg !854
}

; Function Attrs: noredzone
declare dso_local i8* @zcalloc(i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Realloc(i8*, i64) #0 !dbg !855 {
  %3 = tail call i8* @zrealloc(i8* %0, i64 %1) #9, !dbg !863
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !864
  ret i8* %3, !dbg !864
}

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_Free(i8*) #0 !dbg !865 {
  tail call void @zfree(i8* %0) #9, !dbg !869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !870
  ret void, !dbg !870
}

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_Strdup(i8*) #0 !dbg !871 {
  %2 = tail call i8* @zstrdup(i8* %0) #9, !dbg !877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !878
  ret i8* %2, !dbg !878
}

; Function Attrs: noredzone
declare dso_local i8* @zstrdup(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @poolAllocRelease(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !879 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 13, !dbg !889
  %3 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !889, !tbaa !890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !897
  %4 = icmp eq %struct.RedisModulePoolAllocBlock* %3, null, !dbg !898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !897
  br i1 %4, label %11, label %5, !dbg !897

; <label>:5:                                      ; preds = %1, %5
  %6 = phi %struct.RedisModulePoolAllocBlock* [ %9, %5 ], [ %3, %1 ]
  %7 = bitcast %struct.RedisModulePoolAllocBlock* %6 to i8*, !dbg !899
  %8 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 2, !dbg !900
  %9 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %8, align 8, !dbg !900, !tbaa !902
  tail call void @zfree(i8* %7) #9, !dbg !904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !897
  %10 = icmp eq %struct.RedisModulePoolAllocBlock* %9, null, !dbg !898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !897
  br i1 %10, label %11, label %5, !dbg !897, !llvm.loop !905

; <label>:11:                                     ; preds = %5, %1
  store %struct.RedisModulePoolAllocBlock* null, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !907, !tbaa !890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !908
  ret void, !dbg !908
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #3

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_PoolAlloc(%struct.RedisModuleCtx* nocapture, i64) #0 !dbg !909 {
  %3 = icmp eq i64 %1, 0, !dbg !926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !928
  br i1 %3, label %75, label %4, !dbg !928

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 13, !dbg !929
  %6 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %5, align 8, !dbg !929, !tbaa !890
  %7 = icmp eq %struct.RedisModulePoolAllocBlock* %6, null, !dbg !931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !931
  br i1 %7, label %15, label %8, !dbg !931

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 0, !dbg !932
  %10 = load i32, i32* %9, align 8, !dbg !932, !tbaa !933
  %11 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 1, !dbg !934
  %12 = load i32, i32* %11, align 4, !dbg !934, !tbaa !933
  %13 = sub i32 %10, %12, !dbg !935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !931
  %14 = zext i32 %13 to i64, !dbg !931
  br label %15, !dbg !931

; <label>:15:                                     ; preds = %4, %8
  %16 = phi i64 [ %14, %8 ], [ 0, %4 ]
  %17 = icmp ult i64 %16, %1, !dbg !937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !938
  br i1 %17, label %47, label %18, !dbg !938

; <label>:18:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !940
  %19 = icmp ult i64 %1, 8, !dbg !941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !942
  br i1 %19, label %20, label %26, !dbg !942

; <label>:20:                                     ; preds = %18, %24
  %21 = phi i64 [ %22, %24 ], [ 8, %18 ]
  %22 = lshr i64 %21, 1, !dbg !943
  %23 = icmp ult i64 %22, %1, !dbg !944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !940
  br i1 %23, label %26, label %24, !dbg !940

; <label>:24:                                     ; preds = %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !940
  %25 = icmp ugt i64 %22, %1, !dbg !941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !942
  br i1 %25, label %20, label %26, !dbg !942, !llvm.loop !945

; <label>:26:                                     ; preds = %24, %20, %18
  %27 = phi i64 [ 8, %18 ], [ %21, %20 ], [ %22, %24 ], !dbg !947
  %28 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 1, !dbg !948
  %29 = load i32, i32* %28, align 4, !dbg !948, !tbaa !933
  %30 = zext i32 %29 to i64, !dbg !950
  %31 = urem i64 %30, %27, !dbg !951
  %32 = icmp eq i64 %31, 0, !dbg !951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !952
  br i1 %32, label %37, label %33, !dbg !952

; <label>:33:                                     ; preds = %26
  %34 = sub nsw i64 %27, %31, !dbg !953
  %35 = trunc i64 %34 to i32, !dbg !954
  %36 = add i32 %29, %35, !dbg !954
  store i32 %36, i32* %28, align 4, !dbg !954, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !955
  br label %37, !dbg !955

; <label>:37:                                     ; preds = %26, %33
  %38 = phi i32 [ %29, %26 ], [ %36, %33 ], !dbg !956
  %39 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 0, !dbg !957
  %40 = load i32, i32* %39, align 8, !dbg !957, !tbaa !933
  %41 = icmp ult i32 %40, %38, !dbg !958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !959
  br i1 %41, label %45, label %42, !dbg !959

; <label>:42:                                     ; preds = %37
  %43 = sub i32 %40, %38, !dbg !960
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !959
  %44 = zext i32 %43 to i64, !dbg !959
  br label %45, !dbg !959

; <label>:45:                                     ; preds = %37, %42
  %46 = phi i64 [ %44, %42 ], [ 0, %37 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !961
  br label %47, !dbg !961

; <label>:47:                                     ; preds = %15, %45
  %48 = phi i64 [ %46, %45 ], [ %16, %15 ], !dbg !962
  %49 = icmp ult i64 %48, %1, !dbg !963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !964
  br i1 %49, label %50, label %67, !dbg !964

; <label>:50:                                     ; preds = %47
  %51 = icmp ugt i64 %1, 8192, !dbg !966
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !968
  br i1 %51, label %52, label %53, !dbg !968

; <label>:52:                                     ; preds = %50
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !969
  br label %53, !dbg !969

; <label>:53:                                     ; preds = %52, %50
  %54 = phi i64 [ %1, %52 ], [ 8192, %50 ], !dbg !970
  %55 = add i64 %54, 16, !dbg !971
  %56 = tail call i8* @zmalloc(i64 %55) #9, !dbg !972
  %57 = bitcast i8* %56 to %struct.RedisModulePoolAllocBlock*, !dbg !972
  %58 = trunc i64 %54 to i32, !dbg !973
  %59 = bitcast i8* %56 to i32*, !dbg !974
  store i32 %58, i32* %59, align 8, !dbg !975, !tbaa !933
  %60 = getelementptr inbounds i8, i8* %56, i64 4, !dbg !976
  %61 = bitcast i8* %60 to i32*, !dbg !976
  store i32 0, i32* %61, align 4, !dbg !977, !tbaa !933
  %62 = bitcast %struct.RedisModulePoolAllocBlock** %5 to i64*, !dbg !978
  %63 = load i64, i64* %62, align 8, !dbg !978, !tbaa !890
  %64 = getelementptr inbounds i8, i8* %56, i64 8, !dbg !979
  %65 = bitcast i8* %64 to i64*, !dbg !980
  store i64 %63, i64* %65, align 8, !dbg !980, !tbaa !902
  %66 = bitcast %struct.RedisModulePoolAllocBlock** %5 to i8**, !dbg !981
  store i8* %56, i8** %66, align 8, !dbg !981, !tbaa !890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !982
  br label %67, !dbg !982

; <label>:67:                                     ; preds = %53, %47
  %68 = phi %struct.RedisModulePoolAllocBlock* [ %57, %53 ], [ %6, %47 ], !dbg !962
  %69 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %68, i64 0, i32 1, !dbg !983
  %70 = load i32, i32* %69, align 4, !dbg !983, !tbaa !933
  %71 = zext i32 %70 to i64, !dbg !984
  %72 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %68, i64 0, i32 3, i64 %71, !dbg !984
  %73 = trunc i64 %1 to i32, !dbg !986
  %74 = add i32 %70, %73, !dbg !986
  store i32 %74, i32* %69, align 4, !dbg !986, !tbaa !933
  br label %75

; <label>:75:                                     ; preds = %2, %67
  %76 = phi i8* [ %72, %67 ], [ null, %2 ], !dbg !962
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !987
  ret i8* %76, !dbg !987
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleCreateEmptyKey(%struct.RedisModuleKey* nocapture, i32) local_unnamed_addr #0 !dbg !988 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !1028
  %4 = load i32, i32* %3, align 8, !dbg !1028, !tbaa !1030
  %5 = and i32 %4, 2, !dbg !1035
  %6 = icmp eq i32 %5, 0, !dbg !1035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1036
  br i1 %6, label %29, label %7, !dbg !1036

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !1037
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !1037, !tbaa !1038
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !1039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1040
  br i1 %10, label %11, label %29, !dbg !1040

; <label>:11:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1041
  switch i32 %1, label %29 [
    i32 2, label %12
    i32 5, label %19
    i32 3, label %21
  ], !dbg !1041

; <label>:12:                                     ; preds = %11
  %13 = tail call %struct.redisObject* @createQuicklistObject() #9, !dbg !1042
  %14 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 2, !dbg !1045
  %15 = bitcast i8** %14 to %struct.quicklist**, !dbg !1045
  %16 = load %struct.quicklist*, %struct.quicklist** %15, align 8, !dbg !1045, !tbaa !1046
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !1048, !tbaa !1049
  %18 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !1056, !tbaa !1057
  tail call void @quicklistSetOptions(%struct.quicklist* %16, i32 %17, i32 %18) #9, !dbg !1058
  br label %23, !dbg !1059

; <label>:19:                                     ; preds = %11
  %20 = tail call %struct.redisObject* @createZsetZiplistObject() #9, !dbg !1060
  br label %23, !dbg !1061

; <label>:21:                                     ; preds = %11
  %22 = tail call %struct.redisObject* @createHashObject() #9, !dbg !1062
  br label %23, !dbg !1063

; <label>:23:                                     ; preds = %21, %19, %12
  %24 = phi %struct.redisObject* [ %22, %21 ], [ %20, %19 ], [ %13, %12 ], !dbg !1064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1064
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !1065
  %26 = load %struct.redisDb*, %struct.redisDb** %25, align 8, !dbg !1065, !tbaa !1066
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1067
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !1067, !tbaa !1068
  tail call void @dbAdd(%struct.redisDb* %26, %struct.redisObject* %28, %struct.redisObject* %24) #9, !dbg !1069
  store %struct.redisObject* %24, %struct.redisObject** %8, align 8, !dbg !1070, !tbaa !1038
  br label %29, !dbg !1071

; <label>:29:                                     ; preds = %11, %2, %7, %23
  %30 = phi i32 [ 0, %23 ], [ 1, %7 ], [ 1, %2 ], [ 1, %11 ], !dbg !1072
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1074
  ret i32 %30, !dbg !1074
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createQuicklistObject() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @quicklistSetOptions(%struct.quicklist*, i32, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createZsetZiplistObject() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createHashObject() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @dbAdd(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleDelKeyIfEmpty(%struct.RedisModuleKey* nocapture) local_unnamed_addr #0 !dbg !1075 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !1083
  %3 = load i32, i32* %2, align 8, !dbg !1083, !tbaa !1030
  %4 = and i32 %3, 2, !dbg !1085
  %5 = icmp eq i32 %4, 0, !dbg !1085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1086
  br i1 %5, label %35, label %6, !dbg !1086

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !1087
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !1087, !tbaa !1038
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !1088
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1089
  br i1 %9, label %35, label %10, !dbg !1089

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 0, !dbg !1091
  %12 = load i32, i32* %11, align 8, !dbg !1091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1092
  %13 = trunc i32 %12 to i4, !dbg !1092
  switch i4 %13, label %23 [
    i4 1, label %24
    i4 2, label %14
    i4 3, label %17
    i4 4, label %20
  ], !dbg !1092

; <label>:14:                                     ; preds = %10
  %15 = tail call i64 @setTypeSize(%struct.redisObject* nonnull %8) #9, !dbg !1093
  %16 = icmp eq i64 %15, 0, !dbg !1095
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1096
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %16, label %27, label %33, !dbg !1097

; <label>:17:                                     ; preds = %10
  %18 = tail call i64 @zsetLength(%struct.redisObject* nonnull %8) #9, !dbg !1098
  %19 = icmp eq i64 %18, 0, !dbg !1099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %19, label %27, label %33, !dbg !1097

; <label>:20:                                     ; preds = %10
  %21 = tail call i64 @hashTypeLength(%struct.redisObject* nonnull %8) #9, !dbg !1101
  %22 = icmp eq i64 %21, 0, !dbg !1102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %22, label %27, label %33, !dbg !1097

; <label>:23:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br label %33

; <label>:24:                                     ; preds = %10
  %25 = tail call i64 @listTypeLength(%struct.redisObject* nonnull %8) #9, !dbg !1106
  %26 = icmp eq i64 %25, 0, !dbg !1107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %26, label %27, label %33, !dbg !1097

; <label>:27:                                     ; preds = %14, %17, %20, %24
  %28 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !1109
  %29 = load %struct.redisDb*, %struct.redisDb** %28, align 8, !dbg !1109, !tbaa !1066
  %30 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1112
  %31 = load %struct.redisObject*, %struct.redisObject** %30, align 8, !dbg !1112, !tbaa !1068
  %32 = tail call i32 @dbDelete(%struct.redisDb* %29, %struct.redisObject* %31) #9, !dbg !1113
  store %struct.redisObject* null, %struct.redisObject** %7, align 8, !dbg !1114, !tbaa !1038
  br label %33, !dbg !1115

; <label>:33:                                     ; preds = %24, %23, %20, %17, %14, %27
  %34 = phi i32 [ 1, %27 ], [ 0, %14 ], [ 0, %17 ], [ 0, %20 ], [ 0, %23 ], [ 0, %24 ], !dbg !1116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1118
  br label %35

; <label>:35:                                     ; preds = %6, %1, %33
  %36 = phi i32 [ %34, %33 ], [ 0, %1 ], [ 0, %6 ], !dbg !1118
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1119
  ret i32 %36, !dbg !1119
}

; Function Attrs: noredzone
declare dso_local i64 @listTypeLength(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @setTypeSize(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @zsetLength(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @hashTypeLength(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dbDelete(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetApi(i8*, i8** nocapture) #0 !dbg !1120 {
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !1129, !tbaa !1130
  %4 = tail call %struct.dictEntry* @dictFind(%struct.dict* %3, i8* %0) #9, !dbg !1131
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !1133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1135
  br i1 %5, label %11, label %6, !dbg !1135

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %4, i64 0, i32 1, i32 0, !dbg !1136
  %8 = bitcast i8** %7 to i64*, !dbg !1136
  %9 = load i64, i64* %8, align 8, !dbg !1136, !tbaa !1137
  %10 = bitcast i8** %1 to i64*, !dbg !1138
  store i64 %9, i64* %10, align 8, !dbg !1138, !tbaa !902
  br label %11, !dbg !1139

; <label>:11:                                     ; preds = %2, %6
  %12 = phi i32 [ 0, %6 ], [ 1, %2 ], !dbg !1140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1141
  ret i32 %12, !dbg !1141
}

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictFind(%struct.dict*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleFreeContext(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !1142 {
  tail call void @autoMemoryCollect(%struct.RedisModuleCtx* %0) #10, !dbg !1146
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 13, !dbg !1149
  %3 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !1149, !tbaa !890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1151
  %4 = icmp eq %struct.RedisModulePoolAllocBlock* %3, null, !dbg !1152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1151
  br i1 %4, label %11, label %5, !dbg !1151

; <label>:5:                                      ; preds = %1, %5
  %6 = phi %struct.RedisModulePoolAllocBlock* [ %9, %5 ], [ %3, %1 ]
  %7 = bitcast %struct.RedisModulePoolAllocBlock* %6 to i8*, !dbg !1153
  %8 = getelementptr inbounds %struct.RedisModulePoolAllocBlock, %struct.RedisModulePoolAllocBlock* %6, i64 0, i32 2, !dbg !1154
  %9 = load %struct.RedisModulePoolAllocBlock*, %struct.RedisModulePoolAllocBlock** %8, align 8, !dbg !1154, !tbaa !902
  tail call void @zfree(i8* %7) #9, !dbg !1156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1151
  %10 = icmp eq %struct.RedisModulePoolAllocBlock* %9, null, !dbg !1152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1151
  br i1 %10, label %11, label %5, !dbg !1151, !llvm.loop !905

; <label>:11:                                     ; preds = %5, %1
  store %struct.RedisModulePoolAllocBlock* null, %struct.RedisModulePoolAllocBlock** %2, align 8, !dbg !1157, !tbaa !890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1158
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 8, !dbg !1159
  %13 = load i8**, i8*** %12, align 8, !dbg !1159, !tbaa !1161
  %14 = icmp eq i8** %13, null, !dbg !1162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1163
  br i1 %14, label %22, label %15, !dbg !1163

; <label>:15:                                     ; preds = %11
  %16 = bitcast i8** %13 to i8*, !dbg !1164
  tail call void @zfree(i8* %16) #9, !dbg !1166
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 9, !dbg !1167
  store i32 0, i32* %17, align 8, !dbg !1168, !tbaa !1169
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !1170
  %19 = load %struct.RedisModule*, %struct.RedisModule** %18, align 8, !dbg !1170, !tbaa !1171
  %20 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %19, i64 0, i32 1, !dbg !1172
  %21 = load i8*, i8** %20, align 8, !dbg !1172, !tbaa !1173
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str, i64 0, i64 0), i8* %21) #9, !dbg !1175
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1176
  br label %22, !dbg !1176

; <label>:22:                                     ; preds = %11, %15
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1177
  %24 = load i32, i32* %23, align 8, !dbg !1177, !tbaa !1179
  %25 = and i32 %24, 32, !dbg !1180
  %26 = icmp eq i32 %25, 0, !dbg !1180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1181
  br i1 %26, label %30, label %27, !dbg !1181

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !1182
  %29 = load %struct.client*, %struct.client** %28, align 8, !dbg !1182, !tbaa !1183
  tail call void @freeClient(%struct.client* %29) #9, !dbg !1184
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1184
  br label %30, !dbg !1184

; <label>:30:                                     ; preds = %22, %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1185
  ret void, !dbg !1185
}

; Function Attrs: noredzone nounwind
define dso_local void @autoMemoryCollect(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !1186 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1195
  %3 = load i32, i32* %2, align 8, !dbg !1195, !tbaa !1179
  %4 = and i32 %3, 2, !dbg !1197
  %5 = icmp eq i32 %4, 0, !dbg !1197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1198
  br i1 %5, label %45, label %6, !dbg !1198

; <label>:6:                                      ; preds = %1
  %7 = and i32 %3, -3, !dbg !1199
  store i32 %7, i32* %2, align 8, !dbg !1199, !tbaa !1179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1201
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1202
  %9 = load i32, i32* %8, align 4, !dbg !1202, !tbaa !1203
  %10 = icmp sgt i32 %9, 0, !dbg !1204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1205
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  br i1 %10, label %12, label %39, !dbg !1205

; <label>:12:                                     ; preds = %6, %32
  %13 = phi i64 [ %33, %32 ], [ 0, %6 ]
  %14 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %11, align 8, !dbg !1206, !tbaa !1207
  %15 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %14, i64 %13, i32 0, !dbg !1208
  %16 = load i8*, i8** %15, align 8, !dbg !1208, !tbaa !1209
  %17 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %14, i64 %13, i32 1, !dbg !1212
  %18 = load i32, i32* %17, align 8, !dbg !1212, !tbaa !1213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1214
  switch i32 %18, label %32 [
    i32 1, label %19
    i32 2, label %21
    i32 0, label %26
    i32 4, label %28
  ], !dbg !1214

; <label>:19:                                     ; preds = %12
  %20 = bitcast i8* %16 to %struct.redisObject*, !dbg !1215
  tail call void @decrRefCount(%struct.redisObject* %20) #9, !dbg !1217
  br label %31, !dbg !1218

; <label>:21:                                     ; preds = %12
  %22 = bitcast i8* %16 to %struct.RedisModuleCallReply*, !dbg !1219
  %23 = bitcast i8* %16 to %struct.RedisModuleCtx**, !dbg !1245
  %24 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %23, align 8, !dbg !1245, !tbaa !1246
  tail call void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply* %22, i32 0) #9, !dbg !1249
  %25 = tail call i32 @autoMemoryFreed(%struct.RedisModuleCtx* %24, i32 2, i8* %16) #9, !dbg !1250
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1251
  br label %31, !dbg !1252

; <label>:26:                                     ; preds = %12
  %27 = bitcast i8* %16 to %struct.RedisModuleKey*, !dbg !1253
  tail call void @RM_CloseKey(%struct.RedisModuleKey* %27) #10, !dbg !1254
  br label %31, !dbg !1255

; <label>:28:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1270
  %29 = bitcast i8* %16 to %struct.rax**, !dbg !1271
  %30 = load %struct.rax*, %struct.rax** %29, align 8, !dbg !1271, !tbaa !1272
  tail call void @raxFree(%struct.rax* %30) #9, !dbg !1274
  tail call void @zfree(i8* %16) #9, !dbg !1275
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1276
  br label %31, !dbg !1277

; <label>:31:                                     ; preds = %19, %21, %26, %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1278
  br label %32, !dbg !1279

; <label>:32:                                     ; preds = %31, %12
  %33 = add nuw nsw i64 %13, 1, !dbg !1279
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1280
  %34 = load i32, i32* %8, align 4, !dbg !1202, !tbaa !1203
  %35 = sext i32 %34 to i64, !dbg !1204
  %36 = icmp slt i64 %33, %35, !dbg !1204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1205
  br i1 %36, label %12, label %37, !dbg !1205, !llvm.loop !1281

; <label>:37:                                     ; preds = %32
  %38 = load i32, i32* %2, align 8, !dbg !1283, !tbaa !1179
  br label %39, !dbg !1283

; <label>:39:                                     ; preds = %6, %37
  %40 = phi i32 [ %38, %37 ], [ %7, %6 ], !dbg !1283
  %41 = or i32 %40, 2, !dbg !1283
  store i32 %41, i32* %2, align 8, !dbg !1283, !tbaa !1179
  %42 = bitcast %struct.AutoMemEntry** %11 to i8**, !dbg !1284
  %43 = load i8*, i8** %42, align 8, !dbg !1284, !tbaa !1207
  tail call void @zfree(i8* %43) #9, !dbg !1285
  store %struct.AutoMemEntry* null, %struct.AutoMemEntry** %11, align 8, !dbg !1286, !tbaa !1207
  %44 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !1287
  store i32 0, i32* %44, align 8, !dbg !1288, !tbaa !1289
  store i32 0, i32* %8, align 4, !dbg !1290, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1291
  br label %45, !dbg !1291

; <label>:45:                                     ; preds = %1, %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1291
  ret void, !dbg !1291
}

; Function Attrs: noredzone
declare dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @freeClient(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleHandlePropagationAfterCommandCallback(%struct.RedisModuleCtx* nocapture readonly) local_unnamed_addr #0 !dbg !1292 {
  %2 = alloca [1 x %struct.redisObject*], align 8
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !1301
  %4 = load %struct.client*, %struct.client** %3, align 8, !dbg !1301, !tbaa !1183
  %5 = getelementptr inbounds %struct.client, %struct.client* %4, i64 0, i32 21, !dbg !1303
  %6 = load i32, i32* %5, align 8, !dbg !1303, !tbaa !1305
  %7 = and i32 %6, 256, !dbg !1309
  %8 = icmp eq i32 %7, 0, !dbg !1309
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1310
  br i1 %8, label %9, label %24, !dbg !1310

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1311
  %11 = load i32, i32* %10, align 8, !dbg !1311, !tbaa !1179
  %12 = and i32 %11, 1, !dbg !1312
  %13 = icmp eq i32 %12, 0, !dbg !1312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1313
  br i1 %13, label %24, label %14, !dbg !1313

; <label>:14:                                     ; preds = %9
  %15 = bitcast [1 x %struct.redisObject*]* %2 to i8*, !dbg !1314
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #5, !dbg !1314
  %16 = tail call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9, !dbg !1316
  %17 = getelementptr inbounds [1 x %struct.redisObject*], [1 x %struct.redisObject*]* %2, i64 0, i64 0, !dbg !1317
  store %struct.redisObject* %16, %struct.redisObject** %17, align 8, !dbg !1318, !tbaa !902
  %18 = load %struct.redisCommand*, %struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !1319, !tbaa !1320
  %19 = getelementptr inbounds %struct.client, %struct.client* %4, i64 0, i32 2, !dbg !1321
  %20 = load %struct.redisDb*, %struct.redisDb** %19, align 8, !dbg !1321, !tbaa !1322
  %21 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %20, i64 0, i32 5, !dbg !1323
  %22 = load i32, i32* %21, align 8, !dbg !1323, !tbaa !1324
  call void @alsoPropagate(%struct.redisCommand* %18, i32 %22, %struct.redisObject** nonnull %17, i32 1, i32 3) #9, !dbg !1326
  %23 = load %struct.redisObject*, %struct.redisObject** %17, align 8, !dbg !1327, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %23) #9, !dbg !1328
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #5, !dbg !1329
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1330
  br label %24, !dbg !1330

; <label>:24:                                     ; preds = %14, %9, %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1332
  ret void, !dbg !1332
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @alsoPropagate(%struct.redisCommand*, i32, %struct.redisObject**, i32, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RedisModuleCommandDispatcher(%struct.client*) #0 !dbg !1333 {
  %2 = alloca [1 x %struct.redisObject*], align 8
  %3 = alloca %struct.RedisModuleCtx, align 8
  %4 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 10, !dbg !1350
  %5 = load %struct.redisCommand*, %struct.redisCommand** %4, align 8, !dbg !1350, !tbaa !1351
  %6 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %5, i64 0, i32 5, !dbg !1352
  %7 = bitcast i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %6 to %struct.RedisModuleCommandProxy**, !dbg !1352
  %8 = load %struct.RedisModuleCommandProxy*, %struct.RedisModuleCommandProxy** %7, align 8, !dbg !1352, !tbaa !1353
  %9 = bitcast %struct.RedisModuleCtx* %3 to i8*, !dbg !1356
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #5, !dbg !1356
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 3
  %11 = bitcast %struct.RedisModuleBlockedClient** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 80, i1 false), !dbg !1357
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 0, !dbg !1357
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %12, align 8, !dbg !1357
  %13 = bitcast %struct.RedisModuleCommandProxy* %8 to i64*, !dbg !1358
  %14 = load i64, i64* %13, align 8, !dbg !1358, !tbaa !1359
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 1, !dbg !1361
  %16 = bitcast %struct.RedisModule** %15 to i64*, !dbg !1362
  store i64 %14, i64* %16, align 8, !dbg !1362, !tbaa !1171
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 2, !dbg !1363
  store %struct.client* %0, %struct.client** %17, align 8, !dbg !1364, !tbaa !1183
  %18 = getelementptr inbounds %struct.RedisModuleCommandProxy, %struct.RedisModuleCommandProxy* %8, i64 0, i32 1, !dbg !1365
  %19 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %18, align 8, !dbg !1365, !tbaa !1366
  %20 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !1367
  %21 = bitcast %struct.redisObject*** %20 to i8***, !dbg !1367
  %22 = load i8**, i8*** %21, align 8, !dbg !1367, !tbaa !1368
  %23 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !1369
  %24 = load i32, i32* %23, align 8, !dbg !1369, !tbaa !1370
  %25 = call i32 %19(%struct.RedisModuleCtx* nonnull %3, i8** %22, i32 %24) #9, !dbg !1371
  %26 = load %struct.client*, %struct.client** %17, align 8, !dbg !1373, !tbaa !1183
  %27 = getelementptr inbounds %struct.client, %struct.client* %26, i64 0, i32 21, !dbg !1375
  %28 = load i32, i32* %27, align 8, !dbg !1375, !tbaa !1305
  %29 = and i32 %28, 256, !dbg !1376
  %30 = icmp eq i32 %29, 0, !dbg !1376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1377
  br i1 %30, label %31, label %46, !dbg !1377

; <label>:31:                                     ; preds = %1
  %32 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 7, !dbg !1378
  %33 = load i32, i32* %32, align 8, !dbg !1378, !tbaa !1179
  %34 = and i32 %33, 1, !dbg !1379
  %35 = icmp eq i32 %34, 0, !dbg !1379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1380
  br i1 %35, label %46, label %36, !dbg !1380

; <label>:36:                                     ; preds = %31
  %37 = bitcast [1 x %struct.redisObject*]* %2 to i8*, !dbg !1381
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #5, !dbg !1381
  %38 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9, !dbg !1382
  %39 = getelementptr inbounds [1 x %struct.redisObject*], [1 x %struct.redisObject*]* %2, i64 0, i64 0, !dbg !1383
  store %struct.redisObject* %38, %struct.redisObject** %39, align 8, !dbg !1384, !tbaa !902
  %40 = load %struct.redisCommand*, %struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !1385, !tbaa !1320
  %41 = getelementptr inbounds %struct.client, %struct.client* %26, i64 0, i32 2, !dbg !1386
  %42 = load %struct.redisDb*, %struct.redisDb** %41, align 8, !dbg !1386, !tbaa !1322
  %43 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %42, i64 0, i32 5, !dbg !1387
  %44 = load i32, i32* %43, align 8, !dbg !1387, !tbaa !1324
  call void @alsoPropagate(%struct.redisCommand* %40, i32 %44, %struct.redisObject** nonnull %39, i32 1, i32 3) #9, !dbg !1388
  %45 = load %struct.redisObject*, %struct.redisObject** %39, align 8, !dbg !1389, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %45) #9, !dbg !1390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #5, !dbg !1391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1392
  br label %46, !dbg !1392

; <label>:46:                                     ; preds = %31, %36, %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1393
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1394
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %3) #10, !dbg !1395
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1397
  %47 = load i32, i32* %23, align 8, !dbg !1398, !tbaa !1370
  %48 = icmp sgt i32 %47, 0, !dbg !1400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1401
  br i1 %48, label %50, label %49, !dbg !1401

; <label>:49:                                     ; preds = %61, %46
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #5, !dbg !1402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1402
  ret void, !dbg !1402

; <label>:50:                                     ; preds = %46, %61
  %51 = phi i32 [ %62, %61 ], [ %47, %46 ]
  %52 = phi i64 [ %63, %61 ], [ 0, %46 ]
  %53 = load %struct.redisObject**, %struct.redisObject*** %20, align 8, !dbg !1403, !tbaa !1368
  %54 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %53, i64 %52, !dbg !1406
  %55 = load %struct.redisObject*, %struct.redisObject** %54, align 8, !dbg !1406, !tbaa !902
  %56 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %55, i64 0, i32 1, !dbg !1407
  %57 = load i32, i32* %56, align 4, !dbg !1407, !tbaa !1408
  %58 = icmp sgt i32 %57, 1, !dbg !1409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1410
  br i1 %58, label %59, label %61, !dbg !1410

; <label>:59:                                     ; preds = %50
  call void @trimStringObjectIfNeeded(%struct.redisObject* %55) #9, !dbg !1411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1411
  %60 = load i32, i32* %23, align 8, !dbg !1398, !tbaa !1370
  br label %61, !dbg !1411

; <label>:61:                                     ; preds = %50, %59
  %62 = phi i32 [ %51, %50 ], [ %60, %59 ], !dbg !1398
  %63 = add nuw nsw i64 %52, 1, !dbg !1412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1413
  %64 = sext i32 %62 to i64, !dbg !1400
  %65 = icmp slt i64 %63, %64, !dbg !1400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1401
  br i1 %65, label %50, label %49, !dbg !1401, !llvm.loop !1414
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #3

; Function Attrs: noredzone
declare dso_local void @trimStringObjectIfNeeded(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32* @moduleGetCommandKeysViaAPI(%struct.redisCommand* nocapture readonly, %struct.redisObject**, i32, i32*) local_unnamed_addr #0 !dbg !1416 {
  %5 = alloca %struct.RedisModuleCtx, align 8
  %6 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %0, i64 0, i32 5, !dbg !1429
  %7 = bitcast i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %6 to %struct.RedisModuleCommandProxy**, !dbg !1429
  %8 = load %struct.RedisModuleCommandProxy*, %struct.RedisModuleCommandProxy** %7, align 8, !dbg !1429, !tbaa !1353
  %9 = bitcast %struct.RedisModuleCtx* %5 to i8*, !dbg !1431
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #5, !dbg !1431
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 3
  %11 = bitcast %struct.RedisModuleBlockedClient** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 80, i1 false), !dbg !1432
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 0, !dbg !1432
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %12, align 8, !dbg !1432
  %13 = bitcast %struct.RedisModuleCommandProxy* %8 to i64*, !dbg !1433
  %14 = load i64, i64* %13, align 8, !dbg !1433, !tbaa !1359
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 1, !dbg !1434
  %16 = bitcast %struct.RedisModule** %15 to i64*, !dbg !1435
  store i64 %14, i64* %16, align 8, !dbg !1435, !tbaa !1171
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 2, !dbg !1436
  store %struct.client* null, %struct.client** %17, align 8, !dbg !1437, !tbaa !1183
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 7, !dbg !1438
  store i32 4, i32* %18, align 8, !dbg !1439, !tbaa !1179
  %19 = getelementptr inbounds %struct.RedisModuleCommandProxy, %struct.RedisModuleCommandProxy* %8, i64 0, i32 1, !dbg !1440
  %20 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %19, align 8, !dbg !1440, !tbaa !1366
  %21 = bitcast %struct.redisObject** %1 to i8**, !dbg !1441
  %22 = call i32 %20(%struct.RedisModuleCtx* nonnull %5, i8** %21, i32 %2) #9, !dbg !1442
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 11, !dbg !1443
  %24 = load i32*, i32** %23, align 8, !dbg !1443, !tbaa !1444
  %25 = icmp eq i32* %3, null, !dbg !1446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1448
  br i1 %25, label %29, label %26, !dbg !1448

; <label>:26:                                     ; preds = %4
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %5, i64 0, i32 12, !dbg !1449
  %28 = load i32, i32* %27, align 8, !dbg !1449, !tbaa !1450
  store i32 %28, i32* %3, align 4, !dbg !1451, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1452
  br label %29, !dbg !1452

; <label>:29:                                     ; preds = %4, %26
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %5) #10, !dbg !1453
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #5, !dbg !1454
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1455
  ret i32* %24, !dbg !1455
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_IsKeysPositionRequest(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !1456 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1462
  %3 = load i32, i32* %2, align 8, !dbg !1462, !tbaa !1179
  %4 = lshr i32 %3, 2, !dbg !1463
  %5 = and i32 %4, 1, !dbg !1463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1464
  ret i32 %5, !dbg !1464
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_KeyAtPos(%struct.RedisModuleCtx* nocapture, i32) #0 !dbg !1465 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1473
  %4 = load i32, i32* %3, align 8, !dbg !1473, !tbaa !1179
  %5 = and i32 %4, 4, !dbg !1475
  %6 = icmp eq i32 %5, 0, !dbg !1475
  %7 = icmp slt i32 %1, 1, !dbg !1476
  %8 = or i1 %7, %6, !dbg !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1478
  br i1 %8, label %24, label %9, !dbg !1478

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 11, !dbg !1479
  %11 = bitcast i32** %10 to i8**, !dbg !1479
  %12 = load i8*, i8** %11, align 8, !dbg !1479, !tbaa !1444
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 12, !dbg !1480
  %14 = load i32, i32* %13, align 8, !dbg !1480, !tbaa !1450
  %15 = add nsw i32 %14, 1, !dbg !1481
  %16 = sext i32 %15 to i64, !dbg !1482
  %17 = shl nsw i64 %16, 2, !dbg !1483
  %18 = tail call i8* @zrealloc(i8* %12, i64 %17) #9, !dbg !1484
  %19 = bitcast i8* %18 to i32*, !dbg !1484
  store i8* %18, i8** %11, align 8, !dbg !1485, !tbaa !1444
  %20 = load i32, i32* %13, align 8, !dbg !1486, !tbaa !1450
  %21 = add nsw i32 %20, 1, !dbg !1486
  store i32 %21, i32* %13, align 8, !dbg !1486, !tbaa !1450
  %22 = sext i32 %20 to i64, !dbg !1487
  %23 = getelementptr inbounds i32, i32* %19, i64 %22, !dbg !1487
  store i32 %1, i32* %23, align 4, !dbg !1488, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1489
  br label %24, !dbg !1489

; <label>:24:                                     ; preds = %2, %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1489
  ret void, !dbg !1489
}

; Function Attrs: noredzone nounwind
define dso_local i32 @commandFlagsFromString(i8*) local_unnamed_addr #0 !dbg !1490 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*, !dbg !1505
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5, !dbg !1505
  %4 = tail call i64 @strlen(i8* %0) #9, !dbg !1507
  %5 = call i8** @sdssplitlen(i8* %0, i64 %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1, i32* nonnull %2) #9, !dbg !1509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1512
  %6 = load i32, i32* %2, align 4, !dbg !1513, !tbaa !933
  %7 = icmp sgt i32 %6, 0, !dbg !1514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1515
  br i1 %7, label %8, label %62, !dbg !1515

; <label>:8:                                      ; preds = %1
  %9 = sext i32 %6 to i64
  br label %10, !dbg !1516

; <label>:10:                                     ; preds = %8, %55
  %11 = phi i64 [ 0, %8 ], [ %58, %55 ]
  %12 = phi i32 [ 0, %8 ], [ %57, %55 ]
  %13 = getelementptr inbounds i8*, i8** %5, i64 %11, !dbg !1516
  %14 = load i8*, i8** %13, align 8, !dbg !1516, !tbaa !902
  %15 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !1518
  %16 = icmp eq i32 %15, 0, !dbg !1518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1520
  br i1 %16, label %55, label %17, !dbg !1520

; <label>:17:                                     ; preds = %10
  %18 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !1521
  %19 = icmp eq i32 %18, 0, !dbg !1521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1523
  br i1 %19, label %55, label %20, !dbg !1523

; <label>:20:                                     ; preds = %17
  %21 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !1524
  %22 = icmp eq i32 %21, 0, !dbg !1524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1526
  br i1 %22, label %55, label %23, !dbg !1526

; <label>:23:                                     ; preds = %20
  %24 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !1527
  %25 = icmp eq i32 %24, 0, !dbg !1527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1529
  br i1 %25, label %55, label %26, !dbg !1529

; <label>:26:                                     ; preds = %23
  %27 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !1530
  %28 = icmp eq i32 %27, 0, !dbg !1530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1532
  br i1 %28, label %55, label %29, !dbg !1532

; <label>:29:                                     ; preds = %26
  %30 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !1533
  %31 = icmp eq i32 %30, 0, !dbg !1533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1535
  br i1 %31, label %55, label %32, !dbg !1535

; <label>:32:                                     ; preds = %29
  %33 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #11, !dbg !1536
  %34 = icmp eq i32 %33, 0, !dbg !1536
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1538
  br i1 %34, label %55, label %35, !dbg !1538

; <label>:35:                                     ; preds = %32
  %36 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #11, !dbg !1539
  %37 = icmp eq i32 %36, 0, !dbg !1539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1541
  br i1 %37, label %55, label %38, !dbg !1541

; <label>:38:                                     ; preds = %35
  %39 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #11, !dbg !1542
  %40 = icmp eq i32 %39, 0, !dbg !1542
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1544
  br i1 %40, label %55, label %41, !dbg !1544

; <label>:41:                                     ; preds = %38
  %42 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !1545
  %43 = icmp eq i32 %42, 0, !dbg !1545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1547
  br i1 %43, label %55, label %44, !dbg !1547

; <label>:44:                                     ; preds = %41
  %45 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #11, !dbg !1548
  %46 = icmp eq i32 %45, 0, !dbg !1548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1550
  br i1 %46, label %55, label %47, !dbg !1550

; <label>:47:                                     ; preds = %44
  %48 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !1551
  %49 = icmp eq i32 %48, 0, !dbg !1551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1553
  br i1 %49, label %55, label %50, !dbg !1553

; <label>:50:                                     ; preds = %47
  %51 = call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #11, !dbg !1554
  %52 = icmp eq i32 %51, 0, !dbg !1554
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1556
  br i1 %52, label %55, label %53, !dbg !1556

; <label>:53:                                     ; preds = %50
  %54 = trunc i64 %11 to i32, !dbg !1511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1557
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %62

; <label>:55:                                     ; preds = %50, %47, %44, %41, %38, %35, %32, %29, %26, %23, %20, %17, %10
  %56 = phi i32 [ 1, %10 ], [ 2, %17 ], [ 16, %20 ], [ 4, %23 ], [ 64, %26 ], [ 512, %29 ], [ 32, %32 ], [ 128, %35 ], [ 1024, %38 ], [ 2048, %41 ], [ 8192, %44 ], [ 16384, %47 ], [ 32768, %50 ]
  %57 = or i32 %12, %56, !dbg !1558
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1559
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %58 = add nuw nsw i64 %11, 1, !dbg !1560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1561
  %59 = icmp slt i64 %58, %9, !dbg !1514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1515
  br i1 %59, label %10, label %60, !dbg !1515, !llvm.loop !1562

; <label>:60:                                     ; preds = %55
  %61 = trunc i64 %58 to i32, !dbg !1506
  br label %62, !dbg !1564

; <label>:62:                                     ; preds = %60, %1, %53
  %63 = phi i32 [ %12, %53 ], [ 0, %1 ], [ %57, %60 ]
  %64 = phi i32 [ %54, %53 ], [ 0, %1 ], [ %61, %60 ]
  call void @sdsfreesplitres(i8** %5, i32 %6) #9, !dbg !1564
  %65 = load i32, i32* %2, align 4, !dbg !1565, !tbaa !933
  %66 = icmp eq i32 %64, %65, !dbg !1567
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1569
  %67 = select i1 %66, i32 %63, i32 -1, !dbg !1570
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5, !dbg !1571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1571
  ret i32 %67, !dbg !1571
}

; Function Attrs: noredzone
declare dso_local i8** @sdssplitlen(i8*, i64, i8*, i32, i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #4

; Function Attrs: noredzone
declare dso_local void @sdsfreesplitres(i8**, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CreateCommand(%struct.RedisModuleCtx* nocapture readonly, i8*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i8*, i32, i32, i32) #0 !dbg !1572 {
  %8 = icmp eq i8* %3, null, !dbg !1594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1594
  br i1 %8, label %9, label %10, !dbg !1594

; <label>:9:                                      ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1597
  br label %19, !dbg !1597

; <label>:10:                                     ; preds = %7
  %11 = tail call i32 @commandFlagsFromString(i8* nonnull %3) #10, !dbg !1599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1594
  %12 = icmp eq i32 %11, -1, !dbg !1600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1596
  br i1 %12, label %64, label %13, !dbg !1596

; <label>:13:                                     ; preds = %10
  %14 = trunc i32 %11 to i16, !dbg !1602
  %15 = icmp slt i16 %14, 0, !dbg !1602
  %16 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !1603
  %17 = icmp ne i32 %16, 0, !dbg !1604
  %18 = and i1 %15, %17, !dbg !1597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1597
  br i1 %18, label %64, label %19, !dbg !1597

; <label>:19:                                     ; preds = %9, %13
  %20 = phi i32 [ 0, %9 ], [ %11, %13 ]
  %21 = tail call i8* @sdsnew(i8* %1) #9, !dbg !1605
  %22 = tail call %struct.redisCommand* @lookupCommand(i8* %21) #9, !dbg !1607
  %23 = icmp eq %struct.redisCommand* %22, null, !dbg !1609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1610
  br i1 %23, label %25, label %24, !dbg !1610

; <label>:24:                                     ; preds = %19
  tail call void @sdsfree(i8* %21) #9, !dbg !1611
  br label %62, !dbg !1613

; <label>:25:                                     ; preds = %19
  %26 = tail call i8* @zmalloc(i64 24) #9, !dbg !1614
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !1616
  %28 = bitcast %struct.RedisModule** %27 to i64*, !dbg !1616
  %29 = load i64, i64* %28, align 8, !dbg !1616, !tbaa !1171
  %30 = bitcast i8* %26 to i64*, !dbg !1617
  store i64 %29, i64* %30, align 8, !dbg !1617, !tbaa !1359
  %31 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !1618
  %32 = bitcast i8* %31 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !1618
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* %2, i32 (%struct.RedisModuleCtx*, i8**, i32)** %32, align 8, !dbg !1619, !tbaa !1366
  %33 = tail call i8* @zmalloc(i64 80) #9, !dbg !1620
  %34 = getelementptr inbounds i8, i8* %26, i64 16, !dbg !1621
  %35 = bitcast i8* %34 to i8**, !dbg !1622
  store i8* %33, i8** %35, align 8, !dbg !1622, !tbaa !1623
  %36 = bitcast i8* %33 to i8**, !dbg !1624
  store i8* %21, i8** %36, align 8, !dbg !1625, !tbaa !1626
  %37 = getelementptr inbounds i8, i8* %33, i64 8, !dbg !1627
  %38 = bitcast i8* %37 to void (%struct.client*)**, !dbg !1627
  store void (%struct.client*)* @RedisModuleCommandDispatcher, void (%struct.client*)** %38, align 8, !dbg !1628, !tbaa !1629
  %39 = getelementptr inbounds i8, i8* %33, i64 16, !dbg !1630
  %40 = bitcast i8* %39 to i32*, !dbg !1630
  store i32 -1, i32* %40, align 8, !dbg !1631, !tbaa !1632
  %41 = or i32 %20, 8, !dbg !1633
  %42 = getelementptr inbounds i8, i8* %33, i64 32, !dbg !1634
  %43 = bitcast i8* %42 to i32*, !dbg !1634
  store i32 %41, i32* %43, align 8, !dbg !1635, !tbaa !1636
  %44 = getelementptr inbounds i8, i8* %33, i64 40, !dbg !1637
  %45 = bitcast i8* %44 to i8**, !dbg !1638
  store i8* %26, i8** %45, align 8, !dbg !1638, !tbaa !1353
  %46 = getelementptr inbounds i8, i8* %33, i64 48, !dbg !1639
  %47 = bitcast i8* %46 to i32*, !dbg !1639
  store i32 %4, i32* %47, align 8, !dbg !1640, !tbaa !1641
  %48 = getelementptr inbounds i8, i8* %33, i64 52, !dbg !1642
  %49 = bitcast i8* %48 to i32*, !dbg !1642
  store i32 %5, i32* %49, align 4, !dbg !1643, !tbaa !1644
  %50 = getelementptr inbounds i8, i8* %33, i64 56, !dbg !1645
  %51 = bitcast i8* %50 to i32*, !dbg !1645
  store i32 %6, i32* %51, align 8, !dbg !1646, !tbaa !1647
  %52 = getelementptr inbounds i8, i8* %33, i64 64, !dbg !1648
  %53 = bitcast i8* %52 to <2 x i64>*, !dbg !1649
  store <2 x i64> zeroinitializer, <2 x i64>* %53, align 8, !dbg !1649, !tbaa !1650
  %54 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !1651, !tbaa !1652
  %55 = tail call i8* @sdsdup(i8* %21) #9, !dbg !1653
  %56 = load i8*, i8** %35, align 8, !dbg !1654, !tbaa !1623
  %57 = tail call i32 @dictAdd(%struct.dict* %54, i8* %55, i8* %56) #9, !dbg !1655
  %58 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !1656, !tbaa !1657
  %59 = tail call i8* @sdsdup(i8* %21) #9, !dbg !1658
  %60 = load i8*, i8** %35, align 8, !dbg !1659, !tbaa !1623
  %61 = tail call i32 @dictAdd(%struct.dict* %58, i8* %59, i8* %60) #9, !dbg !1660
  br label %62, !dbg !1661

; <label>:62:                                     ; preds = %25, %24
  %63 = phi i32 [ 1, %24 ], [ 0, %25 ], !dbg !1662
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1663
  br label %64

; <label>:64:                                     ; preds = %13, %10, %62
  %65 = phi i32 [ %63, %62 ], [ 1, %10 ], [ 1, %13 ], !dbg !1663
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1664
  ret i32 %65, !dbg !1664
}

; Function Attrs: noredzone
declare dso_local i8* @sdsnew(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisCommand* @lookupCommand(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @sdsdup(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SetModuleAttribs(%struct.RedisModuleCtx* nocapture, i8*, i32, i32) #0 !dbg !1665 {
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !1678
  %6 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !1678, !tbaa !1171
  %7 = icmp eq %struct.RedisModule* %6, null, !dbg !1680
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1681
  br i1 %7, label %8, label %32, !dbg !1681

; <label>:8:                                      ; preds = %4
  %9 = tail call i8* @zmalloc(i64 64) #9, !dbg !1682
  %10 = tail call i8* @sdsnew(i8* %1) #9, !dbg !1684
  %11 = getelementptr inbounds i8, i8* %9, i64 8, !dbg !1685
  %12 = bitcast i8* %11 to i8**, !dbg !1685
  store i8* %10, i8** %12, align 8, !dbg !1686, !tbaa !1173
  %13 = getelementptr inbounds i8, i8* %9, i64 16, !dbg !1687
  %14 = bitcast i8* %13 to i32*, !dbg !1687
  store i32 %2, i32* %14, align 8, !dbg !1688, !tbaa !1689
  %15 = getelementptr inbounds i8, i8* %9, i64 20, !dbg !1690
  %16 = bitcast i8* %15 to i32*, !dbg !1690
  store i32 %3, i32* %16, align 4, !dbg !1691, !tbaa !1692
  %17 = tail call %struct.list* @listCreate() #9, !dbg !1693
  %18 = getelementptr inbounds i8, i8* %9, i64 24, !dbg !1694
  %19 = bitcast i8* %18 to %struct.list**, !dbg !1694
  store %struct.list* %17, %struct.list** %19, align 8, !dbg !1695, !tbaa !1696
  %20 = tail call %struct.list* @listCreate() #9, !dbg !1697
  %21 = getelementptr inbounds i8, i8* %9, i64 32, !dbg !1698
  %22 = bitcast i8* %21 to %struct.list**, !dbg !1698
  store %struct.list* %20, %struct.list** %22, align 8, !dbg !1699, !tbaa !1700
  %23 = tail call %struct.list* @listCreate() #9, !dbg !1701
  %24 = getelementptr inbounds i8, i8* %9, i64 40, !dbg !1702
  %25 = bitcast i8* %24 to %struct.list**, !dbg !1702
  store %struct.list* %23, %struct.list** %25, align 8, !dbg !1703, !tbaa !1704
  %26 = tail call %struct.list* @listCreate() #9, !dbg !1705
  %27 = getelementptr inbounds i8, i8* %9, i64 48, !dbg !1706
  %28 = bitcast i8* %27 to %struct.list**, !dbg !1706
  store %struct.list* %26, %struct.list** %28, align 8, !dbg !1707, !tbaa !1708
  %29 = getelementptr inbounds i8, i8* %9, i64 56, !dbg !1709
  %30 = bitcast i8* %29 to i32*, !dbg !1709
  store i32 0, i32* %30, align 8, !dbg !1710, !tbaa !1711
  %31 = bitcast %struct.RedisModule** %5 to i8**, !dbg !1712
  store i8* %9, i8** %31, align 8, !dbg !1712, !tbaa !1171
  br label %32, !dbg !1713

; <label>:32:                                     ; preds = %4, %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1714
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1713
  ret void, !dbg !1713
}

; Function Attrs: noredzone
declare dso_local %struct.list* @listCreate() local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_IsModuleNameBusy(i8*) #0 !dbg !1715 {
  %2 = tail call i8* @sdsnew(i8* %0) #9, !dbg !1723
  %3 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !1725, !tbaa !902
  %4 = tail call %struct.dictEntry* @dictFind(%struct.dict* %3, i8* %2) #9, !dbg !1726
  tail call void @sdsfree(i8* %2) #9, !dbg !1728
  %5 = icmp ne %struct.dictEntry* %4, null, !dbg !1729
  %6 = zext i1 %5 to i32, !dbg !1729
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1730
  ret i32 %6, !dbg !1730
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_Milliseconds() #0 !dbg !1731 {
  %1 = tail call i64 @mstime() #9, !dbg !1734
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1735
  ret i64 %1, !dbg !1735
}

; Function Attrs: noredzone
declare dso_local i64 @mstime() local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_AutoMemory(%struct.RedisModuleCtx* nocapture) #0 !dbg !1736 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1740
  %3 = load i32, i32* %2, align 8, !dbg !1741, !tbaa !1179
  %4 = or i32 %3, 2, !dbg !1741
  store i32 %4, i32* %2, align 8, !dbg !1741, !tbaa !1179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1742
  ret void, !dbg !1742
}

; Function Attrs: noredzone nounwind
define dso_local void @autoMemoryAdd(%struct.RedisModuleCtx* nocapture, i32, i8*) local_unnamed_addr #0 !dbg !1743 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1753
  %5 = load i32, i32* %4, align 8, !dbg !1753, !tbaa !1179
  %6 = and i32 %5, 2, !dbg !1755
  %7 = icmp eq i32 %6, 0, !dbg !1755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1756
  br i1 %7, label %38, label %8, !dbg !1756

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1757
  %10 = load i32, i32* %9, align 4, !dbg !1757, !tbaa !1203
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !1759
  %12 = load i32, i32* %11, align 8, !dbg !1759, !tbaa !1289
  %13 = icmp eq i32 %10, %12, !dbg !1760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1761
  br i1 %13, label %17, label %14, !dbg !1761

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %16 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %15, align 8, !dbg !1762, !tbaa !1207
  br label %31, !dbg !1761

; <label>:17:                                     ; preds = %8
  %18 = shl nsw i32 %10, 1, !dbg !1763
  store i32 %18, i32* %11, align 8, !dbg !1763, !tbaa !1289
  %19 = icmp slt i32 %10, 8, !dbg !1765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1767
  br i1 %19, label %20, label %21, !dbg !1767

; <label>:20:                                     ; preds = %17
  store i32 16, i32* %11, align 8, !dbg !1768, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1769
  br label %21, !dbg !1769

; <label>:21:                                     ; preds = %20, %17
  %22 = phi i32 [ 16, %20 ], [ %18, %17 ], !dbg !1770
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !1771
  %24 = bitcast %struct.AutoMemEntry** %23 to i8**, !dbg !1771
  %25 = load i8*, i8** %24, align 8, !dbg !1771, !tbaa !1207
  %26 = sext i32 %22 to i64, !dbg !1772
  %27 = shl nsw i64 %26, 4, !dbg !1773
  %28 = tail call i8* @zrealloc(i8* %25, i64 %27) #9, !dbg !1774
  store i8* %28, i8** %24, align 8, !dbg !1775, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1776
  %29 = bitcast i8* %28 to %struct.AutoMemEntry*, !dbg !1776
  %30 = load i32, i32* %9, align 4, !dbg !1777, !tbaa !1203
  br label %31, !dbg !1776

; <label>:31:                                     ; preds = %14, %21
  %32 = phi i32 [ %10, %14 ], [ %30, %21 ], !dbg !1777
  %33 = phi %struct.AutoMemEntry* [ %16, %14 ], [ %29, %21 ], !dbg !1762
  %34 = sext i32 %32 to i64, !dbg !1778
  %35 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %33, i64 %34, i32 1, !dbg !1779
  store i32 %1, i32* %35, align 8, !dbg !1780, !tbaa !1213
  %36 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %33, i64 %34, i32 0, !dbg !1781
  store i8* %2, i8** %36, align 8, !dbg !1782, !tbaa !1209
  %37 = add nsw i32 %32, 1, !dbg !1783
  store i32 %37, i32* %9, align 4, !dbg !1783, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1784
  br label %38, !dbg !1784

; <label>:38:                                     ; preds = %3, %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1784
  ret void, !dbg !1784
}

; Function Attrs: noredzone nounwind
define dso_local i32 @autoMemoryFreed(%struct.RedisModuleCtx* nocapture, i32, i8* readnone) local_unnamed_addr #0 !dbg !1785 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1805
  %5 = load i32, i32* %4, align 8, !dbg !1805, !tbaa !1179
  %6 = and i32 %5, 2, !dbg !1807
  %7 = icmp eq i32 %6, 0, !dbg !1807
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1808
  br i1 %7, label %49, label %8, !dbg !1808

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1809
  %10 = load i32, i32* %9, align 4, !dbg !1809, !tbaa !1203
  %11 = add nsw i32 %10, 1, !dbg !1810
  %12 = sdiv i32 %11, 2, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1814
  %13 = icmp sgt i32 %10, 0, !dbg !1815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1817
  br i1 %13, label %14, label %47, !dbg !1816

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  br label %16, !dbg !1816

; <label>:16:                                     ; preds = %14, %60
  %17 = phi i32 [ 0, %14 ], [ %61, %60 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1820
  %18 = xor i32 %17, -1
  %19 = add i32 %10, %18, !dbg !1821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1820
  %20 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %15, align 8, !dbg !1823, !tbaa !1207
  %21 = sext i32 %19 to i64, !dbg !1825
  %22 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %20, i64 %21, i32 1, !dbg !1826
  %23 = load i32, i32* %22, align 8, !dbg !1826, !tbaa !1213
  %24 = icmp eq i32 %23, %1, !dbg !1827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1828
  br i1 %24, label %25, label %51, !dbg !1828

; <label>:25:                                     ; preds = %16
  %26 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %20, i64 %21, i32 0, !dbg !1829
  %27 = load i8*, i8** %26, align 8, !dbg !1829, !tbaa !1209
  %28 = icmp eq i8* %27, %2, !dbg !1830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1831
  br i1 %28, label %31, label %51, !dbg !1831

; <label>:29:                                     ; preds = %56
  %30 = zext i32 %17 to i64, !dbg !1825
  br label %31, !dbg !1832

; <label>:31:                                     ; preds = %25, %29
  %32 = phi i32 [ %17, %29 ], [ %19, %25 ], !dbg !1820
  %33 = phi i64 [ %30, %29 ], [ %21, %25 ], !dbg !1825
  %34 = phi i32* [ %53, %29 ], [ %22, %25 ], !dbg !1826
  store i32 3, i32* %34, align 8, !dbg !1832, !tbaa !1213
  %35 = add nsw i32 %10, -1, !dbg !1834
  %36 = icmp eq i32 %32, %35, !dbg !1836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1837
  br i1 %36, label %45, label %37, !dbg !1837

; <label>:37:                                     ; preds = %31
  %38 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %20, i64 %33, !dbg !1838
  %39 = sext i32 %35 to i64, !dbg !1840
  %40 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %20, i64 %39, !dbg !1840
  %41 = bitcast %struct.AutoMemEntry* %38 to i8*, !dbg !1840
  %42 = bitcast %struct.AutoMemEntry* %40 to i8*, !dbg !1840
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false), !dbg !1840, !tbaa.struct !1841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1842
  %43 = load i32, i32* %9, align 4, !dbg !1843, !tbaa !1203
  %44 = add nsw i32 %43, -1, !dbg !1843
  br label %45, !dbg !1842

; <label>:45:                                     ; preds = %37, %31
  %46 = phi i32 [ %44, %37 ], [ %35, %31 ], !dbg !1843
  store i32 %46, i32* %9, align 4, !dbg !1843, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1844
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %47

; <label>:47:                                     ; preds = %60, %8, %45
  %48 = phi i32 [ 1, %45 ], [ 0, %8 ], [ 0, %60 ], !dbg !1845
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %49

; <label>:49:                                     ; preds = %3, %47
  %50 = phi i32 [ %48, %47 ], [ 0, %3 ], !dbg !1846
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1847
  ret i32 %50, !dbg !1847

; <label>:51:                                     ; preds = %16, %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1848
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1820
  %52 = zext i32 %17 to i64, !dbg !1825
  %53 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %20, i64 %52, i32 1, !dbg !1826
  %54 = load i32, i32* %53, align 8, !dbg !1826, !tbaa !1213
  %55 = icmp eq i32 %54, %1, !dbg !1827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1828
  br i1 %55, label %56, label %60, !dbg !1828

; <label>:56:                                     ; preds = %51
  %57 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %20, i64 %52, i32 0, !dbg !1829
  %58 = load i8*, i8** %57, align 8, !dbg !1829, !tbaa !1209
  %59 = icmp eq i8* %58, %2, !dbg !1830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1831
  br i1 %59, label %29, label %60, !dbg !1831

; <label>:60:                                     ; preds = %56, %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1848
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1819
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %61 = add nuw nsw i32 %17, 1, !dbg !1850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1851
  %62 = icmp slt i32 %61, %12, !dbg !1815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1817
  br i1 %62, label %16, label %47, !dbg !1816, !llvm.loop !1852
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #3

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeCallReply(%struct.RedisModuleCallReply*) #0 !dbg !1221 {
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 0, !dbg !1855
  %3 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %2, align 8, !dbg !1855, !tbaa !1246
  tail call void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply* %0, i32 0) #10, !dbg !1857
  %4 = bitcast %struct.RedisModuleCallReply* %0 to i8*, !dbg !1858
  %5 = tail call i32 @autoMemoryFreed(%struct.RedisModuleCtx* %3, i32 2, i8* %4) #10, !dbg !1859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1860
  ret void, !dbg !1860
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_CloseKey(%struct.RedisModuleKey*) #0 !dbg !1861 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !1867
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1869
  br i1 %2, label %28, label %3, !dbg !1869

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !1870
  %5 = load i32, i32* %4, align 8, !dbg !1870, !tbaa !1030
  %6 = and i32 %5, 2, !dbg !1872
  %7 = icmp eq i32 %6, 0, !dbg !1872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1873
  br i1 %7, label %13, label %8, !dbg !1873

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !1874
  %10 = load %struct.redisDb*, %struct.redisDb** %9, align 8, !dbg !1874, !tbaa !1066
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1875
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !1875, !tbaa !1068
  tail call void @signalModifiedKey(%struct.redisDb* %10, %struct.redisObject* %12) #9, !dbg !1876
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1876
  br label %13, !dbg !1876

; <label>:13:                                     ; preds = %3, %8
  %14 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !1882
  %15 = load i32, i32* %14, align 4, !dbg !1882, !tbaa !1884
  %16 = icmp eq i32 %15, 1, !dbg !1885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1886
  br i1 %16, label %17, label %19, !dbg !1886

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !1887
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %18) #9, !dbg !1888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1888
  br label %19, !dbg !1888

; <label>:19:                                     ; preds = %13, %17
  store i32 0, i32* %14, align 4, !dbg !1894, !tbaa !1884
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !1895
  store i8* null, i8** %20, align 8, !dbg !1896, !tbaa !1897
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !1898
  store i32 1, i32* %21, align 8, !dbg !1899, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1902
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !1903
  %23 = load %struct.redisObject*, %struct.redisObject** %22, align 8, !dbg !1903, !tbaa !1068
  tail call void @decrRefCount(%struct.redisObject* %23) #9, !dbg !1904
  %24 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !1905
  %25 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %24, align 8, !dbg !1905, !tbaa !1906
  %26 = bitcast %struct.RedisModuleKey* %0 to i8*, !dbg !1907
  %27 = tail call i32 @autoMemoryFreed(%struct.RedisModuleCtx* %25, i32 0, i8* %26) #10, !dbg !1908
  tail call void @zfree(i8* %26) #9, !dbg !1909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1910
  br label %28, !dbg !1910

; <label>:28:                                     ; preds = %1, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1910
  ret void, !dbg !1910
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeDict(%struct.RedisModuleCtx*, %struct.RedisModuleDict*) #0 !dbg !1257 {
  %3 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !1913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1915
  %4 = bitcast %struct.RedisModuleDict* %1 to i8*, !dbg !1916
  br i1 %3, label %7, label %5, !dbg !1915

; <label>:5:                                      ; preds = %2
  %6 = tail call i32 @autoMemoryFreed(%struct.RedisModuleCtx* nonnull %0, i32 4, i8* %4) #10, !dbg !1917
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1917
  br label %7, !dbg !1917

; <label>:7:                                      ; preds = %2, %5
  %8 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %1, i64 0, i32 0, !dbg !1918
  %9 = load %struct.rax*, %struct.rax** %8, align 8, !dbg !1918, !tbaa !1272
  tail call void @raxFree(%struct.rax* %9) #9, !dbg !1919
  tail call void @zfree(i8* %4) #9, !dbg !1920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1921
  ret void, !dbg !1921
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx*, i8*, i64) #0 !dbg !1922 {
  %4 = tail call %struct.redisObject* @createStringObject(i8* %1, i64 %2) #9, !dbg !1933
  %5 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !1935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1937
  br i1 %5, label %43, label %6, !dbg !1937

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !1942
  %8 = load i32, i32* %7, align 8, !dbg !1942, !tbaa !1179
  %9 = and i32 %8, 2, !dbg !1943
  %10 = icmp eq i32 %9, 0, !dbg !1943
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1944
  br i1 %10, label %42, label %11, !dbg !1944

; <label>:11:                                     ; preds = %6
  %12 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !1945
  %13 = load i32, i32* %12, align 4, !dbg !1945, !tbaa !1203
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !1946
  %15 = load i32, i32* %14, align 8, !dbg !1946, !tbaa !1289
  %16 = icmp eq i32 %13, %15, !dbg !1947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1948
  br i1 %16, label %20, label %17, !dbg !1948

; <label>:17:                                     ; preds = %11
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %19 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %18, align 8, !dbg !1949, !tbaa !1207
  br label %34, !dbg !1948

; <label>:20:                                     ; preds = %11
  %21 = shl nsw i32 %13, 1, !dbg !1950
  store i32 %21, i32* %14, align 8, !dbg !1950, !tbaa !1289
  %22 = icmp slt i32 %13, 8, !dbg !1951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1952
  br i1 %22, label %23, label %24, !dbg !1952

; <label>:23:                                     ; preds = %20
  store i32 16, i32* %14, align 8, !dbg !1953, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1954
  br label %24, !dbg !1954

; <label>:24:                                     ; preds = %23, %20
  %25 = phi i32 [ 16, %23 ], [ %21, %20 ], !dbg !1955
  %26 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !1956
  %27 = bitcast %struct.AutoMemEntry** %26 to i8**, !dbg !1956
  %28 = load i8*, i8** %27, align 8, !dbg !1956, !tbaa !1207
  %29 = sext i32 %25 to i64, !dbg !1957
  %30 = shl nsw i64 %29, 4, !dbg !1958
  %31 = tail call i8* @zrealloc(i8* %28, i64 %30) #9, !dbg !1959
  store i8* %31, i8** %27, align 8, !dbg !1960, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1961
  %32 = bitcast i8* %31 to %struct.AutoMemEntry*, !dbg !1961
  %33 = load i32, i32* %12, align 4, !dbg !1962, !tbaa !1203
  br label %34, !dbg !1961

; <label>:34:                                     ; preds = %24, %17
  %35 = phi i32 [ %13, %17 ], [ %33, %24 ], !dbg !1962
  %36 = phi %struct.AutoMemEntry* [ %19, %17 ], [ %32, %24 ], !dbg !1949
  %37 = sext i32 %35 to i64, !dbg !1963
  %38 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %36, i64 %37, i32 1, !dbg !1964
  store i32 1, i32* %38, align 8, !dbg !1965, !tbaa !1213
  %39 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %36, i64 %37, i32 0, !dbg !1966
  %40 = bitcast i8** %39 to %struct.redisObject**, !dbg !1967
  store %struct.redisObject* %4, %struct.redisObject** %40, align 8, !dbg !1967, !tbaa !1209
  %41 = add nsw i32 %35, 1, !dbg !1968
  store i32 %41, i32* %12, align 4, !dbg !1968, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1969
  br label %42, !dbg !1969

; <label>:42:                                     ; preds = %6, %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1970
  br label %43, !dbg !1970

; <label>:43:                                     ; preds = %3, %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1971
  ret %struct.redisObject* %4, !dbg !1971
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringPrintf(%struct.RedisModuleCtx*, i8*, ...) #0 !dbg !1972 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = tail call i8* @sdsempty() #9, !dbg !1994
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !1996
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5, !dbg !1996
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !1998
  call void @llvm.va_start(i8* nonnull %5), !dbg !1998
  %7 = call i8* @sdscatvprintf(i8* %4, i8* %1, %struct.__va_list_tag* nonnull %6) #9, !dbg !1999
  call void @llvm.va_end(i8* nonnull %5), !dbg !2000
  %8 = call %struct.redisObject* @createObject(i32 0, i8* %7) #9, !dbg !2001
  %9 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2003
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2005
  br i1 %9, label %47, label %10, !dbg !2005

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2010
  %12 = load i32, i32* %11, align 8, !dbg !2010, !tbaa !1179
  %13 = and i32 %12, 2, !dbg !2011
  %14 = icmp eq i32 %13, 0, !dbg !2011
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2012
  br i1 %14, label %46, label %15, !dbg !2012

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2013
  %17 = load i32, i32* %16, align 4, !dbg !2013, !tbaa !1203
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !2014
  %19 = load i32, i32* %18, align 8, !dbg !2014, !tbaa !1289
  %20 = icmp eq i32 %17, %19, !dbg !2015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2016
  br i1 %20, label %24, label %21, !dbg !2016

; <label>:21:                                     ; preds = %15
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %23 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %22, align 8, !dbg !2017, !tbaa !1207
  br label %38, !dbg !2016

; <label>:24:                                     ; preds = %15
  %25 = shl nsw i32 %17, 1, !dbg !2018
  store i32 %25, i32* %18, align 8, !dbg !2018, !tbaa !1289
  %26 = icmp slt i32 %17, 8, !dbg !2019
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2020
  br i1 %26, label %27, label %28, !dbg !2020

; <label>:27:                                     ; preds = %24
  store i32 16, i32* %18, align 8, !dbg !2021, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2022
  br label %28, !dbg !2022

; <label>:28:                                     ; preds = %27, %24
  %29 = phi i32 [ 16, %27 ], [ %25, %24 ], !dbg !2023
  %30 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !2024
  %31 = bitcast %struct.AutoMemEntry** %30 to i8**, !dbg !2024
  %32 = load i8*, i8** %31, align 8, !dbg !2024, !tbaa !1207
  %33 = sext i32 %29 to i64, !dbg !2025
  %34 = shl nsw i64 %33, 4, !dbg !2026
  %35 = call i8* @zrealloc(i8* %32, i64 %34) #9, !dbg !2027
  store i8* %35, i8** %31, align 8, !dbg !2028, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2029
  %36 = bitcast i8* %35 to %struct.AutoMemEntry*, !dbg !2029
  %37 = load i32, i32* %16, align 4, !dbg !2030, !tbaa !1203
  br label %38, !dbg !2029

; <label>:38:                                     ; preds = %28, %21
  %39 = phi i32 [ %17, %21 ], [ %37, %28 ], !dbg !2030
  %40 = phi %struct.AutoMemEntry* [ %23, %21 ], [ %36, %28 ], !dbg !2017
  %41 = sext i32 %39 to i64, !dbg !2031
  %42 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %40, i64 %41, i32 1, !dbg !2032
  store i32 1, i32* %42, align 8, !dbg !2033, !tbaa !1213
  %43 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %40, i64 %41, i32 0, !dbg !2034
  %44 = bitcast i8** %43 to %struct.redisObject**, !dbg !2035
  store %struct.redisObject* %8, %struct.redisObject** %44, align 8, !dbg !2035, !tbaa !1209
  %45 = add nsw i32 %39, 1, !dbg !2036
  store i32 %45, i32* %16, align 4, !dbg !2036, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2037
  br label %46, !dbg !2037

; <label>:46:                                     ; preds = %10, %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2038
  br label %47, !dbg !2038

; <label>:47:                                     ; preds = %2, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5, !dbg !2039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2040
  ret %struct.redisObject* %8, !dbg !2040
}

; Function Attrs: noredzone
declare dso_local i8* @sdsempty() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: noredzone
declare dso_local i8* @sdscatvprintf(i8*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringFromLongLong(%struct.RedisModuleCtx*, i64) #0 !dbg !2041 {
  %3 = alloca [21 x i8], align 16
  %4 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0, !dbg !2054
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %4) #5, !dbg !2054
  %5 = call i32 @ll2string(i8* nonnull %4, i64 21, i64 %1) #9, !dbg !2056
  %6 = sext i32 %5 to i64, !dbg !2056
  %7 = call %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx* %0, i8* nonnull %4, i64 %6) #10, !dbg !2058
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %4) #5, !dbg !2059
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2060
  ret %struct.redisObject* %7, !dbg !2060
}

; Function Attrs: noredzone
declare dso_local i32 @ll2string(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringFromString(%struct.RedisModuleCtx*, %struct.redisObject*) #0 !dbg !2061 {
  %3 = tail call %struct.redisObject* @dupStringObject(%struct.redisObject* %1) #9, !dbg !2072
  %4 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2074
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2076
  br i1 %4, label %42, label %5, !dbg !2076

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2081
  %7 = load i32, i32* %6, align 8, !dbg !2081, !tbaa !1179
  %8 = and i32 %7, 2, !dbg !2082
  %9 = icmp eq i32 %8, 0, !dbg !2082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2083
  br i1 %9, label %41, label %10, !dbg !2083

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !2084
  %12 = load i32, i32* %11, align 4, !dbg !2084, !tbaa !1203
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !2085
  %14 = load i32, i32* %13, align 8, !dbg !2085, !tbaa !1289
  %15 = icmp eq i32 %12, %14, !dbg !2086
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2087
  br i1 %15, label %19, label %16, !dbg !2087

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %18 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %17, align 8, !dbg !2088, !tbaa !1207
  br label %33, !dbg !2087

; <label>:19:                                     ; preds = %10
  %20 = shl nsw i32 %12, 1, !dbg !2089
  store i32 %20, i32* %13, align 8, !dbg !2089, !tbaa !1289
  %21 = icmp slt i32 %12, 8, !dbg !2090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2091
  br i1 %21, label %22, label %23, !dbg !2091

; <label>:22:                                     ; preds = %19
  store i32 16, i32* %13, align 8, !dbg !2092, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2093
  br label %23, !dbg !2093

; <label>:23:                                     ; preds = %22, %19
  %24 = phi i32 [ 16, %22 ], [ %20, %19 ], !dbg !2094
  %25 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !2095
  %26 = bitcast %struct.AutoMemEntry** %25 to i8**, !dbg !2095
  %27 = load i8*, i8** %26, align 8, !dbg !2095, !tbaa !1207
  %28 = sext i32 %24 to i64, !dbg !2096
  %29 = shl nsw i64 %28, 4, !dbg !2097
  %30 = tail call i8* @zrealloc(i8* %27, i64 %29) #9, !dbg !2098
  store i8* %30, i8** %26, align 8, !dbg !2099, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2100
  %31 = bitcast i8* %30 to %struct.AutoMemEntry*, !dbg !2100
  %32 = load i32, i32* %11, align 4, !dbg !2101, !tbaa !1203
  br label %33, !dbg !2100

; <label>:33:                                     ; preds = %23, %16
  %34 = phi i32 [ %12, %16 ], [ %32, %23 ], !dbg !2101
  %35 = phi %struct.AutoMemEntry* [ %18, %16 ], [ %31, %23 ], !dbg !2088
  %36 = sext i32 %34 to i64, !dbg !2102
  %37 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %35, i64 %36, i32 1, !dbg !2103
  store i32 1, i32* %37, align 8, !dbg !2104, !tbaa !1213
  %38 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %35, i64 %36, i32 0, !dbg !2105
  %39 = bitcast i8** %38 to %struct.redisObject**, !dbg !2106
  store %struct.redisObject* %3, %struct.redisObject** %39, align 8, !dbg !2106, !tbaa !1209
  %40 = add nsw i32 %34, 1, !dbg !2107
  store i32 %40, i32* %11, align 4, !dbg !2107, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2108
  br label %41, !dbg !2108

; <label>:41:                                     ; preds = %5, %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2109
  br label %42, !dbg !2109

; <label>:42:                                     ; preds = %2, %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2110
  ret %struct.redisObject* %3, !dbg !2110
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @dupStringObject(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeString(%struct.RedisModuleCtx*, %struct.redisObject*) #0 !dbg !2111 {
  tail call void @decrRefCount(%struct.redisObject* %1) #9, !dbg !2119
  %3 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2120
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2122
  br i1 %3, label %7, label %4, !dbg !2122

; <label>:4:                                      ; preds = %2
  %5 = bitcast %struct.redisObject* %1 to i8*, !dbg !2123
  %6 = tail call i32 @autoMemoryFreed(%struct.RedisModuleCtx* nonnull %0, i32 1, i8* %5) #10, !dbg !2124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2124
  br label %7, !dbg !2124

; <label>:7:                                      ; preds = %2, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2125
  ret void, !dbg !2125
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_RetainString(%struct.RedisModuleCtx*, %struct.redisObject*) #0 !dbg !2126 {
  %3 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !2132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2134
  br i1 %3, label %8, label %4, !dbg !2134

; <label>:4:                                      ; preds = %2
  %5 = bitcast %struct.redisObject* %1 to i8*, !dbg !2135
  %6 = tail call i32 @autoMemoryFreed(%struct.RedisModuleCtx* nonnull %0, i32 1, i8* %5) #10, !dbg !2136
  %7 = icmp eq i32 %6, 0, !dbg !2136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2137
  br i1 %7, label %8, label %9, !dbg !2137

; <label>:8:                                      ; preds = %4, %2
  tail call void @incrRefCount(%struct.redisObject* %1) #9, !dbg !2138
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2140
  br label %9, !dbg !2140

; <label>:9:                                      ; preds = %4, %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2141
  ret void, !dbg !2141
}

; Function Attrs: noredzone
declare dso_local void @incrRefCount(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_StringPtrLen(%struct.redisObject* readonly, i64*) #0 !dbg !2142 {
  %3 = icmp eq %struct.redisObject* %0, null, !dbg !2154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2155
  %4 = icmp eq i64* %1, null, !dbg !2156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2158
  br i1 %3, label %5, label %8, !dbg !2155

; <label>:5:                                      ; preds = %2
  br i1 %4, label %38, label %6, !dbg !2159

; <label>:6:                                      ; preds = %5
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2160
  store i64 %7, i64* %1, align 8, !dbg !2162, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2164
  br label %38, !dbg !2164

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2
  %10 = load i8*, i8** %9, align 8, !dbg !2156, !tbaa !1046
  br i1 %4, label %38, label %11, !dbg !2165

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds i8, i8* %10, i64 -1, !dbg !2175
  %13 = load i8, i8* %12, align 1, !dbg !2175, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2177
  %14 = trunc i8 %13 to i3, !dbg !2177
  switch i3 %14, label %36 [
    i3 0, label %15
    i3 1, label %18
    i3 2, label %22
    i3 3, label %27
    i3 -4, label %32
  ], !dbg !2177

; <label>:15:                                     ; preds = %11
  %16 = lshr i8 %13, 3, !dbg !2178
  %17 = zext i8 %16 to i64, !dbg !2178
  br label %36, !dbg !2180

; <label>:18:                                     ; preds = %11
  %19 = getelementptr inbounds i8, i8* %10, i64 -3, !dbg !2181
  %20 = load i8, i8* %19, align 1, !dbg !2182, !tbaa !1137
  %21 = zext i8 %20 to i64, !dbg !2181
  br label %36, !dbg !2183

; <label>:22:                                     ; preds = %11
  %23 = getelementptr inbounds i8, i8* %10, i64 -5, !dbg !2184
  %24 = bitcast i8* %23 to i16*, !dbg !2185
  %25 = load i16, i16* %24, align 1, !dbg !2185, !tbaa !2186
  %26 = zext i16 %25 to i64, !dbg !2184
  br label %36, !dbg !2188

; <label>:27:                                     ; preds = %11
  %28 = getelementptr inbounds i8, i8* %10, i64 -9, !dbg !2189
  %29 = bitcast i8* %28 to i32*, !dbg !2190
  %30 = load i32, i32* %29, align 1, !dbg !2190, !tbaa !933
  %31 = zext i32 %30 to i64, !dbg !2189
  br label %36, !dbg !2191

; <label>:32:                                     ; preds = %11
  %33 = getelementptr inbounds i8, i8* %10, i64 -17, !dbg !2192
  %34 = bitcast i8* %33 to i64*, !dbg !2193
  %35 = load i64, i64* %34, align 1, !dbg !2193, !tbaa !2163
  br label %36, !dbg !2194

; <label>:36:                                     ; preds = %11, %15, %18, %22, %27, %32
  %37 = phi i64 [ %35, %32 ], [ %31, %27 ], [ %26, %22 ], [ %21, %18 ], [ %17, %15 ], [ 0, %11 ], !dbg !2195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2196
  store i64 %37, i64* %1, align 8, !dbg !2197, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2198
  br label %38, !dbg !2198

; <label>:38:                                     ; preds = %36, %8, %6, %5
  %39 = phi i8* [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), %5 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), %6 ], [ %10, %8 ], [ %10, %36 ], !dbg !2158
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2199
  ret i8* %39, !dbg !2199
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringToLongLong(%struct.redisObject* nocapture readonly, i64*) #0 !dbg !2200 {
  %3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !2209
  %4 = load i8*, i8** %3, align 8, !dbg !2209, !tbaa !1046
  %5 = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !2212
  %6 = load i8, i8* %5, align 1, !dbg !2212, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2214
  %7 = trunc i8 %6 to i3, !dbg !2214
  switch i3 %7, label %29 [
    i3 0, label %8
    i3 1, label %11
    i3 2, label %15
    i3 3, label %20
    i3 -4, label %25
  ], !dbg !2214

; <label>:8:                                      ; preds = %2
  %9 = lshr i8 %6, 3, !dbg !2215
  %10 = zext i8 %9 to i64, !dbg !2215
  br label %29, !dbg !2216

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds i8, i8* %4, i64 -3, !dbg !2217
  %13 = load i8, i8* %12, align 1, !dbg !2218, !tbaa !1137
  %14 = zext i8 %13 to i64, !dbg !2217
  br label %29, !dbg !2219

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds i8, i8* %4, i64 -5, !dbg !2220
  %17 = bitcast i8* %16 to i16*, !dbg !2221
  %18 = load i16, i16* %17, align 1, !dbg !2221, !tbaa !2186
  %19 = zext i16 %18 to i64, !dbg !2220
  br label %29, !dbg !2222

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds i8, i8* %4, i64 -9, !dbg !2223
  %22 = bitcast i8* %21 to i32*, !dbg !2224
  %23 = load i32, i32* %22, align 1, !dbg !2224, !tbaa !933
  %24 = zext i32 %23 to i64, !dbg !2223
  br label %29, !dbg !2225

; <label>:25:                                     ; preds = %2
  %26 = getelementptr inbounds i8, i8* %4, i64 -17, !dbg !2226
  %27 = bitcast i8* %26 to i64*, !dbg !2227
  %28 = load i64, i64* %27, align 1, !dbg !2227, !tbaa !2163
  br label %29, !dbg !2228

; <label>:29:                                     ; preds = %2, %8, %11, %15, %20, %25
  %30 = phi i64 [ %28, %25 ], [ %24, %20 ], [ %19, %15 ], [ %14, %11 ], [ %10, %8 ], [ 0, %2 ], !dbg !2229
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2231
  %31 = tail call i32 @string2ll(i8* %4, i64 %30, i64* %1) #9, !dbg !2232
  %32 = icmp eq i32 %31, 0, !dbg !2232
  %33 = zext i1 %32 to i32, !dbg !2232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2233
  ret i32 %33, !dbg !2233
}

; Function Attrs: noredzone
declare dso_local i32 @string2ll(i8*, i64, i64*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringToDouble(%struct.redisObject*, double*) #0 !dbg !2234 {
  %3 = tail call i32 @getDoubleFromObject(%struct.redisObject* %0, double* %1) #9, !dbg !2244
  %4 = icmp ne i32 %3, 0, !dbg !2246
  %5 = zext i1 %4 to i32, !dbg !2247
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2248
  ret i32 %5, !dbg !2248
}

; Function Attrs: noredzone
declare dso_local i32 @getDoubleFromObject(%struct.redisObject*, double*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringCompare(%struct.redisObject*, %struct.redisObject*) #0 !dbg !2249 {
  %3 = tail call i32 @compareStringObjects(%struct.redisObject* %0, %struct.redisObject* %1) #9, !dbg !2257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2258
  ret i32 %3, !dbg !2258
}

; Function Attrs: noredzone
declare dso_local i32 @compareStringObjects(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @moduleAssertUnsharedString(%struct.redisObject*) local_unnamed_addr #0 !dbg !2259 {
  %2 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 1, !dbg !2265
  %3 = load i32, i32* %2, align 4, !dbg !2265, !tbaa !1408
  %4 = icmp eq i32 %3, 1, !dbg !2267
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2268
  br i1 %4, label %6, label %5, !dbg !2268

; <label>:5:                                      ; preds = %1
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !2269
  br label %52, !dbg !2271

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 0, !dbg !2272
  %8 = load i32, i32* %7, align 8, !dbg !2272
  %9 = lshr i32 %8, 4, !dbg !2272
  %10 = and i32 %9, 15, !dbg !2272
  %11 = icmp eq i32 %10, 8, !dbg !2274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2275
  br i1 %11, label %12, label %42, !dbg !2275

; <label>:12:                                     ; preds = %6
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !2276
  %14 = load i8*, i8** %13, align 8, !dbg !2276, !tbaa !1046
  %15 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !2280
  %16 = load i8, i8* %15, align 1, !dbg !2280, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2282
  %17 = trunc i8 %16 to i3, !dbg !2282
  switch i3 %17, label %39 [
    i3 0, label %18
    i3 1, label %21
    i3 2, label %25
    i3 3, label %30
    i3 -4, label %35
  ], !dbg !2282

; <label>:18:                                     ; preds = %12
  %19 = lshr i8 %16, 3, !dbg !2283
  %20 = zext i8 %19 to i64, !dbg !2283
  br label %39, !dbg !2284

; <label>:21:                                     ; preds = %12
  %22 = getelementptr inbounds i8, i8* %14, i64 -3, !dbg !2285
  %23 = load i8, i8* %22, align 1, !dbg !2286, !tbaa !1137
  %24 = zext i8 %23 to i64, !dbg !2285
  br label %39, !dbg !2287

; <label>:25:                                     ; preds = %12
  %26 = getelementptr inbounds i8, i8* %14, i64 -5, !dbg !2288
  %27 = bitcast i8* %26 to i16*, !dbg !2289
  %28 = load i16, i16* %27, align 1, !dbg !2289, !tbaa !2186
  %29 = zext i16 %28 to i64, !dbg !2288
  br label %39, !dbg !2290

; <label>:30:                                     ; preds = %12
  %31 = getelementptr inbounds i8, i8* %14, i64 -9, !dbg !2291
  %32 = bitcast i8* %31 to i32*, !dbg !2292
  %33 = load i32, i32* %32, align 1, !dbg !2292, !tbaa !933
  %34 = zext i32 %33 to i64, !dbg !2291
  br label %39, !dbg !2293

; <label>:35:                                     ; preds = %12
  %36 = getelementptr inbounds i8, i8* %14, i64 -17, !dbg !2294
  %37 = bitcast i8* %36 to i64*, !dbg !2295
  %38 = load i64, i64* %37, align 1, !dbg !2295, !tbaa !2163
  br label %39, !dbg !2296

; <label>:39:                                     ; preds = %12, %18, %21, %25, %30, %35
  %40 = phi i64 [ %38, %35 ], [ %34, %30 ], [ %29, %25 ], [ %24, %21 ], [ %20, %18 ], [ 0, %12 ], !dbg !2297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2299
  %41 = tail call i8* @sdsnewlen(i8* %14, i64 %40) #9, !dbg !2300
  store i8* %41, i8** %13, align 8, !dbg !2301, !tbaa !1046
  br label %49, !dbg !2302

; <label>:42:                                     ; preds = %6
  %43 = icmp eq i32 %10, 1, !dbg !2303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2305
  br i1 %43, label %44, label %52, !dbg !2305

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !2306
  %46 = bitcast i8** %45 to i64*, !dbg !2306
  %47 = load i64, i64* %46, align 8, !dbg !2306, !tbaa !1046
  %48 = tail call i8* @sdsfromlonglong(i64 %47) #9, !dbg !2308
  store i8* %48, i8** %45, align 8, !dbg !2309, !tbaa !1046
  br label %49, !dbg !2310

; <label>:49:                                     ; preds = %39, %44
  %50 = load i32, i32* %7, align 8, !dbg !2298
  %51 = and i32 %50, -241, !dbg !2298
  store i32 %51, i32* %7, align 8, !dbg !2298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2298
  br label %52, !dbg !2311

; <label>:52:                                     ; preds = %42, %49, %5
  %53 = phi %struct.redisObject* [ null, %5 ], [ %0, %49 ], [ %0, %42 ], !dbg !2312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2314
  ret %struct.redisObject* %53, !dbg !2314
}

; Function Attrs: noredzone
declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @sdsfromlonglong(i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringAppendBuffer(%struct.RedisModuleCtx* nocapture readnone, %struct.redisObject*, i8*, i64) #0 !dbg !2315 {
  %5 = tail call %struct.redisObject* @moduleAssertUnsharedString(%struct.redisObject* %1) #10, !dbg !2327
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !2328
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2330
  br i1 %6, label %11, label %7, !dbg !2330

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !2331
  %9 = load i8*, i8** %8, align 8, !dbg !2331, !tbaa !1046
  %10 = tail call i8* @sdscatlen(i8* %9, i8* %2, i64 %3) #9, !dbg !2332
  store i8* %10, i8** %8, align 8, !dbg !2333, !tbaa !1046
  br label %11, !dbg !2334

; <label>:11:                                     ; preds = %4, %7
  %12 = phi i32 [ 0, %7 ], [ 1, %4 ], !dbg !2335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2337
  ret i32 %12, !dbg !2337
}

; Function Attrs: noredzone
declare dso_local i8* @sdscatlen(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_WrongArity(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !2338 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2342
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !2342, !tbaa !1183
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 9, !dbg !2343
  %5 = load %struct.redisObject**, %struct.redisObject*** %4, align 8, !dbg !2343, !tbaa !1368
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !2344, !tbaa !902
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !2345
  %8 = load i8*, i8** %7, align 8, !dbg !2345, !tbaa !1046
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18, i64 0, i64 0), i8* %8) #9, !dbg !2346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2347
  ret i32 0, !dbg !2347
}

; Function Attrs: noredzone
declare dso_local void @addReplyErrorFormat(%struct.client*, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.client* @moduleGetReplyClient(%struct.RedisModuleCtx* nocapture readonly) local_unnamed_addr #0 !dbg !2348 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2354
  %3 = load i32, i32* %2, align 8, !dbg !2354, !tbaa !1179
  %4 = and i32 %3, 32, !dbg !2356
  %5 = icmp eq i32 %4, 0, !dbg !2356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2357
  br i1 %5, label %12, label %6, !dbg !2357

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2358
  %8 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %7, align 8, !dbg !2358, !tbaa !2361
  %9 = icmp eq %struct.RedisModuleBlockedClient* %8, null, !dbg !2362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2363
  br i1 %9, label %17, label %10, !dbg !2363

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %8, i64 0, i32 7, !dbg !2364
  br label %14, !dbg !2365

; <label>:12:                                     ; preds = %1
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2366
  br label %14, !dbg !2368

; <label>:14:                                     ; preds = %10, %12
  %15 = phi %struct.client** [ %13, %12 ], [ %11, %10 ]
  %16 = load %struct.client*, %struct.client** %15, align 8, !dbg !2369, !tbaa !902
  br label %17, !dbg !2369

; <label>:17:                                     ; preds = %14, %6
  %18 = phi %struct.client* [ null, %6 ], [ %16, %14 ], !dbg !2370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2371
  ret %struct.client* %18, !dbg !2371
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithLongLong(%struct.RedisModuleCtx* nocapture readonly, i64) #0 !dbg !2372 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2383
  %4 = load i32, i32* %3, align 8, !dbg !2383, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2384
  %6 = icmp eq i32 %5, 0, !dbg !2384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2385
  br i1 %6, label %14, label %7, !dbg !2385

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2386
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2386, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2388
  br i1 %10, label %13, label %11, !dbg !2388

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2389
  br label %16, !dbg !2390

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2394
  br label %21, !dbg !2394

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2395
  br label %16, !dbg !2396

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2397, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2392
  %19 = icmp eq %struct.client* %18, null, !dbg !2398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2394
  br i1 %19, label %21, label %20, !dbg !2394

; <label>:20:                                     ; preds = %16
  tail call void @addReplyLongLong(%struct.client* nonnull %18, i64 %1) #9, !dbg !2400
  br label %21, !dbg !2401

; <label>:21:                                     ; preds = %16, %13, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2403
  ret i32 0, !dbg !2403
}

; Function Attrs: noredzone
declare dso_local void @addReplyLongLong(%struct.client*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @replyWithStatus(%struct.RedisModuleCtx* nocapture readonly, i8*, i8*) local_unnamed_addr #0 !dbg !2404 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2418
  %5 = load i32, i32* %4, align 8, !dbg !2418, !tbaa !1179
  %6 = and i32 %5, 32, !dbg !2419
  %7 = icmp eq i32 %6, 0, !dbg !2419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2420
  br i1 %7, label %15, label %8, !dbg !2420

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2421
  %10 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %9, align 8, !dbg !2421, !tbaa !2361
  %11 = icmp eq %struct.RedisModuleBlockedClient* %10, null, !dbg !2422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2423
  br i1 %11, label %14, label %12, !dbg !2423

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %10, i64 0, i32 7, !dbg !2424
  br label %17, !dbg !2425

; <label>:14:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2429
  br label %25, !dbg !2429

; <label>:15:                                     ; preds = %3
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2430
  br label %17, !dbg !2431

; <label>:17:                                     ; preds = %12, %15
  %18 = phi %struct.client** [ %13, %12 ], [ %16, %15 ]
  %19 = load %struct.client*, %struct.client** %18, align 8, !dbg !2432, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2432
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2427
  %20 = icmp eq %struct.client* %19, null, !dbg !2433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2429
  br i1 %20, label %25, label %21, !dbg !2429

; <label>:21:                                     ; preds = %17
  %22 = tail call i8* @sdsnewlen(i8* %2, i64 1) #9, !dbg !2435
  %23 = tail call i8* @sdscat(i8* %22, i8* %1) #9, !dbg !2437
  %24 = tail call i8* @sdscatlen(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i64 2) #9, !dbg !2438
  tail call void @addReplySds(%struct.client* nonnull %19, i8* %24) #9, !dbg !2439
  br label %25

; <label>:25:                                     ; preds = %17, %14, %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2440
  ret i32 0, !dbg !2440
}

; Function Attrs: noredzone
declare dso_local i8* @sdscat(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @addReplySds(%struct.client*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithError(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !2441 {
  %3 = tail call i32 @replyWithStatus(%struct.RedisModuleCtx* %0, i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !2449
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2450
  ret i32 0, !dbg !2450
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithSimpleString(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !2451 {
  %3 = tail call i32 @replyWithStatus(%struct.RedisModuleCtx* %0, i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !2457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2458
  ret i32 0, !dbg !2458
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithArray(%struct.RedisModuleCtx* nocapture, i64) #0 !dbg !2459 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2470
  %4 = load i32, i32* %3, align 8, !dbg !2470, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2471
  %6 = icmp eq i32 %5, 0, !dbg !2471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2472
  br i1 %6, label %14, label %7, !dbg !2472

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2473
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2473, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2475
  br i1 %10, label %13, label %11, !dbg !2475

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2476
  br label %16, !dbg !2477

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2479
  br label %39, !dbg !2481

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2482
  br label %16, !dbg !2483

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2484, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2484
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2479
  %19 = icmp eq %struct.client* %18, null, !dbg !2485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2481
  br i1 %19, label %40, label %20, !dbg !2481

; <label>:20:                                     ; preds = %16
  %21 = icmp eq i64 %1, -1, !dbg !2487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2489
  br i1 %21, label %22, label %38, !dbg !2489

; <label>:22:                                     ; preds = %20
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 8, !dbg !2490
  %24 = bitcast i8*** %23 to i8**, !dbg !2490
  %25 = load i8*, i8** %24, align 8, !dbg !2490, !tbaa !1161
  %26 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 9, !dbg !2492
  %27 = load i32, i32* %26, align 8, !dbg !2492, !tbaa !1169
  %28 = add nsw i32 %27, 1, !dbg !2493
  %29 = sext i32 %28 to i64, !dbg !2494
  %30 = shl nsw i64 %29, 3, !dbg !2495
  %31 = tail call i8* @zrealloc(i8* %25, i64 %30) #9, !dbg !2496
  store i8* %31, i8** %24, align 8, !dbg !2497, !tbaa !1161
  %32 = tail call i8* @addDeferredMultiBulkLength(%struct.client* nonnull %18) #9, !dbg !2498
  %33 = load i8**, i8*** %23, align 8, !dbg !2499, !tbaa !1161
  %34 = load i32, i32* %26, align 8, !dbg !2500, !tbaa !1169
  %35 = sext i32 %34 to i64, !dbg !2501
  %36 = getelementptr inbounds i8*, i8** %33, i64 %35, !dbg !2501
  store i8* %32, i8** %36, align 8, !dbg !2502, !tbaa !902
  %37 = add nsw i32 %34, 1, !dbg !2503
  store i32 %37, i32* %26, align 8, !dbg !2503, !tbaa !1169
  br label %39, !dbg !2504

; <label>:38:                                     ; preds = %20
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %18, i64 %1) #9, !dbg !2505
  br label %39

; <label>:39:                                     ; preds = %22, %38, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %40, !dbg !2507

; <label>:40:                                     ; preds = %39, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2508
  ret i32 0, !dbg !2508
}

; Function Attrs: noredzone
declare dso_local i8* @addDeferredMultiBulkLength(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @addReplyMultiBulkLen(%struct.client*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_ReplySetArrayLength(%struct.RedisModuleCtx* nocapture, i64) #0 !dbg !2509 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2520
  %4 = load i32, i32* %3, align 8, !dbg !2520, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2521
  %6 = icmp eq i32 %5, 0, !dbg !2521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2522
  br i1 %6, label %14, label %7, !dbg !2522

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2523
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2523, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2525
  br i1 %10, label %13, label %11, !dbg !2525

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2526
  br label %16, !dbg !2527

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2531
  br label %41, !dbg !2531

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2532
  br label %16, !dbg !2533

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2534, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2529
  %19 = icmp eq %struct.client* %18, null, !dbg !2535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2531
  br i1 %19, label %41, label %20, !dbg !2531

; <label>:20:                                     ; preds = %16
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 9, !dbg !2537
  %22 = load i32, i32* %21, align 8, !dbg !2537, !tbaa !1169
  %23 = icmp eq i32 %22, 0, !dbg !2539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2540
  br i1 %23, label %24, label %29, !dbg !2540

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !2541
  %26 = load %struct.RedisModule*, %struct.RedisModule** %25, align 8, !dbg !2541, !tbaa !1171
  %27 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %26, i64 0, i32 1, !dbg !2543
  %28 = load i8*, i8** %27, align 8, !dbg !2543, !tbaa !1173
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([162 x i8], [162 x i8]* @.str.22, i64 0, i64 0), i8* %28) #9, !dbg !2544
  br label %41, !dbg !2545

; <label>:29:                                     ; preds = %20
  %30 = add nsw i32 %22, -1, !dbg !2546
  store i32 %30, i32* %21, align 8, !dbg !2546, !tbaa !1169
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 8, !dbg !2547
  %32 = load i8**, i8*** %31, align 8, !dbg !2547, !tbaa !1161
  %33 = sext i32 %30 to i64, !dbg !2548
  %34 = getelementptr inbounds i8*, i8** %32, i64 %33, !dbg !2548
  %35 = load i8*, i8** %34, align 8, !dbg !2548, !tbaa !902
  tail call void @setDeferredMultiBulkLength(%struct.client* nonnull %18, i8* %35, i64 %1) #9, !dbg !2549
  %36 = load i32, i32* %21, align 8, !dbg !2550, !tbaa !1169
  %37 = icmp eq i32 %36, 0, !dbg !2552
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2553
  br i1 %37, label %38, label %41, !dbg !2553

; <label>:38:                                     ; preds = %29
  %39 = bitcast i8*** %31 to i8**, !dbg !2554
  %40 = load i8*, i8** %39, align 8, !dbg !2554, !tbaa !1161
  tail call void @zfree(i8* %40) #9, !dbg !2556
  store i8** null, i8*** %31, align 8, !dbg !2557, !tbaa !1161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2558
  br label %41, !dbg !2558

; <label>:41:                                     ; preds = %29, %38, %16, %13, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2560
  ret void, !dbg !2560
}

; Function Attrs: noredzone
declare dso_local void @setDeferredMultiBulkLength(%struct.client*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithStringBuffer(%struct.RedisModuleCtx* nocapture readonly, i8*, i64) #0 !dbg !2561 {
  %4 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2574
  %5 = load i32, i32* %4, align 8, !dbg !2574, !tbaa !1179
  %6 = and i32 %5, 32, !dbg !2575
  %7 = icmp eq i32 %6, 0, !dbg !2575
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2576
  br i1 %7, label %15, label %8, !dbg !2576

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2577
  %10 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %9, align 8, !dbg !2577, !tbaa !2361
  %11 = icmp eq %struct.RedisModuleBlockedClient* %10, null, !dbg !2578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2579
  br i1 %11, label %14, label %12, !dbg !2579

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %10, i64 0, i32 7, !dbg !2580
  br label %17, !dbg !2581

; <label>:14:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2582
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2585
  br label %22, !dbg !2585

; <label>:15:                                     ; preds = %3
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2586
  br label %17, !dbg !2587

; <label>:17:                                     ; preds = %12, %15
  %18 = phi %struct.client** [ %13, %12 ], [ %16, %15 ]
  %19 = load %struct.client*, %struct.client** %18, align 8, !dbg !2588, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2588
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2583
  %20 = icmp eq %struct.client* %19, null, !dbg !2589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2585
  br i1 %20, label %22, label %21, !dbg !2585

; <label>:21:                                     ; preds = %17
  tail call void @addReplyBulkCBuffer(%struct.client* nonnull %19, i8* %1, i64 %2) #9, !dbg !2591
  br label %22, !dbg !2592

; <label>:22:                                     ; preds = %17, %14, %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2593
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2594
  ret i32 0, !dbg !2594
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCBuffer(%struct.client*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithCString(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !2595 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2604
  %4 = load i32, i32* %3, align 8, !dbg !2604, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2605
  %6 = icmp eq i32 %5, 0, !dbg !2605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2606
  br i1 %6, label %14, label %7, !dbg !2606

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2607
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2607, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2609
  br i1 %10, label %13, label %11, !dbg !2609

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2610
  br label %16, !dbg !2611

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2613
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2615
  br label %21, !dbg !2615

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2616
  br label %16, !dbg !2617

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2618, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2618
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2613
  %19 = icmp eq %struct.client* %18, null, !dbg !2619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2615
  br i1 %19, label %21, label %20, !dbg !2615

; <label>:20:                                     ; preds = %16
  tail call void @addReplyBulkCString(%struct.client* nonnull %18, i8* %1) #9, !dbg !2621
  br label %21, !dbg !2622

; <label>:21:                                     ; preds = %16, %13, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2624
  ret i32 0, !dbg !2624
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCString(%struct.client*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithString(%struct.RedisModuleCtx* nocapture readonly, %struct.redisObject*) #0 !dbg !2625 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2636
  %4 = load i32, i32* %3, align 8, !dbg !2636, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2637
  %6 = icmp eq i32 %5, 0, !dbg !2637
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2638
  br i1 %6, label %14, label %7, !dbg !2638

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2639
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2639, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2641
  br i1 %10, label %13, label %11, !dbg !2641

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2642
  br label %16, !dbg !2643

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2644
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2645
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2647
  br label %21, !dbg !2647

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2648
  br label %16, !dbg !2649

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2650, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2645
  %19 = icmp eq %struct.client* %18, null, !dbg !2651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2647
  br i1 %19, label %21, label %20, !dbg !2647

; <label>:20:                                     ; preds = %16
  tail call void @addReplyBulk(%struct.client* nonnull %18, %struct.redisObject* %1) #9, !dbg !2653
  br label %21, !dbg !2654

; <label>:21:                                     ; preds = %16, %13, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2655
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2656
  ret i32 0, !dbg !2656
}

; Function Attrs: noredzone
declare dso_local void @addReplyBulk(%struct.client*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithNull(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !2657 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2664
  %3 = load i32, i32* %2, align 8, !dbg !2664, !tbaa !1179
  %4 = and i32 %3, 32, !dbg !2665
  %5 = icmp eq i32 %4, 0, !dbg !2665
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2666
  br i1 %5, label %13, label %6, !dbg !2666

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2667
  %8 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %7, align 8, !dbg !2667, !tbaa !2361
  %9 = icmp eq %struct.RedisModuleBlockedClient* %8, null, !dbg !2668
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2669
  br i1 %9, label %12, label %10, !dbg !2669

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %8, i64 0, i32 7, !dbg !2670
  br label %15, !dbg !2671

; <label>:12:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2672
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2675
  br label %21, !dbg !2675

; <label>:13:                                     ; preds = %1
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2676
  br label %15, !dbg !2677

; <label>:15:                                     ; preds = %10, %13
  %16 = phi %struct.client** [ %11, %10 ], [ %14, %13 ]
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !2678, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2678
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2673
  %18 = icmp eq %struct.client* %17, null, !dbg !2679
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2675
  br i1 %18, label %21, label %19, !dbg !2675

; <label>:19:                                     ; preds = %15
  %20 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !2681, !tbaa !2682
  tail call void @addReply(%struct.client* nonnull %17, %struct.redisObject* %20) #9, !dbg !2684
  br label %21, !dbg !2685

; <label>:21:                                     ; preds = %15, %12, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2687
  ret i32 0, !dbg !2687
}

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithCallReply(%struct.RedisModuleCtx* nocapture readonly, %struct.RedisModuleCallReply* nocapture readonly) #0 !dbg !2688 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2700
  %4 = load i32, i32* %3, align 8, !dbg !2700, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2701
  %6 = icmp eq i32 %5, 0, !dbg !2701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2702
  br i1 %6, label %14, label %7, !dbg !2702

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2703
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2703, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2705
  br i1 %10, label %13, label %11, !dbg !2705

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2706
  br label %16, !dbg !2707

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2711
  br label %26, !dbg !2711

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2712
  br label %16, !dbg !2713

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2714, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2714
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2709
  %19 = icmp eq %struct.client* %18, null, !dbg !2715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2711
  br i1 %19, label %26, label %20, !dbg !2711

; <label>:20:                                     ; preds = %16
  %21 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %1, i64 0, i32 4, !dbg !2717
  %22 = load i8*, i8** %21, align 8, !dbg !2717, !tbaa !2718
  %23 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %1, i64 0, i32 5, !dbg !2719
  %24 = load i64, i64* %23, align 8, !dbg !2719, !tbaa !2720
  %25 = tail call i8* @sdsnewlen(i8* %22, i64 %24) #9, !dbg !2721
  tail call void @addReplySds(%struct.client* nonnull %18, i8* %25) #9, !dbg !2723
  br label %26

; <label>:26:                                     ; preds = %16, %13, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2724
  ret i32 0, !dbg !2724
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplyWithDouble(%struct.RedisModuleCtx* nocapture readonly, double) #0 !dbg !2725 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2736
  %4 = load i32, i32* %3, align 8, !dbg !2736, !tbaa !1179
  %5 = and i32 %4, 32, !dbg !2737
  %6 = icmp eq i32 %5, 0, !dbg !2737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2738
  br i1 %6, label %14, label %7, !dbg !2738

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !2739
  %9 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %8, align 8, !dbg !2739, !tbaa !2361
  %10 = icmp eq %struct.RedisModuleBlockedClient* %9, null, !dbg !2740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2741
  br i1 %10, label %13, label %11, !dbg !2741

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %9, i64 0, i32 7, !dbg !2742
  br label %16, !dbg !2743

; <label>:13:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2744
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2747
  br label %21, !dbg !2747

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2748
  br label %16, !dbg !2749

; <label>:16:                                     ; preds = %11, %14
  %17 = phi %struct.client** [ %12, %11 ], [ %15, %14 ]
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2750, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2745
  %19 = icmp eq %struct.client* %18, null, !dbg !2751
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2747
  br i1 %19, label %21, label %20, !dbg !2747

; <label>:20:                                     ; preds = %16
  tail call void @addReplyDouble(%struct.client* nonnull %18, double %1) #9, !dbg !2753
  br label %21, !dbg !2754

; <label>:21:                                     ; preds = %16, %13, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2756
  ret i32 0, !dbg !2756
}

; Function Attrs: noredzone
declare dso_local void @addReplyDouble(%struct.client*, double) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleReplicateMultiIfNeeded(%struct.RedisModuleCtx* nocapture) local_unnamed_addr #0 !dbg !2757 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2761
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !2761, !tbaa !1183
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 21, !dbg !2763
  %5 = load i32, i32* %4, align 8, !dbg !2763, !tbaa !1305
  %6 = and i32 %5, 264, !dbg !2764
  %7 = icmp eq i32 %6, 0, !dbg !2764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2765
  br i1 %7, label %8, label %19, !dbg !2765

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2766
  %10 = load i32, i32* %9, align 8, !dbg !2766, !tbaa !1179
  %11 = and i32 %10, 1, !dbg !2768
  %12 = icmp eq i32 %11, 0, !dbg !2768
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2769
  br i1 %12, label %13, label %19, !dbg !2769

; <label>:13:                                     ; preds = %8
  %14 = and i32 %10, 32, !dbg !2770
  %15 = icmp eq i32 %14, 0, !dbg !2770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2772
  br i1 %15, label %16, label %19, !dbg !2772

; <label>:16:                                     ; preds = %13
  tail call void @execCommandPropagateMulti(%struct.client* %3) #9, !dbg !2773
  %17 = load i32, i32* %9, align 8, !dbg !2774, !tbaa !1179
  %18 = or i32 %17, 1, !dbg !2774
  store i32 %18, i32* %9, align 8, !dbg !2774, !tbaa !1179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2775
  br label %19, !dbg !2775

; <label>:19:                                     ; preds = %13, %8, %1, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2775
  ret void, !dbg !2775
}

; Function Attrs: noredzone
declare dso_local void @execCommandPropagateMulti(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_Replicate(%struct.RedisModuleCtx* nocapture, i8*, i8*, ...) #0 !dbg !2776 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = bitcast i32* %4 to i8*, !dbg !2793
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5, !dbg !2793
  store i32 0, i32* %4, align 4, !dbg !2794, !tbaa !933
  %8 = bitcast i32* %5 to i8*, !dbg !2793
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5, !dbg !2793
  store i32 0, i32* %5, align 4, !dbg !2795, !tbaa !933
  %9 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*, !dbg !2796
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5, !dbg !2796
  %10 = tail call %struct.redisCommand* @lookupCommandByCString(i8* %1) #9, !dbg !2798
  %11 = icmp eq %struct.redisCommand* %10, null, !dbg !2800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2802
  br i1 %11, label %55, label %12, !dbg !2802

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !2803
  call void @llvm.va_start(i8* nonnull %9), !dbg !2803
  %14 = call %struct.redisObject** @moduleCreateArgvFromUserFormat(i8* %1, i8* %2, i32* nonnull %4, i32* nonnull %5, %struct.__va_list_tag* nonnull %13) #10, !dbg !2804
  call void @llvm.va_end(i8* nonnull %9), !dbg !2805
  %15 = icmp eq %struct.redisObject** %14, null, !dbg !2806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2808
  br i1 %15, label %55, label %16, !dbg !2808

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !2811
  %18 = load %struct.client*, %struct.client** %17, align 8, !dbg !2811, !tbaa !1183
  %19 = getelementptr inbounds %struct.client, %struct.client* %18, i64 0, i32 21, !dbg !2812
  %20 = load i32, i32* %19, align 8, !dbg !2812, !tbaa !1305
  %21 = and i32 %20, 264, !dbg !2813
  %22 = icmp eq i32 %21, 0, !dbg !2813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2814
  br i1 %22, label %23, label %35, !dbg !2814

; <label>:23:                                     ; preds = %16
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !2815
  %25 = load i32, i32* %24, align 8, !dbg !2815, !tbaa !1179
  %26 = and i32 %25, 1, !dbg !2816
  %27 = icmp eq i32 %26, 0, !dbg !2816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2817
  br i1 %27, label %28, label %35, !dbg !2817

; <label>:28:                                     ; preds = %23
  %29 = and i32 %25, 32, !dbg !2818
  %30 = icmp eq i32 %29, 0, !dbg !2818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2819
  br i1 %30, label %31, label %35, !dbg !2819

; <label>:31:                                     ; preds = %28
  call void @execCommandPropagateMulti(%struct.client* %18) #9, !dbg !2820
  %32 = load i32, i32* %24, align 8, !dbg !2821, !tbaa !1179
  %33 = or i32 %32, 1, !dbg !2821
  store i32 %33, i32* %24, align 8, !dbg !2821, !tbaa !1179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2822
  %34 = load %struct.client*, %struct.client** %17, align 8, !dbg !2823, !tbaa !1183
  br label %35, !dbg !2822

; <label>:35:                                     ; preds = %16, %23, %28, %31
  %36 = phi %struct.client* [ %18, %16 ], [ %18, %23 ], [ %18, %28 ], [ %34, %31 ], !dbg !2823
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2822
  %37 = getelementptr inbounds %struct.client, %struct.client* %36, i64 0, i32 2, !dbg !2824
  %38 = load %struct.redisDb*, %struct.redisDb** %37, align 8, !dbg !2824, !tbaa !1322
  %39 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %38, i64 0, i32 5, !dbg !2825
  %40 = load i32, i32* %39, align 8, !dbg !2825, !tbaa !1324
  %41 = load i32, i32* %4, align 4, !dbg !2826, !tbaa !933
  call void @alsoPropagate(%struct.redisCommand* nonnull %10, i32 %40, %struct.redisObject** nonnull %14, i32 %41, i32 3) #9, !dbg !2827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2829
  %42 = icmp sgt i32 %41, 0, !dbg !2831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2833
  br i1 %42, label %43, label %51, !dbg !2833

; <label>:43:                                     ; preds = %35
  %44 = zext i32 %41 to i64
  br label %45, !dbg !2834

; <label>:45:                                     ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %49, %45 ]
  %47 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %14, i64 %46, !dbg !2834
  %48 = load %struct.redisObject*, %struct.redisObject** %47, align 8, !dbg !2834, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %48) #9, !dbg !2835
  %49 = add nuw nsw i64 %46, 1, !dbg !2836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2833
  %50 = icmp eq i64 %49, %44, !dbg !2831
  br i1 %50, label %51, label %45, !dbg !2833, !llvm.loop !2838

; <label>:51:                                     ; preds = %45, %35
  %52 = bitcast %struct.redisObject** %14 to i8*, !dbg !2840
  call void @zfree(i8* %52) #9, !dbg !2841
  %53 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !2842, !tbaa !2843
  %54 = add nsw i64 %53, 1, !dbg !2842
  store i64 %54, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !2842, !tbaa !2843
  br label %55, !dbg !2844

; <label>:55:                                     ; preds = %12, %3, %51
  %56 = phi i32 [ 0, %51 ], [ 1, %3 ], [ 1, %12 ], !dbg !2845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2845
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5, !dbg !2846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5, !dbg !2846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5, !dbg !2846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2846
  ret i32 %56, !dbg !2846
}

; Function Attrs: noredzone
declare dso_local %struct.redisCommand* @lookupCommandByCString(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject** @moduleCreateArgvFromUserFormat(i8*, i8*, i32* nocapture, i32*, %struct.__va_list_tag* nocapture) local_unnamed_addr #0 !dbg !2847 {
  %6 = tail call i64 @strlen(i8* %1) #9, !dbg !2888
  %7 = trunc i64 %6 to i32, !dbg !2888
  %8 = add i32 %7, 1, !dbg !2888
  %9 = sext i32 %8 to i64, !dbg !2890
  %10 = shl nsw i64 %9, 3, !dbg !2891
  %11 = tail call i8* @zrealloc(i8* null, i64 %10) #9, !dbg !2892
  %12 = bitcast i8* %11 to %struct.redisObject**, !dbg !2892
  %13 = tail call i64 @strlen(i8* %0) #9, !dbg !2893
  %14 = tail call %struct.redisObject* @createStringObject(i8* %0, i64 %13) #9, !dbg !2894
  store %struct.redisObject* %14, %struct.redisObject** %12, align 8, !dbg !2895, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2897
  %15 = load i8, i8* %1, align 1, !dbg !2898, !tbaa !1137
  %16 = icmp eq i8 %15, 0, !dbg !2897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2897
  br i1 %16, label %207, label %17, !dbg !2897

; <label>:17:                                     ; preds = %5
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 0
  %19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 3
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 2
  %21 = icmp eq i32* %3, null
  br label %22, !dbg !2897

; <label>:22:                                     ; preds = %17, %198
  %23 = phi i8 [ %15, %17 ], [ %205, %198 ]
  %24 = phi i32 [ 1, %17 ], [ %203, %198 ]
  %25 = phi i32 [ %8, %17 ], [ %202, %198 ]
  %26 = phi %struct.redisObject** [ %12, %17 ], [ %201, %198 ]
  %27 = phi i8* [ %11, %17 ], [ %200, %198 ]
  %28 = phi i8* [ %11, %17 ], [ %199, %198 ]
  %29 = phi i8* [ %1, %17 ], [ %204, %198 ]
  %30 = icmp eq i8 %23, 99, !dbg !2899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2900
  br i1 %30, label %31, label %51, !dbg !2900

; <label>:31:                                     ; preds = %22
  %32 = load i32, i32* %18, align 8, !dbg !2901
  %33 = icmp ult i32 %32, 41, !dbg !2901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2901
  br i1 %33, label %34, label %39, !dbg !2901

; <label>:34:                                     ; preds = %31
  %35 = load i8*, i8** %19, align 8, !dbg !2901
  %36 = sext i32 %32 to i64, !dbg !2901
  %37 = getelementptr i8, i8* %35, i64 %36, !dbg !2901
  %38 = add i32 %32, 8, !dbg !2901
  store i32 %38, i32* %18, align 8, !dbg !2901
  br label %42, !dbg !2901

; <label>:39:                                     ; preds = %31
  %40 = load i8*, i8** %20, align 8, !dbg !2901
  %41 = getelementptr i8, i8* %40, i64 8, !dbg !2901
  store i8* %41, i8** %20, align 8, !dbg !2901
  br label %42, !dbg !2901

; <label>:42:                                     ; preds = %39, %34
  %43 = phi i8* [ %37, %34 ], [ %40, %39 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2901
  %44 = bitcast i8* %43 to i8**, !dbg !2901
  %45 = load i8*, i8** %44, align 8, !dbg !2901
  %46 = tail call i64 @strlen(i8* %45) #9, !dbg !2903
  %47 = tail call %struct.redisObject* @createStringObject(i8* %45, i64 %46) #9, !dbg !2904
  %48 = add nsw i32 %24, 1, !dbg !2905
  %49 = sext i32 %24 to i64, !dbg !2906
  %50 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %26, i64 %49, !dbg !2906
  store %struct.redisObject* %47, %struct.redisObject** %50, align 8, !dbg !2907, !tbaa !902
  br label %192, !dbg !2908

; <label>:51:                                     ; preds = %22
  %52 = icmp eq i8 %23, 115, !dbg !2909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2910
  br i1 %52, label %53, label %71, !dbg !2910

; <label>:53:                                     ; preds = %51
  %54 = load i32, i32* %18, align 8, !dbg !2911
  %55 = icmp ult i32 %54, 41, !dbg !2911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2911
  br i1 %55, label %56, label %61, !dbg !2911

; <label>:56:                                     ; preds = %53
  %57 = load i8*, i8** %19, align 8, !dbg !2911
  %58 = sext i32 %54 to i64, !dbg !2911
  %59 = getelementptr i8, i8* %57, i64 %58, !dbg !2911
  %60 = add i32 %54, 8, !dbg !2911
  store i32 %60, i32* %18, align 8, !dbg !2911
  br label %64, !dbg !2911

; <label>:61:                                     ; preds = %53
  %62 = load i8*, i8** %20, align 8, !dbg !2911
  %63 = getelementptr i8, i8* %62, i64 8, !dbg !2911
  store i8* %63, i8** %20, align 8, !dbg !2911
  br label %64, !dbg !2911

; <label>:64:                                     ; preds = %61, %56
  %65 = phi i8* [ %59, %56 ], [ %62, %61 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2911
  %66 = bitcast i8* %65 to %struct.redisObject**, !dbg !2911
  %67 = load %struct.redisObject*, %struct.redisObject** %66, align 8, !dbg !2911
  %68 = add nsw i32 %24, 1, !dbg !2913
  %69 = sext i32 %24 to i64, !dbg !2914
  %70 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %26, i64 %69, !dbg !2914
  store %struct.redisObject* %67, %struct.redisObject** %70, align 8, !dbg !2915, !tbaa !902
  tail call void @incrRefCount(%struct.redisObject* %67) #9, !dbg !2916
  br label %192, !dbg !2917

; <label>:71:                                     ; preds = %51
  %72 = icmp eq i8 %23, 98, !dbg !2918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2919
  br i1 %72, label %73, label %107, !dbg !2919

; <label>:73:                                     ; preds = %71
  %74 = load i32, i32* %18, align 8, !dbg !2920
  %75 = icmp ult i32 %74, 41, !dbg !2920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2920
  br i1 %75, label %81, label %76, !dbg !2920

; <label>:76:                                     ; preds = %73
  %77 = load i8*, i8** %20, align 8, !dbg !2920
  %78 = getelementptr i8, i8* %77, i64 8, !dbg !2920
  store i8* %78, i8** %20, align 8, !dbg !2920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2920
  %79 = bitcast i8* %77 to i8**, !dbg !2920
  %80 = load i8*, i8** %79, align 8, !dbg !2920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2922
  br label %94, !dbg !2922

; <label>:81:                                     ; preds = %73
  %82 = load i8*, i8** %19, align 8, !dbg !2920
  %83 = sext i32 %74 to i64, !dbg !2920
  %84 = getelementptr i8, i8* %82, i64 %83, !dbg !2920
  %85 = add i32 %74, 8, !dbg !2920
  store i32 %85, i32* %18, align 8, !dbg !2920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2920
  %86 = bitcast i8* %84 to i8**, !dbg !2920
  %87 = load i8*, i8** %86, align 8, !dbg !2920
  %88 = icmp ult i32 %85, 41, !dbg !2922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2922
  br i1 %88, label %89, label %94, !dbg !2922

; <label>:89:                                     ; preds = %81
  %90 = load i8*, i8** %19, align 8, !dbg !2922
  %91 = sext i32 %85 to i64, !dbg !2922
  %92 = getelementptr i8, i8* %90, i64 %91, !dbg !2922
  %93 = add i32 %74, 16, !dbg !2922
  store i32 %93, i32* %18, align 8, !dbg !2922
  br label %98, !dbg !2922

; <label>:94:                                     ; preds = %76, %81
  %95 = phi i8* [ %80, %76 ], [ %87, %81 ]
  %96 = load i8*, i8** %20, align 8, !dbg !2922
  %97 = getelementptr i8, i8* %96, i64 8, !dbg !2922
  store i8* %97, i8** %20, align 8, !dbg !2922
  br label %98, !dbg !2922

; <label>:98:                                     ; preds = %94, %89
  %99 = phi i8* [ %87, %89 ], [ %95, %94 ]
  %100 = phi i8* [ %92, %89 ], [ %96, %94 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2922
  %101 = bitcast i8* %100 to i64*, !dbg !2922
  %102 = load i64, i64* %101, align 8, !dbg !2922
  %103 = tail call %struct.redisObject* @createStringObject(i8* %99, i64 %102) #9, !dbg !2924
  %104 = add nsw i32 %24, 1, !dbg !2925
  %105 = sext i32 %24 to i64, !dbg !2926
  %106 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %26, i64 %105, !dbg !2926
  store %struct.redisObject* %103, %struct.redisObject** %106, align 8, !dbg !2927, !tbaa !902
  br label %192, !dbg !2928

; <label>:107:                                    ; preds = %71
  %108 = icmp eq i8 %23, 108, !dbg !2929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2930
  br i1 %108, label %109, label %129, !dbg !2930

; <label>:109:                                    ; preds = %107
  %110 = load i32, i32* %18, align 8, !dbg !2931
  %111 = icmp ult i32 %110, 41, !dbg !2931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2931
  br i1 %111, label %112, label %117, !dbg !2931

; <label>:112:                                    ; preds = %109
  %113 = load i8*, i8** %19, align 8, !dbg !2931
  %114 = sext i32 %110 to i64, !dbg !2931
  %115 = getelementptr i8, i8* %113, i64 %114, !dbg !2931
  %116 = add i32 %110, 8, !dbg !2931
  store i32 %116, i32* %18, align 8, !dbg !2931
  br label %120, !dbg !2931

; <label>:117:                                    ; preds = %109
  %118 = load i8*, i8** %20, align 8, !dbg !2931
  %119 = getelementptr i8, i8* %118, i64 8, !dbg !2931
  store i8* %119, i8** %20, align 8, !dbg !2931
  br label %120, !dbg !2931

; <label>:120:                                    ; preds = %117, %112
  %121 = phi i8* [ %115, %112 ], [ %118, %117 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2931
  %122 = bitcast i8* %121 to i64*, !dbg !2931
  %123 = load i64, i64* %122, align 8, !dbg !2931
  %124 = tail call i8* @sdsfromlonglong(i64 %123) #9, !dbg !2933
  %125 = tail call %struct.redisObject* @createObject(i32 0, i8* %124) #9, !dbg !2934
  %126 = add nsw i32 %24, 1, !dbg !2935
  %127 = sext i32 %24 to i64, !dbg !2936
  %128 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %26, i64 %127, !dbg !2936
  store %struct.redisObject* %125, %struct.redisObject** %128, align 8, !dbg !2937, !tbaa !902
  br label %192, !dbg !2938

; <label>:129:                                    ; preds = %107
  %130 = icmp eq i8 %23, 118, !dbg !2939
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2940
  br i1 %130, label %131, label %186, !dbg !2940

; <label>:131:                                    ; preds = %129
  %132 = load i32, i32* %18, align 8, !dbg !2941
  %133 = icmp ult i32 %132, 41, !dbg !2941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2941
  br i1 %133, label %139, label %134, !dbg !2941

; <label>:134:                                    ; preds = %131
  %135 = load i8*, i8** %20, align 8, !dbg !2941
  %136 = getelementptr i8, i8* %135, i64 8, !dbg !2941
  store i8* %136, i8** %20, align 8, !dbg !2941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2941
  %137 = bitcast i8* %135 to %struct.redisObject***, !dbg !2941
  %138 = load %struct.redisObject**, %struct.redisObject*** %137, align 8, !dbg !2941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2943
  br label %152, !dbg !2943

; <label>:139:                                    ; preds = %131
  %140 = load i8*, i8** %19, align 8, !dbg !2941
  %141 = sext i32 %132 to i64, !dbg !2941
  %142 = getelementptr i8, i8* %140, i64 %141, !dbg !2941
  %143 = add i32 %132, 8, !dbg !2941
  store i32 %143, i32* %18, align 8, !dbg !2941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2941
  %144 = bitcast i8* %142 to %struct.redisObject***, !dbg !2941
  %145 = load %struct.redisObject**, %struct.redisObject*** %144, align 8, !dbg !2941
  %146 = icmp ult i32 %143, 41, !dbg !2943
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2943
  br i1 %146, label %147, label %152, !dbg !2943

; <label>:147:                                    ; preds = %139
  %148 = load i8*, i8** %19, align 8, !dbg !2943
  %149 = sext i32 %143 to i64, !dbg !2943
  %150 = getelementptr i8, i8* %148, i64 %149, !dbg !2943
  %151 = add i32 %132, 16, !dbg !2943
  store i32 %151, i32* %18, align 8, !dbg !2943
  br label %156, !dbg !2943

; <label>:152:                                    ; preds = %134, %139
  %153 = phi %struct.redisObject** [ %138, %134 ], [ %145, %139 ]
  %154 = load i8*, i8** %20, align 8, !dbg !2943
  %155 = getelementptr i8, i8* %154, i64 8, !dbg !2943
  store i8* %155, i8** %20, align 8, !dbg !2943
  br label %156, !dbg !2943

; <label>:156:                                    ; preds = %152, %147
  %157 = phi %struct.redisObject** [ %145, %147 ], [ %153, %152 ]
  %158 = phi i8* [ %150, %147 ], [ %154, %152 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2943
  %159 = bitcast i8* %158 to i64*, !dbg !2943
  %160 = load i64, i64* %159, align 8, !dbg !2943
  %161 = trunc i64 %160 to i32, !dbg !2945
  %162 = add i32 %25, -1, !dbg !2945
  %163 = add i32 %162, %161, !dbg !2945
  %164 = sext i32 %163 to i64, !dbg !2946
  %165 = shl nsw i64 %164, 3, !dbg !2947
  %166 = tail call i8* @zrealloc(i8* %27, i64 %165) #9, !dbg !2948
  %167 = bitcast i8* %166 to %struct.redisObject**, !dbg !2948
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2950
  %168 = icmp eq i64 %160, 0, !dbg !2952
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2954
  br i1 %168, label %192, label %169, !dbg !2954

; <label>:169:                                    ; preds = %156
  %170 = sext i32 %24 to i64, !dbg !2955
  br label %171, !dbg !2955

; <label>:171:                                    ; preds = %171, %169
  %172 = phi i64 [ %170, %169 ], [ %178, %171 ]
  %173 = phi i64 [ 0, %169 ], [ %181, %171 ]
  %174 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %157, i64 %173, !dbg !2955
  %175 = load %struct.redisObject*, %struct.redisObject** %174, align 8, !dbg !2955, !tbaa !902
  tail call void @incrRefCount(%struct.redisObject* %175) #9, !dbg !2957
  %176 = bitcast %struct.redisObject** %174 to i64*, !dbg !2958
  %177 = load i64, i64* %176, align 8, !dbg !2958, !tbaa !902
  %178 = add i64 %172, 1, !dbg !2959
  %179 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %167, i64 %172, !dbg !2960
  %180 = bitcast %struct.redisObject** %179 to i64*, !dbg !2961
  store i64 %177, i64* %180, align 8, !dbg !2961, !tbaa !902
  %181 = add nuw i64 %173, 1, !dbg !2962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2954
  %182 = icmp eq i64 %181, %160, !dbg !2952
  br i1 %182, label %183, label %171, !dbg !2954, !llvm.loop !2964

; <label>:183:                                    ; preds = %171
  %184 = trunc i64 %160 to i32, !dbg !2966
  %185 = add i32 %24, %184, !dbg !2966
  br label %192, !dbg !2966

; <label>:186:                                    ; preds = %129
  %187 = icmp eq i8 %23, 33, !dbg !2967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2970
  br i1 %187, label %188, label %210, !dbg !2969

; <label>:188:                                    ; preds = %186
  br i1 %21, label %198, label %189, !dbg !2972

; <label>:189:                                    ; preds = %188
  %190 = load i32, i32* %3, align 4, !dbg !2974, !tbaa !933
  %191 = or i32 %190, 1, !dbg !2974
  store i32 %191, i32* %3, align 4, !dbg !2974, !tbaa !933
  br label %192, !dbg !2976

; <label>:192:                                    ; preds = %156, %183, %42, %98, %189, %120, %64
  %193 = phi i8* [ %28, %189 ], [ %28, %120 ], [ %28, %98 ], [ %28, %64 ], [ %28, %42 ], [ %166, %183 ], [ %166, %156 ]
  %194 = phi i8* [ %27, %189 ], [ %27, %120 ], [ %27, %98 ], [ %27, %64 ], [ %27, %42 ], [ %166, %183 ], [ %166, %156 ]
  %195 = phi %struct.redisObject** [ %26, %189 ], [ %26, %120 ], [ %26, %98 ], [ %26, %64 ], [ %26, %42 ], [ %167, %183 ], [ %167, %156 ]
  %196 = phi i32 [ %25, %189 ], [ %25, %120 ], [ %25, %98 ], [ %25, %64 ], [ %25, %42 ], [ %163, %183 ], [ %163, %156 ]
  %197 = phi i32 [ %24, %189 ], [ %126, %120 ], [ %104, %98 ], [ %68, %64 ], [ %48, %42 ], [ %185, %183 ], [ %24, %156 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2977
  br label %198, !dbg !2978

; <label>:198:                                    ; preds = %192, %188
  %199 = phi i8* [ %28, %188 ], [ %193, %192 ], !dbg !2979
  %200 = phi i8* [ %27, %188 ], [ %194, %192 ], !dbg !2979
  %201 = phi %struct.redisObject** [ %26, %188 ], [ %195, %192 ], !dbg !2979
  %202 = phi i32 [ %25, %188 ], [ %196, %192 ], !dbg !2979
  %203 = phi i32 [ %24, %188 ], [ %197, %192 ], !dbg !2979
  %204 = getelementptr inbounds i8, i8* %29, i64 1, !dbg !2978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2897
  %205 = load i8, i8* %204, align 1, !dbg !2898, !tbaa !1137
  %206 = icmp eq i8 %205, 0, !dbg !2897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2897
  br i1 %206, label %207, label %22, !dbg !2897, !llvm.loop !2980

; <label>:207:                                    ; preds = %198, %5
  %208 = phi %struct.redisObject** [ %12, %5 ], [ %201, %198 ], !dbg !2982
  %209 = phi i32 [ 1, %5 ], [ %203, %198 ], !dbg !2977
  store i32 %209, i32* %2, align 4, !dbg !2983, !tbaa !933
  br label %221, !dbg !2984

; <label>:210:                                    ; preds = %186
  %211 = icmp sgt i32 %24, 0, !dbg !2986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2988
  br i1 %211, label %212, label %220, !dbg !2988

; <label>:212:                                    ; preds = %210
  %213 = zext i32 %24 to i64
  br label %214, !dbg !2989

; <label>:214:                                    ; preds = %214, %212
  %215 = phi i64 [ 0, %212 ], [ %218, %214 ]
  %216 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %26, i64 %215, !dbg !2989
  %217 = load %struct.redisObject*, %struct.redisObject** %216, align 8, !dbg !2989, !tbaa !902
  tail call void @decrRefCount(%struct.redisObject* %217) #9, !dbg !2990
  %218 = add nuw nsw i64 %215, 1, !dbg !2991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2992
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2988
  %219 = icmp eq i64 %218, %213, !dbg !2986
  br i1 %219, label %220, label %214, !dbg !2988, !llvm.loop !2993

; <label>:220:                                    ; preds = %214, %210
  tail call void @zfree(i8* %28) #9, !dbg !2995
  br label %221, !dbg !2996

; <label>:221:                                    ; preds = %220, %207
  %222 = phi %struct.redisObject** [ null, %220 ], [ %208, %207 ], !dbg !2979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2997
  ret %struct.redisObject** %222, !dbg !2997
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ReplicateVerbatim(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !2998 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3002
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !3002, !tbaa !1183
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 10, !dbg !3003
  %5 = load %struct.redisCommand*, %struct.redisCommand** %4, align 8, !dbg !3003, !tbaa !1351
  %6 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 2, !dbg !3004
  %7 = load %struct.redisDb*, %struct.redisDb** %6, align 8, !dbg !3004, !tbaa !1322
  %8 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %7, i64 0, i32 5, !dbg !3005
  %9 = load i32, i32* %8, align 8, !dbg !3005, !tbaa !1324
  %10 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 9, !dbg !3006
  %11 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !3006, !tbaa !1368
  %12 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 8, !dbg !3007
  %13 = load i32, i32* %12, align 8, !dbg !3007, !tbaa !1370
  tail call void @alsoPropagate(%struct.redisCommand* %5, i32 %9, %struct.redisObject** %11, i32 %13, i32 3) #9, !dbg !3008
  %14 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !3009, !tbaa !2843
  %15 = add nsw i64 %14, 1, !dbg !3009
  store i64 %15, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !3009, !tbaa !2843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3010
  ret i32 0, !dbg !3010
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_GetClientId(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !3011 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3017
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !3017, !tbaa !1183
  %4 = icmp eq %struct.client* %3, null, !dbg !3019
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3020
  br i1 %4, label %8, label %5, !dbg !3020

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 0, !dbg !3021
  %7 = load i64, i64* %6, align 8, !dbg !3021, !tbaa !3022
  br label %8, !dbg !3023

; <label>:8:                                      ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ], !dbg !3024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3026
  ret i64 %9, !dbg !3026
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetSelectedDb(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !3027 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3031
  %3 = load %struct.client*, %struct.client** %2, align 8, !dbg !3031, !tbaa !1183
  %4 = getelementptr inbounds %struct.client, %struct.client* %3, i64 0, i32 2, !dbg !3032
  %5 = load %struct.redisDb*, %struct.redisDb** %4, align 8, !dbg !3032, !tbaa !1322
  %6 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %5, i64 0, i32 5, !dbg !3033
  %7 = load i32, i32* %6, align 8, !dbg !3033, !tbaa !1324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3034
  ret i32 %7, !dbg !3034
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetContextFlags(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !3035 {
  %2 = alloca float, align 4
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3044
  %4 = load %struct.client*, %struct.client** %3, align 8, !dbg !3044, !tbaa !1183
  %5 = icmp eq %struct.client* %4, null, !dbg !3046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3047
  br i1 %5, label %24, label %6, !dbg !3047

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.client, %struct.client* %4, i64 0, i32 21, !dbg !3048
  %8 = load i32, i32* %7, align 8, !dbg !3048, !tbaa !1305
  %9 = and i32 %8, 256, !dbg !3051
  %10 = icmp eq i32 %9, 0, !dbg !3051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3052
  br i1 %10, label %12, label %11, !dbg !3052

; <label>:11:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3053
  br label %12, !dbg !3053

; <label>:12:                                     ; preds = %6, %11
  %13 = phi i32 [ 1, %11 ], [ 0, %6 ], !dbg !3054
  %14 = and i32 %8, 8, !dbg !3055
  %15 = icmp eq i32 %14, 0, !dbg !3055
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3057
  br i1 %15, label %18, label %16, !dbg !3057

; <label>:16:                                     ; preds = %12
  %17 = or i32 %13, 2, !dbg !3058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3059
  br label %18, !dbg !3059

; <label>:18:                                     ; preds = %12, %16
  %19 = phi i32 [ %17, %16 ], [ %13, %12 ], !dbg !3060
  %20 = and i32 %8, 2, !dbg !3061
  %21 = icmp eq i32 %20, 0, !dbg !3061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3063
  br i1 %21, label %24, label %22, !dbg !3063

; <label>:22:                                     ; preds = %18
  %23 = or i32 %19, 4096, !dbg !3064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3065
  br label %24, !dbg !3065

; <label>:24:                                     ; preds = %18, %1, %22
  %25 = phi i32 [ %23, %22 ], [ %19, %18 ], [ 0, %1 ], !dbg !3054
  %26 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !3066, !tbaa !3068
  %27 = icmp eq i32 %26, 0, !dbg !3069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3070
  br i1 %27, label %30, label %28, !dbg !3070

; <label>:28:                                     ; preds = %24
  %29 = or i32 %25, 32, !dbg !3071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3072
  br label %30, !dbg !3072

; <label>:30:                                     ; preds = %24, %28
  %31 = phi i32 [ %29, %28 ], [ %25, %24 ], !dbg !3073
  %32 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !3074, !tbaa !3076
  %33 = icmp eq i32 %32, 0, !dbg !3077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3078
  br i1 %33, label %36, label %34, !dbg !3078

; <label>:34:                                     ; preds = %30
  %35 = or i32 %31, 8192, !dbg !3079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3080
  br label %36, !dbg !3080

; <label>:36:                                     ; preds = %30, %34
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !3081
  %38 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 227), align 8, !dbg !3082, !tbaa !3084
  %39 = icmp eq i64 %38, 0, !dbg !3085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3086
  br i1 %39, label %46, label %40, !dbg !3086

; <label>:40:                                     ; preds = %36
  %41 = or i32 %37, 256, !dbg !3087
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 228), align 8, !dbg !3089, !tbaa !3091
  %43 = icmp eq i32 %42, 1792, !dbg !3092
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3093
  br i1 %43, label %46, label %44, !dbg !3093

; <label>:44:                                     ; preds = %40
  %45 = or i32 %37, 768, !dbg !3094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3095
  br label %46, !dbg !3095

; <label>:46:                                     ; preds = %40, %36, %44
  %47 = phi i32 [ %45, %44 ], [ %41, %40 ], [ %37, %36 ], !dbg !3096
  %48 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 117), align 8, !dbg !3097, !tbaa !3099
  %49 = icmp eq i32 %48, 0, !dbg !3100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3101
  br i1 %49, label %52, label %50, !dbg !3101

; <label>:50:                                     ; preds = %46
  %51 = or i32 %47, 64, !dbg !3102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3103
  br label %52, !dbg !3103

; <label>:52:                                     ; preds = %46, %50
  %53 = phi i32 [ %51, %50 ], [ %47, %46 ], !dbg !3104
  %54 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 156), align 8, !dbg !3105, !tbaa !3107
  %55 = icmp sgt i32 %54, 0, !dbg !3108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3109
  br i1 %55, label %56, label %58, !dbg !3109

; <label>:56:                                     ; preds = %52
  %57 = or i32 %53, 128, !dbg !3110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3111
  br label %58, !dbg !3111

; <label>:58:                                     ; preds = %56, %52
  %59 = phi i32 [ %57, %56 ], [ %53, %52 ], !dbg !3112
  %60 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !3113, !tbaa !3115
  %61 = icmp eq i8* %60, null, !dbg !3116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3117
  br i1 %61, label %66, label %62, !dbg !3117

; <label>:62:                                     ; preds = %58
  %63 = or i32 %59, 8, !dbg !3118
  %64 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 211), align 4, !dbg !3120, !tbaa !3122
  %65 = icmp eq i32 %64, 0, !dbg !3123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3124
  br i1 %65, label %69, label %66, !dbg !3124

; <label>:66:                                     ; preds = %62, %58
  %67 = phi i32 [ 4, %58 ], [ 24, %62 ]
  %68 = or i32 %59, %67, !dbg !3125
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3125
  br label %69, !dbg !3127

; <label>:69:                                     ; preds = %66, %62
  %70 = phi i32 [ %63, %62 ], [ %68, %66 ], !dbg !3128
  %71 = bitcast float* %2 to i8*, !dbg !3127
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #5, !dbg !3127
  %72 = call i32 @getMaxmemoryState(i64* null, i64* null, i64* null, float* nonnull %2) #9, !dbg !3130
  %73 = icmp eq i32 %72, -1, !dbg !3132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3134
  br i1 %73, label %74, label %76, !dbg !3134

; <label>:74:                                     ; preds = %69
  %75 = or i32 %70, 1024, !dbg !3135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3136
  br label %76, !dbg !3136

; <label>:76:                                     ; preds = %74, %69
  %77 = phi i32 [ %75, %74 ], [ %70, %69 ], !dbg !3125
  %78 = load float, float* %2, align 4, !dbg !3137, !tbaa !3139
  %79 = fcmp ogt float %78, 7.500000e-01, !dbg !3141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3142
  br i1 %79, label %80, label %82, !dbg !3142

; <label>:80:                                     ; preds = %76
  %81 = or i32 %77, 2048, !dbg !3143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3144
  br label %82, !dbg !3144

; <label>:82:                                     ; preds = %80, %76
  %83 = phi i32 [ %81, %80 ], [ %77, %76 ], !dbg !3145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #5, !dbg !3146
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3147
  ret i32 %83, !dbg !3147
}

; Function Attrs: noredzone
declare dso_local i32 @getMaxmemoryState(i64*, i64*, i64*, float*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SelectDb(%struct.RedisModuleCtx* nocapture readonly, i32) #0 !dbg !3148 {
  %3 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3157
  %4 = load %struct.client*, %struct.client** %3, align 8, !dbg !3157, !tbaa !1183
  %5 = tail call i32 @selectDb(%struct.client* %4, i32 %1) #9, !dbg !3158
  %6 = icmp ne i32 %5, 0, !dbg !3160
  %7 = zext i1 %6 to i32, !dbg !3161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3162
  ret i32 %7, !dbg !3162
}

; Function Attrs: noredzone
declare dso_local i32 @selectDb(%struct.client*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_OpenKey(%struct.RedisModuleCtx*, %struct.redisObject*, i32) #0 !dbg !3163 {
  %4 = and i32 %2, 2, !dbg !3175
  %5 = icmp eq i32 %4, 0, !dbg !3175
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !3177
  %7 = load %struct.client*, %struct.client** %6, align 8, !dbg !3177, !tbaa !1183
  %8 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 2, !dbg !3177
  %9 = load %struct.redisDb*, %struct.redisDb** %8, align 8, !dbg !3177, !tbaa !1322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3179
  br i1 %5, label %12, label %10, !dbg !3179

; <label>:10:                                     ; preds = %3
  %11 = tail call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* %9, %struct.redisObject* %1) #9, !dbg !3180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3183
  br label %15, !dbg !3183

; <label>:12:                                     ; preds = %3
  %13 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %9, %struct.redisObject* %1) #9, !dbg !3184
  %14 = icmp eq %struct.redisObject* %13, null, !dbg !3185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3187
  br i1 %14, label %74, label %15, !dbg !3187

; <label>:15:                                     ; preds = %12, %10
  %16 = phi %struct.redisObject* [ %11, %10 ], [ %13, %12 ], !dbg !3177
  %17 = tail call i8* @zmalloc(i64 120) #9, !dbg !3188
  %18 = bitcast i8* %17 to %struct.RedisModuleCtx**, !dbg !3190
  store %struct.RedisModuleCtx* %0, %struct.RedisModuleCtx** %18, align 8, !dbg !3191, !tbaa !1906
  %19 = load %struct.client*, %struct.client** %6, align 8, !dbg !3192, !tbaa !1183
  %20 = getelementptr inbounds %struct.client, %struct.client* %19, i64 0, i32 2, !dbg !3193
  %21 = bitcast %struct.redisDb** %20 to i64*, !dbg !3193
  %22 = load i64, i64* %21, align 8, !dbg !3193, !tbaa !1322
  %23 = getelementptr inbounds i8, i8* %17, i64 8, !dbg !3194
  %24 = bitcast i8* %23 to i64*, !dbg !3195
  store i64 %22, i64* %24, align 8, !dbg !3195, !tbaa !1066
  %25 = getelementptr inbounds i8, i8* %17, i64 16, !dbg !3196
  %26 = bitcast i8* %25 to %struct.redisObject**, !dbg !3196
  store %struct.redisObject* %1, %struct.redisObject** %26, align 8, !dbg !3197, !tbaa !1068
  tail call void @incrRefCount(%struct.redisObject* %1) #9, !dbg !3198
  %27 = getelementptr inbounds i8, i8* %17, i64 24, !dbg !3199
  %28 = bitcast i8* %27 to %struct.redisObject**, !dbg !3199
  store %struct.redisObject* %16, %struct.redisObject** %28, align 8, !dbg !3200, !tbaa !1038
  %29 = getelementptr inbounds i8, i8* %17, i64 32, !dbg !3201
  %30 = bitcast i8* %29 to i8**, !dbg !3201
  store i8* null, i8** %30, align 8, !dbg !3202, !tbaa !3203
  %31 = getelementptr inbounds i8, i8* %17, i64 40, !dbg !3204
  %32 = bitcast i8* %31 to i32*, !dbg !3204
  store i32 %2, i32* %32, align 8, !dbg !3205, !tbaa !1030
  %33 = getelementptr inbounds i8, i8* %17, i64 44, !dbg !3208
  %34 = bitcast i8* %33 to i32*, !dbg !3208
  store i32 0, i32* %34, align 4, !dbg !3209, !tbaa !1884
  %35 = getelementptr inbounds i8, i8* %17, i64 104, !dbg !3210
  %36 = bitcast i8* %35 to i8**, !dbg !3210
  store i8* null, i8** %36, align 8, !dbg !3211, !tbaa !1897
  %37 = getelementptr inbounds i8, i8* %17, i64 112, !dbg !3212
  %38 = bitcast i8* %37 to i32*, !dbg !3212
  store i32 1, i32* %38, align 8, !dbg !3213, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3214
  %39 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !3219
  %40 = load i32, i32* %39, align 8, !dbg !3219, !tbaa !1179
  %41 = and i32 %40, 2, !dbg !3220
  %42 = icmp eq i32 %41, 0, !dbg !3220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3221
  br i1 %42, label %73, label %43, !dbg !3221

; <label>:43:                                     ; preds = %15
  %44 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !3222
  %45 = load i32, i32* %44, align 4, !dbg !3222, !tbaa !1203
  %46 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !3223
  %47 = load i32, i32* %46, align 8, !dbg !3223, !tbaa !1289
  %48 = icmp eq i32 %45, %47, !dbg !3224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3225
  br i1 %48, label %52, label %49, !dbg !3225

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %51 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %50, align 8, !dbg !3226, !tbaa !1207
  br label %66, !dbg !3225

; <label>:52:                                     ; preds = %43
  %53 = shl nsw i32 %45, 1, !dbg !3227
  store i32 %53, i32* %46, align 8, !dbg !3227, !tbaa !1289
  %54 = icmp slt i32 %45, 8, !dbg !3228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3229
  br i1 %54, label %55, label %56, !dbg !3229

; <label>:55:                                     ; preds = %52
  store i32 16, i32* %46, align 8, !dbg !3230, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3231
  br label %56, !dbg !3231

; <label>:56:                                     ; preds = %55, %52
  %57 = phi i32 [ 16, %55 ], [ %53, %52 ], !dbg !3232
  %58 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !3233
  %59 = bitcast %struct.AutoMemEntry** %58 to i8**, !dbg !3233
  %60 = load i8*, i8** %59, align 8, !dbg !3233, !tbaa !1207
  %61 = sext i32 %57 to i64, !dbg !3234
  %62 = shl nsw i64 %61, 4, !dbg !3235
  %63 = tail call i8* @zrealloc(i8* %60, i64 %62) #9, !dbg !3236
  store i8* %63, i8** %59, align 8, !dbg !3237, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3238
  %64 = bitcast i8* %63 to %struct.AutoMemEntry*, !dbg !3238
  %65 = load i32, i32* %44, align 4, !dbg !3239, !tbaa !1203
  br label %66, !dbg !3238

; <label>:66:                                     ; preds = %56, %49
  %67 = phi i32 [ %45, %49 ], [ %65, %56 ], !dbg !3239
  %68 = phi %struct.AutoMemEntry* [ %51, %49 ], [ %64, %56 ], !dbg !3226
  %69 = sext i32 %67 to i64, !dbg !3240
  %70 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %68, i64 %69, i32 1, !dbg !3241
  store i32 0, i32* %70, align 8, !dbg !3242, !tbaa !1213
  %71 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %68, i64 %69, i32 0, !dbg !3243
  store i8* %17, i8** %71, align 8, !dbg !3244, !tbaa !1209
  %72 = add nsw i32 %67, 1, !dbg !3245
  store i32 %72, i32* %44, align 4, !dbg !3245, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3246
  br label %73, !dbg !3246

; <label>:73:                                     ; preds = %15, %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3246
  br label %74, !dbg !3247

; <label>:74:                                     ; preds = %12, %73
  %75 = phi i8* [ %17, %73 ], [ null, %12 ], !dbg !3248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3250
  ret i8* %75, !dbg !3250
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyWrite(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyRead(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @signalModifiedKey(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_ZsetRangeStop(%struct.RedisModuleKey*) #0 !dbg !1878 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !3252
  %3 = load i32, i32* %2, align 4, !dbg !3252, !tbaa !1884
  %4 = icmp eq i32 %3, 1, !dbg !3253
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3254
  br i1 %4, label %5, label %7, !dbg !3254

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !3255
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %6) #9, !dbg !3256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3256
  br label %7, !dbg !3256

; <label>:7:                                      ; preds = %5, %1
  store i32 0, i32* %2, align 4, !dbg !3259, !tbaa !1884
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !3260
  store i8* null, i8** %8, align 8, !dbg !3261, !tbaa !1897
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !3262
  store i32 1, i32* %9, align 8, !dbg !3263, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3265
  ret void, !dbg !3265
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_KeyType(%struct.RedisModuleKey* readonly) #0 !dbg !3266 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !3270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3272
  br i1 %2, label %16, label %3, !dbg !3272

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3273
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3273, !tbaa !1038
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !3274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3275
  br i1 %6, label %16, label %7, !dbg !3275

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !3276
  %9 = load i32, i32* %8, align 8, !dbg !3276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3277
  %10 = trunc i32 %9 to i4, !dbg !3277
  %11 = icmp ult i4 %10, 6, !dbg !3277
  br i1 %11, label %12, label %16, !dbg !3277

; <label>:12:                                     ; preds = %7
  %13 = sext i4 %10 to i64, !dbg !3277
  %14 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.RM_KeyType, i64 0, i64 %13, !dbg !3277
  %15 = load i32, i32* %14, align 4, !dbg !3277
  br label %16, !dbg !3277

; <label>:16:                                     ; preds = %7, %12, %1, %3
  %17 = phi i32 [ 0, %3 ], [ 0, %1 ], [ %15, %12 ], [ 0, %7 ], !dbg !3278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3281
  ret i32 %17, !dbg !3281
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_ValueLength(%struct.RedisModuleKey* readonly) #0 !dbg !3282 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !3288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3290
  br i1 %2, label %21, label %3, !dbg !3290

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3291
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3291, !tbaa !1038
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !3292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3293
  br i1 %6, label %21, label %7, !dbg !3293

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !3294
  %9 = load i32, i32* %8, align 8, !dbg !3294
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3295
  %10 = trunc i32 %9 to i4, !dbg !3295
  switch i4 %10, label %21 [
    i4 0, label %11
    i4 1, label %13
    i4 2, label %15
    i4 3, label %17
    i4 4, label %19
  ], !dbg !3295

; <label>:11:                                     ; preds = %7
  %12 = tail call i64 @stringObjectLen(%struct.redisObject* nonnull %5) #9, !dbg !3296
  br label %21, !dbg !3298

; <label>:13:                                     ; preds = %7
  %14 = tail call i64 @listTypeLength(%struct.redisObject* nonnull %5) #9, !dbg !3299
  br label %21, !dbg !3300

; <label>:15:                                     ; preds = %7
  %16 = tail call i64 @setTypeSize(%struct.redisObject* nonnull %5) #9, !dbg !3301
  br label %21, !dbg !3302

; <label>:17:                                     ; preds = %7
  %18 = tail call i64 @zsetLength(%struct.redisObject* nonnull %5) #9, !dbg !3303
  br label %21, !dbg !3304

; <label>:19:                                     ; preds = %7
  %20 = tail call i64 @hashTypeLength(%struct.redisObject* nonnull %5) #9, !dbg !3305
  br label %21, !dbg !3306

; <label>:21:                                     ; preds = %7, %1, %3, %19, %17, %15, %13, %11
  %22 = phi i64 [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ 0, %3 ], [ 0, %1 ], [ 0, %7 ], !dbg !3307
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3309
  ret i64 %22, !dbg !3309
}

; Function Attrs: noredzone
declare dso_local i64 @stringObjectLen(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DeleteKey(%struct.RedisModuleKey* nocapture) #0 !dbg !3310 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3314
  %3 = load i32, i32* %2, align 8, !dbg !3314, !tbaa !1030
  %4 = and i32 %3, 2, !dbg !3316
  %5 = icmp eq i32 %4, 0, !dbg !3316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3317
  br i1 %5, label %16, label %6, !dbg !3317

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3318
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !3318, !tbaa !1038
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !3320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3321
  br i1 %9, label %16, label %10, !dbg !3321

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3322
  %12 = load %struct.redisDb*, %struct.redisDb** %11, align 8, !dbg !3322, !tbaa !1066
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3324
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !3324, !tbaa !1068
  %15 = tail call i32 @dbDelete(%struct.redisDb* %12, %struct.redisObject* %14) #9, !dbg !3325
  store %struct.redisObject* null, %struct.redisObject** %7, align 8, !dbg !3326, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3327
  br label %16, !dbg !3327

; <label>:16:                                     ; preds = %10, %6, %1
  %17 = phi i32 [ 1, %1 ], [ 0, %6 ], [ 0, %10 ], !dbg !3328
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3328
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3329
  ret i32 %17, !dbg !3329
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_UnlinkKey(%struct.RedisModuleKey* nocapture) #0 !dbg !3330 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3334
  %3 = load i32, i32* %2, align 8, !dbg !3334, !tbaa !1030
  %4 = and i32 %3, 2, !dbg !3336
  %5 = icmp eq i32 %4, 0, !dbg !3336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3337
  br i1 %5, label %16, label %6, !dbg !3337

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3338
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !3338, !tbaa !1038
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !3340
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3341
  br i1 %9, label %16, label %10, !dbg !3341

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3342
  %12 = load %struct.redisDb*, %struct.redisDb** %11, align 8, !dbg !3342, !tbaa !1066
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3344
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !3344, !tbaa !1068
  %15 = tail call i32 @dbAsyncDelete(%struct.redisDb* %12, %struct.redisObject* %14) #9, !dbg !3345
  store %struct.redisObject* null, %struct.redisObject** %7, align 8, !dbg !3346, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3347
  br label %16, !dbg !3347

; <label>:16:                                     ; preds = %10, %6, %1
  %17 = phi i32 [ 1, %1 ], [ 0, %6 ], [ 0, %10 ], !dbg !3348
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3348
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3349
  ret i32 %17, !dbg !3349
}

; Function Attrs: noredzone
declare dso_local i32 @dbAsyncDelete(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_GetExpire(%struct.RedisModuleKey* nocapture readonly) #0 !dbg !3350 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3357
  %3 = load %struct.redisDb*, %struct.redisDb** %2, align 8, !dbg !3357, !tbaa !1066
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3358
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3358, !tbaa !1068
  %6 = tail call i64 @getExpire(%struct.redisDb* %3, %struct.redisObject* %5) #9, !dbg !3359
  %7 = icmp eq i64 %6, -1, !dbg !3361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3363
  br i1 %7, label %17, label %8, !dbg !3363

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3364
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !3364, !tbaa !1038
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !3365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3366
  br i1 %11, label %17, label %12, !dbg !3366

; <label>:12:                                     ; preds = %8
  %13 = tail call i64 @mstime() #9, !dbg !3367
  %14 = sub nsw i64 %6, %13, !dbg !3368
  %15 = icmp sgt i64 %14, 0, !dbg !3369
  %16 = select i1 %15, i64 %14, i64 0, !dbg !3369
  br label %17, !dbg !3370

; <label>:17:                                     ; preds = %1, %8, %12
  %18 = phi i64 [ %16, %12 ], [ -1, %8 ], [ -1, %1 ], !dbg !3371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3372
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3373
  ret i64 %18, !dbg !3373
}

; Function Attrs: noredzone
declare dso_local i64 @getExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SetExpire(%struct.RedisModuleKey* nocapture readonly, i64) #0 !dbg !3374 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3382
  %4 = load i32, i32* %3, align 8, !dbg !3382, !tbaa !1030
  %5 = and i32 %4, 2, !dbg !3384
  %6 = icmp eq i32 %5, 0, !dbg !3384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3385
  br i1 %6, label %31, label %7, !dbg !3385

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3386
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3386, !tbaa !1038
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !3387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3388
  br i1 %10, label %31, label %11, !dbg !3388

; <label>:11:                                     ; preds = %7
  %12 = icmp eq i64 %1, -1, !dbg !3389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3391
  br i1 %12, label %24, label %13, !dbg !3391

; <label>:13:                                     ; preds = %11
  %14 = tail call i64 @mstime() #9, !dbg !3392
  %15 = add nsw i64 %14, %1, !dbg !3394
  %16 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !3395
  %17 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %16, align 8, !dbg !3395, !tbaa !1906
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %17, i64 0, i32 2, !dbg !3396
  %19 = load %struct.client*, %struct.client** %18, align 8, !dbg !3396, !tbaa !1183
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3397
  %21 = load %struct.redisDb*, %struct.redisDb** %20, align 8, !dbg !3397, !tbaa !1066
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3398
  %23 = load %struct.redisObject*, %struct.redisObject** %22, align 8, !dbg !3398, !tbaa !1068
  tail call void @setExpire(%struct.client* %19, %struct.redisDb* %21, %struct.redisObject* %23, i64 %15) #9, !dbg !3399
  br label %30, !dbg !3400

; <label>:24:                                     ; preds = %11
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3401
  %26 = load %struct.redisDb*, %struct.redisDb** %25, align 8, !dbg !3401, !tbaa !1066
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3403
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !3403, !tbaa !1068
  %29 = tail call i32 @removeExpire(%struct.redisDb* %26, %struct.redisObject* %28) #9, !dbg !3404
  br label %30

; <label>:30:                                     ; preds = %24, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %31, !dbg !3405

; <label>:31:                                     ; preds = %7, %2, %30
  %32 = phi i32 [ 0, %30 ], [ 1, %2 ], [ 1, %7 ], !dbg !3406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3407
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3408
  ret i32 %32, !dbg !3408
}

; Function Attrs: noredzone
declare dso_local void @setExpire(%struct.client*, %struct.redisDb*, %struct.redisObject*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @removeExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringSet(%struct.RedisModuleKey* nocapture, %struct.redisObject*) #0 !dbg !3409 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3417
  %4 = load i32, i32* %3, align 8, !dbg !3417, !tbaa !1030
  %5 = and i32 %4, 2, !dbg !3419
  %6 = icmp eq i32 %5, 0, !dbg !3419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3420
  br i1 %6, label %27, label %7, !dbg !3420

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 4, !dbg !3421
  %9 = load i8*, i8** %8, align 8, !dbg !3421, !tbaa !3203
  %10 = icmp eq i8* %9, null, !dbg !3422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3423
  br i1 %10, label %11, label %27, !dbg !3423

; <label>:11:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3426
  %12 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3427
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !3427, !tbaa !1038
  %14 = icmp eq %struct.redisObject* %13, null, !dbg !3428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3429
  %15 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3430
  br i1 %14, label %16, label %18, !dbg !3429

; <label>:16:                                     ; preds = %11
  %17 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3431
  br label %23, !dbg !3429

; <label>:18:                                     ; preds = %11
  %19 = load %struct.redisDb*, %struct.redisDb** %15, align 8, !dbg !3432, !tbaa !1066
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3433
  %21 = load %struct.redisObject*, %struct.redisObject** %20, align 8, !dbg !3433, !tbaa !1068
  %22 = tail call i32 @dbDelete(%struct.redisDb* %19, %struct.redisObject* %21) #9, !dbg !3434
  store %struct.redisObject* null, %struct.redisObject** %12, align 8, !dbg !3435, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3436
  br label %23, !dbg !3436

; <label>:23:                                     ; preds = %16, %18
  %24 = phi %struct.redisObject** [ %17, %16 ], [ %20, %18 ], !dbg !3431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3437
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3438
  %25 = load %struct.redisDb*, %struct.redisDb** %15, align 8, !dbg !3439, !tbaa !1066
  %26 = load %struct.redisObject*, %struct.redisObject** %24, align 8, !dbg !3431, !tbaa !1068
  tail call void @setKey(%struct.redisDb* %25, %struct.redisObject* %26, %struct.redisObject* %1) #9, !dbg !3440
  store %struct.redisObject* %1, %struct.redisObject** %12, align 8, !dbg !3441, !tbaa !1038
  br label %27, !dbg !3442

; <label>:27:                                     ; preds = %2, %7, %23
  %28 = phi i32 [ 0, %23 ], [ 1, %7 ], [ 1, %2 ], !dbg !3430
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3444
  ret i32 %28, !dbg !3444
}

; Function Attrs: noredzone
declare dso_local void @setKey(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_StringDMA(%struct.RedisModuleKey* nocapture, i64* nocapture, i32) #0 !dbg !3445 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3456
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !3456, !tbaa !1038
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !3458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3459
  br i1 %6, label %54, label %7, !dbg !3459

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !3460
  %9 = load i32, i32* %8, align 8, !dbg !3460
  %10 = and i32 %9, 15, !dbg !3460
  %11 = icmp eq i32 %10, 0, !dbg !3462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3463
  br i1 %11, label %12, label %57, !dbg !3463

; <label>:12:                                     ; preds = %7
  %13 = and i32 %2, 2, !dbg !3464
  %14 = icmp eq i32 %13, 0, !dbg !3464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3466
  br i1 %14, label %15, label %18, !dbg !3466

; <label>:15:                                     ; preds = %12
  %16 = and i32 %9, 240, !dbg !3467
  %17 = icmp eq i32 %16, 0, !dbg !3468
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3469
  br i1 %17, label %24, label %18, !dbg !3469

; <label>:18:                                     ; preds = %15, %12
  %19 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3470
  %20 = load %struct.redisDb*, %struct.redisDb** %19, align 8, !dbg !3470, !tbaa !1066
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3471
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !3471, !tbaa !1068
  %23 = tail call %struct.redisObject* @dbUnshareStringValue(%struct.redisDb* %20, %struct.redisObject* %22, %struct.redisObject* nonnull %5) #9, !dbg !3472
  store %struct.redisObject* %23, %struct.redisObject** %4, align 8, !dbg !3473, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3474
  br label %24, !dbg !3474

; <label>:24:                                     ; preds = %15, %18
  %25 = phi %struct.redisObject* [ %5, %15 ], [ %23, %18 ], !dbg !3475
  %26 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !3476
  %27 = load i8*, i8** %26, align 8, !dbg !3476, !tbaa !1046
  %28 = getelementptr inbounds i8, i8* %27, i64 -1, !dbg !3479
  %29 = load i8, i8* %28, align 1, !dbg !3479, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3481
  %30 = trunc i8 %29 to i3, !dbg !3481
  switch i3 %30, label %52 [
    i3 0, label %31
    i3 1, label %34
    i3 2, label %38
    i3 3, label %43
    i3 -4, label %48
  ], !dbg !3481

; <label>:31:                                     ; preds = %24
  %32 = lshr i8 %29, 3, !dbg !3482
  %33 = zext i8 %32 to i64, !dbg !3482
  br label %52, !dbg !3483

; <label>:34:                                     ; preds = %24
  %35 = getelementptr inbounds i8, i8* %27, i64 -3, !dbg !3484
  %36 = load i8, i8* %35, align 1, !dbg !3485, !tbaa !1137
  %37 = zext i8 %36 to i64, !dbg !3484
  br label %52, !dbg !3486

; <label>:38:                                     ; preds = %24
  %39 = getelementptr inbounds i8, i8* %27, i64 -5, !dbg !3487
  %40 = bitcast i8* %39 to i16*, !dbg !3488
  %41 = load i16, i16* %40, align 1, !dbg !3488, !tbaa !2186
  %42 = zext i16 %41 to i64, !dbg !3487
  br label %52, !dbg !3489

; <label>:43:                                     ; preds = %24
  %44 = getelementptr inbounds i8, i8* %27, i64 -9, !dbg !3490
  %45 = bitcast i8* %44 to i32*, !dbg !3491
  %46 = load i32, i32* %45, align 1, !dbg !3491, !tbaa !933
  %47 = zext i32 %46 to i64, !dbg !3490
  br label %52, !dbg !3492

; <label>:48:                                     ; preds = %24
  %49 = getelementptr inbounds i8, i8* %27, i64 -17, !dbg !3493
  %50 = bitcast i8* %49 to i64*, !dbg !3494
  %51 = load i64, i64* %50, align 1, !dbg !3494, !tbaa !2163
  br label %52, !dbg !3495

; <label>:52:                                     ; preds = %24, %31, %34, %38, %43, %48
  %53 = phi i64 [ %51, %48 ], [ %47, %43 ], [ %42, %38 ], [ %37, %34 ], [ %33, %31 ], [ 0, %24 ], !dbg !3496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3497
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3498
  br label %54, !dbg !3499

; <label>:54:                                     ; preds = %3, %52
  %55 = phi i64 [ %53, %52 ], [ 0, %3 ]
  %56 = phi i8* [ %27, %52 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0), %3 ]
  store i64 %55, i64* %1, align 8, !dbg !3500, !tbaa !2163
  br label %57, !dbg !3500

; <label>:57:                                     ; preds = %54, %7
  %58 = phi i8* [ null, %7 ], [ %56, %54 ], !dbg !3497
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3502
  ret i8* %58, !dbg !3502
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @dbUnshareStringValue(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StringTruncate(%struct.RedisModuleKey* nocapture, i64) #0 !dbg !3503 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3516
  %4 = load i32, i32* %3, align 8, !dbg !3516, !tbaa !1030
  %5 = and i32 %4, 2, !dbg !3518
  %6 = icmp eq i32 %5, 0, !dbg !3518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3519
  br i1 %6, label %124, label %7, !dbg !3519

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3520
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3520, !tbaa !1038
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !3522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3523
  br i1 %10, label %16, label %11, !dbg !3523

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !3524
  %13 = load i32, i32* %12, align 8, !dbg !3524
  %14 = and i32 %13, 15, !dbg !3524
  %15 = icmp eq i32 %14, 0, !dbg !3525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3526
  br i1 %15, label %16, label %124, !dbg !3526

; <label>:16:                                     ; preds = %11, %7
  %17 = icmp ugt i64 %1, 536870912, !dbg !3527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3529
  br i1 %17, label %124, label %18, !dbg !3529

; <label>:18:                                     ; preds = %16
  %19 = icmp eq i64 %1, 0, !dbg !3530
  %20 = and i1 %19, %10, !dbg !3532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3533
  br i1 %20, label %126, label %21, !dbg !3532

; <label>:21:                                     ; preds = %18
  br i1 %10, label %22, label %29, !dbg !3534

; <label>:22:                                     ; preds = %21
  %23 = tail call i8* @sdsnewlen(i8* null, i64 %1) #9, !dbg !3535
  %24 = tail call %struct.redisObject* @createObject(i32 0, i8* %23) #9, !dbg !3536
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3538
  %26 = load %struct.redisDb*, %struct.redisDb** %25, align 8, !dbg !3538, !tbaa !1066
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3539
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !3539, !tbaa !1068
  tail call void @setKey(%struct.redisDb* %26, %struct.redisObject* %28, %struct.redisObject* %24) #9, !dbg !3540
  store %struct.redisObject* %24, %struct.redisObject** %8, align 8, !dbg !3541, !tbaa !1038
  tail call void @decrRefCount(%struct.redisObject* %24) #9, !dbg !3542
  br label %123, !dbg !3543

; <label>:29:                                     ; preds = %21
  %30 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3544
  %31 = load %struct.redisDb*, %struct.redisDb** %30, align 8, !dbg !3544, !tbaa !1066
  %32 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3545
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !3545, !tbaa !1068
  %34 = tail call %struct.redisObject* @dbUnshareStringValue(%struct.redisDb* %31, %struct.redisObject* %33, %struct.redisObject* nonnull %9) #9, !dbg !3546
  store %struct.redisObject* %34, %struct.redisObject** %8, align 8, !dbg !3547, !tbaa !1038
  %35 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %34, i64 0, i32 2, !dbg !3548
  %36 = load i8*, i8** %35, align 8, !dbg !3548, !tbaa !1046
  %37 = getelementptr inbounds i8, i8* %36, i64 -1, !dbg !3551
  %38 = load i8, i8* %37, align 1, !dbg !3551, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3553
  %39 = trunc i8 %38 to i3, !dbg !3553
  switch i3 %39, label %61 [
    i3 0, label %40
    i3 1, label %43
    i3 2, label %47
    i3 3, label %52
    i3 -4, label %57
  ], !dbg !3553

; <label>:40:                                     ; preds = %29
  %41 = lshr i8 %38, 3, !dbg !3554
  %42 = zext i8 %41 to i64, !dbg !3554
  br label %61, !dbg !3555

; <label>:43:                                     ; preds = %29
  %44 = getelementptr inbounds i8, i8* %36, i64 -3, !dbg !3556
  %45 = load i8, i8* %44, align 1, !dbg !3557, !tbaa !1137
  %46 = zext i8 %45 to i64, !dbg !3556
  br label %61, !dbg !3558

; <label>:47:                                     ; preds = %29
  %48 = getelementptr inbounds i8, i8* %36, i64 -5, !dbg !3559
  %49 = bitcast i8* %48 to i16*, !dbg !3560
  %50 = load i16, i16* %49, align 1, !dbg !3560, !tbaa !2186
  %51 = zext i16 %50 to i64, !dbg !3559
  br label %61, !dbg !3561

; <label>:52:                                     ; preds = %29
  %53 = getelementptr inbounds i8, i8* %36, i64 -9, !dbg !3562
  %54 = bitcast i8* %53 to i32*, !dbg !3563
  %55 = load i32, i32* %54, align 1, !dbg !3563, !tbaa !933
  %56 = zext i32 %55 to i64, !dbg !3562
  br label %61, !dbg !3564

; <label>:57:                                     ; preds = %29
  %58 = getelementptr inbounds i8, i8* %36, i64 -17, !dbg !3565
  %59 = bitcast i8* %58 to i64*, !dbg !3566
  %60 = load i64, i64* %59, align 1, !dbg !3566, !tbaa !2163
  br label %61, !dbg !3567

; <label>:61:                                     ; preds = %29, %40, %43, %47, %52, %57
  %62 = phi i64 [ %60, %57 ], [ %56, %52 ], [ %51, %47 ], [ %46, %43 ], [ %42, %40 ], [ 0, %29 ], !dbg !3568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3569
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3570
  %63 = icmp ult i64 %62, %1, !dbg !3572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3574
  br i1 %63, label %64, label %68, !dbg !3574

; <label>:64:                                     ; preds = %61
  %65 = tail call i8* @sdsgrowzero(i8* %36, i64 %1) #9, !dbg !3575
  %66 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3577, !tbaa !1038
  %67 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %66, i64 0, i32 2, !dbg !3578
  store i8* %65, i8** %67, align 8, !dbg !3579, !tbaa !1046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3580
  br label %123, !dbg !3580

; <label>:68:                                     ; preds = %61
  %69 = icmp ugt i64 %62, %1, !dbg !3581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3583
  br i1 %69, label %70, label %123, !dbg !3583

; <label>:70:                                     ; preds = %68
  %71 = add i64 %1, -1, !dbg !3584
  tail call void @sdsrange(i8* %36, i64 0, i64 %71) #9, !dbg !3586
  %72 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3587, !tbaa !1038
  %73 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %72, i64 0, i32 2, !dbg !3589
  %74 = load i8*, i8** %73, align 8, !dbg !3589, !tbaa !1046
  %75 = getelementptr inbounds i8, i8* %74, i64 -1, !dbg !3592
  %76 = load i8, i8* %75, align 1, !dbg !3592, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3594
  %77 = trunc i8 %76 to i3, !dbg !3594
  switch i3 %77, label %114 [
    i3 -4, label %106
    i3 1, label %78
    i3 2, label %86
    i3 3, label %96
  ], !dbg !3594

; <label>:78:                                     ; preds = %70
  %79 = getelementptr inbounds i8, i8* %74, i64 -3, !dbg !3595
  %80 = load i8, i8* %79, align 1, !dbg !3596, !tbaa !1137
  %81 = zext i8 %80 to i64, !dbg !3595
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3615
  %82 = getelementptr inbounds i8, i8* %74, i64 -2, !dbg !3617
  %83 = load i8, i8* %82, align 1, !dbg !3617, !tbaa !1137
  %84 = zext i8 %83 to i64, !dbg !3618
  %85 = sub nsw i64 %84, %81, !dbg !3619
  br label %115

; <label>:86:                                     ; preds = %70
  %87 = getelementptr inbounds i8, i8* %74, i64 -5, !dbg !3620
  %88 = bitcast i8* %87 to i16*, !dbg !3621
  %89 = load i16, i16* %88, align 1, !dbg !3621, !tbaa !2186
  %90 = zext i16 %89 to i64, !dbg !3620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3615
  %91 = getelementptr inbounds i8, i8* %74, i64 -3, !dbg !3624
  %92 = bitcast i8* %91 to i16*, !dbg !3624
  %93 = load i16, i16* %92, align 1, !dbg !3624, !tbaa !2186
  %94 = zext i16 %93 to i64, !dbg !3625
  %95 = sub nsw i64 %94, %90, !dbg !3626
  br label %115

; <label>:96:                                     ; preds = %70
  %97 = getelementptr inbounds i8, i8* %74, i64 -9, !dbg !3627
  %98 = bitcast i8* %97 to i32*, !dbg !3628
  %99 = load i32, i32* %98, align 1, !dbg !3628, !tbaa !933
  %100 = zext i32 %99 to i64, !dbg !3627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3615
  %101 = getelementptr inbounds i8, i8* %74, i64 -5, !dbg !3631
  %102 = bitcast i8* %101 to i32*, !dbg !3631
  %103 = load i32, i32* %102, align 1, !dbg !3631, !tbaa !933
  %104 = sub i32 %103, %99, !dbg !3632
  %105 = zext i32 %104 to i64, !dbg !3633
  br label %115

; <label>:106:                                    ; preds = %70
  %107 = getelementptr inbounds i8, i8* %74, i64 -17, !dbg !3634
  %108 = bitcast i8* %107 to i64*, !dbg !3635
  %109 = load i64, i64* %108, align 1, !dbg !3635, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3615
  %110 = getelementptr inbounds i8, i8* %74, i64 -9, !dbg !3638
  %111 = bitcast i8* %110 to i64*, !dbg !3638
  %112 = load i64, i64* %111, align 1, !dbg !3638, !tbaa !2163
  %113 = sub i64 %112, %109, !dbg !3639
  br label %115

; <label>:114:                                    ; preds = %70
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3642
  br label %123, !dbg !3642

; <label>:115:                                    ; preds = %78, %86, %96, %106
  %116 = phi i64 [ %109, %106 ], [ %100, %96 ], [ %90, %86 ], [ %81, %78 ]
  %117 = phi i64 [ %113, %106 ], [ %105, %96 ], [ %95, %86 ], [ %85, %78 ], !dbg !3643
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3641
  %118 = icmp ult i64 %116, %117, !dbg !3645
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3642
  br i1 %118, label %119, label %123, !dbg !3642

; <label>:119:                                    ; preds = %115
  %120 = tail call i8* @sdsRemoveFreeSpace(i8* nonnull %74) #9, !dbg !3646
  %121 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3647, !tbaa !1038
  %122 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %121, i64 0, i32 2, !dbg !3648
  store i8* %120, i8** %122, align 8, !dbg !3649, !tbaa !1046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3650
  br label %123, !dbg !3650

; <label>:123:                                    ; preds = %64, %115, %119, %68, %114, %22
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %124, !dbg !3651

; <label>:124:                                    ; preds = %16, %11, %2, %123
  %125 = phi i32 [ 0, %123 ], [ 1, %2 ], [ 1, %11 ], [ 1, %16 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3652
  br label %126, !dbg !3653

; <label>:126:                                    ; preds = %124, %18
  %127 = phi i32 [ 0, %18 ], [ %125, %124 ], !dbg !3652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3653
  ret i32 %127, !dbg !3653
}

; Function Attrs: noredzone
declare dso_local i8* @sdsgrowzero(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @sdsrange(i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @sdsRemoveFreeSpace(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ListPush(%struct.RedisModuleKey* nocapture, i32, %struct.redisObject*) #0 !dbg !3654 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3664
  %5 = load i32, i32* %4, align 8, !dbg !3664, !tbaa !1030
  %6 = and i32 %5, 2, !dbg !3666
  %7 = icmp eq i32 %6, 0, !dbg !3666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3667
  br i1 %7, label %32, label %8, !dbg !3667

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3668
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !3668, !tbaa !1038
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !3670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3671
  br i1 %11, label %17, label %12, !dbg !3671

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0, !dbg !3672
  %14 = load i32, i32* %13, align 8, !dbg !3672
  %15 = and i32 %14, 15, !dbg !3672
  %16 = icmp eq i32 %15, 1, !dbg !3673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3675
  br i1 %16, label %28, label %34, !dbg !3674

; <label>:17:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3676
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3682
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3683
  %18 = tail call %struct.redisObject* @createQuicklistObject() #9, !dbg !3684
  %19 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 2, !dbg !3686
  %20 = bitcast i8** %19 to %struct.quicklist**, !dbg !3686
  %21 = load %struct.quicklist*, %struct.quicklist** %20, align 8, !dbg !3686, !tbaa !1046
  %22 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !3687, !tbaa !1049
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !3688, !tbaa !1057
  tail call void @quicklistSetOptions(%struct.quicklist* %21, i32 %22, i32 %23) #9, !dbg !3689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3690
  %24 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3691
  %25 = load %struct.redisDb*, %struct.redisDb** %24, align 8, !dbg !3691, !tbaa !1066
  %26 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3692
  %27 = load %struct.redisObject*, %struct.redisObject** %26, align 8, !dbg !3692, !tbaa !1068
  tail call void @dbAdd(%struct.redisDb* %25, %struct.redisObject* %27, %struct.redisObject* %18) #9, !dbg !3693
  store %struct.redisObject* %18, %struct.redisObject** %9, align 8, !dbg !3694, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3697
  br label %28, !dbg !3697

; <label>:28:                                     ; preds = %12, %17
  %29 = phi %struct.redisObject* [ %10, %12 ], [ %18, %17 ], !dbg !3698
  %30 = icmp ne i32 %1, 0, !dbg !3699
  %31 = sext i1 %30 to i32, !dbg !3700
  tail call void @listTypePush(%struct.redisObject* %29, %struct.redisObject* %2, i32 %31) #9, !dbg !3701
  br label %32, !dbg !3702

; <label>:32:                                     ; preds = %3, %28
  %33 = phi i32 [ 0, %28 ], [ 1, %3 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3703
  br label %34, !dbg !3704

; <label>:34:                                     ; preds = %32, %12
  %35 = phi i32 [ 1, %12 ], [ %33, %32 ], !dbg !3703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3704
  ret i32 %35, !dbg !3704
}

; Function Attrs: noredzone
declare dso_local void @listTypePush(%struct.redisObject*, %struct.redisObject*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_ListPop(%struct.RedisModuleKey* nocapture, i32) #0 !dbg !3705 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3715
  %4 = load i32, i32* %3, align 8, !dbg !3715, !tbaa !1030
  %5 = and i32 %4, 2, !dbg !3717
  %6 = icmp eq i32 %5, 0, !dbg !3717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3718
  br i1 %6, label %60, label %7, !dbg !3718

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3719
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !3719, !tbaa !1038
  %10 = icmp eq %struct.redisObject* %9, null, !dbg !3720
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3721
  br i1 %10, label %60, label %11, !dbg !3721

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %9, i64 0, i32 0, !dbg !3722
  %13 = load i32, i32* %12, align 8, !dbg !3722
  %14 = and i32 %13, 15, !dbg !3722
  %15 = icmp eq i32 %14, 1, !dbg !3723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3724
  br i1 %15, label %16, label %60, !dbg !3724

; <label>:16:                                     ; preds = %11
  %17 = icmp ne i32 %1, 0, !dbg !3725
  %18 = sext i1 %17 to i32, !dbg !3726
  %19 = tail call %struct.redisObject* @listTypePop(%struct.redisObject* nonnull %9, i32 %18) #9, !dbg !3727
  %20 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %19) #9, !dbg !3729
  tail call void @decrRefCount(%struct.redisObject* %19) #9, !dbg !3731
  %21 = tail call i32 @moduleDelKeyIfEmpty(%struct.RedisModuleKey* nonnull %0) #10, !dbg !3732
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !3733
  %23 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %22, align 8, !dbg !3733, !tbaa !1906
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 7, !dbg !3738
  %25 = load i32, i32* %24, align 8, !dbg !3738, !tbaa !1179
  %26 = and i32 %25, 2, !dbg !3739
  %27 = icmp eq i32 %26, 0, !dbg !3739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3740
  br i1 %27, label %59, label %28, !dbg !3740

; <label>:28:                                     ; preds = %16
  %29 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 6, !dbg !3741
  %30 = load i32, i32* %29, align 4, !dbg !3741, !tbaa !1203
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 5, !dbg !3742
  %32 = load i32, i32* %31, align 8, !dbg !3742, !tbaa !1289
  %33 = icmp eq i32 %30, %32, !dbg !3743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3744
  br i1 %33, label %37, label %34, !dbg !3744

; <label>:34:                                     ; preds = %28
  %35 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 4
  %36 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %35, align 8, !dbg !3745, !tbaa !1207
  br label %51, !dbg !3744

; <label>:37:                                     ; preds = %28
  %38 = shl nsw i32 %30, 1, !dbg !3746
  store i32 %38, i32* %31, align 8, !dbg !3746, !tbaa !1289
  %39 = icmp slt i32 %30, 8, !dbg !3747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3748
  br i1 %39, label %40, label %41, !dbg !3748

; <label>:40:                                     ; preds = %37
  store i32 16, i32* %31, align 8, !dbg !3749, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3750
  br label %41, !dbg !3750

; <label>:41:                                     ; preds = %40, %37
  %42 = phi i32 [ 16, %40 ], [ %38, %37 ], !dbg !3751
  %43 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %23, i64 0, i32 4, !dbg !3752
  %44 = bitcast %struct.AutoMemEntry** %43 to i8**, !dbg !3752
  %45 = load i8*, i8** %44, align 8, !dbg !3752, !tbaa !1207
  %46 = sext i32 %42 to i64, !dbg !3753
  %47 = shl nsw i64 %46, 4, !dbg !3754
  %48 = tail call i8* @zrealloc(i8* %45, i64 %47) #9, !dbg !3755
  store i8* %48, i8** %44, align 8, !dbg !3756, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3757
  %49 = bitcast i8* %48 to %struct.AutoMemEntry*, !dbg !3757
  %50 = load i32, i32* %29, align 4, !dbg !3758, !tbaa !1203
  br label %51, !dbg !3757

; <label>:51:                                     ; preds = %41, %34
  %52 = phi i32 [ %30, %34 ], [ %50, %41 ], !dbg !3758
  %53 = phi %struct.AutoMemEntry* [ %36, %34 ], [ %49, %41 ], !dbg !3745
  %54 = sext i32 %52 to i64, !dbg !3759
  %55 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %53, i64 %54, i32 1, !dbg !3760
  store i32 1, i32* %55, align 8, !dbg !3761, !tbaa !1213
  %56 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %53, i64 %54, i32 0, !dbg !3762
  %57 = bitcast i8** %56 to %struct.redisObject**, !dbg !3763
  store %struct.redisObject* %20, %struct.redisObject** %57, align 8, !dbg !3763, !tbaa !1209
  %58 = add nsw i32 %52, 1, !dbg !3764
  store i32 %58, i32* %29, align 4, !dbg !3764, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3765
  br label %59, !dbg !3765

; <label>:59:                                     ; preds = %16, %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3765
  br label %60

; <label>:60:                                     ; preds = %7, %2, %11, %59
  %61 = phi %struct.redisObject* [ %20, %59 ], [ null, %11 ], [ null, %2 ], [ null, %7 ], !dbg !3766
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3767
  ret %struct.redisObject* %61, !dbg !3767
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @listTypePop(%struct.redisObject*, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetAddFlagsToCoreFlags(i32) local_unnamed_addr #0 !dbg !3768 {
  %2 = and i32 %0, 1, !dbg !3776
  %3 = icmp eq i32 %2, 0, !dbg !3776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3778
  br i1 %3, label %5, label %4, !dbg !3778

; <label>:4:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3779
  br label %5, !dbg !3779

; <label>:5:                                      ; preds = %1, %4
  %6 = phi i32 [ 4, %4 ], [ 0, %1 ], !dbg !3780
  %7 = and i32 %0, 2, !dbg !3781
  %8 = icmp eq i32 %7, 0, !dbg !3781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3783
  br i1 %8, label %11, label %9, !dbg !3783

; <label>:9:                                      ; preds = %5
  %10 = or i32 %6, 2, !dbg !3784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3785
  br label %11, !dbg !3785

; <label>:11:                                     ; preds = %5, %9
  %12 = phi i32 [ %10, %9 ], [ %6, %5 ], !dbg !3786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3787
  ret i32 %12, !dbg !3787
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetAddFlagsFromCoreFlags(i32) local_unnamed_addr #0 !dbg !3788 {
  %2 = and i32 %0, 32, !dbg !3794
  %3 = icmp eq i32 %2, 0, !dbg !3794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3796
  br i1 %3, label %5, label %4, !dbg !3796

; <label>:4:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3797
  br label %5, !dbg !3797

; <label>:5:                                      ; preds = %1, %4
  %6 = phi i32 [ 4, %4 ], [ 0, %1 ], !dbg !3798
  %7 = and i32 %0, 64, !dbg !3799
  %8 = icmp eq i32 %7, 0, !dbg !3799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3801
  br i1 %8, label %11, label %9, !dbg !3801

; <label>:9:                                      ; preds = %5
  %10 = or i32 %6, 8, !dbg !3802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3803
  br label %11, !dbg !3803

; <label>:11:                                     ; preds = %5, %9
  %12 = phi i32 [ %10, %9 ], [ %6, %5 ], !dbg !3804
  %13 = and i32 %0, 8, !dbg !3805
  %14 = icmp eq i32 %13, 0, !dbg !3805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3807
  br i1 %14, label %17, label %15, !dbg !3807

; <label>:15:                                     ; preds = %11
  %16 = or i32 %12, 16, !dbg !3808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3809
  br label %17, !dbg !3809

; <label>:17:                                     ; preds = %11, %15
  %18 = phi i32 [ %16, %15 ], [ %12, %11 ], !dbg !3810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3811
  ret i32 %18, !dbg !3811
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetAdd(%struct.RedisModuleKey* nocapture, double, %struct.redisObject* nocapture readonly, i32*) #0 !dbg !3812 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*, !dbg !3825
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5, !dbg !3825
  store i32 0, i32* %5, align 4, !dbg !3826, !tbaa !933
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3827
  %8 = load i32, i32* %7, align 8, !dbg !3827, !tbaa !1030
  %9 = and i32 %8, 2, !dbg !3829
  %10 = icmp eq i32 %9, 0, !dbg !3829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3830
  br i1 %10, label %69, label %11, !dbg !3830

; <label>:11:                                     ; preds = %4
  %12 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3831
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !3831, !tbaa !1038
  %14 = icmp eq %struct.redisObject* %13, null, !dbg !3833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3834
  br i1 %14, label %20, label %15, !dbg !3834

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %13, i64 0, i32 0, !dbg !3835
  %17 = load i32, i32* %16, align 8, !dbg !3835
  %18 = and i32 %17, 15, !dbg !3835
  %19 = icmp eq i32 %18, 3, !dbg !3836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3838
  br i1 %19, label %26, label %71, !dbg !3837

; <label>:20:                                     ; preds = %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3846
  %21 = tail call %struct.redisObject* @createZsetZiplistObject() #9, !dbg !3847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3849
  %22 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3850
  %23 = load %struct.redisDb*, %struct.redisDb** %22, align 8, !dbg !3850, !tbaa !1066
  %24 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3851
  %25 = load %struct.redisObject*, %struct.redisObject** %24, align 8, !dbg !3851, !tbaa !1068
  tail call void @dbAdd(%struct.redisDb* %23, %struct.redisObject* %25, %struct.redisObject* %21) #9, !dbg !3852
  store %struct.redisObject* %21, %struct.redisObject** %12, align 8, !dbg !3853, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3854
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3856
  br label %26, !dbg !3856

; <label>:26:                                     ; preds = %15, %20
  %27 = phi %struct.redisObject* [ %13, %15 ], [ %21, %20 ]
  %28 = icmp ne i32* %3, null, !dbg !3857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3859
  br i1 %28, label %29, label %42, !dbg !3859

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* %3, align 4, !dbg !3860, !tbaa !933
  %31 = and i32 %30, 1, !dbg !3864
  %32 = icmp eq i32 %31, 0, !dbg !3864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3865
  br i1 %32, label %34, label %33, !dbg !3865

; <label>:33:                                     ; preds = %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3866
  br label %34, !dbg !3866

; <label>:34:                                     ; preds = %33, %29
  %35 = phi i32 [ 4, %33 ], [ 0, %29 ], !dbg !3867
  %36 = and i32 %30, 2, !dbg !3868
  %37 = icmp eq i32 %36, 0, !dbg !3868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3869
  br i1 %37, label %40, label %38, !dbg !3869

; <label>:38:                                     ; preds = %34
  %39 = or i32 %35, 2, !dbg !3870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3871
  br label %40, !dbg !3871

; <label>:40:                                     ; preds = %34, %38
  %41 = phi i32 [ %39, %38 ], [ %35, %34 ], !dbg !3872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3873
  store i32 %41, i32* %5, align 4, !dbg !3874, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3875
  br label %42, !dbg !3875

; <label>:42:                                     ; preds = %40, %26
  %43 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !3876
  %44 = load i8*, i8** %43, align 8, !dbg !3876, !tbaa !1046
  %45 = call i32 @zsetAdd(%struct.redisObject* %27, double %1, i8* %44, i32* nonnull %5, double* null) #9, !dbg !3878
  %46 = icmp eq i32 %45, 0, !dbg !3879
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3881
  br i1 %46, label %47, label %49, !dbg !3880

; <label>:47:                                     ; preds = %42
  br i1 %28, label %48, label %69, !dbg !3882

; <label>:48:                                     ; preds = %47
  store i32 0, i32* %3, align 4, !dbg !3884, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3886
  br label %69, !dbg !3886

; <label>:49:                                     ; preds = %42
  br i1 %28, label %50, label %69, !dbg !3887

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* %5, align 4, !dbg !3888, !tbaa !933
  %52 = and i32 %51, 32, !dbg !3893
  %53 = icmp eq i32 %52, 0, !dbg !3893
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3894
  br i1 %53, label %55, label %54, !dbg !3894

; <label>:54:                                     ; preds = %50
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3895
  br label %55, !dbg !3895

; <label>:55:                                     ; preds = %54, %50
  %56 = phi i32 [ 4, %54 ], [ 0, %50 ], !dbg !3896
  %57 = and i32 %51, 64, !dbg !3897
  %58 = icmp eq i32 %57, 0, !dbg !3897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3898
  br i1 %58, label %61, label %59, !dbg !3898

; <label>:59:                                     ; preds = %55
  %60 = or i32 %56, 8, !dbg !3899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3900
  br label %61, !dbg !3900

; <label>:61:                                     ; preds = %59, %55
  %62 = phi i32 [ %60, %59 ], [ %56, %55 ], !dbg !3901
  %63 = and i32 %51, 8, !dbg !3902
  %64 = icmp eq i32 %63, 0, !dbg !3902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3903
  br i1 %64, label %67, label %65, !dbg !3903

; <label>:65:                                     ; preds = %61
  %66 = or i32 %62, 16, !dbg !3904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3905
  br label %67, !dbg !3905

; <label>:67:                                     ; preds = %61, %65
  %68 = phi i32 [ %66, %65 ], [ %62, %61 ], !dbg !3906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3907
  store i32 %68, i32* %3, align 4, !dbg !3908, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3909
  br label %69, !dbg !3909

; <label>:69:                                     ; preds = %49, %67, %47, %48, %4
  %70 = phi i32 [ 1, %4 ], [ 1, %48 ], [ 1, %47 ], [ 0, %67 ], [ 0, %49 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3910
  br label %71, !dbg !3911

; <label>:71:                                     ; preds = %69, %15
  %72 = phi i32 [ 1, %15 ], [ %70, %69 ], !dbg !3910
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5, !dbg !3911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3911
  ret i32 %72, !dbg !3911
}

; Function Attrs: noredzone
declare dso_local i32 @zsetAdd(%struct.redisObject*, double, i8*, i32*, double*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetIncrby(%struct.RedisModuleKey* nocapture, double, %struct.redisObject* nocapture readonly, i32*, double*) #0 !dbg !3912 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*, !dbg !3927
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5, !dbg !3927
  store i32 0, i32* %6, align 4, !dbg !3928, !tbaa !933
  %8 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !3929
  %9 = load i32, i32* %8, align 8, !dbg !3929, !tbaa !1030
  %10 = and i32 %9, 2, !dbg !3931
  %11 = icmp eq i32 %10, 0, !dbg !3931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3932
  br i1 %11, label %78, label %12, !dbg !3932

; <label>:12:                                     ; preds = %5
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !3933
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !3933, !tbaa !1038
  %15 = icmp eq %struct.redisObject* %14, null, !dbg !3935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3936
  br i1 %15, label %21, label %16, !dbg !3936

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %14, i64 0, i32 0, !dbg !3937
  %18 = load i32, i32* %17, align 8, !dbg !3937
  %19 = and i32 %18, 15, !dbg !3937
  %20 = icmp eq i32 %19, 3, !dbg !3938
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3939
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3940
  br i1 %20, label %27, label %80, !dbg !3939

; <label>:21:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3948
  %22 = tail call %struct.redisObject* @createZsetZiplistObject() #9, !dbg !3949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3951
  %23 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !3952
  %24 = load %struct.redisDb*, %struct.redisDb** %23, align 8, !dbg !3952, !tbaa !1066
  %25 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !3953
  %26 = load %struct.redisObject*, %struct.redisObject** %25, align 8, !dbg !3953, !tbaa !1068
  tail call void @dbAdd(%struct.redisDb* %24, %struct.redisObject* %26, %struct.redisObject* %22) #9, !dbg !3954
  store %struct.redisObject* %22, %struct.redisObject** %13, align 8, !dbg !3955, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3958
  br label %27, !dbg !3958

; <label>:27:                                     ; preds = %16, %21
  %28 = phi %struct.redisObject* [ %14, %16 ], [ %22, %21 ]
  %29 = icmp ne i32* %3, null, !dbg !3959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3961
  br i1 %29, label %30, label %43, !dbg !3961

; <label>:30:                                     ; preds = %27
  %31 = load i32, i32* %3, align 4, !dbg !3962, !tbaa !933
  %32 = and i32 %31, 1, !dbg !3966
  %33 = icmp eq i32 %32, 0, !dbg !3966
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3967
  br i1 %33, label %35, label %34, !dbg !3967

; <label>:34:                                     ; preds = %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3968
  br label %35, !dbg !3968

; <label>:35:                                     ; preds = %34, %30
  %36 = phi i32 [ 4, %34 ], [ 0, %30 ], !dbg !3969
  %37 = and i32 %31, 2, !dbg !3970
  %38 = icmp eq i32 %37, 0, !dbg !3970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3971
  br i1 %38, label %41, label %39, !dbg !3971

; <label>:39:                                     ; preds = %35
  %40 = or i32 %36, 2, !dbg !3972
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3973
  br label %41, !dbg !3973

; <label>:41:                                     ; preds = %35, %39
  %42 = phi i32 [ %40, %39 ], [ %36, %35 ], !dbg !3974
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3975
  store i32 %42, i32* %6, align 4, !dbg !3976, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3977
  br label %43, !dbg !3977

; <label>:43:                                     ; preds = %41, %27
  %44 = phi i32 [ %42, %41 ], [ 0, %27 ], !dbg !3978
  %45 = or i32 %44, 1, !dbg !3978
  store i32 %45, i32* %6, align 4, !dbg !3978, !tbaa !933
  %46 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !3979
  %47 = load i8*, i8** %46, align 8, !dbg !3979, !tbaa !1046
  %48 = call i32 @zsetAdd(%struct.redisObject* %28, double %1, i8* %47, i32* nonnull %6, double* %4) #9, !dbg !3981
  %49 = icmp eq i32 %48, 0, !dbg !3982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3983
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3984
  br i1 %49, label %50, label %52, !dbg !3983

; <label>:50:                                     ; preds = %43
  br i1 %29, label %51, label %78, !dbg !3986

; <label>:51:                                     ; preds = %50
  store i32 0, i32* %3, align 4, !dbg !3988, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3990
  br label %78, !dbg !3990

; <label>:52:                                     ; preds = %43
  br i1 %29, label %53, label %77, !dbg !3991

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* %3, align 4, !dbg !3992, !tbaa !933
  %55 = and i32 %54, 16, !dbg !3993
  %56 = icmp eq i32 %55, 0, !dbg !3993
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3994
  br i1 %56, label %58, label %57, !dbg !3994

; <label>:57:                                     ; preds = %53
  store i32 0, i32* %3, align 4, !dbg !3995, !tbaa !933
  br label %78, !dbg !3997

; <label>:58:                                     ; preds = %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3998
  %59 = load i32, i32* %6, align 4, !dbg !3999, !tbaa !933
  %60 = and i32 %59, 32, !dbg !4004
  %61 = icmp eq i32 %60, 0, !dbg !4004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4005
  br i1 %61, label %63, label %62, !dbg !4005

; <label>:62:                                     ; preds = %58
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4006
  br label %63, !dbg !4006

; <label>:63:                                     ; preds = %62, %58
  %64 = phi i32 [ 4, %62 ], [ 0, %58 ], !dbg !4007
  %65 = and i32 %59, 64, !dbg !4008
  %66 = icmp eq i32 %65, 0, !dbg !4008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4009
  br i1 %66, label %69, label %67, !dbg !4009

; <label>:67:                                     ; preds = %63
  %68 = or i32 %64, 8, !dbg !4010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4011
  br label %69, !dbg !4011

; <label>:69:                                     ; preds = %67, %63
  %70 = phi i32 [ %68, %67 ], [ %64, %63 ], !dbg !4012
  %71 = and i32 %59, 8, !dbg !4013
  %72 = icmp eq i32 %71, 0, !dbg !4013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4014
  br i1 %72, label %75, label %73, !dbg !4014

; <label>:73:                                     ; preds = %69
  %74 = or i32 %70, 16, !dbg !4015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4016
  br label %75, !dbg !4016

; <label>:75:                                     ; preds = %69, %73
  %76 = phi i32 [ %74, %73 ], [ %70, %69 ], !dbg !4017
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4018
  store i32 %76, i32* %3, align 4, !dbg !4019, !tbaa !933
  br label %77, !dbg !4020

; <label>:77:                                     ; preds = %52, %75
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4021
  br label %78, !dbg !4022

; <label>:78:                                     ; preds = %50, %51, %5, %57, %77
  %79 = phi i32 [ 0, %77 ], [ 1, %57 ], [ 1, %5 ], [ 1, %51 ], [ 1, %50 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4023
  br label %80, !dbg !4024

; <label>:80:                                     ; preds = %78, %16
  %81 = phi i32 [ 1, %16 ], [ %79, %78 ], !dbg !4023
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5, !dbg !4024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4024
  ret i32 %81, !dbg !4024
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRem(%struct.RedisModuleKey* nocapture readonly, %struct.redisObject* nocapture readonly, i32*) #0 !dbg !4025 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !4035
  %5 = load i32, i32* %4, align 8, !dbg !4035, !tbaa !1030
  %6 = and i32 %5, 2, !dbg !4037
  %7 = icmp eq i32 %6, 0, !dbg !4037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4038
  br i1 %7, label %29, label %8, !dbg !4038

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4039
  %10 = load %struct.redisObject*, %struct.redisObject** %9, align 8, !dbg !4039, !tbaa !1038
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !4041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4042
  br i1 %11, label %12, label %13, !dbg !4042

; <label>:12:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4043
  br label %26, !dbg !4043

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %10, i64 0, i32 0, !dbg !4045
  %15 = load i32, i32* %14, align 8, !dbg !4045
  %16 = and i32 %15, 15, !dbg !4045
  %17 = icmp eq i32 %16, 3, !dbg !4046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4048
  br i1 %17, label %18, label %31, !dbg !4047

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !4049
  %20 = load i8*, i8** %19, align 8, !dbg !4049, !tbaa !1046
  %21 = tail call i32 @zsetDel(%struct.redisObject* nonnull %10, i8* %20) #9, !dbg !4050
  %22 = icmp eq i32 %21, 0, !dbg !4050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4051
  br i1 %22, label %26, label %23, !dbg !4051

; <label>:23:                                     ; preds = %18
  %24 = icmp eq i32* %2, null, !dbg !4052
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4055
  br i1 %24, label %29, label %25, !dbg !4055

; <label>:25:                                     ; preds = %23
  store i32 1, i32* %2, align 4, !dbg !4056, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4057
  br label %29, !dbg !4057

; <label>:26:                                     ; preds = %12, %18
  %27 = icmp eq i32* %2, null, !dbg !4058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4061
  br i1 %27, label %29, label %28, !dbg !4061

; <label>:28:                                     ; preds = %26
  store i32 0, i32* %2, align 4, !dbg !4062, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4063
  br label %29, !dbg !4063

; <label>:29:                                     ; preds = %25, %28, %26, %23, %3
  %30 = phi i32 [ 1, %3 ], [ 0, %23 ], [ 0, %26 ], [ 0, %28 ], [ 0, %25 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4064
  br label %31, !dbg !4065

; <label>:31:                                     ; preds = %29, %13
  %32 = phi i32 [ 1, %13 ], [ %30, %29 ], !dbg !4064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4065
  ret i32 %32, !dbg !4065
}

; Function Attrs: noredzone
declare dso_local i32 @zsetDel(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetScore(%struct.RedisModuleKey* nocapture readonly, %struct.redisObject* nocapture readonly, double*) #0 !dbg !4066 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4076
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !4076, !tbaa !1038
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !4078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4079
  br i1 %6, label %7, label %8, !dbg !4079

; <label>:7:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4080
  br label %20, !dbg !4080

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !4081
  %10 = load i32, i32* %9, align 8, !dbg !4081
  %11 = and i32 %10, 15, !dbg !4081
  %12 = icmp eq i32 %11, 3, !dbg !4083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4084
  br i1 %12, label %14, label %13, !dbg !4084

; <label>:13:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4085
  br label %20, !dbg !4085

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !4086
  %16 = load i8*, i8** %15, align 8, !dbg !4086, !tbaa !1046
  %17 = tail call i32 @zsetScore(%struct.redisObject* nonnull %5, i8* %16, double* %2) #9, !dbg !4088
  %18 = icmp eq i32 %17, -1, !dbg !4089
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4091
  %19 = zext i1 %18 to i32, !dbg !4092
  br label %20, !dbg !4092

; <label>:20:                                     ; preds = %14, %13, %7
  %21 = phi i32 [ 1, %7 ], [ 1, %13 ], [ %19, %14 ], !dbg !4091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4093
  ret i32 %21, !dbg !4093
}

; Function Attrs: noredzone
declare dso_local i32 @zsetScore(%struct.redisObject*, i8*, double*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @zslFreeLexRange(%struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRangeEndReached(%struct.RedisModuleKey* nocapture readonly) #0 !dbg !4094 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4098
  %3 = load i32, i32* %2, align 8, !dbg !4098, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4099
  ret i32 %3, !dbg !4099
}

; Function Attrs: noredzone nounwind
define dso_local i32 @zsetInitScoreRange(%struct.RedisModuleKey*, double, double, i32, i32, i32) local_unnamed_addr #0 !dbg !4100 {
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4149
  %8 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !4149, !tbaa !1038
  %9 = icmp eq %struct.redisObject* %8, null, !dbg !4151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4152
  br i1 %9, label %69, label %10, !dbg !4152

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %8, i64 0, i32 0, !dbg !4153
  %12 = load i32, i32* %11, align 8, !dbg !4153
  %13 = and i32 %12, 15, !dbg !4153
  %14 = icmp eq i32 %13, 3, !dbg !4154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4155
  br i1 %14, label %15, label %69, !dbg !4155

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4158
  %17 = load i32, i32* %16, align 4, !dbg !4158, !tbaa !1884
  %18 = icmp eq i32 %17, 1, !dbg !4159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4160
  br i1 %18, label %19, label %23, !dbg !4160

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4161
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %20) #9, !dbg !4162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4162
  %21 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !4163, !tbaa !1038
  %22 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %21, i64 0, i32 0, !dbg !4164
  br label %23, !dbg !4162

; <label>:23:                                     ; preds = %15, %19
  %24 = phi i32* [ %11, %15 ], [ %22, %19 ], !dbg !4164
  %25 = phi %struct.redisObject* [ %8, %15 ], [ %21, %19 ], !dbg !4163
  %26 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4167
  store i8* null, i8** %26, align 8, !dbg !4168, !tbaa !1897
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4171
  store i32 2, i32* %16, align 4, !dbg !4172, !tbaa !1884
  store i32 0, i32* %27, align 8, !dbg !4173, !tbaa !1900
  %28 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4174
  %29 = getelementptr inbounds %struct.zrangespec, %struct.zrangespec* %28, i64 0, i32 0, !dbg !4176
  store double %1, double* %29, align 8, !dbg !4177, !tbaa !4178
  %30 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, i32 1, !dbg !4179
  store double %2, double* %30, align 8, !dbg !4180, !tbaa !4181
  %31 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, i32 2, !dbg !4182
  store i32 %3, i32* %31, align 8, !dbg !4183, !tbaa !4184
  %32 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, i32 3, !dbg !4185
  store i32 %4, i32* %32, align 4, !dbg !4186, !tbaa !4187
  %33 = load i32, i32* %24, align 8, !dbg !4164
  %34 = lshr i32 %33, 4, !dbg !4164
  %35 = and i32 %34, 15, !dbg !4164
  %36 = icmp eq i32 %35, 5, !dbg !4188
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4189
  br i1 %36, label %37, label %47, !dbg !4189

; <label>:37:                                     ; preds = %23
  %38 = icmp eq i32 %5, 0, !dbg !4190
  %39 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4192
  %40 = load i8*, i8** %39, align 8, !dbg !4192, !tbaa !1046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4190
  br i1 %38, label %43, label %41, !dbg !4190

; <label>:41:                                     ; preds = %37
  %42 = tail call i8* @zzlFirstInRange(i8* %40, %struct.zrangespec* nonnull %28) #9, !dbg !4193
  br label %45, !dbg !4190

; <label>:43:                                     ; preds = %37
  %44 = tail call i8* @zzlLastInRange(i8* %40, %struct.zrangespec* nonnull %28) #9, !dbg !4194
  br label %45, !dbg !4190

; <label>:45:                                     ; preds = %43, %41
  %46 = phi i8* [ %42, %41 ], [ %44, %43 ], !dbg !4190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4190
  store i8* %46, i8** %26, align 8, !dbg !4195, !tbaa !1897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4196
  br label %65, !dbg !4196

; <label>:47:                                     ; preds = %23
  %48 = icmp eq i32 %35, 7, !dbg !4197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4198
  br i1 %48, label %49, label %64, !dbg !4198

; <label>:49:                                     ; preds = %47
  %50 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4199
  %51 = bitcast i8** %50 to %struct.zset**, !dbg !4199
  %52 = load %struct.zset*, %struct.zset** %51, align 8, !dbg !4199, !tbaa !1046
  %53 = getelementptr inbounds %struct.zset, %struct.zset* %52, i64 0, i32 1, !dbg !4201
  %54 = load %struct.zskiplist*, %struct.zskiplist** %53, align 8, !dbg !4201, !tbaa !4202
  %55 = icmp eq i32 %5, 0, !dbg !4205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4205
  br i1 %55, label %58, label %56, !dbg !4205

; <label>:56:                                     ; preds = %49
  %57 = tail call %struct.zskiplistNode* @zslFirstInRange(%struct.zskiplist* %54, %struct.zrangespec* nonnull %28) #9, !dbg !4206
  br label %60, !dbg !4205

; <label>:58:                                     ; preds = %49
  %59 = tail call %struct.zskiplistNode* @zslLastInRange(%struct.zskiplist* %54, %struct.zrangespec* nonnull %28) #9, !dbg !4207
  br label %60, !dbg !4205

; <label>:60:                                     ; preds = %58, %56
  %61 = phi %struct.zskiplistNode* [ %57, %56 ], [ %59, %58 ], !dbg !4205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4205
  %62 = bitcast i8** %26 to %struct.zskiplistNode**, !dbg !4208
  store %struct.zskiplistNode* %61, %struct.zskiplistNode** %62, align 8, !dbg !4208, !tbaa !1897
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %63 = bitcast %struct.zskiplistNode* %61 to i8*
  br label %65

; <label>:64:                                     ; preds = %47
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2007, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4209
  tail call void @_exit(i32 1) #12, !dbg !4209
  unreachable

; <label>:65:                                     ; preds = %60, %45
  %66 = phi i8* [ %63, %60 ], [ %46, %45 ], !dbg !4211
  %67 = icmp eq i8* %66, null, !dbg !4213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4214
  br i1 %67, label %68, label %69, !dbg !4214

; <label>:68:                                     ; preds = %65
  store i32 1, i32* %27, align 8, !dbg !4215, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4216
  br label %69, !dbg !4216

; <label>:69:                                     ; preds = %65, %68, %6, %10
  %70 = phi i32 [ 1, %10 ], [ 1, %6 ], [ 0, %68 ], [ 0, %65 ], !dbg !4217
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4218
  ret i32 %70, !dbg !4218
}

; Function Attrs: noredzone
declare dso_local i8* @zzlFirstInRange(i8*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @zzlLastInRange(i8*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslFirstInRange(%struct.zskiplist*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslLastInRange(%struct.zskiplist*, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #6

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetFirstInScoreRange(%struct.RedisModuleKey*, double, double, i32, i32) #0 !dbg !4219 {
  %6 = tail call i32 @zsetInitScoreRange(%struct.RedisModuleKey* %0, double %1, double %2, i32 %3, i32 %4, i32 1) #10, !dbg !4233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4234
  ret i32 %6, !dbg !4234
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetLastInScoreRange(%struct.RedisModuleKey*, double, double, i32, i32) #0 !dbg !4235 {
  %6 = tail call i32 @zsetInitScoreRange(%struct.RedisModuleKey* %0, double %1, double %2, i32 %3, i32 %4, i32 0) #10, !dbg !4247
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4248
  ret i32 %6, !dbg !4248
}

; Function Attrs: noredzone nounwind
define dso_local i32 @zsetInitLexRange(%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*, i32) local_unnamed_addr #0 !dbg !4249 {
  %5 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4268
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4268, !tbaa !1038
  %7 = icmp eq %struct.redisObject* %6, null, !dbg !4270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4271
  br i1 %7, label %65, label %8, !dbg !4271

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 0, !dbg !4272
  %10 = load i32, i32* %9, align 8, !dbg !4272
  %11 = and i32 %10, 15, !dbg !4272
  %12 = icmp eq i32 %11, 3, !dbg !4273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4274
  br i1 %12, label %13, label %65, !dbg !4274

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4277
  %15 = load i32, i32* %14, align 4, !dbg !4277, !tbaa !1884
  %16 = icmp eq i32 %15, 1, !dbg !4278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4279
  %17 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4280
  br i1 %16, label %18, label %19, !dbg !4279

; <label>:18:                                     ; preds = %13
  tail call void @zslFreeLexRange(%struct.zlexrangespec* nonnull %17) #9, !dbg !4281
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4281
  br label %19, !dbg !4281

; <label>:19:                                     ; preds = %13, %18
  store i32 0, i32* %14, align 4, !dbg !4284, !tbaa !1884
  %20 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4285
  store i8* null, i8** %20, align 8, !dbg !4286, !tbaa !1897
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4289
  store i32 0, i32* %21, align 8, !dbg !4290, !tbaa !1900
  %22 = tail call i32 @zslParseLexRange(%struct.redisObject* %1, %struct.redisObject* %2, %struct.zlexrangespec* nonnull %17) #9, !dbg !4292
  %23 = icmp eq i32 %22, -1, !dbg !4294
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4295
  br i1 %23, label %63, label %24, !dbg !4295

; <label>:24:                                     ; preds = %19
  store i32 1, i32* %14, align 4, !dbg !4296, !tbaa !1884
  %25 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4297, !tbaa !1038
  %26 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 0, !dbg !4298
  %27 = load i32, i32* %26, align 8, !dbg !4298
  %28 = lshr i32 %27, 4, !dbg !4298
  %29 = and i32 %28, 15, !dbg !4298
  %30 = icmp eq i32 %29, 5, !dbg !4299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4300
  br i1 %30, label %31, label %41, !dbg !4300

; <label>:31:                                     ; preds = %24
  %32 = icmp eq i32 %3, 0, !dbg !4301
  %33 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4303
  %34 = load i8*, i8** %33, align 8, !dbg !4303, !tbaa !1046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4301
  br i1 %32, label %37, label %35, !dbg !4301

; <label>:35:                                     ; preds = %31
  %36 = tail call i8* @zzlFirstInLexRange(i8* %34, %struct.zlexrangespec* nonnull %17) #9, !dbg !4304
  br label %39, !dbg !4301

; <label>:37:                                     ; preds = %31
  %38 = tail call i8* @zzlLastInLexRange(i8* %34, %struct.zlexrangespec* nonnull %17) #9, !dbg !4305
  br label %39, !dbg !4301

; <label>:39:                                     ; preds = %37, %35
  %40 = phi i8* [ %36, %35 ], [ %38, %37 ], !dbg !4301
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4301
  store i8* %40, i8** %20, align 8, !dbg !4306, !tbaa !1897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4307
  br label %59, !dbg !4307

; <label>:41:                                     ; preds = %24
  %42 = icmp eq i32 %29, 7, !dbg !4308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4309
  br i1 %42, label %43, label %58, !dbg !4309

; <label>:43:                                     ; preds = %41
  %44 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %25, i64 0, i32 2, !dbg !4310
  %45 = bitcast i8** %44 to %struct.zset**, !dbg !4310
  %46 = load %struct.zset*, %struct.zset** %45, align 8, !dbg !4310, !tbaa !1046
  %47 = getelementptr inbounds %struct.zset, %struct.zset* %46, i64 0, i32 1, !dbg !4312
  %48 = load %struct.zskiplist*, %struct.zskiplist** %47, align 8, !dbg !4312, !tbaa !4202
  %49 = icmp eq i32 %3, 0, !dbg !4314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4314
  br i1 %49, label %52, label %50, !dbg !4314

; <label>:50:                                     ; preds = %43
  %51 = tail call %struct.zskiplistNode* @zslFirstInLexRange(%struct.zskiplist* %48, %struct.zlexrangespec* nonnull %17) #9, !dbg !4315
  br label %54, !dbg !4314

; <label>:52:                                     ; preds = %43
  %53 = tail call %struct.zskiplistNode* @zslLastInLexRange(%struct.zskiplist* %48, %struct.zlexrangespec* nonnull %17) #9, !dbg !4316
  br label %54, !dbg !4314

; <label>:54:                                     ; preds = %52, %50
  %55 = phi %struct.zskiplistNode* [ %51, %50 ], [ %53, %52 ], !dbg !4314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4314
  %56 = bitcast i8** %20 to %struct.zskiplistNode**, !dbg !4317
  store %struct.zskiplistNode* %55, %struct.zskiplistNode** %56, align 8, !dbg !4317, !tbaa !1897
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %57 = bitcast %struct.zskiplistNode* %55 to i8*
  br label %59

; <label>:58:                                     ; preds = %41
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2071, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4318
  tail call void @_exit(i32 1) #12, !dbg !4318
  unreachable

; <label>:59:                                     ; preds = %54, %39
  %60 = phi i8* [ %57, %54 ], [ %40, %39 ], !dbg !4320
  %61 = icmp eq i8* %60, null, !dbg !4322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4323
  br i1 %61, label %62, label %63, !dbg !4323

; <label>:62:                                     ; preds = %59
  store i32 1, i32* %21, align 8, !dbg !4324, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4325
  br label %63, !dbg !4325

; <label>:63:                                     ; preds = %59, %62, %19
  %64 = phi i32 [ 1, %19 ], [ 0, %62 ], [ 0, %59 ], !dbg !4280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4326
  br label %65

; <label>:65:                                     ; preds = %4, %8, %63
  %66 = phi i32 [ %64, %63 ], [ 1, %8 ], [ 1, %4 ], !dbg !4326
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4327
  ret i32 %66, !dbg !4327
}

; Function Attrs: noredzone
declare dso_local i32 @zslParseLexRange(%struct.redisObject*, %struct.redisObject*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @zzlFirstInLexRange(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @zzlLastInLexRange(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslFirstInLexRange(%struct.zskiplist*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslLastInLexRange(%struct.zskiplist*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetFirstInLexRange(%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*) #0 !dbg !4328 {
  %4 = tail call i32 @zsetInitLexRange(%struct.RedisModuleKey* %0, %struct.redisObject* %1, %struct.redisObject* %2, i32 1) #10, !dbg !4338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4339
  ret i32 %4, !dbg !4339
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetLastInLexRange(%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*) #0 !dbg !4340 {
  %4 = tail call i32 @zsetInitLexRange(%struct.RedisModuleKey* %0, %struct.redisObject* %1, %struct.redisObject* %2, i32 0) #10, !dbg !4348
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4349
  ret i32 %4, !dbg !4349
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_ZsetRangeCurrentElement(%struct.RedisModuleKey* nocapture readonly, double*) #0 !dbg !4350 {
  %3 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4369
  %4 = load i8*, i8** %3, align 8, !dbg !4369, !tbaa !1897
  %5 = icmp eq i8* %4, null, !dbg !4371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4372
  br i1 %5, label %105, label %6, !dbg !4372

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4373
  %8 = bitcast %struct.redisObject** %7 to i32**, !dbg !4373
  %9 = load i32*, i32** %8, align 8, !dbg !4373, !tbaa !1038
  %10 = load i32, i32* %9, align 8, !dbg !4374
  %11 = lshr i32 %10, 4, !dbg !4374
  %12 = and i32 %11, 15, !dbg !4374
  %13 = icmp eq i32 %12, 5, !dbg !4375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4376
  br i1 %13, label %14, label %25, !dbg !4376

; <label>:14:                                     ; preds = %6
  %15 = tail call i8* @ziplistGetObject(i8* nonnull %4) #9, !dbg !4378
  %16 = icmp eq double* %1, null, !dbg !4380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4382
  br i1 %16, label %23, label %17, !dbg !4382

; <label>:17:                                     ; preds = %14
  %18 = load %struct.redisObject*, %struct.redisObject** %7, align 8, !dbg !4383, !tbaa !1038
  %19 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %18, i64 0, i32 2, !dbg !4385
  %20 = load i8*, i8** %19, align 8, !dbg !4385, !tbaa !1046
  %21 = tail call i8* @ziplistNext(i8* %20, i8* nonnull %4) #9, !dbg !4386
  %22 = tail call double @zzlGetScore(i8* %21) #9, !dbg !4388
  store double %22, double* %1, align 8, !dbg !4389, !tbaa !4390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4391
  br label %23, !dbg !4391

; <label>:23:                                     ; preds = %14, %17
  %24 = tail call %struct.redisObject* @createObject(i32 0, i8* %15) #9, !dbg !4392
  br label %65, !dbg !4394

; <label>:25:                                     ; preds = %6
  %26 = icmp eq i32 %12, 7, !dbg !4395
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4396
  br i1 %26, label %27, label %64, !dbg !4396

; <label>:27:                                     ; preds = %25
  %28 = icmp eq double* %1, null, !dbg !4397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4399
  br i1 %28, label %34, label %29, !dbg !4399

; <label>:29:                                     ; preds = %27
  %30 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !4401
  %31 = bitcast i8* %30 to i64*, !dbg !4401
  %32 = load i64, i64* %31, align 8, !dbg !4401, !tbaa !4390
  %33 = bitcast double* %1 to i64*, !dbg !4402
  store i64 %32, i64* %33, align 8, !dbg !4402, !tbaa !4390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4403
  br label %34, !dbg !4403

; <label>:34:                                     ; preds = %27, %29
  %35 = bitcast i8* %4 to i8**, !dbg !4404
  %36 = load i8*, i8** %35, align 8, !dbg !4404, !tbaa !902
  %37 = getelementptr inbounds i8, i8* %36, i64 -1, !dbg !4407
  %38 = load i8, i8* %37, align 1, !dbg !4407, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4409
  %39 = trunc i8 %38 to i3, !dbg !4409
  switch i3 %39, label %61 [
    i3 0, label %40
    i3 1, label %43
    i3 2, label %47
    i3 3, label %52
    i3 -4, label %57
  ], !dbg !4409

; <label>:40:                                     ; preds = %34
  %41 = lshr i8 %38, 3, !dbg !4410
  %42 = zext i8 %41 to i64, !dbg !4410
  br label %61, !dbg !4411

; <label>:43:                                     ; preds = %34
  %44 = getelementptr inbounds i8, i8* %36, i64 -3, !dbg !4412
  %45 = load i8, i8* %44, align 1, !dbg !4413, !tbaa !1137
  %46 = zext i8 %45 to i64, !dbg !4412
  br label %61, !dbg !4414

; <label>:47:                                     ; preds = %34
  %48 = getelementptr inbounds i8, i8* %36, i64 -5, !dbg !4415
  %49 = bitcast i8* %48 to i16*, !dbg !4416
  %50 = load i16, i16* %49, align 1, !dbg !4416, !tbaa !2186
  %51 = zext i16 %50 to i64, !dbg !4415
  br label %61, !dbg !4417

; <label>:52:                                     ; preds = %34
  %53 = getelementptr inbounds i8, i8* %36, i64 -9, !dbg !4418
  %54 = bitcast i8* %53 to i32*, !dbg !4419
  %55 = load i32, i32* %54, align 1, !dbg !4419, !tbaa !933
  %56 = zext i32 %55 to i64, !dbg !4418
  br label %61, !dbg !4420

; <label>:57:                                     ; preds = %34
  %58 = getelementptr inbounds i8, i8* %36, i64 -17, !dbg !4421
  %59 = bitcast i8* %58 to i64*, !dbg !4422
  %60 = load i64, i64* %59, align 1, !dbg !4422, !tbaa !2163
  br label %61, !dbg !4423

; <label>:61:                                     ; preds = %34, %40, %43, %47, %52, %57
  %62 = phi i64 [ %60, %57 ], [ %56, %52 ], [ %51, %47 ], [ %46, %43 ], [ %42, %40 ], [ 0, %34 ], !dbg !4424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4425
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4426
  %63 = tail call %struct.redisObject* @createStringObject(i8* %36, i64 %62) #9, !dbg !4427
  br label %65

; <label>:64:                                     ; preds = %25
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2121, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4428
  tail call void @_exit(i32 1) #12, !dbg !4428
  unreachable

; <label>:65:                                     ; preds = %61, %23
  %66 = phi %struct.redisObject* [ %24, %23 ], [ %63, %61 ], !dbg !4425
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %67 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0, !dbg !4430
  %68 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %67, align 8, !dbg !4430, !tbaa !1906
  %69 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %68, i64 0, i32 7, !dbg !4435
  %70 = load i32, i32* %69, align 8, !dbg !4435, !tbaa !1179
  %71 = and i32 %70, 2, !dbg !4436
  %72 = icmp eq i32 %71, 0, !dbg !4436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4437
  br i1 %72, label %104, label %73, !dbg !4437

; <label>:73:                                     ; preds = %65
  %74 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %68, i64 0, i32 6, !dbg !4438
  %75 = load i32, i32* %74, align 4, !dbg !4438, !tbaa !1203
  %76 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %68, i64 0, i32 5, !dbg !4439
  %77 = load i32, i32* %76, align 8, !dbg !4439, !tbaa !1289
  %78 = icmp eq i32 %75, %77, !dbg !4440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4441
  br i1 %78, label %82, label %79, !dbg !4441

; <label>:79:                                     ; preds = %73
  %80 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %68, i64 0, i32 4
  %81 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %80, align 8, !dbg !4442, !tbaa !1207
  br label %96, !dbg !4441

; <label>:82:                                     ; preds = %73
  %83 = shl nsw i32 %75, 1, !dbg !4443
  store i32 %83, i32* %76, align 8, !dbg !4443, !tbaa !1289
  %84 = icmp slt i32 %75, 8, !dbg !4444
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4445
  br i1 %84, label %85, label %86, !dbg !4445

; <label>:85:                                     ; preds = %82
  store i32 16, i32* %76, align 8, !dbg !4446, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4447
  br label %86, !dbg !4447

; <label>:86:                                     ; preds = %85, %82
  %87 = phi i32 [ 16, %85 ], [ %83, %82 ], !dbg !4448
  %88 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %68, i64 0, i32 4, !dbg !4449
  %89 = bitcast %struct.AutoMemEntry** %88 to i8**, !dbg !4449
  %90 = load i8*, i8** %89, align 8, !dbg !4449, !tbaa !1207
  %91 = sext i32 %87 to i64, !dbg !4450
  %92 = shl nsw i64 %91, 4, !dbg !4451
  %93 = tail call i8* @zrealloc(i8* %90, i64 %92) #9, !dbg !4452
  store i8* %93, i8** %89, align 8, !dbg !4453, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4454
  %94 = bitcast i8* %93 to %struct.AutoMemEntry*, !dbg !4454
  %95 = load i32, i32* %74, align 4, !dbg !4455, !tbaa !1203
  br label %96, !dbg !4454

; <label>:96:                                     ; preds = %86, %79
  %97 = phi i32 [ %75, %79 ], [ %95, %86 ], !dbg !4455
  %98 = phi %struct.AutoMemEntry* [ %81, %79 ], [ %94, %86 ], !dbg !4442
  %99 = sext i32 %97 to i64, !dbg !4456
  %100 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %98, i64 %99, i32 1, !dbg !4457
  store i32 1, i32* %100, align 8, !dbg !4458, !tbaa !1213
  %101 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %98, i64 %99, i32 0, !dbg !4459
  %102 = bitcast i8** %101 to %struct.redisObject**, !dbg !4460
  store %struct.redisObject* %66, %struct.redisObject** %102, align 8, !dbg !4460, !tbaa !1209
  %103 = add nsw i32 %97, 1, !dbg !4461
  store i32 %103, i32* %74, align 4, !dbg !4461, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  br label %104, !dbg !4462

; <label>:104:                                    ; preds = %65, %96
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4462
  br label %105, !dbg !4463

; <label>:105:                                    ; preds = %2, %104
  %106 = phi %struct.redisObject* [ %66, %104 ], [ null, %2 ], !dbg !4464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4466
  ret %struct.redisObject* %106, !dbg !4466
}

; Function Attrs: noredzone
declare dso_local i8* @ziplistGetObject(i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @ziplistNext(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local double @zzlGetScore(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRangeNext(%struct.RedisModuleKey*) #0 !dbg !4467 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4486
  %3 = load i32, i32* %2, align 4, !dbg !4486, !tbaa !1884
  %4 = icmp eq i32 %3, 0, !dbg !4488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4489
  br i1 %4, label %88, label %5, !dbg !4489

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4490
  %7 = load i8*, i8** %6, align 8, !dbg !4490, !tbaa !1897
  %8 = icmp eq i8* %7, null, !dbg !4491
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4492
  br i1 %8, label %88, label %9, !dbg !4492

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4493
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !4493, !tbaa !1038
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !4494
  %13 = load i32, i32* %12, align 8, !dbg !4494
  %14 = lshr i32 %13, 4, !dbg !4494
  %15 = and i32 %14, 15, !dbg !4494
  %16 = icmp eq i32 %15, 5, !dbg !4495
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4496
  br i1 %16, label %17, label %51, !dbg !4496

; <label>:17:                                     ; preds = %9
  %18 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 2, !dbg !4497
  %19 = load i8*, i8** %18, align 8, !dbg !4497, !tbaa !1046
  %20 = tail call i8* @ziplistNext(i8* %19, i8* nonnull %7) #9, !dbg !4500
  %21 = icmp eq i8* %20, null, !dbg !4502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4504
  br i1 %21, label %22, label %23, !dbg !4504

; <label>:22:                                     ; preds = %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4505
  br label %26, !dbg !4505

; <label>:23:                                     ; preds = %17
  %24 = tail call i8* @ziplistNext(i8* %19, i8* nonnull %20) #9, !dbg !4506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4507
  %25 = icmp eq i8* %24, null, !dbg !4508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4505
  br i1 %25, label %26, label %28, !dbg !4505

; <label>:26:                                     ; preds = %22, %23
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4509
  store i32 1, i32* %27, align 8, !dbg !4511, !tbaa !1900
  br label %49, !dbg !4512

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* %2, align 4, !dbg !4513, !tbaa !1884
  %30 = icmp eq i32 %29, 2, !dbg !4514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4515
  br i1 %30, label %31, label %40, !dbg !4515

; <label>:31:                                     ; preds = %28
  %32 = tail call i8* @ziplistNext(i8* %19, i8* nonnull %24) #9, !dbg !4517
  %33 = tail call double @zzlGetScore(i8* %32) #9, !dbg !4518
  %34 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4520
  %35 = tail call i32 @zslValueLteMax(double %33, %struct.zrangespec* nonnull %34) #9, !dbg !4522
  %36 = icmp eq i32 %35, 0, !dbg !4522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4523
  br i1 %36, label %38, label %37, !dbg !4523

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4524
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %48

; <label>:38:                                     ; preds = %31
  %39 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4525
  store i32 1, i32* %39, align 8, !dbg !4527, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4528
  br label %49

; <label>:40:                                     ; preds = %28
  %41 = icmp eq i32 %29, 1, !dbg !4529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4531
  br i1 %41, label %42, label %48, !dbg !4531

; <label>:42:                                     ; preds = %40
  %43 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4532
  %44 = tail call i32 @zzlLexValueLteMax(i8* nonnull %24, %struct.zlexrangespec* nonnull %43) #9, !dbg !4535
  %45 = icmp eq i32 %44, 0, !dbg !4535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4536
  br i1 %45, label %46, label %48, !dbg !4536

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4537
  store i32 1, i32* %47, align 8, !dbg !4539, !tbaa !1900
  br label %49, !dbg !4540

; <label>:48:                                     ; preds = %37, %42, %40
  store i8* %24, i8** %6, align 8, !dbg !4541, !tbaa !1897
  br label %49, !dbg !4542

; <label>:49:                                     ; preds = %38, %48, %46, %26
  %50 = phi i32 [ 0, %26 ], [ 1, %48 ], [ 0, %38 ], [ 0, %46 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %88

; <label>:51:                                     ; preds = %9
  %52 = icmp eq i32 %15, 7, !dbg !4543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4544
  br i1 %52, label %53, label %87, !dbg !4544

; <label>:53:                                     ; preds = %51
  %54 = getelementptr inbounds i8, i8* %7, i64 24, !dbg !4546
  %55 = bitcast i8* %54 to %struct.zskiplistNode**, !dbg !4547
  %56 = load %struct.zskiplistNode*, %struct.zskiplistNode** %55, align 8, !dbg !4547, !tbaa !4548
  %57 = icmp eq %struct.zskiplistNode* %56, null, !dbg !4551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4553
  br i1 %57, label %58, label %60, !dbg !4553

; <label>:58:                                     ; preds = %53
  %59 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4554
  store i32 1, i32* %59, align 8, !dbg !4556, !tbaa !1900
  br label %85, !dbg !4557

; <label>:60:                                     ; preds = %53
  %61 = icmp eq i32 %3, 2, !dbg !4558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4561
  br i1 %61, label %62, label %72, !dbg !4561

; <label>:62:                                     ; preds = %60
  %63 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %56, i64 0, i32 1, !dbg !4562
  %64 = load double, double* %63, align 8, !dbg !4562, !tbaa !4390
  %65 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4563
  %66 = tail call i32 @zslValueLteMax(double %64, %struct.zrangespec* nonnull %65) #9, !dbg !4564
  %67 = icmp eq i32 %66, 0, !dbg !4564
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4565
  br i1 %67, label %70, label %68, !dbg !4565

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* %2, align 4, !dbg !4566, !tbaa !1884
  br label %72, !dbg !4565

; <label>:70:                                     ; preds = %62
  %71 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4568
  store i32 1, i32* %71, align 8, !dbg !4570, !tbaa !1900
  br label %85, !dbg !4571

; <label>:72:                                     ; preds = %68, %60
  %73 = phi i32 [ %69, %68 ], [ %3, %60 ], !dbg !4566
  %74 = icmp eq i32 %73, 1, !dbg !4572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4573
  br i1 %74, label %75, label %83, !dbg !4573

; <label>:75:                                     ; preds = %72
  %76 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %56, i64 0, i32 0, !dbg !4574
  %77 = load i8*, i8** %76, align 8, !dbg !4574, !tbaa !902
  %78 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4577
  %79 = tail call i32 @zslLexValueLteMax(i8* %77, %struct.zlexrangespec* nonnull %78) #9, !dbg !4578
  %80 = icmp eq i32 %79, 0, !dbg !4578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4579
  br i1 %80, label %81, label %83, !dbg !4579

; <label>:81:                                     ; preds = %75
  %82 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4580
  store i32 1, i32* %82, align 8, !dbg !4582, !tbaa !1900
  br label %85, !dbg !4583

; <label>:83:                                     ; preds = %75, %72
  %84 = bitcast i8** %6 to %struct.zskiplistNode**, !dbg !4584
  store %struct.zskiplistNode* %56, %struct.zskiplistNode** %84, align 8, !dbg !4584, !tbaa !1897
  br label %85, !dbg !4585

; <label>:85:                                     ; preds = %83, %81, %70, %58
  %86 = phi i32 [ 0, %58 ], [ 1, %83 ], [ 0, %81 ], [ 0, %70 ], !dbg !4586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4587
  br label %88

; <label>:87:                                     ; preds = %51
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2186, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4588
  tail call void @_exit(i32 1) #12, !dbg !4588
  unreachable

; <label>:88:                                     ; preds = %1, %5, %85, %49
  %89 = phi i32 [ %50, %49 ], [ %86, %85 ], [ 0, %5 ], [ 0, %1 ], !dbg !4590
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4591
  ret i32 %89, !dbg !4591
}

; Function Attrs: noredzone
declare dso_local i32 @zslValueLteMax(double, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zzlLexValueLteMax(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zslLexValueLteMax(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ZsetRangePrev(%struct.RedisModuleKey*) #0 !dbg !4592 {
  %2 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 6, !dbg !4611
  %3 = load i32, i32* %2, align 4, !dbg !4611, !tbaa !1884
  %4 = icmp eq i32 %3, 0, !dbg !4613
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4614
  br i1 %4, label %88, label %5, !dbg !4614

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 11, !dbg !4615
  %7 = load i8*, i8** %6, align 8, !dbg !4615, !tbaa !1897
  %8 = icmp eq i8* %7, null, !dbg !4616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4617
  br i1 %8, label %88, label %9, !dbg !4617

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4618
  %11 = load %struct.redisObject*, %struct.redisObject** %10, align 8, !dbg !4618, !tbaa !1038
  %12 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 0, !dbg !4619
  %13 = load i32, i32* %12, align 8, !dbg !4619
  %14 = lshr i32 %13, 4, !dbg !4619
  %15 = and i32 %14, 15, !dbg !4619
  %16 = icmp eq i32 %15, 5, !dbg !4620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4621
  br i1 %16, label %17, label %51, !dbg !4621

; <label>:17:                                     ; preds = %9
  %18 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %11, i64 0, i32 2, !dbg !4622
  %19 = load i8*, i8** %18, align 8, !dbg !4622, !tbaa !1046
  %20 = tail call i8* @ziplistPrev(i8* %19, i8* nonnull %7) #9, !dbg !4625
  %21 = icmp eq i8* %20, null, !dbg !4627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4629
  br i1 %21, label %22, label %23, !dbg !4629

; <label>:22:                                     ; preds = %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4630
  br label %26, !dbg !4630

; <label>:23:                                     ; preds = %17
  %24 = tail call i8* @ziplistPrev(i8* %19, i8* nonnull %20) #9, !dbg !4631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4632
  %25 = icmp eq i8* %24, null, !dbg !4633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4630
  br i1 %25, label %26, label %28, !dbg !4630

; <label>:26:                                     ; preds = %22, %23
  %27 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4634
  store i32 1, i32* %27, align 8, !dbg !4636, !tbaa !1900
  br label %49, !dbg !4637

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* %2, align 4, !dbg !4638, !tbaa !1884
  %30 = icmp eq i32 %29, 2, !dbg !4639
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4640
  br i1 %30, label %31, label %40, !dbg !4640

; <label>:31:                                     ; preds = %28
  %32 = tail call i8* @ziplistNext(i8* %19, i8* nonnull %24) #9, !dbg !4642
  %33 = tail call double @zzlGetScore(i8* %32) #9, !dbg !4643
  %34 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4645
  %35 = tail call i32 @zslValueGteMin(double %33, %struct.zrangespec* nonnull %34) #9, !dbg !4647
  %36 = icmp eq i32 %35, 0, !dbg !4647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4648
  br i1 %36, label %38, label %37, !dbg !4648

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4649
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %48

; <label>:38:                                     ; preds = %31
  %39 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4650
  store i32 1, i32* %39, align 8, !dbg !4652, !tbaa !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4653
  br label %49

; <label>:40:                                     ; preds = %28
  %41 = icmp eq i32 %29, 1, !dbg !4654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4656
  br i1 %41, label %42, label %48, !dbg !4656

; <label>:42:                                     ; preds = %40
  %43 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4657
  %44 = tail call i32 @zzlLexValueGteMin(i8* nonnull %24, %struct.zlexrangespec* nonnull %43) #9, !dbg !4660
  %45 = icmp eq i32 %44, 0, !dbg !4660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4661
  br i1 %45, label %46, label %48, !dbg !4661

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4662
  store i32 1, i32* %47, align 8, !dbg !4664, !tbaa !1900
  br label %49, !dbg !4665

; <label>:48:                                     ; preds = %37, %42, %40
  store i8* %24, i8** %6, align 8, !dbg !4666, !tbaa !1897
  br label %49, !dbg !4667

; <label>:49:                                     ; preds = %38, %48, %46, %26
  %50 = phi i32 [ 0, %26 ], [ 1, %48 ], [ 0, %38 ], [ 0, %46 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %88

; <label>:51:                                     ; preds = %9
  %52 = icmp eq i32 %15, 7, !dbg !4668
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4669
  br i1 %52, label %53, label %87, !dbg !4669

; <label>:53:                                     ; preds = %51
  %54 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !4671
  %55 = bitcast i8* %54 to %struct.zskiplistNode**, !dbg !4671
  %56 = load %struct.zskiplistNode*, %struct.zskiplistNode** %55, align 8, !dbg !4671, !tbaa !902
  %57 = icmp eq %struct.zskiplistNode* %56, null, !dbg !4673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4675
  br i1 %57, label %58, label %60, !dbg !4675

; <label>:58:                                     ; preds = %53
  %59 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4676
  store i32 1, i32* %59, align 8, !dbg !4678, !tbaa !1900
  br label %85, !dbg !4679

; <label>:60:                                     ; preds = %53
  %61 = icmp eq i32 %3, 2, !dbg !4680
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4683
  br i1 %61, label %62, label %72, !dbg !4683

; <label>:62:                                     ; preds = %60
  %63 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %56, i64 0, i32 1, !dbg !4684
  %64 = load double, double* %63, align 8, !dbg !4684, !tbaa !4390
  %65 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 7, !dbg !4685
  %66 = tail call i32 @zslValueGteMin(double %64, %struct.zrangespec* nonnull %65) #9, !dbg !4686
  %67 = icmp eq i32 %66, 0, !dbg !4686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4687
  br i1 %67, label %70, label %68, !dbg !4687

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* %2, align 4, !dbg !4688, !tbaa !1884
  br label %72, !dbg !4687

; <label>:70:                                     ; preds = %62
  %71 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4690
  store i32 1, i32* %71, align 8, !dbg !4692, !tbaa !1900
  br label %85, !dbg !4693

; <label>:72:                                     ; preds = %68, %60
  %73 = phi i32 [ %69, %68 ], [ %3, %60 ], !dbg !4688
  %74 = icmp eq i32 %73, 1, !dbg !4694
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4695
  br i1 %74, label %75, label %83, !dbg !4695

; <label>:75:                                     ; preds = %72
  %76 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %56, i64 0, i32 0, !dbg !4696
  %77 = load i8*, i8** %76, align 8, !dbg !4696, !tbaa !902
  %78 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 8, !dbg !4699
  %79 = tail call i32 @zslLexValueGteMin(i8* %77, %struct.zlexrangespec* nonnull %78) #9, !dbg !4700
  %80 = icmp eq i32 %79, 0, !dbg !4700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4701
  br i1 %80, label %81, label %83, !dbg !4701

; <label>:81:                                     ; preds = %75
  %82 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 12, !dbg !4702
  store i32 1, i32* %82, align 8, !dbg !4704, !tbaa !1900
  br label %85, !dbg !4705

; <label>:83:                                     ; preds = %75, %72
  %84 = bitcast i8** %6 to %struct.zskiplistNode**, !dbg !4706
  store %struct.zskiplistNode* %56, %struct.zskiplistNode** %84, align 8, !dbg !4706, !tbaa !1897
  br label %85, !dbg !4707

; <label>:85:                                     ; preds = %83, %81, %70, %58
  %86 = phi i32 [ 0, %58 ], [ 1, %83 ], [ 0, %81 ], [ 0, %70 ], !dbg !4708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4709
  br label %88

; <label>:87:                                     ; preds = %51
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.24, i64 0, i64 0), i32 2249, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4710
  tail call void @_exit(i32 1) #12, !dbg !4710
  unreachable

; <label>:88:                                     ; preds = %1, %5, %85, %49
  %89 = phi i32 [ %50, %49 ], [ %86, %85 ], [ 0, %5 ], [ 0, %1 ], !dbg !4712
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4713
  ret i32 %89, !dbg !4713
}

; Function Attrs: noredzone
declare dso_local i8* @ziplistPrev(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zslValueGteMin(double, %struct.zrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zzlLexValueGteMin(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @zslLexValueGteMin(i8*, %struct.zlexrangespec*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_HashSet(%struct.RedisModuleKey* nocapture, i32, ...) #0 !dbg !4714 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [2 x %struct.redisObject*], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !4736
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5, !dbg !4736
  %6 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !4738
  %7 = load i32, i32* %6, align 8, !dbg !4738, !tbaa !1030
  %8 = and i32 %7, 2, !dbg !4740
  %9 = icmp eq i32 %8, 0, !dbg !4740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4741
  br i1 %9, label %134, label %10, !dbg !4741

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4742
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4742, !tbaa !1038
  %13 = icmp eq %struct.redisObject* %12, null, !dbg !4744
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4745
  br i1 %13, label %19, label %14, !dbg !4745

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %12, i64 0, i32 0, !dbg !4746
  %16 = load i32, i32* %15, align 8, !dbg !4746
  %17 = and i32 %16, 15, !dbg !4746
  %18 = icmp eq i32 %17, 4, !dbg !4747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4748
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4749
  br i1 %18, label %25, label %136, !dbg !4748

; <label>:19:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4756
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4757
  %20 = tail call %struct.redisObject* @createHashObject() #9, !dbg !4758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4760
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !4761
  %22 = load %struct.redisDb*, %struct.redisDb** %21, align 8, !dbg !4761, !tbaa !1066
  %23 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !4762
  %24 = load %struct.redisObject*, %struct.redisObject** %23, align 8, !dbg !4762, !tbaa !1068
  tail call void @dbAdd(%struct.redisDb* %22, %struct.redisObject* %24, %struct.redisObject* %20) #9, !dbg !4763
  store %struct.redisObject* %20, %struct.redisObject** %11, align 8, !dbg !4764, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4767
  br label %25, !dbg !4767

; <label>:25:                                     ; preds = %14, %19
  call void @llvm.va_start(i8* nonnull %5), !dbg !4769
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4770
  %26 = and i32 %1, 4
  %27 = icmp ne i32 %26, 0
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %29 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %31 = and i32 %1, 3
  %32 = icmp eq i32 %31, 0
  %33 = and i32 %1, 2
  %34 = icmp eq i32 %33, 0
  %35 = and i32 %1, 1
  %36 = icmp ne i32 %35, 0
  %37 = bitcast [2 x %struct.redisObject*]* %4 to i8*
  %38 = getelementptr inbounds [2 x %struct.redisObject*], [2 x %struct.redisObject*]* %4, i64 0, i64 0
  %39 = getelementptr inbounds [2 x %struct.redisObject*], [2 x %struct.redisObject*]* %4, i64 0, i64 1
  br label %40, !dbg !4770

; <label>:40:                                     ; preds = %130, %25
  %41 = phi i32 [ 0, %25 ], [ %131, %130 ], !dbg !4771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4774
  %42 = load i32, i32* %28, align 16, !dbg !4775
  %43 = icmp ult i32 %42, 41, !dbg !4775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4775
  br i1 %27, label %44, label %63, !dbg !4774

; <label>:44:                                     ; preds = %40
  br i1 %43, label %45, label %50, !dbg !4777

; <label>:45:                                     ; preds = %44
  %46 = load i8*, i8** %29, align 16, !dbg !4777
  %47 = sext i32 %42 to i64, !dbg !4777
  %48 = getelementptr i8, i8* %46, i64 %47, !dbg !4777
  %49 = add i32 %42, 8, !dbg !4777
  store i32 %49, i32* %28, align 16, !dbg !4777
  br label %53, !dbg !4777

; <label>:50:                                     ; preds = %44
  %51 = load i8*, i8** %30, align 8, !dbg !4777
  %52 = getelementptr i8, i8* %51, i64 8, !dbg !4777
  store i8* %52, i8** %30, align 8, !dbg !4777
  br label %53, !dbg !4777

; <label>:53:                                     ; preds = %50, %45
  %54 = phi i8* [ %48, %45 ], [ %51, %50 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4777
  %55 = bitcast i8* %54 to i8**, !dbg !4777
  %56 = load i8*, i8** %55, align 8, !dbg !4777
  %57 = icmp eq i8* %56, null, !dbg !4779
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4781
  br i1 %57, label %62, label %58, !dbg !4781

; <label>:58:                                     ; preds = %53
  %59 = call i64 @strlen(i8* nonnull %56) #9, !dbg !4782
  %60 = call %struct.redisObject* @createRawStringObject(i8* nonnull %56, i64 %59) #9, !dbg !4783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4785
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %61 = load i32, i32* %28, align 16, !dbg !4786
  br label %78

; <label>:62:                                     ; preds = %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4787
  br label %132

; <label>:63:                                     ; preds = %40
  br i1 %43, label %64, label %69, !dbg !4788

; <label>:64:                                     ; preds = %63
  %65 = load i8*, i8** %29, align 16, !dbg !4788
  %66 = sext i32 %42 to i64, !dbg !4788
  %67 = getelementptr i8, i8* %65, i64 %66, !dbg !4788
  %68 = add i32 %42, 8, !dbg !4788
  store i32 %68, i32* %28, align 16, !dbg !4788
  br label %72, !dbg !4788

; <label>:69:                                     ; preds = %63
  %70 = load i8*, i8** %30, align 8, !dbg !4788
  %71 = getelementptr i8, i8* %70, i64 8, !dbg !4788
  store i8* %71, i8** %30, align 8, !dbg !4788
  br label %72, !dbg !4788

; <label>:72:                                     ; preds = %69, %64
  %73 = phi i32 [ %68, %64 ], [ %42, %69 ]
  %74 = phi i8* [ %67, %64 ], [ %70, %69 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4788
  %75 = bitcast i8* %74 to %struct.redisObject**, !dbg !4788
  %76 = load %struct.redisObject*, %struct.redisObject** %75, align 8, !dbg !4788
  %77 = icmp eq %struct.redisObject* %76, null, !dbg !4789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4791
  br i1 %77, label %132, label %78, !dbg !4791

; <label>:78:                                     ; preds = %58, %72
  %79 = phi i32 [ %73, %72 ], [ %61, %58 ], !dbg !4786
  %80 = phi %struct.redisObject* [ %76, %72 ], [ %60, %58 ]
  %81 = icmp ult i32 %79, 41, !dbg !4786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4786
  br i1 %81, label %82, label %87, !dbg !4786

; <label>:82:                                     ; preds = %78
  %83 = load i8*, i8** %29, align 16, !dbg !4786
  %84 = sext i32 %79 to i64, !dbg !4786
  %85 = getelementptr i8, i8* %83, i64 %84, !dbg !4786
  %86 = add i32 %79, 8, !dbg !4786
  store i32 %86, i32* %28, align 16, !dbg !4786
  br label %90, !dbg !4786

; <label>:87:                                     ; preds = %78
  %88 = load i8*, i8** %30, align 8, !dbg !4786
  %89 = getelementptr i8, i8* %88, i64 8, !dbg !4786
  store i8* %89, i8** %30, align 8, !dbg !4786
  br label %90, !dbg !4786

; <label>:90:                                     ; preds = %87, %82
  %91 = phi i8* [ %85, %82 ], [ %88, %87 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4786
  %92 = bitcast i8* %91 to %struct.redisObject**, !dbg !4786
  %93 = load %struct.redisObject*, %struct.redisObject** %92, align 8, !dbg !4786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4793
  br i1 %32, label %107, label %94, !dbg !4793

; <label>:94:                                     ; preds = %90
  %95 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4794, !tbaa !1038
  %96 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %80, i64 0, i32 2, !dbg !4795
  %97 = load i8*, i8** %96, align 8, !dbg !4795, !tbaa !1046
  %98 = call i32 @hashTypeExists(%struct.redisObject* %95, i8* %97) #9, !dbg !4796
  %99 = icmp ne i32 %98, 0, !dbg !4798
  %100 = or i1 %34, %99, !dbg !4800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4800
  br i1 %100, label %101, label %103, !dbg !4800

; <label>:101:                                    ; preds = %94
  %102 = and i1 %36, %99, !dbg !4801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4801
  br i1 %102, label %103, label %105, !dbg !4801

; <label>:103:                                    ; preds = %101, %94
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4802
  br i1 %27, label %104, label %106, !dbg !4802

; <label>:104:                                    ; preds = %103
  call void @decrRefCount(%struct.redisObject* nonnull %80) #9, !dbg !4804
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4804
  br label %106, !dbg !4804

; <label>:105:                                    ; preds = %101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4806
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %107

; <label>:106:                                    ; preds = %103, %104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4807
  br label %130

; <label>:107:                                    ; preds = %105, %90
  %108 = icmp eq %struct.redisObject* %93, inttoptr (i64 1 to %struct.redisObject*), !dbg !4808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4809
  br i1 %108, label %109, label %116, !dbg !4809

; <label>:109:                                    ; preds = %107
  %110 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4810, !tbaa !1038
  %111 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %80, i64 0, i32 2, !dbg !4811
  %112 = load i8*, i8** %111, align 8, !dbg !4811, !tbaa !1046
  %113 = call i32 @hashTypeDelete(%struct.redisObject* %110, i8* %112) #9, !dbg !4812
  %114 = add nsw i32 %113, %41, !dbg !4813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4814
  br i1 %27, label %115, label %130, !dbg !4814, !llvm.loop !4815

; <label>:115:                                    ; preds = %109
  call void @decrRefCount(%struct.redisObject* nonnull %80) #9, !dbg !4817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4817
  br label %130, !dbg !4817, !llvm.loop !4815

; <label>:116:                                    ; preds = %107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4820
  br i1 %27, label %117, label %118, !dbg !4820

; <label>:117:                                    ; preds = %116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4821
  br label %118, !dbg !4821

; <label>:118:                                    ; preds = %117, %116
  %119 = phi i32 [ 1, %117 ], [ 0, %116 ], !dbg !4823
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #5, !dbg !4824
  store %struct.redisObject* %80, %struct.redisObject** %38, align 16, !dbg !4826, !tbaa !902
  store %struct.redisObject* %93, %struct.redisObject** %39, align 8, !dbg !4826, !tbaa !902
  %120 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4827, !tbaa !1038
  call void @hashTypeTryConversion(%struct.redisObject* %120, %struct.redisObject** nonnull %38, i32 0, i32 1) #9, !dbg !4828
  %121 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !4829, !tbaa !1038
  %122 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %80, i64 0, i32 2, !dbg !4830
  %123 = load i8*, i8** %122, align 8, !dbg !4830, !tbaa !1046
  %124 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %93, i64 0, i32 2, !dbg !4831
  %125 = load i8*, i8** %124, align 8, !dbg !4831, !tbaa !1046
  %126 = call i32 @hashTypeSet(%struct.redisObject* %121, i8* %123, i8* %125, i32 %119) #9, !dbg !4832
  %127 = add nsw i32 %126, %41, !dbg !4833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4834
  br i1 %27, label %128, label %129, !dbg !4834

; <label>:128:                                    ; preds = %118
  store i8* null, i8** %122, align 8, !dbg !4835, !tbaa !1046
  call void @decrRefCount(%struct.redisObject* nonnull %80) #9, !dbg !4838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4839
  br label %129, !dbg !4839

; <label>:129:                                    ; preds = %128, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #5, !dbg !4816
  br label %130, !dbg !4816

; <label>:130:                                    ; preds = %109, %115, %106, %129
  %131 = phi i32 [ %127, %129 ], [ %41, %106 ], [ %114, %115 ], [ %114, %109 ], !dbg !4840
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %40

; <label>:132:                                    ; preds = %72, %62
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.va_end(i8* nonnull %5), !dbg !4841
  %133 = call i32 @moduleDelKeyIfEmpty(%struct.RedisModuleKey* nonnull %0) #10, !dbg !4842
  br label %134

; <label>:134:                                    ; preds = %2, %132
  %135 = phi i32 [ %41, %132 ], [ 0, %2 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %136, !dbg !4843

; <label>:136:                                    ; preds = %134, %14
  %137 = phi i32 [ 0, %14 ], [ %135, %134 ], !dbg !4844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5, !dbg !4843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4843
  ret i32 %137, !dbg !4843
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createRawStringObject(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @hashTypeExists(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @hashTypeDelete(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @hashTypeTryConversion(%struct.redisObject*, %struct.redisObject**, i32, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @hashTypeSet(%struct.redisObject*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_HashGet(%struct.RedisModuleKey* nocapture readonly, i32, ...) #0 !dbg !4845 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !4866
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5, !dbg !4866
  %5 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !4868
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4868, !tbaa !1038
  %7 = icmp eq %struct.redisObject* %6, null, !dbg !4870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4871
  br i1 %7, label %13, label %8, !dbg !4871

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 0, !dbg !4872
  %10 = load i32, i32* %9, align 8, !dbg !4872
  %11 = and i32 %10, 15, !dbg !4872
  %12 = icmp eq i32 %11, 4, !dbg !4873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4874
  br i1 %12, label %13, label %151, !dbg !4874

; <label>:13:                                     ; preds = %8, %2
  call void @llvm.va_start(i8* nonnull %4), !dbg !4875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4876
  %14 = and i32 %1, 4
  %15 = icmp ne i32 %14, 0
  %16 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %17 = and i32 %1, 8
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3
  %20 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 0
  br label %22, !dbg !4876

; <label>:22:                                     ; preds = %149, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4877
  %23 = load i32, i32* %16, align 16, !dbg !4878
  %24 = icmp ult i32 %23, 41, !dbg !4878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4878
  br i1 %15, label %25, label %44, !dbg !4877

; <label>:25:                                     ; preds = %22
  br i1 %24, label %26, label %31, !dbg !4880

; <label>:26:                                     ; preds = %25
  %27 = load i8*, i8** %19, align 16, !dbg !4880
  %28 = sext i32 %23 to i64, !dbg !4880
  %29 = getelementptr i8, i8* %27, i64 %28, !dbg !4880
  %30 = add i32 %23, 8, !dbg !4880
  store i32 %30, i32* %16, align 16, !dbg !4880
  br label %34, !dbg !4880

; <label>:31:                                     ; preds = %25
  %32 = load i8*, i8** %20, align 8, !dbg !4880
  %33 = getelementptr i8, i8* %32, i64 8, !dbg !4880
  store i8* %33, i8** %20, align 8, !dbg !4880
  br label %34, !dbg !4880

; <label>:34:                                     ; preds = %31, %26
  %35 = phi i8* [ %29, %26 ], [ %32, %31 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4880
  %36 = bitcast i8* %35 to i8**, !dbg !4880
  %37 = load i8*, i8** %36, align 8, !dbg !4880
  %38 = icmp eq i8* %37, null, !dbg !4882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4884
  br i1 %38, label %43, label %39, !dbg !4884

; <label>:39:                                     ; preds = %34
  %40 = call i64 @strlen(i8* nonnull %37) #9, !dbg !4885
  %41 = call %struct.redisObject* @createRawStringObject(i8* nonnull %37, i64 %40) #9, !dbg !4886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4888
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %42 = load i32, i32* %16, align 16, !dbg !4889
  br label %59

; <label>:43:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4890
  br label %150

; <label>:44:                                     ; preds = %22
  br i1 %24, label %45, label %50, !dbg !4891

; <label>:45:                                     ; preds = %44
  %46 = load i8*, i8** %19, align 16, !dbg !4891
  %47 = sext i32 %23 to i64, !dbg !4891
  %48 = getelementptr i8, i8* %46, i64 %47, !dbg !4891
  %49 = add i32 %23, 8, !dbg !4891
  store i32 %49, i32* %16, align 16, !dbg !4891
  br label %53, !dbg !4891

; <label>:50:                                     ; preds = %44
  %51 = load i8*, i8** %20, align 8, !dbg !4891
  %52 = getelementptr i8, i8* %51, i64 8, !dbg !4891
  store i8* %52, i8** %20, align 8, !dbg !4891
  br label %53, !dbg !4891

; <label>:53:                                     ; preds = %50, %45
  %54 = phi i32 [ %49, %45 ], [ %23, %50 ]
  %55 = phi i8* [ %48, %45 ], [ %51, %50 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4891
  %56 = bitcast i8* %55 to %struct.redisObject**, !dbg !4891
  %57 = load %struct.redisObject*, %struct.redisObject** %56, align 8, !dbg !4891
  %58 = icmp eq %struct.redisObject* %57, null, !dbg !4892
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4894
  br i1 %58, label %150, label %59, !dbg !4894

; <label>:59:                                     ; preds = %39, %53
  %60 = phi i32 [ %54, %53 ], [ %42, %39 ], !dbg !4889
  %61 = phi %struct.redisObject* [ %57, %53 ], [ %41, %39 ]
  %62 = icmp ult i32 %60, 41, !dbg !4889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4896
  br i1 %18, label %83, label %63, !dbg !4895

; <label>:63:                                     ; preds = %59
  br i1 %62, label %64, label %69, !dbg !4898

; <label>:64:                                     ; preds = %63
  %65 = load i8*, i8** %19, align 16, !dbg !4898
  %66 = sext i32 %60 to i64, !dbg !4898
  %67 = getelementptr i8, i8* %65, i64 %66, !dbg !4898
  %68 = add i32 %60, 8, !dbg !4898
  store i32 %68, i32* %16, align 16, !dbg !4898
  br label %72, !dbg !4898

; <label>:69:                                     ; preds = %63
  %70 = load i8*, i8** %20, align 8, !dbg !4898
  %71 = getelementptr i8, i8* %70, i64 8, !dbg !4898
  store i8* %71, i8** %20, align 8, !dbg !4898
  br label %72, !dbg !4898

; <label>:72:                                     ; preds = %69, %64
  %73 = phi i8* [ %67, %64 ], [ %70, %69 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4898
  %74 = bitcast i8* %73 to i32**, !dbg !4898
  %75 = load i32*, i32** %74, align 8, !dbg !4898
  %76 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4900, !tbaa !1038
  %77 = icmp eq %struct.redisObject* %76, null, !dbg !4902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4903
  br i1 %77, label %82, label %78, !dbg !4903

; <label>:78:                                     ; preds = %72
  %79 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %61, i64 0, i32 2, !dbg !4904
  %80 = load i8*, i8** %79, align 8, !dbg !4904, !tbaa !1046
  %81 = call i32 @hashTypeExists(%struct.redisObject* nonnull %76, i8* %80) #9, !dbg !4905
  store i32 %81, i32* %75, align 4, !dbg !4906, !tbaa !933
  br label %146, !dbg !4907

; <label>:82:                                     ; preds = %72
  store i32 0, i32* %75, align 4, !dbg !4908, !tbaa !933
  br label %146

; <label>:83:                                     ; preds = %59
  br i1 %62, label %84, label %89, !dbg !4909

; <label>:84:                                     ; preds = %83
  %85 = load i8*, i8** %19, align 16, !dbg !4909
  %86 = sext i32 %60 to i64, !dbg !4909
  %87 = getelementptr i8, i8* %85, i64 %86, !dbg !4909
  %88 = add i32 %60, 8, !dbg !4909
  store i32 %88, i32* %16, align 16, !dbg !4909
  br label %92, !dbg !4909

; <label>:89:                                     ; preds = %83
  %90 = load i8*, i8** %20, align 8, !dbg !4909
  %91 = getelementptr i8, i8* %90, i64 8, !dbg !4909
  store i8* %91, i8** %20, align 8, !dbg !4909
  br label %92, !dbg !4909

; <label>:92:                                     ; preds = %89, %84
  %93 = phi i8* [ %87, %84 ], [ %90, %89 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4909
  %94 = bitcast i8* %93 to %struct.redisObject***, !dbg !4909
  %95 = load %struct.redisObject**, %struct.redisObject*** %94, align 8, !dbg !4909
  %96 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !4911, !tbaa !1038
  %97 = icmp eq %struct.redisObject* %96, null, !dbg !4912
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4913
  br i1 %97, label %145, label %98, !dbg !4913

; <label>:98:                                     ; preds = %92
  %99 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %61, i64 0, i32 2, !dbg !4914
  %100 = load i8*, i8** %99, align 8, !dbg !4914, !tbaa !1046
  %101 = call %struct.redisObject* @hashTypeGetValueObject(%struct.redisObject* nonnull %96, i8* %100) #9, !dbg !4915
  store %struct.redisObject* %101, %struct.redisObject** %95, align 8, !dbg !4916, !tbaa !902
  %102 = icmp eq %struct.redisObject* %101, null, !dbg !4917
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4918
  br i1 %102, label %146, label %103, !dbg !4918

; <label>:103:                                    ; preds = %98
  %104 = call %struct.redisObject* @getDecodedObject(%struct.redisObject* nonnull %101) #9, !dbg !4919
  %105 = load %struct.redisObject*, %struct.redisObject** %95, align 8, !dbg !4921, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %105) #9, !dbg !4922
  store %struct.redisObject* %104, %struct.redisObject** %95, align 8, !dbg !4923, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4924
  %106 = icmp eq %struct.redisObject* %104, null, !dbg !4925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4927
  br i1 %106, label %147, label %107, !dbg !4927

; <label>:107:                                    ; preds = %103
  %108 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %21, align 8, !dbg !4928, !tbaa !1906
  %109 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %108, i64 0, i32 7, !dbg !4933
  %110 = load i32, i32* %109, align 8, !dbg !4933, !tbaa !1179
  %111 = and i32 %110, 2, !dbg !4934
  %112 = icmp eq i32 %111, 0, !dbg !4934
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4935
  br i1 %112, label %144, label %113, !dbg !4935

; <label>:113:                                    ; preds = %107
  %114 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %108, i64 0, i32 6, !dbg !4936
  %115 = load i32, i32* %114, align 4, !dbg !4936, !tbaa !1203
  %116 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %108, i64 0, i32 5, !dbg !4937
  %117 = load i32, i32* %116, align 8, !dbg !4937, !tbaa !1289
  %118 = icmp eq i32 %115, %117, !dbg !4938
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4939
  br i1 %118, label %122, label %119, !dbg !4939

; <label>:119:                                    ; preds = %113
  %120 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %108, i64 0, i32 4
  %121 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %120, align 8, !dbg !4940, !tbaa !1207
  br label %136, !dbg !4939

; <label>:122:                                    ; preds = %113
  %123 = shl nsw i32 %115, 1, !dbg !4941
  store i32 %123, i32* %116, align 8, !dbg !4941, !tbaa !1289
  %124 = icmp slt i32 %115, 8, !dbg !4942
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4943
  br i1 %124, label %125, label %126, !dbg !4943

; <label>:125:                                    ; preds = %122
  store i32 16, i32* %116, align 8, !dbg !4944, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4945
  br label %126, !dbg !4945

; <label>:126:                                    ; preds = %125, %122
  %127 = phi i32 [ 16, %125 ], [ %123, %122 ], !dbg !4946
  %128 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %108, i64 0, i32 4, !dbg !4947
  %129 = bitcast %struct.AutoMemEntry** %128 to i8**, !dbg !4947
  %130 = load i8*, i8** %129, align 8, !dbg !4947, !tbaa !1207
  %131 = sext i32 %127 to i64, !dbg !4948
  %132 = shl nsw i64 %131, 4, !dbg !4949
  %133 = call i8* @zrealloc(i8* %130, i64 %132) #9, !dbg !4950
  store i8* %133, i8** %129, align 8, !dbg !4951, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4952
  %134 = bitcast i8* %133 to %struct.AutoMemEntry*, !dbg !4952
  %135 = load i32, i32* %114, align 4, !dbg !4953, !tbaa !1203
  br label %136, !dbg !4952

; <label>:136:                                    ; preds = %126, %119
  %137 = phi i32 [ %115, %119 ], [ %135, %126 ], !dbg !4953
  %138 = phi %struct.AutoMemEntry* [ %121, %119 ], [ %134, %126 ], !dbg !4940
  %139 = sext i32 %137 to i64, !dbg !4954
  %140 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %138, i64 %139, i32 1, !dbg !4955
  store i32 1, i32* %140, align 8, !dbg !4956, !tbaa !1213
  %141 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %138, i64 %139, i32 0, !dbg !4957
  %142 = bitcast i8** %141 to %struct.redisObject**, !dbg !4958
  store %struct.redisObject* %104, %struct.redisObject** %142, align 8, !dbg !4958, !tbaa !1209
  %143 = add nsw i32 %137, 1, !dbg !4959
  store i32 %143, i32* %114, align 4, !dbg !4959, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4960
  br label %144, !dbg !4960

; <label>:144:                                    ; preds = %107, %136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4960
  br label %146, !dbg !4961

; <label>:145:                                    ; preds = %92
  store %struct.redisObject* null, %struct.redisObject** %95, align 8, !dbg !4962, !tbaa !902
  br label %146

; <label>:146:                                    ; preds = %98, %82, %78, %144, %145
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %147, !dbg !4964

; <label>:147:                                    ; preds = %146, %103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4964
  br i1 %15, label %148, label %149, !dbg !4964

; <label>:148:                                    ; preds = %147
  call void @decrRefCount(%struct.redisObject* %61) #9, !dbg !4965
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4965
  br label %149, !dbg !4965

; <label>:149:                                    ; preds = %147, %148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4967
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %22

; <label>:150:                                    ; preds = %53, %43
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.va_end(i8* nonnull %4), !dbg !4968
  br label %151, !dbg !4969

; <label>:151:                                    ; preds = %8, %150
  %152 = phi i32 [ 0, %150 ], [ 1, %8 ], !dbg !4970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4971
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5, !dbg !4972
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4972
  ret i32 %152, !dbg !4972
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @hashTypeGetValueObject(%struct.redisObject*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCallReply* @moduleCreateCallReplyFromProto(%struct.RedisModuleCtx*, i8*) local_unnamed_addr #0 !dbg !4973 {
  %3 = tail call i8* @zmalloc(i64 48) #9, !dbg !4982
  %4 = bitcast i8* %3 to %struct.RedisModuleCallReply*, !dbg !4982
  %5 = bitcast i8* %3 to %struct.RedisModuleCtx**, !dbg !4984
  store %struct.RedisModuleCtx* %0, %struct.RedisModuleCtx** %5, align 8, !dbg !4985, !tbaa !1246
  %6 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !4986
  %7 = bitcast i8* %6 to i8**, !dbg !4986
  store i8* %1, i8** %7, align 8, !dbg !4987, !tbaa !2718
  %8 = getelementptr inbounds i8, i8* %1, i64 -1, !dbg !4990
  %9 = load i8, i8* %8, align 1, !dbg !4990, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4992
  %10 = trunc i8 %9 to i3, !dbg !4992
  switch i3 %10, label %32 [
    i3 0, label %11
    i3 1, label %14
    i3 2, label %18
    i3 3, label %23
    i3 -4, label %28
  ], !dbg !4992

; <label>:11:                                     ; preds = %2
  %12 = lshr i8 %9, 3, !dbg !4993
  %13 = zext i8 %12 to i64, !dbg !4993
  br label %32, !dbg !4994

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds i8, i8* %1, i64 -3, !dbg !4995
  %16 = load i8, i8* %15, align 1, !dbg !4996, !tbaa !1137
  %17 = zext i8 %16 to i64, !dbg !4995
  br label %32, !dbg !4997

; <label>:18:                                     ; preds = %2
  %19 = getelementptr inbounds i8, i8* %1, i64 -5, !dbg !4998
  %20 = bitcast i8* %19 to i16*, !dbg !4999
  %21 = load i16, i16* %20, align 1, !dbg !4999, !tbaa !2186
  %22 = zext i16 %21 to i64, !dbg !4998
  br label %32, !dbg !5000

; <label>:23:                                     ; preds = %2
  %24 = getelementptr inbounds i8, i8* %1, i64 -9, !dbg !5001
  %25 = bitcast i8* %24 to i32*, !dbg !5002
  %26 = load i32, i32* %25, align 1, !dbg !5002, !tbaa !933
  %27 = zext i32 %26 to i64, !dbg !5001
  br label %32, !dbg !5003

; <label>:28:                                     ; preds = %2
  %29 = getelementptr inbounds i8, i8* %1, i64 -17, !dbg !5004
  %30 = bitcast i8* %29 to i64*, !dbg !5005
  %31 = load i64, i64* %30, align 1, !dbg !5005, !tbaa !2163
  br label %32, !dbg !5006

; <label>:32:                                     ; preds = %2, %11, %14, %18, %23, %28
  %33 = phi i64 [ %31, %28 ], [ %27, %23 ], [ %22, %18 ], [ %17, %14 ], [ %13, %11 ], [ 0, %2 ], !dbg !5007
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5009
  %34 = getelementptr inbounds i8, i8* %3, i64 32, !dbg !5010
  %35 = bitcast i8* %34 to i64*, !dbg !5010
  store i64 %33, i64* %35, align 8, !dbg !5011, !tbaa !2720
  %36 = getelementptr inbounds i8, i8* %3, i64 12, !dbg !5012
  %37 = bitcast i8* %36 to i32*, !dbg !5012
  store i32 1, i32* %37, align 4, !dbg !5013, !tbaa !5014
  %38 = load i8, i8* %1, align 1, !dbg !5015, !tbaa !1137
  %39 = sext i8 %38 to i32, !dbg !5015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5016
  switch i32 %39, label %43 [
    i32 36, label %44
    i32 43, label %44
    i32 45, label %40
    i32 58, label %41
    i32 42, label %42
  ], !dbg !5016

; <label>:40:                                     ; preds = %32
  br label %44, !dbg !5017

; <label>:41:                                     ; preds = %32
  br label %44, !dbg !5019

; <label>:42:                                     ; preds = %32
  br label %44, !dbg !5020

; <label>:43:                                     ; preds = %32
  br label %44, !dbg !5021

; <label>:44:                                     ; preds = %32, %32, %43, %42, %41, %40
  %45 = phi i32 [ -1, %43 ], [ 3, %42 ], [ 2, %41 ], [ 1, %40 ], [ 0, %32 ], [ 0, %32 ]
  %46 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !5022
  %47 = bitcast i8* %46 to i32*, !dbg !5022
  store i32 %45, i32* %47, align 8, !dbg !5022, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5022
  %48 = load i8, i8* %1, align 1, !dbg !5024, !tbaa !1137
  %49 = icmp eq i8 %48, 42, !dbg !5026
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5027
  br i1 %49, label %52, label %50, !dbg !5027

; <label>:50:                                     ; preds = %44
  %51 = icmp eq i8 %48, 36, !dbg !5028
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5029
  br i1 %51, label %52, label %59, !dbg !5029

; <label>:52:                                     ; preds = %50, %44
  %53 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !5030
  %54 = load i8, i8* %53, align 1, !dbg !5030, !tbaa !1137
  %55 = icmp eq i8 %54, 45, !dbg !5031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5032
  br i1 %55, label %56, label %59, !dbg !5032

; <label>:56:                                     ; preds = %52
  %57 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !5033
  %58 = bitcast i8* %57 to i32*, !dbg !5033
  store i32 4, i32* %58, align 8, !dbg !5034, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5035
  br label %59, !dbg !5035

; <label>:59:                                     ; preds = %56, %52, %50
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5036
  ret %struct.RedisModuleCallReply* %4, !dbg !5036
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply(%struct.RedisModuleCallReply*) local_unnamed_addr #0 !dbg !5037 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 2, !dbg !5041
  %4 = load i32, i32* %3, align 4, !dbg !5041, !tbaa !5014
  %5 = and i32 %4, 1, !dbg !5043
  %6 = icmp eq i32 %5, 0, !dbg !5043
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5044
  br i1 %6, label %66, label %7, !dbg !5044

; <label>:7:                                      ; preds = %1
  %8 = and i32 %4, -2, !dbg !5045
  store i32 %8, i32* %3, align 4, !dbg !5045, !tbaa !5014
  %9 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5046
  %10 = load i8*, i8** %9, align 8, !dbg !5046, !tbaa !2718
  %11 = load i8, i8* %10, align 1, !dbg !5047, !tbaa !1137
  %12 = sext i8 %11 to i32, !dbg !5047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5048
  switch i32 %12, label %66 [
    i32 58, label %13
    i32 36, label %26
    i32 45, label %50
    i32 43, label %50
    i32 42, label %65
  ], !dbg !5048

; <label>:13:                                     ; preds = %7
  %14 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5058
  %15 = tail call i8* @strchr(i8* nonnull %14, i32 13) #9, !dbg !5059
  %16 = ptrtoint i8* %15 to i64, !dbg !5061
  %17 = ptrtoint i8* %10 to i64, !dbg !5061
  %18 = sub i64 %16, %17, !dbg !5061
  %19 = add nsw i64 %18, -1, !dbg !5062
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5063
  %21 = bitcast %union.anon.1* %20 to i64*, !dbg !5064
  %22 = tail call i32 @string2ll(i8* nonnull %14, i64 %19, i64* nonnull %21) #9, !dbg !5065
  %23 = add nsw i64 %18, 2, !dbg !5066
  %24 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5067
  store i64 %23, i64* %24, align 8, !dbg !5068, !tbaa !2720
  %25 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5069
  store i32 2, i32* %25, align 8, !dbg !5070, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5072
  br label %66, !dbg !5072

; <label>:26:                                     ; preds = %7
  %27 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5082
  %28 = tail call i8* @strchr(i8* nonnull %27, i32 13) #9, !dbg !5083
  %29 = bitcast i64* %2 to i8*, !dbg !5085
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5, !dbg !5085
  %30 = ptrtoint i8* %28 to i64, !dbg !5086
  %31 = ptrtoint i8* %10 to i64, !dbg !5086
  %32 = sub i64 %30, %31, !dbg !5086
  %33 = add nsw i64 %32, -1, !dbg !5087
  %34 = call i32 @string2ll(i8* nonnull %27, i64 %33, i64* nonnull %2) #9, !dbg !5089
  %35 = load i64, i64* %2, align 8, !dbg !5090, !tbaa !1650
  %36 = icmp eq i64 %35, -1, !dbg !5092
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5093
  br i1 %36, label %37, label %39, !dbg !5093

; <label>:37:                                     ; preds = %26
  %38 = add nsw i64 %32, 2, !dbg !5094
  br label %45, !dbg !5096

; <label>:39:                                     ; preds = %26
  %40 = getelementptr inbounds i8, i8* %28, i64 2, !dbg !5097
  %41 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5099
  store i8* %40, i8** %41, align 8, !dbg !5100, !tbaa !1137
  %42 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5101
  store i64 %35, i64* %42, align 8, !dbg !5102, !tbaa !5103
  %43 = add i64 %32, 4, !dbg !5104
  %44 = add i64 %43, %35, !dbg !5105
  br label %45

; <label>:45:                                     ; preds = %37, %39
  %46 = phi i64 [ %44, %39 ], [ %38, %37 ]
  %47 = phi i32 [ 0, %39 ], [ 4, %37 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %48 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5106
  store i64 %46, i64* %48, align 8, !dbg !5107
  %49 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5108
  store i32 %47, i32* %49, align 8, !dbg !5109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5, !dbg !5110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5111
  br label %66, !dbg !5111

; <label>:50:                                     ; preds = %7, %7
  %51 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !5120
  %52 = tail call i8* @strchr(i8* nonnull %51, i32 13) #9, !dbg !5121
  %53 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5123
  store i8* %51, i8** %53, align 8, !dbg !5124, !tbaa !1137
  %54 = ptrtoint i8* %52 to i64, !dbg !5125
  %55 = ptrtoint i8* %10 to i64, !dbg !5125
  %56 = sub i64 %54, %55, !dbg !5125
  %57 = add nsw i64 %56, -1, !dbg !5126
  %58 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5127
  store i64 %57, i64* %58, align 8, !dbg !5128, !tbaa !5103
  %59 = add nsw i64 %56, 2, !dbg !5129
  %60 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5130
  store i64 %59, i64* %60, align 8, !dbg !5131, !tbaa !2720
  %61 = load i8, i8* %10, align 1, !dbg !5132, !tbaa !1137
  %62 = icmp ne i8 %61, 43, !dbg !5133
  %63 = zext i1 %62 to i32, !dbg !5132
  %64 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5134
  store i32 %63, i32* %64, align 8, !dbg !5135, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5137
  br label %66, !dbg !5137

; <label>:65:                                     ; preds = %7
  tail call void @moduleParseCallReply_Array(%struct.RedisModuleCallReply* nonnull %0) #10, !dbg !5138
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5139
  br label %66, !dbg !5139

; <label>:66:                                     ; preds = %1, %7, %65, %50, %45, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5140
  ret void, !dbg !5140
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_Int(%struct.RedisModuleCallReply*) local_unnamed_addr #0 !dbg !5050 {
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5142
  %3 = load i8*, i8** %2, align 8, !dbg !5142, !tbaa !2718
  %4 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5144
  %5 = tail call i8* @strchr(i8* nonnull %4, i32 13) #9, !dbg !5145
  %6 = ptrtoint i8* %5 to i64, !dbg !5147
  %7 = ptrtoint i8* %3 to i64, !dbg !5147
  %8 = sub i64 %6, %7, !dbg !5147
  %9 = add nsw i64 %8, -1, !dbg !5148
  %10 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5149
  %11 = bitcast %union.anon.1* %10 to i64*, !dbg !5150
  %12 = tail call i32 @string2ll(i8* nonnull %4, i64 %9, i64* nonnull %11) #9, !dbg !5151
  %13 = add nsw i64 %8, 2, !dbg !5152
  %14 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5153
  store i64 %13, i64* %14, align 8, !dbg !5154, !tbaa !2720
  %15 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5155
  store i32 2, i32* %15, align 8, !dbg !5156, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5157
  ret void, !dbg !5157
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_BulkString(%struct.RedisModuleCallReply* nocapture) local_unnamed_addr #0 !dbg !5074 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5159
  %4 = load i8*, i8** %3, align 8, !dbg !5159, !tbaa !2718
  %5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5161
  %6 = tail call i8* @strchr(i8* nonnull %5, i32 13) #9, !dbg !5162
  %7 = bitcast i64* %2 to i8*, !dbg !5164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5, !dbg !5164
  %8 = ptrtoint i8* %6 to i64, !dbg !5165
  %9 = ptrtoint i8* %4 to i64, !dbg !5165
  %10 = sub i64 %8, %9, !dbg !5165
  %11 = add nsw i64 %10, -1, !dbg !5166
  %12 = call i32 @string2ll(i8* nonnull %5, i64 %11, i64* nonnull %2) #9, !dbg !5168
  %13 = load i64, i64* %2, align 8, !dbg !5169, !tbaa !1650
  %14 = icmp eq i64 %13, -1, !dbg !5170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5171
  br i1 %14, label %15, label %17, !dbg !5171

; <label>:15:                                     ; preds = %1
  %16 = add nsw i64 %10, 2, !dbg !5172
  br label %23, !dbg !5173

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5174
  %19 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5175
  store i8* %18, i8** %19, align 8, !dbg !5176, !tbaa !1137
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5177
  store i64 %13, i64* %20, align 8, !dbg !5178, !tbaa !5103
  %21 = add i64 %10, 4, !dbg !5179
  %22 = add i64 %21, %13, !dbg !5180
  br label %23

; <label>:23:                                     ; preds = %17, %15
  %24 = phi i64 [ %22, %17 ], [ %16, %15 ]
  %25 = phi i32 [ 0, %17 ], [ 4, %15 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %26 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5181
  store i64 %24, i64* %26, align 8, !dbg !5182
  %27 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5183
  store i32 %25, i32* %27, align 8, !dbg !5184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5, !dbg !5185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5185
  ret void, !dbg !5185
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_SimpleString(%struct.RedisModuleCallReply* nocapture) local_unnamed_addr #0 !dbg !5113 {
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5187
  %3 = load i8*, i8** %2, align 8, !dbg !5187, !tbaa !2718
  %4 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !5189
  %5 = tail call i8* @strchr(i8* nonnull %4, i32 13) #9, !dbg !5190
  %6 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5192
  store i8* %4, i8** %6, align 8, !dbg !5193, !tbaa !1137
  %7 = ptrtoint i8* %5 to i64, !dbg !5194
  %8 = ptrtoint i8* %3 to i64, !dbg !5194
  %9 = sub i64 %7, %8, !dbg !5194
  %10 = add nsw i64 %9, -1, !dbg !5195
  %11 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5196
  store i64 %10, i64* %11, align 8, !dbg !5197, !tbaa !5103
  %12 = add nsw i64 %9, 2, !dbg !5198
  %13 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5199
  store i64 %12, i64* %13, align 8, !dbg !5200, !tbaa !2720
  %14 = load i8, i8* %3, align 1, !dbg !5201, !tbaa !1137
  %15 = icmp ne i8 %14, 43, !dbg !5202
  %16 = zext i1 %15 to i32, !dbg !5201
  %17 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5203
  store i32 %16, i32* %17, align 8, !dbg !5204, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5205
  ret void, !dbg !5205
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleParseCallReply_Array(%struct.RedisModuleCallReply* nocapture) local_unnamed_addr #0 !dbg !5206 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5218
  %4 = load i8*, i8** %3, align 8, !dbg !5218, !tbaa !2718
  %5 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !5220
  %6 = tail call i8* @strchr(i8* nonnull %5, i32 13) #9, !dbg !5221
  %7 = bitcast i64* %2 to i8*, !dbg !5223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5, !dbg !5223
  %8 = ptrtoint i8* %6 to i64, !dbg !5224
  %9 = ptrtoint i8* %4 to i64, !dbg !5224
  %10 = xor i64 %9, -1, !dbg !5225
  %11 = add i64 %8, %10, !dbg !5225
  %12 = call i32 @string2ll(i8* nonnull %5, i64 %11, i64* nonnull %2) #9, !dbg !5227
  %13 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !5228
  %14 = load i64, i64* %2, align 8, !dbg !5229, !tbaa !1650
  %15 = icmp eq i64 %14, -1, !dbg !5231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5232
  br i1 %15, label %45, label %16, !dbg !5232

; <label>:16:                                     ; preds = %1
  %17 = mul i64 %14, 48, !dbg !5233
  %18 = call i8* @zmalloc(i64 %17) #9, !dbg !5234
  %19 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5235
  %20 = bitcast %union.anon.1* %19 to %struct.RedisModuleCallReply**, !dbg !5236
  %21 = getelementptr inbounds %union.anon.1, %union.anon.1* %19, i64 0, i32 0, !dbg !5237
  store i8* %18, i8** %21, align 8, !dbg !5237, !tbaa !1137
  %22 = load i64, i64* %2, align 8, !dbg !5238, !tbaa !1650
  %23 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5239
  store i64 %22, i64* %23, align 8, !dbg !5240, !tbaa !5103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5242
  %24 = icmp sgt i64 %22, 0, !dbg !5243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5244
  br i1 %24, label %25, label %45, !dbg !5244

; <label>:25:                                     ; preds = %16
  %26 = bitcast i8* %18 to %struct.RedisModuleCallReply*, !dbg !5244
  %27 = bitcast %struct.RedisModuleCallReply* %0 to i64*
  br label %28, !dbg !5244

; <label>:28:                                     ; preds = %43, %25
  %29 = phi %struct.RedisModuleCallReply* [ %26, %25 ], [ %44, %43 ], !dbg !5245
  %30 = phi i8* [ %13, %25 ], [ %39, %43 ]
  %31 = phi i64 [ 0, %25 ], [ %40, %43 ]
  %32 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, !dbg !5246
  %33 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, i32 2, !dbg !5248
  store i32 3, i32* %33, align 4, !dbg !5249, !tbaa !5014
  %34 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, i32 4, !dbg !5250
  store i8* %30, i8** %34, align 8, !dbg !5251, !tbaa !2718
  %35 = load i64, i64* %27, align 8, !dbg !5252, !tbaa !1246
  %36 = bitcast %struct.RedisModuleCallReply* %32 to i64*, !dbg !5253
  store i64 %35, i64* %36, align 8, !dbg !5253, !tbaa !1246
  call void @moduleParseCallReply(%struct.RedisModuleCallReply* %32) #10, !dbg !5254
  %37 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %29, i64 %31, i32 5, !dbg !5255
  %38 = load i64, i64* %37, align 8, !dbg !5255, !tbaa !2720
  %39 = getelementptr inbounds i8, i8* %30, i64 %38, !dbg !5256
  %40 = add nuw nsw i64 %31, 1, !dbg !5257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5258
  %41 = load i64, i64* %2, align 8, !dbg !5259, !tbaa !1650
  %42 = icmp slt i64 %40, %41, !dbg !5243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5244
  br i1 %42, label %43, label %45, !dbg !5244, !llvm.loop !5260

; <label>:43:                                     ; preds = %28
  %44 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %20, align 8, !dbg !5245, !tbaa !1137
  br label %28, !dbg !5244

; <label>:45:                                     ; preds = %28, %16, %1
  %46 = phi i8* [ %13, %1 ], [ %13, %16 ], [ %39, %28 ]
  %47 = phi i32 [ 4, %1 ], [ 3, %16 ], [ 3, %28 ]
  %48 = ptrtoint i8* %46 to i64, !dbg !5262
  %49 = sub i64 %48, %9, !dbg !5262
  %50 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 5, !dbg !5262
  store i64 %49, i64* %50, align 8, !dbg !5262, !tbaa !2720
  %51 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5262
  store i32 %47, i32* %51, align 8, !dbg !5262, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5, !dbg !5264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5264
  ret void, !dbg !5264
}

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply*, i32) local_unnamed_addr #0 !dbg !5265 {
  %3 = icmp eq i32 %1, 0, !dbg !5278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5280
  %4 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4, !dbg !5281, !tbaa !5014
  br i1 %3, label %6, label %9, !dbg !5280

; <label>:6:                                      ; preds = %2
  %7 = and i32 %5, 2, !dbg !5282
  %8 = icmp eq i32 %7, 0, !dbg !5282
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5283
  br i1 %8, label %9, label %46, !dbg !5283

; <label>:9:                                      ; preds = %2, %6
  %10 = and i32 %5, 1, !dbg !5284
  %11 = icmp eq i32 %10, 0, !dbg !5284
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5285
  br i1 %11, label %12, label %35, !dbg !5285

; <label>:12:                                     ; preds = %9
  %13 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5286
  %14 = load i32, i32* %13, align 8, !dbg !5286, !tbaa !5023
  %15 = icmp eq i32 %14, 3, !dbg !5287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5288
  br i1 %15, label %16, label %35, !dbg !5288

; <label>:16:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5290
  %17 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5292
  %18 = load i64, i64* %17, align 8, !dbg !5292, !tbaa !5103
  %19 = icmp eq i64 %18, 0, !dbg !5294
  %20 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5295
  %21 = bitcast %union.anon.1* %20 to %struct.RedisModuleCallReply**, !dbg !5295
  %22 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %21, align 8, !dbg !5295, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5296
  br i1 %19, label %31, label %23, !dbg !5296

; <label>:23:                                     ; preds = %16, %23
  %24 = phi %struct.RedisModuleCallReply* [ %30, %23 ], [ %22, %16 ]
  %25 = phi i64 [ %27, %23 ], [ 0, %16 ]
  %26 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %24, i64 %25, !dbg !5297
  tail call void @RM_FreeCallReply_Rec(%struct.RedisModuleCallReply* %26, i32 1) #10, !dbg !5298
  %27 = add nuw i64 %25, 1, !dbg !5299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5300
  %28 = load i64, i64* %17, align 8, !dbg !5292, !tbaa !5103
  %29 = icmp ult i64 %27, %28, !dbg !5294
  %30 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %21, align 8, !dbg !5295, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5296
  br i1 %29, label %23, label %31, !dbg !5296, !llvm.loop !5301

; <label>:31:                                     ; preds = %23, %16
  %32 = phi %struct.RedisModuleCallReply* [ %22, %16 ], [ %30, %23 ], !dbg !5295
  %33 = bitcast %struct.RedisModuleCallReply* %32 to i8*, !dbg !5303
  tail call void @zfree(i8* %33) #9, !dbg !5304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5305
  %34 = load i32, i32* %4, align 4, !dbg !5306, !tbaa !5014
  br label %35, !dbg !5305

; <label>:35:                                     ; preds = %9, %12, %31
  %36 = phi i32 [ %5, %9 ], [ %5, %12 ], [ %34, %31 ], !dbg !5306
  %37 = and i32 %36, 2, !dbg !5308
  %38 = icmp eq i32 %37, 0, !dbg !5308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5309
  br i1 %38, label %39, label %46, !dbg !5309

; <label>:39:                                     ; preds = %35
  %40 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5310
  %41 = load i8*, i8** %40, align 8, !dbg !5310, !tbaa !2718
  %42 = icmp eq i8* %41, null, !dbg !5313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5314
  br i1 %42, label %44, label %43, !dbg !5314

; <label>:43:                                     ; preds = %39
  tail call void @sdsfree(i8* nonnull %41) #9, !dbg !5315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5315
  br label %44, !dbg !5315

; <label>:44:                                     ; preds = %39, %43
  %45 = bitcast %struct.RedisModuleCallReply* %0 to i8*, !dbg !5316
  tail call void @zfree(i8* %45) #9, !dbg !5317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5318
  br label %46, !dbg !5318

; <label>:46:                                     ; preds = %35, %6, %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5319
  ret void, !dbg !5319
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CallReplyType(%struct.RedisModuleCallReply* readonly) #0 !dbg !5320 {
  %2 = icmp eq %struct.RedisModuleCallReply* %0, null, !dbg !5326
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5328
  br i1 %2, label %6, label %3, !dbg !5328

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5329
  %5 = load i32, i32* %4, align 8, !dbg !5329, !tbaa !5023
  br label %6, !dbg !5330

; <label>:6:                                      ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ -1, %1 ], !dbg !5331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5332
  ret i32 %7, !dbg !5332
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_CallReplyLength(%struct.RedisModuleCallReply*) #0 !dbg !5333 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #10, !dbg !5339
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5340
  %3 = load i32, i32* %2, align 8, !dbg !5340, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5341
  switch i32 %3, label %7 [
    i32 0, label %4
    i32 1, label %4
    i32 3, label %4
  ], !dbg !5341

; <label>:4:                                      ; preds = %1, %1, %1
  %5 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5342
  %6 = load i64, i64* %5, align 8, !dbg !5342, !tbaa !5103
  br label %7, !dbg !5344

; <label>:7:                                      ; preds = %1, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %1 ], !dbg !5345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5346
  ret i64 %8, !dbg !5346
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCallReply* @RM_CallReplyArrayElement(%struct.RedisModuleCallReply*, i64) #0 !dbg !5347 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #10, !dbg !5355
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5356
  %4 = load i32, i32* %3, align 8, !dbg !5356, !tbaa !5023
  %5 = icmp eq i32 %4, 3, !dbg !5358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5359
  br i1 %5, label %6, label %15, !dbg !5359

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5360
  %8 = load i64, i64* %7, align 8, !dbg !5360, !tbaa !5103
  %9 = icmp ugt i64 %8, %1, !dbg !5362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5363
  br i1 %9, label %10, label %15, !dbg !5363

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5364
  %12 = bitcast %union.anon.1* %11 to %struct.RedisModuleCallReply**, !dbg !5365
  %13 = load %struct.RedisModuleCallReply*, %struct.RedisModuleCallReply** %12, align 8, !dbg !5365, !tbaa !1137
  %14 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %13, i64 %1, !dbg !5366
  br label %15, !dbg !5367

; <label>:15:                                     ; preds = %6, %2, %10
  %16 = phi %struct.RedisModuleCallReply* [ %14, %10 ], [ null, %2 ], [ null, %6 ], !dbg !5368
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5370
  ret %struct.RedisModuleCallReply* %16, !dbg !5370
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_CallReplyInteger(%struct.RedisModuleCallReply*) #0 !dbg !5371 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #10, !dbg !5377
  %2 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5378
  %3 = load i32, i32* %2, align 8, !dbg !5378, !tbaa !5023
  %4 = icmp eq i32 %3, 2, !dbg !5380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5381
  br i1 %4, label %5, label %9, !dbg !5381

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5382
  %7 = bitcast %union.anon.1* %6 to i64*, !dbg !5383
  %8 = load i64, i64* %7, align 8, !dbg !5383, !tbaa !1137
  br label %9, !dbg !5384

; <label>:9:                                      ; preds = %1, %5
  %10 = phi i64 [ %8, %5 ], [ -9223372036854775808, %1 ], !dbg !5385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5387
  ret i64 %10, !dbg !5387
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_CallReplyStringPtr(%struct.RedisModuleCallReply*, i64*) #0 !dbg !5388 {
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #10, !dbg !5396
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5397
  %4 = load i32, i32* %3, align 8, !dbg !5397, !tbaa !5023
  %5 = icmp eq i32 %4, 0, !dbg !5399
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5400
  br i1 %5, label %8, label %6, !dbg !5400

; <label>:6:                                      ; preds = %2
  %7 = icmp eq i32 %4, 1, !dbg !5401
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5402
  br i1 %7, label %8, label %16, !dbg !5402

; <label>:8:                                      ; preds = %6, %2
  %9 = icmp eq i64* %1, null, !dbg !5403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5405
  br i1 %9, label %13, label %10, !dbg !5405

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5406
  %12 = load i64, i64* %11, align 8, !dbg !5406, !tbaa !5103
  store i64 %12, i64* %1, align 8, !dbg !5407, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5408
  br label %13, !dbg !5408

; <label>:13:                                     ; preds = %8, %10
  %14 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5409
  %15 = load i8*, i8** %14, align 8, !dbg !5409, !tbaa !1137
  br label %16, !dbg !5410

; <label>:16:                                     ; preds = %6, %13
  %17 = phi i8* [ %15, %13 ], [ null, %6 ], !dbg !5411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5413
  ret i8* %17, !dbg !5413
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CreateStringFromCallReply(%struct.RedisModuleCallReply*) #0 !dbg !5414 {
  %2 = alloca [64 x i8], align 16
  tail call void @moduleParseCallReply(%struct.RedisModuleCallReply* %0) #10, !dbg !5427
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 1, !dbg !5428
  %4 = load i32, i32* %3, align 8, !dbg !5428, !tbaa !5023
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5429
  switch i32 %4, label %23 [
    i32 0, label %5
    i32 1, label %5
    i32 2, label %13
  ], !dbg !5429

; <label>:5:                                      ; preds = %1, %1
  %6 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 0, !dbg !5430
  %7 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %6, align 8, !dbg !5430, !tbaa !1246
  %8 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, i32 0, !dbg !5431
  %9 = load i8*, i8** %8, align 8, !dbg !5431, !tbaa !1137
  %10 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 3, !dbg !5432
  %11 = load i64, i64* %10, align 8, !dbg !5432, !tbaa !5103
  %12 = tail call %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx* %7, i8* %9, i64 %11) #10, !dbg !5433
  br label %23, !dbg !5434

; <label>:13:                                     ; preds = %1
  %14 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i64 0, i64 0, !dbg !5435
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #5, !dbg !5435
  %15 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 6, !dbg !5437
  %16 = bitcast %union.anon.1* %15 to i64*, !dbg !5438
  %17 = load i64, i64* %16, align 8, !dbg !5438, !tbaa !1137
  %18 = call i32 @ll2string(i8* nonnull %14, i64 64, i64 %17) #9, !dbg !5439
  %19 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 0, !dbg !5441
  %20 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %19, align 8, !dbg !5441, !tbaa !1246
  %21 = sext i32 %18 to i64, !dbg !5442
  %22 = call %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx* %20, i8* nonnull %14, i64 %21) #10, !dbg !5443
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #5, !dbg !5444
  br label %23

; <label>:23:                                     ; preds = %1, %13, %5
  %24 = phi %struct.redisObject* [ %22, %13 ], [ %12, %5 ], [ null, %1 ], !dbg !5445
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5446
  ret %struct.redisObject* %24, !dbg !5446
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCallReply* @RM_Call(%struct.RedisModuleCtx*, i8*, i8*, ...) #0 !dbg !5447 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = bitcast i32* %4 to i8*, !dbg !5478
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #5, !dbg !5478
  store i32 0, i32* %4, align 4, !dbg !5479, !tbaa !933
  %8 = bitcast i32* %5 to i8*, !dbg !5478
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #5, !dbg !5478
  store i32 0, i32* %5, align 4, !dbg !5480, !tbaa !933
  %9 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*, !dbg !5481
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5, !dbg !5481
  %10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !5485
  call void @llvm.va_start(i8* nonnull %9), !dbg !5485
  %11 = call %struct.client* @createClient(i32 -1) #9, !dbg !5486
  %12 = call %struct.redisObject** @moduleCreateArgvFromUserFormat(i8* %1, i8* %2, i32* nonnull %4, i32* nonnull %5, %struct.__va_list_tag* nonnull %10) #10, !dbg !5487
  %13 = load i32, i32* %5, align 4, !dbg !5488, !tbaa !933
  %14 = and i32 %13, 1, !dbg !5489
  call void @llvm.va_end(i8* nonnull %9), !dbg !5490
  %15 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 21, !dbg !5491
  %16 = load i32, i32* %15, align 8, !dbg !5492, !tbaa !1305
  %17 = or i32 %16, 134217728, !dbg !5492
  store i32 %17, i32* %15, align 8, !dbg !5492, !tbaa !1305
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !5493
  %19 = load %struct.client*, %struct.client** %18, align 8, !dbg !5493, !tbaa !1183
  %20 = getelementptr inbounds %struct.client, %struct.client* %19, i64 0, i32 2, !dbg !5494
  %21 = bitcast %struct.redisDb** %20 to i64*, !dbg !5494
  %22 = load i64, i64* %21, align 8, !dbg !5494, !tbaa !1322
  %23 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 2, !dbg !5495
  %24 = bitcast %struct.redisDb** %23 to i64*, !dbg !5496
  store i64 %22, i64* %24, align 8, !dbg !5496, !tbaa !1322
  %25 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 9, !dbg !5497
  store %struct.redisObject** %12, %struct.redisObject*** %25, align 8, !dbg !5498, !tbaa !1368
  %26 = load i32, i32* %4, align 4, !dbg !5499, !tbaa !933
  %27 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 8, !dbg !5500
  store i32 %26, i32* %27, align 8, !dbg !5501, !tbaa !1370
  %28 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !5502
  %29 = load %struct.RedisModule*, %struct.RedisModule** %28, align 8, !dbg !5502, !tbaa !1171
  %30 = icmp eq %struct.RedisModule* %29, null, !dbg !5504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5505
  br i1 %30, label %35, label %31, !dbg !5505

; <label>:31:                                     ; preds = %3
  %32 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %29, i64 0, i32 8, !dbg !5506
  %33 = load i32, i32* %32, align 8, !dbg !5507, !tbaa !1711
  %34 = add nsw i32 %33, 1, !dbg !5507
  store i32 %34, i32* %32, align 8, !dbg !5507, !tbaa !1711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5508
  br label %35, !dbg !5508

; <label>:35:                                     ; preds = %3, %31
  %36 = icmp eq %struct.redisObject** %12, null, !dbg !5509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5511
  br i1 %36, label %175, label %37, !dbg !5511

; <label>:37:                                     ; preds = %35
  call void @moduleCallCommandFilters(%struct.client* %11) #10, !dbg !5512
  %38 = load %struct.redisObject**, %struct.redisObject*** %25, align 8, !dbg !5513, !tbaa !1368
  %39 = load %struct.redisObject*, %struct.redisObject** %38, align 8, !dbg !5514, !tbaa !902
  %40 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %39, i64 0, i32 2, !dbg !5515
  %41 = load i8*, i8** %40, align 8, !dbg !5515, !tbaa !1046
  %42 = call %struct.redisCommand* @lookupCommand(i8* %41) #9, !dbg !5516
  %43 = icmp eq %struct.redisCommand* %42, null, !dbg !5518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5520
  br i1 %43, label %44, label %46, !dbg !5520

; <label>:44:                                     ; preds = %37
  %45 = call i32* @__errno() #9, !dbg !5521
  store i32 22, i32* %45, align 4, !dbg !5523, !tbaa !933
  br label %173, !dbg !5524

; <label>:46:                                     ; preds = %37
  %47 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 11, !dbg !5525
  store %struct.redisCommand* %42, %struct.redisCommand** %47, align 8, !dbg !5526, !tbaa !5527
  %48 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 10, !dbg !5528
  store %struct.redisCommand* %42, %struct.redisCommand** %48, align 8, !dbg !5529, !tbaa !1351
  %49 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %42, i64 0, i32 2, !dbg !5530
  %50 = load i32, i32* %49, align 8, !dbg !5530, !tbaa !1632
  %51 = icmp sgt i32 %50, 0, !dbg !5532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5533
  br i1 %51, label %52, label %54, !dbg !5533

; <label>:52:                                     ; preds = %46
  %53 = icmp eq i32 %50, %26, !dbg !5534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5535
  br i1 %53, label %54, label %57, !dbg !5535

; <label>:54:                                     ; preds = %52, %46
  %55 = sub nsw i32 0, %50, !dbg !5536
  %56 = icmp slt i32 %26, %55, !dbg !5537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5538
  br i1 %56, label %57, label %59, !dbg !5538

; <label>:57:                                     ; preds = %52, %54
  %58 = call i32* @__errno() #9, !dbg !5539
  store i32 22, i32* %58, align 4, !dbg !5541, !tbaa !933
  br label %173, !dbg !5542

; <label>:59:                                     ; preds = %54
  %60 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !5543, !tbaa !3068
  %61 = icmp eq i32 %60, 0, !dbg !5545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5546
  br i1 %61, label %83, label %62, !dbg !5546

; <label>:62:                                     ; preds = %59
  %63 = load %struct.client*, %struct.client** %18, align 8, !dbg !5547, !tbaa !1183
  %64 = getelementptr inbounds %struct.client, %struct.client* %63, i64 0, i32 21, !dbg !5548
  %65 = load i32, i32* %64, align 8, !dbg !5548, !tbaa !1305
  %66 = and i32 %65, 2, !dbg !5549
  %67 = icmp eq i32 %66, 0, !dbg !5549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5550
  br i1 %67, label %68, label %83, !dbg !5550

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* %15, align 8, !dbg !5551, !tbaa !1305
  %70 = and i32 %69, -131585, !dbg !5551
  store i32 %70, i32* %15, align 8, !dbg !5551, !tbaa !1305
  %71 = load i32, i32* %64, align 8, !dbg !5553, !tbaa !1305
  %72 = and i32 %71, 131584, !dbg !5554
  %73 = or i32 %72, %70, !dbg !5555
  store i32 %73, i32* %15, align 8, !dbg !5555, !tbaa !1305
  %74 = load %struct.redisObject**, %struct.redisObject*** %25, align 8, !dbg !5556, !tbaa !1368
  %75 = load i32, i32* %27, align 8, !dbg !5558, !tbaa !1370
  %76 = call %struct.clusterNode* @getNodeByQuery(%struct.client* nonnull %11, %struct.redisCommand* nonnull %42, %struct.redisObject** %74, i32 %75, i32* null, i32* null) #9, !dbg !5559
  %77 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5560, !tbaa !5561
  %78 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %77, i64 0, i32 0, !dbg !5562
  %79 = load %struct.clusterNode*, %struct.clusterNode** %78, align 8, !dbg !5562, !tbaa !5563
  %80 = icmp eq %struct.clusterNode* %76, %79, !dbg !5565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5566
  br i1 %80, label %83, label %81, !dbg !5566

; <label>:81:                                     ; preds = %68
  %82 = call i32* @__errno() #9, !dbg !5567
  store i32 1, i32* %82, align 4, !dbg !5569, !tbaa !933
  br label %173, !dbg !5570

; <label>:83:                                     ; preds = %68, %62, %59
  %84 = icmp eq i32 %14, 0, !dbg !5571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5573
  br i1 %84, label %103, label %85, !dbg !5573

; <label>:85:                                     ; preds = %83
  %86 = load %struct.client*, %struct.client** %18, align 8, !dbg !5576, !tbaa !1183
  %87 = getelementptr inbounds %struct.client, %struct.client* %86, i64 0, i32 21, !dbg !5577
  %88 = load i32, i32* %87, align 8, !dbg !5577, !tbaa !1305
  %89 = and i32 %88, 264, !dbg !5578
  %90 = icmp eq i32 %89, 0, !dbg !5578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5579
  br i1 %90, label %91, label %102, !dbg !5579

; <label>:91:                                     ; preds = %85
  %92 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !5580
  %93 = load i32, i32* %92, align 8, !dbg !5580, !tbaa !1179
  %94 = and i32 %93, 1, !dbg !5581
  %95 = icmp eq i32 %94, 0, !dbg !5581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5582
  br i1 %95, label %96, label %102, !dbg !5582

; <label>:96:                                     ; preds = %91
  %97 = and i32 %93, 32, !dbg !5583
  %98 = icmp eq i32 %97, 0, !dbg !5583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5584
  br i1 %98, label %99, label %102, !dbg !5584

; <label>:99:                                     ; preds = %96
  call void @execCommandPropagateMulti(%struct.client* %86) #9, !dbg !5585
  %100 = load i32, i32* %92, align 8, !dbg !5586, !tbaa !1179
  %101 = or i32 %100, 1, !dbg !5586
  store i32 %101, i32* %92, align 8, !dbg !5586, !tbaa !1179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5587
  br label %102, !dbg !5587

; <label>:102:                                    ; preds = %85, %91, %96, %99
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5587
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5588
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5590
  br label %103, !dbg !5591

; <label>:103:                                    ; preds = %83, %102
  %104 = phi i32 [ 15, %102 ], [ 3, %83 ], !dbg !5594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5595
  call void @call(%struct.client* nonnull %11, i32 %104) #9, !dbg !5596
  %105 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 48, i64 0, !dbg !5597
  %106 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 47, !dbg !5598
  %107 = load i32, i32* %106, align 8, !dbg !5598, !tbaa !5599
  %108 = sext i32 %107 to i64, !dbg !5600
  %109 = call i8* @sdsnewlen(i8* nonnull %105, i64 %108) #9, !dbg !5601
  store i32 0, i32* %106, align 8, !dbg !5603, !tbaa !5599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5604
  %110 = getelementptr inbounds %struct.client, %struct.client* %11, i64 0, i32 15, !dbg !5605
  %111 = load %struct.list*, %struct.list** %110, align 8, !dbg !5605, !tbaa !5606
  %112 = getelementptr inbounds %struct.list, %struct.list* %111, i64 0, i32 5, !dbg !5605
  %113 = load i64, i64* %112, align 8, !dbg !5605, !tbaa !5607
  %114 = icmp eq i64 %113, 0, !dbg !5604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5604
  br i1 %114, label %134, label %115, !dbg !5604

; <label>:115:                                    ; preds = %103, %115
  %116 = phi %struct.list* [ %130, %115 ], [ %111, %103 ]
  %117 = phi i8* [ %126, %115 ], [ %109, %103 ]
  %118 = getelementptr inbounds %struct.list, %struct.list* %116, i64 0, i32 0, !dbg !5609
  %119 = load %struct.listNode*, %struct.listNode** %118, align 8, !dbg !5609, !tbaa !5610
  %120 = getelementptr inbounds %struct.listNode, %struct.listNode* %119, i64 0, i32 2, !dbg !5609
  %121 = bitcast i8** %120 to %struct.clientReplyBlock**, !dbg !5609
  %122 = load %struct.clientReplyBlock*, %struct.clientReplyBlock** %121, align 8, !dbg !5609, !tbaa !5611
  %123 = getelementptr inbounds %struct.clientReplyBlock, %struct.clientReplyBlock* %122, i64 0, i32 2, i64 0, !dbg !5614
  %124 = getelementptr inbounds %struct.clientReplyBlock, %struct.clientReplyBlock* %122, i64 0, i32 1, !dbg !5615
  %125 = load i64, i64* %124, align 8, !dbg !5615, !tbaa !2163
  %126 = call i8* @sdscatlen(i8* %117, i8* nonnull %123, i64 %125) #9, !dbg !5616
  %127 = load %struct.list*, %struct.list** %110, align 8, !dbg !5617, !tbaa !5606
  %128 = getelementptr inbounds %struct.list, %struct.list* %127, i64 0, i32 0, !dbg !5618
  %129 = load %struct.listNode*, %struct.listNode** %128, align 8, !dbg !5618, !tbaa !5610
  call void @listDelNode(%struct.list* %127, %struct.listNode* %129) #9, !dbg !5619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5604
  %130 = load %struct.list*, %struct.list** %110, align 8, !dbg !5605, !tbaa !5606
  %131 = getelementptr inbounds %struct.list, %struct.list* %130, i64 0, i32 5, !dbg !5605
  %132 = load i64, i64* %131, align 8, !dbg !5605, !tbaa !5607
  %133 = icmp eq i64 %132, 0, !dbg !5604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5604
  br i1 %133, label %134, label %115, !dbg !5604, !llvm.loop !5620

; <label>:134:                                    ; preds = %115, %103
  %135 = phi i8* [ %109, %103 ], [ %126, %115 ], !dbg !5622
  %136 = call %struct.RedisModuleCallReply* @moduleCreateCallReplyFromProto(%struct.RedisModuleCtx* %0, i8* %135) #10, !dbg !5623
  %137 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !5628
  %138 = load i32, i32* %137, align 8, !dbg !5628, !tbaa !1179
  %139 = and i32 %138, 2, !dbg !5629
  %140 = icmp eq i32 %139, 0, !dbg !5629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5630
  br i1 %140, label %172, label %141, !dbg !5630

; <label>:141:                                    ; preds = %134
  %142 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !5631
  %143 = load i32, i32* %142, align 4, !dbg !5631, !tbaa !1203
  %144 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !5632
  %145 = load i32, i32* %144, align 8, !dbg !5632, !tbaa !1289
  %146 = icmp eq i32 %143, %145, !dbg !5633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5634
  br i1 %146, label %150, label %147, !dbg !5634

; <label>:147:                                    ; preds = %141
  %148 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %149 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %148, align 8, !dbg !5635, !tbaa !1207
  br label %164, !dbg !5634

; <label>:150:                                    ; preds = %141
  %151 = shl nsw i32 %143, 1, !dbg !5636
  store i32 %151, i32* %144, align 8, !dbg !5636, !tbaa !1289
  %152 = icmp slt i32 %143, 8, !dbg !5637
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5638
  br i1 %152, label %153, label %154, !dbg !5638

; <label>:153:                                    ; preds = %150
  store i32 16, i32* %144, align 8, !dbg !5639, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5640
  br label %154, !dbg !5640

; <label>:154:                                    ; preds = %153, %150
  %155 = phi i32 [ 16, %153 ], [ %151, %150 ], !dbg !5641
  %156 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !5642
  %157 = bitcast %struct.AutoMemEntry** %156 to i8**, !dbg !5642
  %158 = load i8*, i8** %157, align 8, !dbg !5642, !tbaa !1207
  %159 = sext i32 %155 to i64, !dbg !5643
  %160 = shl nsw i64 %159, 4, !dbg !5644
  %161 = call i8* @zrealloc(i8* %158, i64 %160) #9, !dbg !5645
  store i8* %161, i8** %157, align 8, !dbg !5646, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5647
  %162 = bitcast i8* %161 to %struct.AutoMemEntry*, !dbg !5647
  %163 = load i32, i32* %142, align 4, !dbg !5648, !tbaa !1203
  br label %164, !dbg !5647

; <label>:164:                                    ; preds = %154, %147
  %165 = phi i32 [ %143, %147 ], [ %163, %154 ], !dbg !5648
  %166 = phi %struct.AutoMemEntry* [ %149, %147 ], [ %162, %154 ], !dbg !5635
  %167 = sext i32 %165 to i64, !dbg !5649
  %168 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %166, i64 %167, i32 1, !dbg !5650
  store i32 2, i32* %168, align 8, !dbg !5651, !tbaa !1213
  %169 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %166, i64 %167, i32 0, !dbg !5652
  %170 = bitcast i8** %169 to %struct.RedisModuleCallReply**, !dbg !5653
  store %struct.RedisModuleCallReply* %136, %struct.RedisModuleCallReply** %170, align 8, !dbg !5653, !tbaa !1209
  %171 = add nsw i32 %165, 1, !dbg !5654
  store i32 %171, i32* %142, align 4, !dbg !5654, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5655
  br label %172, !dbg !5655

; <label>:172:                                    ; preds = %134, %164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5655
  br label %173, !dbg !5656

; <label>:173:                                    ; preds = %44, %57, %81, %172
  %174 = phi %struct.RedisModuleCallReply* [ null, %44 ], [ null, %81 ], [ %136, %172 ], [ null, %57 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5657
  br label %175, !dbg !5658

; <label>:175:                                    ; preds = %173, %35
  %176 = phi %struct.RedisModuleCallReply* [ null, %35 ], [ %174, %173 ], !dbg !5594
  %177 = load %struct.RedisModule*, %struct.RedisModule** %28, align 8, !dbg !5658, !tbaa !1171
  %178 = icmp eq %struct.RedisModule* %177, null, !dbg !5660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5661
  br i1 %178, label %183, label %179, !dbg !5661

; <label>:179:                                    ; preds = %175
  %180 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %177, i64 0, i32 8, !dbg !5662
  %181 = load i32, i32* %180, align 8, !dbg !5663, !tbaa !1711
  %182 = add nsw i32 %181, -1, !dbg !5663
  store i32 %182, i32* %180, align 8, !dbg !5663, !tbaa !1711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5664
  br label %183, !dbg !5664

; <label>:183:                                    ; preds = %175, %179
  call void @freeClient(%struct.client* %11) #9, !dbg !5665
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5, !dbg !5666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #5, !dbg !5666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #5, !dbg !5666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5667
  ret %struct.RedisModuleCallReply* %176, !dbg !5667
}

; Function Attrs: noredzone
declare dso_local %struct.client* @createClient(i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleCallCommandFilters(%struct.client* nocapture) local_unnamed_addr #0 !dbg !5668 {
  %2 = alloca %struct.listIter, align 8
  %3 = alloca %struct.RedisModuleCommandFilterCtx, align 8
  %4 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !5694, !tbaa !902
  %5 = getelementptr inbounds %struct.list, %struct.list* %4, i64 0, i32 5, !dbg !5694
  %6 = load i64, i64* %5, align 8, !dbg !5694, !tbaa !5607
  %7 = icmp eq i64 %6, 0, !dbg !5696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5697
  br i1 %7, label %47, label %8, !dbg !5697

; <label>:8:                                      ; preds = %1
  %9 = bitcast %struct.listIter* %2 to i8*, !dbg !5698
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #5, !dbg !5698
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #9, !dbg !5700
  %10 = bitcast %struct.RedisModuleCommandFilterCtx* %3 to i8*, !dbg !5701
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5, !dbg !5701
  %11 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !5702
  %12 = bitcast %struct.redisObject*** %11 to i64*, !dbg !5702
  %13 = load i64, i64* %12, align 8, !dbg !5702, !tbaa !1368
  %14 = bitcast %struct.RedisModuleCommandFilterCtx* %3 to i64*, !dbg !5703
  store i64 %13, i64* %14, align 8, !dbg !5703, !tbaa !5704
  %15 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %3, i64 0, i32 1, !dbg !5703
  %16 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !5706
  %17 = load i32, i32* %16, align 8, !dbg !5706, !tbaa !1370
  store i32 %17, i32* %15, align 8, !dbg !5703, !tbaa !5707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5708
  %18 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !5709
  %19 = icmp eq %struct.listNode* %18, null, !dbg !5708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5708
  br i1 %19, label %44, label %20, !dbg !5708

; <label>:20:                                     ; preds = %8, %38
  %21 = phi %struct.listNode* [ %39, %38 ], [ %18, %8 ]
  %22 = getelementptr inbounds %struct.listNode, %struct.listNode* %21, i64 0, i32 2, !dbg !5711
  %23 = bitcast i8** %22 to %struct.RedisModuleCommandFilter**, !dbg !5711
  %24 = load %struct.RedisModuleCommandFilter*, %struct.RedisModuleCommandFilter** %23, align 8, !dbg !5711, !tbaa !5611
  %25 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %24, i64 0, i32 2, !dbg !5713
  %26 = load i32, i32* %25, align 8, !dbg !5713, !tbaa !5715
  %27 = and i32 %26, 1, !dbg !5717
  %28 = icmp eq i32 %27, 0, !dbg !5717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5718
  br i1 %28, label %35, label %29, !dbg !5718

; <label>:29:                                     ; preds = %20
  %30 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %24, i64 0, i32 0, !dbg !5719
  %31 = load %struct.RedisModule*, %struct.RedisModule** %30, align 8, !dbg !5719, !tbaa !5720
  %32 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %31, i64 0, i32 8, !dbg !5721
  %33 = load i32, i32* %32, align 8, !dbg !5721, !tbaa !1711
  %34 = icmp eq i32 %33, 0, !dbg !5722
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5723
  br i1 %34, label %35, label %38, !dbg !5723, !llvm.loop !5724

; <label>:35:                                     ; preds = %29, %20
  %36 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %24, i64 0, i32 1, !dbg !5726
  %37 = load void (%struct.RedisModuleCommandFilterCtx*)*, void (%struct.RedisModuleCommandFilterCtx*)** %36, align 8, !dbg !5726, !tbaa !5727
  call void %37(%struct.RedisModuleCommandFilterCtx* nonnull %3) #9, !dbg !5729
  br label %38, !dbg !5725

; <label>:38:                                     ; preds = %29, %35
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5730
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %39 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !5709
  %40 = icmp eq %struct.listNode* %39, null, !dbg !5708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5708
  br i1 %40, label %41, label %20, !dbg !5708

; <label>:41:                                     ; preds = %38
  %42 = load i64, i64* %14, align 8, !dbg !5731, !tbaa !5704
  %43 = load i32, i32* %15, align 8, !dbg !5732, !tbaa !5707
  br label %44, !dbg !5731

; <label>:44:                                     ; preds = %41, %8
  %45 = phi i32 [ %43, %41 ], [ %17, %8 ], !dbg !5732
  %46 = phi i64 [ %42, %41 ], [ %13, %8 ], !dbg !5731
  store i64 %46, i64* %12, align 8, !dbg !5733, !tbaa !1368
  store i32 %45, i32* %16, align 8, !dbg !5734, !tbaa !1370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5, !dbg !5735
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #5, !dbg !5735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5735
  br label %47, !dbg !5735

; <label>:47:                                     ; preds = %1, %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5735
  ret void, !dbg !5735
}

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.clusterNode* @getNodeByQuery(%struct.client*, %struct.redisCommand*, %struct.redisObject**, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @call(%struct.client*, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @listDelNode(%struct.list*, %struct.listNode*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_CallReplyProto(%struct.RedisModuleCallReply* nocapture readonly, i64* nocapture) #0 !dbg !5736 {
  %3 = getelementptr inbounds %struct.RedisModuleCallReply, %struct.RedisModuleCallReply* %0, i64 0, i32 4, !dbg !5742
  %4 = load i8*, i8** %3, align 8, !dbg !5742, !tbaa !2718
  %5 = icmp eq i8* %4, null, !dbg !5744
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5745
  br i1 %5, label %33, label %6, !dbg !5745

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %4, i64 -1, !dbg !5748
  %8 = load i8, i8* %7, align 1, !dbg !5748, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5750
  %9 = trunc i8 %8 to i3, !dbg !5750
  switch i3 %9, label %31 [
    i3 0, label %10
    i3 1, label %13
    i3 2, label %17
    i3 3, label %22
    i3 -4, label %27
  ], !dbg !5750

; <label>:10:                                     ; preds = %6
  %11 = lshr i8 %8, 3, !dbg !5751
  %12 = zext i8 %11 to i64, !dbg !5751
  br label %31, !dbg !5752

; <label>:13:                                     ; preds = %6
  %14 = getelementptr inbounds i8, i8* %4, i64 -3, !dbg !5753
  %15 = load i8, i8* %14, align 1, !dbg !5754, !tbaa !1137
  %16 = zext i8 %15 to i64, !dbg !5753
  br label %31, !dbg !5755

; <label>:17:                                     ; preds = %6
  %18 = getelementptr inbounds i8, i8* %4, i64 -5, !dbg !5756
  %19 = bitcast i8* %18 to i16*, !dbg !5757
  %20 = load i16, i16* %19, align 1, !dbg !5757, !tbaa !2186
  %21 = zext i16 %20 to i64, !dbg !5756
  br label %31, !dbg !5758

; <label>:22:                                     ; preds = %6
  %23 = getelementptr inbounds i8, i8* %4, i64 -9, !dbg !5759
  %24 = bitcast i8* %23 to i32*, !dbg !5760
  %25 = load i32, i32* %24, align 1, !dbg !5760, !tbaa !933
  %26 = zext i32 %25 to i64, !dbg !5759
  br label %31, !dbg !5761

; <label>:27:                                     ; preds = %6
  %28 = getelementptr inbounds i8, i8* %4, i64 -17, !dbg !5762
  %29 = bitcast i8* %28 to i64*, !dbg !5763
  %30 = load i64, i64* %29, align 1, !dbg !5763, !tbaa !2163
  br label %31, !dbg !5764

; <label>:31:                                     ; preds = %6, %10, %13, %17, %22, %27
  %32 = phi i64 [ %30, %27 ], [ %26, %22 ], [ %21, %17 ], [ %16, %13 ], [ %12, %10 ], [ 0, %6 ], !dbg !5765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5767
  store i64 %32, i64* %1, align 8, !dbg !5768, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5769
  br label %33, !dbg !5769

; <label>:33:                                     ; preds = %2, %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5770
  ret i8* %4, !dbg !5770
}

; Function Attrs: noredzone nounwind
define dso_local i64 @moduleTypeEncodeId(i8*, i32) local_unnamed_addr #0 !dbg !5771 {
  %3 = load i8*, i8** @ModuleTypeNameCharSet, align 8, !dbg !5787, !tbaa !902
  %4 = tail call i64 @strlen(i8* %0) #9, !dbg !5789
  %5 = icmp eq i64 %4, 9, !dbg !5791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5792
  br i1 %5, label %6, label %23, !dbg !5792

; <label>:6:                                      ; preds = %2
  %7 = icmp ugt i32 %1, 1023, !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  br i1 %7, label %25, label %8, !dbg !5793

; <label>:8:                                      ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %9 = ptrtoint i8* %3 to i64
  %10 = load i8, i8* %0, align 1, !dbg !5799, !tbaa !1137
  %11 = sext i8 %10 to i32, !dbg !5799
  %12 = tail call i8* @strchr(i8* %3, i32 %11) #9, !dbg !5800
  %13 = icmp eq i8* %12, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %13, label %20, label %14, !dbg !5804

; <label>:14:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %15 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !5799
  %16 = load i8, i8* %15, align 1, !dbg !5799, !tbaa !1137
  %17 = sext i8 %16 to i32, !dbg !5799
  %18 = tail call i8* @strchr(i8* %3, i32 %17) #9, !dbg !5800
  %19 = icmp eq i8* %18, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %19, label %20, label %27, !dbg !5804

; <label>:20:                                     ; preds = %63, %57, %51, %45, %39, %33, %27, %14, %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5807
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %21

; <label>:21:                                     ; preds = %20, %69
  %22 = phi i64 [ %106, %69 ], [ 0, %20 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %23

; <label>:23:                                     ; preds = %2, %21
  %24 = phi i64 [ %22, %21 ], [ 0, %2 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %25, !dbg !5808

; <label>:25:                                     ; preds = %23, %6
  %26 = phi i64 [ 0, %6 ], [ %24, %23 ], !dbg !5809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5808
  ret i64 %26, !dbg !5808

; <label>:27:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %28 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !5799
  %29 = load i8, i8* %28, align 1, !dbg !5799, !tbaa !1137
  %30 = sext i8 %29 to i32, !dbg !5799
  %31 = tail call i8* @strchr(i8* %3, i32 %30) #9, !dbg !5800
  %32 = icmp eq i8* %31, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %32, label %20, label %33, !dbg !5804

; <label>:33:                                     ; preds = %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %34 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !5799
  %35 = load i8, i8* %34, align 1, !dbg !5799, !tbaa !1137
  %36 = sext i8 %35 to i32, !dbg !5799
  %37 = tail call i8* @strchr(i8* %3, i32 %36) #9, !dbg !5800
  %38 = icmp eq i8* %37, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %38, label %20, label %39, !dbg !5804

; <label>:39:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %40 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !5799
  %41 = load i8, i8* %40, align 1, !dbg !5799, !tbaa !1137
  %42 = sext i8 %41 to i32, !dbg !5799
  %43 = tail call i8* @strchr(i8* %3, i32 %42) #9, !dbg !5800
  %44 = icmp eq i8* %43, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %44, label %20, label %45, !dbg !5804

; <label>:45:                                     ; preds = %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %46 = getelementptr inbounds i8, i8* %0, i64 5, !dbg !5799
  %47 = load i8, i8* %46, align 1, !dbg !5799, !tbaa !1137
  %48 = sext i8 %47 to i32, !dbg !5799
  %49 = tail call i8* @strchr(i8* %3, i32 %48) #9, !dbg !5800
  %50 = icmp eq i8* %49, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %50, label %20, label %51, !dbg !5804

; <label>:51:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %52 = getelementptr inbounds i8, i8* %0, i64 6, !dbg !5799
  %53 = load i8, i8* %52, align 1, !dbg !5799, !tbaa !1137
  %54 = sext i8 %53 to i32, !dbg !5799
  %55 = tail call i8* @strchr(i8* %3, i32 %54) #9, !dbg !5800
  %56 = icmp eq i8* %55, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %56, label %20, label %57, !dbg !5804

; <label>:57:                                     ; preds = %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %58 = getelementptr inbounds i8, i8* %0, i64 7, !dbg !5799
  %59 = load i8, i8* %58, align 1, !dbg !5799, !tbaa !1137
  %60 = sext i8 %59 to i32, !dbg !5799
  %61 = tail call i8* @strchr(i8* %3, i32 %60) #9, !dbg !5800
  %62 = icmp eq i8* %61, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %62, label %20, label %63, !dbg !5804

; <label>:63:                                     ; preds = %57
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  %64 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !5799
  %65 = load i8, i8* %64, align 1, !dbg !5799, !tbaa !1137
  %66 = sext i8 %65 to i32, !dbg !5799
  %67 = tail call i8* @strchr(i8* %3, i32 %66) #9, !dbg !5800
  %68 = icmp eq i8* %67, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %68, label %20, label %69, !dbg !5804

; <label>:69:                                     ; preds = %63
  %70 = ptrtoint i8* %61 to i64, !dbg !5810
  %71 = sub i64 %70, %9, !dbg !5810
  %72 = ptrtoint i8* %55 to i64, !dbg !5810
  %73 = sub i64 %72, %9, !dbg !5810
  %74 = ptrtoint i8* %49 to i64, !dbg !5810
  %75 = sub i64 %74, %9, !dbg !5810
  %76 = ptrtoint i8* %43 to i64, !dbg !5810
  %77 = sub i64 %76, %9, !dbg !5810
  %78 = ptrtoint i8* %37 to i64, !dbg !5810
  %79 = sub i64 %78, %9, !dbg !5810
  %80 = ptrtoint i8* %31 to i64, !dbg !5810
  %81 = sub i64 %80, %9, !dbg !5810
  %82 = ptrtoint i8* %18 to i64, !dbg !5810
  %83 = sub i64 %82, %9, !dbg !5810
  %84 = ptrtoint i8* %12 to i64, !dbg !5810
  %85 = sub i64 %84, %9, !dbg !5810
  %86 = shl i64 %85, 6, !dbg !5812
  %87 = or i64 %83, %86, !dbg !5813
  %88 = shl i64 %87, 6, !dbg !5812
  %89 = or i64 %81, %88, !dbg !5813
  %90 = shl i64 %89, 6, !dbg !5812
  %91 = or i64 %79, %90, !dbg !5813
  %92 = shl i64 %91, 6, !dbg !5812
  %93 = or i64 %77, %92, !dbg !5813
  %94 = shl i64 %93, 6, !dbg !5812
  %95 = or i64 %75, %94, !dbg !5813
  %96 = shl i64 %95, 6, !dbg !5812
  %97 = or i64 %73, %96, !dbg !5813
  %98 = shl i64 %97, 6, !dbg !5812
  %99 = or i64 %71, %98, !dbg !5813
  %100 = ptrtoint i8* %67 to i64, !dbg !5810
  %101 = sub i64 %100, %9, !dbg !5810
  %102 = shl i64 %99, 6, !dbg !5812
  %103 = or i64 %101, %102, !dbg !5813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5805
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5798
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %104 = shl i64 %103, 10, !dbg !5814
  %105 = sext i32 %1 to i64, !dbg !5815
  %106 = or i64 %104, %105, !dbg !5816
  br label %21, !dbg !5817
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @moduleTypeLookupModuleByName(i8*) local_unnamed_addr #0 !dbg !5818 {
  %2 = alloca %struct.listIter, align 8
  %3 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !5832, !tbaa !902
  %4 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %3) #9, !dbg !5833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5835
  %5 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #9, !dbg !5836
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !5838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5835
  br i1 %6, label %33, label %7, !dbg !5835

; <label>:7:                                      ; preds = %1
  %8 = bitcast %struct.listIter* %2 to i8*
  br label %9, !dbg !5835

; <label>:9:                                      ; preds = %7, %30
  %10 = phi %struct.dictEntry* [ %5, %7 ], [ %31, %30 ]
  %11 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !5839
  %12 = bitcast i8** %11 to %struct.RedisModule**, !dbg !5839
  %13 = load %struct.RedisModule*, %struct.RedisModule** %12, align 8, !dbg !5839, !tbaa !1137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #5, !dbg !5841
  %14 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %13, i64 0, i32 4, !dbg !5842
  %15 = load %struct.list*, %struct.list** %14, align 8, !dbg !5842, !tbaa !1696
  call void @listRewind(%struct.list* %15, %struct.listIter* nonnull %2) #9, !dbg !5844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5845
  %16 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !5846
  %17 = icmp eq %struct.listNode* %16, null, !dbg !5845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5845
  br i1 %17, label %30, label %18, !dbg !5845

; <label>:18:                                     ; preds = %9, %27
  %19 = phi %struct.listNode* [ %28, %27 ], [ %16, %9 ]
  %20 = getelementptr inbounds %struct.listNode, %struct.listNode* %19, i64 0, i32 2, !dbg !5848
  %21 = bitcast i8** %20 to %struct.RedisModuleType**, !dbg !5848
  %22 = load %struct.RedisModuleType*, %struct.RedisModuleType** %21, align 8, !dbg !5848, !tbaa !5611
  %23 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %22, i64 0, i32 11, i64 0, !dbg !5850
  %24 = call i32 @memcmp(i8* %0, i8* nonnull %23, i64 10) #9, !dbg !5852
  %25 = icmp eq i32 %24, 0, !dbg !5853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5854
  br i1 %25, label %26, label %27, !dbg !5854

; <label>:26:                                     ; preds = %18
  call void @dictReleaseIterator(%struct.dictIterator* %4) #9, !dbg !5855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5857
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #5, !dbg !5858
  br label %34

; <label>:27:                                     ; preds = %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5859
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %28 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !5846
  %29 = icmp eq %struct.listNode* %28, null, !dbg !5845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5845
  br i1 %29, label %30, label %18, !dbg !5845

; <label>:30:                                     ; preds = %27, %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5858
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #5, !dbg !5858
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %31 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #9, !dbg !5836
  %32 = icmp eq %struct.dictEntry* %31, null, !dbg !5838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5835
  br i1 %32, label %33, label %9, !dbg !5835

; <label>:33:                                     ; preds = %30, %1
  call void @dictReleaseIterator(%struct.dictIterator* %4) #9, !dbg !5860
  br label %34, !dbg !5861

; <label>:34:                                     ; preds = %26, %33
  %35 = phi %struct.RedisModuleType* [ null, %33 ], [ %22, %26 ], !dbg !5862
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5863
  ret %struct.RedisModuleType* %35, !dbg !5863
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64) local_unnamed_addr #0 !dbg !736 {
  %2 = alloca %struct.listIter, align 8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5868
  %3 = load %struct.RedisModuleType*, %struct.RedisModuleType** getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 0, i32 1), align 8, !dbg !5870, !tbaa !5871
  %4 = icmp eq %struct.RedisModuleType* %3, null, !dbg !5873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5874
  br i1 %4, label %11, label %5, !dbg !5874

; <label>:5:                                      ; preds = %1
  %6 = load i64, i64* getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 0, i32 0), align 16, !dbg !5875, !tbaa !5877
  %7 = icmp eq i64 %6, %0, !dbg !5878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5879
  br i1 %7, label %51, label %8, !dbg !5879

; <label>:8:                                      ; preds = %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5868
  %9 = load %struct.RedisModuleType*, %struct.RedisModuleType** getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 1, i32 1), align 8, !dbg !5870, !tbaa !5871
  %10 = icmp eq %struct.RedisModuleType* %9, null, !dbg !5873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5874
  br i1 %10, label %11, label %53, !dbg !5874

; <label>:11:                                     ; preds = %62, %56, %8, %1
  %12 = phi i64 [ 0, %1 ], [ 1, %8 ], [ 2, %56 ], [ 3, %62 ]
  %13 = phi i1 [ true, %1 ], [ true, %8 ], [ true, %56 ], [ false, %62 ], !dbg !5881
  %14 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !5883, !tbaa !902
  %15 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %14) #9, !dbg !5884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5886
  %16 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %15) #9, !dbg !5887
  %17 = icmp eq %struct.dictEntry* %16, null, !dbg !5889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5886
  br i1 %17, label %44, label %18, !dbg !5886

; <label>:18:                                     ; preds = %11
  %19 = bitcast %struct.listIter* %2 to i8*
  br label %20, !dbg !5886

; <label>:20:                                     ; preds = %18, %38
  %21 = phi %struct.dictEntry* [ %16, %18 ], [ %40, %38 ]
  %22 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %21, i64 0, i32 1, i32 0, !dbg !5890
  %23 = bitcast i8** %22 to %struct.RedisModule**, !dbg !5890
  %24 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !5890, !tbaa !1137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #5, !dbg !5892
  %25 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %24, i64 0, i32 4, !dbg !5893
  %26 = load %struct.list*, %struct.list** %25, align 8, !dbg !5893, !tbaa !1696
  call void @listRewind(%struct.list* %26, %struct.listIter* nonnull %2) #9, !dbg !5895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5896
  br label %27, !dbg !5896

; <label>:27:                                     ; preds = %30, %20
  %28 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !5897
  %29 = icmp eq %struct.listNode* %28, null, !dbg !5896
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5896
  br i1 %29, label %38, label %30, !dbg !5896

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %struct.listNode, %struct.listNode* %28, i64 0, i32 2, !dbg !5899
  %32 = bitcast i8** %31 to %struct.RedisModuleType**, !dbg !5899
  %33 = load %struct.RedisModuleType*, %struct.RedisModuleType** %32, align 8, !dbg !5899, !tbaa !5611
  %34 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %33, i64 0, i32 0, !dbg !5901
  %35 = load i64, i64* %34, align 8, !dbg !5901, !tbaa !5903
  %36 = xor i64 %35, %0, !dbg !5905
  %37 = icmp ult i64 %36, 1024, !dbg !5905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5907
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %37, label %38, label %27, !llvm.loop !5908

; <label>:38:                                     ; preds = %30, %27
  %39 = phi %struct.RedisModuleType* [ %33, %30 ], [ null, %27 ], !dbg !5910
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #5, !dbg !5911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5886
  %40 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %15) #9, !dbg !5887
  %41 = icmp ne %struct.dictEntry* %40, null, !dbg !5889
  %42 = icmp eq %struct.RedisModuleType* %39, null, !dbg !5912
  %43 = and i1 %42, %41, !dbg !5913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5886
  br i1 %43, label %20, label %44, !dbg !5886, !llvm.loop !5914

; <label>:44:                                     ; preds = %38, %11
  %45 = phi %struct.RedisModuleType* [ null, %11 ], [ %39, %38 ], !dbg !5915
  call void @dictReleaseIterator(%struct.dictIterator* %15) #9, !dbg !5917
  %46 = icmp ne %struct.RedisModuleType* %45, null, !dbg !5918
  %47 = and i1 %13, %46, !dbg !5920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5920
  br i1 %47, label %48, label %51, !dbg !5920

; <label>:48:                                     ; preds = %44
  %49 = getelementptr inbounds [3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 %12, i32 0, !dbg !5921
  store i64 %0, i64* %49, align 16, !dbg !5923, !tbaa !5877
  %50 = getelementptr inbounds [3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 %12, i32 1, !dbg !5924
  store %struct.RedisModuleType* %45, %struct.RedisModuleType** %50, align 8, !dbg !5925, !tbaa !5871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5926
  br label %51, !dbg !5926

; <label>:51:                                     ; preds = %44, %48, %5, %53, %59
  %52 = phi %struct.RedisModuleType* [ %3, %5 ], [ %9, %53 ], [ %57, %59 ], [ %45, %48 ], [ %45, %44 ], !dbg !5910
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5927
  ret %struct.RedisModuleType* %52, !dbg !5927

; <label>:53:                                     ; preds = %8
  %54 = load i64, i64* getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 1, i32 0), align 16, !dbg !5875, !tbaa !5877
  %55 = icmp eq i64 %54, %0, !dbg !5878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5879
  br i1 %55, label %51, label %56, !dbg !5879

; <label>:56:                                     ; preds = %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5868
  %57 = load %struct.RedisModuleType*, %struct.RedisModuleType** getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 2, i32 1), align 8, !dbg !5870, !tbaa !5871
  %58 = icmp eq %struct.RedisModuleType* %57, null, !dbg !5873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5874
  br i1 %58, label %11, label %59, !dbg !5874

; <label>:59:                                     ; preds = %56
  %60 = load i64, i64* getelementptr inbounds ([3 x %struct.anon.10], [3 x %struct.anon.10]* @moduleTypeLookupModuleByID.cache, i64 0, i64 2, i32 0), align 16, !dbg !5875, !tbaa !5877
  %61 = icmp eq i64 %60, %0, !dbg !5878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5879
  br i1 %61, label %51, label %62, !dbg !5879

; <label>:62:                                     ; preds = %59
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5868
  br label %11
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleTypeNameByID(i8* nocapture, i64) local_unnamed_addr #0 !dbg !5928 {
  %3 = load i8*, i8** @ModuleTypeNameCharSet, align 8, !dbg !5940, !tbaa !902
  %4 = getelementptr inbounds i8, i8* %0, i64 9, !dbg !5942
  store i8 0, i8* %4, align 1, !dbg !5943, !tbaa !1137
  %5 = getelementptr inbounds i8, i8* %0, i64 8, !dbg !5944
  %6 = lshr i64 %1, 10, !dbg !5946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5948
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %7 = and i64 %6, 63, !dbg !5950
  %8 = getelementptr inbounds i8, i8* %3, i64 %7, !dbg !5953
  %9 = load i8, i8* %8, align 1, !dbg !5953, !tbaa !1137
  %10 = getelementptr inbounds i8, i8* %0, i64 7, !dbg !5954
  store i8 %9, i8* %5, align 1, !dbg !5955, !tbaa !1137
  %11 = lshr i64 %1, 16, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %12 = and i64 %11, 63, !dbg !5950
  %13 = getelementptr inbounds i8, i8* %3, i64 %12, !dbg !5953
  %14 = load i8, i8* %13, align 1, !dbg !5953, !tbaa !1137
  %15 = getelementptr inbounds i8, i8* %0, i64 6, !dbg !5954
  store i8 %14, i8* %10, align 1, !dbg !5955, !tbaa !1137
  %16 = lshr i64 %1, 22, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %17 = and i64 %16, 63, !dbg !5950
  %18 = getelementptr inbounds i8, i8* %3, i64 %17, !dbg !5953
  %19 = load i8, i8* %18, align 1, !dbg !5953, !tbaa !1137
  %20 = getelementptr inbounds i8, i8* %0, i64 5, !dbg !5954
  store i8 %19, i8* %15, align 1, !dbg !5955, !tbaa !1137
  %21 = lshr i64 %1, 28, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %22 = and i64 %21, 63, !dbg !5950
  %23 = getelementptr inbounds i8, i8* %3, i64 %22, !dbg !5953
  %24 = load i8, i8* %23, align 1, !dbg !5953, !tbaa !1137
  %25 = getelementptr inbounds i8, i8* %0, i64 4, !dbg !5954
  store i8 %24, i8* %20, align 1, !dbg !5955, !tbaa !1137
  %26 = lshr i64 %1, 34, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %27 = and i64 %26, 63, !dbg !5950
  %28 = getelementptr inbounds i8, i8* %3, i64 %27, !dbg !5953
  %29 = load i8, i8* %28, align 1, !dbg !5953, !tbaa !1137
  %30 = getelementptr inbounds i8, i8* %0, i64 3, !dbg !5954
  store i8 %29, i8* %25, align 1, !dbg !5955, !tbaa !1137
  %31 = lshr i64 %1, 40, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %32 = and i64 %31, 63, !dbg !5950
  %33 = getelementptr inbounds i8, i8* %3, i64 %32, !dbg !5953
  %34 = load i8, i8* %33, align 1, !dbg !5953, !tbaa !1137
  %35 = getelementptr inbounds i8, i8* %0, i64 2, !dbg !5954
  store i8 %34, i8* %30, align 1, !dbg !5955, !tbaa !1137
  %36 = lshr i64 %1, 46, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %37 = and i64 %36, 63, !dbg !5950
  %38 = getelementptr inbounds i8, i8* %3, i64 %37, !dbg !5953
  %39 = load i8, i8* %38, align 1, !dbg !5953, !tbaa !1137
  %40 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !5954
  store i8 %39, i8* %35, align 1, !dbg !5955, !tbaa !1137
  %41 = lshr i64 %1, 52, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %42 = and i64 %41, 63, !dbg !5950
  %43 = getelementptr inbounds i8, i8* %3, i64 %42, !dbg !5953
  %44 = load i8, i8* %43, align 1, !dbg !5953, !tbaa !1137
  store i8 %44, i8* %40, align 1, !dbg !5955, !tbaa !1137
  %45 = lshr i64 %1, 58, !dbg !5956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  %46 = getelementptr inbounds i8, i8* %3, i64 %45, !dbg !5953
  %47 = load i8, i8* %46, align 1, !dbg !5953, !tbaa !1137
  store i8 %47, i8* %0, align 1, !dbg !5955, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5958
  ret void, !dbg !5958
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @RM_CreateDataType(%struct.RedisModuleCtx* nocapture readonly, i8*, i32, i8* nocapture readonly) #0 !dbg !264 {
  %5 = tail call i64 @moduleTypeEncodeId(i8* %1, i32 %2) #10, !dbg !5963
  %6 = icmp eq i64 %5, 0, !dbg !5965
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5967
  br i1 %6, label %60, label %7, !dbg !5967

; <label>:7:                                      ; preds = %4
  %8 = tail call %struct.RedisModuleType* @moduleTypeLookupModuleByName(i8* %1) #10, !dbg !5968
  %9 = icmp eq %struct.RedisModuleType* %8, null, !dbg !5970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5971
  br i1 %9, label %10, label %60, !dbg !5971

; <label>:10:                                     ; preds = %7
  %11 = bitcast i8* %3 to i64*, !dbg !5972
  %12 = load i64, i64* %11, align 8, !dbg !5973, !tbaa !2163
  %13 = icmp eq i64 %12, 0, !dbg !5975
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5977
  br i1 %13, label %58, label %14, !dbg !5977

; <label>:14:                                     ; preds = %10
  %15 = tail call i8* @zcalloc(i64 96) #9, !dbg !5978
  %16 = bitcast i8* %15 to %struct.RedisModuleType*, !dbg !5978
  %17 = bitcast i8* %15 to i64*, !dbg !5980
  store i64 %5, i64* %17, align 8, !dbg !5981, !tbaa !5903
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !5982
  %19 = bitcast %struct.RedisModule** %18 to i64*, !dbg !5982
  %20 = load i64, i64* %19, align 8, !dbg !5982, !tbaa !1171
  %21 = getelementptr inbounds i8, i8* %15, i64 8, !dbg !5983
  %22 = bitcast i8* %21 to i64*, !dbg !5984
  store i64 %20, i64* %22, align 8, !dbg !5984, !tbaa !5985
  %23 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !5986
  %24 = getelementptr inbounds i8, i8* %15, i64 16, !dbg !5987
  %25 = bitcast i8* %23 to <2 x i64>*, !dbg !5986
  %26 = load <2 x i64>, <2 x i64>* %25, align 8, !dbg !5986, !tbaa !902
  %27 = bitcast i8* %24 to <2 x i64>*, !dbg !5988
  store <2 x i64> %26, <2 x i64>* %27, align 8, !dbg !5988, !tbaa !902
  %28 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !5989
  %29 = getelementptr inbounds i8, i8* %15, i64 32, !dbg !5990
  %30 = bitcast i8* %28 to <2 x i64>*, !dbg !5989
  %31 = load <2 x i64>, <2 x i64>* %30, align 8, !dbg !5989, !tbaa !902
  %32 = bitcast i8* %29 to <2 x i64>*, !dbg !5991
  store <2 x i64> %31, <2 x i64>* %32, align 8, !dbg !5991, !tbaa !902
  %33 = getelementptr inbounds i8, i8* %3, i64 40, !dbg !5992
  %34 = getelementptr inbounds i8, i8* %15, i64 48, !dbg !5993
  %35 = bitcast i8* %33 to <2 x i64>*, !dbg !5992
  %36 = load <2 x i64>, <2 x i64>* %35, align 8, !dbg !5992, !tbaa !902
  %37 = bitcast i8* %34 to <2 x i64>*, !dbg !5994
  store <2 x i64> %36, <2 x i64>* %37, align 8, !dbg !5994, !tbaa !902
  %38 = load i64, i64* %11, align 8, !dbg !5995, !tbaa !5997
  %39 = icmp ugt i64 %38, 1, !dbg !6000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6001
  br i1 %39, label %40, label %51, !dbg !6001

; <label>:40:                                     ; preds = %14
  %41 = getelementptr inbounds i8, i8* %3, i64 56, !dbg !6003
  %42 = getelementptr inbounds i8, i8* %15, i64 64, !dbg !6005
  %43 = bitcast i8* %41 to <2 x i64>*, !dbg !6006
  %44 = load <2 x i64>, <2 x i64>* %43, align 8, !dbg !6006, !tbaa !902
  %45 = bitcast i8* %42 to <2 x i64>*, !dbg !6007
  store <2 x i64> %44, <2 x i64>* %45, align 8, !dbg !6007, !tbaa !902
  %46 = getelementptr inbounds i8, i8* %3, i64 72, !dbg !6008
  %47 = bitcast i8* %46 to i32*, !dbg !6008
  %48 = load i32, i32* %47, align 8, !dbg !6008, !tbaa !6009
  %49 = getelementptr inbounds i8, i8* %15, i64 80, !dbg !6010
  %50 = bitcast i8* %49 to i32*, !dbg !6010
  store i32 %48, i32* %50, align 8, !dbg !6011, !tbaa !6012
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6013
  br label %51, !dbg !6013

; <label>:51:                                     ; preds = %40, %14
  %52 = getelementptr inbounds i8, i8* %15, i64 84, !dbg !6014
  %53 = tail call i8* @memcpy(i8* nonnull %52, i8* %1, i64 10) #9, !dbg !6015
  %54 = load %struct.RedisModule*, %struct.RedisModule** %18, align 8, !dbg !6016, !tbaa !1171
  %55 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %54, i64 0, i32 4, !dbg !6017
  %56 = load %struct.list*, %struct.list** %55, align 8, !dbg !6017, !tbaa !1696
  %57 = tail call %struct.list* @listAddNodeTail(%struct.list* %56, i8* %15) #9, !dbg !6018
  br label %58

; <label>:58:                                     ; preds = %10, %51
  %59 = phi %struct.RedisModuleType* [ %16, %51 ], [ null, %10 ], !dbg !6019
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %60

; <label>:60:                                     ; preds = %7, %4, %58
  %61 = phi %struct.RedisModuleType* [ %59, %58 ], [ null, %4 ], [ null, %7 ], !dbg !6020
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6021
  ret %struct.RedisModuleType* %61, !dbg !6021
}

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeTail(%struct.list*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ModuleTypeSetValue(%struct.RedisModuleKey* nocapture, %struct.RedisModuleType*, i8*) #0 !dbg !6022 {
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 5, !dbg !6033
  %5 = load i32, i32* %4, align 8, !dbg !6033, !tbaa !1030
  %6 = and i32 %5, 2, !dbg !6035
  %7 = icmp eq i32 %6, 0, !dbg !6035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6036
  br i1 %7, label %29, label %8, !dbg !6036

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 4, !dbg !6037
  %10 = load i8*, i8** %9, align 8, !dbg !6037, !tbaa !3203
  %11 = icmp eq i8* %10, null, !dbg !6038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6039
  br i1 %11, label %12, label %29, !dbg !6039

; <label>:12:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6042
  %13 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !6043
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !6043, !tbaa !1038
  %15 = icmp eq %struct.redisObject* %14, null, !dbg !6044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6045
  %16 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 1, !dbg !6046
  br i1 %15, label %17, label %19, !dbg !6045

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !6047
  br label %24, !dbg !6045

; <label>:19:                                     ; preds = %12
  %20 = load %struct.redisDb*, %struct.redisDb** %16, align 8, !dbg !6048, !tbaa !1066
  %21 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 2, !dbg !6049
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !6049, !tbaa !1068
  %23 = tail call i32 @dbDelete(%struct.redisDb* %20, %struct.redisObject* %22) #9, !dbg !6050
  store %struct.redisObject* null, %struct.redisObject** %13, align 8, !dbg !6051, !tbaa !1038
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6052
  br label %24, !dbg !6052

; <label>:24:                                     ; preds = %17, %19
  %25 = phi %struct.redisObject** [ %18, %17 ], [ %21, %19 ], !dbg !6047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6053
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6054
  %26 = tail call %struct.redisObject* @createModuleObject(%struct.RedisModuleType* %1, i8* %2) #9, !dbg !6055
  %27 = load %struct.redisDb*, %struct.redisDb** %16, align 8, !dbg !6057, !tbaa !1066
  %28 = load %struct.redisObject*, %struct.redisObject** %25, align 8, !dbg !6047, !tbaa !1068
  tail call void @setKey(%struct.redisDb* %27, %struct.redisObject* %28, %struct.redisObject* %26) #9, !dbg !6058
  tail call void @decrRefCount(%struct.redisObject* %26) #9, !dbg !6059
  store %struct.redisObject* %26, %struct.redisObject** %13, align 8, !dbg !6060, !tbaa !1038
  br label %29

; <label>:29:                                     ; preds = %3, %8, %24
  %30 = phi i32 [ 0, %24 ], [ 1, %8 ], [ 1, %3 ], !dbg !6046
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6061
  ret i32 %30, !dbg !6061
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createModuleObject(%struct.RedisModuleType*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleType* @RM_ModuleTypeGetType(%struct.RedisModuleKey* readonly) #0 !dbg !6062 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !6075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6077
  br i1 %2, label %18, label %3, !dbg !6077

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !6078
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !6078, !tbaa !1038
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !6079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6080
  br i1 %6, label %18, label %7, !dbg !6080

; <label>:7:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6084
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !6085
  %9 = load i32, i32* %8, align 8, !dbg !6085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6086
  %10 = trunc i32 %9 to i4, !dbg !6086
  %11 = icmp eq i4 %10, 5, !dbg !6086
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6088
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6089
  br i1 %11, label %12, label %18, !dbg !6086

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !6090
  %14 = bitcast i8** %13 to %struct.moduleValue**, !dbg !6090
  %15 = load %struct.moduleValue*, %struct.moduleValue** %14, align 8, !dbg !6090, !tbaa !1046
  %16 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %15, i64 0, i32 0, !dbg !6092
  %17 = load %struct.RedisModuleType*, %struct.RedisModuleType** %16, align 8, !dbg !6092, !tbaa !6093
  br label %18

; <label>:18:                                     ; preds = %7, %1, %3, %12
  %19 = phi %struct.RedisModuleType* [ %17, %12 ], [ null, %3 ], [ null, %1 ], [ null, %7 ], !dbg !6095
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6096
  ret %struct.RedisModuleType* %19, !dbg !6096
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_ModuleTypeGetValue(%struct.RedisModuleKey* readonly) #0 !dbg !6097 {
  %2 = icmp eq %struct.RedisModuleKey* %0, null, !dbg !6104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6106
  br i1 %2, label %18, label %3, !dbg !6106

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.RedisModuleKey, %struct.RedisModuleKey* %0, i64 0, i32 3, !dbg !6107
  %5 = load %struct.redisObject*, %struct.redisObject** %4, align 8, !dbg !6107, !tbaa !1038
  %6 = icmp eq %struct.redisObject* %5, null, !dbg !6108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6109
  br i1 %6, label %18, label %7, !dbg !6109

; <label>:7:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6112
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6113
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 0, !dbg !6114
  %9 = load i32, i32* %8, align 8, !dbg !6114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6115
  %10 = trunc i32 %9 to i4, !dbg !6115
  %11 = icmp eq i4 %10, 5, !dbg !6115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6118
  br i1 %11, label %12, label %18, !dbg !6115

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %5, i64 0, i32 2, !dbg !6119
  %14 = bitcast i8** %13 to %struct.moduleValue**, !dbg !6119
  %15 = load %struct.moduleValue*, %struct.moduleValue** %14, align 8, !dbg !6119, !tbaa !1046
  %16 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %15, i64 0, i32 1, !dbg !6121
  %17 = load i8*, i8** %16, align 8, !dbg !6121, !tbaa !6122
  br label %18

; <label>:18:                                     ; preds = %7, %1, %3, %12
  %19 = phi i8* [ %17, %12 ], [ null, %3 ], [ null, %1 ], [ null, %7 ], !dbg !6123
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6124
  ret i8* %19, !dbg !6124
}

; Function Attrs: noredzone noreturn nounwind
define dso_local void @moduleRDBLoadError(%struct.RedisModuleIO* nocapture readonly) local_unnamed_addr #7 !dbg !6125 {
  %2 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6133
  %3 = load %struct.RedisModuleType*, %struct.RedisModuleType** %2, align 8, !dbg !6133, !tbaa !6134
  %4 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %3, i64 0, i32 1, !dbg !6136
  %5 = load %struct.RedisModule*, %struct.RedisModule** %4, align 8, !dbg !6136, !tbaa !5985
  %6 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %5, i64 0, i32 1, !dbg !6137
  %7 = load i8*, i8** %6, align 8, !dbg !6137, !tbaa !1173
  %8 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %3, i64 0, i32 11, i64 0, !dbg !6138
  %9 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6139
  %10 = load i64, i64* %9, align 8, !dbg !6139, !tbaa !6140
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.27, i64 0, i64 0), i8* %7, i8* nonnull %8, i64 %10) #9, !dbg !6141
  tail call void @exit(i32 1) #12, !dbg !6142
  unreachable
}

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #6

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveUnsigned(%struct.RedisModuleIO* nocapture, i64) #0 !dbg !6143 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6152
  %4 = load i32, i32* %3, align 8, !dbg !6152, !tbaa !6154
  %5 = icmp eq i32 %4, 0, !dbg !6155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6156
  br i1 %5, label %6, label %25, !dbg !6156

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6157
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6157, !tbaa !6158
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 2) #9, !dbg !6159
  %10 = icmp eq i32 %9, -1, !dbg !6161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6163
  br i1 %10, label %23, label %11, !dbg !6163

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6164
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6165
  %14 = load i64, i64* %13, align 8, !dbg !6166, !tbaa !6140
  %15 = add i64 %14, %12, !dbg !6166
  store i64 %15, i64* %13, align 8, !dbg !6166, !tbaa !6140
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6167, !tbaa !6158
  %17 = tail call i32 @rdbSaveLen(%struct._rio* %16, i64 %1) #9, !dbg !6168
  %18 = icmp eq i32 %17, -1, !dbg !6169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6171
  br i1 %18, label %23, label %19, !dbg !6171

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6172
  %21 = load i64, i64* %13, align 8, !dbg !6173, !tbaa !6140
  %22 = add i64 %21, %20, !dbg !6173
  store i64 %22, i64* %13, align 8, !dbg !6173, !tbaa !6140
  br label %24, !dbg !6174

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6175, !tbaa !6154
  br label %24, !dbg !6176

; <label>:24:                                     ; preds = %23, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6177
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %25

; <label>:25:                                     ; preds = %2, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6176
  ret void, !dbg !6176
}

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveLen(%struct._rio*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_LoadUnsigned(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6178 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6189
  %4 = load i32, i32* %3, align 4, !dbg !6189, !tbaa !6190
  %5 = icmp eq i32 %4, 2, !dbg !6191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6192
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6193
  br i1 %5, label %7, label %11, !dbg !6192

; <label>:7:                                      ; preds = %1
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6194, !tbaa !6158
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #9, !dbg !6195
  %10 = icmp eq i64 %9, 2, !dbg !6197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6200
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %1, %7
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6201, !tbaa !6158
  %13 = call i32 @rdbLoadLenByRef(%struct._rio* %12, i32* null, i64* nonnull %2) #9, !dbg !6203
  %14 = icmp eq i32 %13, -1, !dbg !6205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6207
  br i1 %14, label %15, label %16, !dbg !6207

; <label>:15:                                     ; preds = %11, %7
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #10, !dbg !6208
  unreachable

; <label>:16:                                     ; preds = %11
  %17 = load i64, i64* %2, align 8, !dbg !6209, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6211
  ret i64 %17, !dbg !6211
}

; Function Attrs: noredzone
declare dso_local i64 @rdbLoadLen(%struct._rio*, i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadLenByRef(%struct._rio*, i32*, i64*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveSigned(%struct.RedisModuleIO* nocapture, i64) #0 !dbg !6212 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6229
  %4 = load i32, i32* %3, align 8, !dbg !6229, !tbaa !6154
  %5 = icmp eq i32 %4, 0, !dbg !6230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6231
  br i1 %5, label %6, label %25, !dbg !6231

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6232
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6232, !tbaa !6158
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 2) #9, !dbg !6233
  %10 = icmp eq i32 %9, -1, !dbg !6235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6236
  br i1 %10, label %23, label %11, !dbg !6236

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6237
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6238
  %14 = load i64, i64* %13, align 8, !dbg !6239, !tbaa !6140
  %15 = add i64 %14, %12, !dbg !6239
  store i64 %15, i64* %13, align 8, !dbg !6239, !tbaa !6140
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6240, !tbaa !6158
  %17 = tail call i32 @rdbSaveLen(%struct._rio* %16, i64 %1) #9, !dbg !6241
  %18 = icmp eq i32 %17, -1, !dbg !6242
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6243
  br i1 %18, label %23, label %19, !dbg !6243

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6244
  %21 = load i64, i64* %13, align 8, !dbg !6245, !tbaa !6140
  %22 = add i64 %21, %20, !dbg !6245
  store i64 %22, i64* %13, align 8, !dbg !6245, !tbaa !6140
  br label %24, !dbg !6246

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6247, !tbaa !6154
  br label %24, !dbg !6248

; <label>:24:                                     ; preds = %23, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6249
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %25

; <label>:25:                                     ; preds = %2, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6250
  ret void, !dbg !6250
}

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_LoadSigned(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6251 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*, !dbg !6262
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3), !dbg !6262
  %4 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6264
  %5 = load i32, i32* %4, align 4, !dbg !6264, !tbaa !6190
  %6 = icmp eq i32 %5, 2, !dbg !6265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6266
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6267
  br i1 %6, label %8, label %12, !dbg !6266

; <label>:8:                                      ; preds = %1
  %9 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6268, !tbaa !6158
  %10 = tail call i64 @rdbLoadLen(%struct._rio* %9, i32* null) #9, !dbg !6269
  %11 = icmp eq i64 %10, 2, !dbg !6271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6272
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6273
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %11, label %12, label %16

; <label>:12:                                     ; preds = %8, %1
  %13 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6274, !tbaa !6158
  %14 = call i32 @rdbLoadLenByRef(%struct._rio* %13, i32* null, i64* nonnull %2) #9, !dbg !6276
  %15 = icmp eq i32 %14, -1, !dbg !6278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6279
  br i1 %15, label %16, label %17, !dbg !6279

; <label>:16:                                     ; preds = %12, %8
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #9, !dbg !6280
  unreachable

; <label>:17:                                     ; preds = %12
  %18 = load i64, i64* %2, align 8, !dbg !6281, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6282
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3), !dbg !6283
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6285
  ret i64 %18, !dbg !6285
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveString(%struct.RedisModuleIO* nocapture, %struct.redisObject*) #0 !dbg !6286 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6296
  %4 = load i32, i32* %3, align 8, !dbg !6296, !tbaa !6154
  %5 = icmp eq i32 %4, 0, !dbg !6298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6299
  br i1 %5, label %6, label %24, !dbg !6299

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6300
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6300, !tbaa !6158
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 5) #9, !dbg !6301
  %10 = icmp eq i32 %9, -1, !dbg !6302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6304
  br i1 %10, label %22, label %11, !dbg !6304

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6301
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6306
  %14 = load i64, i64* %13, align 8, !dbg !6307, !tbaa !6140
  %15 = add i64 %14, %12, !dbg !6307
  store i64 %15, i64* %13, align 8, !dbg !6307, !tbaa !6140
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6308, !tbaa !6158
  %17 = tail call i64 @rdbSaveStringObject(%struct._rio* %16, %struct.redisObject* %1) #9, !dbg !6309
  %18 = icmp eq i64 %17, -1, !dbg !6310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6312
  br i1 %18, label %22, label %19, !dbg !6312

; <label>:19:                                     ; preds = %11
  %20 = load i64, i64* %13, align 8, !dbg !6313, !tbaa !6140
  %21 = add i64 %20, %17, !dbg !6313
  store i64 %21, i64* %13, align 8, !dbg !6313, !tbaa !6140
  br label %23, !dbg !6314

; <label>:22:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6315, !tbaa !6154
  br label %23, !dbg !6316

; <label>:23:                                     ; preds = %22, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6317
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %24

; <label>:24:                                     ; preds = %2, %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6316
  ret void, !dbg !6316
}

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveStringObject(%struct._rio*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveStringBuffer(%struct.RedisModuleIO* nocapture, i8*, i64) #0 !dbg !6318 {
  %4 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6329
  %5 = load i32, i32* %4, align 8, !dbg !6329, !tbaa !6154
  %6 = icmp eq i32 %5, 0, !dbg !6331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6332
  br i1 %6, label %7, label %25, !dbg !6332

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6333
  %9 = load %struct._rio*, %struct._rio** %8, align 8, !dbg !6333, !tbaa !6158
  %10 = tail call i32 @rdbSaveLen(%struct._rio* %9, i64 5) #9, !dbg !6334
  %11 = icmp eq i32 %10, -1, !dbg !6335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6337
  br i1 %11, label %23, label %12, !dbg !6337

; <label>:12:                                     ; preds = %7
  %13 = sext i32 %10 to i64, !dbg !6334
  %14 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6339
  %15 = load i64, i64* %14, align 8, !dbg !6340, !tbaa !6140
  %16 = add i64 %15, %13, !dbg !6340
  store i64 %16, i64* %14, align 8, !dbg !6340, !tbaa !6140
  %17 = load %struct._rio*, %struct._rio** %8, align 8, !dbg !6341, !tbaa !6158
  %18 = tail call i64 @rdbSaveRawString(%struct._rio* %17, i8* %1, i64 %2) #9, !dbg !6342
  %19 = icmp eq i64 %18, -1, !dbg !6343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6345
  br i1 %19, label %23, label %20, !dbg !6345

; <label>:20:                                     ; preds = %12
  %21 = load i64, i64* %14, align 8, !dbg !6346, !tbaa !6140
  %22 = add i64 %21, %18, !dbg !6346
  store i64 %22, i64* %14, align 8, !dbg !6346, !tbaa !6140
  br label %24, !dbg !6347

; <label>:23:                                     ; preds = %12, %7
  store i32 1, i32* %4, align 8, !dbg !6348, !tbaa !6154
  br label %24, !dbg !6349

; <label>:24:                                     ; preds = %23, %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6350
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %25

; <label>:25:                                     ; preds = %3, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6349
  ret void, !dbg !6349
}

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveRawString(%struct._rio*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8* @moduleLoadString(%struct.RedisModuleIO* nocapture readonly, i32, i64*) local_unnamed_addr #0 !dbg !6351 {
  %4 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6365
  %5 = load i32, i32* %4, align 4, !dbg !6365, !tbaa !6190
  %6 = icmp eq i32 %5, 2, !dbg !6366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6367
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6368
  br i1 %6, label %8, label %12, !dbg !6367

; <label>:8:                                      ; preds = %3
  %9 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6369, !tbaa !6158
  %10 = tail call i64 @rdbLoadLen(%struct._rio* %9, i32* null) #9, !dbg !6370
  %11 = icmp eq i64 %10, 5, !dbg !6372
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6374
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6375
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %11, label %12, label %18

; <label>:12:                                     ; preds = %3, %8
  %13 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6376, !tbaa !6158
  %14 = icmp eq i32 %1, 0, !dbg !6377
  %15 = select i1 %14, i32 0, i32 2, !dbg !6377
  %16 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %13, i32 %15, i64* %2) #9, !dbg !6378
  %17 = icmp eq i8* %16, null, !dbg !6380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6382
  br i1 %17, label %18, label %19, !dbg !6382

; <label>:18:                                     ; preds = %12, %8
  tail call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #10, !dbg !6383
  unreachable

; <label>:19:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6385
  ret i8* %16, !dbg !6385
}

; Function Attrs: noredzone
declare dso_local i8* @rdbGenericLoadStringObject(%struct._rio*, i32, i64*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_LoadString(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6386 {
  %2 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6396
  %3 = load i32, i32* %2, align 4, !dbg !6396, !tbaa !6190
  %4 = icmp eq i32 %3, 2, !dbg !6397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6398
  %5 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6399
  br i1 %4, label %6, label %10, !dbg !6398

; <label>:6:                                      ; preds = %1
  %7 = load %struct._rio*, %struct._rio** %5, align 8, !dbg !6400, !tbaa !6158
  %8 = tail call i64 @rdbLoadLen(%struct._rio* %7, i32* null) #9, !dbg !6401
  %9 = icmp eq i64 %8, 5, !dbg !6403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6405
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %6, %1
  %11 = load %struct._rio*, %struct._rio** %5, align 8, !dbg !6406, !tbaa !6158
  %12 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %11, i32 0, i64* null) #9, !dbg !6407
  %13 = icmp eq i8* %12, null, !dbg !6409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6410
  br i1 %13, label %14, label %15, !dbg !6410

; <label>:14:                                     ; preds = %10, %6
  tail call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #9, !dbg !6411
  unreachable

; <label>:15:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6413
  %16 = bitcast i8* %12 to %struct.redisObject*, !dbg !6414
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6415
  ret %struct.redisObject* %16, !dbg !6415
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_LoadStringBuffer(%struct.RedisModuleIO* nocapture readonly, i64*) #0 !dbg !6416 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6428
  %4 = load i32, i32* %3, align 4, !dbg !6428, !tbaa !6190
  %5 = icmp eq i32 %4, 2, !dbg !6429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6430
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6431
  br i1 %5, label %7, label %11, !dbg !6430

; <label>:7:                                      ; preds = %2
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6432, !tbaa !6158
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #9, !dbg !6433
  %10 = icmp eq i64 %9, 5, !dbg !6435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6437
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %7, %2
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6438, !tbaa !6158
  %13 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %12, i32 2, i64* %1) #9, !dbg !6439
  %14 = icmp eq i8* %13, null, !dbg !6441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6442
  br i1 %14, label %15, label %16, !dbg !6442

; <label>:15:                                     ; preds = %11, %7
  tail call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #9, !dbg !6443
  unreachable

; <label>:16:                                     ; preds = %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6444
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6446
  ret i8* %13, !dbg !6446
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveDouble(%struct.RedisModuleIO* nocapture, double) #0 !dbg !6447 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6456
  %4 = load i32, i32* %3, align 8, !dbg !6456, !tbaa !6154
  %5 = icmp eq i32 %4, 0, !dbg !6458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6459
  br i1 %5, label %6, label %25, !dbg !6459

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6460
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6460, !tbaa !6158
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 4) #9, !dbg !6461
  %10 = icmp eq i32 %9, -1, !dbg !6463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6465
  br i1 %10, label %23, label %11, !dbg !6465

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6466
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6467
  %14 = load i64, i64* %13, align 8, !dbg !6468, !tbaa !6140
  %15 = add i64 %14, %12, !dbg !6468
  store i64 %15, i64* %13, align 8, !dbg !6468, !tbaa !6140
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6469, !tbaa !6158
  %17 = tail call i32 @rdbSaveBinaryDoubleValue(%struct._rio* %16, double %1) #9, !dbg !6470
  %18 = icmp eq i32 %17, -1, !dbg !6471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6473
  br i1 %18, label %23, label %19, !dbg !6473

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6474
  %21 = load i64, i64* %13, align 8, !dbg !6475, !tbaa !6140
  %22 = add i64 %21, %20, !dbg !6475
  store i64 %22, i64* %13, align 8, !dbg !6475, !tbaa !6140
  br label %24, !dbg !6476

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6477, !tbaa !6154
  br label %24, !dbg !6478

; <label>:24:                                     ; preds = %23, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6479
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %25

; <label>:25:                                     ; preds = %2, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6478
  ret void, !dbg !6478
}

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveBinaryDoubleValue(%struct._rio*, double) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local double @RM_LoadDouble(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6480 {
  %2 = alloca double, align 8
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6491
  %4 = load i32, i32* %3, align 4, !dbg !6491, !tbaa !6190
  %5 = icmp eq i32 %4, 2, !dbg !6492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6493
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6494
  br i1 %5, label %7, label %11, !dbg !6493

; <label>:7:                                      ; preds = %1
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6495, !tbaa !6158
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #9, !dbg !6496
  %10 = icmp eq i64 %9, 4, !dbg !6498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6501
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %1, %7
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6502, !tbaa !6158
  %13 = call i32 @rdbLoadBinaryDoubleValue(%struct._rio* %12, double* nonnull %2) #9, !dbg !6504
  %14 = icmp eq i32 %13, -1, !dbg !6506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6508
  br i1 %14, label %15, label %16, !dbg !6508

; <label>:15:                                     ; preds = %11, %7
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #10, !dbg !6509
  unreachable

; <label>:16:                                     ; preds = %11
  %17 = load double, double* %2, align 8, !dbg !6510, !tbaa !4390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6512
  ret double %17, !dbg !6512
}

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadBinaryDoubleValue(%struct._rio*, double*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SaveFloat(%struct.RedisModuleIO* nocapture, float) #0 !dbg !6513 {
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6522
  %4 = load i32, i32* %3, align 8, !dbg !6522, !tbaa !6154
  %5 = icmp eq i32 %4, 0, !dbg !6524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6525
  br i1 %5, label %6, label %25, !dbg !6525

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6526
  %8 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6526, !tbaa !6158
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %8, i64 3) #9, !dbg !6527
  %10 = icmp eq i32 %9, -1, !dbg !6529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6531
  br i1 %10, label %23, label %11, !dbg !6531

; <label>:11:                                     ; preds = %6
  %12 = sext i32 %9 to i64, !dbg !6532
  %13 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 0, !dbg !6533
  %14 = load i64, i64* %13, align 8, !dbg !6534, !tbaa !6140
  %15 = add i64 %14, %12, !dbg !6534
  store i64 %15, i64* %13, align 8, !dbg !6534, !tbaa !6140
  %16 = load %struct._rio*, %struct._rio** %7, align 8, !dbg !6535, !tbaa !6158
  %17 = tail call i32 @rdbSaveBinaryFloatValue(%struct._rio* %16, float %1) #9, !dbg !6536
  %18 = icmp eq i32 %17, -1, !dbg !6537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6539
  br i1 %18, label %23, label %19, !dbg !6539

; <label>:19:                                     ; preds = %11
  %20 = sext i32 %17 to i64, !dbg !6540
  %21 = load i64, i64* %13, align 8, !dbg !6541, !tbaa !6140
  %22 = add i64 %21, %20, !dbg !6541
  store i64 %22, i64* %13, align 8, !dbg !6541, !tbaa !6140
  br label %24, !dbg !6542

; <label>:23:                                     ; preds = %11, %6
  store i32 1, i32* %3, align 8, !dbg !6543, !tbaa !6154
  br label %24, !dbg !6544

; <label>:24:                                     ; preds = %23, %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6545
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %25

; <label>:25:                                     ; preds = %2, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6544
  ret void, !dbg !6544
}

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveBinaryFloatValue(%struct._rio*, float) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local float @RM_LoadFloat(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6546 {
  %2 = alloca float, align 4
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 4, !dbg !6557
  %4 = load i32, i32* %3, align 4, !dbg !6557, !tbaa !6190
  %5 = icmp eq i32 %4, 2, !dbg !6558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6559
  %6 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6560
  br i1 %5, label %7, label %11, !dbg !6559

; <label>:7:                                      ; preds = %1
  %8 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6561, !tbaa !6158
  %9 = tail call i64 @rdbLoadLen(%struct._rio* %8, i32* null) #9, !dbg !6562
  %10 = icmp eq i64 %9, 3, !dbg !6564
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6567
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %1, %7
  %12 = load %struct._rio*, %struct._rio** %6, align 8, !dbg !6568, !tbaa !6158
  %13 = call i32 @rdbLoadBinaryFloatValue(%struct._rio* %12, float* nonnull %2) #9, !dbg !6570
  %14 = icmp eq i32 %13, -1, !dbg !6572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6574
  br i1 %14, label %15, label %16, !dbg !6574

; <label>:15:                                     ; preds = %11, %7
  call void @moduleRDBLoadError(%struct.RedisModuleIO* nonnull %0) #10, !dbg !6575
  unreachable

; <label>:16:                                     ; preds = %11
  %17 = load float, float* %2, align 4, !dbg !6576, !tbaa !3139
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6578
  ret float %17, !dbg !6578
}

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadBinaryFloatValue(%struct._rio*, float*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveModulesAux(%struct._rio*, i32) local_unnamed_addr #0 !dbg !6579 {
  %3 = alloca %struct.listIter, align 8
  %4 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !6598, !tbaa !902
  %5 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %4) #9, !dbg !6599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6601
  %6 = bitcast %struct.listIter* %3 to i8*
  %7 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #9, !dbg !6602
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !6604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6601
  br i1 %8, label %46, label %9, !dbg !6601

; <label>:9:                                      ; preds = %2, %42
  %10 = phi %struct.dictEntry* [ %44, %42 ], [ %7, %2 ]
  %11 = phi i64 [ %43, %42 ], [ 0, %2 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !6605
  %13 = bitcast i8** %12 to %struct.RedisModule**, !dbg !6605
  %14 = load %struct.RedisModule*, %struct.RedisModule** %13, align 8, !dbg !6605, !tbaa !1137
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5, !dbg !6607
  %15 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %14, i64 0, i32 4, !dbg !6608
  %16 = load %struct.list*, %struct.list** %15, align 8, !dbg !6608, !tbaa !1696
  call void @listRewind(%struct.list* %16, %struct.listIter* nonnull %3) #9, !dbg !6610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6611
  %17 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #9, !dbg !6612
  %18 = icmp eq %struct.listNode* %17, null, !dbg !6611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6611
  br i1 %18, label %42, label %19, !dbg !6611

; <label>:19:                                     ; preds = %9, %38
  %20 = phi %struct.listNode* [ %40, %38 ], [ %17, %9 ]
  %21 = phi i64 [ %39, %38 ], [ %11, %9 ]
  %22 = getelementptr inbounds %struct.listNode, %struct.listNode* %20, i64 0, i32 2, !dbg !6614
  %23 = bitcast i8** %22 to %struct.RedisModuleType**, !dbg !6614
  %24 = load %struct.RedisModuleType*, %struct.RedisModuleType** %23, align 8, !dbg !6614, !tbaa !5611
  %25 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %24, i64 0, i32 9, !dbg !6616
  %26 = load void (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i32)** %25, align 8, !dbg !6616, !tbaa !6618
  %27 = icmp eq void (%struct.RedisModuleIO*, i32)* %26, null, !dbg !6619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6620
  br i1 %27, label %38, label %28, !dbg !6620

; <label>:28:                                     ; preds = %19
  %29 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %24, i64 0, i32 10, !dbg !6621
  %30 = load i32, i32* %29, align 8, !dbg !6621, !tbaa !6012
  %31 = and i32 %30, %1, !dbg !6622
  %32 = icmp eq i32 %31, 0, !dbg !6622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6623
  br i1 %32, label %38, label %33, !dbg !6623

; <label>:33:                                     ; preds = %28
  %34 = call i64 @rdbSaveSingleModuleAux(%struct._rio* %0, i32 %1, %struct.RedisModuleType* nonnull %24) #9, !dbg !6624
  %35 = icmp eq i64 %34, -1, !dbg !6626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6628
  br i1 %35, label %48, label %36, !dbg !6628

; <label>:36:                                     ; preds = %33
  %37 = add i64 %34, %21, !dbg !6629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6630
  br label %38

; <label>:38:                                     ; preds = %28, %19, %36
  %39 = phi i64 [ %37, %36 ], [ %21, %19 ], [ %21, %28 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %40 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #9, !dbg !6612
  %41 = icmp eq %struct.listNode* %40, null, !dbg !6611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6611
  br i1 %41, label %42, label %19, !dbg !6611, !llvm.loop !6631

; <label>:42:                                     ; preds = %38, %9
  %43 = phi i64 [ %11, %9 ], [ %39, %38 ], !dbg !6597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6632
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5, !dbg !6632
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %44 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #9, !dbg !6602
  %45 = icmp eq %struct.dictEntry* %44, null, !dbg !6604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6601
  br i1 %45, label %46, label %9, !dbg !6601

; <label>:46:                                     ; preds = %42, %2
  %47 = phi i64 [ 0, %2 ], [ %43, %42 ], !dbg !6597
  call void @dictReleaseIterator(%struct.dictIterator* %5) #9, !dbg !6633
  br label %49, !dbg !6634

; <label>:48:                                     ; preds = %33
  call void @dictReleaseIterator(%struct.dictIterator* %5) #9, !dbg !6635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6637
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5, !dbg !6632
  br label %49, !dbg !6638

; <label>:49:                                     ; preds = %48, %46
  %50 = phi i64 [ %47, %46 ], [ -1, %48 ], !dbg !6639
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6638
  ret i64 %50, !dbg !6638
}

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveSingleModuleAux(%struct._rio*, i32, %struct.RedisModuleType*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_DigestAddStringBuffer(%struct.RedisModuleDigest*, i8*, i64) #0 !dbg !6640 {
  %4 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 0, i64 0, !dbg !6652
  tail call void @mixDigest(i8* %4, i8* %1, i64 %2) #9, !dbg !6653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6654
  ret void, !dbg !6654
}

; Function Attrs: noredzone
declare dso_local void @mixDigest(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_DigestAddLongLong(%struct.RedisModuleDigest*, i64) #0 !dbg !6655 {
  %3 = alloca [21 x i8], align 16
  %4 = getelementptr inbounds [21 x i8], [21 x i8]* %3, i64 0, i64 0, !dbg !6665
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %4) #5, !dbg !6665
  %5 = call i32 @ll2string(i8* nonnull %4, i64 21, i64 %1) #9, !dbg !6667
  %6 = sext i32 %5 to i64, !dbg !6667
  %7 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 0, i64 0, !dbg !6669
  call void @mixDigest(i8* %7, i8* nonnull %4, i64 %6) #9, !dbg !6670
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %4) #5, !dbg !6671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6671
  ret void, !dbg !6671
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_DigestEndSequence(%struct.RedisModuleDigest*) #0 !dbg !6672 {
  %2 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 1, i64 0, !dbg !6678
  %3 = getelementptr inbounds %struct.RedisModuleDigest, %struct.RedisModuleDigest* %0, i64 0, i32 0, i64 0, !dbg !6679
  tail call void @xorDigest(i8* nonnull %2, i8* %3, i64 20) #9, !dbg !6680
  %4 = tail call i8* @memset(i8* %3, i32 0, i64 20) #9, !dbg !6681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6682
  ret void, !dbg !6682
}

; Function Attrs: noredzone
declare dso_local void @xorDigest(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_EmitAOF(%struct.RedisModuleIO* nocapture, i8*, i8*, ...) #0 !dbg !6683 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 3, !dbg !6699
  %8 = load i32, i32* %7, align 8, !dbg !6699, !tbaa !6154
  %9 = icmp eq i32 %8, 0, !dbg !6701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6702
  br i1 %9, label %10, label %70, !dbg !6702

; <label>:10:                                     ; preds = %3
  %11 = bitcast i32* %4 to i8*, !dbg !6704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #5, !dbg !6704
  store i32 0, i32* %4, align 4, !dbg !6705, !tbaa !933
  %12 = bitcast i32* %5 to i8*, !dbg !6704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #5, !dbg !6704
  store i32 0, i32* %5, align 4, !dbg !6706, !tbaa !933
  %13 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*, !dbg !6707
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #5, !dbg !6707
  %14 = tail call %struct.redisCommand* @lookupCommandByCString(i8* %1) #9, !dbg !6709
  %15 = icmp eq %struct.redisCommand* %14, null, !dbg !6711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6713
  br i1 %15, label %16, label %21, !dbg !6713

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6714
  %18 = load %struct.RedisModuleType*, %struct.RedisModuleType** %17, align 8, !dbg !6714, !tbaa !6134
  %19 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %18, i64 0, i32 11, i64 0, !dbg !6716
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.28, i64 0, i64 0), i8* nonnull %19, i8* %1) #9, !dbg !6717
  store i32 1, i32* %7, align 8, !dbg !6718, !tbaa !6154
  %20 = tail call i32* @__errno() #9, !dbg !6719
  store i32 22, i32* %20, align 4, !dbg !6720, !tbaa !933
  br label %69, !dbg !6721

; <label>:21:                                     ; preds = %10
  %22 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0, !dbg !6722
  call void @llvm.va_start(i8* nonnull %13), !dbg !6722
  %23 = call %struct.redisObject** @moduleCreateArgvFromUserFormat(i8* %1, i8* %2, i32* nonnull %4, i32* nonnull %5, %struct.__va_list_tag* nonnull %22) #10, !dbg !6723
  call void @llvm.va_end(i8* nonnull %13), !dbg !6724
  %24 = icmp eq %struct.redisObject** %23, null, !dbg !6725
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6727
  br i1 %24, label %25, label %30, !dbg !6727

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6728
  %27 = load %struct.RedisModuleType*, %struct.RedisModuleType** %26, align 8, !dbg !6728, !tbaa !6134
  %28 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %27, i64 0, i32 11, i64 0, !dbg !6730
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.29, i64 0, i64 0), i8* nonnull %28, i8* %2) #9, !dbg !6731
  store i32 1, i32* %7, align 8, !dbg !6732, !tbaa !6154
  %29 = call i32* @__errno() #9, !dbg !6733
  store i32 22, i32* %29, align 4, !dbg !6734, !tbaa !933
  br label %69, !dbg !6735

; <label>:30:                                     ; preds = %21
  %31 = load i32, i32* %7, align 8, !dbg !6736, !tbaa !6154
  %32 = icmp eq i32 %31, 0, !dbg !6738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6739
  br i1 %32, label %35, label %33, !dbg !6739

; <label>:33:                                     ; preds = %30
  %34 = load i32, i32* %4, align 4, !dbg !6740, !tbaa !933
  br label %43, !dbg !6739

; <label>:35:                                     ; preds = %30
  %36 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1, !dbg !6743
  %37 = load %struct._rio*, %struct._rio** %36, align 8, !dbg !6743, !tbaa !6158
  %38 = load i32, i32* %4, align 4, !dbg !6744, !tbaa !933
  %39 = sext i32 %38 to i64, !dbg !6744
  %40 = call i64 @rioWriteBulkCount(%struct._rio* %37, i8 signext 42, i64 %39) #9, !dbg !6745
  %41 = icmp eq i64 %40, 0, !dbg !6746
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6747
  br i1 %41, label %42, label %43, !dbg !6747

; <label>:42:                                     ; preds = %35
  store i32 1, i32* %7, align 8, !dbg !6748, !tbaa !6154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6749
  br label %43, !dbg !6749

; <label>:43:                                     ; preds = %33, %42, %35
  %44 = phi i32 [ %34, %33 ], [ %38, %42 ], [ %38, %35 ], !dbg !6740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6751
  %45 = icmp sgt i32 %44, 0, !dbg !6752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6753
  br i1 %45, label %46, label %67, !dbg !6753

; <label>:46:                                     ; preds = %43
  %47 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 1
  %48 = sext i32 %44 to i64, !dbg !6753
  br label %49, !dbg !6753

; <label>:49:                                     ; preds = %46, %62
  %50 = phi i64 [ 0, %46 ], [ %65, %62 ]
  %51 = load i32, i32* %7, align 8, !dbg !6754, !tbaa !6154
  %52 = icmp eq i32 %51, 0, !dbg !6757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6758
  br i1 %52, label %55, label %53, !dbg !6758

; <label>:53:                                     ; preds = %49
  %54 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %50, !dbg !6759
  br label %62, !dbg !6758

; <label>:55:                                     ; preds = %49
  %56 = load %struct._rio*, %struct._rio** %47, align 8, !dbg !6760, !tbaa !6158
  %57 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %23, i64 %50, !dbg !6761
  %58 = load %struct.redisObject*, %struct.redisObject** %57, align 8, !dbg !6761, !tbaa !902
  %59 = call i32 @rioWriteBulkObject(%struct._rio* %56, %struct.redisObject* %58) #9, !dbg !6762
  %60 = icmp eq i32 %59, 0, !dbg !6763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6764
  br i1 %60, label %61, label %62, !dbg !6764

; <label>:61:                                     ; preds = %55
  store i32 1, i32* %7, align 8, !dbg !6765, !tbaa !6154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6766
  br label %62, !dbg !6766

; <label>:62:                                     ; preds = %53, %61, %55
  %63 = phi %struct.redisObject** [ %54, %53 ], [ %57, %61 ], [ %57, %55 ], !dbg !6759
  %64 = load %struct.redisObject*, %struct.redisObject** %63, align 8, !dbg !6759, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %64) #9, !dbg !6767
  %65 = add nuw nsw i64 %50, 1, !dbg !6768
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6769
  %66 = icmp slt i64 %65, %48, !dbg !6752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6753
  br i1 %66, label %49, label %67, !dbg !6753, !llvm.loop !6770

; <label>:67:                                     ; preds = %62, %43
  %68 = bitcast %struct.redisObject** %23 to i8*, !dbg !6772
  call void @zfree(i8* %68) #9, !dbg !6773
  br label %69, !dbg !6774

; <label>:69:                                     ; preds = %67, %25, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6775
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #5, !dbg !6776
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #5, !dbg !6776
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #5, !dbg !6776
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %70

; <label>:70:                                     ; preds = %3, %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  ret void, !dbg !6776
}

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkCount(%struct._rio*, i8 signext, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @rioWriteBulkObject(%struct._rio*, %struct.redisObject*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCtx* @RM_GetContextFromIO(%struct.RedisModuleIO* nocapture) #0 !dbg !6777 {
  %2 = alloca { %struct.RedisModule*, %struct.client*, %struct.RedisModuleBlockedClient*, %struct.AutoMemEntry*, i32, i32, i32, i8**, i32, i8*, i32*, i32, %struct.RedisModulePoolAllocBlock* }, align 8
  %3 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 5, !dbg !6784
  %4 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %3, align 8, !dbg !6784, !tbaa !6786
  %5 = icmp eq %struct.RedisModuleCtx* %4, null, !dbg !6787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6788
  br i1 %5, label %6, label %21, !dbg !6788

; <label>:6:                                      ; preds = %1
  %7 = bitcast { %struct.RedisModule*, %struct.client*, %struct.RedisModuleBlockedClient*, %struct.AutoMemEntry*, i32, i32, i32, i8**, i32, i8*, i32*, i32, %struct.RedisModulePoolAllocBlock* }* %2 to i8*, !dbg !6789
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7), !dbg !6789
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 96, i1 false), !dbg !6790
  %8 = tail call i8* @zmalloc(i64 104) #9, !dbg !6791
  %9 = bitcast %struct.RedisModuleCtx** %3 to i8**, !dbg !6792
  store i8* %8, i8** %9, align 8, !dbg !6792, !tbaa !6786
  %10 = bitcast i8* %8 to i8**, !dbg !6793
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %10, align 8, !dbg !6793
  %11 = getelementptr inbounds i8, i8* %8, i64 8, !dbg !6793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %7, i64 96, i1 false), !dbg !6793
  %12 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6794
  %13 = load %struct.RedisModuleType*, %struct.RedisModuleType** %12, align 8, !dbg !6794, !tbaa !6134
  %14 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %13, i64 0, i32 1, !dbg !6795
  %15 = bitcast %struct.RedisModule** %14 to i64*, !dbg !6795
  %16 = load i64, i64* %15, align 8, !dbg !6795, !tbaa !5985
  %17 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %3, align 8, !dbg !6796, !tbaa !6786
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %17, i64 0, i32 1, !dbg !6797
  %19 = bitcast %struct.RedisModule** %18 to i64*, !dbg !6798
  store i64 %16, i64* %19, align 8, !dbg !6798, !tbaa !1171
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %17, i64 0, i32 2, !dbg !6799
  store %struct.client* null, %struct.client** %20, align 8, !dbg !6800, !tbaa !1183
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7), !dbg !6801
  br label %21

; <label>:21:                                     ; preds = %1, %6
  %22 = phi %struct.RedisModuleCtx* [ %17, %6 ], [ %4, %1 ], !dbg !6802
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6801
  ret %struct.RedisModuleCtx* %22, !dbg !6801
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_GetKeyNameFromIO(%struct.RedisModuleIO* nocapture readonly) #0 !dbg !6803 {
  %2 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 6, !dbg !6809
  %3 = load %struct.redisObject*, %struct.redisObject** %2, align 8, !dbg !6809, !tbaa !6810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6811
  ret %struct.redisObject* %3, !dbg !6811
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_LogRaw(%struct.RedisModule* readonly, i8* readonly, i8*, %struct.__va_list_tag*) local_unnamed_addr #0 !dbg !6812 {
  %5 = alloca [1024 x i8], align 16
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0, !dbg !6830
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %6) #5, !dbg !6830
  %7 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #11, !dbg !6832
  %8 = icmp eq i32 %7, 0, !dbg !6832
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6834
  br i1 %8, label %9, label %10, !dbg !6834

; <label>:9:                                      ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6836
  br label %22, !dbg !6836

; <label>:10:                                     ; preds = %4
  %11 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)) #11, !dbg !6837
  %12 = icmp eq i32 %11, 0, !dbg !6837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6839
  br i1 %12, label %13, label %14, !dbg !6839

; <label>:13:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6840
  br label %22, !dbg !6840

; <label>:14:                                     ; preds = %10
  %15 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0)) #11, !dbg !6841
  %16 = icmp eq i32 %15, 0, !dbg !6841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6843
  br i1 %16, label %17, label %18, !dbg !6843

; <label>:17:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6844
  br label %22, !dbg !6844

; <label>:18:                                     ; preds = %14
  %19 = tail call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0)) #11, !dbg !6845
  %20 = icmp eq i32 %19, 0, !dbg !6845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6847
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %21 = select i1 %20, i32 3, i32 1, !dbg !6848
  br label %22, !dbg !6848

; <label>:22:                                     ; preds = %18, %13, %17, %9
  %23 = phi i32 [ 2, %17 ], [ 1, %13 ], [ 0, %9 ], [ %21, %18 ], !dbg !6849
  %24 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !6850, !tbaa !6852
  %25 = icmp slt i32 %23, %24, !dbg !6853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6854
  br i1 %25, label %38, label %26, !dbg !6854

; <label>:26:                                     ; preds = %22
  %27 = icmp eq %struct.RedisModule* %0, null, !dbg !6855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6855
  br i1 %27, label %31, label %28, !dbg !6855

; <label>:28:                                     ; preds = %26
  %29 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 1, !dbg !6856
  %30 = load i8*, i8** %29, align 8, !dbg !6856, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6855
  br label %31, !dbg !6855

; <label>:31:                                     ; preds = %26, %28
  %32 = phi i8* [ %30, %28 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), %26 ], !dbg !6855
  %33 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %6, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8* %32) #9, !dbg !6857
  %34 = sext i32 %33 to i64, !dbg !6857
  %35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 %34, !dbg !6859
  %36 = sub nsw i64 1024, %34, !dbg !6860
  %37 = call i32 @vsnprintf(i8* nonnull %35, i64 %36, i8* %2, %struct.__va_list_tag* %3) #9, !dbg !6861
  call void @serverLogRaw(i32 %23, i8* nonnull %6) #9, !dbg !6862
  br label %38, !dbg !6863

; <label>:38:                                     ; preds = %22, %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6864
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %6) #5, !dbg !6863
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6863
  ret void, !dbg !6863
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @serverLogRaw(i32, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_Log(%struct.RedisModuleCtx* readonly, i8* readonly, i8*, ...) #0 !dbg !6865 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*, !dbg !6876
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5, !dbg !6876
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0, !dbg !6878
  call void @llvm.va_start(i8* nonnull %5), !dbg !6878
  %7 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !6879
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6879
  br i1 %7, label %11, label %8, !dbg !6879

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !6880
  %10 = load %struct.RedisModule*, %struct.RedisModule** %9, align 8, !dbg !6880, !tbaa !1171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6879
  br label %11, !dbg !6879

; <label>:11:                                     ; preds = %3, %8
  %12 = phi %struct.RedisModule* [ %10, %8 ], [ null, %3 ], !dbg !6879
  call void @RM_LogRaw(%struct.RedisModule* %12, i8* %1, i8* %2, %struct.__va_list_tag* nonnull %6) #10, !dbg !6881
  call void @llvm.va_end(i8* nonnull %5), !dbg !6882
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5, !dbg !6883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6883
  ret void, !dbg !6883
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_LogIOError(%struct.RedisModuleIO* nocapture readonly, i8* readonly, i8*, ...) #0 !dbg !6884 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*, !dbg !6893
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #5, !dbg !6893
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0, !dbg !6895
  call void @llvm.va_start(i8* nonnull %5), !dbg !6895
  %7 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %0, i64 0, i32 2, !dbg !6896
  %8 = load %struct.RedisModuleType*, %struct.RedisModuleType** %7, align 8, !dbg !6896, !tbaa !6134
  %9 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %8, i64 0, i32 1, !dbg !6897
  %10 = load %struct.RedisModule*, %struct.RedisModule** %9, align 8, !dbg !6897, !tbaa !5985
  call void @RM_LogRaw(%struct.RedisModule* %10, i8* %1, i8* %2, %struct.__va_list_tag* nonnull %6) #10, !dbg !6898
  call void @llvm.va_end(i8* nonnull %5), !dbg !6899
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #5, !dbg !6900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6900
  ret void, !dbg !6900
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleBlockedClientPipeReadable(%struct.aeEventLoop* nocapture readnone, i32, i8* nocapture readnone, i32) local_unnamed_addr #0 !dbg !6901 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6973
  ret void, !dbg !6973
}

; Function Attrs: noredzone nounwind
define dso_local void @unblockClientFromModule(%struct.client*) local_unnamed_addr #0 !dbg !6974 {
  %2 = alloca %struct.RedisModuleCtx, align 8
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 11, !dbg !6984
  %4 = bitcast i8** %3 to %struct.RedisModuleBlockedClient**, !dbg !6984
  %5 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %4, align 8, !dbg !6984, !tbaa !6985
  %6 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 4, !dbg !6987
  %7 = load void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %6, align 8, !dbg !6987, !tbaa !6988
  %8 = icmp eq void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* %7, null, !dbg !6990
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6991
  br i1 %8, label %25, label %9, !dbg !6991

; <label>:9:                                      ; preds = %1
  %10 = bitcast %struct.RedisModuleCtx* %2 to i8*, !dbg !6992
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #5, !dbg !6992
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 3
  %12 = bitcast %struct.RedisModuleBlockedClient** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 80, i1 false), !dbg !6993
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 0, !dbg !6993
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %13, align 8, !dbg !6993
  %14 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 6, !dbg !6994
  %15 = bitcast i8** %14 to i64*, !dbg !6994
  %16 = load i64, i64* %15, align 8, !dbg !6994, !tbaa !6995
  %17 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 10, !dbg !6996
  %18 = bitcast i8** %17 to i64*, !dbg !6997
  store i64 %16, i64* %18, align 8, !dbg !6997, !tbaa !6998
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 1, !dbg !6999
  %20 = bitcast %struct.RedisModuleBlockedClient* %5 to <2 x i64>*, !dbg !7000
  %21 = load <2 x i64>, <2 x i64>* %20, align 8, !dbg !7000, !tbaa !902
  %22 = shufflevector <2 x i64> %21, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7000
  %23 = bitcast %struct.RedisModule** %19 to <2 x i64>*, !dbg !7001
  store <2 x i64> %22, <2 x i64>* %23, align 8, !dbg !7001, !tbaa !902
  %24 = load void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %6, align 8, !dbg !7002, !tbaa !6988
  call void %24(%struct.RedisModuleCtx* nonnull %2, %struct.RedisModuleBlockedClient* %5) #9, !dbg !7003
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %2) #10, !dbg !7004
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #5, !dbg !7005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7006
  br label %25, !dbg !7006

; <label>:25:                                     ; preds = %1, %9
  %26 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 0, !dbg !7007
  store %struct.client* null, %struct.client** %26, align 8, !dbg !7008, !tbaa !7009
  call void @resetClient(%struct.client* nonnull %0) #9, !dbg !7010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7011
  ret void, !dbg !7011
}

; Function Attrs: noredzone
declare dso_local void @resetClient(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleBlockedClient* @RM_BlockClient(%struct.RedisModuleCtx* nocapture readonly, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, void (%struct.RedisModuleCtx*, i8*)*, i64) #0 !dbg !7012 {
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !7030
  %7 = load %struct.client*, %struct.client** %6, align 8, !dbg !7030, !tbaa !1183
  %8 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 21, !dbg !7032
  %9 = load i32, i32* %8, align 8, !dbg !7032, !tbaa !1305
  %10 = and i32 %9, 256, !dbg !7033
  %11 = tail call i8* @zmalloc(i64 72) #9, !dbg !7036
  %12 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 40, i32 11, !dbg !7037
  store i8* %11, i8** %12, align 8, !dbg !7038, !tbaa !6985
  %13 = bitcast i8* %11 to %struct.RedisModuleBlockedClient*, !dbg !7039
  %14 = icmp eq i32 %10, 0, !dbg !7041
  %15 = and i32 %9, 264, !dbg !7042
  %16 = icmp ne i32 %15, 0, !dbg !7042
  %17 = select i1 %16, %struct.client* null, %struct.client* %7, !dbg !7042
  %18 = bitcast i8* %11 to %struct.client**, !dbg !7043
  store %struct.client* %17, %struct.client** %18, align 8, !dbg !7044, !tbaa !7009
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7045
  %20 = bitcast %struct.RedisModule** %19 to i64*, !dbg !7045
  %21 = load i64, i64* %20, align 8, !dbg !7045, !tbaa !1171
  %22 = getelementptr inbounds i8, i8* %11, i64 8, !dbg !7046
  %23 = bitcast i8* %22 to i64*, !dbg !7047
  store i64 %21, i64* %23, align 8, !dbg !7047, !tbaa !7048
  %24 = getelementptr inbounds i8, i8* %11, i64 16, !dbg !7049
  %25 = bitcast i8* %24 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !7049
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* %1, i32 (%struct.RedisModuleCtx*, i8**, i32)** %25, align 8, !dbg !7050, !tbaa !7051
  %26 = getelementptr inbounds i8, i8* %11, i64 24, !dbg !7052
  %27 = bitcast i8* %26 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !7052
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* %2, i32 (%struct.RedisModuleCtx*, i8**, i32)** %27, align 8, !dbg !7053, !tbaa !7054
  %28 = getelementptr inbounds i8, i8* %11, i64 32, !dbg !7055
  %29 = bitcast i8* %28 to void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)**, !dbg !7055
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %29, align 8, !dbg !7056, !tbaa !6988
  %30 = getelementptr inbounds i8, i8* %11, i64 40, !dbg !7057
  %31 = bitcast i8* %30 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !7057
  store void (%struct.RedisModuleCtx*, i8*)* %3, void (%struct.RedisModuleCtx*, i8*)** %31, align 8, !dbg !7058, !tbaa !7059
  %32 = getelementptr inbounds i8, i8* %11, i64 48, !dbg !7060
  %33 = bitcast i8* %32 to i8**, !dbg !7060
  store i8* null, i8** %33, align 8, !dbg !7061, !tbaa !6995
  %34 = tail call %struct.client* @createClient(i32 -1) #9, !dbg !7062
  %35 = getelementptr inbounds i8, i8* %11, i64 56, !dbg !7063
  %36 = bitcast i8* %35 to %struct.client**, !dbg !7063
  store %struct.client* %34, %struct.client** %36, align 8, !dbg !7064, !tbaa !7065
  %37 = getelementptr inbounds %struct.client, %struct.client* %34, i64 0, i32 21, !dbg !7066
  %38 = load i32, i32* %37, align 8, !dbg !7067, !tbaa !1305
  %39 = or i32 %38, 134217728, !dbg !7067
  store i32 %39, i32* %37, align 8, !dbg !7067, !tbaa !1305
  %40 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 2, !dbg !7068
  %41 = load %struct.redisDb*, %struct.redisDb** %40, align 8, !dbg !7068, !tbaa !1322
  %42 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %41, i64 0, i32 5, !dbg !7069
  %43 = load i32, i32* %42, align 8, !dbg !7069, !tbaa !1324
  %44 = getelementptr inbounds i8, i8* %11, i64 64, !dbg !7070
  %45 = bitcast i8* %44 to i32*, !dbg !7070
  store i32 %43, i32* %45, align 8, !dbg !7071, !tbaa !7072
  %46 = icmp eq i64 %4, 0, !dbg !7073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7073
  br i1 %46, label %50, label %47, !dbg !7073

; <label>:47:                                     ; preds = %5
  %48 = tail call i64 @mstime() #9, !dbg !7074
  %49 = add nsw i64 %48, %4, !dbg !7075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7073
  br label %50, !dbg !7073

; <label>:50:                                     ; preds = %5, %47
  %51 = phi i64 [ %49, %47 ], [ 0, %5 ], !dbg !7073
  %52 = getelementptr inbounds %struct.client, %struct.client* %7, i64 0, i32 40, i32 0, !dbg !7076
  store i64 %51, i64* %52, align 8, !dbg !7077, !tbaa !7078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7079
  br i1 %16, label %53, label %55, !dbg !7079

; <label>:53:                                     ; preds = %50
  store i8* null, i8** %12, align 8, !dbg !7081, !tbaa !6985
  %54 = select i1 %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), !dbg !7083
  tail call void @addReplyError(%struct.client* nonnull %7, i8* %54) #9, !dbg !7084
  br label %56, !dbg !7085

; <label>:55:                                     ; preds = %50
  tail call void @blockClient(%struct.client* nonnull %7, i32 3) #9, !dbg !7086
  br label %56

; <label>:56:                                     ; preds = %55, %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7088
  ret %struct.RedisModuleBlockedClient* %13, !dbg !7088
}

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @blockClient(%struct.client*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_UnblockClient(%struct.RedisModuleBlockedClient*, i8*) #0 !dbg !7089 {
  %3 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7097
  %4 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 6, !dbg !7098
  store i8* %1, i8** %4, align 8, !dbg !7099, !tbaa !6995
  %5 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7100, !tbaa !902
  %6 = bitcast %struct.RedisModuleBlockedClient* %0 to i8*, !dbg !7101
  %7 = tail call %struct.list* @listAddNodeTail(%struct.list* %5, i8* %6) #9, !dbg !7102
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 1), align 4, !dbg !7103, !tbaa !933
  %9 = tail call i64 @write(i32 %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1) #9, !dbg !7105
  %10 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7106
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7107
  ret i32 0, !dbg !7107
}

; Function Attrs: noredzone
declare dso_local i32 @pthread_mutex_lock(%struct.pthread_mutex_t_**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_**) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_AbortBlock(%struct.RedisModuleBlockedClient*) #0 !dbg !7108 {
  %2 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 2, !dbg !7114
  store i32 (%struct.RedisModuleCtx*, i8**, i32)* null, i32 (%struct.RedisModuleCtx*, i8**, i32)** %2, align 8, !dbg !7115, !tbaa !7051
  %3 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 4, !dbg !7116
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %3, align 8, !dbg !7117, !tbaa !6988
  %4 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7121
  %5 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 6, !dbg !7122
  store i8* null, i8** %5, align 8, !dbg !7123, !tbaa !6995
  %6 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7124, !tbaa !902
  %7 = bitcast %struct.RedisModuleBlockedClient* %0 to i8*, !dbg !7125
  %8 = tail call %struct.list* @listAddNodeTail(%struct.list* %6, i8* %7) #9, !dbg !7126
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 1), align 4, !dbg !7127, !tbaa !933
  %10 = tail call i64 @write(i32 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1) #9, !dbg !7128
  %11 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7131
  ret i32 0, !dbg !7131
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_SetDisconnectCallback(%struct.RedisModuleBlockedClient* nocapture, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*) #0 !dbg !7132 {
  %3 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 4, !dbg !7140
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* %1, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %3, align 8, !dbg !7141, !tbaa !6988
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7142
  ret void, !dbg !7142
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleHandleBlockedClients() local_unnamed_addr #0 !dbg !7143 {
  %1 = alloca [1 x %struct.redisObject*], align 8
  %2 = alloca [1 x i8], align 1
  %3 = alloca %struct.RedisModuleCtx, align 8
  %4 = alloca %struct.RedisModuleCtx, align 8
  %5 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7159
  %6 = getelementptr inbounds [1 x i8], [1 x i8]* %2, i64 0, i64 0, !dbg !7160
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #5, !dbg !7160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7162
  br label %7, !dbg !7162

; <label>:7:                                      ; preds = %7, %0
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0), align 8, !dbg !7163, !tbaa !933
  %9 = call i64 @read(i32 %8, i8* nonnull %6, i64 1) #9, !dbg !7164
  %10 = icmp eq i64 %9, 1, !dbg !7165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7162
  br i1 %10, label %7, label %11, !dbg !7162, !llvm.loop !7166

; <label>:11:                                     ; preds = %7
  %12 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7168, !tbaa !902
  %13 = getelementptr inbounds %struct.list, %struct.list* %12, i64 0, i32 5, !dbg !7168
  %14 = load i64, i64* %13, align 8, !dbg !7168, !tbaa !5607
  %15 = icmp eq i64 %14, 0, !dbg !7169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7169
  br i1 %15, label %135, label %16, !dbg !7169

; <label>:16:                                     ; preds = %11
  %17 = bitcast %struct.RedisModuleCtx* %3 to i8*
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 0
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 7
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 10
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 1
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 2
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 3
  %25 = bitcast %struct.RedisModuleBlockedClient** %24 to i8**
  %26 = bitcast %struct.RedisModuleCtx* %4 to i8*
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 0
  %28 = bitcast [1 x %struct.redisObject*]* %1 to i8*
  %29 = getelementptr inbounds [1 x %struct.redisObject*], [1 x %struct.redisObject*]* %1, i64 0, i64 0
  %30 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 7
  %31 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 10
  %32 = bitcast i8** %31 to i64*
  %33 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1
  %34 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %3, i64 0, i32 4
  %35 = bitcast %struct.AutoMemEntry** %34 to i8*
  %36 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1
  %37 = bitcast %struct.RedisModule** %36 to i8*
  %38 = bitcast %struct.RedisModule** %22 to <2 x i64>*
  %39 = bitcast %struct.RedisModule** %33 to <2 x i64>*
  br label %40, !dbg !7169

; <label>:40:                                     ; preds = %16, %129
  %41 = phi %struct.list* [ %12, %16 ], [ %131, %129 ]
  %42 = getelementptr inbounds %struct.list, %struct.list* %41, i64 0, i32 0, !dbg !7170
  %43 = load %struct.listNode*, %struct.listNode** %42, align 8, !dbg !7170, !tbaa !5610
  %44 = getelementptr inbounds %struct.listNode, %struct.listNode* %43, i64 0, i32 2, !dbg !7172
  %45 = load i8*, i8** %44, align 8, !dbg !7172, !tbaa !5611
  %46 = bitcast i8* %45 to %struct.client**, !dbg !7174
  %47 = load %struct.client*, %struct.client** %46, align 8, !dbg !7174, !tbaa !7009
  call void @listDelNode(%struct.list* %41, %struct.listNode* %43) #9, !dbg !7176
  %48 = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7177
  %49 = icmp ne %struct.client* %47, null, !dbg !7178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7179
  br i1 %49, label %50, label %87, !dbg !7179

; <label>:50:                                     ; preds = %40
  %51 = getelementptr inbounds i8, i8* %45, i64 16, !dbg !7180
  %52 = bitcast i8* %51 to i32 (%struct.RedisModuleCtx*, i8**, i32)**, !dbg !7180
  %53 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %52, align 8, !dbg !7180, !tbaa !7051
  %54 = icmp eq i32 (%struct.RedisModuleCtx*, i8**, i32)* %53, null, !dbg !7181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7182
  br i1 %54, label %87, label %55, !dbg !7182

; <label>:55:                                     ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #5, !dbg !7183
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 72, i1 false), !dbg !7184
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %18, align 8, !dbg !7184
  store i32 8, i32* %19, align 8, !dbg !7185, !tbaa !1179
  %56 = getelementptr inbounds i8, i8* %45, i64 48, !dbg !7186
  %57 = bitcast i8* %56 to i64*, !dbg !7186
  %58 = load i64, i64* %57, align 8, !dbg !7186, !tbaa !6995
  store i64 %58, i64* %21, align 8, !dbg !7187, !tbaa !6998
  %59 = bitcast i8* %45 to <2 x i64>*, !dbg !7188
  %60 = load <2 x i64>, <2 x i64>* %59, align 8, !dbg !7188, !tbaa !902
  %61 = shufflevector <2 x i64> %60, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7188
  store <2 x i64> %61, <2 x i64>* %38, align 8, !dbg !7189, !tbaa !902
  store i8* %45, i8** %25, align 8, !dbg !7190, !tbaa !2361
  %62 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %52, align 8, !dbg !7191, !tbaa !7051
  %63 = getelementptr inbounds %struct.client, %struct.client* %47, i64 0, i32 9, !dbg !7192
  %64 = bitcast %struct.redisObject*** %63 to i8***, !dbg !7192
  %65 = load i8**, i8*** %64, align 8, !dbg !7192, !tbaa !1368
  %66 = getelementptr inbounds %struct.client, %struct.client* %47, i64 0, i32 8, !dbg !7193
  %67 = load i32, i32* %66, align 8, !dbg !7193, !tbaa !1370
  %68 = call i32 %62(%struct.RedisModuleCtx* nonnull %3, i8** %65, i32 %67) #9, !dbg !7194
  %69 = load %struct.client*, %struct.client** %23, align 8, !dbg !7196, !tbaa !1183
  %70 = getelementptr inbounds %struct.client, %struct.client* %69, i64 0, i32 21, !dbg !7198
  %71 = load i32, i32* %70, align 8, !dbg !7198, !tbaa !1305
  %72 = and i32 %71, 256, !dbg !7199
  %73 = icmp eq i32 %72, 0, !dbg !7199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7200
  br i1 %73, label %74, label %86, !dbg !7200

; <label>:74:                                     ; preds = %55
  %75 = load i32, i32* %19, align 8, !dbg !7201, !tbaa !1179
  %76 = and i32 %75, 1, !dbg !7202
  %77 = icmp eq i32 %76, 0, !dbg !7202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7203
  br i1 %77, label %86, label %78, !dbg !7203

; <label>:78:                                     ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5, !dbg !7204
  %79 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9, !dbg !7205
  store %struct.redisObject* %79, %struct.redisObject** %29, align 8, !dbg !7206, !tbaa !902
  %80 = load %struct.redisCommand*, %struct.redisCommand** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 64), align 8, !dbg !7207, !tbaa !1320
  %81 = getelementptr inbounds %struct.client, %struct.client* %69, i64 0, i32 2, !dbg !7208
  %82 = load %struct.redisDb*, %struct.redisDb** %81, align 8, !dbg !7208, !tbaa !1322
  %83 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %82, i64 0, i32 5, !dbg !7209
  %84 = load i32, i32* %83, align 8, !dbg !7209, !tbaa !1324
  call void @alsoPropagate(%struct.redisCommand* %80, i32 %84, %struct.redisObject** nonnull %29, i32 1, i32 3) #9, !dbg !7210
  %85 = load %struct.redisObject*, %struct.redisObject** %29, align 8, !dbg !7211, !tbaa !902
  call void @decrRefCount(%struct.redisObject* %85) #9, !dbg !7212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5, !dbg !7213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7214
  br label %86, !dbg !7214

; <label>:86:                                     ; preds = %74, %78, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7216
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %3) #10, !dbg !7217
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #5, !dbg !7218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7219
  br label %87, !dbg !7219

; <label>:87:                                     ; preds = %50, %86, %40
  %88 = getelementptr inbounds i8, i8* %45, i64 48, !dbg !7220
  %89 = bitcast i8* %88 to i8**, !dbg !7220
  %90 = load i8*, i8** %89, align 8, !dbg !7220, !tbaa !6995
  %91 = icmp eq i8* %90, null, !dbg !7221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7222
  br i1 %91, label %108, label %92, !dbg !7222

; <label>:92:                                     ; preds = %87
  %93 = getelementptr inbounds i8, i8* %45, i64 40, !dbg !7223
  %94 = bitcast i8* %93 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !7223
  %95 = load void (%struct.RedisModuleCtx*, i8*)*, void (%struct.RedisModuleCtx*, i8*)** %94, align 8, !dbg !7223, !tbaa !7059
  %96 = icmp eq void (%struct.RedisModuleCtx*, i8*)* %95, null, !dbg !7224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7225
  br i1 %96, label %108, label %97, !dbg !7225

; <label>:97:                                     ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %26) #5, !dbg !7226
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 96, i1 false), !dbg !7227
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %27, align 8, !dbg !7227
  %98 = icmp eq %struct.client* %47, null, !dbg !7228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7230
  br i1 %98, label %99, label %100, !dbg !7230

; <label>:99:                                     ; preds = %97
  store i32 64, i32* %30, align 8, !dbg !7231, !tbaa !1179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7232
  br label %100, !dbg !7232

; <label>:100:                                    ; preds = %99, %97
  %101 = bitcast i8* %88 to i64*, !dbg !7233
  %102 = load i64, i64* %101, align 8, !dbg !7233, !tbaa !6995
  store i64 %102, i64* %32, align 8, !dbg !7234, !tbaa !6998
  %103 = bitcast i8* %45 to <2 x i64>*, !dbg !7235
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !dbg !7235, !tbaa !902
  %105 = shufflevector <2 x i64> %104, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7235
  store <2 x i64> %105, <2 x i64>* %39, align 8, !dbg !7236, !tbaa !902
  %106 = load void (%struct.RedisModuleCtx*, i8*)*, void (%struct.RedisModuleCtx*, i8*)** %94, align 8, !dbg !7237, !tbaa !7059
  %107 = inttoptr i64 %102 to i8*, !dbg !7238
  call void %106(%struct.RedisModuleCtx* nonnull %4, i8* %107) #9, !dbg !7239
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %4) #10, !dbg !7240
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %26) #5, !dbg !7241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7242
  br label %108, !dbg !7242

; <label>:108:                                    ; preds = %92, %87, %100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7243
  %109 = getelementptr inbounds i8, i8* %45, i64 56, !dbg !7244
  %110 = bitcast i8* %109 to %struct.client**, !dbg !7244
  %111 = load %struct.client*, %struct.client** %110, align 8, !dbg !7244, !tbaa !7065
  br i1 %49, label %112, label %128, !dbg !7243

; <label>:112:                                    ; preds = %108
  call void @AddReplyFromClient(%struct.client* nonnull %47, %struct.client* %111) #9, !dbg !7245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7245
  %113 = load %struct.client*, %struct.client** %110, align 8, !dbg !7247, !tbaa !7065
  call void @freeClient(%struct.client* %113) #9, !dbg !7248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7249
  %114 = getelementptr inbounds i8, i8* %45, i64 32, !dbg !7250
  %115 = bitcast i8* %114 to void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)**, !dbg !7250
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %115, align 8, !dbg !7253, !tbaa !6988
  call void @unblockClient(%struct.client* nonnull %47) #9, !dbg !7254
  %116 = call i32 @clientHasPendingReplies(%struct.client* nonnull %47) #9, !dbg !7255
  %117 = icmp eq i32 %116, 0, !dbg !7255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7257
  br i1 %117, label %129, label %118, !dbg !7257

; <label>:118:                                    ; preds = %112
  %119 = getelementptr inbounds %struct.client, %struct.client* %47, i64 0, i32 21, !dbg !7258
  %120 = load i32, i32* %119, align 8, !dbg !7258, !tbaa !1305
  %121 = and i32 %120, 2097152, !dbg !7259
  %122 = icmp eq i32 %121, 0, !dbg !7259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7260
  br i1 %122, label %123, label %129, !dbg !7260

; <label>:123:                                    ; preds = %118
  %124 = or i32 %120, 2097152, !dbg !7261
  store i32 %124, i32* %119, align 8, !dbg !7261, !tbaa !1305
  %125 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 40), align 8, !dbg !7263, !tbaa !7264
  %126 = bitcast %struct.client* %47 to i8*, !dbg !7265
  %127 = call %struct.list* @listAddNodeHead(%struct.list* %125, i8* %126) #9, !dbg !7266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7267
  br label %129, !dbg !7267

; <label>:128:                                    ; preds = %108
  call void @freeClient(%struct.client* %111) #9, !dbg !7248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7249
  br label %129

; <label>:129:                                    ; preds = %128, %118, %112, %123
  call void @zfree(i8* nonnull %45) #9, !dbg !7268
  %130 = call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7269
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7169
  %131 = load %struct.list*, %struct.list** @moduleUnblockedClients, align 8, !dbg !7168, !tbaa !902
  %132 = getelementptr inbounds %struct.list, %struct.list* %131, i64 0, i32 5, !dbg !7168
  %133 = load i64, i64* %132, align 8, !dbg !7168, !tbaa !5607
  %134 = icmp eq i64 %133, 0, !dbg !7169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7169
  br i1 %134, label %135, label %40, !dbg !7169, !llvm.loop !7270

; <label>:135:                                    ; preds = %129, %11
  %136 = call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleUnblockedClientsMutex) #9, !dbg !7272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #5, !dbg !7273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7273
  ret void, !dbg !7273
}

; Function Attrs: noredzone
declare dso_local i64 @read(i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @AddReplyFromClient(%struct.client*, %struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @unblockClient(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @clientHasPendingReplies(%struct.client*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeHead(%struct.list*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleBlockedClientTimedOut(%struct.client* nocapture readonly) local_unnamed_addr #0 !dbg !7274 {
  %2 = alloca %struct.RedisModuleCtx, align 8
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 11, !dbg !7280
  %4 = bitcast i8** %3 to %struct.RedisModuleBlockedClient**, !dbg !7280
  %5 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %4, align 8, !dbg !7280, !tbaa !6985
  %6 = bitcast %struct.RedisModuleCtx* %2 to i8*, !dbg !7282
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #5, !dbg !7282
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 4
  %8 = bitcast %struct.AutoMemEntry** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 72, i1 false), !dbg !7283
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 0, !dbg !7283
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %9, align 8, !dbg !7283
  %10 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 7, !dbg !7284
  store i32 16, i32* %10, align 8, !dbg !7285, !tbaa !1179
  %11 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 1, !dbg !7286
  %12 = bitcast %struct.RedisModuleBlockedClient* %5 to <2 x i64>*, !dbg !7287
  %13 = load <2 x i64>, <2 x i64>* %12, align 8, !dbg !7287, !tbaa !902
  %14 = shufflevector <2 x i64> %13, <2 x i64> undef, <2 x i32> <i32 1, i32 0>, !dbg !7287
  %15 = bitcast %struct.RedisModule** %11 to <2 x i64>*, !dbg !7288
  store <2 x i64> %14, <2 x i64>* %15, align 8, !dbg !7288, !tbaa !902
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 3, !dbg !7289
  store %struct.RedisModuleBlockedClient* %5, %struct.RedisModuleBlockedClient** %16, align 8, !dbg !7290, !tbaa !2361
  %17 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 3, !dbg !7291
  %18 = load i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)** %17, align 8, !dbg !7291, !tbaa !7054
  %19 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !7292
  %20 = bitcast %struct.redisObject*** %19 to i8***, !dbg !7292
  %21 = load i8**, i8*** %20, align 8, !dbg !7292, !tbaa !1368
  %22 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !7293
  %23 = load i32, i32* %22, align 8, !dbg !7293, !tbaa !1370
  %24 = call i32 %18(%struct.RedisModuleCtx* nonnull %2, i8** %21, i32 %23) #9, !dbg !7294
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %2) #10, !dbg !7295
  %25 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %5, i64 0, i32 4, !dbg !7296
  store void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)* null, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)** %25, align 8, !dbg !7297, !tbaa !6988
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #5, !dbg !7298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7298
  ret void, !dbg !7298
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_IsBlockedReplyRequest(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !7299 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !7303
  %3 = load i32, i32* %2, align 8, !dbg !7303, !tbaa !1179
  %4 = lshr i32 %3, 3, !dbg !7304
  %5 = and i32 %4, 1, !dbg !7304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7305
  ret i32 %5, !dbg !7305
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_IsBlockedTimeoutRequest(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !7306 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !7310
  %3 = load i32, i32* %2, align 8, !dbg !7310, !tbaa !1179
  %4 = lshr i32 %3, 4, !dbg !7311
  %5 = and i32 %4, 1, !dbg !7311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7312
  ret i32 %5, !dbg !7312
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_GetBlockedClientPrivateData(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !7313 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 10, !dbg !7319
  %3 = load i8*, i8** %2, align 8, !dbg !7319, !tbaa !6998
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7320
  ret i8* %3, !dbg !7320
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleBlockedClient* @RM_GetBlockedClientHandle(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !7321 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 3, !dbg !7327
  %3 = load %struct.RedisModuleBlockedClient*, %struct.RedisModuleBlockedClient** %2, align 8, !dbg !7327, !tbaa !2361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7328
  ret %struct.RedisModuleBlockedClient* %3, !dbg !7328
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_BlockedClientDisconnected(%struct.RedisModuleCtx* nocapture readonly) #0 !dbg !7329 {
  %2 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !7333
  %3 = load i32, i32* %2, align 8, !dbg !7333, !tbaa !1179
  %4 = lshr i32 %3, 6, !dbg !7334
  %5 = and i32 %4, 1, !dbg !7334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7335
  ret i32 %5, !dbg !7335
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCtx* @RM_GetThreadSafeContext(%struct.RedisModuleBlockedClient*) #0 !dbg !7336 {
  %2 = alloca %struct.RedisModuleCtx, align 8
  %3 = tail call i8* @zmalloc(i64 104) #9, !dbg !7344
  %4 = bitcast i8* %3 to %struct.RedisModuleCtx*, !dbg !7344
  %5 = bitcast %struct.RedisModuleCtx* %2 to i8*, !dbg !7346
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #5, !dbg !7346
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 1
  %7 = bitcast %struct.RedisModule** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 96, i1 false), !dbg !7347
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %2, i64 0, i32 0, !dbg !7347
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %8, align 8, !dbg !7347
  %9 = call i8* @memcpy(i8* %3, i8* nonnull %5, i64 104) #9, !dbg !7348
  %10 = icmp ne %struct.RedisModuleBlockedClient* %0, null, !dbg !7349
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7351
  br i1 %10, label %11, label %19, !dbg !7351

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !7352
  %13 = bitcast i8* %12 to %struct.RedisModuleBlockedClient**, !dbg !7352
  store %struct.RedisModuleBlockedClient* %0, %struct.RedisModuleBlockedClient** %13, align 8, !dbg !7354, !tbaa !2361
  %14 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 1, !dbg !7355
  %15 = bitcast %struct.RedisModule** %14 to i64*, !dbg !7355
  %16 = load i64, i64* %15, align 8, !dbg !7355, !tbaa !7048
  %17 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !7356
  %18 = bitcast i8* %17 to i64*, !dbg !7357
  store i64 %16, i64* %18, align 8, !dbg !7357, !tbaa !1171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7358
  br label %19, !dbg !7358

; <label>:19:                                     ; preds = %11, %1
  %20 = getelementptr inbounds i8, i8* %3, i64 48, !dbg !7359
  %21 = bitcast i8* %20 to i32*, !dbg !7359
  %22 = load i32, i32* %21, align 8, !dbg !7360, !tbaa !1179
  %23 = or i32 %22, 32, !dbg !7360
  store i32 %23, i32* %21, align 8, !dbg !7360, !tbaa !1179
  %24 = call %struct.client* @createClient(i32 -1) #9, !dbg !7361
  %25 = getelementptr inbounds i8, i8* %3, i64 16, !dbg !7362
  %26 = bitcast i8* %25 to %struct.client**, !dbg !7362
  store %struct.client* %24, %struct.client** %26, align 8, !dbg !7363, !tbaa !1183
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7364
  br i1 %10, label %27, label %37, !dbg !7364

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 8, !dbg !7365
  %29 = load i32, i32* %28, align 8, !dbg !7365, !tbaa !7072
  %30 = call i32 @selectDb(%struct.client* %24, i32 %29) #9, !dbg !7368
  %31 = getelementptr inbounds %struct.RedisModuleBlockedClient, %struct.RedisModuleBlockedClient* %0, i64 0, i32 0, !dbg !7369
  %32 = load %struct.client*, %struct.client** %31, align 8, !dbg !7369, !tbaa !7009
  %33 = getelementptr inbounds %struct.client, %struct.client* %32, i64 0, i32 0, !dbg !7370
  %34 = load i64, i64* %33, align 8, !dbg !7370, !tbaa !3022
  %35 = load %struct.client*, %struct.client** %26, align 8, !dbg !7371, !tbaa !1183
  %36 = getelementptr inbounds %struct.client, %struct.client* %35, i64 0, i32 0, !dbg !7372
  store i64 %34, i64* %36, align 8, !dbg !7373, !tbaa !3022
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7374
  br label %37, !dbg !7374

; <label>:37:                                     ; preds = %27, %19
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #5, !dbg !7375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7376
  ret %struct.RedisModuleCtx* %4, !dbg !7376
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeThreadSafeContext(%struct.RedisModuleCtx*) #0 !dbg !7377 {
  tail call void @moduleFreeContext(%struct.RedisModuleCtx* %0) #10, !dbg !7381
  %2 = bitcast %struct.RedisModuleCtx* %0 to i8*, !dbg !7382
  tail call void @zfree(i8* %2) #9, !dbg !7383
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7384
  ret void, !dbg !7384
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_ThreadSafeContextLock(%struct.RedisModuleCtx* nocapture readnone) #0 !dbg !7385 {
  %2 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #9, !dbg !7389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7393
  ret void, !dbg !7393
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleAcquireGIL() local_unnamed_addr #0 !dbg !7390 {
  %1 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #9, !dbg !7394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7395
  ret void, !dbg !7395
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_ThreadSafeContextUnlock(%struct.RedisModuleCtx* nocapture readnone) #0 !dbg !7396 {
  %2 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #9, !dbg !7400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7404
  ret void, !dbg !7404
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleReleaseGIL() local_unnamed_addr #0 !dbg !7401 {
  %1 = tail call i32 @pthread_mutex_unlock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #9, !dbg !7405
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7406
  ret void, !dbg !7406
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SubscribeToKeyspaceEvents(%struct.RedisModuleCtx* nocapture readonly, i32, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*) #0 !dbg !7407 {
  %4 = tail call i8* @zmalloc(i64 24) #9, !dbg !7430
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7432
  %6 = bitcast %struct.RedisModule** %5 to i64*, !dbg !7432
  %7 = load i64, i64* %6, align 8, !dbg !7432, !tbaa !1171
  %8 = bitcast i8* %4 to i64*, !dbg !7433
  store i64 %7, i64* %8, align 8, !dbg !7433, !tbaa !7434
  %9 = getelementptr inbounds i8, i8* %4, i64 16, !dbg !7436
  %10 = bitcast i8* %9 to i32*, !dbg !7436
  store i32 %1, i32* %10, align 8, !dbg !7437, !tbaa !7438
  %11 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !7439
  %12 = bitcast i8* %11 to i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)**, !dbg !7439
  store i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)* %2, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)** %12, align 8, !dbg !7440, !tbaa !7441
  %13 = getelementptr inbounds i8, i8* %4, i64 20, !dbg !7442
  %14 = bitcast i8* %13 to i32*, !dbg !7442
  store i32 0, i32* %14, align 4, !dbg !7443, !tbaa !7444
  %15 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7445, !tbaa !902
  %16 = tail call %struct.list* @listAddNodeTail(%struct.list* %15, i8* %4) #9, !dbg !7446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7447
  ret i32 0, !dbg !7447
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleNotifyKeyspaceEvent(i32, i8*, %struct.redisObject*, i32) local_unnamed_addr #0 !dbg !7448 {
  %5 = alloca %struct.listIter, align 8
  %6 = alloca %struct.RedisModuleCtx, align 8
  %7 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7467, !tbaa !902
  %8 = getelementptr inbounds %struct.list, %struct.list* %7, i64 0, i32 5, !dbg !7467
  %9 = load i64, i64* %8, align 8, !dbg !7467, !tbaa !5607
  %10 = icmp eq i64 %9, 0, !dbg !7469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7470
  br i1 %10, label %49, label %11, !dbg !7470

; <label>:11:                                     ; preds = %4
  %12 = bitcast %struct.listIter* %5 to i8*, !dbg !7471
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5, !dbg !7471
  call void @listRewind(%struct.list* %7, %struct.listIter* nonnull %5) #9, !dbg !7473
  %13 = and i32 %0, -4, !dbg !7474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7475
  %14 = call %struct.listNode* @listNext(%struct.listIter* nonnull %5) #9, !dbg !7476
  %15 = icmp eq %struct.listNode* %14, null, !dbg !7475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7475
  br i1 %15, label %48, label %16, !dbg !7475

; <label>:16:                                     ; preds = %11
  %17 = bitcast %struct.RedisModuleCtx* %6 to i8*
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 1
  %20 = bitcast %struct.RedisModule** %19 to i64*
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 2
  %22 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 3
  %23 = bitcast %struct.RedisModuleBlockedClient** %22 to i8*
  br label %24, !dbg !7475

; <label>:24:                                     ; preds = %16, %45
  %25 = phi %struct.listNode* [ %14, %16 ], [ %46, %45 ]
  %26 = getelementptr inbounds %struct.listNode, %struct.listNode* %25, i64 0, i32 2, !dbg !7478
  %27 = bitcast i8** %26 to %struct.RedisModuleKeyspaceSubscriber**, !dbg !7478
  %28 = load %struct.RedisModuleKeyspaceSubscriber*, %struct.RedisModuleKeyspaceSubscriber** %27, align 8, !dbg !7478, !tbaa !5611
  %29 = getelementptr inbounds %struct.RedisModuleKeyspaceSubscriber, %struct.RedisModuleKeyspaceSubscriber* %28, i64 0, i32 2, !dbg !7480
  %30 = load i32, i32* %29, align 8, !dbg !7480, !tbaa !7438
  %31 = and i32 %30, %13, !dbg !7481
  %32 = icmp eq i32 %31, 0, !dbg !7481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7482
  br i1 %32, label %45, label %33, !dbg !7482

; <label>:33:                                     ; preds = %24
  %34 = getelementptr inbounds %struct.RedisModuleKeyspaceSubscriber, %struct.RedisModuleKeyspaceSubscriber* %28, i64 0, i32 3, !dbg !7483
  %35 = load i32, i32* %34, align 4, !dbg !7483, !tbaa !7444
  %36 = icmp eq i32 %35, 0, !dbg !7484
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7485
  br i1 %36, label %37, label %45, !dbg !7485

; <label>:37:                                     ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #5, !dbg !7486
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 80, i1 false), !dbg !7487
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %18, align 8, !dbg !7487
  %38 = bitcast %struct.RedisModuleKeyspaceSubscriber* %28 to i64*, !dbg !7488
  %39 = load i64, i64* %38, align 8, !dbg !7488, !tbaa !7434
  store i64 %39, i64* %20, align 8, !dbg !7489, !tbaa !1171
  %40 = load %struct.client*, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !7490, !tbaa !902
  store %struct.client* %40, %struct.client** %21, align 8, !dbg !7491, !tbaa !1183
  %41 = call i32 @selectDb(%struct.client* %40, i32 %3) #9, !dbg !7492
  store i32 1, i32* %34, align 4, !dbg !7493, !tbaa !7444
  %42 = getelementptr inbounds %struct.RedisModuleKeyspaceSubscriber, %struct.RedisModuleKeyspaceSubscriber* %28, i64 0, i32 1, !dbg !7494
  %43 = load i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)** %42, align 8, !dbg !7494, !tbaa !7441
  %44 = call i32 %43(%struct.RedisModuleCtx* nonnull %6, i32 %13, i8* %1, %struct.redisObject* %2) #9, !dbg !7495
  store i32 0, i32* %34, align 4, !dbg !7496, !tbaa !7444
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %6) #10, !dbg !7497
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #5, !dbg !7498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7499
  br label %45, !dbg !7499

; <label>:45:                                     ; preds = %24, %37, %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7475
  %46 = call %struct.listNode* @listNext(%struct.listIter* nonnull %5) #9, !dbg !7476
  %47 = icmp eq %struct.listNode* %46, null, !dbg !7475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7475
  br i1 %47, label %48, label %24, !dbg !7475, !llvm.loop !7500

; <label>:48:                                     ; preds = %45, %11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5, !dbg !7502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7502
  br label %49, !dbg !7502

; <label>:49:                                     ; preds = %4, %48
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7502
  ret void, !dbg !7502
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleUnsubscribeNotifications(%struct.RedisModule* readnone) local_unnamed_addr #0 !dbg !7503 {
  %2 = alloca %struct.listIter, align 8
  %3 = bitcast %struct.listIter* %2 to i8*, !dbg !7513
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #5, !dbg !7513
  %4 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7514, !tbaa !902
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #9, !dbg !7516
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7517
  %5 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7518
  %6 = icmp eq %struct.listNode* %5, null, !dbg !7517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7517
  br i1 %6, label %19, label %7, !dbg !7517

; <label>:7:                                      ; preds = %1, %16
  %8 = phi %struct.listNode* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %struct.listNode, %struct.listNode* %8, i64 0, i32 2, !dbg !7520
  %10 = load i8*, i8** %9, align 8, !dbg !7520, !tbaa !5611
  %11 = bitcast i8* %10 to %struct.RedisModule**, !dbg !7522
  %12 = load %struct.RedisModule*, %struct.RedisModule** %11, align 8, !dbg !7522, !tbaa !7434
  %13 = icmp eq %struct.RedisModule* %12, %0, !dbg !7524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7525
  br i1 %13, label %14, label %16, !dbg !7525

; <label>:14:                                     ; preds = %7
  %15 = load %struct.list*, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !7526, !tbaa !902
  call void @listDelNode(%struct.list* %15, %struct.listNode* nonnull %8) #9, !dbg !7528
  call void @zfree(i8* %10) #9, !dbg !7529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7530
  br label %16, !dbg !7530

; <label>:16:                                     ; preds = %14, %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7517
  %17 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7518
  %18 = icmp eq %struct.listNode* %17, null, !dbg !7517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7517
  br i1 %18, label %19, label %7, !dbg !7517, !llvm.loop !7531

; <label>:19:                                     ; preds = %16, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #5, !dbg !7533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7533
  ret void, !dbg !7533
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleCallClusterReceivers(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #0 !dbg !7534 {
  %6 = alloca %struct.RedisModuleCtx, align 8
  %7 = zext i8 %2 to i64, !dbg !7553
  %8 = getelementptr inbounds [255 x %struct.moduleClusterReceiver*], [255 x %struct.moduleClusterReceiver*]* @clusterReceivers, i64 0, i64 %7, !dbg !7553
  %9 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %8, align 8, !dbg !7553, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7555
  %10 = icmp eq %struct.moduleClusterReceiver* %9, null, !dbg !7555
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7555
  br i1 %10, label %35, label %11, !dbg !7555

; <label>:11:                                     ; preds = %5, %31
  %12 = phi %struct.moduleClusterReceiver* [ %33, %31 ], [ %9, %5 ]
  %13 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 0, !dbg !7556
  %14 = load i64, i64* %13, align 8, !dbg !7556, !tbaa !7557
  %15 = icmp eq i64 %14, %1, !dbg !7559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7560
  br i1 %15, label %16, label %31, !dbg !7560

; <label>:16:                                     ; preds = %11
  %17 = bitcast %struct.RedisModuleCtx* %6 to i8*, !dbg !7561
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #5, !dbg !7561
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 3
  %19 = bitcast %struct.RedisModuleBlockedClient** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 80, i1 false), !dbg !7562
  %20 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 0, !dbg !7562
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %20, align 8, !dbg !7562
  %21 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 2, !dbg !7563
  %22 = bitcast %struct.RedisModule** %21 to i64*, !dbg !7563
  %23 = load i64, i64* %22, align 8, !dbg !7563, !tbaa !7564
  %24 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 1, !dbg !7565
  %25 = bitcast %struct.RedisModule** %24 to i64*, !dbg !7566
  store i64 %23, i64* %25, align 8, !dbg !7566, !tbaa !1171
  %26 = load %struct.client*, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !7567, !tbaa !902
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 2, !dbg !7568
  store %struct.client* %26, %struct.client** %27, align 8, !dbg !7569, !tbaa !1183
  %28 = tail call i32 @selectDb(%struct.client* %26, i32 0) #9, !dbg !7570
  %29 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 1, !dbg !7571
  %30 = load void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)** %29, align 8, !dbg !7571, !tbaa !7572
  call void %30(%struct.RedisModuleCtx* nonnull %6, i8* %0, i8 zeroext %2, i8* %3, i32 %4) #9, !dbg !7573
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %6) #10, !dbg !7574
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #5, !dbg !7575
  br label %35

; <label>:31:                                     ; preds = %11
  %32 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %12, i64 0, i32 3, !dbg !7576
  %33 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %32, align 8, !dbg !7576, !tbaa !7577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7555
  %34 = icmp eq %struct.moduleClusterReceiver* %33, null, !dbg !7555
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7555
  br i1 %34, label %35, label %11, !dbg !7555, !llvm.loop !7578

; <label>:35:                                     ; preds = %31, %5, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7580
  ret void, !dbg !7580
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_RegisterClusterMessageReceiver(%struct.RedisModuleCtx* nocapture readonly, i8 zeroext, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*) #0 !dbg !7581 {
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7594, !tbaa !3068
  %5 = icmp eq i32 %4, 0, !dbg !7596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7597
  br i1 %5, label %62, label %6, !dbg !7597

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7598
  %8 = load %struct.RedisModule*, %struct.RedisModule** %7, align 8, !dbg !7598, !tbaa !1171
  %9 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %8, i64 0, i32 1, !dbg !7599
  %10 = load i8*, i8** %9, align 8, !dbg !7599, !tbaa !1173
  %11 = tail call i64 @moduleTypeEncodeId(i8* %10, i32 0) #10, !dbg !7600
  %12 = zext i8 %1 to i64, !dbg !7602
  %13 = getelementptr inbounds [255 x %struct.moduleClusterReceiver*], [255 x %struct.moduleClusterReceiver*]* @clusterReceivers, i64 0, i64 %12, !dbg !7602
  %14 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %13, align 8, !dbg !7602, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7605
  %15 = icmp eq %struct.moduleClusterReceiver* %14, null, !dbg !7605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7605
  br i1 %15, label %44, label %16, !dbg !7605

; <label>:16:                                     ; preds = %6
  %17 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %14, i64 0, i32 0, !dbg !7606
  %18 = load i64, i64* %17, align 8, !dbg !7606, !tbaa !7557
  %19 = icmp eq i64 %18, %11, !dbg !7609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7610
  br i1 %19, label %24, label %39, !dbg !7610

; <label>:20:                                     ; preds = %39
  %21 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %42, i64 0, i32 0, !dbg !7606
  %22 = load i64, i64* %21, align 8, !dbg !7606, !tbaa !7557
  %23 = icmp eq i64 %22, %11, !dbg !7609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7610
  br i1 %23, label %24, label %39, !dbg !7610, !llvm.loop !7611

; <label>:24:                                     ; preds = %20, %16
  %25 = phi %struct.moduleClusterReceiver* [ %14, %16 ], [ %42, %20 ]
  %26 = phi %struct.moduleClusterReceiver* [ null, %16 ], [ %40, %20 ]
  %27 = icmp eq void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, null, !dbg !7613
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7616
  br i1 %27, label %30, label %28, !dbg !7616

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %25, i64 0, i32 1, !dbg !7617
  store void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)** %29, align 8, !dbg !7619, !tbaa !7572
  br label %60, !dbg !7620

; <label>:30:                                     ; preds = %24
  %31 = bitcast %struct.moduleClusterReceiver* %25 to i8*, !dbg !7621
  %32 = icmp eq %struct.moduleClusterReceiver* %26, null, !dbg !7622
  %33 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %25, i64 0, i32 3, !dbg !7625
  %34 = bitcast %struct.moduleClusterReceiver** %33 to i64*, !dbg !7625
  %35 = load i64, i64* %34, align 8, !dbg !7625, !tbaa !7577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7626
  %36 = select i1 %32, %struct.moduleClusterReceiver* %14, %struct.moduleClusterReceiver* %26, !dbg !7626
  %37 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %36, i64 0, i32 3, !dbg !7625
  %38 = bitcast %struct.moduleClusterReceiver** %37 to i64*, !dbg !7625
  store i64 %35, i64* %38, align 8, !dbg !7625, !tbaa !7577
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  tail call void @zfree(i8* nonnull %31) #9, !dbg !7627
  br label %60

; <label>:39:                                     ; preds = %16, %20
  %40 = phi %struct.moduleClusterReceiver* [ %42, %20 ], [ %14, %16 ]
  %41 = getelementptr inbounds %struct.moduleClusterReceiver, %struct.moduleClusterReceiver* %40, i64 0, i32 3, !dbg !7628
  %42 = load %struct.moduleClusterReceiver*, %struct.moduleClusterReceiver** %41, align 8, !dbg !7628, !tbaa !7577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7605
  %43 = icmp eq %struct.moduleClusterReceiver* %42, null, !dbg !7605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7605
  br i1 %43, label %44, label %20, !dbg !7605, !llvm.loop !7611

; <label>:44:                                     ; preds = %39, %6
  %45 = icmp eq void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, null, !dbg !7629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7631
  br i1 %45, label %61, label %46, !dbg !7631

; <label>:46:                                     ; preds = %44
  %47 = tail call i8* @zmalloc(i64 32) #9, !dbg !7632
  %48 = bitcast i8* %47 to i64*, !dbg !7634
  store i64 %11, i64* %48, align 8, !dbg !7635, !tbaa !7557
  %49 = bitcast %struct.RedisModule** %7 to i64*, !dbg !7636
  %50 = load i64, i64* %49, align 8, !dbg !7636, !tbaa !1171
  %51 = getelementptr inbounds i8, i8* %47, i64 16, !dbg !7637
  %52 = bitcast i8* %51 to i64*, !dbg !7638
  store i64 %50, i64* %52, align 8, !dbg !7638, !tbaa !7564
  %53 = getelementptr inbounds i8, i8* %47, i64 8, !dbg !7639
  %54 = bitcast i8* %53 to void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)**, !dbg !7639
  store void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* %2, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)** %54, align 8, !dbg !7640, !tbaa !7572
  %55 = bitcast %struct.moduleClusterReceiver** %13 to i64*, !dbg !7641
  %56 = load i64, i64* %55, align 8, !dbg !7641, !tbaa !902
  %57 = getelementptr inbounds i8, i8* %47, i64 24, !dbg !7642
  %58 = bitcast i8* %57 to i64*, !dbg !7643
  store i64 %56, i64* %58, align 8, !dbg !7643, !tbaa !7577
  %59 = bitcast %struct.moduleClusterReceiver** %13 to i8**, !dbg !7644
  store i8* %47, i8** %59, align 8, !dbg !7644, !tbaa !902
  br label %60, !dbg !7645

; <label>:60:                                     ; preds = %28, %30, %46
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %61, !dbg !7646

; <label>:61:                                     ; preds = %60, %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7646
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %62

; <label>:62:                                     ; preds = %3, %61
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7647
  ret void, !dbg !7647
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_SendClusterMessage(%struct.RedisModuleCtx* nocapture readonly, i8*, i8 zeroext, i8*, i32) #0 !dbg !7648 {
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7663, !tbaa !3068
  %7 = icmp eq i32 %6, 0, !dbg !7665
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7666
  br i1 %7, label %17, label %8, !dbg !7666

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !7667
  %10 = load %struct.RedisModule*, %struct.RedisModule** %9, align 8, !dbg !7667, !tbaa !1171
  %11 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %10, i64 0, i32 1, !dbg !7668
  %12 = load i8*, i8** %11, align 8, !dbg !7668, !tbaa !1173
  %13 = tail call i64 @moduleTypeEncodeId(i8* %12, i32 0) #10, !dbg !7669
  %14 = tail call i32 @clusterSendModuleMessageToTarget(i8* %1, i64 %13, i8 zeroext %2, i8* %3, i32 %4) #9, !dbg !7671
  %15 = icmp ne i32 %14, 0, !dbg !7673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7675
  %16 = zext i1 %15 to i32, !dbg !7676
  br label %17

; <label>:17:                                     ; preds = %5, %8
  %18 = phi i32 [ %16, %8 ], [ 1, %5 ], !dbg !7677
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7678
  ret i32 %18, !dbg !7678
}

; Function Attrs: noredzone
declare dso_local i32 @clusterSendModuleMessageToTarget(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i8** @RM_GetClusterNodesList(%struct.RedisModuleCtx* nocapture readnone, i64* nocapture) #0 !dbg !7679 {
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7738, !tbaa !3068
  %4 = icmp eq i32 %3, 0, !dbg !7740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7741
  br i1 %4, label %49, label %5, !dbg !7741

; <label>:5:                                      ; preds = %2
  %6 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7742, !tbaa !5561
  %7 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %6, i64 0, i32 4, !dbg !7742
  %8 = load %struct.dict*, %struct.dict** %7, align 8, !dbg !7742, !tbaa !7743
  %9 = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 0, i32 3, !dbg !7742
  %10 = load i64, i64* %9, align 8, !dbg !7742, !tbaa !7744
  %11 = getelementptr inbounds %struct.dict, %struct.dict* %8, i64 0, i32 2, i64 1, i32 3, !dbg !7742
  %12 = load i64, i64* %11, align 8, !dbg !7742, !tbaa !7744
  %13 = add i64 %12, %10, !dbg !7742
  %14 = mul i64 %13, 40, !dbg !7747
  %15 = add i64 %14, 40, !dbg !7747
  %16 = tail call i8* @zmalloc(i64 %15) #9, !dbg !7748
  %17 = bitcast i8* %16 to i8**, !dbg !7748
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7750, !tbaa !5561
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 4, !dbg !7751
  %20 = load %struct.dict*, %struct.dict** %19, align 8, !dbg !7751, !tbaa !7743
  %21 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %20) #9, !dbg !7752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  %22 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %21) #9, !dbg !7756
  %23 = icmp eq %struct.dictEntry* %22, null, !dbg !7758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %23, label %45, label %24, !dbg !7755

; <label>:24:                                     ; preds = %5, %41
  %25 = phi %struct.dictEntry* [ %43, %41 ], [ %22, %5 ]
  %26 = phi i32 [ %42, %41 ], [ 0, %5 ]
  %27 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %25, i64 0, i32 1, i32 0, !dbg !7759
  %28 = bitcast i8** %27 to %struct.clusterNode**, !dbg !7759
  %29 = load %struct.clusterNode*, %struct.clusterNode** %28, align 8, !dbg !7759, !tbaa !1137
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 2, !dbg !7761
  %31 = load i32, i32* %30, align 8, !dbg !7761, !tbaa !7763
  %32 = and i32 %31, 96, !dbg !7765
  %33 = icmp eq i32 %32, 0, !dbg !7765
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7766
  br i1 %33, label %34, label %41, !dbg !7766, !llvm.loop !7767

; <label>:34:                                     ; preds = %24
  %35 = tail call i8* @zmalloc(i64 40) #9, !dbg !7769
  %36 = sext i32 %26 to i64, !dbg !7770
  %37 = getelementptr inbounds i8*, i8** %17, i64 %36, !dbg !7770
  store i8* %35, i8** %37, align 8, !dbg !7771, !tbaa !902
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 1, i64 0, !dbg !7772
  %39 = tail call i8* @memcpy(i8* %35, i8* nonnull %38, i64 40) #9, !dbg !7773
  %40 = add nsw i32 %26, 1, !dbg !7774
  br label %41, !dbg !7768

; <label>:41:                                     ; preds = %24, %34
  %42 = phi i32 [ %40, %34 ], [ %26, %24 ], !dbg !7775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7776
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %43 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %21) #9, !dbg !7756
  %44 = icmp eq %struct.dictEntry* %43, null, !dbg !7758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %44, label %45, label %24, !dbg !7755

; <label>:45:                                     ; preds = %41, %5
  %46 = phi i32 [ 0, %5 ], [ %42, %41 ], !dbg !7754
  %47 = sext i32 %46 to i64, !dbg !7777
  store i64 %47, i64* %1, align 8, !dbg !7778, !tbaa !2163
  %48 = getelementptr inbounds i8*, i8** %17, i64 %47, !dbg !7779
  store i8* null, i8** %48, align 8, !dbg !7780, !tbaa !902
  tail call void @dictReleaseIterator(%struct.dictIterator* %21) #9, !dbg !7781
  br label %49

; <label>:49:                                     ; preds = %2, %45
  %50 = phi i8** [ %17, %45 ], [ null, %2 ], !dbg !7782
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7783
  ret i8** %50, !dbg !7783
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_FreeClusterNodesList(i8**) #0 !dbg !7784 {
  %2 = icmp eq i8** %0, null, !dbg !7792
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7794
  br i1 %2, label %15, label %3, !dbg !7794

; <label>:3:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7796
  %4 = load i8*, i8** %0, align 8, !dbg !7797, !tbaa !902
  %5 = icmp eq i8* %4, null, !dbg !7799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7799
  br i1 %5, label %6, label %8, !dbg !7799

; <label>:6:                                      ; preds = %8, %3
  %7 = bitcast i8** %0 to i8*, !dbg !7800
  tail call void @zfree(i8* %7) #9, !dbg !7801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7802
  br label %15, !dbg !7802

; <label>:8:                                      ; preds = %3, %8
  %9 = phi i64 [ %11, %8 ], [ 0, %3 ]
  %10 = phi i8* [ %13, %8 ], [ %4, %3 ]
  tail call void @zfree(i8* nonnull %10) #9, !dbg !7803
  %11 = add nuw i64 %9, 1, !dbg !7804
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7805
  %12 = getelementptr inbounds i8*, i8** %0, i64 %11, !dbg !7797
  %13 = load i8*, i8** %12, align 8, !dbg !7797, !tbaa !902
  %14 = icmp eq i8* %13, null, !dbg !7799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7799
  br i1 %14, label %6, label %8, !dbg !7799, !llvm.loop !7806

; <label>:15:                                     ; preds = %1, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7802
  ret void, !dbg !7802
}

; Function Attrs: norecurse noredzone nounwind
define dso_local i8* @RM_GetMyClusterID() #8 !dbg !7808 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7811, !tbaa !3068
  %2 = icmp eq i32 %1, 0, !dbg !7813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7814
  br i1 %2, label %8, label %3, !dbg !7814

; <label>:3:                                      ; preds = %0
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7815, !tbaa !5561
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 0, !dbg !7816
  %6 = load %struct.clusterNode*, %struct.clusterNode** %5, align 8, !dbg !7816, !tbaa !5563
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %6, i64 0, i32 1, i64 0, !dbg !7817
  br label %8, !dbg !7818

; <label>:8:                                      ; preds = %0, %3
  %9 = phi i8* [ %7, %3 ], [ null, %0 ], !dbg !7819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7820
  ret i8* %9, !dbg !7820
}

; Function Attrs: norecurse noredzone nounwind
define dso_local i64 @RM_GetClusterSize() #8 !dbg !7821 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !7824, !tbaa !3068
  %2 = icmp eq i32 %1, 0, !dbg !7826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7827
  br i1 %2, label %12, label %3, !dbg !7827

; <label>:3:                                      ; preds = %0
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7828, !tbaa !5561
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 4, !dbg !7828
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !7828, !tbaa !7743
  %7 = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 2, i64 0, i32 3, !dbg !7828
  %8 = load i64, i64* %7, align 8, !dbg !7828, !tbaa !7744
  %9 = getelementptr inbounds %struct.dict, %struct.dict* %6, i64 0, i32 2, i64 1, i32 3, !dbg !7828
  %10 = load i64, i64* %9, align 8, !dbg !7828, !tbaa !7744
  %11 = add i64 %10, %8, !dbg !7828
  br label %12, !dbg !7829

; <label>:12:                                     ; preds = %0, %3
  %13 = phi i64 [ %11, %3 ], [ 0, %0 ], !dbg !7830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7831
  ret i64 %13, !dbg !7831
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetClusterNodeInfo(%struct.RedisModuleCtx* nocapture readnone, i8*, i8*, i8*, i32*, i32*) #0 !dbg !7832 {
  %7 = tail call %struct.clusterNode* @clusterLookupNode(i8* %1) #9, !dbg !7849
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 2, !dbg !7851
  %9 = load i32, i32* %8, align 8, !dbg !7851, !tbaa !7763
  %10 = and i32 %9, 96, !dbg !7853
  %11 = icmp eq i32 %10, 0, !dbg !7853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7854
  br i1 %11, label %12, label %85, !dbg !7854

; <label>:12:                                     ; preds = %6
  %13 = icmp eq i8* %2, null, !dbg !7855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7857
  br i1 %13, label %17, label %14, !dbg !7857

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 1, i64 0, !dbg !7858
  %16 = tail call i8* @memcpy(i8* nonnull %2, i8* nonnull %15, i64 40) #9, !dbg !7859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7859
  br label %17, !dbg !7859

; <label>:17:                                     ; preds = %12, %14
  %18 = icmp eq i8* %3, null, !dbg !7860
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7862
  br i1 %18, label %33, label %19, !dbg !7862

; <label>:19:                                     ; preds = %17
  %20 = load i32, i32* %8, align 8, !dbg !7863, !tbaa !7763
  %21 = and i32 %20, 1, !dbg !7866
  %22 = icmp eq i32 %21, 0, !dbg !7866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7867
  br i1 %22, label %30, label %23, !dbg !7867

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 8, !dbg !7868
  %25 = load %struct.clusterNode*, %struct.clusterNode** %24, align 8, !dbg !7868, !tbaa !7869
  %26 = icmp eq %struct.clusterNode* %25, null, !dbg !7870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7871
  br i1 %26, label %30, label %27, !dbg !7871

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %25, i64 0, i32 1, i64 0, !dbg !7872
  %29 = tail call i8* @memcpy(i8* nonnull %3, i8* nonnull %28, i64 40) #9, !dbg !7873
  br label %32, !dbg !7873

; <label>:30:                                     ; preds = %23, %19
  %31 = tail call i8* @memset(i8* nonnull %3, i32 0, i64 40) #9, !dbg !7874
  br label %32

; <label>:32:                                     ; preds = %30, %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %33, !dbg !7875

; <label>:33:                                     ; preds = %32, %17
  %34 = icmp eq i32* %4, null, !dbg !7875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7877
  br i1 %34, label %38, label %35, !dbg !7877

; <label>:35:                                     ; preds = %33
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %7, i64 0, i32 17, !dbg !7878
  %37 = load i32, i32* %36, align 8, !dbg !7878, !tbaa !7879
  store i32 %37, i32* %4, align 4, !dbg !7880, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7881
  br label %38, !dbg !7881

; <label>:38:                                     ; preds = %33, %35
  %39 = icmp eq i32* %5, null, !dbg !7882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7884
  br i1 %39, label %85, label %40, !dbg !7884

; <label>:40:                                     ; preds = %38
  store i32 0, i32* %5, align 4, !dbg !7885, !tbaa !933
  %41 = load i32, i32* %8, align 8, !dbg !7887, !tbaa !7763
  %42 = and i32 %41, 16, !dbg !7889
  %43 = icmp eq i32 %42, 0, !dbg !7889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7890
  br i1 %43, label %46, label %44, !dbg !7890

; <label>:44:                                     ; preds = %40
  store i32 1, i32* %5, align 4, !dbg !7891, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7892
  %45 = load i32, i32* %8, align 8, !dbg !7893, !tbaa !7763
  br label %46, !dbg !7892

; <label>:46:                                     ; preds = %40, %44
  %47 = phi i32 [ 0, %40 ], [ 1, %44 ]
  %48 = phi i32 [ %41, %40 ], [ %45, %44 ], !dbg !7893
  %49 = and i32 %48, 1, !dbg !7895
  %50 = icmp eq i32 %49, 0, !dbg !7895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7896
  br i1 %50, label %54, label %51, !dbg !7896

; <label>:51:                                     ; preds = %46
  %52 = or i32 %47, 2, !dbg !7897
  store i32 %52, i32* %5, align 4, !dbg !7897, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7898
  %53 = load i32, i32* %8, align 8, !dbg !7899, !tbaa !7763
  br label %54, !dbg !7898

; <label>:54:                                     ; preds = %46, %51
  %55 = phi i32 [ %47, %46 ], [ %52, %51 ]
  %56 = phi i32 [ %48, %46 ], [ %53, %51 ], !dbg !7899
  %57 = and i32 %56, 2, !dbg !7901
  %58 = icmp eq i32 %57, 0, !dbg !7901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7902
  br i1 %58, label %62, label %59, !dbg !7902

; <label>:59:                                     ; preds = %54
  %60 = or i32 %55, 4, !dbg !7903
  store i32 %60, i32* %5, align 4, !dbg !7903, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7904
  %61 = load i32, i32* %8, align 8, !dbg !7905, !tbaa !7763
  br label %62, !dbg !7904

; <label>:62:                                     ; preds = %54, %59
  %63 = phi i32 [ %55, %54 ], [ %60, %59 ]
  %64 = phi i32 [ %56, %54 ], [ %61, %59 ], !dbg !7905
  %65 = and i32 %64, 4, !dbg !7907
  %66 = icmp eq i32 %65, 0, !dbg !7907
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7908
  br i1 %66, label %70, label %67, !dbg !7908

; <label>:67:                                     ; preds = %62
  %68 = or i32 %63, 8, !dbg !7909
  store i32 %68, i32* %5, align 4, !dbg !7909, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7910
  %69 = load i32, i32* %8, align 8, !dbg !7911, !tbaa !7763
  br label %70, !dbg !7910

; <label>:70:                                     ; preds = %62, %67
  %71 = phi i32 [ %63, %62 ], [ %68, %67 ]
  %72 = phi i32 [ %64, %62 ], [ %69, %67 ], !dbg !7911
  %73 = and i32 %72, 8, !dbg !7913
  %74 = icmp eq i32 %73, 0, !dbg !7913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7914
  br i1 %74, label %78, label %75, !dbg !7914

; <label>:75:                                     ; preds = %70
  %76 = or i32 %71, 16, !dbg !7915
  store i32 %76, i32* %5, align 4, !dbg !7915, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7916
  %77 = load i32, i32* %8, align 8, !dbg !7917, !tbaa !7763
  br label %78, !dbg !7916

; <label>:78:                                     ; preds = %70, %75
  %79 = phi i32 [ %71, %70 ], [ %76, %75 ]
  %80 = phi i32 [ %72, %70 ], [ %77, %75 ], !dbg !7917
  %81 = and i32 %80, 512, !dbg !7919
  %82 = icmp eq i32 %81, 0, !dbg !7919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7920
  br i1 %82, label %85, label %83, !dbg !7920

; <label>:83:                                     ; preds = %78
  %84 = or i32 %79, 32, !dbg !7921
  store i32 %84, i32* %5, align 4, !dbg !7921, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7922
  br label %85, !dbg !7922

; <label>:85:                                     ; preds = %83, %38, %78, %6
  %86 = phi i32 [ 1, %6 ], [ 0, %78 ], [ 0, %38 ], [ 0, %83 ], !dbg !7923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7925
  ret i32 %86, !dbg !7925
}

; Function Attrs: noredzone
declare dso_local %struct.clusterNode* @clusterLookupNode(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_SetClusterFlags(%struct.RedisModuleCtx* nocapture readnone, i64) #0 !dbg !7926 {
  %3 = and i64 %1, 2, !dbg !7934
  %4 = icmp eq i64 %3, 0, !dbg !7934
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7936
  br i1 %4, label %8, label %5, !dbg !7936

; <label>:5:                                      ; preds = %2
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7937, !tbaa !7938
  %7 = or i32 %6, 2, !dbg !7937
  store i32 %7, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7937, !tbaa !7938
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7939
  br label %8, !dbg !7939

; <label>:8:                                      ; preds = %2, %5
  %9 = and i64 %1, 4, !dbg !7940
  %10 = icmp eq i64 %9, 0, !dbg !7940
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7942
  br i1 %10, label %14, label %11, !dbg !7942

; <label>:11:                                     ; preds = %8
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7943, !tbaa !7938
  %13 = or i32 %12, 4, !dbg !7943
  store i32 %13, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7943, !tbaa !7938
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7944
  br label %14, !dbg !7944

; <label>:14:                                     ; preds = %8, %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7945
  ret void, !dbg !7945
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleTimerHandler(%struct.aeEventLoop* nocapture readnone, i64, i8* nocapture readnone) #0 !dbg !7946 {
  %4 = alloca %struct.raxIterator, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.RedisModuleCtx, align 8
  %7 = bitcast %struct.raxIterator* %4 to i8*, !dbg !8001
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %7) #5, !dbg !8001
  %8 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8002, !tbaa !902
  call void @raxStart(%struct.raxIterator* nonnull %4, %struct.rax* %8) #9, !dbg !8004
  %9 = call i64 @ustime() #9, !dbg !8005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8008
  %10 = call i32 @raxSeek(%struct.raxIterator* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0) #9, !dbg !8009
  %11 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !8010
  %12 = icmp eq i32 %11, 0, !dbg !8010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8012
  br i1 %12, label %25, label %13, !dbg !8012

; <label>:13:                                     ; preds = %3
  %14 = bitcast i64* %5 to i8*
  %15 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 2
  %16 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 3
  %17 = bitcast %struct.RedisModuleCtx* %6 to i8*
  %18 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 0
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 1
  %20 = bitcast %struct.RedisModule** %19 to i64*
  %21 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 2
  %22 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 4
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %6, i64 0, i32 3
  %24 = bitcast %struct.RedisModuleBlockedClient** %23 to i8*
  br label %26, !dbg !8012

; <label>:25:                                     ; preds = %32, %3
  call void @raxStop(%struct.raxIterator* nonnull %4) #9, !dbg !8013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8014
  br label %58, !dbg !8014

; <label>:26:                                     ; preds = %13, %32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5, !dbg !8015
  %27 = load i8*, i8** %15, align 8, !dbg !8016, !tbaa !8017
  %28 = call i8* @memcpy(i8* nonnull %14, i8* %27, i64 8) #9, !dbg !8020
  %29 = load i64, i64* %5, align 8, !dbg !8021, !tbaa !2163
  %30 = call i64 @intrev64(i64 %29) #9, !dbg !8021
  store i64 %30, i64* %5, align 8, !dbg !8023, !tbaa !2163
  %31 = icmp ugt i64 %30, %9, !dbg !8024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8025
  br i1 %31, label %54, label %32, !dbg !8025

; <label>:32:                                     ; preds = %26
  %33 = load i8*, i8** %16, align 8, !dbg !8026, !tbaa !8027
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #5, !dbg !8029
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 80, i1 false), !dbg !8030
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %18, align 8, !dbg !8030
  %34 = bitcast i8* %33 to i64*, !dbg !8031
  %35 = load i64, i64* %34, align 8, !dbg !8031, !tbaa !8032
  store i64 %35, i64* %20, align 8, !dbg !8034, !tbaa !1171
  %36 = load %struct.client*, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !8035, !tbaa !902
  store %struct.client* %36, %struct.client** %21, align 8, !dbg !8036, !tbaa !1183
  %37 = getelementptr inbounds i8, i8* %33, i64 24, !dbg !8037
  %38 = bitcast i8* %37 to i32*, !dbg !8037
  %39 = load i32, i32* %38, align 8, !dbg !8037, !tbaa !8038
  %40 = call i32 @selectDb(%struct.client* %36, i32 %39) #9, !dbg !8039
  %41 = getelementptr inbounds i8, i8* %33, i64 8, !dbg !8040
  %42 = bitcast i8* %41 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !8040
  %43 = load void (%struct.RedisModuleCtx*, i8*)*, void (%struct.RedisModuleCtx*, i8*)** %42, align 8, !dbg !8040, !tbaa !8041
  %44 = getelementptr inbounds i8, i8* %33, i64 16, !dbg !8042
  %45 = bitcast i8* %44 to i8**, !dbg !8042
  %46 = load i8*, i8** %45, align 8, !dbg !8042, !tbaa !8043
  call void %43(%struct.RedisModuleCtx* nonnull %6, i8* %46) #9, !dbg !8044
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %6) #10, !dbg !8045
  %47 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8046, !tbaa !902
  %48 = load i8*, i8** %15, align 8, !dbg !8047, !tbaa !8017
  %49 = load i64, i64* %22, align 8, !dbg !8048, !tbaa !8049
  %50 = call i32 @raxRemove(%struct.rax* %47, i8* %48, i64 %49, i8** null) #9, !dbg !8050
  call void @zfree(i8* %33) #9, !dbg !8051
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #5, !dbg !8052
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5, !dbg !8053
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %51 = call i32 @raxSeek(%struct.raxIterator* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0) #9, !dbg !8009
  %52 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !8010
  %53 = icmp eq i32 %52, 0, !dbg !8010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8012
  br i1 %53, label %25, label %26, !dbg !8012

; <label>:54:                                     ; preds = %26
  %55 = sub i64 %30, %9, !dbg !8054
  %56 = udiv i64 %55, 1000, !dbg !8056
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8057
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5, !dbg !8053
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @raxStop(%struct.raxIterator* nonnull %4) #9, !dbg !8013
  %57 = icmp ult i64 %55, 1000, !dbg !8058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8014
  br i1 %57, label %58, label %59, !dbg !8014

; <label>:58:                                     ; preds = %25, %54
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8060
  br label %59, !dbg !8060

; <label>:59:                                     ; preds = %58, %54
  %60 = phi i64 [ 1, %58 ], [ %56, %54 ], !dbg !8061
  %61 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8062, !tbaa !902
  %62 = call i64 @raxSize(%struct.rax* %61) #9, !dbg !8063
  %63 = icmp eq i64 %62, 0, !dbg !8064
  %64 = select i1 %63, i64 4294967295, i64 %60, !dbg !8065
  %65 = trunc i64 %64 to i32, !dbg !8065
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %7) #5, !dbg !8066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8067
  ret i32 %65, !dbg !8067
}

; Function Attrs: noredzone
declare dso_local void @raxStart(%struct.raxIterator*, %struct.rax*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @ustime() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxSeek(%struct.raxIterator*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxNext(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @intrev64(i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxRemove(%struct.rax*, i8*, i64, i8**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @raxStop(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @raxSize(%struct.rax*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_CreateTimer(%struct.RedisModuleCtx* nocapture readonly, i64, void (%struct.RedisModuleCtx*, i8*)*, i8*) #0 !dbg !8068 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.raxIterator, align 8
  %7 = tail call i8* @zmalloc(i64 32) #9, !dbg !8088
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8090
  %9 = bitcast %struct.RedisModule** %8 to i64*, !dbg !8090
  %10 = load i64, i64* %9, align 8, !dbg !8090, !tbaa !1171
  %11 = bitcast i8* %7 to i64*, !dbg !8091
  store i64 %10, i64* %11, align 8, !dbg !8091, !tbaa !8032
  %12 = getelementptr inbounds i8, i8* %7, i64 8, !dbg !8092
  %13 = bitcast i8* %12 to void (%struct.RedisModuleCtx*, i8*)**, !dbg !8092
  store void (%struct.RedisModuleCtx*, i8*)* %2, void (%struct.RedisModuleCtx*, i8*)** %13, align 8, !dbg !8093, !tbaa !8041
  %14 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !8094
  %15 = bitcast i8* %14 to i8**, !dbg !8094
  store i8* %3, i8** %15, align 8, !dbg !8095, !tbaa !8043
  %16 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 2, !dbg !8096
  %17 = load %struct.client*, %struct.client** %16, align 8, !dbg !8096, !tbaa !1183
  %18 = getelementptr inbounds %struct.client, %struct.client* %17, i64 0, i32 2, !dbg !8097
  %19 = load %struct.redisDb*, %struct.redisDb** %18, align 8, !dbg !8097, !tbaa !1322
  %20 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %19, i64 0, i32 5, !dbg !8098
  %21 = load i32, i32* %20, align 8, !dbg !8098, !tbaa !1324
  %22 = getelementptr inbounds i8, i8* %7, i64 24, !dbg !8099
  %23 = bitcast i8* %22 to i32*, !dbg !8099
  store i32 %21, i32* %23, align 8, !dbg !8100, !tbaa !8038
  %24 = tail call i64 @ustime() #9, !dbg !8101
  %25 = mul nsw i64 %1, 1000, !dbg !8102
  %26 = add nsw i64 %24, %25, !dbg !8103
  %27 = bitcast i64* %5 to i8*, !dbg !8105
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5, !dbg !8105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8106
  %28 = call i64 @intrev64(i64 %26) #9, !dbg !8107
  store i64 %28, i64* %5, align 8, !dbg !8110, !tbaa !2163
  %29 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8111, !tbaa !902
  %30 = call i8* @raxFind(%struct.rax* %29, i8* nonnull %27, i64 8) #9, !dbg !8113
  %31 = load i8*, i8** @raxNotFound, align 8, !dbg !8114, !tbaa !902
  %32 = icmp eq i8* %30, %31, !dbg !8115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8116
  br i1 %32, label %33, label %39, !dbg !8116

; <label>:33:                                     ; preds = %39, %4
  %34 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8117, !tbaa !902
  %35 = call i32 @raxInsert(%struct.rax* %34, i8* nonnull %27, i64 8, i8* %7, i8** null) #9, !dbg !8119
  %36 = load i64, i64* @aeTimer, align 8, !dbg !8120, !tbaa !1650
  %37 = icmp eq i64 %36, -1, !dbg !8121
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8122
  br i1 %37, label %38, label %47, !dbg !8122

; <label>:38:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8123
  br label %63, !dbg !8123

; <label>:39:                                     ; preds = %4, %39
  %40 = phi i64 [ %41, %39 ], [ %26, %4 ]
  %41 = add i64 %40, 1, !dbg !8124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8106
  %42 = call i64 @intrev64(i64 %41) #9, !dbg !8107
  store i64 %42, i64* %5, align 8, !dbg !8110, !tbaa !2163
  %43 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8111, !tbaa !902
  %44 = call i8* @raxFind(%struct.rax* %43, i8* nonnull %27, i64 8) #9, !dbg !8113
  %45 = load i8*, i8** @raxNotFound, align 8, !dbg !8114, !tbaa !902
  %46 = icmp eq i8* %44, %45, !dbg !8115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8116
  br i1 %46, label %33, label %39, !dbg !8116, !llvm.loop !8126

; <label>:47:                                     ; preds = %33
  %48 = bitcast %struct.raxIterator* %6 to i8*, !dbg !8128
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %48) #5, !dbg !8128
  %49 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8129, !tbaa !902
  call void @raxStart(%struct.raxIterator* nonnull %6, %struct.rax* %49) #9, !dbg !8131
  %50 = call i32 @raxSeek(%struct.raxIterator* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0), i8* null, i64 0) #9, !dbg !8132
  %51 = call i32 @raxNext(%struct.raxIterator* nonnull %6) #9, !dbg !8133
  %52 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %6, i64 0, i32 2, !dbg !8134
  %53 = load i8*, i8** %52, align 8, !dbg !8134, !tbaa !8017
  %54 = call i32 @memcmp(i8* %53, i8* nonnull %27, i64 8) #9, !dbg !8136
  %55 = icmp eq i32 %54, 0, !dbg !8137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8138
  br i1 %55, label %56, label %60, !dbg !8138

; <label>:56:                                     ; preds = %47
  %57 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8139, !tbaa !8141
  %58 = load i64, i64* @aeTimer, align 8, !dbg !8142, !tbaa !1650
  %59 = call i32 @aeDeleteTimeEvent(%struct.aeEventLoop* %57, i64 %58) #9, !dbg !8143
  store i64 -1, i64* @aeTimer, align 8, !dbg !8144, !tbaa !1650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8145
  br label %60, !dbg !8145

; <label>:60:                                     ; preds = %47, %56
  call void @raxStop(%struct.raxIterator* nonnull %6) #9, !dbg !8146
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %48) #5, !dbg !8147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8148
  %61 = load i64, i64* @aeTimer, align 8, !dbg !8149, !tbaa !1650
  %62 = icmp eq i64 %61, -1, !dbg !8151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8123
  br i1 %62, label %63, label %66, !dbg !8123

; <label>:63:                                     ; preds = %38, %60
  %64 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !8152, !tbaa !8141
  %65 = call i64 @aeCreateTimeEvent(%struct.aeEventLoop* %64, i64 %1, i32 (%struct.aeEventLoop*, i64, i8*)* nonnull @moduleTimerHandler, i8* null, void (%struct.aeEventLoop*, i8*)* null) #9, !dbg !8153
  store i64 %65, i64* @aeTimer, align 8, !dbg !8154, !tbaa !1650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8155
  br label %66, !dbg !8155

; <label>:66:                                     ; preds = %63, %60
  %67 = load i64, i64* %5, align 8, !dbg !8156, !tbaa !2163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5, !dbg !8157
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8158
  ret i64 %67, !dbg !8158
}

; Function Attrs: noredzone
declare dso_local i8* @raxFind(%struct.rax*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxInsert(%struct.rax*, i8*, i64, i8*, i8**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @aeDeleteTimeEvent(%struct.aeEventLoop*, i64) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i64 @aeCreateTimeEvent(%struct.aeEventLoop*, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, i8*, void (%struct.aeEventLoop*, i8*)*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_StopTimer(%struct.RedisModuleCtx* nocapture readonly, i64, i8**) #0 !dbg !8159 {
  %4 = alloca i64, align 8
  store i64 %1, i64* %4, align 8, !tbaa !2163
  %5 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8170, !tbaa !902
  %6 = bitcast i64* %4 to i8*, !dbg !8171
  %7 = call i8* @raxFind(%struct.rax* %5, i8* nonnull %6, i64 8) #9, !dbg !8172
  %8 = bitcast i8* %7 to %struct.RedisModuleTimer*, !dbg !8172
  %9 = load %struct.RedisModuleTimer*, %struct.RedisModuleTimer** bitcast (i8** @raxNotFound to %struct.RedisModuleTimer**), align 8, !dbg !8174, !tbaa !902
  %10 = icmp eq %struct.RedisModuleTimer* %9, %8, !dbg !8176
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8177
  br i1 %10, label %27, label %11, !dbg !8177

; <label>:11:                                     ; preds = %3
  %12 = bitcast i8* %7 to %struct.RedisModule**, !dbg !8178
  %13 = load %struct.RedisModule*, %struct.RedisModule** %12, align 8, !dbg !8178, !tbaa !8032
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8179
  %15 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !8179, !tbaa !1171
  %16 = icmp eq %struct.RedisModule* %13, %15, !dbg !8180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8181
  br i1 %16, label %17, label %27, !dbg !8181

; <label>:17:                                     ; preds = %11
  %18 = icmp eq i8** %2, null, !dbg !8182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8184
  br i1 %18, label %24, label %19, !dbg !8184

; <label>:19:                                     ; preds = %17
  %20 = getelementptr inbounds i8, i8* %7, i64 16, !dbg !8185
  %21 = bitcast i8* %20 to i64*, !dbg !8185
  %22 = load i64, i64* %21, align 8, !dbg !8185, !tbaa !8043
  %23 = bitcast i8** %2 to i64*, !dbg !8186
  store i64 %22, i64* %23, align 8, !dbg !8186, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8187
  br label %24, !dbg !8187

; <label>:24:                                     ; preds = %17, %19
  %25 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8188, !tbaa !902
  %26 = call i32 @raxRemove(%struct.rax* %25, i8* nonnull %6, i64 8, i8** null) #9, !dbg !8189
  call void @zfree(i8* nonnull %7) #9, !dbg !8190
  br label %27, !dbg !8191

; <label>:27:                                     ; preds = %3, %11, %24
  %28 = phi i32 [ 0, %24 ], [ 1, %11 ], [ 1, %3 ], !dbg !8192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8194
  ret i32 %28, !dbg !8194
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_GetTimerInfo(%struct.RedisModuleCtx* nocapture readonly, i64, i64*, i8**) #0 !dbg !8195 {
  %5 = alloca i64, align 8
  store i64 %1, i64* %5, align 8, !tbaa !2163
  %6 = load %struct.rax*, %struct.rax** @Timers, align 8, !dbg !8212, !tbaa !902
  %7 = bitcast i64* %5 to i8*, !dbg !8213
  %8 = call i8* @raxFind(%struct.rax* %6, i8* nonnull %7, i64 8) #9, !dbg !8214
  %9 = bitcast i8* %8 to %struct.RedisModuleTimer*, !dbg !8214
  %10 = load %struct.RedisModuleTimer*, %struct.RedisModuleTimer** bitcast (i8** @raxNotFound to %struct.RedisModuleTimer**), align 8, !dbg !8216, !tbaa !902
  %11 = icmp eq %struct.RedisModuleTimer* %10, %9, !dbg !8218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8219
  br i1 %11, label %35, label %12, !dbg !8219

; <label>:12:                                     ; preds = %4
  %13 = bitcast i8* %8 to %struct.RedisModule**, !dbg !8220
  %14 = load %struct.RedisModule*, %struct.RedisModule** %13, align 8, !dbg !8220, !tbaa !8032
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8221
  %16 = load %struct.RedisModule*, %struct.RedisModule** %15, align 8, !dbg !8221, !tbaa !1171
  %17 = icmp eq %struct.RedisModule* %14, %16, !dbg !8222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8223
  br i1 %17, label %18, label %35, !dbg !8223

; <label>:18:                                     ; preds = %12
  %19 = icmp eq i64* %2, null, !dbg !8224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8225
  br i1 %19, label %28, label %20, !dbg !8225

; <label>:20:                                     ; preds = %18
  %21 = load i64, i64* %5, align 8, !dbg !8226, !tbaa !2163
  %22 = call i64 @intrev64(i64 %21) #9, !dbg !8226
  %23 = call i64 @ustime() #9, !dbg !8227
  %24 = sub i64 %22, %23, !dbg !8228
  %25 = icmp sgt i64 %24, 0, !dbg !8230
  %26 = select i1 %25, i64 %24, i64 0, !dbg !8230
  %27 = udiv i64 %26, 1000, !dbg !8231
  store i64 %27, i64* %2, align 8, !dbg !8232, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8233
  br label %28, !dbg !8233

; <label>:28:                                     ; preds = %18, %20
  %29 = icmp eq i8** %3, null, !dbg !8234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8236
  br i1 %29, label %35, label %30, !dbg !8236

; <label>:30:                                     ; preds = %28
  %31 = getelementptr inbounds i8, i8* %8, i64 16, !dbg !8237
  %32 = bitcast i8* %31 to i64*, !dbg !8237
  %33 = load i64, i64* %32, align 8, !dbg !8237, !tbaa !8043
  %34 = bitcast i8** %3 to i64*, !dbg !8238
  store i64 %33, i64* %34, align 8, !dbg !8238, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8239
  br label %35, !dbg !8239

; <label>:35:                                     ; preds = %30, %28, %4, %12
  %36 = phi i32 [ 1, %12 ], [ 1, %4 ], [ 0, %28 ], [ 0, %30 ], !dbg !8240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8242
  ret i32 %36, !dbg !8242
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleDict* @RM_CreateDict(%struct.RedisModuleCtx*) #0 !dbg !8243 {
  %2 = tail call i8* @zmalloc(i64 8) #9, !dbg !8251
  %3 = bitcast i8* %2 to %struct.RedisModuleDict*, !dbg !8251
  %4 = tail call %struct.rax* @raxNew() #9, !dbg !8253
  %5 = bitcast i8* %2 to %struct.rax**, !dbg !8254
  store %struct.rax* %4, %struct.rax** %5, align 8, !dbg !8255, !tbaa !1272
  %6 = icmp eq %struct.RedisModuleCtx* %0, null, !dbg !8256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8258
  br i1 %6, label %43, label %7, !dbg !8258

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 7, !dbg !8263
  %9 = load i32, i32* %8, align 8, !dbg !8263, !tbaa !1179
  %10 = and i32 %9, 2, !dbg !8264
  %11 = icmp eq i32 %10, 0, !dbg !8264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8265
  br i1 %11, label %42, label %12, !dbg !8265

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 6, !dbg !8266
  %14 = load i32, i32* %13, align 4, !dbg !8266, !tbaa !1203
  %15 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 5, !dbg !8267
  %16 = load i32, i32* %15, align 8, !dbg !8267, !tbaa !1289
  %17 = icmp eq i32 %14, %16, !dbg !8268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8269
  br i1 %17, label %21, label %18, !dbg !8269

; <label>:18:                                     ; preds = %12
  %19 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4
  %20 = load %struct.AutoMemEntry*, %struct.AutoMemEntry** %19, align 8, !dbg !8270, !tbaa !1207
  br label %35, !dbg !8269

; <label>:21:                                     ; preds = %12
  %22 = shl nsw i32 %14, 1, !dbg !8271
  store i32 %22, i32* %15, align 8, !dbg !8271, !tbaa !1289
  %23 = icmp slt i32 %14, 8, !dbg !8272
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8273
  br i1 %23, label %24, label %25, !dbg !8273

; <label>:24:                                     ; preds = %21
  store i32 16, i32* %15, align 8, !dbg !8274, !tbaa !1289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8275
  br label %25, !dbg !8275

; <label>:25:                                     ; preds = %24, %21
  %26 = phi i32 [ 16, %24 ], [ %22, %21 ], !dbg !8276
  %27 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 4, !dbg !8277
  %28 = bitcast %struct.AutoMemEntry** %27 to i8**, !dbg !8277
  %29 = load i8*, i8** %28, align 8, !dbg !8277, !tbaa !1207
  %30 = sext i32 %26 to i64, !dbg !8278
  %31 = shl nsw i64 %30, 4, !dbg !8279
  %32 = tail call i8* @zrealloc(i8* %29, i64 %31) #9, !dbg !8280
  store i8* %32, i8** %28, align 8, !dbg !8281, !tbaa !1207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8282
  %33 = bitcast i8* %32 to %struct.AutoMemEntry*, !dbg !8282
  %34 = load i32, i32* %13, align 4, !dbg !8283, !tbaa !1203
  br label %35, !dbg !8282

; <label>:35:                                     ; preds = %25, %18
  %36 = phi i32 [ %14, %18 ], [ %34, %25 ], !dbg !8283
  %37 = phi %struct.AutoMemEntry* [ %20, %18 ], [ %33, %25 ], !dbg !8270
  %38 = sext i32 %36 to i64, !dbg !8284
  %39 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %37, i64 %38, i32 1, !dbg !8285
  store i32 4, i32* %39, align 8, !dbg !8286, !tbaa !1213
  %40 = getelementptr inbounds %struct.AutoMemEntry, %struct.AutoMemEntry* %37, i64 %38, i32 0, !dbg !8287
  store i8* %2, i8** %40, align 8, !dbg !8288, !tbaa !1209
  %41 = add nsw i32 %36, 1, !dbg !8289
  store i32 %41, i32* %13, align 4, !dbg !8289, !tbaa !1203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8290
  br label %42, !dbg !8290

; <label>:42:                                     ; preds = %7, %35
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8290
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8291
  br label %43, !dbg !8291

; <label>:43:                                     ; preds = %1, %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8292
  ret %struct.RedisModuleDict* %3, !dbg !8292
}

; Function Attrs: noredzone
declare dso_local %struct.rax* @raxNew() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @raxFree(%struct.rax*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i64 @RM_DictSize(%struct.RedisModuleDict* nocapture readonly) #0 !dbg !8293 {
  %2 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8299
  %3 = load %struct.rax*, %struct.rax** %2, align 8, !dbg !8299, !tbaa !1272
  %4 = tail call i64 @raxSize(%struct.rax* %3) #9, !dbg !8300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8301
  ret i64 %4, !dbg !8301
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictSetC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i8*) #0 !dbg !8302 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8315
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8315, !tbaa !1272
  %7 = tail call i32 @raxTryInsert(%struct.rax* %6, i8* %1, i64 %2, i8* %3, i8** null) #9, !dbg !8316
  %8 = icmp ne i32 %7, 1, !dbg !8318
  %9 = zext i1 %8 to i32, !dbg !8319
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8320
  ret i32 %9, !dbg !8320
}

; Function Attrs: noredzone
declare dso_local i32 @raxTryInsert(%struct.rax*, i8*, i64, i8*, i8**) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictReplaceC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i8*) #0 !dbg !8321 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8332
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8332, !tbaa !1272
  %7 = tail call i32 @raxInsert(%struct.rax* %6, i8* %1, i64 %2, i8* %3, i8** null) #9, !dbg !8333
  %8 = icmp ne i32 %7, 1, !dbg !8335
  %9 = zext i1 %8 to i32, !dbg !8336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8337
  ret i32 %9, !dbg !8337
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictSet(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i8*) #0 !dbg !8338 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8348
  %5 = load i8*, i8** %4, align 8, !dbg !8348, !tbaa !1046
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8351
  %7 = load i8, i8* %6, align 1, !dbg !8351, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8353
  %8 = trunc i8 %7 to i3, !dbg !8353
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8353

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8354
  %11 = zext i8 %10 to i64, !dbg !8354
  br label %30, !dbg !8355

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8356
  %14 = load i8, i8* %13, align 1, !dbg !8357, !tbaa !1137
  %15 = zext i8 %14 to i64, !dbg !8356
  br label %30, !dbg !8358

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8359
  %18 = bitcast i8* %17 to i16*, !dbg !8360
  %19 = load i16, i16* %18, align 1, !dbg !8360, !tbaa !2186
  %20 = zext i16 %19 to i64, !dbg !8359
  br label %30, !dbg !8361

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8362
  %23 = bitcast i8* %22 to i32*, !dbg !8363
  %24 = load i32, i32* %23, align 1, !dbg !8363, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8362
  br label %30, !dbg !8364

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8365
  %28 = bitcast i8* %27 to i64*, !dbg !8366
  %29 = load i64, i64* %28, align 1, !dbg !8366, !tbaa !2163
  br label %30, !dbg !8367

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8368
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8370
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8376
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8376, !tbaa !1272
  %34 = tail call i32 @raxTryInsert(%struct.rax* %33, i8* %5, i64 %31, i8* %2, i8** null) #9, !dbg !8377
  %35 = icmp ne i32 %34, 1, !dbg !8379
  %36 = zext i1 %35 to i32, !dbg !8380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8381
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8382
  ret i32 %36, !dbg !8382
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictReplace(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i8*) #0 !dbg !8383 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8391
  %5 = load i8*, i8** %4, align 8, !dbg !8391, !tbaa !1046
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8394
  %7 = load i8, i8* %6, align 1, !dbg !8394, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8396
  %8 = trunc i8 %7 to i3, !dbg !8396
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8396

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8397
  %11 = zext i8 %10 to i64, !dbg !8397
  br label %30, !dbg !8398

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8399
  %14 = load i8, i8* %13, align 1, !dbg !8400, !tbaa !1137
  %15 = zext i8 %14 to i64, !dbg !8399
  br label %30, !dbg !8401

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8402
  %18 = bitcast i8* %17 to i16*, !dbg !8403
  %19 = load i16, i16* %18, align 1, !dbg !8403, !tbaa !2186
  %20 = zext i16 %19 to i64, !dbg !8402
  br label %30, !dbg !8404

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8405
  %23 = bitcast i8* %22 to i32*, !dbg !8406
  %24 = load i32, i32* %23, align 1, !dbg !8406, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8405
  br label %30, !dbg !8407

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8408
  %28 = bitcast i8* %27 to i64*, !dbg !8409
  %29 = load i64, i64* %28, align 1, !dbg !8409, !tbaa !2163
  br label %30, !dbg !8410

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8413
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8419
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8419, !tbaa !1272
  %34 = tail call i32 @raxInsert(%struct.rax* %33, i8* %5, i64 %31, i8* %2, i8** null) #9, !dbg !8420
  %35 = icmp ne i32 %34, 1, !dbg !8422
  %36 = zext i1 %35 to i32, !dbg !8423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8425
  ret i32 %36, !dbg !8425
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictGetC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i32*) #0 !dbg !8426 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8439
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8439, !tbaa !1272
  %7 = tail call i8* @raxFind(%struct.rax* %6, i8* %1, i64 %2) #9, !dbg !8440
  %8 = icmp eq i32* %3, null, !dbg !8442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8444
  %9 = load i8*, i8** @raxNotFound, align 8, !dbg !8445, !tbaa !902
  br i1 %8, label %13, label %10, !dbg !8444

; <label>:10:                                     ; preds = %4
  %11 = icmp eq i8* %7, %9, !dbg !8446
  %12 = zext i1 %11 to i32, !dbg !8446
  store i32 %12, i32* %3, align 4, !dbg !8447, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8448
  br label %13, !dbg !8448

; <label>:13:                                     ; preds = %4, %10
  %14 = icmp eq i8* %7, %9, !dbg !8449
  %15 = select i1 %14, i8* null, i8* %7, !dbg !8450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8451
  ret i8* %15, !dbg !8451
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictGet(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i32*) #0 !dbg !8452 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8462
  %5 = load i8*, i8** %4, align 8, !dbg !8462, !tbaa !1046
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8465
  %7 = load i8, i8* %6, align 1, !dbg !8465, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8467
  %8 = trunc i8 %7 to i3, !dbg !8467
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8467

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8468
  %11 = zext i8 %10 to i64, !dbg !8468
  br label %30, !dbg !8469

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8470
  %14 = load i8, i8* %13, align 1, !dbg !8471, !tbaa !1137
  %15 = zext i8 %14 to i64, !dbg !8470
  br label %30, !dbg !8472

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8473
  %18 = bitcast i8* %17 to i16*, !dbg !8474
  %19 = load i16, i16* %18, align 1, !dbg !8474, !tbaa !2186
  %20 = zext i16 %19 to i64, !dbg !8473
  br label %30, !dbg !8475

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8476
  %23 = bitcast i8* %22 to i32*, !dbg !8477
  %24 = load i32, i32* %23, align 1, !dbg !8477, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8476
  br label %30, !dbg !8478

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8479
  %28 = bitcast i8* %27 to i64*, !dbg !8480
  %29 = load i64, i64* %28, align 1, !dbg !8480, !tbaa !2163
  br label %30, !dbg !8481

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8484
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8490
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8490, !tbaa !1272
  %34 = tail call i8* @raxFind(%struct.rax* %33, i8* %5, i64 %31) #9, !dbg !8491
  %35 = icmp eq i32* %2, null, !dbg !8493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8494
  %36 = load i8*, i8** @raxNotFound, align 8, !dbg !8495, !tbaa !902
  br i1 %35, label %40, label %37, !dbg !8494

; <label>:37:                                     ; preds = %30
  %38 = icmp eq i8* %34, %36, !dbg !8496
  %39 = zext i1 %38 to i32, !dbg !8496
  store i32 %39, i32* %2, align 4, !dbg !8497, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8498
  br label %40, !dbg !8498

; <label>:40:                                     ; preds = %30, %37
  %41 = icmp eq i8* %34, %36, !dbg !8499
  %42 = select i1 %41, i8* null, i8* %34, !dbg !8500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8502
  ret i8* %42, !dbg !8502
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictDelC(%struct.RedisModuleDict* nocapture readonly, i8*, i64, i8*) #0 !dbg !8503 {
  %5 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8514
  %6 = load %struct.rax*, %struct.rax** %5, align 8, !dbg !8514, !tbaa !1272
  %7 = bitcast i8* %3 to i8**, !dbg !8515
  %8 = tail call i32 @raxRemove(%struct.rax* %6, i8* %1, i64 %2, i8** %7) #9, !dbg !8516
  %9 = icmp eq i32 %8, 0, !dbg !8518
  %10 = zext i1 %9 to i32, !dbg !8518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8519
  ret i32 %10, !dbg !8519
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictDel(%struct.RedisModuleDict* nocapture readonly, %struct.redisObject* nocapture readonly, i8*) #0 !dbg !8520 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !8528
  %5 = load i8*, i8** %4, align 8, !dbg !8528, !tbaa !1046
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8531
  %7 = load i8, i8* %6, align 1, !dbg !8531, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8533
  %8 = trunc i8 %7 to i3, !dbg !8533
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8533

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8534
  %11 = zext i8 %10 to i64, !dbg !8534
  br label %30, !dbg !8535

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8536
  %14 = load i8, i8* %13, align 1, !dbg !8537, !tbaa !1137
  %15 = zext i8 %14 to i64, !dbg !8536
  br label %30, !dbg !8538

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8539
  %18 = bitcast i8* %17 to i16*, !dbg !8540
  %19 = load i16, i16* %18, align 1, !dbg !8540, !tbaa !2186
  %20 = zext i16 %19 to i64, !dbg !8539
  br label %30, !dbg !8541

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8542
  %23 = bitcast i8* %22 to i32*, !dbg !8543
  %24 = load i32, i32* %23, align 1, !dbg !8543, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8542
  br label %30, !dbg !8544

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8545
  %28 = bitcast i8* %27 to i64*, !dbg !8546
  %29 = load i64, i64* %28, align 1, !dbg !8546, !tbaa !2163
  br label %30, !dbg !8547

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8550
  %32 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8556
  %33 = load %struct.rax*, %struct.rax** %32, align 8, !dbg !8556, !tbaa !1272
  %34 = bitcast i8* %2 to i8**, !dbg !8557
  %35 = tail call i32 @raxRemove(%struct.rax* %33, i8* %5, i64 %31, i8** %34) #9, !dbg !8558
  %36 = icmp eq i32 %35, 0, !dbg !8560
  %37 = zext i1 %36 to i32, !dbg !8560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8562
  ret i32 %37, !dbg !8562
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleDictIter* @RM_DictIteratorStartC(%struct.RedisModuleDict*, i8*, i8*, i64) #0 !dbg !8563 {
  %5 = tail call i8* @zmalloc(i64 488) #9, !dbg !8582
  %6 = bitcast i8* %5 to %struct.RedisModuleDictIter*, !dbg !8582
  %7 = bitcast i8* %5 to %struct.RedisModuleDict**, !dbg !8584
  store %struct.RedisModuleDict* %0, %struct.RedisModuleDict** %7, align 8, !dbg !8585, !tbaa !8586
  %8 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !8588
  %9 = bitcast i8* %8 to %struct.raxIterator*, !dbg !8588
  %10 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8589
  %11 = load %struct.rax*, %struct.rax** %10, align 8, !dbg !8589, !tbaa !1272
  tail call void @raxStart(%struct.raxIterator* nonnull %9, %struct.rax* %11) #9, !dbg !8590
  %12 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %9, i8* %1, i8* %2, i64 %3) #9, !dbg !8591
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8592
  ret %struct.RedisModuleDictIter* %6, !dbg !8592
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleDictIter* @RM_DictIteratorStart(%struct.RedisModuleDict*, i8*, %struct.redisObject* nocapture readonly) #0 !dbg !8593 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !8603
  %5 = load i8*, i8** %4, align 8, !dbg !8603, !tbaa !1046
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8606
  %7 = load i8, i8* %6, align 1, !dbg !8606, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8608
  %8 = trunc i8 %7 to i3, !dbg !8608
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8608

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8609
  %11 = zext i8 %10 to i64, !dbg !8609
  br label %30, !dbg !8610

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8611
  %14 = load i8, i8* %13, align 1, !dbg !8612, !tbaa !1137
  %15 = zext i8 %14 to i64, !dbg !8611
  br label %30, !dbg !8613

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8614
  %18 = bitcast i8* %17 to i16*, !dbg !8615
  %19 = load i16, i16* %18, align 1, !dbg !8615, !tbaa !2186
  %20 = zext i16 %19 to i64, !dbg !8614
  br label %30, !dbg !8616

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8617
  %23 = bitcast i8* %22 to i32*, !dbg !8618
  %24 = load i32, i32* %23, align 1, !dbg !8618, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8617
  br label %30, !dbg !8619

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8620
  %28 = bitcast i8* %27 to i64*, !dbg !8621
  %29 = load i64, i64* %28, align 1, !dbg !8621, !tbaa !2163
  br label %30, !dbg !8622

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8625
  %32 = tail call i8* @zmalloc(i64 488) #9, !dbg !8631
  %33 = bitcast i8* %32 to %struct.RedisModuleDictIter*, !dbg !8631
  %34 = bitcast i8* %32 to %struct.RedisModuleDict**, !dbg !8633
  store %struct.RedisModuleDict* %0, %struct.RedisModuleDict** %34, align 8, !dbg !8634, !tbaa !8586
  %35 = getelementptr inbounds i8, i8* %32, i64 8, !dbg !8635
  %36 = bitcast i8* %35 to %struct.raxIterator*, !dbg !8635
  %37 = getelementptr inbounds %struct.RedisModuleDict, %struct.RedisModuleDict* %0, i64 0, i32 0, !dbg !8636
  %38 = load %struct.rax*, %struct.rax** %37, align 8, !dbg !8636, !tbaa !1272
  tail call void @raxStart(%struct.raxIterator* nonnull %36, %struct.rax* %38) #9, !dbg !8637
  %39 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %36, i8* %1, i8* %5, i64 %31) #9, !dbg !8638
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8639
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8640
  ret %struct.RedisModuleDictIter* %33, !dbg !8640
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_DictIteratorStop(%struct.RedisModuleDictIter*) #0 !dbg !8641 {
  %2 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8647
  tail call void @raxStop(%struct.raxIterator* nonnull %2) #9, !dbg !8648
  %3 = bitcast %struct.RedisModuleDictIter* %0 to i8*, !dbg !8649
  tail call void @zfree(i8* %3) #9, !dbg !8650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8651
  ret void, !dbg !8651
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictIteratorReseekC(%struct.RedisModuleDictIter*, i8*, i8*, i64) #0 !dbg !8652 {
  %5 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8664
  %6 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %5, i8* %1, i8* %2, i64 %3) #9, !dbg !8665
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8666
  ret i32 %6, !dbg !8666
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictIteratorReseek(%struct.RedisModuleDictIter*, i8*, %struct.redisObject* nocapture readonly) #0 !dbg !8667 {
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !8677
  %5 = load i8*, i8** %4, align 8, !dbg !8677, !tbaa !1046
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !8680
  %7 = load i8, i8* %6, align 1, !dbg !8680, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8682
  %8 = trunc i8 %7 to i3, !dbg !8682
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !8682

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !8683
  %11 = zext i8 %10 to i64, !dbg !8683
  br label %30, !dbg !8684

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !8685
  %14 = load i8, i8* %13, align 1, !dbg !8686, !tbaa !1137
  %15 = zext i8 %14 to i64, !dbg !8685
  br label %30, !dbg !8687

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !8688
  %18 = bitcast i8* %17 to i16*, !dbg !8689
  %19 = load i16, i16* %18, align 1, !dbg !8689, !tbaa !2186
  %20 = zext i16 %19 to i64, !dbg !8688
  br label %30, !dbg !8690

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !8691
  %23 = bitcast i8* %22 to i32*, !dbg !8692
  %24 = load i32, i32* %23, align 1, !dbg !8692, !tbaa !933
  %25 = zext i32 %24 to i64, !dbg !8691
  br label %30, !dbg !8693

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !8694
  %28 = bitcast i8* %27 to i64*, !dbg !8695
  %29 = load i64, i64* %28, align 1, !dbg !8695, !tbaa !2163
  br label %30, !dbg !8696

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !8697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8699
  %32 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8705
  %33 = tail call i32 @raxSeek(%struct.raxIterator* nonnull %32, i8* %1, i8* %5, i64 %31) #9, !dbg !8706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8708
  ret i32 %33, !dbg !8708
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictNextC(%struct.RedisModuleDictIter*, i64*, i8**) #0 !dbg !8709 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8719
  %5 = tail call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !8721
  %6 = icmp eq i32 %5, 0, !dbg !8721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8722
  br i1 %6, label %22, label %7, !dbg !8722

; <label>:7:                                      ; preds = %3
  %8 = icmp eq i64* %1, null, !dbg !8723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8725
  br i1 %8, label %12, label %9, !dbg !8725

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 4, !dbg !8726
  %11 = load i64, i64* %10, align 8, !dbg !8726, !tbaa !8727
  store i64 %11, i64* %1, align 8, !dbg !8728, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8729
  br label %12, !dbg !8729

; <label>:12:                                     ; preds = %7, %9
  %13 = icmp eq i8** %2, null, !dbg !8730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8732
  br i1 %13, label %19, label %14, !dbg !8732

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 3, !dbg !8733
  %16 = bitcast i8** %15 to i64*, !dbg !8733
  %17 = load i64, i64* %16, align 8, !dbg !8733, !tbaa !8734
  %18 = bitcast i8** %2 to i64*, !dbg !8735
  store i64 %17, i64* %18, align 8, !dbg !8735, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8736
  br label %19, !dbg !8736

; <label>:19:                                     ; preds = %12, %14
  %20 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 2, !dbg !8737
  %21 = load i8*, i8** %20, align 8, !dbg !8737, !tbaa !8738
  br label %22, !dbg !8739

; <label>:22:                                     ; preds = %3, %19
  %23 = phi i8* [ %21, %19 ], [ null, %3 ], !dbg !8740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8741
  ret i8* %23, !dbg !8741
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_DictPrevC(%struct.RedisModuleDictIter*, i64*, i8**) #0 !dbg !8742 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8750
  %5 = tail call i32 @raxPrev(%struct.raxIterator* nonnull %4) #9, !dbg !8752
  %6 = icmp eq i32 %5, 0, !dbg !8752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8753
  br i1 %6, label %22, label %7, !dbg !8753

; <label>:7:                                      ; preds = %3
  %8 = icmp eq i64* %1, null, !dbg !8754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8756
  br i1 %8, label %12, label %9, !dbg !8756

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 4, !dbg !8757
  %11 = load i64, i64* %10, align 8, !dbg !8757, !tbaa !8727
  store i64 %11, i64* %1, align 8, !dbg !8758, !tbaa !2163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8759
  br label %12, !dbg !8759

; <label>:12:                                     ; preds = %7, %9
  %13 = icmp eq i8** %2, null, !dbg !8760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8762
  br i1 %13, label %19, label %14, !dbg !8762

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 3, !dbg !8763
  %16 = bitcast i8** %15 to i64*, !dbg !8763
  %17 = load i64, i64* %16, align 8, !dbg !8763, !tbaa !8734
  %18 = bitcast i8** %2 to i64*, !dbg !8764
  store i64 %17, i64* %18, align 8, !dbg !8764, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8765
  br label %19, !dbg !8765

; <label>:19:                                     ; preds = %12, %14
  %20 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, i32 2, !dbg !8766
  %21 = load i8*, i8** %20, align 8, !dbg !8766, !tbaa !8738
  br label %22, !dbg !8767

; <label>:22:                                     ; preds = %3, %19
  %23 = phi i8* [ %21, %19 ], [ null, %3 ], !dbg !8768
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8768
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8769
  ret i8* %23, !dbg !8769
}

; Function Attrs: noredzone
declare dso_local i32 @raxPrev(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_DictNext(%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**) #0 !dbg !8770 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, !dbg !8785
  %5 = tail call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !8786
  %6 = icmp eq i32 %5, 0, !dbg !8786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8788
  br i1 %6, label %7, label %8, !dbg !8787

; <label>:7:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8791
  br label %23, !dbg !8791

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 4, !dbg !8792
  %10 = load i64, i64* %9, align 8, !dbg !8792, !tbaa !8727
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8793
  %11 = icmp eq i8** %2, null, !dbg !8794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8795
  br i1 %11, label %17, label %12, !dbg !8795

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 3, !dbg !8796
  %14 = bitcast i8** %13 to i64*, !dbg !8796
  %15 = load i64, i64* %14, align 8, !dbg !8796, !tbaa !8734
  %16 = bitcast i8** %2 to i64*, !dbg !8797
  store i64 %15, i64* %16, align 8, !dbg !8797, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8798
  br label %17, !dbg !8798

; <label>:17:                                     ; preds = %8, %12
  %18 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 2, !dbg !8799
  %19 = load i8*, i8** %18, align 8, !dbg !8799, !tbaa !8738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8789
  %20 = icmp eq i8* %19, null, !dbg !8801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8791
  br i1 %20, label %23, label %21, !dbg !8791

; <label>:21:                                     ; preds = %17
  %22 = tail call %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx* %0, i8* nonnull %19, i64 %10) #10, !dbg !8804
  br label %23, !dbg !8805

; <label>:23:                                     ; preds = %17, %7, %21
  %24 = phi %struct.redisObject* [ %22, %21 ], [ null, %7 ], [ null, %17 ], !dbg !8788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8807
  ret %struct.redisObject* %24, !dbg !8807
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_DictPrev(%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**) #0 !dbg !8808 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, !dbg !8821
  %5 = tail call i32 @raxPrev(%struct.raxIterator* nonnull %4) #9, !dbg !8822
  %6 = icmp eq i32 %5, 0, !dbg !8822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8823
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8824
  br i1 %6, label %7, label %8, !dbg !8823

; <label>:7:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8827
  br label %23, !dbg !8827

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 4, !dbg !8828
  %10 = load i64, i64* %9, align 8, !dbg !8828, !tbaa !8727
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8829
  %11 = icmp eq i8** %2, null, !dbg !8830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8831
  br i1 %11, label %17, label %12, !dbg !8831

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 3, !dbg !8832
  %14 = bitcast i8** %13 to i64*, !dbg !8832
  %15 = load i64, i64* %14, align 8, !dbg !8832, !tbaa !8734
  %16 = bitcast i8** %2 to i64*, !dbg !8833
  store i64 %15, i64* %16, align 8, !dbg !8833, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8834
  br label %17, !dbg !8834

; <label>:17:                                     ; preds = %8, %12
  %18 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %1, i64 0, i32 1, i32 2, !dbg !8835
  %19 = load i8*, i8** %18, align 8, !dbg !8835, !tbaa !8738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8825
  %20 = icmp eq i8* %19, null, !dbg !8837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8827
  br i1 %20, label %23, label %21, !dbg !8827

; <label>:21:                                     ; preds = %17
  %22 = tail call %struct.redisObject* @RM_CreateString(%struct.RedisModuleCtx* %0, i8* nonnull %19, i64 %10) #10, !dbg !8840
  br label %23, !dbg !8841

; <label>:23:                                     ; preds = %17, %7, %21
  %24 = phi %struct.redisObject* [ %22, %21 ], [ null, %7 ], [ null, %17 ], !dbg !8824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8843
  ret %struct.redisObject* %24, !dbg !8843
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictCompareC(%struct.RedisModuleDictIter*, i8*, i8*, i64) #0 !dbg !8844 {
  %5 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8855
  %6 = tail call i32 @raxEOF(%struct.raxIterator* nonnull %5) #9, !dbg !8857
  %7 = icmp eq i32 %6, 0, !dbg !8857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8858
  br i1 %7, label %8, label %12, !dbg !8858

; <label>:8:                                      ; preds = %4
  %9 = tail call i32 @raxCompare(%struct.raxIterator* nonnull %5, i8* %1, i8* %2, i64 %3) #9, !dbg !8859
  %10 = icmp eq i32 %9, 0, !dbg !8861
  %11 = zext i1 %10 to i32, !dbg !8861
  br label %12

; <label>:12:                                     ; preds = %4, %8
  %13 = phi i32 [ %11, %8 ], [ 1, %4 ], !dbg !8862
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8863
  ret i32 %13, !dbg !8863
}

; Function Attrs: noredzone
declare dso_local i32 @raxEOF(%struct.raxIterator*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @raxCompare(%struct.raxIterator*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_DictCompare(%struct.RedisModuleDictIter*, i8*, %struct.redisObject* nocapture readonly) #0 !dbg !8864 {
  %4 = getelementptr inbounds %struct.RedisModuleDictIter, %struct.RedisModuleDictIter* %0, i64 0, i32 1, !dbg !8873
  %5 = tail call i32 @raxEOF(%struct.raxIterator* nonnull %4) #9, !dbg !8875
  %6 = icmp eq i32 %5, 0, !dbg !8875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8876
  br i1 %6, label %7, label %39, !dbg !8876

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !8877
  %9 = load i8*, i8** %8, align 8, !dbg !8877, !tbaa !1046
  %10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !8880
  %11 = load i8, i8* %10, align 1, !dbg !8880, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8882
  %12 = trunc i8 %11 to i3, !dbg !8882
  switch i3 %12, label %34 [
    i3 0, label %13
    i3 1, label %16
    i3 2, label %20
    i3 3, label %25
    i3 -4, label %30
  ], !dbg !8882

; <label>:13:                                     ; preds = %7
  %14 = lshr i8 %11, 3, !dbg !8883
  %15 = zext i8 %14 to i64, !dbg !8883
  br label %34, !dbg !8884

; <label>:16:                                     ; preds = %7
  %17 = getelementptr inbounds i8, i8* %9, i64 -3, !dbg !8885
  %18 = load i8, i8* %17, align 1, !dbg !8886, !tbaa !1137
  %19 = zext i8 %18 to i64, !dbg !8885
  br label %34, !dbg !8887

; <label>:20:                                     ; preds = %7
  %21 = getelementptr inbounds i8, i8* %9, i64 -5, !dbg !8888
  %22 = bitcast i8* %21 to i16*, !dbg !8889
  %23 = load i16, i16* %22, align 1, !dbg !8889, !tbaa !2186
  %24 = zext i16 %23 to i64, !dbg !8888
  br label %34, !dbg !8890

; <label>:25:                                     ; preds = %7
  %26 = getelementptr inbounds i8, i8* %9, i64 -9, !dbg !8891
  %27 = bitcast i8* %26 to i32*, !dbg !8892
  %28 = load i32, i32* %27, align 1, !dbg !8892, !tbaa !933
  %29 = zext i32 %28 to i64, !dbg !8891
  br label %34, !dbg !8893

; <label>:30:                                     ; preds = %7
  %31 = getelementptr inbounds i8, i8* %9, i64 -17, !dbg !8894
  %32 = bitcast i8* %31 to i64*, !dbg !8895
  %33 = load i64, i64* %32, align 1, !dbg !8895, !tbaa !2163
  br label %34, !dbg !8896

; <label>:34:                                     ; preds = %7, %13, %16, %20, %25, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %25 ], [ %24, %20 ], [ %19, %16 ], [ %15, %13 ], [ 0, %7 ], !dbg !8897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8899
  %36 = tail call i32 @raxCompare(%struct.raxIterator* nonnull %4, i8* %1, i8* %9, i64 %35) #9, !dbg !8900
  %37 = icmp eq i32 %36, 0, !dbg !8902
  %38 = zext i1 %37 to i32, !dbg !8902
  br label %39

; <label>:39:                                     ; preds = %3, %34
  %40 = phi i32 [ %38, %34 ], [ 1, %3 ], !dbg !8898
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8903
  ret i32 %40, !dbg !8903
}

; Function Attrs: noredzone nounwind
define dso_local void @RM_GetRandomBytes(i8*, i64) #0 !dbg !8904 {
  tail call void @getRandomBytes(i8* %0, i64 %1) #9, !dbg !8912
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8913
  ret void, !dbg !8913
}

; Function Attrs: noredzone
declare dso_local void @getRandomBytes(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @RM_GetRandomHexChars(i8*, i64) #0 !dbg !8914 {
  tail call void @getRandomHexChars(i8* %0, i64 %1) #9, !dbg !8922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8923
  ret void, !dbg !8923
}

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_ExportSharedAPI(%struct.RedisModuleCtx* nocapture readonly, i8*, i8*) #0 !dbg !8924 {
  %4 = tail call i8* @zmalloc(i64 16) #9, !dbg !8941
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8943
  %6 = bitcast %struct.RedisModule** %5 to i64*, !dbg !8943
  %7 = load i64, i64* %6, align 8, !dbg !8943, !tbaa !1171
  %8 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !8944
  %9 = bitcast i8* %8 to i64*, !dbg !8945
  store i64 %7, i64* %9, align 8, !dbg !8945, !tbaa !8946
  %10 = bitcast i8* %4 to i8**, !dbg !8948
  store i8* %2, i8** %10, align 8, !dbg !8949, !tbaa !8950
  %11 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !8951, !tbaa !8953
  %12 = tail call i32 @dictAdd(%struct.dict* %11, i8* %1, i8* %4) #9, !dbg !8954
  %13 = icmp eq i32 %12, 0, !dbg !8955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8956
  br i1 %13, label %15, label %14, !dbg !8956

; <label>:14:                                     ; preds = %3
  tail call void @zfree(i8* %4) #9, !dbg !8957
  br label %15, !dbg !8959

; <label>:15:                                     ; preds = %3, %14
  %16 = phi i32 [ 1, %14 ], [ 0, %3 ], !dbg !8960
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8962
  ret i32 %16, !dbg !8962
}

; Function Attrs: noredzone nounwind
define dso_local i8* @RM_GetSharedAPI(%struct.RedisModuleCtx* nocapture readonly, i8*) #0 !dbg !8963 {
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !8973, !tbaa !8953
  %4 = tail call %struct.dictEntry* @dictFind(%struct.dict* %3, i8* %1) #9, !dbg !8974
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !8976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8978
  br i1 %5, label %34, label %6, !dbg !8978

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %4, i64 0, i32 1, i32 0, !dbg !8979
  %8 = bitcast i8** %7 to %struct.RedisModuleSharedAPI**, !dbg !8979
  %9 = load %struct.RedisModuleSharedAPI*, %struct.RedisModuleSharedAPI** %8, align 8, !dbg !8979, !tbaa !1137
  %10 = getelementptr inbounds %struct.RedisModuleSharedAPI, %struct.RedisModuleSharedAPI* %9, i64 0, i32 1, !dbg !8981
  %11 = load %struct.RedisModule*, %struct.RedisModule** %10, align 8, !dbg !8981, !tbaa !8946
  %12 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %11, i64 0, i32 5, !dbg !8983
  %13 = load %struct.list*, %struct.list** %12, align 8, !dbg !8983, !tbaa !1700
  %14 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !8984
  %15 = bitcast %struct.RedisModule** %14 to i8**, !dbg !8984
  %16 = load i8*, i8** %15, align 8, !dbg !8984, !tbaa !1171
  %17 = tail call %struct.listNode* @listSearchKey(%struct.list* %13, i8* %16) #9, !dbg !8985
  %18 = icmp eq %struct.listNode* %17, null, !dbg !8986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8987
  br i1 %18, label %19, label %31, !dbg !8987

; <label>:19:                                     ; preds = %6
  %20 = load %struct.RedisModule*, %struct.RedisModule** %10, align 8, !dbg !8988, !tbaa !8946
  %21 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %20, i64 0, i32 5, !dbg !8990
  %22 = load %struct.list*, %struct.list** %21, align 8, !dbg !8990, !tbaa !1700
  %23 = load i8*, i8** %15, align 8, !dbg !8991, !tbaa !1171
  %24 = tail call %struct.list* @listAddNodeTail(%struct.list* %22, i8* %23) #9, !dbg !8992
  %25 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !8993, !tbaa !1171
  %26 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %25, i64 0, i32 6, !dbg !8994
  %27 = load %struct.list*, %struct.list** %26, align 8, !dbg !8994, !tbaa !1704
  %28 = bitcast %struct.RedisModule** %10 to i8**, !dbg !8995
  %29 = load i8*, i8** %28, align 8, !dbg !8995, !tbaa !8946
  %30 = tail call %struct.list* @listAddNodeTail(%struct.list* %27, i8* %29) #9, !dbg !8996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8997
  br label %31, !dbg !8997

; <label>:31:                                     ; preds = %19, %6
  %32 = getelementptr inbounds %struct.RedisModuleSharedAPI, %struct.RedisModuleSharedAPI* %9, i64 0, i32 0, !dbg !8998
  %33 = load i8*, i8** %32, align 8, !dbg !8998, !tbaa !8950
  br label %34

; <label>:34:                                     ; preds = %2, %31
  %35 = phi i8* [ %33, %31 ], [ null, %2 ], !dbg !8999
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9000
  ret i8* %35, !dbg !9000
}

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listSearchKey(%struct.list*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnregisterSharedAPI(%struct.RedisModule* readnone) local_unnamed_addr #0 !dbg !9001 {
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !9014, !tbaa !8953
  %3 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %2) #9, !dbg !9015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9017
  %4 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #9, !dbg !9018
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !9020
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9017
  br i1 %5, label %25, label %6, !dbg !9017

; <label>:6:                                      ; preds = %1, %21
  %7 = phi %struct.dictEntry* [ %23, %21 ], [ %4, %1 ]
  %8 = phi i32 [ %22, %21 ], [ 0, %1 ]
  %9 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 0, !dbg !9021
  %10 = load i8*, i8** %9, align 8, !dbg !9021, !tbaa !9022
  %11 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 1, i32 0, !dbg !9025
  %12 = load i8*, i8** %11, align 8, !dbg !9025, !tbaa !1137
  %13 = getelementptr inbounds i8, i8* %12, i64 8, !dbg !9027
  %14 = bitcast i8* %13 to %struct.RedisModule**, !dbg !9027
  %15 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !9027, !tbaa !8946
  %16 = icmp eq %struct.RedisModule* %15, %0, !dbg !9029
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9030
  br i1 %16, label %17, label %21, !dbg !9030

; <label>:17:                                     ; preds = %6
  %18 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !9031, !tbaa !8953
  %19 = tail call i32 @dictDelete(%struct.dict* %18, i8* %10) #9, !dbg !9033
  tail call void @zfree(i8* %12) #9, !dbg !9034
  %20 = add nsw i32 %8, 1, !dbg !9035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9036
  br label %21, !dbg !9036

; <label>:21:                                     ; preds = %17, %6
  %22 = phi i32 [ %20, %17 ], [ %8, %6 ], !dbg !9037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9017
  %23 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #9, !dbg !9018
  %24 = icmp eq %struct.dictEntry* %23, null, !dbg !9020
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9017
  br i1 %24, label %25, label %6, !dbg !9017, !llvm.loop !9038

; <label>:25:                                     ; preds = %21, %1
  %26 = phi i32 [ 0, %1 ], [ %22, %21 ], !dbg !9040
  tail call void @dictReleaseIterator(%struct.dictIterator* %3) #9, !dbg !9041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9042
  ret i32 %26, !dbg !9042
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dictDelete(%struct.dict*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnregisterUsedAPI(%struct.RedisModule*) local_unnamed_addr #0 !dbg !9043 {
  %2 = alloca %struct.listIter, align 8
  %3 = bitcast %struct.listIter* %2 to i8*, !dbg !9053
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #5, !dbg !9053
  %4 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 6, !dbg !9055
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !9055, !tbaa !1704
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %2) #9, !dbg !9057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9058
  %6 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !9059
  %7 = icmp eq %struct.listNode* %6, null, !dbg !9058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9058
  br i1 %7, label %27, label %8, !dbg !9058

; <label>:8:                                      ; preds = %1
  %9 = bitcast %struct.RedisModule* %0 to i8*
  br label %10, !dbg !9058

; <label>:10:                                     ; preds = %8, %23
  %11 = phi %struct.listNode* [ %6, %8 ], [ %25, %23 ]
  %12 = phi i32 [ 0, %8 ], [ %24, %23 ]
  %13 = getelementptr inbounds %struct.listNode, %struct.listNode* %11, i64 0, i32 2, !dbg !9061
  %14 = bitcast i8** %13 to %struct.RedisModule**, !dbg !9061
  %15 = load %struct.RedisModule*, %struct.RedisModule** %14, align 8, !dbg !9061, !tbaa !5611
  %16 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %15, i64 0, i32 5, !dbg !9063
  %17 = load %struct.list*, %struct.list** %16, align 8, !dbg !9063, !tbaa !1700
  %18 = call %struct.listNode* @listSearchKey(%struct.list* %17, i8* %9) #9, !dbg !9064
  %19 = icmp eq %struct.listNode* %18, null, !dbg !9066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9068
  br i1 %19, label %23, label %20, !dbg !9068

; <label>:20:                                     ; preds = %10
  %21 = load %struct.list*, %struct.list** %4, align 8, !dbg !9069, !tbaa !1704
  call void @listDelNode(%struct.list* %21, %struct.listNode* nonnull %18) #9, !dbg !9071
  %22 = add nsw i32 %12, 1, !dbg !9072
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9073
  br label %23, !dbg !9073

; <label>:23:                                     ; preds = %10, %20
  %24 = phi i32 [ %22, %20 ], [ %12, %10 ], !dbg !9074
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9058
  %25 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !9059
  %26 = icmp eq %struct.listNode* %25, null, !dbg !9058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9058
  br i1 %26, label %27, label %10, !dbg !9058, !llvm.loop !9075

; <label>:27:                                     ; preds = %23, %1
  %28 = phi i32 [ 0, %1 ], [ %24, %23 ], !dbg !9077
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #5, !dbg !9078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9079
  ret i32 %28, !dbg !9079
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnregisterFilters(%struct.RedisModule* nocapture readonly) local_unnamed_addr #0 !dbg !9080 {
  %2 = alloca %struct.listIter, align 8
  %3 = bitcast %struct.listIter* %2 to i8*, !dbg !9090
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #5, !dbg !9090
  %4 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 7, !dbg !9092
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !9092, !tbaa !1708
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %2) #9, !dbg !9094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9095
  %6 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !9096
  %7 = icmp eq %struct.listNode* %6, null, !dbg !9095
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9095
  br i1 %7, label %23, label %8, !dbg !9095

; <label>:8:                                      ; preds = %1, %19
  %9 = phi %struct.listNode* [ %21, %19 ], [ %6, %1 ]
  %10 = phi i32 [ %20, %19 ], [ 0, %1 ]
  %11 = getelementptr inbounds %struct.listNode, %struct.listNode* %9, i64 0, i32 2, !dbg !9098
  %12 = load i8*, i8** %11, align 8, !dbg !9098, !tbaa !5611
  %13 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9100, !tbaa !902
  %14 = call %struct.listNode* @listSearchKey(%struct.list* %13, i8* %12) #9, !dbg !9101
  %15 = icmp eq %struct.listNode* %14, null, !dbg !9103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9105
  br i1 %15, label %19, label %16, !dbg !9105

; <label>:16:                                     ; preds = %8
  %17 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9106, !tbaa !902
  call void @listDelNode(%struct.list* %17, %struct.listNode* nonnull %14) #9, !dbg !9108
  %18 = add nsw i32 %10, 1, !dbg !9109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9110
  br label %19, !dbg !9110

; <label>:19:                                     ; preds = %8, %16
  %20 = phi i32 [ %18, %16 ], [ %10, %8 ], !dbg !9111
  call void @zfree(i8* %12) #9, !dbg !9112
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9095
  %21 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !9096
  %22 = icmp eq %struct.listNode* %21, null, !dbg !9095
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9095
  br i1 %22, label %23, label %8, !dbg !9095, !llvm.loop !9113

; <label>:23:                                     ; preds = %19, %1
  %24 = phi i32 [ 0, %1 ], [ %20, %19 ], !dbg !9115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #5, !dbg !9116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9117
  ret i32 %24, !dbg !9117
}

; Function Attrs: noredzone nounwind
define dso_local %struct.RedisModuleCommandFilter* @RM_RegisterCommandFilter(%struct.RedisModuleCtx* nocapture readonly, void (%struct.RedisModuleCommandFilterCtx*)*, i32) #0 !dbg !9118 {
  %4 = tail call i8* @zmalloc(i64 24) #9, !dbg !9129
  %5 = bitcast i8* %4 to %struct.RedisModuleCommandFilter*, !dbg !9129
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !9131
  %7 = bitcast %struct.RedisModule** %6 to i64*, !dbg !9131
  %8 = load i64, i64* %7, align 8, !dbg !9131, !tbaa !1171
  %9 = bitcast i8* %4 to i64*, !dbg !9132
  store i64 %8, i64* %9, align 8, !dbg !9132, !tbaa !5720
  %10 = getelementptr inbounds i8, i8* %4, i64 8, !dbg !9133
  %11 = bitcast i8* %10 to void (%struct.RedisModuleCommandFilterCtx*)**, !dbg !9133
  store void (%struct.RedisModuleCommandFilterCtx*)* %1, void (%struct.RedisModuleCommandFilterCtx*)** %11, align 8, !dbg !9134, !tbaa !5727
  %12 = getelementptr inbounds i8, i8* %4, i64 16, !dbg !9135
  %13 = bitcast i8* %12 to i32*, !dbg !9135
  store i32 %2, i32* %13, align 8, !dbg !9136, !tbaa !5715
  %14 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9137, !tbaa !902
  %15 = tail call %struct.list* @listAddNodeTail(%struct.list* %14, i8* %4) #9, !dbg !9138
  %16 = load %struct.RedisModule*, %struct.RedisModule** %6, align 8, !dbg !9139, !tbaa !1171
  %17 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %16, i64 0, i32 7, !dbg !9140
  %18 = load %struct.list*, %struct.list** %17, align 8, !dbg !9140, !tbaa !1708
  %19 = tail call %struct.list* @listAddNodeTail(%struct.list* %18, i8* %4) #9, !dbg !9141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9142
  ret %struct.RedisModuleCommandFilter* %5, !dbg !9142
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_UnregisterCommandFilter(%struct.RedisModuleCtx* nocapture readonly, %struct.RedisModuleCommandFilter*) #0 !dbg !9143 {
  %3 = getelementptr inbounds %struct.RedisModuleCommandFilter, %struct.RedisModuleCommandFilter* %1, i64 0, i32 0, !dbg !9152
  %4 = load %struct.RedisModule*, %struct.RedisModule** %3, align 8, !dbg !9152, !tbaa !5720
  %5 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %0, i64 0, i32 1, !dbg !9154
  %6 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !9154, !tbaa !1171
  %7 = icmp eq %struct.RedisModule* %4, %6, !dbg !9155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9156
  br i1 %7, label %8, label %24, !dbg !9156

; <label>:8:                                      ; preds = %2
  %9 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9157, !tbaa !902
  %10 = bitcast %struct.RedisModuleCommandFilter* %1 to i8*, !dbg !9158
  %11 = tail call %struct.listNode* @listSearchKey(%struct.list* %9, i8* %10) #9, !dbg !9159
  %12 = icmp eq %struct.listNode* %11, null, !dbg !9161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9163
  br i1 %12, label %24, label %13, !dbg !9163

; <label>:13:                                     ; preds = %8
  %14 = load %struct.list*, %struct.list** @moduleCommandFilters, align 8, !dbg !9164, !tbaa !902
  tail call void @listDelNode(%struct.list* %14, %struct.listNode* nonnull %11) #9, !dbg !9165
  %15 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !9166, !tbaa !1171
  %16 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %15, i64 0, i32 7, !dbg !9167
  %17 = load %struct.list*, %struct.list** %16, align 8, !dbg !9167, !tbaa !1708
  %18 = tail call %struct.listNode* @listSearchKey(%struct.list* %17, i8* %10) #9, !dbg !9168
  %19 = icmp eq %struct.listNode* %18, null, !dbg !9169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9171
  br i1 %19, label %24, label %20, !dbg !9171

; <label>:20:                                     ; preds = %13
  %21 = load %struct.RedisModule*, %struct.RedisModule** %5, align 8, !dbg !9172, !tbaa !1171
  %22 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %21, i64 0, i32 7, !dbg !9173
  %23 = load %struct.list*, %struct.list** %22, align 8, !dbg !9173, !tbaa !1708
  tail call void @listDelNode(%struct.list* %23, %struct.listNode* nonnull %18) #9, !dbg !9174
  br label %24, !dbg !9175

; <label>:24:                                     ; preds = %13, %8, %2, %20
  %25 = phi i32 [ 0, %20 ], [ 1, %2 ], [ 1, %8 ], [ 1, %13 ], !dbg !9176
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9178
  ret i32 %25, !dbg !9178
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgsCount(%struct.RedisModuleCommandFilterCtx* nocapture readonly) #0 !dbg !9179 {
  %2 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9185
  %3 = load i32, i32* %2, align 8, !dbg !9185, !tbaa !5707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9186
  ret i32 %3, !dbg !9186
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @RM_CommandFilterArgGet(%struct.RedisModuleCommandFilterCtx* nocapture readonly, i32) #0 !dbg !9187 {
  %3 = icmp slt i32 %1, 0, !dbg !9195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9197
  br i1 %3, label %14, label %4, !dbg !9197

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9198
  %6 = load i32, i32* %5, align 8, !dbg !9198, !tbaa !5707
  %7 = icmp sgt i32 %6, %1, !dbg !9199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9200
  br i1 %7, label %8, label %14, !dbg !9200

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9201
  %10 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9201, !tbaa !5704
  %11 = sext i32 %1 to i64, !dbg !9202
  %12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 %11, !dbg !9202
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !9202, !tbaa !902
  br label %14, !dbg !9203

; <label>:14:                                     ; preds = %2, %4, %8
  %15 = phi %struct.redisObject* [ %13, %8 ], [ null, %4 ], [ null, %2 ], !dbg !9204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9206
  ret %struct.redisObject* %15, !dbg !9206
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgInsert(%struct.RedisModuleCommandFilterCtx* nocapture, i32, %struct.redisObject*) #0 !dbg !9207 {
  %4 = icmp slt i32 %1, 0, !dbg !9218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9220
  br i1 %4, label %85, label %5, !dbg !9220

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9221
  %7 = load i32, i32* %6, align 8, !dbg !9221, !tbaa !5707
  %8 = icmp slt i32 %7, %1, !dbg !9222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9223
  br i1 %8, label %85, label %9, !dbg !9223

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9224
  %11 = bitcast %struct.RedisModuleCommandFilterCtx* %0 to i8**, !dbg !9224
  %12 = load i8*, i8** %11, align 8, !dbg !9224, !tbaa !5704
  %13 = add nsw i32 %7, 1, !dbg !9225
  %14 = sext i32 %13 to i64, !dbg !9226
  %15 = shl nsw i64 %14, 3, !dbg !9227
  %16 = tail call i8* @zrealloc(i8* %12, i64 %15) #9, !dbg !9228
  store i8* %16, i8** %11, align 8, !dbg !9229, !tbaa !5704
  %17 = load i32, i32* %6, align 8, !dbg !9230, !tbaa !5707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9233
  %18 = icmp sgt i32 %17, %1, !dbg !9234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %19 = bitcast i8* %16 to %struct.redisObject**, !dbg !9237
  br i1 %18, label %22, label %20, !dbg !9236

; <label>:20:                                     ; preds = %9
  %21 = sext i32 %1 to i64, !dbg !9238
  br label %80, !dbg !9236

; <label>:22:                                     ; preds = %9
  %23 = sext i32 %17 to i64, !dbg !9239
  %24 = sext i32 %1 to i64, !dbg !9239
  %25 = sub nsw i64 %23, %24, !dbg !9239
  %26 = xor i64 %24, -1, !dbg !9239
  %27 = add nsw i64 %26, %23, !dbg !9239
  %28 = and i64 %25, 3, !dbg !9239
  %29 = icmp eq i64 %28, 0, !dbg !9239
  br i1 %29, label %43, label %30, !dbg !9239

; <label>:30:                                     ; preds = %22, %30
  %31 = phi i64 [ %34, %30 ], [ %23, %22 ]
  %32 = phi %struct.redisObject** [ %40, %30 ], [ %19, %22 ]
  %33 = phi i64 [ %41, %30 ], [ %28, %22 ]
  %34 = add nsw i64 %31, -1, !dbg !9239
  %35 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %32, i64 %34, !dbg !9241
  %36 = bitcast %struct.redisObject** %35 to i64*, !dbg !9241
  %37 = load i64, i64* %36, align 8, !dbg !9241, !tbaa !902
  %38 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %32, i64 %31, !dbg !9242
  %39 = bitcast %struct.redisObject** %38 to i64*, !dbg !9243
  store i64 %37, i64* %39, align 8, !dbg !9243, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %40 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9237, !tbaa !5704
  %41 = add i64 %33, -1, !dbg !9236
  %42 = icmp eq i64 %41, 0, !dbg !9236
  br i1 %42, label %43, label %30, !dbg !9236, !llvm.loop !9245

; <label>:43:                                     ; preds = %30, %22
  %44 = phi i64 [ %23, %22 ], [ %34, %30 ]
  %45 = phi %struct.redisObject** [ %19, %22 ], [ %40, %30 ]
  %46 = phi %struct.redisObject** [ undef, %22 ], [ %40, %30 ]
  %47 = icmp ult i64 %27, 3, !dbg !9239
  br i1 %47, label %80, label %48, !dbg !9239

; <label>:48:                                     ; preds = %43, %48
  %49 = phi i64 [ %72, %48 ], [ %44, %43 ]
  %50 = phi %struct.redisObject** [ %79, %48 ], [ %45, %43 ]
  %51 = add nsw i64 %49, -1, !dbg !9239
  %52 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %50, i64 %51, !dbg !9241
  %53 = bitcast %struct.redisObject** %52 to i64*, !dbg !9241
  %54 = load i64, i64* %53, align 8, !dbg !9241, !tbaa !902
  %55 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %50, i64 %49, !dbg !9242
  %56 = bitcast %struct.redisObject** %55 to i64*, !dbg !9243
  store i64 %54, i64* %56, align 8, !dbg !9243, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %57 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9237, !tbaa !5704
  %58 = add nsw i64 %49, -2, !dbg !9239
  %59 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %57, i64 %58, !dbg !9241
  %60 = bitcast %struct.redisObject** %59 to i64*, !dbg !9241
  %61 = load i64, i64* %60, align 8, !dbg !9241, !tbaa !902
  %62 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %57, i64 %51, !dbg !9242
  %63 = bitcast %struct.redisObject** %62 to i64*, !dbg !9243
  store i64 %61, i64* %63, align 8, !dbg !9243, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %64 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9237, !tbaa !5704
  %65 = add nsw i64 %49, -3, !dbg !9239
  %66 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %64, i64 %65, !dbg !9241
  %67 = bitcast %struct.redisObject** %66 to i64*, !dbg !9241
  %68 = load i64, i64* %67, align 8, !dbg !9241, !tbaa !902
  %69 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %64, i64 %58, !dbg !9242
  %70 = bitcast %struct.redisObject** %69 to i64*, !dbg !9243
  store i64 %68, i64* %70, align 8, !dbg !9243, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %71 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9237, !tbaa !5704
  %72 = add nsw i64 %49, -4, !dbg !9239
  %73 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %71, i64 %72, !dbg !9241
  %74 = bitcast %struct.redisObject** %73 to i64*, !dbg !9241
  %75 = load i64, i64* %74, align 8, !dbg !9241, !tbaa !902
  %76 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %71, i64 %65, !dbg !9242
  %77 = bitcast %struct.redisObject** %76 to i64*, !dbg !9243
  store i64 %75, i64* %77, align 8, !dbg !9243, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9244
  %78 = icmp sgt i64 %72, %24, !dbg !9234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9236
  %79 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9237, !tbaa !5704
  br i1 %78, label %48, label %80, !dbg !9236, !llvm.loop !9247

; <label>:80:                                     ; preds = %43, %48, %20
  %81 = phi i64 [ %21, %20 ], [ %24, %48 ], [ %24, %43 ], !dbg !9238
  %82 = phi %struct.redisObject** [ %19, %20 ], [ %46, %43 ], [ %79, %48 ], !dbg !9237
  %83 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %82, i64 %81, !dbg !9238
  store %struct.redisObject* %2, %struct.redisObject** %83, align 8, !dbg !9249, !tbaa !902
  %84 = add nsw i32 %17, 1, !dbg !9250
  store i32 %84, i32* %6, align 8, !dbg !9250, !tbaa !5707
  br label %85, !dbg !9251

; <label>:85:                                     ; preds = %3, %5, %80
  %86 = phi i32 [ 0, %80 ], [ 1, %5 ], [ 1, %3 ], !dbg !9237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9252
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9253
  ret i32 %86, !dbg !9253
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgReplace(%struct.RedisModuleCommandFilterCtx* nocapture readonly, i32, %struct.redisObject*) #0 !dbg !9254 {
  %4 = icmp slt i32 %1, 0, !dbg !9262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9264
  br i1 %4, label %17, label %5, !dbg !9264

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9265
  %7 = load i32, i32* %6, align 8, !dbg !9265, !tbaa !5707
  %8 = icmp sgt i32 %7, %1, !dbg !9266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9267
  br i1 %8, label %9, label %17, !dbg !9267

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9268
  %11 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9268, !tbaa !5704
  %12 = sext i32 %1 to i64, !dbg !9269
  %13 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %11, i64 %12, !dbg !9269
  %14 = load %struct.redisObject*, %struct.redisObject** %13, align 8, !dbg !9269, !tbaa !902
  tail call void @decrRefCount(%struct.redisObject* %14) #9, !dbg !9270
  %15 = load %struct.redisObject**, %struct.redisObject*** %10, align 8, !dbg !9271, !tbaa !5704
  %16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 %12, !dbg !9272
  store %struct.redisObject* %2, %struct.redisObject** %16, align 8, !dbg !9273, !tbaa !902
  br label %17, !dbg !9274

; <label>:17:                                     ; preds = %3, %5, %9
  %18 = phi i32 [ 0, %9 ], [ 1, %5 ], [ 1, %3 ], !dbg !9275
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9277
  ret i32 %18, !dbg !9277
}

; Function Attrs: noredzone nounwind
define dso_local i32 @RM_CommandFilterArgDelete(%struct.RedisModuleCommandFilterCtx* nocapture, i32) #0 !dbg !9278 {
  %3 = icmp slt i32 %1, 0, !dbg !9287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9289
  br i1 %3, label %71, label %4, !dbg !9289

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 1, !dbg !9290
  %6 = load i32, i32* %5, align 8, !dbg !9290, !tbaa !5707
  %7 = icmp sgt i32 %6, %1, !dbg !9291
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9292
  br i1 %7, label %8, label %71, !dbg !9292

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.RedisModuleCommandFilterCtx, %struct.RedisModuleCommandFilterCtx* %0, i64 0, i32 0, !dbg !9293
  %10 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9293, !tbaa !5704
  %11 = sext i32 %1 to i64, !dbg !9294
  %12 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 %11, !dbg !9294
  %13 = load %struct.redisObject*, %struct.redisObject** %12, align 8, !dbg !9294, !tbaa !902
  tail call void @decrRefCount(%struct.redisObject* %13) #9, !dbg !9295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9297
  %14 = load i32, i32* %5, align 8, !dbg !9299, !tbaa !5707
  %15 = add nsw i32 %14, -1, !dbg !9301
  %16 = icmp sgt i32 %15, %1, !dbg !9302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  br i1 %16, label %17, label %70, !dbg !9303

; <label>:17:                                     ; preds = %8
  %18 = sext i32 %15 to i64
  %19 = sub nsw i64 %18, %11, !dbg !9304
  %20 = xor i64 %11, -1, !dbg !9304
  %21 = add nsw i64 %20, %18, !dbg !9304
  %22 = and i64 %19, 3, !dbg !9304
  %23 = icmp eq i64 %22, 0, !dbg !9304
  br i1 %23, label %36, label %24, !dbg !9304

; <label>:24:                                     ; preds = %17, %24
  %25 = phi i64 [ %28, %24 ], [ %11, %17 ]
  %26 = phi i64 [ %34, %24 ], [ %22, %17 ]
  %27 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9304, !tbaa !5704
  %28 = add nsw i64 %25, 1, !dbg !9306
  %29 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %27, i64 %28, !dbg !9307
  %30 = bitcast %struct.redisObject** %29 to i64*, !dbg !9307
  %31 = load i64, i64* %30, align 8, !dbg !9307, !tbaa !902
  %32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %27, i64 %25, !dbg !9308
  %33 = bitcast %struct.redisObject** %32 to i64*, !dbg !9309
  store i64 %31, i64* %33, align 8, !dbg !9309, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  %34 = add i64 %26, -1, !dbg !9303
  %35 = icmp eq i64 %34, 0, !dbg !9303
  br i1 %35, label %36, label %24, !dbg !9303, !llvm.loop !9311

; <label>:36:                                     ; preds = %24, %17
  %37 = phi i64 [ %11, %17 ], [ %28, %24 ]
  %38 = icmp ult i64 %21, 3, !dbg !9304
  br i1 %38, label %70, label %39, !dbg !9304

; <label>:39:                                     ; preds = %36, %39
  %40 = phi i64 [ %63, %39 ], [ %37, %36 ]
  %41 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9304, !tbaa !5704
  %42 = add nsw i64 %40, 1, !dbg !9306
  %43 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %41, i64 %42, !dbg !9307
  %44 = bitcast %struct.redisObject** %43 to i64*, !dbg !9307
  %45 = load i64, i64* %44, align 8, !dbg !9307, !tbaa !902
  %46 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %41, i64 %40, !dbg !9308
  %47 = bitcast %struct.redisObject** %46 to i64*, !dbg !9309
  store i64 %45, i64* %47, align 8, !dbg !9309, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  %48 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9304, !tbaa !5704
  %49 = add nsw i64 %40, 2, !dbg !9306
  %50 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %48, i64 %49, !dbg !9307
  %51 = bitcast %struct.redisObject** %50 to i64*, !dbg !9307
  %52 = load i64, i64* %51, align 8, !dbg !9307, !tbaa !902
  %53 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %48, i64 %42, !dbg !9308
  %54 = bitcast %struct.redisObject** %53 to i64*, !dbg !9309
  store i64 %52, i64* %54, align 8, !dbg !9309, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  %55 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9304, !tbaa !5704
  %56 = add nsw i64 %40, 3, !dbg !9306
  %57 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %55, i64 %56, !dbg !9307
  %58 = bitcast %struct.redisObject** %57 to i64*, !dbg !9307
  %59 = load i64, i64* %58, align 8, !dbg !9307, !tbaa !902
  %60 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %55, i64 %49, !dbg !9308
  %61 = bitcast %struct.redisObject** %60 to i64*, !dbg !9309
  store i64 %59, i64* %61, align 8, !dbg !9309, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  %62 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !9304, !tbaa !5704
  %63 = add nsw i64 %40, 4, !dbg !9306
  %64 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %62, i64 %63, !dbg !9307
  %65 = bitcast %struct.redisObject** %64 to i64*, !dbg !9307
  %66 = load i64, i64* %65, align 8, !dbg !9307, !tbaa !902
  %67 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %62, i64 %56, !dbg !9308
  %68 = bitcast %struct.redisObject** %67 to i64*, !dbg !9309
  store i64 %66, i64* %68, align 8, !dbg !9309, !tbaa !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9310
  %69 = icmp slt i64 %63, %18, !dbg !9302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9303
  br i1 %69, label %39, label %70, !dbg !9303, !llvm.loop !9312

; <label>:70:                                     ; preds = %36, %39, %8
  store i32 %15, i32* %5, align 8, !dbg !9314, !tbaa !5707
  br label %71, !dbg !9315

; <label>:71:                                     ; preds = %2, %4, %70
  %72 = phi i32 [ 0, %70 ], [ 1, %4 ], [ 1, %2 ], !dbg !9316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9318
  ret i32 %72, !dbg !9318
}

; Function Attrs: noredzone nounwind
define dso_local i64 @dictCStringKeyHash(i8*) #0 !dbg !9319 {
  %2 = tail call i64 @strlen(i8* %0) #9, !dbg !9323
  %3 = trunc i64 %2 to i32, !dbg !9323
  %4 = tail call i64 @dictGenHashFunction(i8* %0, i32 %3) #9, !dbg !9324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9325
  ret i64 %4, !dbg !9325
}

; Function Attrs: noredzone
declare dso_local i64 @dictGenHashFunction(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @dictCStringKeyCompare(i8* nocapture readnone, i8*, i8*) #0 !dbg !9326 {
  %4 = tail call i32 @strcmp(i8* %1, i8* %2) #9, !dbg !9334
  %5 = icmp eq i32 %4, 0, !dbg !9335
  %6 = zext i1 %5 to i32, !dbg !9335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9336
  ret i32 %6, !dbg !9336
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleRegisterApi(i8*, i8*) local_unnamed_addr #0 !dbg !9337 {
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9345, !tbaa !1130
  %4 = tail call i32 @dictAdd(%struct.dict* %3, i8* %0, i8* %1) #9, !dbg !9346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9347
  ret i32 %4, !dbg !9347
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleInitModulesSystem() local_unnamed_addr #0 !dbg !9348 {
  %1 = tail call %struct.list* @listCreate() #9, !dbg !9349
  store %struct.list* %1, %struct.list** @moduleUnblockedClients, align 8, !dbg !9350, !tbaa !902
  %2 = tail call %struct.list* @listCreate() #9, !dbg !9351
  store %struct.list* %2, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 8, !dbg !9352, !tbaa !9353
  %3 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @modulesDictType, i8* null) #9, !dbg !9354
  store %struct.dict* %3, %struct.dict** @modules, align 8, !dbg !9355, !tbaa !902
  %4 = tail call %struct.list* @listCreate() #9, !dbg !9356
  store %struct.list* %4, %struct.list** @moduleKeyspaceSubscribers, align 8, !dbg !9357, !tbaa !902
  %5 = tail call %struct.client* @createClient(i32 -1) #9, !dbg !9358
  store %struct.client* %5, %struct.client** @moduleFreeContextReusedClient, align 8, !dbg !9359, !tbaa !902
  %6 = getelementptr inbounds %struct.client, %struct.client* %5, i64 0, i32 21, !dbg !9360
  %7 = load i32, i32* %6, align 8, !dbg !9361, !tbaa !1305
  %8 = or i32 %7, 134217728, !dbg !9361
  store i32 %8, i32* %6, align 8, !dbg !9361, !tbaa !1305
  %9 = tail call %struct.list* @listCreate() #9, !dbg !9362
  store %struct.list* %9, %struct.list** @moduleCommandFilters, align 8, !dbg !9363, !tbaa !902
  tail call void @moduleRegisterCoreAPI() #10, !dbg !9364
  %10 = tail call i32 @pipe(i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0)) #9, !dbg !9365
  %11 = icmp eq i32 %10, -1, !dbg !9367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9368
  br i1 %11, label %12, label %16, !dbg !9368

; <label>:12:                                     ; preds = %0
  %13 = tail call i32* @__errno() #9, !dbg !9369
  %14 = load i32, i32* %13, align 4, !dbg !9369, !tbaa !933
  %15 = tail call i8* @strerror(i32 %14) #9, !dbg !9371
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0), i8* %15) #9, !dbg !9372
  tail call void @exit(i32 1) #12, !dbg !9373
  unreachable

; <label>:16:                                     ; preds = %0
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 0), align 8, !dbg !9374, !tbaa !933
  %18 = tail call i32 @anetNonBlock(i8* null, i32 %17) #9, !dbg !9375
  %19 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 26, i64 1), align 4, !dbg !9376, !tbaa !933
  %20 = tail call i32 @anetNonBlock(i8* null, i32 %19) #9, !dbg !9377
  %21 = tail call %struct.rax* @raxNew() #9, !dbg !9378
  store %struct.rax* %21, %struct.rax** @Timers, align 8, !dbg !9379, !tbaa !902
  %22 = tail call i32 @pthread_mutex_lock(%struct.pthread_mutex_t_** nonnull @moduleGIL) #9, !dbg !9380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9381
  ret void, !dbg !9381
}

; Function Attrs: noredzone
declare dso_local %struct.dict* @dictCreate(%struct.dictType*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleRegisterCoreAPI() local_unnamed_addr #0 !dbg !9382 {
  %1 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @moduleAPIDictType, i8* null) #9, !dbg !9383
  store %struct.dict* %1, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9384, !tbaa !1130
  %2 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @moduleAPIDictType, i8* null) #9, !dbg !9385
  store %struct.dict* %2, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 24), align 8, !dbg !9386, !tbaa !8953
  %3 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9390, !tbaa !1130
  %4 = tail call i32 @dictAdd(%struct.dict* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0), i8* bitcast (i8* (i64)* @RM_Alloc to i8*)) #9, !dbg !9391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9392
  %5 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9396, !tbaa !1130
  %6 = tail call i32 @dictAdd(%struct.dict* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0), i8* bitcast (i8* (i64, i64)* @RM_Calloc to i8*)) #9, !dbg !9397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9398
  %7 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9402, !tbaa !1130
  %8 = tail call i32 @dictAdd(%struct.dict* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* bitcast (i8* (i8*, i64)* @RM_Realloc to i8*)) #9, !dbg !9403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9404
  %9 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9408, !tbaa !1130
  %10 = tail call i32 @dictAdd(%struct.dict* %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i64 0, i64 0), i8* bitcast (void (i8*)* @RM_Free to i8*)) #9, !dbg !9409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9410
  %11 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9414, !tbaa !1130
  %12 = tail call i32 @dictAdd(%struct.dict* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* bitcast (i8* (i8*)* @RM_Strdup to i8*)) #9, !dbg !9415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9416
  %13 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9420, !tbaa !1130
  %14 = tail call i32 @dictAdd(%struct.dict* %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i8*, i32, i32, i32)* @RM_CreateCommand to i8*)) #9, !dbg !9421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9422
  %15 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9426, !tbaa !1130
  %16 = tail call i32 @dictAdd(%struct.dict* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i8*, i32, i32)* @RM_SetModuleAttribs to i8*)) #9, !dbg !9427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9428
  %17 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9432, !tbaa !1130
  %18 = tail call i32 @dictAdd(%struct.dict* %17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.72, i64 0, i64 0), i8* bitcast (i32 (i8*)* @RM_IsModuleNameBusy to i8*)) #9, !dbg !9433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9434
  %19 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9438, !tbaa !1130
  %20 = tail call i32 @dictAdd(%struct.dict* %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_WrongArity to i8*)) #9, !dbg !9439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9440
  %21 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9444, !tbaa !1130
  %22 = tail call i32 @dictAdd(%struct.dict* %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.74, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64)* @RM_ReplyWithLongLong to i8*)) #9, !dbg !9445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9446
  %23 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9450, !tbaa !1130
  %24 = tail call i32 @dictAdd(%struct.dict* %23, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*)* @RM_ReplyWithError to i8*)) #9, !dbg !9451
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9452
  %25 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9456, !tbaa !1130
  %26 = tail call i32 @dictAdd(%struct.dict* %25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.76, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*)* @RM_ReplyWithSimpleString to i8*)) #9, !dbg !9457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9458
  %27 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9462, !tbaa !1130
  %28 = tail call i32 @dictAdd(%struct.dict* %27, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.77, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64)* @RM_ReplyWithArray to i8*)) #9, !dbg !9463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9464
  %29 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9468, !tbaa !1130
  %30 = tail call i32 @dictAdd(%struct.dict* %29, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.78, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i64)* @RM_ReplySetArrayLength to i8*)) #9, !dbg !9469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9470
  %31 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9474, !tbaa !1130
  %32 = tail call i32 @dictAdd(%struct.dict* %31, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.79, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_ReplyWithString to i8*)) #9, !dbg !9475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9476
  %33 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9480, !tbaa !1130
  %34 = tail call i32 @dictAdd(%struct.dict* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.80, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i64)* @RM_ReplyWithStringBuffer to i8*)) #9, !dbg !9481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9482
  %35 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9486, !tbaa !1130
  %36 = tail call i32 @dictAdd(%struct.dict* %35, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*)* @RM_ReplyWithCString to i8*)) #9, !dbg !9487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9488
  %37 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9492, !tbaa !1130
  %38 = tail call i32 @dictAdd(%struct.dict* %37, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_ReplyWithNull to i8*)) #9, !dbg !9493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9494
  %39 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9498, !tbaa !1130
  %40 = tail call i32 @dictAdd(%struct.dict* %39, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.RedisModuleCallReply*)* @RM_ReplyWithCallReply to i8*)) #9, !dbg !9499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9500
  %41 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9504, !tbaa !1130
  %42 = tail call i32 @dictAdd(%struct.dict* %41, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.84, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, double)* @RM_ReplyWithDouble to i8*)) #9, !dbg !9505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9506
  %43 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9510, !tbaa !1130
  %44 = tail call i32 @dictAdd(%struct.dict* %43, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.85, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_GetSelectedDb to i8*)) #9, !dbg !9511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9512
  %45 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9516, !tbaa !1130
  %46 = tail call i32 @dictAdd(%struct.dict* %45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.86, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i32)* @RM_SelectDb to i8*)) #9, !dbg !9517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9518
  %47 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9522, !tbaa !1130
  %48 = tail call i32 @dictAdd(%struct.dict* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.87, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*, %struct.redisObject*, i32)* @RM_OpenKey to i8*)) #9, !dbg !9523
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9524
  %49 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9528, !tbaa !1130
  %50 = tail call i32 @dictAdd(%struct.dict* %49, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleKey*)* @RM_CloseKey to i8*)) #9, !dbg !9529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9530
  %51 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9534, !tbaa !1130
  %52 = tail call i32 @dictAdd(%struct.dict* %51, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.89, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_KeyType to i8*)) #9, !dbg !9535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9536
  %53 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9540, !tbaa !1130
  %54 = tail call i32 @dictAdd(%struct.dict* %53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleKey*)* @RM_ValueLength to i8*)) #9, !dbg !9541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9542
  %55 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9546, !tbaa !1130
  %56 = tail call i32 @dictAdd(%struct.dict* %55, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.91, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i32, %struct.redisObject*)* @RM_ListPush to i8*)) #9, !dbg !9547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9548
  %57 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9552, !tbaa !1130
  %58 = tail call i32 @dictAdd(%struct.dict* %57, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleKey*, i32)* @RM_ListPop to i8*)) #9, !dbg !9553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9554
  %59 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9558, !tbaa !1130
  %60 = tail call i32 @dictAdd(%struct.dict* %59, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i64 0, i64 0), i8* bitcast (i32 (%struct.redisObject*, i64*)* @RM_StringToLongLong to i8*)) #9, !dbg !9559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9560
  %61 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9564, !tbaa !1130
  %62 = tail call i32 @dictAdd(%struct.dict* %61, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0), i8* bitcast (i32 (%struct.redisObject*, double*)* @RM_StringToDouble to i8*)) #9, !dbg !9565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9566
  %63 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9570, !tbaa !1130
  %64 = tail call i32 @dictAdd(%struct.dict* %63, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCallReply* (%struct.RedisModuleCtx*, i8*, i8*, ...)* @RM_Call to i8*)) #9, !dbg !9571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9572
  %65 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9576, !tbaa !1130
  %66 = tail call i32 @dictAdd(%struct.dict* %65, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.96, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCallReply*, i64*)* @RM_CallReplyProto to i8*)) #9, !dbg !9577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9578
  %67 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9582, !tbaa !1130
  %68 = tail call i32 @dictAdd(%struct.dict* %67, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.97, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCallReply*)* @RM_FreeCallReply to i8*)) #9, !dbg !9583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9584
  %69 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9588, !tbaa !1130
  %70 = tail call i32 @dictAdd(%struct.dict* %69, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCallReply*)* @RM_CallReplyInteger to i8*)) #9, !dbg !9589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9590
  %71 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9594, !tbaa !1130
  %72 = tail call i32 @dictAdd(%struct.dict* %71, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.99, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCallReply*)* @RM_CallReplyType to i8*)) #9, !dbg !9595
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9596
  %73 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9600, !tbaa !1130
  %74 = tail call i32 @dictAdd(%struct.dict* %73, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCallReply*)* @RM_CallReplyLength to i8*)) #9, !dbg !9601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9602
  %75 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9606, !tbaa !1130
  %76 = tail call i32 @dictAdd(%struct.dict* %75, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.101, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCallReply* (%struct.RedisModuleCallReply*, i64)* @RM_CallReplyArrayElement to i8*)) #9, !dbg !9607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9608
  %77 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9612, !tbaa !1130
  %78 = tail call i32 @dictAdd(%struct.dict* %77, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCallReply*, i64*)* @RM_CallReplyStringPtr to i8*)) #9, !dbg !9613
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9614
  %79 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9618, !tbaa !1130
  %80 = tail call i32 @dictAdd(%struct.dict* %79, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCallReply*)* @RM_CreateStringFromCallReply to i8*)) #9, !dbg !9619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9620
  %81 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9624, !tbaa !1130
  %82 = tail call i32 @dictAdd(%struct.dict* %81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, i8*, i64)* @RM_CreateString to i8*)) #9, !dbg !9625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9626
  %83 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9630, !tbaa !1130
  %84 = tail call i32 @dictAdd(%struct.dict* %83, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.105, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, i64)* @RM_CreateStringFromLongLong to i8*)) #9, !dbg !9631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9632
  %85 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9636, !tbaa !1130
  %86 = tail call i32 @dictAdd(%struct.dict* %85, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_CreateStringFromString to i8*)) #9, !dbg !9637
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9638
  %87 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9642, !tbaa !1130
  %88 = tail call i32 @dictAdd(%struct.dict* %87, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.107, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, i8*, ...)* @RM_CreateStringPrintf to i8*)) #9, !dbg !9643
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9644
  %89 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9648, !tbaa !1130
  %90 = tail call i32 @dictAdd(%struct.dict* %89, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.108, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_FreeString to i8*)) #9, !dbg !9649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9650
  %91 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9654, !tbaa !1130
  %92 = tail call i32 @dictAdd(%struct.dict* %91, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.109, i64 0, i64 0), i8* bitcast (i8* (%struct.redisObject*, i64*)* @RM_StringPtrLen to i8*)) #9, !dbg !9655
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9656
  %93 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9660, !tbaa !1130
  %94 = tail call i32 @dictAdd(%struct.dict* %93, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.110, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_AutoMemory to i8*)) #9, !dbg !9661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9662
  %95 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9666, !tbaa !1130
  %96 = tail call i32 @dictAdd(%struct.dict* %95, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.111, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8*, ...)* @RM_Replicate to i8*)) #9, !dbg !9667
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9668
  %97 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9672, !tbaa !1130
  %98 = tail call i32 @dictAdd(%struct.dict* %97, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.112, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_ReplicateVerbatim to i8*)) #9, !dbg !9673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9674
  %99 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9678, !tbaa !1130
  %100 = tail call i32 @dictAdd(%struct.dict* %99, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_DeleteKey to i8*)) #9, !dbg !9679
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9680
  %101 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9684, !tbaa !1130
  %102 = tail call i32 @dictAdd(%struct.dict* %101, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.114, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_UnlinkKey to i8*)) #9, !dbg !9685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9686
  %103 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9690, !tbaa !1130
  %104 = tail call i32 @dictAdd(%struct.dict* %103, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*)* @RM_StringSet to i8*)) #9, !dbg !9691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9692
  %105 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9696, !tbaa !1130
  %106 = tail call i32 @dictAdd(%struct.dict* %105, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.116, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleKey*, i64*, i32)* @RM_StringDMA to i8*)) #9, !dbg !9697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9698
  %107 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9702, !tbaa !1130
  %108 = tail call i32 @dictAdd(%struct.dict* %107, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.117, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i64)* @RM_StringTruncate to i8*)) #9, !dbg !9703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9704
  %109 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9708, !tbaa !1130
  %110 = tail call i32 @dictAdd(%struct.dict* %109, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.118, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i64)* @RM_SetExpire to i8*)) #9, !dbg !9709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9710
  %111 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9714, !tbaa !1130
  %112 = tail call i32 @dictAdd(%struct.dict* %111, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleKey*)* @RM_GetExpire to i8*)) #9, !dbg !9715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9716
  %113 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9720, !tbaa !1130
  %114 = tail call i32 @dictAdd(%struct.dict* %113, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.120, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, %struct.redisObject*, i32*)* @RM_ZsetAdd to i8*)) #9, !dbg !9721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9722
  %115 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9726, !tbaa !1130
  %116 = tail call i32 @dictAdd(%struct.dict* %115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, %struct.redisObject*, i32*, double*)* @RM_ZsetIncrby to i8*)) #9, !dbg !9727
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9728
  %117 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9732, !tbaa !1130
  %118 = tail call i32 @dictAdd(%struct.dict* %117, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.122, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, double*)* @RM_ZsetScore to i8*)) #9, !dbg !9733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9734
  %119 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9738, !tbaa !1130
  %120 = tail call i32 @dictAdd(%struct.dict* %119, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.123, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, i32*)* @RM_ZsetRem to i8*)) #9, !dbg !9739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9740
  %121 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9744, !tbaa !1130
  %122 = tail call i32 @dictAdd(%struct.dict* %121, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.124, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleKey*)* @RM_ZsetRangeStop to i8*)) #9, !dbg !9745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9746
  %123 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9750, !tbaa !1130
  %124 = tail call i32 @dictAdd(%struct.dict* %123, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.125, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, double, i32, i32)* @RM_ZsetFirstInScoreRange to i8*)) #9, !dbg !9751
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9752
  %125 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9756, !tbaa !1130
  %126 = tail call i32 @dictAdd(%struct.dict* %125, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.126, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, double, double, i32, i32)* @RM_ZsetLastInScoreRange to i8*)) #9, !dbg !9757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9758
  %127 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9762, !tbaa !1130
  %128 = tail call i32 @dictAdd(%struct.dict* %127, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.127, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*)* @RM_ZsetFirstInLexRange to i8*)) #9, !dbg !9763
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9764
  %129 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9768, !tbaa !1130
  %130 = tail call i32 @dictAdd(%struct.dict* %129, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.128, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.redisObject*, %struct.redisObject*)* @RM_ZsetLastInLexRange to i8*)) #9, !dbg !9769
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9770
  %131 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9774, !tbaa !1130
  %132 = tail call i32 @dictAdd(%struct.dict* %131, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.129, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleKey*, double*)* @RM_ZsetRangeCurrentElement to i8*)) #9, !dbg !9775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9776
  %133 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9780, !tbaa !1130
  %134 = tail call i32 @dictAdd(%struct.dict* %133, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_ZsetRangeNext to i8*)) #9, !dbg !9781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9782
  %135 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9786, !tbaa !1130
  %136 = tail call i32 @dictAdd(%struct.dict* %135, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.131, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_ZsetRangePrev to i8*)) #9, !dbg !9787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9788
  %137 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9792, !tbaa !1130
  %138 = tail call i32 @dictAdd(%struct.dict* %137, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*)* @RM_ZsetRangeEndReached to i8*)) #9, !dbg !9793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9794
  %139 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9798, !tbaa !1130
  %140 = tail call i32 @dictAdd(%struct.dict* %139, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.133, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i32, ...)* @RM_HashSet to i8*)) #9, !dbg !9799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9800
  %141 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9804, !tbaa !1130
  %142 = tail call i32 @dictAdd(%struct.dict* %141, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, i32, ...)* @RM_HashGet to i8*)) #9, !dbg !9805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9806
  %143 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9810, !tbaa !1130
  %144 = tail call i32 @dictAdd(%struct.dict* %143, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.135, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_IsKeysPositionRequest to i8*)) #9, !dbg !9811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9812
  %145 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9816, !tbaa !1130
  %146 = tail call i32 @dictAdd(%struct.dict* %145, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.136, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i32)* @RM_KeyAtPos to i8*)) #9, !dbg !9817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9818
  %147 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9822, !tbaa !1130
  %148 = tail call i32 @dictAdd(%struct.dict* %147, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCtx*)* @RM_GetClientId to i8*)) #9, !dbg !9823
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9824
  %149 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9828, !tbaa !1130
  %150 = tail call i32 @dictAdd(%struct.dict* %149, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.138, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_GetContextFlags to i8*)) #9, !dbg !9829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9830
  %151 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9834, !tbaa !1130
  %152 = tail call i32 @dictAdd(%struct.dict* %151, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.139, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*, i64)* @RM_PoolAlloc to i8*)) #9, !dbg !9835
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9836
  %153 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9840, !tbaa !1130
  %154 = tail call i32 @dictAdd(%struct.dict* %153, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.140, i64 0, i64 0), i8* bitcast (%struct.RedisModuleType* (%struct.RedisModuleCtx*, i8*, i32, i8*)* @RM_CreateDataType to i8*)) #9, !dbg !9841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9842
  %155 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9846, !tbaa !1130
  %156 = tail call i32 @dictAdd(%struct.dict* %155, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleKey*, %struct.RedisModuleType*, i8*)* @RM_ModuleTypeSetValue to i8*)) #9, !dbg !9847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9848
  %157 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9852, !tbaa !1130
  %158 = tail call i32 @dictAdd(%struct.dict* %157, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.142, i64 0, i64 0), i8* bitcast (%struct.RedisModuleType* (%struct.RedisModuleKey*)* @RM_ModuleTypeGetType to i8*)) #9, !dbg !9853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9854
  %159 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9858, !tbaa !1130
  %160 = tail call i32 @dictAdd(%struct.dict* %159, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleKey*)* @RM_ModuleTypeGetValue to i8*)) #9, !dbg !9859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9860
  %161 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9864, !tbaa !1130
  %162 = tail call i32 @dictAdd(%struct.dict* %161, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.144, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i64)* @RM_SaveUnsigned to i8*)) #9, !dbg !9865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9866
  %163 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9870, !tbaa !1130
  %164 = tail call i32 @dictAdd(%struct.dict* %163, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.145, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleIO*)* @RM_LoadUnsigned to i8*)) #9, !dbg !9871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9872
  %165 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9876, !tbaa !1130
  %166 = tail call i32 @dictAdd(%struct.dict* %165, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i64)* @RM_SaveSigned to i8*)) #9, !dbg !9877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9878
  %167 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9882, !tbaa !1130
  %168 = tail call i32 @dictAdd(%struct.dict* %167, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.147, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleIO*)* @RM_LoadSigned to i8*)) #9, !dbg !9883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9884
  %169 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9888, !tbaa !1130
  %170 = tail call i32 @dictAdd(%struct.dict* %169, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.148, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, %struct.redisObject*)* @RM_SaveString to i8*)) #9, !dbg !9889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9890
  %171 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9894, !tbaa !1130
  %172 = tail call i32 @dictAdd(%struct.dict* %171, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.149, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i8*, i64)* @RM_SaveStringBuffer to i8*)) #9, !dbg !9895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9896
  %173 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9900, !tbaa !1130
  %174 = tail call i32 @dictAdd(%struct.dict* %173, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.150, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleIO*)* @RM_LoadString to i8*)) #9, !dbg !9901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9902
  %175 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9906, !tbaa !1130
  %176 = tail call i32 @dictAdd(%struct.dict* %175, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleIO*, i64*)* @RM_LoadStringBuffer to i8*)) #9, !dbg !9907
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9908
  %177 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9912, !tbaa !1130
  %178 = tail call i32 @dictAdd(%struct.dict* %177, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.152, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, double)* @RM_SaveDouble to i8*)) #9, !dbg !9913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9914
  %179 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9918, !tbaa !1130
  %180 = tail call i32 @dictAdd(%struct.dict* %179, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.153, i64 0, i64 0), i8* bitcast (double (%struct.RedisModuleIO*)* @RM_LoadDouble to i8*)) #9, !dbg !9919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9920
  %181 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9924, !tbaa !1130
  %182 = tail call i32 @dictAdd(%struct.dict* %181, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.154, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, float)* @RM_SaveFloat to i8*)) #9, !dbg !9925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9926
  %183 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9930, !tbaa !1130
  %184 = tail call i32 @dictAdd(%struct.dict* %183, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.155, i64 0, i64 0), i8* bitcast (float (%struct.RedisModuleIO*)* @RM_LoadFloat to i8*)) #9, !dbg !9931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9932
  %185 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9936, !tbaa !1130
  %186 = tail call i32 @dictAdd(%struct.dict* %185, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.156, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i8*, i8*, ...)* @RM_EmitAOF to i8*)) #9, !dbg !9937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9938
  %187 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9942, !tbaa !1130
  %188 = tail call i32 @dictAdd(%struct.dict* %187, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.157, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i8*, i8*, ...)* @RM_Log to i8*)) #9, !dbg !9943
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9944
  %189 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9948, !tbaa !1130
  %190 = tail call i32 @dictAdd(%struct.dict* %189, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.158, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleIO*, i8*, i8*, ...)* @RM_LogIOError to i8*)) #9, !dbg !9949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9950
  %191 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9954, !tbaa !1130
  %192 = tail call i32 @dictAdd(%struct.dict* %191, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.159, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.redisObject*, i8*, i64)* @RM_StringAppendBuffer to i8*)) #9, !dbg !9955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9956
  %193 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9960, !tbaa !1130
  %194 = tail call i32 @dictAdd(%struct.dict* %193, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.160, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, %struct.redisObject*)* @RM_RetainString to i8*)) #9, !dbg !9961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9962
  %195 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9966, !tbaa !1130
  %196 = tail call i32 @dictAdd(%struct.dict* %195, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.161, i64 0, i64 0), i8* bitcast (i32 (%struct.redisObject*, %struct.redisObject*)* @RM_StringCompare to i8*)) #9, !dbg !9967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9968
  %197 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9972, !tbaa !1130
  %198 = tail call i32 @dictAdd(%struct.dict* %197, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCtx* (%struct.RedisModuleIO*)* @RM_GetContextFromIO to i8*)) #9, !dbg !9973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9974
  %199 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9978, !tbaa !1130
  %200 = tail call i32 @dictAdd(%struct.dict* %199, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleIO*)* @RM_GetKeyNameFromIO to i8*)) #9, !dbg !9979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9980
  %201 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9984, !tbaa !1130
  %202 = tail call i32 @dictAdd(%struct.dict* %201, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.164, i64 0, i64 0), i8* bitcast (%struct.RedisModuleBlockedClient* (%struct.RedisModuleCtx*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, i32 (%struct.RedisModuleCtx*, i8**, i32)*, void (%struct.RedisModuleCtx*, i8*)*, i64)* @RM_BlockClient to i8*)) #9, !dbg !9985
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9986
  %203 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9990, !tbaa !1130
  %204 = tail call i32 @dictAdd(%struct.dict* %203, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.165, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleBlockedClient*, i8*)* @RM_UnblockClient to i8*)) #9, !dbg !9991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9992
  %205 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !9996, !tbaa !1130
  %206 = tail call i32 @dictAdd(%struct.dict* %205, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.166, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_IsBlockedReplyRequest to i8*)) #9, !dbg !9997
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9998
  %207 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10002, !tbaa !1130
  %208 = tail call i32 @dictAdd(%struct.dict* %207, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.167, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_IsBlockedTimeoutRequest to i8*)) #9, !dbg !10003
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10004
  %209 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10008, !tbaa !1130
  %210 = tail call i32 @dictAdd(%struct.dict* %209, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.168, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*)* @RM_GetBlockedClientPrivateData to i8*)) #9, !dbg !10009
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10010
  %211 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10014, !tbaa !1130
  %212 = tail call i32 @dictAdd(%struct.dict* %211, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.169, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleBlockedClient*)* @RM_AbortBlock to i8*)) #9, !dbg !10015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10016
  %213 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10020, !tbaa !1130
  %214 = tail call i32 @dictAdd(%struct.dict* %213, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.170, i64 0, i64 0), i8* bitcast (i64 ()* @RM_Milliseconds to i8*)) #9, !dbg !10021
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10022
  %215 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10026, !tbaa !1130
  %216 = tail call i32 @dictAdd(%struct.dict* %215, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.171, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCtx* (%struct.RedisModuleBlockedClient*)* @RM_GetThreadSafeContext to i8*)) #9, !dbg !10027
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10028
  %217 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10032, !tbaa !1130
  %218 = tail call i32 @dictAdd(%struct.dict* %217, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.172, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_FreeThreadSafeContext to i8*)) #9, !dbg !10033
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10034
  %219 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10038, !tbaa !1130
  %220 = tail call i32 @dictAdd(%struct.dict* %219, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.173, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_ThreadSafeContextLock to i8*)) #9, !dbg !10039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10040
  %221 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10044, !tbaa !1130
  %222 = tail call i32 @dictAdd(%struct.dict* %221, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.174, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*)* @RM_ThreadSafeContextUnlock to i8*)) #9, !dbg !10045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10046
  %223 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10050, !tbaa !1130
  %224 = tail call i32 @dictAdd(%struct.dict* %223, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDigest*, i8*, i64)* @RM_DigestAddStringBuffer to i8*)) #9, !dbg !10051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10052
  %225 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10056, !tbaa !1130
  %226 = tail call i32 @dictAdd(%struct.dict* %225, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.176, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDigest*, i64)* @RM_DigestAddLongLong to i8*)) #9, !dbg !10057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10058
  %227 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10062, !tbaa !1130
  %228 = tail call i32 @dictAdd(%struct.dict* %227, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.177, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDigest*)* @RM_DigestEndSequence to i8*)) #9, !dbg !10063
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10064
  %229 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10068, !tbaa !1130
  %230 = tail call i32 @dictAdd(%struct.dict* %229, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.178, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i32, i32 (%struct.RedisModuleCtx*, i32, i8*, %struct.redisObject*)*)* @RM_SubscribeToKeyspaceEvents to i8*)) #9, !dbg !10069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10070
  %231 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10074, !tbaa !1130
  %232 = tail call i32 @dictAdd(%struct.dict* %231, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.179, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i8, void (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)*)* @RM_RegisterClusterMessageReceiver to i8*)) #9, !dbg !10075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10076
  %233 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10080, !tbaa !1130
  %234 = tail call i32 @dictAdd(%struct.dict* %233, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.180, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8, i8*, i32)* @RM_SendClusterMessage to i8*)) #9, !dbg !10081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10082
  %235 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10086, !tbaa !1130
  %236 = tail call i32 @dictAdd(%struct.dict* %235, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.181, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8*, i8*, i32*, i32*)* @RM_GetClusterNodeInfo to i8*)) #9, !dbg !10087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10088
  %237 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10092, !tbaa !1130
  %238 = tail call i32 @dictAdd(%struct.dict* %237, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.182, i64 0, i64 0), i8* bitcast (i8** (%struct.RedisModuleCtx*, i64*)* @RM_GetClusterNodesList to i8*)) #9, !dbg !10093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10094
  %239 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10098, !tbaa !1130
  %240 = tail call i32 @dictAdd(%struct.dict* %239, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.183, i64 0, i64 0), i8* bitcast (void (i8**)* @RM_FreeClusterNodesList to i8*)) #9, !dbg !10099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10100
  %241 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10104, !tbaa !1130
  %242 = tail call i32 @dictAdd(%struct.dict* %241, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.184, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleCtx*, i64, void (%struct.RedisModuleCtx*, i8*)*, i8*)* @RM_CreateTimer to i8*)) #9, !dbg !10105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10106
  %243 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10110, !tbaa !1130
  %244 = tail call i32 @dictAdd(%struct.dict* %243, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.185, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64, i8**)* @RM_StopTimer to i8*)) #9, !dbg !10111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10112
  %245 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10116, !tbaa !1130
  %246 = tail call i32 @dictAdd(%struct.dict* %245, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.186, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i64, i64*, i8**)* @RM_GetTimerInfo to i8*)) #9, !dbg !10117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10118
  %247 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10122, !tbaa !1130
  %248 = tail call i32 @dictAdd(%struct.dict* %247, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* bitcast (i8* ()* @RM_GetMyClusterID to i8*)) #9, !dbg !10123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10124
  %249 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10128, !tbaa !1130
  %250 = tail call i32 @dictAdd(%struct.dict* %249, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.188, i64 0, i64 0), i8* bitcast (i64 ()* @RM_GetClusterSize to i8*)) #9, !dbg !10129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10130
  %251 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10134, !tbaa !1130
  %252 = tail call i32 @dictAdd(%struct.dict* %251, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.189, i64 0, i64 0), i8* bitcast (void (i8*, i64)* @RM_GetRandomBytes to i8*)) #9, !dbg !10135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10136
  %253 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10140, !tbaa !1130
  %254 = tail call i32 @dictAdd(%struct.dict* %253, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.190, i64 0, i64 0), i8* bitcast (void (i8*, i64)* @RM_GetRandomHexChars to i8*)) #9, !dbg !10141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10142
  %255 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10146, !tbaa !1130
  %256 = tail call i32 @dictAdd(%struct.dict* %255, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.191, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*)* @RM_BlockedClientDisconnected to i8*)) #9, !dbg !10147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10148
  %257 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10152, !tbaa !1130
  %258 = tail call i32 @dictAdd(%struct.dict* %257, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.192, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleBlockedClient*, void (%struct.RedisModuleCtx*, %struct.RedisModuleBlockedClient*)*)* @RM_SetDisconnectCallback to i8*)) #9, !dbg !10153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10154
  %259 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10158, !tbaa !1130
  %260 = tail call i32 @dictAdd(%struct.dict* %259, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.193, i64 0, i64 0), i8* bitcast (%struct.RedisModuleBlockedClient* (%struct.RedisModuleCtx*)* @RM_GetBlockedClientHandle to i8*)) #9, !dbg !10159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10160
  %261 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10164, !tbaa !1130
  %262 = tail call i32 @dictAdd(%struct.dict* %261, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.194, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, i64)* @RM_SetClusterFlags to i8*)) #9, !dbg !10165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10166
  %263 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10170, !tbaa !1130
  %264 = tail call i32 @dictAdd(%struct.dict* %263, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.195, i64 0, i64 0), i8* bitcast (%struct.RedisModuleDict* (%struct.RedisModuleCtx*)* @RM_CreateDict to i8*)) #9, !dbg !10171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10172
  %265 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10176, !tbaa !1130
  %266 = tail call i32 @dictAdd(%struct.dict* %265, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.196, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleCtx*, %struct.RedisModuleDict*)* @RM_FreeDict to i8*)) #9, !dbg !10177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10178
  %267 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10182, !tbaa !1130
  %268 = tail call i32 @dictAdd(%struct.dict* %267, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.197, i64 0, i64 0), i8* bitcast (i64 (%struct.RedisModuleDict*)* @RM_DictSize to i8*)) #9, !dbg !10183
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10184
  %269 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10188, !tbaa !1130
  %270 = tail call i32 @dictAdd(%struct.dict* %269, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.198, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, i8*, i64, i8*)* @RM_DictSetC to i8*)) #9, !dbg !10189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10190
  %271 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10194, !tbaa !1130
  %272 = tail call i32 @dictAdd(%struct.dict* %271, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.199, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, i8*, i64, i8*)* @RM_DictReplaceC to i8*)) #9, !dbg !10195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10196
  %273 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10200, !tbaa !1130
  %274 = tail call i32 @dictAdd(%struct.dict* %273, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.200, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, %struct.redisObject*, i8*)* @RM_DictSet to i8*)) #9, !dbg !10201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10202
  %275 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10206, !tbaa !1130
  %276 = tail call i32 @dictAdd(%struct.dict* %275, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.201, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, %struct.redisObject*, i8*)* @RM_DictReplace to i8*)) #9, !dbg !10207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10208
  %277 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10212, !tbaa !1130
  %278 = tail call i32 @dictAdd(%struct.dict* %277, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.202, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDict*, i8*, i64, i32*)* @RM_DictGetC to i8*)) #9, !dbg !10213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10214
  %279 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10218, !tbaa !1130
  %280 = tail call i32 @dictAdd(%struct.dict* %279, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDict*, %struct.redisObject*, i32*)* @RM_DictGet to i8*)) #9, !dbg !10219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10220
  %281 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10224, !tbaa !1130
  %282 = tail call i32 @dictAdd(%struct.dict* %281, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.204, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, i8*, i64, i8*)* @RM_DictDelC to i8*)) #9, !dbg !10225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10226
  %283 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10230, !tbaa !1130
  %284 = tail call i32 @dictAdd(%struct.dict* %283, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.205, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDict*, %struct.redisObject*, i8*)* @RM_DictDel to i8*)) #9, !dbg !10231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10232
  %285 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10236, !tbaa !1130
  %286 = tail call i32 @dictAdd(%struct.dict* %285, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.206, i64 0, i64 0), i8* bitcast (%struct.RedisModuleDictIter* (%struct.RedisModuleDict*, i8*, i8*, i64)* @RM_DictIteratorStartC to i8*)) #9, !dbg !10237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10238
  %287 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10242, !tbaa !1130
  %288 = tail call i32 @dictAdd(%struct.dict* %287, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.207, i64 0, i64 0), i8* bitcast (%struct.RedisModuleDictIter* (%struct.RedisModuleDict*, i8*, %struct.redisObject*)* @RM_DictIteratorStart to i8*)) #9, !dbg !10243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10244
  %289 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10248, !tbaa !1130
  %290 = tail call i32 @dictAdd(%struct.dict* %289, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.208, i64 0, i64 0), i8* bitcast (void (%struct.RedisModuleDictIter*)* @RM_DictIteratorStop to i8*)) #9, !dbg !10249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10250
  %291 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10254, !tbaa !1130
  %292 = tail call i32 @dictAdd(%struct.dict* %291, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.209, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, i8*, i64)* @RM_DictIteratorReseekC to i8*)) #9, !dbg !10255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10256
  %293 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10260, !tbaa !1130
  %294 = tail call i32 @dictAdd(%struct.dict* %293, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.210, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, %struct.redisObject*)* @RM_DictIteratorReseek to i8*)) #9, !dbg !10261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10262
  %295 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10266, !tbaa !1130
  %296 = tail call i32 @dictAdd(%struct.dict* %295, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.211, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDictIter*, i64*, i8**)* @RM_DictNextC to i8*)) #9, !dbg !10267
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10268
  %297 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10272, !tbaa !1130
  %298 = tail call i32 @dictAdd(%struct.dict* %297, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.212, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleDictIter*, i64*, i8**)* @RM_DictPrevC to i8*)) #9, !dbg !10273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10274
  %299 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10278, !tbaa !1130
  %300 = tail call i32 @dictAdd(%struct.dict* %299, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.213, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**)* @RM_DictNext to i8*)) #9, !dbg !10279
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10280
  %301 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10284, !tbaa !1130
  %302 = tail call i32 @dictAdd(%struct.dict* %301, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.214, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCtx*, %struct.RedisModuleDictIter*, i8**)* @RM_DictPrev to i8*)) #9, !dbg !10285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10286
  %303 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10290, !tbaa !1130
  %304 = tail call i32 @dictAdd(%struct.dict* %303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.215, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, i8*, i64)* @RM_DictCompareC to i8*)) #9, !dbg !10291
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10292
  %305 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10296, !tbaa !1130
  %306 = tail call i32 @dictAdd(%struct.dict* %305, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.216, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleDictIter*, i8*, %struct.redisObject*)* @RM_DictCompare to i8*)) #9, !dbg !10297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10298
  %307 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10302, !tbaa !1130
  %308 = tail call i32 @dictAdd(%struct.dict* %307, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.217, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, i8*, i8*)* @RM_ExportSharedAPI to i8*)) #9, !dbg !10303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10304
  %309 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10308, !tbaa !1130
  %310 = tail call i32 @dictAdd(%struct.dict* %309, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.218, i64 0, i64 0), i8* bitcast (i8* (%struct.RedisModuleCtx*, i8*)* @RM_GetSharedAPI to i8*)) #9, !dbg !10309
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10310
  %311 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10314, !tbaa !1130
  %312 = tail call i32 @dictAdd(%struct.dict* %311, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.219, i64 0, i64 0), i8* bitcast (%struct.RedisModuleCommandFilter* (%struct.RedisModuleCtx*, void (%struct.RedisModuleCommandFilterCtx*)*, i32)* @RM_RegisterCommandFilter to i8*)) #9, !dbg !10315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10316
  %313 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10320, !tbaa !1130
  %314 = tail call i32 @dictAdd(%struct.dict* %313, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.220, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCtx*, %struct.RedisModuleCommandFilter*)* @RM_UnregisterCommandFilter to i8*)) #9, !dbg !10321
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10322
  %315 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10326, !tbaa !1130
  %316 = tail call i32 @dictAdd(%struct.dict* %315, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.221, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*)* @RM_CommandFilterArgsCount to i8*)) #9, !dbg !10327
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10328
  %317 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10332, !tbaa !1130
  %318 = tail call i32 @dictAdd(%struct.dict* %317, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.222, i64 0, i64 0), i8* bitcast (%struct.redisObject* (%struct.RedisModuleCommandFilterCtx*, i32)* @RM_CommandFilterArgGet to i8*)) #9, !dbg !10333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10334
  %319 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10338, !tbaa !1130
  %320 = tail call i32 @dictAdd(%struct.dict* %319, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.223, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*, i32, %struct.redisObject*)* @RM_CommandFilterArgInsert to i8*)) #9, !dbg !10339
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10340
  %321 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10344, !tbaa !1130
  %322 = tail call i32 @dictAdd(%struct.dict* %321, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.224, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*, i32, %struct.redisObject*)* @RM_CommandFilterArgReplace to i8*)) #9, !dbg !10345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10346
  %323 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 23), align 8, !dbg !10350, !tbaa !1130
  %324 = tail call i32 @dictAdd(%struct.dict* %323, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.225, i64 0, i64 0), i8* bitcast (i32 (%struct.RedisModuleCommandFilterCtx*, i32)* @RM_CommandFilterArgDelete to i8*)) #9, !dbg !10351
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10352
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10353
  ret void, !dbg !10353
}

; Function Attrs: noredzone
declare dso_local i32 @pipe(i32*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleLoadFromQueue() local_unnamed_addr #0 !dbg !10354 {
  %1 = alloca %struct.listIter, align 8
  %2 = bitcast %struct.listIter* %1 to i8*, !dbg !10366
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #5, !dbg !10366
  %3 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 25), align 8, !dbg !10367, !tbaa !9353
  call void @listRewind(%struct.list* %3, %struct.listIter* nonnull %1) #9, !dbg !10369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10370
  %4 = call %struct.listNode* @listNext(%struct.listIter* nonnull %1) #9, !dbg !10371
  %5 = icmp eq %struct.listNode* %4, null, !dbg !10370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10370
  br i1 %5, label %26, label %6, !dbg !10370

; <label>:6:                                      ; preds = %0, %23
  %7 = phi %struct.listNode* [ %24, %23 ], [ %4, %0 ]
  %8 = getelementptr inbounds %struct.listNode, %struct.listNode* %7, i64 0, i32 2, !dbg !10373
  %9 = bitcast i8** %8 to %struct.moduleLoadQueueEntry**, !dbg !10373
  %10 = load %struct.moduleLoadQueueEntry*, %struct.moduleLoadQueueEntry** %9, align 8, !dbg !10373, !tbaa !5611
  %11 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 0, !dbg !10375
  %12 = load i8*, i8** %11, align 8, !dbg !10375, !tbaa !10377
  %13 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 2, !dbg !10379
  %14 = bitcast %struct.redisObject*** %13 to i8***, !dbg !10379
  %15 = load i8**, i8*** %14, align 8, !dbg !10379, !tbaa !10380
  %16 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 1, !dbg !10381
  %17 = load i32, i32* %16, align 8, !dbg !10381, !tbaa !10382
  %18 = call i32 @moduleLoad(i8* %12, i8** %15, i32 %17) #10, !dbg !10383
  %19 = icmp eq i32 %18, -1, !dbg !10384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10385
  br i1 %19, label %20, label %23, !dbg !10385

; <label>:20:                                     ; preds = %6
  %21 = getelementptr inbounds %struct.moduleLoadQueueEntry, %struct.moduleLoadQueueEntry* %10, i64 0, i32 0, !dbg !10375
  %22 = load i8*, i8** %21, align 8, !dbg !10386, !tbaa !10377
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i8* %22) #9, !dbg !10388
  call void @exit(i32 1) #12, !dbg !10389
  unreachable

; <label>:23:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10370
  %24 = call %struct.listNode* @listNext(%struct.listIter* nonnull %1) #9, !dbg !10371
  %25 = icmp eq %struct.listNode* %24, null, !dbg !10370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10370
  br i1 %25, label %26, label %6, !dbg !10370, !llvm.loop !10390

; <label>:26:                                     ; preds = %23, %0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #5, !dbg !10392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10392
  ret void, !dbg !10392
}

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleLoad(i8*, i8**, i32) local_unnamed_addr #0 !dbg !10393 {
  %4 = alloca %struct.RedisModuleCtx, align 8
  %5 = bitcast %struct.RedisModuleCtx* %4 to i8*, !dbg !10406
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #5, !dbg !10406
  %6 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1
  %7 = bitcast %struct.RedisModule** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 96, i1 false), !dbg !10407
  %8 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 0, !dbg !10407
  store i8* bitcast (i32 (i8*, i8**)* @RM_GetApi to i8*), i8** %8, align 8, !dbg !10407
  %9 = tail call i8* @dlopen(i8* %0, i32 2) #9, !dbg !10408
  %10 = icmp eq i8* %9, null, !dbg !10410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10412
  br i1 %10, label %11, label %13, !dbg !10412

; <label>:11:                                     ; preds = %3
  %12 = tail call i8* @dlerror() #9, !dbg !10413
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0), i8* %0, i8* %12) #9, !dbg !10415
  br label %53, !dbg !10416

; <label>:13:                                     ; preds = %3
  %14 = tail call i8* @dlsym(i8* nonnull %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0)) #9, !dbg !10417
  %15 = icmp eq i8* %14, null, !dbg !10418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10420
  br i1 %15, label %16, label %18, !dbg !10420

; <label>:16:                                     ; preds = %13
  %17 = tail call i32 @dlclose(i8* nonnull %9) #9, !dbg !10421
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.44, i64 0, i64 0), i8* %0) #9, !dbg !10423
  br label %53, !dbg !10424

; <label>:18:                                     ; preds = %13
  %19 = bitcast i8* %14 to i32 (i8*, i8**, i32)*, !dbg !10425
  %20 = call i32 %19(i8* nonnull %5, i8** %1, i32 %2) #9, !dbg !10427
  %21 = icmp eq i32 %20, 1, !dbg !10429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10430
  br i1 %21, label %22, label %41, !dbg !10430

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1, !dbg !10431
  %24 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !10431, !tbaa !1171
  %25 = icmp eq %struct.RedisModule* %24, null, !dbg !10434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10435
  br i1 %25, label %39, label %26, !dbg !10435

; <label>:26:                                     ; preds = %22
  call void @moduleUnregisterCommands(%struct.RedisModule* nonnull %24) #10, !dbg !10436
  %27 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !10438, !tbaa !1171
  %28 = call i32 @moduleUnregisterSharedAPI(%struct.RedisModule* %27) #10, !dbg !10439
  %29 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !10440, !tbaa !1171
  %30 = call i32 @moduleUnregisterUsedAPI(%struct.RedisModule* %29) #10, !dbg !10441
  %31 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !10442, !tbaa !1171
  %32 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %31, i64 0, i32 4, !dbg !10450
  %33 = load %struct.list*, %struct.list** %32, align 8, !dbg !10450, !tbaa !1696
  call void @listRelease(%struct.list* %33) #9, !dbg !10451
  %34 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %31, i64 0, i32 7, !dbg !10452
  %35 = load %struct.list*, %struct.list** %34, align 8, !dbg !10452, !tbaa !1708
  call void @listRelease(%struct.list* %35) #9, !dbg !10453
  %36 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %31, i64 0, i32 1, !dbg !10454
  %37 = load i8*, i8** %36, align 8, !dbg !10454, !tbaa !1173
  call void @sdsfree(i8* %37) #9, !dbg !10455
  %38 = bitcast %struct.RedisModule* %31 to i8*, !dbg !10456
  call void @zfree(i8* %38) #9, !dbg !10457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10459
  br label %39, !dbg !10459

; <label>:39:                                     ; preds = %22, %26
  %40 = call i32 @dlclose(i8* nonnull %9) #9, !dbg !10460
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.45, i64 0, i64 0), i8* %0) #9, !dbg !10461
  br label %53, !dbg !10462

; <label>:41:                                     ; preds = %18
  %42 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10463, !tbaa !902
  %43 = getelementptr inbounds %struct.RedisModuleCtx, %struct.RedisModuleCtx* %4, i64 0, i32 1, !dbg !10464
  %44 = load %struct.RedisModule*, %struct.RedisModule** %43, align 8, !dbg !10464, !tbaa !1171
  %45 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %44, i64 0, i32 1, !dbg !10465
  %46 = load i8*, i8** %45, align 8, !dbg !10465, !tbaa !1173
  %47 = bitcast %struct.RedisModule* %44 to i8*, !dbg !10466
  %48 = call i32 @dictAdd(%struct.dict* %42, i8* %46, i8* %47) #9, !dbg !10467
  %49 = load %struct.RedisModule*, %struct.RedisModule** %43, align 8, !dbg !10468, !tbaa !1171
  %50 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %49, i64 0, i32 0, !dbg !10469
  store i8* %9, i8** %50, align 8, !dbg !10470, !tbaa !10471
  %51 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %49, i64 0, i32 1, !dbg !10472
  %52 = load i8*, i8** %51, align 8, !dbg !10472, !tbaa !1173
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0), i8* %52, i8* %0) #9, !dbg !10473
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %4) #10, !dbg !10474
  br label %53, !dbg !10475

; <label>:53:                                     ; preds = %41, %39, %16, %11
  %54 = phi i32 [ -1, %11 ], [ -1, %16 ], [ -1, %39 ], [ 0, %41 ], !dbg !10476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10477
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #5, !dbg !10478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10478
  ret i32 %54, !dbg !10478
}

; Function Attrs: noredzone nounwind
define dso_local void @moduleFreeModuleStructure(%struct.RedisModule*) local_unnamed_addr #0 !dbg !10444 {
  %2 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 4, !dbg !10480
  %3 = load %struct.list*, %struct.list** %2, align 8, !dbg !10480, !tbaa !1696
  tail call void @listRelease(%struct.list* %3) #9, !dbg !10481
  %4 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 7, !dbg !10482
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !10482, !tbaa !1708
  tail call void @listRelease(%struct.list* %5) #9, !dbg !10483
  %6 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %0, i64 0, i32 1, !dbg !10484
  %7 = load i8*, i8** %6, align 8, !dbg !10484, !tbaa !1173
  tail call void @sdsfree(i8* %7) #9, !dbg !10485
  %8 = bitcast %struct.RedisModule* %0 to i8*, !dbg !10486
  tail call void @zfree(i8* %8) #9, !dbg !10487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10488
  ret void, !dbg !10488
}

; Function Attrs: noredzone
declare dso_local void @listRelease(%struct.list*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleUnregisterCommands(%struct.RedisModule* readnone) local_unnamed_addr #0 !dbg !10489 {
  %2 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !10501, !tbaa !1652
  %3 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %2) #9, !dbg !10502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10504
  %4 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #9, !dbg !10505
  %5 = icmp eq %struct.dictEntry* %4, null, !dbg !10507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10504
  br i1 %5, label %37, label %6, !dbg !10504

; <label>:6:                                      ; preds = %1, %34
  %7 = phi %struct.dictEntry* [ %35, %34 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %7, i64 0, i32 1, i32 0, !dbg !10508
  %9 = bitcast i8** %8 to %struct.redisCommand**, !dbg !10508
  %10 = load %struct.redisCommand*, %struct.redisCommand** %9, align 8, !dbg !10508, !tbaa !1137
  %11 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %10, i64 0, i32 1, !dbg !10510
  %12 = load void (%struct.client*)*, void (%struct.client*)** %11, align 8, !dbg !10510, !tbaa !1629
  %13 = icmp eq void (%struct.client*)* %12, @RedisModuleCommandDispatcher, !dbg !10511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10512
  br i1 %13, label %14, label %34, !dbg !10512

; <label>:14:                                     ; preds = %6
  %15 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %10, i64 0, i32 5, !dbg !10513
  %16 = bitcast i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)** %15 to i8**, !dbg !10513
  %17 = load i8*, i8** %16, align 8, !dbg !10513, !tbaa !1353
  %18 = getelementptr inbounds i8, i8* %17, i64 16, !dbg !10515
  %19 = bitcast i8* %18 to %struct.redisCommand**, !dbg !10515
  %20 = load %struct.redisCommand*, %struct.redisCommand** %19, align 8, !dbg !10515, !tbaa !1623
  %21 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %20, i64 0, i32 0, !dbg !10516
  %22 = load i8*, i8** %21, align 8, !dbg !10516, !tbaa !1626
  %23 = bitcast i8* %17 to %struct.RedisModule**, !dbg !10518
  %24 = load %struct.RedisModule*, %struct.RedisModule** %23, align 8, !dbg !10518, !tbaa !1359
  %25 = icmp eq %struct.RedisModule* %24, %0, !dbg !10520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10521
  br i1 %25, label %26, label %33, !dbg !10521

; <label>:26:                                     ; preds = %14
  %27 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 8), align 8, !dbg !10522, !tbaa !1652
  %28 = tail call i32 @dictDelete(%struct.dict* %27, i8* %22) #9, !dbg !10524
  %29 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 9), align 8, !dbg !10525, !tbaa !1657
  %30 = tail call i32 @dictDelete(%struct.dict* %29, i8* %22) #9, !dbg !10526
  tail call void @sdsfree(i8* %22) #9, !dbg !10527
  %31 = bitcast i8* %18 to i8**, !dbg !10528
  %32 = load i8*, i8** %31, align 8, !dbg !10528, !tbaa !1623
  tail call void @zfree(i8* %32) #9, !dbg !10529
  tail call void @zfree(i8* %17) #9, !dbg !10530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10531
  br label %33, !dbg !10531

; <label>:33:                                     ; preds = %26, %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10532
  br label %34, !dbg !10532

; <label>:34:                                     ; preds = %33, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10504
  %35 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %3) #9, !dbg !10505
  %36 = icmp eq %struct.dictEntry* %35, null, !dbg !10507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10504
  br i1 %36, label %37, label %6, !dbg !10504, !llvm.loop !10533

; <label>:37:                                     ; preds = %34, %1
  tail call void @dictReleaseIterator(%struct.dictIterator* %3) #9, !dbg !10535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10536
  ret void, !dbg !10536
}

; Function Attrs: noredzone
declare dso_local i8* @dlopen(i8*, i32) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @dlerror() local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i8* @dlsym(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local i32 @dlclose(i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local i32 @moduleUnload(i8*) local_unnamed_addr #0 !dbg !10537 {
  %2 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10547, !tbaa !902
  %3 = tail call i8* @dictFetchValue(%struct.dict* %2, i8* %0) #9, !dbg !10548
  %4 = bitcast i8* %3 to %struct.RedisModule*, !dbg !10548
  %5 = icmp eq i8* %3, null, !dbg !10550
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10552
  br i1 %5, label %6, label %8, !dbg !10552

; <label>:6:                                      ; preds = %1
  %7 = tail call i32* @__errno() #9, !dbg !10553
  store i32 2, i32* %7, align 4, !dbg !10555, !tbaa !933
  br label %55, !dbg !10556

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 24, !dbg !10557
  %10 = bitcast i8* %9 to %struct.list**, !dbg !10557
  %11 = load %struct.list*, %struct.list** %10, align 8, !dbg !10557, !tbaa !1696
  %12 = getelementptr inbounds %struct.list, %struct.list* %11, i64 0, i32 5, !dbg !10557
  %13 = load i64, i64* %12, align 8, !dbg !10557, !tbaa !5607
  %14 = icmp eq i64 %13, 0, !dbg !10557
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10559
  br i1 %14, label %17, label %15, !dbg !10559

; <label>:15:                                     ; preds = %8
  %16 = tail call i32* @__errno() #9, !dbg !10560
  store i32 16, i32* %16, align 4, !dbg !10562, !tbaa !933
  br label %55, !dbg !10563

; <label>:17:                                     ; preds = %8
  %18 = getelementptr inbounds i8, i8* %3, i64 32, !dbg !10564
  %19 = bitcast i8* %18 to %struct.list**, !dbg !10564
  %20 = load %struct.list*, %struct.list** %19, align 8, !dbg !10564, !tbaa !1700
  %21 = getelementptr inbounds %struct.list, %struct.list* %20, i64 0, i32 5, !dbg !10564
  %22 = load i64, i64* %21, align 8, !dbg !10564, !tbaa !5607
  %23 = icmp eq i64 %22, 0, !dbg !10564
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10566
  br i1 %23, label %26, label %24, !dbg !10566

; <label>:24:                                     ; preds = %17
  %25 = tail call i32* @__errno() #9, !dbg !10567
  store i32 1, i32* %25, align 4, !dbg !10569, !tbaa !933
  br label %55, !dbg !10570

; <label>:26:                                     ; preds = %17
  tail call void @moduleUnregisterCommands(%struct.RedisModule* nonnull %4) #10, !dbg !10571
  %27 = tail call i32 @moduleUnregisterSharedAPI(%struct.RedisModule* nonnull %4) #10, !dbg !10572
  %28 = tail call i32 @moduleUnregisterUsedAPI(%struct.RedisModule* nonnull %4) #10, !dbg !10573
  %29 = tail call i32 @moduleUnregisterFilters(%struct.RedisModule* nonnull %4) #10, !dbg !10574
  tail call void @moduleUnsubscribeNotifications(%struct.RedisModule* nonnull %4) #10, !dbg !10575
  %30 = bitcast i8* %3 to i8**, !dbg !10576
  %31 = load i8*, i8** %30, align 8, !dbg !10576, !tbaa !10471
  %32 = tail call i32 @dlclose(i8* %31) #9, !dbg !10577
  %33 = icmp eq i32 %32, -1, !dbg !10578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10579
  br i1 %33, label %37, label %34, !dbg !10579

; <label>:34:                                     ; preds = %26
  %35 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !10580
  %36 = bitcast i8* %35 to i8**, !dbg !10580
  br label %44, !dbg !10579

; <label>:37:                                     ; preds = %26
  %38 = tail call i8* @dlerror() #9, !dbg !10581
  %39 = icmp eq i8* %38, null, !dbg !10583
  %40 = select i1 %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i64 0, i64 0), i8* %38, !dbg !10585
  %41 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !10586
  %42 = bitcast i8* %41 to i8**, !dbg !10586
  %43 = load i8*, i8** %42, align 8, !dbg !10586, !tbaa !1173
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.48, i64 0, i64 0), i8* %43, i8* %40) #9, !dbg !10587
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10588
  br label %44, !dbg !10588

; <label>:44:                                     ; preds = %34, %37
  %45 = phi i8** [ %36, %34 ], [ %42, %37 ], !dbg !10580
  %46 = load i8*, i8** %45, align 8, !dbg !10580, !tbaa !1173
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), i8* %46) #9, !dbg !10589
  %47 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10590, !tbaa !902
  %48 = load i8*, i8** %45, align 8, !dbg !10591, !tbaa !1173
  %49 = tail call i32 @dictDelete(%struct.dict* %47, i8* %48) #9, !dbg !10592
  store i8* null, i8** %45, align 8, !dbg !10593, !tbaa !1173
  %50 = load %struct.list*, %struct.list** %10, align 8, !dbg !10596, !tbaa !1696
  tail call void @listRelease(%struct.list* %50) #9, !dbg !10597
  %51 = getelementptr inbounds i8, i8* %3, i64 48, !dbg !10598
  %52 = bitcast i8* %51 to %struct.list**, !dbg !10598
  %53 = load %struct.list*, %struct.list** %52, align 8, !dbg !10598, !tbaa !1708
  tail call void @listRelease(%struct.list* %53) #9, !dbg !10599
  %54 = load i8*, i8** %45, align 8, !dbg !10600, !tbaa !1173
  tail call void @sdsfree(i8* %54) #9, !dbg !10601
  tail call void @zfree(i8* nonnull %3) #9, !dbg !10602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10603
  br label %55, !dbg !10604

; <label>:55:                                     ; preds = %44, %24, %15, %6
  %56 = phi i32 [ 1, %6 ], [ 1, %15 ], [ 1, %24 ], [ 0, %44 ], !dbg !10605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10606
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10607
  ret i32 %56, !dbg !10607
}

; Function Attrs: noredzone
declare dso_local i8* @dictFetchValue(%struct.dict*, i8*) local_unnamed_addr #2

; Function Attrs: noredzone nounwind
define dso_local void @moduleCommand(%struct.client*) local_unnamed_addr #0 !dbg !10608 {
  %2 = alloca [4 x i8*], align 16
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10633
  %4 = load %struct.redisObject**, %struct.redisObject*** %3, align 8, !dbg !10633, !tbaa !1368
  %5 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 1, !dbg !10634
  %6 = load %struct.redisObject*, %struct.redisObject** %5, align 8, !dbg !10634, !tbaa !902
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !10635
  %8 = load i8*, i8** %7, align 8, !dbg !10635, !tbaa !1046
  %9 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !10637
  %10 = load i32, i32* %9, align 8, !dbg !10637, !tbaa !1370
  %11 = icmp eq i32 %10, 2, !dbg !10638
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10639
  br i1 %11, label %12, label %18, !dbg !10639

; <label>:12:                                     ; preds = %1
  %13 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !10640
  %14 = icmp eq i32 %13, 0, !dbg !10640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10641
  br i1 %14, label %15, label %18, !dbg !10641

; <label>:15:                                     ; preds = %12
  %16 = bitcast [4 x i8*]* %2 to i8*, !dbg !10642
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #5, !dbg !10642
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* align 16 bitcast ([4 x i8*]* @moduleCommand.help to i8*), i64 32, i1 false), !dbg !10643
  %17 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 0, !dbg !10644
  call void @addReplyHelp(%struct.client* nonnull %0, i8** nonnull %17) #9, !dbg !10645
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #5, !dbg !10646
  br label %119, !dbg !10647

; <label>:18:                                     ; preds = %12, %1
  %19 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !10648
  %20 = icmp eq i32 %19, 0, !dbg !10648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10649
  br i1 %20, label %21, label %42, !dbg !10649

; <label>:21:                                     ; preds = %18
  %22 = icmp sgt i32 %10, 2, !dbg !10650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10651
  br i1 %22, label %23, label %42, !dbg !10651

; <label>:23:                                     ; preds = %21
  %24 = icmp eq i32 %10, 3, !dbg !10654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10656
  br i1 %24, label %29, label %25, !dbg !10656

; <label>:25:                                     ; preds = %23
  %26 = add nsw i32 %10, -3, !dbg !10657
  %27 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 3, !dbg !10659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10660
  %28 = bitcast %struct.redisObject** %27 to i8**, !dbg !10660
  br label %29, !dbg !10660

; <label>:29:                                     ; preds = %23, %25
  %30 = phi i32 [ %26, %25 ], [ 0, %23 ], !dbg !10661
  %31 = phi i8** [ %28, %25 ], [ null, %23 ]
  %32 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 2, !dbg !10662
  %33 = load %struct.redisObject*, %struct.redisObject** %32, align 8, !dbg !10662, !tbaa !902
  %34 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %33, i64 0, i32 2, !dbg !10664
  %35 = load i8*, i8** %34, align 8, !dbg !10664, !tbaa !1046
  %36 = tail call i32 @moduleLoad(i8* %35, i8** %31, i32 %30) #10, !dbg !10665
  %37 = icmp eq i32 %36, 0, !dbg !10666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10667
  br i1 %37, label %38, label %40, !dbg !10667

; <label>:38:                                     ; preds = %29
  %39 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10668, !tbaa !10669
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %39) #9, !dbg !10670
  br label %41, !dbg !10670

; <label>:40:                                     ; preds = %29
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.55, i64 0, i64 0)) #9, !dbg !10671
  br label %41

; <label>:41:                                     ; preds = %40, %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %119, !dbg !10672

; <label>:42:                                     ; preds = %18, %21
  %43 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !10673
  %44 = icmp eq i32 %43, 0, !dbg !10673
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10674
  br i1 %44, label %45, label %64, !dbg !10674

; <label>:45:                                     ; preds = %42
  %46 = icmp eq i32 %10, 3, !dbg !10675
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10676
  br i1 %46, label %47, label %64, !dbg !10676

; <label>:47:                                     ; preds = %45
  %48 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %4, i64 2, !dbg !10677
  %49 = load %struct.redisObject*, %struct.redisObject** %48, align 8, !dbg !10677, !tbaa !902
  %50 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %49, i64 0, i32 2, !dbg !10678
  %51 = load i8*, i8** %50, align 8, !dbg !10678, !tbaa !1046
  %52 = tail call i32 @moduleUnload(i8* %51) #10, !dbg !10679
  %53 = icmp eq i32 %52, 0, !dbg !10680
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10681
  br i1 %53, label %54, label %56, !dbg !10681

; <label>:54:                                     ; preds = %47
  %55 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10682, !tbaa !10669
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %55) #9, !dbg !10683
  br label %119, !dbg !10683

; <label>:56:                                     ; preds = %47
  %57 = tail call i32* @__errno() #9, !dbg !10684
  %58 = load i32, i32* %57, align 4, !dbg !10684, !tbaa !933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10685
  switch i32 %58, label %61 [
    i32 2, label %62
    i32 16, label %59
    i32 1, label %60
  ], !dbg !10685

; <label>:59:                                     ; preds = %56
  br label %62, !dbg !10686

; <label>:60:                                     ; preds = %56
  br label %62, !dbg !10688

; <label>:61:                                     ; preds = %56
  br label %62, !dbg !10689

; <label>:62:                                     ; preds = %56, %61, %60, %59
  %63 = phi i8* [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0), %61 ], [ getelementptr inbounds ([86 x i8], [86 x i8]* @.str.59, i64 0, i64 0), %60 ], [ getelementptr inbounds ([68 x i8], [68 x i8]* @.str.58, i64 0, i64 0), %59 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.57, i64 0, i64 0), %56 ], !dbg !10690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10690
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), i8* nonnull %63) #9, !dbg !10692
  br label %119

; <label>:64:                                     ; preds = %42, %45
  %65 = tail call i32 @strcasecmp(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0)) #11, !dbg !10693
  %66 = icmp eq i32 %65, 0, !dbg !10693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10694
  br i1 %66, label %67, label %118, !dbg !10694

; <label>:67:                                     ; preds = %64
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10695
  br i1 %11, label %68, label %118, !dbg !10695

; <label>:68:                                     ; preds = %67
  %69 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10696, !tbaa !902
  %70 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %69) #9, !dbg !10697
  %71 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10699, !tbaa !902
  %72 = getelementptr inbounds %struct.dict, %struct.dict* %71, i64 0, i32 2, i64 0, i32 3, !dbg !10699
  %73 = load i64, i64* %72, align 8, !dbg !10699, !tbaa !7744
  %74 = getelementptr inbounds %struct.dict, %struct.dict* %71, i64 0, i32 2, i64 1, i32 3, !dbg !10699
  %75 = load i64, i64* %74, align 8, !dbg !10699, !tbaa !7744
  %76 = add i64 %75, %73, !dbg !10699
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %76) #9, !dbg !10700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10701
  %77 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %70) #9, !dbg !10702
  %78 = icmp eq %struct.dictEntry* %77, null, !dbg !10704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10701
  br i1 %78, label %117, label %79, !dbg !10701

; <label>:79:                                     ; preds = %68, %110
  %80 = phi %struct.dictEntry* [ %115, %110 ], [ %77, %68 ]
  %81 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %80, i64 0, i32 0, !dbg !10705
  %82 = load i8*, i8** %81, align 8, !dbg !10705, !tbaa !9022
  %83 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %80, i64 0, i32 1, i32 0, !dbg !10707
  %84 = bitcast i8** %83 to %struct.RedisModule**, !dbg !10707
  %85 = load %struct.RedisModule*, %struct.RedisModule** %84, align 8, !dbg !10707, !tbaa !1137
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 4) #9, !dbg !10709
  tail call void @addReplyBulkCString(%struct.client* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0)) #9, !dbg !10710
  %86 = getelementptr inbounds i8, i8* %82, i64 -1, !dbg !10713
  %87 = load i8, i8* %86, align 1, !dbg !10713, !tbaa !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10715
  %88 = trunc i8 %87 to i3, !dbg !10715
  switch i3 %88, label %110 [
    i3 0, label %89
    i3 1, label %92
    i3 2, label %96
    i3 3, label %101
    i3 -4, label %106
  ], !dbg !10715

; <label>:89:                                     ; preds = %79
  %90 = lshr i8 %87, 3, !dbg !10716
  %91 = zext i8 %90 to i64, !dbg !10716
  br label %110, !dbg !10717

; <label>:92:                                     ; preds = %79
  %93 = getelementptr inbounds i8, i8* %82, i64 -3, !dbg !10718
  %94 = load i8, i8* %93, align 1, !dbg !10719, !tbaa !1137
  %95 = zext i8 %94 to i64, !dbg !10718
  br label %110, !dbg !10720

; <label>:96:                                     ; preds = %79
  %97 = getelementptr inbounds i8, i8* %82, i64 -5, !dbg !10721
  %98 = bitcast i8* %97 to i16*, !dbg !10722
  %99 = load i16, i16* %98, align 1, !dbg !10722, !tbaa !2186
  %100 = zext i16 %99 to i64, !dbg !10721
  br label %110, !dbg !10723

; <label>:101:                                    ; preds = %79
  %102 = getelementptr inbounds i8, i8* %82, i64 -9, !dbg !10724
  %103 = bitcast i8* %102 to i32*, !dbg !10725
  %104 = load i32, i32* %103, align 1, !dbg !10725, !tbaa !933
  %105 = zext i32 %104 to i64, !dbg !10724
  br label %110, !dbg !10726

; <label>:106:                                    ; preds = %79
  %107 = getelementptr inbounds i8, i8* %82, i64 -17, !dbg !10727
  %108 = bitcast i8* %107 to i64*, !dbg !10728
  %109 = load i64, i64* %108, align 1, !dbg !10728, !tbaa !2163
  br label %110, !dbg !10729

; <label>:110:                                    ; preds = %79, %89, %92, %96, %101, %106
  %111 = phi i64 [ %109, %106 ], [ %105, %101 ], [ %100, %96 ], [ %95, %92 ], [ %91, %89 ], [ 0, %79 ], !dbg !10730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10732
  tail call void @addReplyBulkCBuffer(%struct.client* %0, i8* %82, i64 %111) #9, !dbg !10733
  tail call void @addReplyBulkCString(%struct.client* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0)) #9, !dbg !10734
  %112 = getelementptr inbounds %struct.RedisModule, %struct.RedisModule* %85, i64 0, i32 2, !dbg !10735
  %113 = load i32, i32* %112, align 8, !dbg !10735, !tbaa !1689
  %114 = sext i32 %113 to i64, !dbg !10736
  tail call void @addReplyLongLong(%struct.client* %0, i64 %114) #9, !dbg !10737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10701
  %115 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %70) #9, !dbg !10702
  %116 = icmp eq %struct.dictEntry* %115, null, !dbg !10704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10701
  br i1 %116, label %117, label %79, !dbg !10701, !llvm.loop !10738

; <label>:117:                                    ; preds = %110, %68
  tail call void @dictReleaseIterator(%struct.dictIterator* %70) #9, !dbg !10740
  br label %119

; <label>:118:                                    ; preds = %64, %67
  tail call void @addReplySubcommandSyntaxError(%struct.client* nonnull %0) #9, !dbg !10741
  br label %120, !dbg !10743

; <label>:119:                                    ; preds = %41, %54, %62, %117, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %120, !dbg !10744

; <label>:120:                                    ; preds = %119, %118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10744
  ret void, !dbg !10744
}

; Function Attrs: noredzone
declare dso_local void @addReplyHelp(%struct.client*, i8**) local_unnamed_addr #2

; Function Attrs: noredzone
declare dso_local void @addReplySubcommandSyntaxError(%struct.client*) local_unnamed_addr #2

; Function Attrs: norecurse noredzone nounwind
define dso_local i64 @moduleCount() local_unnamed_addr #8 !dbg !10746 {
  %1 = load %struct.dict*, %struct.dict** @modules, align 8, !dbg !10747, !tbaa !902
  %2 = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 0, i32 3, !dbg !10747
  %3 = load i64, i64* %2, align 8, !dbg !10747, !tbaa !7744
  %4 = getelementptr inbounds %struct.dict, %struct.dict* %1, i64 0, i32 2, i64 1, i32 3, !dbg !10747
  %5 = load i64, i64* %4, align 8, !dbg !10747, !tbaa !7744
  %6 = add i64 %5, %3, !dbg !10747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10748
  ret i64 %6, !dbg !10748
}

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noredzone noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin noredzone nounwind }
attributes #10 = { nobuiltin noredzone }
attributes #11 = { nobuiltin noredzone nounwind readonly }
attributes #12 = { nobuiltin noredzone noreturn nounwind }

!llvm.module.flags = !{!832, !833, !834}
!llvm.ident = !{!835}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "modules", scope: !2, file: !3, line: 68, type: !43, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !731)
!3 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/module.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{}
!5 = !{!6, !7, !8, !9, !11, !94, !143, !261, !262, !173, !346, !696, !699, !708, !717, !724}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !13, line: 1306, baseType: !14)
!13 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!14 = !DISubroutineType(types: !15)
!15 = !{!16, !18, !165, !17, !16}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !13, line: 1307, size: 640, elements: !20)
!20 = !{!21, !22, !252, !253, !254, !255, !256, !257, !258, !259, !260}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !19, file: !13, line: 1308, baseType: !9, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !19, file: !13, line: 1309, baseType: !23, size: 64, offset: 64)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !13, line: 1305, baseType: !25)
!25 = !DISubroutineType(types: !26)
!26 = !{null, !27}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !13, line: 780, baseType: !29)
!29 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !13, line: 723, size: 135360, elements: !30)
!30 = !{!31, !36, !37, !142, !153, !156, !161, !162, !163, !164, !166, !167, !168, !169, !170, !171, !172, !174, !175, !178, !179, !180, !181, !182, !183, !184, !185, !190, !191, !192, !193, !194, !195, !196, !197, !201, !202, !206, !207, !223, !224, !241, !242, !243, !244, !245, !246, !247, !248}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !29, file: !13, line: 724, baseType: !32, size: 64)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !33, line: 60, baseType: !34)
!33 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !35, line: 105, baseType: !7)
!35 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!36 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !29, file: !13, line: 725, baseType: !17, size: 32, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !29, file: !13, line: 726, baseType: !38, size: 64, offset: 128)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !13, line: 656, baseType: !40)
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !13, line: 647, size: 512, elements: !41)
!41 = !{!42, !106, !107, !108, !109, !110, !111, !113}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !40, file: !13, line: 648, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !45, line: 82, baseType: !46)
!45 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!46 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !45, line: 76, size: 768, elements: !47)
!47 = !{!48, !73, !74, !104, !105}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !46, file: !45, line: 77, baseType: !49, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !45, line: 65, baseType: !51)
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !45, line: 58, size: 384, elements: !52)
!52 = !{!53, !59, !63, !64, !68, !72}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !51, file: !45, line: 59, baseType: !54, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DISubroutineType(types: !56)
!56 = !{!32, !57}
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !51, file: !45, line: 60, baseType: !60, size: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DISubroutineType(types: !62)
!62 = !{!6, !6, !57}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !51, file: !45, line: 61, baseType: !60, size: 64, offset: 128)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !51, file: !45, line: 62, baseType: !65, size: 64, offset: 192)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DISubroutineType(types: !67)
!67 = !{!17, !6, !57, !57}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !51, file: !45, line: 63, baseType: !69, size: 64, offset: 256)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DISubroutineType(types: !71)
!71 = !{null, !6, !6}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !51, file: !45, line: 64, baseType: !69, size: 64, offset: 320)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !46, file: !45, line: 78, baseType: !6, size: 64, offset: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !46, file: !45, line: 79, baseType: !75, size: 512, offset: 128)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !76, size: 512, elements: !102)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !45, line: 74, baseType: !77)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !45, line: 69, size: 256, elements: !78)
!78 = !{!79, !99, !100, !101}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !77, file: !45, line: 70, baseType: !80, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !45, line: 56, baseType: !83)
!83 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !45, line: 47, size: 192, elements: !84)
!84 = !{!85, !86, !97}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !83, file: !45, line: 48, baseType: !6, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !83, file: !45, line: 54, baseType: !87, size: 64, offset: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !83, file: !45, line: 49, size: 64, elements: !88)
!88 = !{!89, !90, !91, !95}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !87, file: !45, line: 50, baseType: !6, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !87, file: !45, line: 51, baseType: !32, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !87, file: !45, line: 52, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !33, line: 56, baseType: !93)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !35, line: 103, baseType: !94)
!94 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !87, file: !45, line: 53, baseType: !96, size: 64)
!96 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !83, file: !45, line: 55, baseType: !98, size: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !77, file: !45, line: 71, baseType: !7, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !77, file: !45, line: 72, baseType: !7, size: 64, offset: 128)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !77, file: !45, line: 73, baseType: !7, size: 64, offset: 192)
!102 = !{!103}
!103 = !DISubrange(count: 2)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !46, file: !45, line: 80, baseType: !94, size: 64, offset: 640)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !46, file: !45, line: 81, baseType: !7, size: 64, offset: 704)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !40, file: !13, line: 649, baseType: !43, size: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !40, file: !13, line: 650, baseType: !43, size: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !40, file: !13, line: 651, baseType: !43, size: 64, offset: 192)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !40, file: !13, line: 652, baseType: !43, size: 64, offset: 256)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !40, file: !13, line: 653, baseType: !17, size: 32, offset: 320)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !40, file: !13, line: 654, baseType: !112, size: 64, offset: 384)
!112 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !40, file: !13, line: 655, baseType: !114, size: 64, offset: 448)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !116, line: 54, baseType: !117)
!116 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !116, line: 47, size: 384, elements: !118)
!118 = !{!119, !128, !129, !133, !137, !141}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !117, file: !116, line: 48, baseType: !120, size: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !116, line: 40, baseType: !122)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !116, line: 36, size: 192, elements: !123)
!123 = !{!124, !126, !127}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !122, file: !116, line: 37, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !122, file: !116, line: 38, baseType: !125, size: 64, offset: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !122, file: !116, line: 39, baseType: !6, size: 64, offset: 128)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !117, file: !116, line: 49, baseType: !120, size: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !117, file: !116, line: 50, baseType: !130, size: 64, offset: 128)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = !DISubroutineType(types: !132)
!132 = !{!6, !6}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !117, file: !116, line: 51, baseType: !134, size: 64, offset: 192)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{null, !6}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !117, file: !116, line: 52, baseType: !138, size: 64, offset: 256)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{!17, !6, !6}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !117, file: !116, line: 53, baseType: !7, size: 64, offset: 320)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !29, file: !13, line: 727, baseType: !143, size: 64, offset: 192)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !13, line: 622, baseType: !145)
!145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !13, line: 614, size: 128, elements: !146)
!146 = !{!147, !149, !150, !151, !152}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !145, file: !13, line: 615, baseType: !148, size: 4, flags: DIFlagBitField, extraData: i64 0)
!148 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !145, file: !13, line: 616, baseType: !148, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !145, file: !13, line: 617, baseType: !148, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !145, file: !13, line: 620, baseType: !17, size: 32, offset: 32)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !145, file: !13, line: 621, baseType: !6, size: 64, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !29, file: !13, line: 728, baseType: !154, size: 64, offset: 256)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !155, line: 43, baseType: !9)
!155 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!156 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !29, file: !13, line: 729, baseType: !157, size: 64, offset: 320)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !158, line: 40, baseType: !159)
!158 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !160, line: 129, baseType: !7)
!160 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!161 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !29, file: !13, line: 730, baseType: !154, size: 64, offset: 384)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !29, file: !13, line: 734, baseType: !157, size: 64, offset: 448)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !29, file: !13, line: 735, baseType: !17, size: 32, offset: 512)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !29, file: !13, line: 736, baseType: !165, size: 64, offset: 576)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !29, file: !13, line: 737, baseType: !18, size: 64, offset: 640)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !29, file: !13, line: 737, baseType: !18, size: 64, offset: 704)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !29, file: !13, line: 738, baseType: !17, size: 32, offset: 768)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !29, file: !13, line: 739, baseType: !17, size: 32, offset: 800)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !29, file: !13, line: 740, baseType: !94, size: 64, offset: 832)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !29, file: !13, line: 741, baseType: !114, size: 64, offset: 896)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !29, file: !13, line: 742, baseType: !173, size: 64, offset: 960)
!173 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !29, file: !13, line: 743, baseType: !157, size: 64, offset: 1024)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !29, file: !13, line: 745, baseType: !176, size: 64, offset: 1088)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !177, line: 34, baseType: !94)
!177 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!178 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !29, file: !13, line: 746, baseType: !176, size: 64, offset: 1152)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !29, file: !13, line: 747, baseType: !176, size: 64, offset: 1216)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !29, file: !13, line: 748, baseType: !17, size: 32, offset: 1280)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !29, file: !13, line: 749, baseType: !17, size: 32, offset: 1312)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !29, file: !13, line: 750, baseType: !17, size: 32, offset: 1344)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !29, file: !13, line: 751, baseType: !17, size: 32, offset: 1376)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !29, file: !13, line: 752, baseType: !17, size: 32, offset: 1408)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !29, file: !13, line: 753, baseType: !186, size: 64, offset: 1472)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !187, line: 173, baseType: !188)
!187 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !160, line: 100, baseType: !189)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !160, line: 44, baseType: !94)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !29, file: !13, line: 754, baseType: !186, size: 64, offset: 1536)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !29, file: !13, line: 755, baseType: !154, size: 64, offset: 1600)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !29, file: !13, line: 756, baseType: !112, size: 64, offset: 1664)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !29, file: !13, line: 757, baseType: !112, size: 64, offset: 1728)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !29, file: !13, line: 758, baseType: !112, size: 64, offset: 1792)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !29, file: !13, line: 759, baseType: !112, size: 64, offset: 1856)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !29, file: !13, line: 760, baseType: !112, size: 64, offset: 1920)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !29, file: !13, line: 763, baseType: !198, size: 328, offset: 1984)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 328, elements: !199)
!199 = !{!200}
!200 = !DISubrange(count: 41)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !29, file: !13, line: 764, baseType: !17, size: 32, offset: 2336)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !29, file: !13, line: 765, baseType: !203, size: 368, offset: 2368)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 368, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 46)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !29, file: !13, line: 766, baseType: !17, size: 32, offset: 2752)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !29, file: !13, line: 767, baseType: !208, size: 256, offset: 2816)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !13, line: 673, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !13, line: 665, size: 256, elements: !210)
!210 = !{!211, !219, !220, !221, !222}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !209, file: !13, line: 666, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !13, line: 663, baseType: !214)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !13, line: 659, size: 192, elements: !215)
!215 = !{!216, !217, !218}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !214, file: !13, line: 660, baseType: !165, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !214, file: !13, line: 661, baseType: !17, size: 32, offset: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !214, file: !13, line: 662, baseType: !18, size: 64, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !209, file: !13, line: 667, baseType: !17, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !209, file: !13, line: 668, baseType: !17, size: 32, offset: 96)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !209, file: !13, line: 671, baseType: !17, size: 32, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !209, file: !13, line: 672, baseType: !176, size: 64, offset: 192)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !29, file: !13, line: 768, baseType: !17, size: 32, offset: 3072)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !29, file: !13, line: 769, baseType: !225, size: 704, offset: 3136)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !13, line: 703, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !13, line: 677, size: 704, elements: !227)
!227 = !{!228, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !226, file: !13, line: 679, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !13, line: 52, baseType: !112)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !226, file: !13, line: 683, baseType: !43, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !226, file: !13, line: 685, baseType: !143, size: 64, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !226, file: !13, line: 689, baseType: !157, size: 64, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !226, file: !13, line: 690, baseType: !143, size: 64, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !226, file: !13, line: 691, baseType: !143, size: 64, offset: 320)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !226, file: !13, line: 692, baseType: !229, size: 64, offset: 384)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !226, file: !13, line: 692, baseType: !229, size: 64, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !226, file: !13, line: 693, baseType: !17, size: 32, offset: 512)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !226, file: !13, line: 696, baseType: !17, size: 32, offset: 544)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !226, file: !13, line: 697, baseType: !112, size: 64, offset: 576)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !226, file: !13, line: 700, baseType: !6, size: 64, offset: 640)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !29, file: !13, line: 770, baseType: !112, size: 64, offset: 3840)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !29, file: !13, line: 771, baseType: !114, size: 64, offset: 3904)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !29, file: !13, line: 772, baseType: !43, size: 64, offset: 3968)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !29, file: !13, line: 773, baseType: !114, size: 64, offset: 4032)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !29, file: !13, line: 774, baseType: !154, size: 64, offset: 4096)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !29, file: !13, line: 775, baseType: !120, size: 64, offset: 4160)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !29, file: !13, line: 778, baseType: !17, size: 32, offset: 4224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !29, file: !13, line: 779, baseType: !249, size: 131072, offset: 4256)
!249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 131072, elements: !250)
!250 = !{!251}
!251 = !DISubrange(count: 16384)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !19, file: !13, line: 1310, baseType: !17, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !19, file: !13, line: 1311, baseType: !9, size: 64, offset: 192)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !19, file: !13, line: 1312, baseType: !17, size: 32, offset: 256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !19, file: !13, line: 1315, baseType: !11, size: 64, offset: 320)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !19, file: !13, line: 1317, baseType: !17, size: 32, offset: 384)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !19, file: !13, line: 1318, baseType: !17, size: 32, offset: 416)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !19, file: !13, line: 1319, baseType: !17, size: 32, offset: 448)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !19, file: !13, line: 1320, baseType: !112, size: 64, offset: 512)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !19, file: !13, line: 1320, baseType: !112, size: 64, offset: 576)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "typemethods", scope: !264, file: !3, line: 3072, size: 640, elements: !682)
!264 = distinct !DISubprogram(name: "RM_CreateDataType", scope: !3, file: !3, line: 3064, type: !265, isLocal: false, isDefinition: true, scopeLine: 3064, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !673)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !584, !523, !17, !6}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleType", file: !13, line: 530, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleType", file: !13, line: 517, size: 768, elements: !270)
!270 = !{!271, !272, !285, !628, !633, !638, !643, !656, !658, !663, !668, !669}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !269, file: !13, line: 518, baseType: !32, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !269, file: !13, line: 519, baseType: !273, size: 64, offset: 64)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModule", file: !3, line: 45, size: 512, elements: !275)
!275 = !{!276, !277, !278, !279, !280, !281, !282, !283, !284}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !274, file: !3, line: 46, baseType: !6, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !274, file: !3, line: 47, baseType: !9, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !274, file: !3, line: 48, baseType: !17, size: 32, offset: 128)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "apiver", scope: !274, file: !3, line: 49, baseType: !17, size: 32, offset: 160)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !274, file: !3, line: 50, baseType: !114, size: 64, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "usedby", scope: !274, file: !3, line: 51, baseType: !114, size: 64, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "using", scope: !274, file: !3, line: 52, baseType: !114, size: 64, offset: 320)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !274, file: !3, line: 53, baseType: !114, size: 64, offset: 384)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "in_call", scope: !274, file: !3, line: 54, baseType: !17, size: 32, offset: 448)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_load", scope: !269, file: !13, line: 520, baseType: !286, size: 64, offset: 128)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeLoadFunc", file: !13, line: 506, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!6, !290, !17}
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleIO", file: !13, line: 555, size: 384, elements: !292)
!292 = !{!293, !294, !561, !562, !563, !564, !626}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !291, file: !13, line: 556, baseType: !157, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "rio", scope: !291, file: !13, line: 557, baseType: !295, size: 64, offset: 64)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio", file: !297, line: 87, baseType: !298)
!297 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rio.h", directory: "/root/.unikraft/apps/redis/build")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rio", file: !297, line: 39, size: 832, elements: !299)
!299 = !{!300, !307, !311, !315, !319, !323, !324, !325, !326}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !298, file: !297, line: 43, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{!304, !306, !6, !304}
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !305, line: 58, baseType: !7)
!305 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !298, file: !297, line: 44, baseType: !308, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{!304, !306, !57, !304}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !298, file: !297, line: 45, baseType: !312, size: 64, offset: 128)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!186, !306}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !298, file: !297, line: 46, baseType: !316, size: 64, offset: 192)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!17, !306}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "update_cksum", scope: !298, file: !297, line: 52, baseType: !320, size: 64, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{null, !306, !57, !304}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !298, file: !297, line: 55, baseType: !32, size: 64, offset: 320)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "processed_bytes", scope: !298, file: !297, line: 58, baseType: !304, size: 64, offset: 384)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "max_processing_chunk", scope: !298, file: !297, line: 61, baseType: !304, size: 64, offset: 448)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !298, file: !297, line: 84, baseType: !327, size: 320, offset: 512)
!327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !298, file: !297, line: 64, size: 320, elements: !328)
!328 = !{!329, !334, !553}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !327, file: !297, line: 69, baseType: !330, size: 128)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !297, line: 66, size: 128, elements: !331)
!331 = !{!332, !333}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !330, file: !297, line: 67, baseType: !154, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !330, file: !297, line: 68, baseType: !186, size: 64, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !327, file: !297, line: 75, baseType: !335, size: 192)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !297, line: 71, size: 192, elements: !336)
!336 = !{!337, !551, !552}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !335, file: !297, line: 72, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !340, line: 66, baseType: !341)
!340 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !342, line: 287, baseType: !343)
!342 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !342, line: 181, size: 1408, elements: !344)
!344 = !{!345, !348, !349, !350, !352, !353, !358, !359, !360, !519, !525, !530, !534, !535, !536, !537, !539, !541, !542, !543, !544, !545, !549, !550}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !343, file: !342, line: 182, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !343, file: !342, line: 183, baseType: !17, size: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !343, file: !342, line: 184, baseType: !17, size: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !343, file: !342, line: 185, baseType: !351, size: 16, offset: 128)
!351 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !343, file: !342, line: 186, baseType: !351, size: 16, offset: 144)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !343, file: !342, line: 187, baseType: !354, size: 128, offset: 192)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !342, line: 117, size: 128, elements: !355)
!355 = !{!356, !357}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !354, file: !342, line: 118, baseType: !346, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !354, file: !342, line: 119, baseType: !17, size: 32, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !343, file: !342, line: 188, baseType: !17, size: 32, offset: 320)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !343, file: !342, line: 195, baseType: !6, size: 64, offset: 384)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !343, file: !342, line: 197, baseType: !361, size: 64, offset: 448)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!364, !365, !6, !9, !17}
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !160, line: 145, baseType: !94)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !342, line: 569, size: 14912, elements: !367)
!367 = !{!368, !369, !371, !372, !373, !374, !378, !379, !382, !383, !387, !401, !402, !403, !405, !406, !407, !483, !504, !505, !510, !517}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !366, file: !342, line: 571, baseType: !17, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !366, file: !342, line: 576, baseType: !370, size: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !366, file: !342, line: 576, baseType: !370, size: 64, offset: 128)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !366, file: !342, line: 576, baseType: !370, size: 64, offset: 192)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !366, file: !342, line: 578, baseType: !17, size: 32, offset: 256)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !366, file: !342, line: 579, baseType: !375, size: 200, offset: 288)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 200, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 25)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !366, file: !342, line: 582, baseType: !17, size: 32, offset: 512)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !366, file: !342, line: 583, baseType: !380, size: 64, offset: 576)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !342, line: 40, flags: DIFlagFwdDecl)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !366, file: !342, line: 585, baseType: !17, size: 32, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !366, file: !342, line: 587, baseType: !384, size: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DISubroutineType(types: !386)
!386 = !{null, !365}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !366, file: !342, line: 590, baseType: !388, size: 64, offset: 768)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !342, line: 47, size: 256, elements: !390)
!390 = !{!391, !392, !393, !394, !395, !396}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !389, file: !342, line: 49, baseType: !388, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 96)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !389, file: !342, line: 50, baseType: !17, size: 32, offset: 160)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !389, file: !342, line: 51, baseType: !397, size: 32, offset: 192)
!397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, size: 32, elements: !399)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !342, line: 25, baseType: !148)
!399 = !{!400}
!400 = !DISubrange(count: 1)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !366, file: !342, line: 591, baseType: !17, size: 32, offset: 832)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !366, file: !342, line: 592, baseType: !388, size: 64, offset: 896)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !366, file: !342, line: 593, baseType: !404, size: 64, offset: 960)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !366, file: !342, line: 596, baseType: !17, size: 32, offset: 1024)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !366, file: !342, line: 597, baseType: !9, size: 64, offset: 1088)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !366, file: !342, line: 632, baseType: !408, size: 2880, offset: 1152)
!408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !366, file: !342, line: 599, size: 2880, elements: !409)
!409 = !{!410, !474}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !408, file: !342, line: 622, baseType: !411, size: 1728)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !408, file: !342, line: 601, size: 1728, elements: !412)
!412 = !{!413, !414, !415, !419, !431, !432, !433, !443, !457, !458, !459, !463, !467, !468, !469, !470, !471, !472, !473}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !411, file: !342, line: 603, baseType: !148, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !411, file: !342, line: 604, baseType: !9, size: 64, offset: 64)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !411, file: !342, line: 605, baseType: !416, size: 208, offset: 128)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 208, elements: !417)
!417 = !{!418}
!418 = !DISubrange(count: 26)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !411, file: !342, line: 606, baseType: !420, size: 288, offset: 352)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !342, line: 55, size: 288, elements: !421)
!421 = !{!422, !423, !424, !425, !426, !427, !428, !429, !430}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !420, file: !342, line: 57, baseType: !17, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !420, file: !342, line: 58, baseType: !17, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !420, file: !342, line: 59, baseType: !17, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !420, file: !342, line: 60, baseType: !17, size: 32, offset: 96)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !420, file: !342, line: 61, baseType: !17, size: 32, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !420, file: !342, line: 62, baseType: !17, size: 32, offset: 160)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !420, file: !342, line: 63, baseType: !17, size: 32, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !420, file: !342, line: 64, baseType: !17, size: 32, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !420, file: !342, line: 65, baseType: !17, size: 32, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !411, file: !342, line: 607, baseType: !17, size: 32, offset: 640)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !411, file: !342, line: 608, baseType: !173, size: 64, offset: 704)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !411, file: !342, line: 609, baseType: !434, size: 112, offset: 768)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !342, line: 319, size: 112, elements: !435)
!435 = !{!436, !441, !442}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !434, file: !342, line: 320, baseType: !437, size: 48)
!437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 48, elements: !439)
!438 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!439 = !{!440}
!440 = !DISubrange(count: 3)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !434, file: !342, line: 321, baseType: !437, size: 48, offset: 48)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !434, file: !342, line: 322, baseType: !438, size: 16, offset: 96)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !411, file: !342, line: 610, baseType: !444, size: 64, offset: 896)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !160, line: 171, baseType: !445)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 163, size: 64, elements: !446)
!446 = !{!447, !448}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !445, file: !160, line: 165, baseType: !17, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !445, file: !160, line: 170, baseType: !449, size: 32, offset: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !445, file: !160, line: 166, size: 32, elements: !450)
!450 = !{!451, !453}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !449, file: !160, line: 168, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !305, line: 124, baseType: !148)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !449, file: !160, line: 169, baseType: !454, size: 32)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 32, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 4)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !411, file: !342, line: 611, baseType: !444, size: 64, offset: 960)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !411, file: !342, line: 612, baseType: !444, size: 64, offset: 1024)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !411, file: !342, line: 613, baseType: !460, size: 64, offset: 1088)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !461)
!461 = !{!462}
!462 = !DISubrange(count: 8)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !411, file: !342, line: 614, baseType: !464, size: 192, offset: 1152)
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 192, elements: !465)
!465 = !{!466}
!466 = !DISubrange(count: 24)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !411, file: !342, line: 615, baseType: !17, size: 32, offset: 1344)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !411, file: !342, line: 616, baseType: !444, size: 64, offset: 1376)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !411, file: !342, line: 617, baseType: !444, size: 64, offset: 1440)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !411, file: !342, line: 618, baseType: !444, size: 64, offset: 1504)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !411, file: !342, line: 619, baseType: !444, size: 64, offset: 1568)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !411, file: !342, line: 620, baseType: !444, size: 64, offset: 1632)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !411, file: !342, line: 621, baseType: !17, size: 32, offset: 1696)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !408, file: !342, line: 631, baseType: !475, size: 2880)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !408, file: !342, line: 626, size: 2880, elements: !476)
!476 = !{!477, !481}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !475, file: !342, line: 629, baseType: !478, size: 1920)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 1920, elements: !479)
!479 = !{!480}
!480 = !DISubrange(count: 30)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !475, file: !342, line: 630, baseType: !482, size: 960, offset: 1920)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 960, elements: !479)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !366, file: !342, line: 636, baseType: !484, size: 64, offset: 4032)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !342, line: 93, size: 6336, elements: !486)
!486 = !{!487, !488, !489, !496}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !485, file: !342, line: 94, baseType: !484, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !485, file: !342, line: 95, baseType: !17, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !485, file: !342, line: 97, baseType: !490, size: 2048, offset: 128)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 2048, elements: !494)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{null}
!494 = !{!495}
!495 = !DISubrange(count: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !485, file: !342, line: 98, baseType: !497, size: 4160, offset: 2176)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !342, line: 74, size: 4160, elements: !498)
!498 = !{!499, !501, !502, !503}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !497, file: !342, line: 75, baseType: !500, size: 2048)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, elements: !494)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !497, file: !342, line: 76, baseType: !500, size: 2048, offset: 2048)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !497, file: !342, line: 78, baseType: !398, size: 32, offset: 4096)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !497, file: !342, line: 81, baseType: !398, size: 32, offset: 4128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !366, file: !342, line: 637, baseType: !485, size: 6336, offset: 4096)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !366, file: !342, line: 641, baseType: !506, size: 64, offset: 10432)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{null, !17}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !366, file: !342, line: 646, baseType: !511, size: 192, offset: 10496)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !342, line: 291, size: 192, elements: !512)
!512 = !{!513, !515, !516}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !511, file: !342, line: 293, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !511, file: !342, line: 294, baseType: !17, size: 32, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !511, file: !342, line: 295, baseType: !370, size: 64, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !366, file: !342, line: 648, baseType: !518, size: 4224, offset: 10688)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 4224, elements: !439)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !343, file: !342, line: 199, baseType: !520, size: 64, offset: 512)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{!364, !365, !6, !523, !17}
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !343, file: !342, line: 202, baseType: !526, size: 64, offset: 576)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!529, !365, !6, !529, !17}
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !160, line: 114, baseType: !94)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !343, file: !342, line: 203, baseType: !531, size: 64, offset: 640)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!17, !365, !6}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !343, file: !342, line: 206, baseType: !354, size: 128, offset: 704)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !343, file: !342, line: 207, baseType: !346, size: 64, offset: 832)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !343, file: !342, line: 208, baseType: !17, size: 32, offset: 896)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !343, file: !342, line: 211, baseType: !538, size: 24, offset: 928)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 24, elements: !439)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !343, file: !342, line: 212, baseType: !540, size: 8, offset: 952)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 8, elements: !399)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !343, file: !342, line: 215, baseType: !354, size: 128, offset: 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !343, file: !342, line: 218, baseType: !17, size: 32, offset: 1088)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !343, file: !342, line: 219, baseType: !189, size: 64, offset: 1152)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !343, file: !342, line: 222, baseType: !365, size: 64, offset: 1216)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !343, file: !342, line: 226, baseType: !546, size: 32, offset: 1280)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !160, line: 175, baseType: !547)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !548, line: 12, baseType: !17)
!548 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!549 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !343, file: !342, line: 228, baseType: !444, size: 64, offset: 1312)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !343, file: !342, line: 229, baseType: !17, size: 32, offset: 1376)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !335, file: !297, line: 73, baseType: !186, size: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "autosync", scope: !335, file: !297, line: 74, baseType: !186, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "fdset", scope: !327, file: !297, line: 83, baseType: !554, size: 320)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !297, line: 77, size: 320, elements: !555)
!555 = !{!556, !557, !558, !559, !560}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !554, file: !297, line: 78, baseType: !16, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !554, file: !297, line: 79, baseType: !16, size: 64, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "numfds", scope: !554, file: !297, line: 80, baseType: !17, size: 32, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !554, file: !297, line: 81, baseType: !186, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !554, file: !297, line: 82, baseType: !154, size: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !291, file: !13, line: 558, baseType: !267, size: 64, offset: 128)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !291, file: !13, line: 559, baseType: !17, size: 32, offset: 192)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !291, file: !13, line: 560, baseType: !17, size: 32, offset: 224)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !291, file: !13, line: 562, baseType: !565, size: 64, offset: 256)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCtx", file: !3, line: 117, size: 832, elements: !567)
!567 = !{!568, !569, !570, !571, !599, !605, !606, !607, !608, !609, !610, !611, !612, !613}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "getapifuncptr", scope: !566, file: !3, line: 118, baseType: !6, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !566, file: !3, line: 119, baseType: !273, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !566, file: !3, line: 120, baseType: !27, size: 64, offset: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_client", scope: !566, file: !3, line: 121, baseType: !572, size: 64, offset: 192)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleBlockedClient", file: !3, line: 216, size: 576, elements: !574)
!574 = !{!575, !576, !579, !586, !587, !592, !596, !597, !598}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "client", scope: !573, file: !3, line: 217, baseType: !27, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !573, file: !3, line: 219, baseType: !577, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModule", file: !3, line: 56, baseType: !274)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "reply_callback", scope: !573, file: !3, line: 220, baseType: !580, size: 64, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCmdFunc", file: !3, line: 178, baseType: !581)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!17, !584, !8, !17}
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCtx", file: !3, line: 137, baseType: !566)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_callback", scope: !573, file: !3, line: 221, baseType: !580, size: 64, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect_callback", scope: !573, file: !3, line: 222, baseType: !588, size: 64, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDisconnectFunc", file: !3, line: 179, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DISubroutineType(types: !591)
!591 = !{null, !584, !572}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "free_privdata", scope: !573, file: !3, line: 223, baseType: !593, size: 64, offset: 320)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !584, !6}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !573, file: !3, line: 224, baseType: !6, size: 64, offset: 384)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "reply_client", scope: !573, file: !3, line: 227, baseType: !27, size: 64, offset: 448)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "dbid", scope: !573, file: !3, line: 229, baseType: !17, size: 32, offset: 512)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "amqueue", scope: !566, file: !3, line: 123, baseType: !600, size: 64, offset: 256)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AutoMemEntry", file: !3, line: 72, size: 128, elements: !602)
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !601, file: !3, line: 73, baseType: !6, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !601, file: !3, line: 74, baseType: !17, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "amqueue_len", scope: !566, file: !3, line: 124, baseType: !17, size: 32, offset: 320)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "amqueue_used", scope: !566, file: !3, line: 125, baseType: !17, size: 32, offset: 352)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !566, file: !3, line: 126, baseType: !17, size: 32, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "postponed_arrays", scope: !566, file: !3, line: 127, baseType: !8, size: 64, offset: 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "postponed_arrays_count", scope: !566, file: !3, line: 128, baseType: !17, size: 32, offset: 512)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_privdata", scope: !566, file: !3, line: 129, baseType: !6, size: 64, offset: 576)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "keys_pos", scope: !566, file: !3, line: 132, baseType: !16, size: 64, offset: 640)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "keys_count", scope: !566, file: !3, line: 133, baseType: !17, size: 32, offset: 704)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "pa_head", scope: !566, file: !3, line: 135, baseType: !614, size: 64, offset: 768)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModulePoolAllocBlock", file: !3, line: 100, size: 128, elements: !616)
!616 = !{!617, !620, !621, !622}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !615, file: !3, line: 101, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !33, line: 48, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !35, line: 79, baseType: !148)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !615, file: !3, line: 102, baseType: !618, size: 32, offset: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !615, file: !3, line: 103, baseType: !614, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !615, file: !3, line: 104, baseType: !623, offset: 128)
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: -1)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !291, file: !13, line: 563, baseType: !627, size: 64, offset: 320)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save", scope: !269, file: !13, line: 521, baseType: !629, size: 64, offset: 192)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeSaveFunc", file: !13, line: 507, baseType: !630)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{null, !290, !6}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite", scope: !269, file: !13, line: 522, baseType: !634, size: 64, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeRewriteFunc", file: !13, line: 510, baseType: !635)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{null, !290, !627, !6}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !269, file: !13, line: 523, baseType: !639, size: 64, offset: 320)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeMemUsageFunc", file: !13, line: 512, baseType: !640)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!157, !57}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !269, file: !13, line: 524, baseType: !644, size: 64, offset: 384)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeDigestFunc", file: !13, line: 511, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{null, !648, !6}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDigest", file: !13, line: 583, size: 320, elements: !650)
!650 = !{!651, !655}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "o", scope: !649, file: !13, line: 584, baseType: !652, size: 160)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 160, elements: !653)
!653 = !{!654}
!654 = !DISubrange(count: 20)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !649, file: !13, line: 585, baseType: !652, size: 160, offset: 160)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !269, file: !13, line: 525, baseType: !657, size: 64, offset: 448)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeFreeFunc", file: !13, line: 513, baseType: !134)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "aux_load", scope: !269, file: !13, line: 526, baseType: !659, size: 64, offset: 512)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxLoadFunc", file: !13, line: 508, baseType: !660)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!17, !290, !17, !17}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save", scope: !269, file: !13, line: 527, baseType: !664, size: 64, offset: 576)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxSaveFunc", file: !13, line: 509, baseType: !665)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{null, !290, !17}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save_triggers", scope: !269, file: !13, line: 528, baseType: !17, size: 32, offset: 640)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !13, line: 529, baseType: !670, size: 80, offset: 672)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 80, elements: !671)
!671 = !{!672}
!672 = !DISubrange(count: 10)
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681}
!674 = !DILocalVariable(name: "ctx", arg: 1, scope: !264, file: !3, line: 3064, type: !584)
!675 = !DILocalVariable(name: "name", arg: 2, scope: !264, file: !3, line: 3064, type: !523)
!676 = !DILocalVariable(name: "encver", arg: 3, scope: !264, file: !3, line: 3064, type: !17)
!677 = !DILocalVariable(name: "typemethods_ptr", arg: 4, scope: !264, file: !3, line: 3064, type: !6)
!678 = !DILocalVariable(name: "id", scope: !264, file: !3, line: 3065, type: !32)
!679 = !DILocalVariable(name: "typemethods_version", scope: !264, file: !3, line: 3069, type: !94)
!680 = !DILocalVariable(name: "tms", scope: !264, file: !3, line: 3085, type: !262)
!681 = !DILocalVariable(name: "mt", scope: !264, file: !3, line: 3087, type: !267)
!682 = !{!683, !684, !685, !686, !687, !688, !689, !690}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !263, file: !3, line: 3073, baseType: !32, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_load", scope: !263, file: !3, line: 3074, baseType: !286, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save", scope: !263, file: !3, line: 3075, baseType: !629, size: 64, offset: 128)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite", scope: !263, file: !3, line: 3076, baseType: !634, size: 64, offset: 192)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !263, file: !3, line: 3077, baseType: !639, size: 64, offset: 256)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !263, file: !3, line: 3078, baseType: !644, size: 64, offset: 320)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !263, file: !3, line: 3079, baseType: !657, size: 64, offset: 384)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !263, file: !3, line: 3084, baseType: !691, size: 192, offset: 448)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !263, file: !3, line: 3080, size: 192, elements: !692)
!692 = !{!693, !694, !695}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "aux_load", scope: !691, file: !3, line: 3081, baseType: !659, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save", scope: !691, file: !3, line: 3082, baseType: !664, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save_triggers", scope: !691, file: !3, line: 3083, baseType: !17, size: 32, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!17, !6, !8, !17}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !155, line: 51, size: 24, elements: !701)
!701 = !{!702, !705, !706, !707}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !700, file: !155, line: 52, baseType: !703, size: 8)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !33, line: 24, baseType: !704)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !35, line: 43, baseType: !347)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !700, file: !155, line: 53, baseType: !703, size: 8, offset: 8)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !700, file: !155, line: 54, baseType: !347, size: 8, offset: 16)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !700, file: !155, line: 55, baseType: !623, offset: 24)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !155, line: 57, size: 40, elements: !710)
!710 = !{!711, !714, !715, !716}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !709, file: !155, line: 58, baseType: !712, size: 16)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !33, line: 36, baseType: !713)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !35, line: 57, baseType: !438)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !709, file: !155, line: 59, baseType: !712, size: 16, offset: 16)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !709, file: !155, line: 60, baseType: !347, size: 8, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !709, file: !155, line: 61, baseType: !623, offset: 40)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !155, line: 63, size: 72, elements: !719)
!719 = !{!720, !721, !722, !723}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !718, file: !155, line: 64, baseType: !618, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !718, file: !155, line: 65, baseType: !618, size: 32, offset: 32)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !718, file: !155, line: 66, baseType: !347, size: 8, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !718, file: !155, line: 67, baseType: !623, offset: 72)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !155, line: 69, size: 136, elements: !726)
!726 = !{!727, !728, !729, !730}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !725, file: !155, line: 70, baseType: !32, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !725, file: !155, line: 71, baseType: !32, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !725, file: !155, line: 72, baseType: !347, size: 8, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !725, file: !155, line: 73, baseType: !623, offset: 136)
!731 = !{!732, !734, !772, !774, !0, !776, !778, !780, !782, !784, !804, !824, !830}
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "ModuleTypeNameCharSet", scope: !2, file: !3, line: 2889, type: !523, isLocal: false, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "cache", scope: !736, file: !3, line: 2946, type: !767, isLocal: true, isDefinition: true)
!736 = distinct !DISubprogram(name: "moduleTypeLookupModuleByID", scope: !3, file: !3, line: 2942, type: !737, isLocal: false, isDefinition: true, scopeLine: 2942, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !739)
!737 = !DISubroutineType(types: !738)
!738 = !{!267, !32}
!739 = !{!740, !741, !742, !743, !755, !756, !758, !764, !765}
!740 = !DILocalVariable(name: "id", arg: 1, scope: !736, file: !3, line: 2942, type: !32)
!741 = !DILocalVariable(name: "j", scope: !736, file: !3, line: 2949, type: !17)
!742 = !DILocalVariable(name: "mt", scope: !736, file: !3, line: 2954, type: !267)
!743 = !DILocalVariable(name: "di", scope: !736, file: !3, line: 2955, type: !744)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !45, line: 95, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !45, line: 88, size: 384, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753, !754}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !746, file: !45, line: 89, baseType: !43, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !746, file: !45, line: 90, baseType: !94, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !746, file: !45, line: 91, baseType: !17, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !746, file: !45, line: 91, baseType: !17, size: 32, offset: 160)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !746, file: !45, line: 92, baseType: !81, size: 64, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !746, file: !45, line: 92, baseType: !81, size: 64, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !746, file: !45, line: 94, baseType: !112, size: 64, offset: 320)
!755 = !DILocalVariable(name: "de", scope: !736, file: !3, line: 2956, type: !81)
!756 = !DILocalVariable(name: "module", scope: !757, file: !3, line: 2959, type: !273)
!757 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2958, column: 55)
!758 = !DILocalVariable(name: "li", scope: !757, file: !3, line: 2960, type: !759)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !116, line: 45, baseType: !760)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !116, line: 42, size: 128, elements: !761)
!761 = !{!762, !763}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !760, file: !116, line: 43, baseType: !120, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !760, file: !116, line: 44, baseType: !17, size: 32, offset: 64)
!764 = !DILocalVariable(name: "ln", scope: !757, file: !3, line: 2961, type: !120)
!765 = !DILocalVariable(name: "this_mt", scope: !766, file: !3, line: 2965, type: !267)
!766 = distinct !DILexicalBlock(scope: !757, file: !3, line: 2964, column: 37)
!767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !768, size: 384, elements: !439)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !736, file: !3, line: 2943, size: 128, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !768, file: !3, line: 2944, baseType: !32, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !768, file: !3, line: 2945, baseType: !267, size: 64, offset: 64)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "aeTimer", scope: !2, file: !3, line: 4346, type: !112, isLocal: false, isDefinition: true)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "moduleAPIDictType", scope: !2, file: !3, line: 5088, type: !50, isLocal: false, isDefinition: true)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "moduleUnblockedClients", scope: !2, file: !3, line: 233, type: !114, isLocal: true, isDefinition: true)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "moduleKeyspaceSubscribers", scope: !2, file: !3, line: 258, type: !114, isLocal: true, isDefinition: true)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "moduleFreeContextReusedClient", scope: !2, file: !3, line: 264, type: !27, isLocal: true, isDefinition: true)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "moduleCommandFilters", scope: !2, file: !3, line: 293, type: !114, isLocal: true, isDefinition: true)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "clusterReceivers", scope: !2, file: !3, line: 4099, type: !786, isLocal: true, isDefinition: true)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 16320, elements: !802)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleClusterReceiver", file: !3, line: 4088, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleClusterReceiver", file: !3, line: 4083, size: 256, elements: !790)
!790 = !{!791, !792, !799, !800}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "module_id", scope: !789, file: !3, line: 4084, baseType: !32, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !789, file: !3, line: 4085, baseType: !793, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleClusterMessageReceiver", file: !3, line: 4078, baseType: !794)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !584, !523, !703, !797, !618}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !789, file: !3, line: 4086, baseType: !273, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !789, file: !3, line: 4087, baseType: !801, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!802 = !{!803}
!803 = !DISubrange(count: 255)
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "Timers", scope: !2, file: !3, line: 4345, type: !806, isLocal: true, isDefinition: true)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "rax", file: !808, line: 137, baseType: !809)
!808 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rax.h", directory: "/root/.unikraft/apps/redis/build")
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rax", file: !808, line: 133, size: 192, elements: !810)
!810 = !{!811, !822, !823}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !809, file: !808, line: 134, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNode", file: !808, line: 131, baseType: !814)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxNode", file: !808, line: 98, size: 32, elements: !815)
!815 = !{!816, !817, !818, !819, !820}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "iskey", scope: !814, file: !808, line: 99, baseType: !618, size: 1, flags: DIFlagBitField, extraData: i64 0)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "isnull", scope: !814, file: !808, line: 100, baseType: !618, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "iscompr", scope: !814, file: !808, line: 101, baseType: !618, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !814, file: !808, line: 102, baseType: !618, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !814, file: !808, line: 130, baseType: !821, offset: 32)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, elements: !624)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "numele", scope: !809, file: !808, line: 135, baseType: !32, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "numnodes", scope: !809, file: !808, line: 136, baseType: !32, size: 64, offset: 128)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "moduleUnblockedClientsMutex", scope: !2, file: !3, line: 232, type: !826, isLocal: true, isDefinition: true)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !827, line: 417, baseType: !828)
!827 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libpthread-embedded/origin/pthread-embedded-44b41d760a433915d70a7be9809651b0a65e001d/pthread.h", directory: "/root/.unikraft/apps/redis/build")
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DICompositeType(tag: DW_TAG_structure_type, name: "pthread_mutex_t_", file: !827, line: 417, flags: DIFlagFwdDecl)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "moduleGIL", scope: !2, file: !3, line: 237, type: !826, isLocal: true, isDefinition: true)
!832 = !{i32 2, !"Dwarf Version", i32 4}
!833 = !{i32 2, !"Debug Info Version", i32 3}
!834 = !{i32 1, !"wchar_size", i32 4}
!835 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!836 = distinct !DISubprogram(name: "RM_Alloc", scope: !3, file: !3, line: 316, type: !837, isLocal: false, isDefinition: true, scopeLine: 316, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !839)
!837 = !DISubroutineType(types: !838)
!838 = !{!6, !157}
!839 = !{!840}
!840 = !DILocalVariable(name: "bytes", arg: 1, scope: !836, file: !3, line: 316, type: !157)
!841 = !DILocation(line: 316, column: 23, scope: !836)
!842 = !DILocation(line: 317, column: 12, scope: !836)
!843 = !DILocation(line: 317, column: 5, scope: !836)
!844 = distinct !DISubprogram(name: "RM_Calloc", scope: !3, file: !3, line: 324, type: !845, isLocal: false, isDefinition: true, scopeLine: 324, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !847)
!845 = !DISubroutineType(types: !846)
!846 = !{!6, !157, !157}
!847 = !{!848, !849}
!848 = !DILocalVariable(name: "nmemb", arg: 1, scope: !844, file: !3, line: 324, type: !157)
!849 = !DILocalVariable(name: "size", arg: 2, scope: !844, file: !3, line: 324, type: !157)
!850 = !DILocation(line: 324, column: 24, scope: !844)
!851 = !DILocation(line: 324, column: 38, scope: !844)
!852 = !DILocation(line: 325, column: 25, scope: !844)
!853 = !DILocation(line: 325, column: 12, scope: !844)
!854 = !DILocation(line: 325, column: 5, scope: !844)
!855 = distinct !DISubprogram(name: "RM_Realloc", scope: !3, file: !3, line: 329, type: !856, isLocal: false, isDefinition: true, scopeLine: 329, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !858)
!856 = !DISubroutineType(types: !857)
!857 = !{!6, !6, !157}
!858 = !{!859, !860}
!859 = !DILocalVariable(name: "ptr", arg: 1, scope: !855, file: !3, line: 329, type: !6)
!860 = !DILocalVariable(name: "bytes", arg: 2, scope: !855, file: !3, line: 329, type: !157)
!861 = !DILocation(line: 329, column: 24, scope: !855)
!862 = !DILocation(line: 329, column: 36, scope: !855)
!863 = !DILocation(line: 330, column: 12, scope: !855)
!864 = !DILocation(line: 330, column: 5, scope: !855)
!865 = distinct !DISubprogram(name: "RM_Free", scope: !3, file: !3, line: 336, type: !135, isLocal: false, isDefinition: true, scopeLine: 336, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !866)
!866 = !{!867}
!867 = !DILocalVariable(name: "ptr", arg: 1, scope: !865, file: !3, line: 336, type: !6)
!868 = !DILocation(line: 336, column: 20, scope: !865)
!869 = !DILocation(line: 337, column: 5, scope: !865)
!870 = !DILocation(line: 338, column: 1, scope: !865)
!871 = distinct !DISubprogram(name: "RM_Strdup", scope: !3, file: !3, line: 341, type: !872, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !874)
!872 = !DISubroutineType(types: !873)
!873 = !{!9, !523}
!874 = !{!875}
!875 = !DILocalVariable(name: "str", arg: 1, scope: !871, file: !3, line: 341, type: !523)
!876 = !DILocation(line: 341, column: 29, scope: !871)
!877 = !DILocation(line: 342, column: 12, scope: !871)
!878 = !DILocation(line: 342, column: 5, scope: !871)
!879 = distinct !DISubprogram(name: "poolAllocRelease", scope: !3, file: !3, line: 350, type: !880, isLocal: false, isDefinition: true, scopeLine: 350, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !882)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !584}
!882 = !{!883, !884, !887}
!883 = !DILocalVariable(name: "ctx", arg: 1, scope: !879, file: !3, line: 350, type: !584)
!884 = !DILocalVariable(name: "head", scope: !879, file: !3, line: 351, type: !885)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModulePoolAllocBlock", file: !3, line: 105, baseType: !615)
!887 = !DILocalVariable(name: "next", scope: !879, file: !3, line: 351, type: !885)
!888 = !DILocation(line: 350, column: 39, scope: !879)
!889 = !DILocation(line: 351, column: 44, scope: !879)
!890 = !{!891, !892, i64 96}
!891 = !{!"RedisModuleCtx", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !895, i64 40, !895, i64 44, !895, i64 48, !892, i64 56, !895, i64 64, !892, i64 72, !892, i64 80, !895, i64 88, !892, i64 96}
!892 = !{!"any pointer", !893, i64 0}
!893 = !{!"omnipotent char", !894, i64 0}
!894 = !{!"Simple C/C++ TBAA"}
!895 = !{!"int", !893, i64 0}
!896 = !DILocation(line: 351, column: 32, scope: !879)
!897 = !DILocation(line: 353, column: 5, scope: !879)
!898 = !DILocation(line: 353, column: 16, scope: !879)
!899 = !DILocation(line: 0, scope: !879)
!900 = !DILocation(line: 354, column: 22, scope: !901)
!901 = distinct !DILexicalBlock(scope: !879, file: !3, line: 353, column: 25)
!902 = !{!892, !892, i64 0}
!903 = !DILocation(line: 351, column: 54, scope: !879)
!904 = !DILocation(line: 355, column: 9, scope: !901)
!905 = distinct !{!905, !897, !906}
!906 = !DILocation(line: 357, column: 5, scope: !879)
!907 = !DILocation(line: 358, column: 18, scope: !879)
!908 = !DILocation(line: 359, column: 1, scope: !879)
!909 = distinct !DISubprogram(name: "RM_PoolAlloc", scope: !3, file: !3, line: 373, type: !910, isLocal: false, isDefinition: true, scopeLine: 373, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !912)
!910 = !DISubroutineType(types: !911)
!911 = !{!6, !584, !157}
!912 = !{!913, !914, !915, !916, !917, !920, !923}
!913 = !DILocalVariable(name: "ctx", arg: 1, scope: !909, file: !3, line: 373, type: !584)
!914 = !DILocalVariable(name: "bytes", arg: 2, scope: !909, file: !3, line: 373, type: !157)
!915 = !DILocalVariable(name: "b", scope: !909, file: !3, line: 375, type: !885)
!916 = !DILocalVariable(name: "left", scope: !909, file: !3, line: 376, type: !157)
!917 = !DILocalVariable(name: "alignment", scope: !918, file: !3, line: 380, type: !157)
!918 = distinct !DILexicalBlock(scope: !919, file: !3, line: 379, column: 24)
!919 = distinct !DILexicalBlock(scope: !909, file: !3, line: 379, column: 9)
!920 = !DILocalVariable(name: "blocksize", scope: !921, file: !3, line: 389, type: !157)
!921 = distinct !DILexicalBlock(scope: !922, file: !3, line: 388, column: 23)
!922 = distinct !DILexicalBlock(scope: !909, file: !3, line: 388, column: 9)
!923 = !DILocalVariable(name: "retval", scope: !909, file: !3, line: 398, type: !9)
!924 = !DILocation(line: 373, column: 36, scope: !909)
!925 = !DILocation(line: 373, column: 48, scope: !909)
!926 = !DILocation(line: 374, column: 15, scope: !927)
!927 = distinct !DILexicalBlock(scope: !909, file: !3, line: 374, column: 9)
!928 = !DILocation(line: 374, column: 9, scope: !909)
!929 = !DILocation(line: 375, column: 41, scope: !909)
!930 = !DILocation(line: 375, column: 32, scope: !909)
!931 = !DILocation(line: 376, column: 19, scope: !909)
!932 = !DILocation(line: 376, column: 26, scope: !909)
!933 = !{!895, !895, i64 0}
!934 = !DILocation(line: 376, column: 36, scope: !909)
!935 = !DILocation(line: 376, column: 31, scope: !909)
!936 = !DILocation(line: 376, column: 12, scope: !909)
!937 = !DILocation(line: 379, column: 14, scope: !919)
!938 = !DILocation(line: 379, column: 9, scope: !909)
!939 = !DILocation(line: 380, column: 16, scope: !918)
!940 = !DILocation(line: 381, column: 9, scope: !918)
!941 = !DILocation(line: 381, column: 22, scope: !918)
!942 = !DILocation(line: 381, column: 34, scope: !918)
!943 = !DILocation(line: 381, column: 46, scope: !918)
!944 = !DILocation(line: 381, column: 49, scope: !918)
!945 = distinct !{!945, !940, !946}
!946 = !DILocation(line: 381, column: 72, scope: !918)
!947 = !DILocation(line: 0, scope: !918)
!948 = !DILocation(line: 382, column: 16, scope: !949)
!949 = distinct !DILexicalBlock(scope: !918, file: !3, line: 382, column: 13)
!950 = !DILocation(line: 382, column: 13, scope: !949)
!951 = !DILocation(line: 382, column: 21, scope: !949)
!952 = !DILocation(line: 382, column: 13, scope: !918)
!953 = !DILocation(line: 383, column: 34, scope: !949)
!954 = !DILocation(line: 383, column: 21, scope: !949)
!955 = !DILocation(line: 383, column: 13, scope: !949)
!956 = !DILocation(line: 384, column: 20, scope: !918)
!957 = !DILocation(line: 384, column: 30, scope: !918)
!958 = !DILocation(line: 384, column: 25, scope: !918)
!959 = !DILocation(line: 384, column: 16, scope: !918)
!960 = !DILocation(line: 384, column: 50, scope: !918)
!961 = !DILocation(line: 385, column: 5, scope: !918)
!962 = !DILocation(line: 0, scope: !909)
!963 = !DILocation(line: 388, column: 14, scope: !922)
!964 = !DILocation(line: 388, column: 9, scope: !909)
!965 = !DILocation(line: 389, column: 16, scope: !921)
!966 = !DILocation(line: 390, column: 23, scope: !967)
!967 = distinct !DILexicalBlock(scope: !921, file: !3, line: 390, column: 13)
!968 = !DILocation(line: 390, column: 13, scope: !921)
!969 = !DILocation(line: 390, column: 32, scope: !967)
!970 = !DILocation(line: 0, scope: !921)
!971 = !DILocation(line: 391, column: 32, scope: !921)
!972 = !DILocation(line: 391, column: 13, scope: !921)
!973 = !DILocation(line: 392, column: 19, scope: !921)
!974 = !DILocation(line: 392, column: 12, scope: !921)
!975 = !DILocation(line: 392, column: 17, scope: !921)
!976 = !DILocation(line: 393, column: 12, scope: !921)
!977 = !DILocation(line: 393, column: 17, scope: !921)
!978 = !DILocation(line: 394, column: 24, scope: !921)
!979 = !DILocation(line: 394, column: 12, scope: !921)
!980 = !DILocation(line: 394, column: 17, scope: !921)
!981 = !DILocation(line: 395, column: 22, scope: !921)
!982 = !DILocation(line: 396, column: 5, scope: !921)
!983 = !DILocation(line: 398, column: 35, scope: !909)
!984 = !DILocation(line: 398, column: 30, scope: !909)
!985 = !DILocation(line: 398, column: 11, scope: !909)
!986 = !DILocation(line: 399, column: 13, scope: !909)
!987 = !DILocation(line: 401, column: 1, scope: !909)
!988 = distinct !DISubprogram(name: "moduleCreateEmptyKey", scope: !3, file: !3, line: 419, type: !989, isLocal: false, isDefinition: true, scopeLine: 419, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1022)
!989 = !DISubroutineType(types: !990)
!990 = !{!17, !991, !17}
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleKey", file: !3, line: 167, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleKey", file: !3, line: 149, size: 960, elements: !994)
!994 = !{!995, !996, !997, !998, !999, !1000, !1001, !1002, !1010, !1018, !1019, !1020, !1021}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !993, file: !3, line: 150, baseType: !584, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !993, file: !3, line: 151, baseType: !38, size: 64, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !993, file: !3, line: 152, baseType: !143, size: 64, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !993, file: !3, line: 153, baseType: !143, size: 64, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !993, file: !3, line: 154, baseType: !6, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !993, file: !3, line: 155, baseType: !17, size: 32, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "ztype", scope: !993, file: !3, line: 158, baseType: !618, size: 32, offset: 352)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "zrs", scope: !993, file: !3, line: 159, baseType: !1003, size: 192, offset: 384)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "zrangespec", file: !13, line: 1675, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 1672, size: 192, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1004, file: !13, line: 1673, baseType: !96, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1004, file: !13, line: 1673, baseType: !96, size: 64, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "minex", scope: !1004, file: !13, line: 1674, baseType: !17, size: 32, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "maxex", scope: !1004, file: !13, line: 1674, baseType: !17, size: 32, offset: 160)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "zlrs", scope: !993, file: !3, line: 160, baseType: !1011, size: 192, offset: 576)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "zlexrangespec", file: !13, line: 1681, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13, line: 1678, size: 192, elements: !1013)
!1013 = !{!1014, !1015, !1016, !1017}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1012, file: !13, line: 1679, baseType: !154, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1012, file: !13, line: 1679, baseType: !154, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "minex", scope: !1012, file: !13, line: 1680, baseType: !17, size: 32, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "maxex", scope: !1012, file: !13, line: 1680, baseType: !17, size: 32, offset: 160)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "zstart", scope: !993, file: !3, line: 161, baseType: !618, size: 32, offset: 768)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "zend", scope: !993, file: !3, line: 162, baseType: !618, size: 32, offset: 800)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "zcurrent", scope: !993, file: !3, line: 163, baseType: !6, size: 64, offset: 832)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "zer", scope: !993, file: !3, line: 164, baseType: !17, size: 32, offset: 896)
!1022 = !{!1023, !1024, !1025}
!1023 = !DILocalVariable(name: "key", arg: 1, scope: !988, file: !3, line: 419, type: !991)
!1024 = !DILocalVariable(name: "type", arg: 2, scope: !988, file: !3, line: 419, type: !17)
!1025 = !DILocalVariable(name: "obj", scope: !988, file: !3, line: 420, type: !143)
!1026 = !DILocation(line: 419, column: 42, scope: !988)
!1027 = !DILocation(line: 419, column: 51, scope: !988)
!1028 = !DILocation(line: 423, column: 16, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !988, file: !3, line: 423, column: 9)
!1030 = !{!1031, !895, i64 40}
!1031 = !{!"RedisModuleKey", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !895, i64 40, !895, i64 44, !1032, i64 48, !1034, i64 72, !895, i64 96, !895, i64 100, !892, i64 104, !895, i64 112}
!1032 = !{!"", !1033, i64 0, !1033, i64 8, !895, i64 16, !895, i64 20}
!1033 = !{!"double", !893, i64 0}
!1034 = !{!"", !892, i64 0, !892, i64 8, !895, i64 16, !895, i64 20}
!1035 = !DILocation(line: 423, column: 21, scope: !1029)
!1036 = !DILocation(line: 423, column: 42, scope: !1029)
!1037 = !DILocation(line: 423, column: 50, scope: !1029)
!1038 = !{!1031, !892, i64 24}
!1039 = !DILocation(line: 423, column: 45, scope: !1029)
!1040 = !DILocation(line: 423, column: 9, scope: !988)
!1041 = !DILocation(line: 426, column: 5, scope: !988)
!1042 = !DILocation(line: 428, column: 15, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !988, file: !3, line: 426, column: 18)
!1044 = !DILocation(line: 420, column: 11, scope: !988)
!1045 = !DILocation(line: 429, column: 34, scope: !1043)
!1046 = !{!1047, !892, i64 8}
!1047 = !{!"redisObject", !895, i64 0, !895, i64 0, !895, i64 1, !895, i64 4, !892, i64 8}
!1048 = !DILocation(line: 429, column: 46, scope: !1043)
!1049 = !{!1050, !895, i64 2864}
!1050 = !{!"redisServer", !895, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !895, i64 32, !895, i64 36, !895, i64 40, !892, i64 48, !892, i64 56, !892, i64 64, !892, i64 72, !895, i64 80, !895, i64 84, !895, i64 88, !895, i64 92, !892, i64 96, !892, i64 104, !895, i64 112, !895, i64 116, !893, i64 120, !895, i64 164, !1051, i64 168, !895, i64 176, !892, i64 184, !892, i64 192, !892, i64 200, !893, i64 208, !895, i64 216, !895, i64 220, !893, i64 224, !895, i64 352, !892, i64 360, !895, i64 368, !893, i64 372, !895, i64 436, !895, i64 440, !893, i64 444, !895, i64 508, !892, i64 512, !892, i64 520, !892, i64 528, !892, i64 536, !892, i64 544, !892, i64 552, !892, i64 560, !895, i64 568, !1052, i64 576, !893, i64 584, !892, i64 840, !1051, i64 848, !895, i64 856, !895, i64 860, !1051, i64 864, !1051, i64 872, !1051, i64 880, !1051, i64 888, !892, i64 896, !892, i64 904, !892, i64 912, !892, i64 920, !892, i64 928, !892, i64 936, !892, i64 944, !892, i64 952, !892, i64 960, !892, i64 968, !892, i64 976, !892, i64 984, !892, i64 992, !1051, i64 1000, !1052, i64 1008, !1052, i64 1016, !1052, i64 1024, !1033, i64 1032, !1052, i64 1040, !1052, i64 1048, !1052, i64 1056, !1052, i64 1064, !1052, i64 1072, !1052, i64 1080, !1052, i64 1088, !1052, i64 1096, !1052, i64 1104, !1051, i64 1112, !1052, i64 1120, !1033, i64 1128, !1052, i64 1136, !1052, i64 1144, !1052, i64 1152, !1052, i64 1160, !892, i64 1168, !1052, i64 1176, !1052, i64 1184, !1051, i64 1192, !1053, i64 1200, !1052, i64 1240, !1052, i64 1248, !1051, i64 1256, !1051, i64 1264, !893, i64 1272, !895, i64 1728, !895, i64 1732, !895, i64 1736, !895, i64 1740, !895, i64 1744, !1051, i64 1752, !895, i64 1760, !895, i64 1764, !895, i64 1768, !895, i64 1772, !1051, i64 1776, !1051, i64 1784, !895, i64 1792, !895, i64 1796, !895, i64 1800, !895, i64 1804, !893, i64 1808, !895, i64 1880, !895, i64 1884, !892, i64 1888, !895, i64 1896, !895, i64 1900, !1051, i64 1904, !1051, i64 1912, !1051, i64 1920, !1051, i64 1928, !895, i64 1936, !895, i64 1940, !892, i64 1944, !892, i64 1952, !895, i64 1960, !895, i64 1964, !1051, i64 1968, !1051, i64 1976, !1051, i64 1984, !1051, i64 1992, !895, i64 2000, !1051, i64 2008, !895, i64 2016, !895, i64 2020, !895, i64 2024, !895, i64 2028, !895, i64 2032, !895, i64 2036, !895, i64 2040, !895, i64 2044, !895, i64 2048, !895, i64 2052, !895, i64 2056, !895, i64 2060, !895, i64 2064, !892, i64 2072, !1052, i64 2080, !1052, i64 2088, !895, i64 2096, !892, i64 2104, !895, i64 2112, !892, i64 2120, !895, i64 2128, !895, i64 2132, !1051, i64 2136, !1051, i64 2144, !1051, i64 2152, !1051, i64 2160, !895, i64 2168, !895, i64 2172, !895, i64 2176, !895, i64 2180, !895, i64 2184, !895, i64 2188, !893, i64 2192, !1054, i64 2200, !1055, i64 2224, !892, i64 2240, !895, i64 2248, !892, i64 2256, !895, i64 2264, !893, i64 2268, !893, i64 2309, !1052, i64 2352, !1052, i64 2360, !895, i64 2368, !895, i64 2372, !892, i64 2376, !1052, i64 2384, !1052, i64 2392, !1052, i64 2400, !1052, i64 2408, !1051, i64 2416, !1051, i64 2424, !895, i64 2432, !895, i64 2436, !895, i64 2440, !895, i64 2444, !895, i64 2448, !892, i64 2456, !892, i64 2464, !895, i64 2472, !895, i64 2476, !892, i64 2480, !892, i64 2488, !895, i64 2496, !895, i64 2500, !1051, i64 2504, !1051, i64 2512, !1051, i64 2520, !895, i64 2528, !895, i64 2532, !892, i64 2536, !1051, i64 2544, !895, i64 2552, !895, i64 2556, !895, i64 2560, !1051, i64 2568, !895, i64 2576, !895, i64 2580, !895, i64 2584, !892, i64 2592, !893, i64 2600, !1052, i64 2648, !895, i64 2656, !892, i64 2664, !892, i64 2672, !895, i64 2680, !892, i64 2688, !895, i64 2696, !895, i64 2700, !1052, i64 2704, !895, i64 2712, !895, i64 2716, !895, i64 2720, !895, i64 2724, !1052, i64 2728, !895, i64 2736, !893, i64 2740, !892, i64 2768, !892, i64 2776, !895, i64 2784, !895, i64 2788, !895, i64 2792, !895, i64 2796, !1051, i64 2800, !1051, i64 2808, !1051, i64 2816, !1051, i64 2824, !1051, i64 2832, !1051, i64 2840, !1051, i64 2848, !1051, i64 2856, !895, i64 2864, !895, i64 2868, !1051, i64 2872, !1051, i64 2880, !895, i64 2888, !1052, i64 2896, !892, i64 2904, !892, i64 2912, !895, i64 2920, !895, i64 2924, !1052, i64 2928, !892, i64 2936, !892, i64 2944, !895, i64 2952, !895, i64 2956, !895, i64 2960, !895, i64 2964, !892, i64 2968, !895, i64 2976, !895, i64 2980, !895, i64 2984, !892, i64 2992, !892, i64 3000, !892, i64 3008, !892, i64 3016, !1052, i64 3024, !1052, i64 3032, !1052, i64 3040, !895, i64 3048, !895, i64 3052, !895, i64 3056, !895, i64 3060, !895, i64 3064, !895, i64 3068, !895, i64 3072, !895, i64 3076, !895, i64 3080, !895, i64 3084, !895, i64 3088, !1052, i64 3096, !892, i64 3104, !892, i64 3112, !892, i64 3120, !895, i64 3128, !895, i64 3132, !895, i64 3136, !1051, i64 3144, !892, i64 3152, !892, i64 3160, !892, i64 3168}
!1051 = !{!"long", !893, i64 0}
!1052 = !{!"long long", !893, i64 0}
!1053 = !{!"malloc_stats", !1051, i64 0, !1051, i64 8, !1051, i64 16, !1051, i64 24, !1051, i64 32}
!1054 = !{!"", !895, i64 0, !1051, i64 8, !1052, i64 16}
!1055 = !{!"redisOpArray", !892, i64 0, !895, i64 8}
!1056 = !DILocation(line: 430, column: 36, scope: !1043)
!1057 = !{!1050, !895, i64 2868}
!1058 = !DILocation(line: 429, column: 9, scope: !1043)
!1059 = !DILocation(line: 431, column: 9, scope: !1043)
!1060 = !DILocation(line: 433, column: 15, scope: !1043)
!1061 = !DILocation(line: 434, column: 9, scope: !1043)
!1062 = !DILocation(line: 436, column: 15, scope: !1043)
!1063 = !DILocation(line: 437, column: 9, scope: !1043)
!1064 = !DILocation(line: 0, scope: !1043)
!1065 = !DILocation(line: 440, column: 16, scope: !988)
!1066 = !{!1031, !892, i64 8}
!1067 = !DILocation(line: 440, column: 24, scope: !988)
!1068 = !{!1031, !892, i64 16}
!1069 = !DILocation(line: 440, column: 5, scope: !988)
!1070 = !DILocation(line: 441, column: 16, scope: !988)
!1071 = !DILocation(line: 442, column: 5, scope: !988)
!1072 = !DILocation(line: 0, scope: !988)
!1073 = !DILocation(line: 0, scope: !1029)
!1074 = !DILocation(line: 443, column: 1, scope: !988)
!1075 = distinct !DISubprogram(name: "moduleDelKeyIfEmpty", scope: !3, file: !3, line: 455, type: !1076, isLocal: false, isDefinition: true, scopeLine: 455, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1078)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!17, !991}
!1078 = !{!1079, !1080, !1081}
!1079 = !DILocalVariable(name: "key", arg: 1, scope: !1075, file: !3, line: 455, type: !991)
!1080 = !DILocalVariable(name: "isempty", scope: !1075, file: !3, line: 457, type: !17)
!1081 = !DILocalVariable(name: "o", scope: !1075, file: !3, line: 458, type: !143)
!1082 = !DILocation(line: 455, column: 41, scope: !1075)
!1083 = !DILocation(line: 456, column: 16, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1075, file: !3, line: 456, column: 9)
!1085 = !DILocation(line: 456, column: 21, scope: !1084)
!1086 = !DILocation(line: 456, column: 42, scope: !1084)
!1087 = !DILocation(line: 456, column: 50, scope: !1084)
!1088 = !DILocation(line: 456, column: 56, scope: !1084)
!1089 = !DILocation(line: 456, column: 9, scope: !1075)
!1090 = !DILocation(line: 458, column: 11, scope: !1075)
!1091 = !DILocation(line: 460, column: 15, scope: !1075)
!1092 = !DILocation(line: 460, column: 5, scope: !1075)
!1093 = !DILocation(line: 462, column: 29, scope: !1094)
!1094 = distinct !DILexicalBlock(scope: !1075, file: !3, line: 460, column: 21)
!1095 = !DILocation(line: 462, column: 44, scope: !1094)
!1096 = !DILocation(line: 462, column: 50, scope: !1094)
!1097 = !DILocation(line: 468, column: 9, scope: !1075)
!1098 = !DILocation(line: 463, column: 30, scope: !1094)
!1099 = !DILocation(line: 463, column: 44, scope: !1094)
!1100 = !DILocation(line: 463, column: 50, scope: !1094)
!1101 = !DILocation(line: 464, column: 31, scope: !1094)
!1102 = !DILocation(line: 464, column: 49, scope: !1094)
!1103 = !DILocation(line: 464, column: 55, scope: !1094)
!1104 = !DILocation(line: 457, column: 9, scope: !1075)
!1105 = !DILocation(line: 466, column: 5, scope: !1094)
!1106 = !DILocation(line: 461, column: 30, scope: !1094)
!1107 = !DILocation(line: 461, column: 48, scope: !1094)
!1108 = !DILocation(line: 461, column: 54, scope: !1094)
!1109 = !DILocation(line: 469, column: 23, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 468, column: 18)
!1111 = distinct !DILexicalBlock(scope: !1075, file: !3, line: 468, column: 9)
!1112 = !DILocation(line: 469, column: 31, scope: !1110)
!1113 = !DILocation(line: 469, column: 9, scope: !1110)
!1114 = !DILocation(line: 470, column: 20, scope: !1110)
!1115 = !DILocation(line: 471, column: 9, scope: !1110)
!1116 = !DILocation(line: 0, scope: !1117)
!1117 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 472, column: 12)
!1118 = !DILocation(line: 0, scope: !1110)
!1119 = !DILocation(line: 475, column: 1, scope: !1075)
!1120 = distinct !DISubprogram(name: "RM_GetApi", scope: !3, file: !3, line: 493, type: !1121, isLocal: false, isDefinition: true, scopeLine: 493, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1123)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!17, !523, !8}
!1123 = !{!1124, !1125, !1126}
!1124 = !DILocalVariable(name: "funcname", arg: 1, scope: !1120, file: !3, line: 493, type: !523)
!1125 = !DILocalVariable(name: "targetPtrPtr", arg: 2, scope: !1120, file: !3, line: 493, type: !8)
!1126 = !DILocalVariable(name: "he", scope: !1120, file: !3, line: 494, type: !81)
!1127 = !DILocation(line: 493, column: 27, scope: !1120)
!1128 = !DILocation(line: 493, column: 44, scope: !1120)
!1129 = !DILocation(line: 494, column: 37, scope: !1120)
!1130 = !{!1050, !892, i64 184}
!1131 = !DILocation(line: 494, column: 21, scope: !1120)
!1132 = !DILocation(line: 494, column: 16, scope: !1120)
!1133 = !DILocation(line: 495, column: 10, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1120, file: !3, line: 495, column: 9)
!1135 = !DILocation(line: 495, column: 9, scope: !1120)
!1136 = !DILocation(line: 496, column: 21, scope: !1120)
!1137 = !{!893, !893, i64 0}
!1138 = !DILocation(line: 496, column: 19, scope: !1120)
!1139 = !DILocation(line: 497, column: 5, scope: !1120)
!1140 = !DILocation(line: 0, scope: !1134)
!1141 = !DILocation(line: 498, column: 1, scope: !1120)
!1142 = distinct !DISubprogram(name: "moduleFreeContext", scope: !3, file: !3, line: 501, type: !880, isLocal: false, isDefinition: true, scopeLine: 501, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1143)
!1143 = !{!1144}
!1144 = !DILocalVariable(name: "ctx", arg: 1, scope: !1142, file: !3, line: 501, type: !584)
!1145 = !DILocation(line: 501, column: 40, scope: !1142)
!1146 = !DILocation(line: 502, column: 5, scope: !1142)
!1147 = !DILocation(line: 350, column: 39, scope: !879, inlinedAt: !1148)
!1148 = distinct !DILocation(line: 503, column: 5, scope: !1142)
!1149 = !DILocation(line: 351, column: 44, scope: !879, inlinedAt: !1148)
!1150 = !DILocation(line: 351, column: 32, scope: !879, inlinedAt: !1148)
!1151 = !DILocation(line: 353, column: 5, scope: !879, inlinedAt: !1148)
!1152 = !DILocation(line: 353, column: 16, scope: !879, inlinedAt: !1148)
!1153 = !DILocation(line: 0, scope: !879, inlinedAt: !1148)
!1154 = !DILocation(line: 354, column: 22, scope: !901, inlinedAt: !1148)
!1155 = !DILocation(line: 351, column: 54, scope: !879, inlinedAt: !1148)
!1156 = !DILocation(line: 355, column: 9, scope: !901, inlinedAt: !1148)
!1157 = !DILocation(line: 358, column: 18, scope: !879, inlinedAt: !1148)
!1158 = !DILocation(line: 359, column: 1, scope: !879, inlinedAt: !1148)
!1159 = !DILocation(line: 504, column: 14, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1142, file: !3, line: 504, column: 9)
!1161 = !{!891, !892, i64 56}
!1162 = !DILocation(line: 504, column: 9, scope: !1160)
!1163 = !DILocation(line: 504, column: 9, scope: !1142)
!1164 = !DILocation(line: 505, column: 15, scope: !1165)
!1165 = distinct !DILexicalBlock(scope: !1160, file: !3, line: 504, column: 32)
!1166 = !DILocation(line: 505, column: 9, scope: !1165)
!1167 = !DILocation(line: 506, column: 14, scope: !1165)
!1168 = !DILocation(line: 506, column: 37, scope: !1165)
!1169 = !{!891, !895, i64 64}
!1170 = !DILocation(line: 512, column: 18, scope: !1165)
!1171 = !{!891, !892, i64 8}
!1172 = !DILocation(line: 512, column: 26, scope: !1165)
!1173 = !{!1174, !892, i64 8}
!1174 = !{!"RedisModule", !892, i64 0, !892, i64 8, !895, i64 16, !895, i64 20, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !895, i64 56}
!1175 = !DILocation(line: 507, column: 9, scope: !1165)
!1176 = !DILocation(line: 513, column: 5, scope: !1165)
!1177 = !DILocation(line: 514, column: 14, scope: !1178)
!1178 = distinct !DILexicalBlock(scope: !1142, file: !3, line: 514, column: 9)
!1179 = !{!891, !895, i64 48}
!1180 = !DILocation(line: 514, column: 20, scope: !1178)
!1181 = !DILocation(line: 514, column: 9, scope: !1142)
!1182 = !DILocation(line: 514, column: 67, scope: !1178)
!1183 = !{!891, !892, i64 16}
!1184 = !DILocation(line: 514, column: 51, scope: !1178)
!1185 = !DILocation(line: 515, column: 1, scope: !1142)
!1186 = distinct !DISubprogram(name: "autoMemoryCollect", scope: !3, file: !3, line: 835, type: !880, isLocal: false, isDefinition: true, scopeLine: 835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1187)
!1187 = !{!1188, !1189, !1190}
!1188 = !DILocalVariable(name: "ctx", arg: 1, scope: !1186, file: !3, line: 835, type: !584)
!1189 = !DILocalVariable(name: "j", scope: !1186, file: !3, line: 841, type: !17)
!1190 = !DILocalVariable(name: "ptr", scope: !1191, file: !3, line: 843, type: !6)
!1191 = distinct !DILexicalBlock(scope: !1192, file: !3, line: 842, column: 45)
!1192 = distinct !DILexicalBlock(scope: !1193, file: !3, line: 842, column: 5)
!1193 = distinct !DILexicalBlock(scope: !1186, file: !3, line: 842, column: 5)
!1194 = !DILocation(line: 835, column: 40, scope: !1186)
!1195 = !DILocation(line: 836, column: 16, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1186, file: !3, line: 836, column: 9)
!1197 = !DILocation(line: 836, column: 22, scope: !1196)
!1198 = !DILocation(line: 836, column: 9, scope: !1186)
!1199 = !DILocation(line: 840, column: 16, scope: !1186)
!1200 = !DILocation(line: 841, column: 9, scope: !1186)
!1201 = !DILocation(line: 842, column: 10, scope: !1193)
!1202 = !DILocation(line: 842, column: 26, scope: !1192)
!1203 = !{!891, !895, i64 44}
!1204 = !DILocation(line: 842, column: 19, scope: !1192)
!1205 = !DILocation(line: 842, column: 5, scope: !1193)
!1206 = !DILocation(line: 843, column: 26, scope: !1191)
!1207 = !{!891, !892, i64 32}
!1208 = !DILocation(line: 843, column: 37, scope: !1191)
!1209 = !{!1210, !892, i64 0}
!1210 = !{!"AutoMemEntry", !892, i64 0, !895, i64 8}
!1211 = !DILocation(line: 843, column: 15, scope: !1191)
!1212 = !DILocation(line: 844, column: 32, scope: !1191)
!1213 = !{!1210, !895, i64 8}
!1214 = !DILocation(line: 844, column: 9, scope: !1191)
!1215 = !DILocation(line: 845, column: 50, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !1191, file: !3, line: 844, column: 38)
!1217 = !DILocation(line: 845, column: 37, scope: !1216)
!1218 = !DILocation(line: 845, column: 56, scope: !1216)
!1219 = !DILocation(line: 846, column: 53, scope: !1216)
!1220 = !DILocalVariable(name: "reply", arg: 1, scope: !1221, file: !3, line: 2604, type: !1224)
!1221 = distinct !DISubprogram(name: "RM_FreeCallReply", scope: !3, file: !3, line: 2604, type: !1222, isLocal: false, isDefinition: true, scopeLine: 2604, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1241)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{null, !1224}
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCallReply", file: !3, line: 212, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCallReply", file: !3, line: 197, size: 384, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1234}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1226, file: !3, line: 198, baseType: !584, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1226, file: !3, line: 199, baseType: !17, size: 32, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1226, file: !3, line: 200, baseType: !17, size: 32, offset: 96)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1226, file: !3, line: 201, baseType: !157, size: 64, offset: 128)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !1226, file: !3, line: 202, baseType: !9, size: 64, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "protolen", scope: !1226, file: !3, line: 203, baseType: !157, size: 64, offset: 256)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1226, file: !3, line: 211, baseType: !1235, size: 64, offset: 320)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1226, file: !3, line: 204, size: 64, elements: !1236)
!1236 = !{!1237, !1238, !1239}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1235, file: !3, line: 205, baseType: !523, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "ll", scope: !1235, file: !3, line: 209, baseType: !112, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1235, file: !3, line: 210, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1241 = !{!1220, !1242}
!1242 = !DILocalVariable(name: "ctx", scope: !1221, file: !3, line: 2606, type: !584)
!1243 = !DILocation(line: 2604, column: 45, scope: !1221, inlinedAt: !1244)
!1244 = distinct !DILocation(line: 846, column: 36, scope: !1216)
!1245 = !DILocation(line: 2606, column: 34, scope: !1221, inlinedAt: !1244)
!1246 = !{!1247, !892, i64 0}
!1247 = !{!"RedisModuleCallReply", !892, i64 0, !895, i64 8, !895, i64 12, !1051, i64 16, !892, i64 24, !1051, i64 32, !893, i64 40}
!1248 = !DILocation(line: 2606, column: 21, scope: !1221, inlinedAt: !1244)
!1249 = !DILocation(line: 2607, column: 5, scope: !1221, inlinedAt: !1244)
!1250 = !DILocation(line: 2608, column: 5, scope: !1221, inlinedAt: !1244)
!1251 = !DILocation(line: 2609, column: 1, scope: !1221, inlinedAt: !1244)
!1252 = !DILocation(line: 846, column: 59, scope: !1216)
!1253 = !DILocation(line: 847, column: 46, scope: !1216)
!1254 = !DILocation(line: 847, column: 34, scope: !1216)
!1255 = !DILocation(line: 847, column: 52, scope: !1216)
!1256 = !DILocalVariable(name: "ctx", arg: 1, scope: !1257, file: !3, line: 4510, type: !584)
!1257 = distinct !DISubprogram(name: "RM_FreeDict", scope: !3, file: !3, line: 4510, type: !1258, isLocal: false, isDefinition: true, scopeLine: 4510, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1265)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{null, !584, !1260}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDict", file: !3, line: 269, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDict", file: !3, line: 267, size: 64, elements: !1263)
!1263 = !{!1264}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1262, file: !3, line: 268, baseType: !806, size: 64)
!1265 = !{!1256, !1266}
!1266 = !DILocalVariable(name: "d", arg: 2, scope: !1257, file: !3, line: 4510, type: !1260)
!1267 = !DILocation(line: 4510, column: 34, scope: !1257, inlinedAt: !1268)
!1268 = distinct !DILocation(line: 848, column: 35, scope: !1216)
!1269 = !DILocation(line: 4510, column: 56, scope: !1257, inlinedAt: !1268)
!1270 = !DILocation(line: 4511, column: 9, scope: !1257, inlinedAt: !1268)
!1271 = !DILocation(line: 4512, column: 16, scope: !1257, inlinedAt: !1268)
!1272 = !{!1273, !892, i64 0}
!1273 = !{!"RedisModuleDict", !892, i64 0}
!1274 = !DILocation(line: 4512, column: 5, scope: !1257, inlinedAt: !1268)
!1275 = !DILocation(line: 4513, column: 5, scope: !1257, inlinedAt: !1268)
!1276 = !DILocation(line: 4514, column: 1, scope: !1257, inlinedAt: !1268)
!1277 = !DILocation(line: 848, column: 58, scope: !1216)
!1278 = !DILocation(line: 0, scope: !1216)
!1279 = !DILocation(line: 842, column: 41, scope: !1192)
!1280 = !DILocation(line: 842, column: 5, scope: !1192)
!1281 = distinct !{!1281, !1205, !1282}
!1282 = !DILocation(line: 850, column: 5, scope: !1193)
!1283 = !DILocation(line: 851, column: 16, scope: !1186)
!1284 = !DILocation(line: 852, column: 16, scope: !1186)
!1285 = !DILocation(line: 852, column: 5, scope: !1186)
!1286 = !DILocation(line: 853, column: 18, scope: !1186)
!1287 = !DILocation(line: 854, column: 10, scope: !1186)
!1288 = !DILocation(line: 854, column: 22, scope: !1186)
!1289 = !{!891, !895, i64 40}
!1290 = !DILocation(line: 855, column: 23, scope: !1186)
!1291 = !DILocation(line: 856, column: 1, scope: !1186)
!1292 = distinct !DISubprogram(name: "moduleHandlePropagationAfterCommandCallback", scope: !3, file: !3, line: 519, type: !880, isLocal: false, isDefinition: true, scopeLine: 519, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1293)
!1293 = !{!1294, !1295, !1296}
!1294 = !DILocalVariable(name: "ctx", arg: 1, scope: !1292, file: !3, line: 519, type: !584)
!1295 = !DILocalVariable(name: "c", scope: !1292, file: !3, line: 520, type: !27)
!1296 = !DILocalVariable(name: "propargv", scope: !1297, file: !3, line: 527, type: !1299)
!1297 = distinct !DILexicalBlock(scope: !1298, file: !3, line: 526, column: 53)
!1298 = distinct !DILexicalBlock(scope: !1292, file: !3, line: 526, column: 9)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 64, elements: !399)
!1300 = !DILocation(line: 519, column: 66, scope: !1292)
!1301 = !DILocation(line: 520, column: 22, scope: !1292)
!1302 = !DILocation(line: 520, column: 13, scope: !1292)
!1303 = !DILocation(line: 522, column: 12, scope: !1304)
!1304 = distinct !DILexicalBlock(scope: !1292, file: !3, line: 522, column: 9)
!1305 = !{!1306, !895, i64 160}
!1306 = !{!"client", !1051, i64 0, !895, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !1051, i64 40, !892, i64 48, !1051, i64 56, !895, i64 64, !892, i64 72, !892, i64 80, !892, i64 88, !895, i64 96, !895, i64 100, !1051, i64 104, !892, i64 112, !1052, i64 120, !1051, i64 128, !1051, i64 136, !1051, i64 144, !1051, i64 152, !895, i64 160, !895, i64 164, !895, i64 168, !895, i64 172, !895, i64 176, !1051, i64 184, !1051, i64 192, !892, i64 200, !1052, i64 208, !1052, i64 216, !1052, i64 224, !1052, i64 232, !1052, i64 240, !893, i64 248, !895, i64 292, !893, i64 296, !895, i64 344, !1307, i64 352, !895, i64 384, !1308, i64 392, !1052, i64 480, !892, i64 488, !892, i64 496, !892, i64 504, !892, i64 512, !892, i64 520, !895, i64 528, !893, i64 532}
!1307 = !{!"multiState", !892, i64 0, !895, i64 8, !895, i64 12, !895, i64 16, !1051, i64 24}
!1308 = !{!"blockingState", !1052, i64 0, !892, i64 8, !892, i64 16, !1051, i64 24, !892, i64 32, !892, i64 40, !1052, i64 48, !1052, i64 56, !895, i64 64, !895, i64 68, !1052, i64 72, !892, i64 80}
!1309 = !DILocation(line: 522, column: 18, scope: !1304)
!1310 = !DILocation(line: 522, column: 9, scope: !1292)
!1311 = !DILocation(line: 526, column: 14, scope: !1298)
!1312 = !DILocation(line: 526, column: 20, scope: !1298)
!1313 = !DILocation(line: 526, column: 9, scope: !1292)
!1314 = !DILocation(line: 527, column: 9, scope: !1297)
!1315 = !DILocation(line: 527, column: 15, scope: !1297)
!1316 = !DILocation(line: 528, column: 23, scope: !1297)
!1317 = !DILocation(line: 528, column: 9, scope: !1297)
!1318 = !DILocation(line: 528, column: 21, scope: !1297)
!1319 = !DILocation(line: 529, column: 30, scope: !1297)
!1320 = !{!1050, !892, i64 960}
!1321 = !DILocation(line: 529, column: 45, scope: !1297)
!1322 = !{!1306, !892, i64 16}
!1323 = !DILocation(line: 529, column: 49, scope: !1297)
!1324 = !{!1325, !895, i64 40}
!1325 = !{!"redisDb", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !895, i64 40, !1052, i64 48, !892, i64 56}
!1326 = !DILocation(line: 529, column: 9, scope: !1297)
!1327 = !DILocation(line: 531, column: 22, scope: !1297)
!1328 = !DILocation(line: 531, column: 9, scope: !1297)
!1329 = !DILocation(line: 532, column: 5, scope: !1298)
!1330 = !DILocation(line: 532, column: 5, scope: !1297)
!1331 = !DILocation(line: 0, scope: !1304)
!1332 = !DILocation(line: 533, column: 1, scope: !1292)
!1333 = distinct !DISubprogram(name: "RedisModuleCommandDispatcher", scope: !3, file: !3, line: 537, type: !25, isLocal: false, isDefinition: true, scopeLine: 537, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1334)
!1334 = !{!1335, !1336, !1344, !1345}
!1335 = !DILocalVariable(name: "c", arg: 1, scope: !1333, file: !3, line: 537, type: !27)
!1336 = !DILocalVariable(name: "cp", scope: !1333, file: !3, line: 538, type: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandProxy", file: !3, line: 187, baseType: !1339)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCommandProxy", file: !3, line: 182, size: 192, elements: !1340)
!1340 = !{!1341, !1342, !1343}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !1339, file: !3, line: 183, baseType: !273, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1339, file: !3, line: 184, baseType: !580, size: 64, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "rediscmd", scope: !1339, file: !3, line: 185, baseType: !18, size: 64, offset: 128)
!1344 = !DILocalVariable(name: "ctx", scope: !1333, file: !3, line: 539, type: !585)
!1345 = !DILocalVariable(name: "i", scope: !1346, file: !3, line: 556, type: !17)
!1346 = distinct !DILexicalBlock(scope: !1333, file: !3, line: 556, column: 5)
!1347 = !DILocation(line: 527, column: 15, scope: !1297, inlinedAt: !1348)
!1348 = distinct !DILocation(line: 544, column: 5, scope: !1333)
!1349 = !DILocation(line: 537, column: 43, scope: !1333)
!1350 = !DILocation(line: 538, column: 60, scope: !1333)
!1351 = !{!1306, !892, i64 80}
!1352 = !DILocation(line: 538, column: 65, scope: !1333)
!1353 = !{!1354, !892, i64 40}
!1354 = !{!"redisCommand", !892, i64 0, !892, i64 8, !895, i64 16, !892, i64 24, !895, i64 32, !892, i64 40, !895, i64 48, !895, i64 52, !895, i64 56, !1052, i64 64, !1052, i64 72}
!1355 = !DILocation(line: 538, column: 30, scope: !1333)
!1356 = !DILocation(line: 539, column: 5, scope: !1333)
!1357 = !DILocation(line: 539, column: 20, scope: !1333)
!1358 = !DILocation(line: 541, column: 22, scope: !1333)
!1359 = !{!1360, !892, i64 0}
!1360 = !{!"RedisModuleCommandProxy", !892, i64 0, !892, i64 8, !892, i64 16}
!1361 = !DILocation(line: 541, column: 9, scope: !1333)
!1362 = !DILocation(line: 541, column: 16, scope: !1333)
!1363 = !DILocation(line: 542, column: 9, scope: !1333)
!1364 = !DILocation(line: 542, column: 16, scope: !1333)
!1365 = !DILocation(line: 543, column: 9, scope: !1333)
!1366 = !{!1360, !892, i64 8}
!1367 = !DILocation(line: 543, column: 30, scope: !1333)
!1368 = !{!1306, !892, i64 72}
!1369 = !DILocation(line: 543, column: 38, scope: !1333)
!1370 = !{!1306, !895, i64 64}
!1371 = !DILocation(line: 543, column: 5, scope: !1333)
!1372 = !DILocation(line: 519, column: 66, scope: !1292, inlinedAt: !1348)
!1373 = !DILocation(line: 520, column: 22, scope: !1292, inlinedAt: !1348)
!1374 = !DILocation(line: 520, column: 13, scope: !1292, inlinedAt: !1348)
!1375 = !DILocation(line: 522, column: 12, scope: !1304, inlinedAt: !1348)
!1376 = !DILocation(line: 522, column: 18, scope: !1304, inlinedAt: !1348)
!1377 = !DILocation(line: 522, column: 9, scope: !1292, inlinedAt: !1348)
!1378 = !DILocation(line: 526, column: 14, scope: !1298, inlinedAt: !1348)
!1379 = !DILocation(line: 526, column: 20, scope: !1298, inlinedAt: !1348)
!1380 = !DILocation(line: 526, column: 9, scope: !1292, inlinedAt: !1348)
!1381 = !DILocation(line: 527, column: 9, scope: !1297, inlinedAt: !1348)
!1382 = !DILocation(line: 528, column: 23, scope: !1297, inlinedAt: !1348)
!1383 = !DILocation(line: 528, column: 9, scope: !1297, inlinedAt: !1348)
!1384 = !DILocation(line: 528, column: 21, scope: !1297, inlinedAt: !1348)
!1385 = !DILocation(line: 529, column: 30, scope: !1297, inlinedAt: !1348)
!1386 = !DILocation(line: 529, column: 45, scope: !1297, inlinedAt: !1348)
!1387 = !DILocation(line: 529, column: 49, scope: !1297, inlinedAt: !1348)
!1388 = !DILocation(line: 529, column: 9, scope: !1297, inlinedAt: !1348)
!1389 = !DILocation(line: 531, column: 22, scope: !1297, inlinedAt: !1348)
!1390 = !DILocation(line: 531, column: 9, scope: !1297, inlinedAt: !1348)
!1391 = !DILocation(line: 532, column: 5, scope: !1298, inlinedAt: !1348)
!1392 = !DILocation(line: 532, column: 5, scope: !1297, inlinedAt: !1348)
!1393 = !DILocation(line: 0, scope: !1333)
!1394 = !DILocation(line: 533, column: 1, scope: !1292, inlinedAt: !1348)
!1395 = !DILocation(line: 545, column: 5, scope: !1333)
!1396 = !DILocation(line: 556, column: 14, scope: !1346)
!1397 = !DILocation(line: 556, column: 10, scope: !1346)
!1398 = !DILocation(line: 556, column: 28, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1346, file: !3, line: 556, column: 5)
!1400 = !DILocation(line: 556, column: 23, scope: !1399)
!1401 = !DILocation(line: 556, column: 5, scope: !1346)
!1402 = !DILocation(line: 562, column: 1, scope: !1333)
!1403 = !DILocation(line: 559, column: 16, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1405, file: !3, line: 559, column: 13)
!1405 = distinct !DILexicalBlock(scope: !1399, file: !3, line: 556, column: 39)
!1406 = !DILocation(line: 559, column: 13, scope: !1404)
!1407 = !DILocation(line: 559, column: 25, scope: !1404)
!1408 = !{!1047, !895, i64 4}
!1409 = !DILocation(line: 559, column: 34, scope: !1404)
!1410 = !DILocation(line: 559, column: 13, scope: !1405)
!1411 = !DILocation(line: 560, column: 13, scope: !1404)
!1412 = !DILocation(line: 556, column: 35, scope: !1399)
!1413 = !DILocation(line: 556, column: 5, scope: !1399)
!1414 = distinct !{!1414, !1401, !1415}
!1415 = !DILocation(line: 561, column: 5, scope: !1346)
!1416 = distinct !DISubprogram(name: "moduleGetCommandKeysViaAPI", scope: !3, file: !3, line: 573, type: !14, isLocal: false, isDefinition: true, scopeLine: 573, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422, !1423, !1424}
!1418 = !DILocalVariable(name: "cmd", arg: 1, scope: !1416, file: !3, line: 573, type: !18)
!1419 = !DILocalVariable(name: "argv", arg: 2, scope: !1416, file: !3, line: 573, type: !165)
!1420 = !DILocalVariable(name: "argc", arg: 3, scope: !1416, file: !3, line: 573, type: !17)
!1421 = !DILocalVariable(name: "numkeys", arg: 4, scope: !1416, file: !3, line: 573, type: !16)
!1422 = !DILocalVariable(name: "cp", scope: !1416, file: !3, line: 574, type: !1337)
!1423 = !DILocalVariable(name: "ctx", scope: !1416, file: !3, line: 575, type: !585)
!1424 = !DILocalVariable(name: "res", scope: !1416, file: !3, line: 581, type: !16)
!1425 = !DILocation(line: 573, column: 54, scope: !1416)
!1426 = !DILocation(line: 573, column: 66, scope: !1416)
!1427 = !DILocation(line: 573, column: 76, scope: !1416)
!1428 = !DILocation(line: 573, column: 87, scope: !1416)
!1429 = !DILocation(line: 574, column: 62, scope: !1416)
!1430 = !DILocation(line: 574, column: 30, scope: !1416)
!1431 = !DILocation(line: 575, column: 5, scope: !1416)
!1432 = !DILocation(line: 575, column: 20, scope: !1416)
!1433 = !DILocation(line: 577, column: 22, scope: !1416)
!1434 = !DILocation(line: 577, column: 9, scope: !1416)
!1435 = !DILocation(line: 577, column: 16, scope: !1416)
!1436 = !DILocation(line: 578, column: 9, scope: !1416)
!1437 = !DILocation(line: 578, column: 16, scope: !1416)
!1438 = !DILocation(line: 579, column: 9, scope: !1416)
!1439 = !DILocation(line: 579, column: 15, scope: !1416)
!1440 = !DILocation(line: 580, column: 9, scope: !1416)
!1441 = !DILocation(line: 580, column: 19, scope: !1416)
!1442 = !DILocation(line: 580, column: 5, scope: !1416)
!1443 = !DILocation(line: 581, column: 20, scope: !1416)
!1444 = !{!891, !892, i64 80}
!1445 = !DILocation(line: 581, column: 10, scope: !1416)
!1446 = !DILocation(line: 582, column: 9, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1416, file: !3, line: 582, column: 9)
!1448 = !DILocation(line: 582, column: 9, scope: !1416)
!1449 = !DILocation(line: 582, column: 33, scope: !1447)
!1450 = !{!891, !895, i64 88}
!1451 = !DILocation(line: 582, column: 27, scope: !1447)
!1452 = !DILocation(line: 582, column: 18, scope: !1447)
!1453 = !DILocation(line: 583, column: 5, scope: !1416)
!1454 = !DILocation(line: 585, column: 1, scope: !1416)
!1455 = !DILocation(line: 584, column: 5, scope: !1416)
!1456 = distinct !DISubprogram(name: "RM_IsKeysPositionRequest", scope: !3, file: !3, line: 590, type: !1457, isLocal: false, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1459)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!17, !584}
!1459 = !{!1460}
!1460 = !DILocalVariable(name: "ctx", arg: 1, scope: !1456, file: !3, line: 590, type: !584)
!1461 = !DILocation(line: 590, column: 46, scope: !1456)
!1462 = !DILocation(line: 591, column: 18, scope: !1456)
!1463 = !DILocation(line: 591, column: 60, scope: !1456)
!1464 = !DILocation(line: 591, column: 5, scope: !1456)
!1465 = distinct !DISubprogram(name: "RM_KeyAtPos", scope: !3, file: !3, line: 608, type: !1466, isLocal: false, isDefinition: true, scopeLine: 608, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1468)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{null, !584, !17}
!1468 = !{!1469, !1470}
!1469 = !DILocalVariable(name: "ctx", arg: 1, scope: !1465, file: !3, line: 608, type: !584)
!1470 = !DILocalVariable(name: "pos", arg: 2, scope: !1465, file: !3, line: 608, type: !17)
!1471 = !DILocation(line: 608, column: 34, scope: !1465)
!1472 = !DILocation(line: 608, column: 43, scope: !1465)
!1473 = !DILocation(line: 609, column: 16, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 609, column: 9)
!1475 = !DILocation(line: 609, column: 22, scope: !1474)
!1476 = !DILocation(line: 610, column: 13, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 610, column: 9)
!1478 = !DILocation(line: 609, column: 9, scope: !1465)
!1479 = !DILocation(line: 611, column: 35, scope: !1465)
!1480 = !DILocation(line: 611, column: 62, scope: !1465)
!1481 = !DILocation(line: 611, column: 72, scope: !1465)
!1482 = !DILocation(line: 611, column: 56, scope: !1465)
!1483 = !DILocation(line: 611, column: 55, scope: !1465)
!1484 = !DILocation(line: 611, column: 21, scope: !1465)
!1485 = !DILocation(line: 611, column: 19, scope: !1465)
!1486 = !DILocation(line: 612, column: 34, scope: !1465)
!1487 = !DILocation(line: 612, column: 5, scope: !1465)
!1488 = !DILocation(line: 612, column: 38, scope: !1465)
!1489 = !DILocation(line: 613, column: 1, scope: !1465)
!1490 = distinct !DISubprogram(name: "commandFlagsFromString", scope: !3, file: !3, line: 619, type: !1491, isLocal: false, isDefinition: true, scopeLine: 619, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1493)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!17, !9}
!1493 = !{!1494, !1495, !1496, !1497, !1498, !1500}
!1494 = !DILocalVariable(name: "s", arg: 1, scope: !1490, file: !3, line: 619, type: !9)
!1495 = !DILocalVariable(name: "count", scope: !1490, file: !3, line: 620, type: !17)
!1496 = !DILocalVariable(name: "j", scope: !1490, file: !3, line: 620, type: !17)
!1497 = !DILocalVariable(name: "flags", scope: !1490, file: !3, line: 621, type: !17)
!1498 = !DILocalVariable(name: "tokens", scope: !1490, file: !3, line: 622, type: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!1500 = !DILocalVariable(name: "t", scope: !1501, file: !3, line: 624, type: !9)
!1501 = distinct !DILexicalBlock(scope: !1502, file: !3, line: 623, column: 33)
!1502 = distinct !DILexicalBlock(scope: !1503, file: !3, line: 623, column: 5)
!1503 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 623, column: 5)
!1504 = !DILocation(line: 619, column: 34, scope: !1490)
!1505 = !DILocation(line: 620, column: 5, scope: !1490)
!1506 = !DILocation(line: 621, column: 9, scope: !1490)
!1507 = !DILocation(line: 622, column: 33, scope: !1490)
!1508 = !DILocation(line: 620, column: 9, scope: !1490)
!1509 = !DILocation(line: 622, column: 19, scope: !1490)
!1510 = !DILocation(line: 622, column: 10, scope: !1490)
!1511 = !DILocation(line: 620, column: 16, scope: !1490)
!1512 = !DILocation(line: 623, column: 10, scope: !1503)
!1513 = !DILocation(line: 623, column: 21, scope: !1502)
!1514 = !DILocation(line: 623, column: 19, scope: !1502)
!1515 = !DILocation(line: 623, column: 5, scope: !1503)
!1516 = !DILocation(line: 624, column: 19, scope: !1501)
!1517 = !DILocation(line: 624, column: 15, scope: !1501)
!1518 = !DILocation(line: 625, column: 14, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1501, file: !3, line: 625, column: 13)
!1520 = !DILocation(line: 625, column: 13, scope: !1501)
!1521 = !DILocation(line: 626, column: 19, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1519, file: !3, line: 626, column: 18)
!1523 = !DILocation(line: 626, column: 18, scope: !1519)
!1524 = !DILocation(line: 627, column: 19, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1522, file: !3, line: 627, column: 18)
!1526 = !DILocation(line: 627, column: 18, scope: !1522)
!1527 = !DILocation(line: 628, column: 19, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1525, file: !3, line: 628, column: 18)
!1529 = !DILocation(line: 628, column: 18, scope: !1525)
!1530 = !DILocation(line: 629, column: 19, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1528, file: !3, line: 629, column: 18)
!1532 = !DILocation(line: 629, column: 18, scope: !1528)
!1533 = !DILocation(line: 630, column: 19, scope: !1534)
!1534 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 630, column: 18)
!1535 = !DILocation(line: 630, column: 18, scope: !1531)
!1536 = !DILocation(line: 631, column: 19, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1534, file: !3, line: 631, column: 18)
!1538 = !DILocation(line: 631, column: 18, scope: !1534)
!1539 = !DILocation(line: 632, column: 19, scope: !1540)
!1540 = distinct !DILexicalBlock(scope: !1537, file: !3, line: 632, column: 18)
!1541 = !DILocation(line: 632, column: 18, scope: !1537)
!1542 = !DILocation(line: 633, column: 19, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !1540, file: !3, line: 633, column: 18)
!1544 = !DILocation(line: 633, column: 18, scope: !1540)
!1545 = !DILocation(line: 634, column: 19, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 634, column: 18)
!1547 = !DILocation(line: 634, column: 18, scope: !1543)
!1548 = !DILocation(line: 635, column: 19, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1546, file: !3, line: 635, column: 18)
!1550 = !DILocation(line: 635, column: 18, scope: !1546)
!1551 = !DILocation(line: 636, column: 19, scope: !1552)
!1552 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 636, column: 18)
!1553 = !DILocation(line: 636, column: 18, scope: !1549)
!1554 = !DILocation(line: 637, column: 19, scope: !1555)
!1555 = distinct !DILexicalBlock(scope: !1552, file: !3, line: 637, column: 18)
!1556 = !DILocation(line: 637, column: 18, scope: !1552)
!1557 = !DILocation(line: 638, column: 14, scope: !1555)
!1558 = !DILocation(line: 0, scope: !1522)
!1559 = !DILocation(line: 639, column: 5, scope: !1502)
!1560 = !DILocation(line: 623, column: 29, scope: !1502)
!1561 = !DILocation(line: 623, column: 5, scope: !1502)
!1562 = distinct !{!1562, !1515, !1563}
!1563 = !DILocation(line: 639, column: 5, scope: !1503)
!1564 = !DILocation(line: 640, column: 5, scope: !1490)
!1565 = !DILocation(line: 641, column: 14, scope: !1566)
!1566 = distinct !DILexicalBlock(scope: !1490, file: !3, line: 641, column: 9)
!1567 = !DILocation(line: 641, column: 11, scope: !1566)
!1568 = !DILocation(line: 641, column: 9, scope: !1490)
!1569 = !DILocation(line: 0, scope: !1566)
!1570 = !DILocation(line: 642, column: 5, scope: !1490)
!1571 = !DILocation(line: 643, column: 1, scope: !1490)
!1572 = distinct !DISubprogram(name: "RM_CreateCommand", scope: !3, file: !3, line: 698, type: !1573, isLocal: false, isDefinition: true, scopeLine: 698, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1575)
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!17, !584, !523, !580, !523, !17, !17, !17}
!1575 = !{!1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586}
!1576 = !DILocalVariable(name: "ctx", arg: 1, scope: !1572, file: !3, line: 698, type: !584)
!1577 = !DILocalVariable(name: "name", arg: 2, scope: !1572, file: !3, line: 698, type: !523)
!1578 = !DILocalVariable(name: "cmdfunc", arg: 3, scope: !1572, file: !3, line: 698, type: !580)
!1579 = !DILocalVariable(name: "strflags", arg: 4, scope: !1572, file: !3, line: 698, type: !523)
!1580 = !DILocalVariable(name: "firstkey", arg: 5, scope: !1572, file: !3, line: 698, type: !17)
!1581 = !DILocalVariable(name: "lastkey", arg: 6, scope: !1572, file: !3, line: 698, type: !17)
!1582 = !DILocalVariable(name: "keystep", arg: 7, scope: !1572, file: !3, line: 698, type: !17)
!1583 = !DILocalVariable(name: "flags", scope: !1572, file: !3, line: 699, type: !17)
!1584 = !DILocalVariable(name: "rediscmd", scope: !1572, file: !3, line: 704, type: !18)
!1585 = !DILocalVariable(name: "cp", scope: !1572, file: !3, line: 705, type: !1337)
!1586 = !DILocalVariable(name: "cmdname", scope: !1572, file: !3, line: 706, type: !154)
!1587 = !DILocation(line: 698, column: 38, scope: !1572)
!1588 = !DILocation(line: 698, column: 55, scope: !1572)
!1589 = !DILocation(line: 698, column: 80, scope: !1572)
!1590 = !DILocation(line: 698, column: 101, scope: !1572)
!1591 = !DILocation(line: 698, column: 115, scope: !1572)
!1592 = !DILocation(line: 698, column: 129, scope: !1572)
!1593 = !DILocation(line: 698, column: 142, scope: !1572)
!1594 = !DILocation(line: 699, column: 17, scope: !1572)
!1595 = !DILocation(line: 699, column: 9, scope: !1572)
!1596 = !DILocation(line: 700, column: 9, scope: !1572)
!1597 = !DILocation(line: 701, column: 41, scope: !1598)
!1598 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 701, column: 9)
!1599 = !DILocation(line: 699, column: 28, scope: !1572)
!1600 = !DILocation(line: 700, column: 15, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 700, column: 9)
!1602 = !DILocation(line: 701, column: 16, scope: !1598)
!1603 = !DILocation(line: 701, column: 51, scope: !1598)
!1604 = !DILocation(line: 701, column: 44, scope: !1598)
!1605 = !DILocation(line: 706, column: 19, scope: !1572)
!1606 = !DILocation(line: 706, column: 9, scope: !1572)
!1607 = !DILocation(line: 709, column: 9, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1572, file: !3, line: 709, column: 9)
!1609 = !DILocation(line: 709, column: 32, scope: !1608)
!1610 = !DILocation(line: 709, column: 9, scope: !1572)
!1611 = !DILocation(line: 710, column: 9, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1608, file: !3, line: 709, column: 41)
!1613 = !DILocation(line: 711, column: 9, scope: !1612)
!1614 = !DILocation(line: 721, column: 10, scope: !1572)
!1615 = !DILocation(line: 705, column: 30, scope: !1572)
!1616 = !DILocation(line: 722, column: 23, scope: !1572)
!1617 = !DILocation(line: 722, column: 16, scope: !1572)
!1618 = !DILocation(line: 723, column: 9, scope: !1572)
!1619 = !DILocation(line: 723, column: 14, scope: !1572)
!1620 = !DILocation(line: 724, column: 20, scope: !1572)
!1621 = !DILocation(line: 724, column: 9, scope: !1572)
!1622 = !DILocation(line: 724, column: 18, scope: !1572)
!1623 = !{!1360, !892, i64 16}
!1624 = !DILocation(line: 725, column: 19, scope: !1572)
!1625 = !DILocation(line: 725, column: 24, scope: !1572)
!1626 = !{!1354, !892, i64 0}
!1627 = !DILocation(line: 726, column: 19, scope: !1572)
!1628 = !DILocation(line: 726, column: 24, scope: !1572)
!1629 = !{!1354, !892, i64 8}
!1630 = !DILocation(line: 727, column: 19, scope: !1572)
!1631 = !DILocation(line: 727, column: 25, scope: !1572)
!1632 = !{!1354, !895, i64 16}
!1633 = !DILocation(line: 728, column: 33, scope: !1572)
!1634 = !DILocation(line: 728, column: 19, scope: !1572)
!1635 = !DILocation(line: 728, column: 25, scope: !1572)
!1636 = !{!1354, !895, i64 32}
!1637 = !DILocation(line: 729, column: 19, scope: !1572)
!1638 = !DILocation(line: 729, column: 32, scope: !1572)
!1639 = !DILocation(line: 730, column: 19, scope: !1572)
!1640 = !DILocation(line: 730, column: 28, scope: !1572)
!1641 = !{!1354, !895, i64 48}
!1642 = !DILocation(line: 731, column: 19, scope: !1572)
!1643 = !DILocation(line: 731, column: 27, scope: !1572)
!1644 = !{!1354, !895, i64 52}
!1645 = !DILocation(line: 732, column: 19, scope: !1572)
!1646 = !DILocation(line: 732, column: 27, scope: !1572)
!1647 = !{!1354, !895, i64 56}
!1648 = !DILocation(line: 733, column: 19, scope: !1572)
!1649 = !DILocation(line: 733, column: 32, scope: !1572)
!1650 = !{!1052, !1052, i64 0}
!1651 = !DILocation(line: 735, column: 20, scope: !1572)
!1652 = !{!1050, !892, i64 56}
!1653 = !DILocation(line: 735, column: 29, scope: !1572)
!1654 = !DILocation(line: 735, column: 49, scope: !1572)
!1655 = !DILocation(line: 735, column: 5, scope: !1572)
!1656 = !DILocation(line: 736, column: 20, scope: !1572)
!1657 = !{!1050, !892, i64 64}
!1658 = !DILocation(line: 736, column: 34, scope: !1572)
!1659 = !DILocation(line: 736, column: 54, scope: !1572)
!1660 = !DILocation(line: 736, column: 5, scope: !1572)
!1661 = !DILocation(line: 737, column: 5, scope: !1572)
!1662 = !DILocation(line: 0, scope: !1572)
!1663 = !DILocation(line: 0, scope: !1612)
!1664 = !DILocation(line: 738, column: 1, scope: !1572)
!1665 = distinct !DISubprogram(name: "RM_SetModuleAttribs", scope: !3, file: !3, line: 744, type: !1666, isLocal: false, isDefinition: true, scopeLine: 744, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1668)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !584, !523, !17, !17}
!1668 = !{!1669, !1670, !1671, !1672, !1673}
!1669 = !DILocalVariable(name: "ctx", arg: 1, scope: !1665, file: !3, line: 744, type: !584)
!1670 = !DILocalVariable(name: "name", arg: 2, scope: !1665, file: !3, line: 744, type: !523)
!1671 = !DILocalVariable(name: "ver", arg: 3, scope: !1665, file: !3, line: 744, type: !17)
!1672 = !DILocalVariable(name: "apiver", arg: 4, scope: !1665, file: !3, line: 744, type: !17)
!1673 = !DILocalVariable(name: "module", scope: !1665, file: !3, line: 745, type: !577)
!1674 = !DILocation(line: 744, column: 42, scope: !1665)
!1675 = !DILocation(line: 744, column: 59, scope: !1665)
!1676 = !DILocation(line: 744, column: 69, scope: !1665)
!1677 = !DILocation(line: 744, column: 78, scope: !1665)
!1678 = !DILocation(line: 747, column: 14, scope: !1679)
!1679 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 747, column: 9)
!1680 = !DILocation(line: 747, column: 21, scope: !1679)
!1681 = !DILocation(line: 747, column: 9, scope: !1665)
!1682 = !DILocation(line: 748, column: 14, scope: !1665)
!1683 = !DILocation(line: 745, column: 18, scope: !1665)
!1684 = !DILocation(line: 749, column: 20, scope: !1665)
!1685 = !DILocation(line: 749, column: 13, scope: !1665)
!1686 = !DILocation(line: 749, column: 18, scope: !1665)
!1687 = !DILocation(line: 750, column: 13, scope: !1665)
!1688 = !DILocation(line: 750, column: 17, scope: !1665)
!1689 = !{!1174, !895, i64 16}
!1690 = !DILocation(line: 751, column: 13, scope: !1665)
!1691 = !DILocation(line: 751, column: 20, scope: !1665)
!1692 = !{!1174, !895, i64 20}
!1693 = !DILocation(line: 752, column: 21, scope: !1665)
!1694 = !DILocation(line: 752, column: 13, scope: !1665)
!1695 = !DILocation(line: 752, column: 19, scope: !1665)
!1696 = !{!1174, !892, i64 24}
!1697 = !DILocation(line: 753, column: 22, scope: !1665)
!1698 = !DILocation(line: 753, column: 13, scope: !1665)
!1699 = !DILocation(line: 753, column: 20, scope: !1665)
!1700 = !{!1174, !892, i64 32}
!1701 = !DILocation(line: 754, column: 21, scope: !1665)
!1702 = !DILocation(line: 754, column: 13, scope: !1665)
!1703 = !DILocation(line: 754, column: 19, scope: !1665)
!1704 = !{!1174, !892, i64 40}
!1705 = !DILocation(line: 755, column: 23, scope: !1665)
!1706 = !DILocation(line: 755, column: 13, scope: !1665)
!1707 = !DILocation(line: 755, column: 21, scope: !1665)
!1708 = !{!1174, !892, i64 48}
!1709 = !DILocation(line: 756, column: 13, scope: !1665)
!1710 = !DILocation(line: 756, column: 21, scope: !1665)
!1711 = !{!1174, !895, i64 56}
!1712 = !DILocation(line: 757, column: 17, scope: !1665)
!1713 = !DILocation(line: 758, column: 1, scope: !1665)
!1714 = !DILocation(line: 0, scope: !1679)
!1715 = distinct !DISubprogram(name: "RM_IsModuleNameBusy", scope: !3, file: !3, line: 762, type: !1716, isLocal: false, isDefinition: true, scopeLine: 762, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1718)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!17, !523}
!1718 = !{!1719, !1720, !1721}
!1719 = !DILocalVariable(name: "name", arg: 1, scope: !1715, file: !3, line: 762, type: !523)
!1720 = !DILocalVariable(name: "modulename", scope: !1715, file: !3, line: 763, type: !154)
!1721 = !DILocalVariable(name: "de", scope: !1715, file: !3, line: 764, type: !81)
!1722 = !DILocation(line: 762, column: 37, scope: !1715)
!1723 = !DILocation(line: 763, column: 22, scope: !1715)
!1724 = !DILocation(line: 763, column: 9, scope: !1715)
!1725 = !DILocation(line: 764, column: 30, scope: !1715)
!1726 = !DILocation(line: 764, column: 21, scope: !1715)
!1727 = !DILocation(line: 764, column: 16, scope: !1715)
!1728 = !DILocation(line: 765, column: 5, scope: !1715)
!1729 = !DILocation(line: 766, column: 15, scope: !1715)
!1730 = !DILocation(line: 766, column: 5, scope: !1715)
!1731 = distinct !DISubprogram(name: "RM_Milliseconds", scope: !3, file: !3, line: 770, type: !1732, isLocal: false, isDefinition: true, scopeLine: 770, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1732 = !DISubroutineType(types: !1733)
!1733 = !{!112}
!1734 = !DILocation(line: 771, column: 12, scope: !1731)
!1735 = !DILocation(line: 771, column: 5, scope: !1731)
!1736 = distinct !DISubprogram(name: "RM_AutoMemory", scope: !3, file: !3, line: 782, type: !880, isLocal: false, isDefinition: true, scopeLine: 782, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1737)
!1737 = !{!1738}
!1738 = !DILocalVariable(name: "ctx", arg: 1, scope: !1736, file: !3, line: 782, type: !584)
!1739 = !DILocation(line: 782, column: 36, scope: !1736)
!1740 = !DILocation(line: 783, column: 10, scope: !1736)
!1741 = !DILocation(line: 783, column: 16, scope: !1736)
!1742 = !DILocation(line: 784, column: 1, scope: !1736)
!1743 = distinct !DISubprogram(name: "autoMemoryAdd", scope: !3, file: !3, line: 787, type: !1744, isLocal: false, isDefinition: true, scopeLine: 787, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1746)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{null, !584, !17, !6}
!1746 = !{!1747, !1748, !1749}
!1747 = !DILocalVariable(name: "ctx", arg: 1, scope: !1743, file: !3, line: 787, type: !584)
!1748 = !DILocalVariable(name: "type", arg: 2, scope: !1743, file: !3, line: 787, type: !17)
!1749 = !DILocalVariable(name: "ptr", arg: 3, scope: !1743, file: !3, line: 787, type: !6)
!1750 = !DILocation(line: 787, column: 36, scope: !1743)
!1751 = !DILocation(line: 787, column: 45, scope: !1743)
!1752 = !DILocation(line: 787, column: 57, scope: !1743)
!1753 = !DILocation(line: 788, column: 16, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 788, column: 9)
!1755 = !DILocation(line: 788, column: 22, scope: !1754)
!1756 = !DILocation(line: 788, column: 9, scope: !1743)
!1757 = !DILocation(line: 789, column: 14, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1743, file: !3, line: 789, column: 9)
!1759 = !DILocation(line: 789, column: 35, scope: !1758)
!1760 = !DILocation(line: 789, column: 27, scope: !1758)
!1761 = !DILocation(line: 789, column: 9, scope: !1743)
!1762 = !DILocation(line: 794, column: 10, scope: !1743)
!1763 = !DILocation(line: 790, column: 26, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1758, file: !3, line: 789, column: 48)
!1765 = !DILocation(line: 791, column: 30, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1764, file: !3, line: 791, column: 13)
!1767 = !DILocation(line: 791, column: 13, scope: !1764)
!1768 = !DILocation(line: 791, column: 53, scope: !1766)
!1769 = !DILocation(line: 791, column: 36, scope: !1766)
!1770 = !DILocation(line: 792, column: 79, scope: !1764)
!1771 = !DILocation(line: 792, column: 38, scope: !1764)
!1772 = !DILocation(line: 792, column: 74, scope: !1764)
!1773 = !DILocation(line: 792, column: 73, scope: !1764)
!1774 = !DILocation(line: 792, column: 24, scope: !1764)
!1775 = !DILocation(line: 792, column: 22, scope: !1764)
!1776 = !DILocation(line: 793, column: 5, scope: !1764)
!1777 = !DILocation(line: 794, column: 23, scope: !1743)
!1778 = !DILocation(line: 794, column: 5, scope: !1743)
!1779 = !DILocation(line: 794, column: 37, scope: !1743)
!1780 = !DILocation(line: 794, column: 42, scope: !1743)
!1781 = !DILocation(line: 795, column: 37, scope: !1743)
!1782 = !DILocation(line: 795, column: 41, scope: !1743)
!1783 = !DILocation(line: 796, column: 22, scope: !1743)
!1784 = !DILocation(line: 797, column: 1, scope: !1743)
!1785 = distinct !DISubprogram(name: "autoMemoryFreed", scope: !3, file: !3, line: 804, type: !1786, isLocal: false, isDefinition: true, scopeLine: 804, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1788)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!17, !584, !17, !6}
!1788 = !{!1789, !1790, !1791, !1792, !1793, !1795, !1799}
!1789 = !DILocalVariable(name: "ctx", arg: 1, scope: !1785, file: !3, line: 804, type: !584)
!1790 = !DILocalVariable(name: "type", arg: 2, scope: !1785, file: !3, line: 804, type: !17)
!1791 = !DILocalVariable(name: "ptr", arg: 3, scope: !1785, file: !3, line: 804, type: !6)
!1792 = !DILocalVariable(name: "count", scope: !1785, file: !3, line: 807, type: !17)
!1793 = !DILocalVariable(name: "j", scope: !1794, file: !3, line: 808, type: !17)
!1794 = distinct !DILexicalBlock(scope: !1785, file: !3, line: 808, column: 5)
!1795 = !DILocalVariable(name: "side", scope: !1796, file: !3, line: 809, type: !17)
!1796 = distinct !DILexicalBlock(scope: !1797, file: !3, line: 809, column: 9)
!1797 = distinct !DILexicalBlock(scope: !1798, file: !3, line: 808, column: 37)
!1798 = distinct !DILexicalBlock(scope: !1794, file: !3, line: 808, column: 5)
!1799 = !DILocalVariable(name: "i", scope: !1800, file: !3, line: 812, type: !17)
!1800 = distinct !DILexicalBlock(scope: !1801, file: !3, line: 809, column: 46)
!1801 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 809, column: 9)
!1802 = !DILocation(line: 804, column: 37, scope: !1785)
!1803 = !DILocation(line: 804, column: 46, scope: !1785)
!1804 = !DILocation(line: 804, column: 58, scope: !1785)
!1805 = !DILocation(line: 805, column: 16, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1785, file: !3, line: 805, column: 9)
!1807 = !DILocation(line: 805, column: 22, scope: !1806)
!1808 = !DILocation(line: 805, column: 9, scope: !1785)
!1809 = !DILocation(line: 807, column: 23, scope: !1785)
!1810 = !DILocation(line: 807, column: 35, scope: !1785)
!1811 = !DILocation(line: 807, column: 38, scope: !1785)
!1812 = !DILocation(line: 807, column: 9, scope: !1785)
!1813 = !DILocation(line: 808, column: 14, scope: !1794)
!1814 = !DILocation(line: 808, column: 10, scope: !1794)
!1815 = !DILocation(line: 808, column: 23, scope: !1798)
!1816 = !DILocation(line: 808, column: 5, scope: !1794)
!1817 = !DILocation(line: 0, scope: !1794)
!1818 = !DILocation(line: 809, column: 18, scope: !1796)
!1819 = !DILocation(line: 809, column: 9, scope: !1796)
!1820 = !DILocation(line: 812, column: 21, scope: !1800)
!1821 = !DILocation(line: 812, column: 58, scope: !1800)
!1822 = !DILocation(line: 812, column: 17, scope: !1800)
!1823 = !DILocation(line: 813, column: 22, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 813, column: 17)
!1825 = !DILocation(line: 813, column: 17, scope: !1824)
!1826 = !DILocation(line: 813, column: 33, scope: !1824)
!1827 = !DILocation(line: 813, column: 38, scope: !1824)
!1828 = !DILocation(line: 813, column: 46, scope: !1824)
!1829 = !DILocation(line: 814, column: 33, scope: !1824)
!1830 = !DILocation(line: 814, column: 37, scope: !1824)
!1831 = !DILocation(line: 813, column: 17, scope: !1800)
!1832 = !DILocation(line: 816, column: 38, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1824, file: !3, line: 815, column: 13)
!1834 = !DILocation(line: 820, column: 43, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1833, file: !3, line: 820, column: 21)
!1836 = !DILocation(line: 820, column: 23, scope: !1835)
!1837 = !DILocation(line: 820, column: 21, scope: !1833)
!1838 = !DILocation(line: 821, column: 21, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1835, file: !3, line: 820, column: 47)
!1840 = !DILocation(line: 821, column: 39, scope: !1839)
!1841 = !{i64 0, i64 8, !902, i64 8, i64 4, !933}
!1842 = !DILocation(line: 822, column: 17, scope: !1839)
!1843 = !DILocation(line: 826, column: 34, scope: !1833)
!1844 = !DILocation(line: 827, column: 17, scope: !1833)
!1845 = !DILocation(line: 0, scope: !1833)
!1846 = !DILocation(line: 0, scope: !1806)
!1847 = !DILocation(line: 832, column: 1, scope: !1785)
!1848 = !DILocation(line: 829, column: 9, scope: !1801)
!1849 = !DILocation(line: 809, column: 9, scope: !1801)
!1850 = !DILocation(line: 808, column: 33, scope: !1798)
!1851 = !DILocation(line: 808, column: 5, scope: !1798)
!1852 = distinct !{!1852, !1816, !1853}
!1853 = !DILocation(line: 830, column: 5, scope: !1794)
!1854 = !DILocation(line: 2604, column: 45, scope: !1221)
!1855 = !DILocation(line: 2606, column: 34, scope: !1221)
!1856 = !DILocation(line: 2606, column: 21, scope: !1221)
!1857 = !DILocation(line: 2607, column: 5, scope: !1221)
!1858 = !DILocation(line: 2608, column: 46, scope: !1221)
!1859 = !DILocation(line: 2608, column: 5, scope: !1221)
!1860 = !DILocation(line: 2609, column: 1, scope: !1221)
!1861 = distinct !DISubprogram(name: "RM_CloseKey", scope: !3, file: !3, line: 1561, type: !1862, isLocal: false, isDefinition: true, scopeLine: 1561, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1864)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !991}
!1864 = !{!1865}
!1865 = !DILocalVariable(name: "key", arg: 1, scope: !1861, file: !3, line: 1561, type: !991)
!1866 = !DILocation(line: 1561, column: 34, scope: !1861)
!1867 = !DILocation(line: 1562, column: 13, scope: !1868)
!1868 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 1562, column: 9)
!1869 = !DILocation(line: 1562, column: 9, scope: !1861)
!1870 = !DILocation(line: 1563, column: 14, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1861, file: !3, line: 1563, column: 9)
!1872 = !DILocation(line: 1563, column: 19, scope: !1871)
!1873 = !DILocation(line: 1563, column: 9, scope: !1861)
!1874 = !DILocation(line: 1563, column: 63, scope: !1871)
!1875 = !DILocation(line: 1563, column: 71, scope: !1871)
!1876 = !DILocation(line: 1563, column: 40, scope: !1871)
!1877 = !DILocalVariable(name: "key", arg: 1, scope: !1878, file: !3, line: 1962, type: !991)
!1878 = distinct !DISubprogram(name: "RM_ZsetRangeStop", scope: !3, file: !3, line: 1962, type: !1862, isLocal: false, isDefinition: true, scopeLine: 1962, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1879)
!1879 = !{!1877}
!1880 = !DILocation(line: 1962, column: 39, scope: !1878, inlinedAt: !1881)
!1881 = distinct !DILocation(line: 1565, column: 5, scope: !1861)
!1882 = !DILocation(line: 1964, column: 14, scope: !1883, inlinedAt: !1881)
!1883 = distinct !DILexicalBlock(scope: !1878, file: !3, line: 1964, column: 9)
!1884 = !{!1031, !895, i64 44}
!1885 = !DILocation(line: 1964, column: 20, scope: !1883, inlinedAt: !1881)
!1886 = !DILocation(line: 1964, column: 9, scope: !1878, inlinedAt: !1881)
!1887 = !DILocation(line: 1965, column: 31, scope: !1883, inlinedAt: !1881)
!1888 = !DILocation(line: 1965, column: 9, scope: !1883, inlinedAt: !1881)
!1889 = !DILocalVariable(name: "key", arg: 1, scope: !1890, file: !3, line: 1955, type: !991)
!1890 = distinct !DISubprogram(name: "zsetKeyReset", scope: !3, file: !3, line: 1955, type: !1862, isLocal: true, isDefinition: true, scopeLine: 1955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1891)
!1891 = !{!1889}
!1892 = !DILocation(line: 1955, column: 35, scope: !1890, inlinedAt: !1893)
!1893 = distinct !DILocation(line: 1969, column: 5, scope: !1878, inlinedAt: !1881)
!1894 = !DILocation(line: 1956, column: 16, scope: !1890, inlinedAt: !1893)
!1895 = !DILocation(line: 1957, column: 10, scope: !1890, inlinedAt: !1893)
!1896 = !DILocation(line: 1957, column: 19, scope: !1890, inlinedAt: !1893)
!1897 = !{!1031, !892, i64 104}
!1898 = !DILocation(line: 1958, column: 10, scope: !1890, inlinedAt: !1893)
!1899 = !DILocation(line: 1958, column: 14, scope: !1890, inlinedAt: !1893)
!1900 = !{!1031, !895, i64 112}
!1901 = !DILocation(line: 1959, column: 1, scope: !1890, inlinedAt: !1893)
!1902 = !DILocation(line: 1970, column: 1, scope: !1878, inlinedAt: !1881)
!1903 = !DILocation(line: 1566, column: 23, scope: !1861)
!1904 = !DILocation(line: 1566, column: 5, scope: !1861)
!1905 = !DILocation(line: 1567, column: 26, scope: !1861)
!1906 = !{!1031, !892, i64 0}
!1907 = !DILocation(line: 1567, column: 49, scope: !1861)
!1908 = !DILocation(line: 1567, column: 5, scope: !1861)
!1909 = !DILocation(line: 1568, column: 5, scope: !1861)
!1910 = !DILocation(line: 1569, column: 1, scope: !1861)
!1911 = !DILocation(line: 4510, column: 34, scope: !1257)
!1912 = !DILocation(line: 4510, column: 56, scope: !1257)
!1913 = !DILocation(line: 4511, column: 13, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 4511, column: 9)
!1915 = !DILocation(line: 4511, column: 9, scope: !1257)
!1916 = !DILocation(line: 0, scope: !1914)
!1917 = !DILocation(line: 4511, column: 22, scope: !1914)
!1918 = !DILocation(line: 4512, column: 16, scope: !1257)
!1919 = !DILocation(line: 4512, column: 5, scope: !1257)
!1920 = !DILocation(line: 4513, column: 5, scope: !1257)
!1921 = !DILocation(line: 4514, column: 1, scope: !1257)
!1922 = distinct !DISubprogram(name: "RM_CreateString", scope: !3, file: !3, line: 872, type: !1923, isLocal: false, isDefinition: true, scopeLine: 872, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1925)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!143, !584, !523, !157}
!1925 = !{!1926, !1927, !1928, !1929}
!1926 = !DILocalVariable(name: "ctx", arg: 1, scope: !1922, file: !3, line: 872, type: !584)
!1927 = !DILocalVariable(name: "ptr", arg: 2, scope: !1922, file: !3, line: 872, type: !523)
!1928 = !DILocalVariable(name: "len", arg: 3, scope: !1922, file: !3, line: 872, type: !157)
!1929 = !DILocalVariable(name: "o", scope: !1922, file: !3, line: 873, type: !143)
!1930 = !DILocation(line: 872, column: 52, scope: !1922)
!1931 = !DILocation(line: 872, column: 69, scope: !1922)
!1932 = !DILocation(line: 872, column: 81, scope: !1922)
!1933 = !DILocation(line: 873, column: 28, scope: !1922)
!1934 = !DILocation(line: 873, column: 24, scope: !1922)
!1935 = !DILocation(line: 874, column: 13, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1922, file: !3, line: 874, column: 9)
!1937 = !DILocation(line: 874, column: 9, scope: !1922)
!1938 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !1939)
!1939 = distinct !DILocation(line: 874, column: 22, scope: !1936)
!1940 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !1939)
!1941 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !1939)
!1942 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !1939)
!1943 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !1939)
!1944 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !1939)
!1945 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !1939)
!1946 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !1939)
!1947 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !1939)
!1948 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !1939)
!1949 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !1939)
!1950 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !1939)
!1951 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !1939)
!1952 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !1939)
!1953 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !1939)
!1954 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !1939)
!1955 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !1939)
!1956 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !1939)
!1957 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !1939)
!1958 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !1939)
!1959 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !1939)
!1960 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !1939)
!1961 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !1939)
!1962 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !1939)
!1963 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !1939)
!1964 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !1939)
!1965 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !1939)
!1966 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !1939)
!1967 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !1939)
!1968 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !1939)
!1969 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !1939)
!1970 = !DILocation(line: 874, column: 22, scope: !1936)
!1971 = !DILocation(line: 875, column: 5, scope: !1922)
!1972 = distinct !DISubprogram(name: "RM_CreateStringPrintf", scope: !3, file: !3, line: 886, type: !1973, isLocal: false, isDefinition: true, scopeLine: 886, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1975)
!1973 = !DISubroutineType(types: !1974)
!1974 = !{!143, !584, !523, null}
!1975 = !{!1976, !1977, !1978, !1979, !1991}
!1976 = !DILocalVariable(name: "ctx", arg: 1, scope: !1972, file: !3, line: 886, type: !584)
!1977 = !DILocalVariable(name: "fmt", arg: 2, scope: !1972, file: !3, line: 886, type: !523)
!1978 = !DILocalVariable(name: "s", scope: !1972, file: !3, line: 887, type: !154)
!1979 = !DILocalVariable(name: "ap", scope: !1972, file: !3, line: 889, type: !1980)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !340, line: 46, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1982, line: 51, baseType: !1983)
!1982 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 889, baseType: !1984)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1985, size: 192, elements: !399)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 889, size: 192, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1985, file: !3, line: 889, baseType: !148, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1985, file: !3, line: 889, baseType: !148, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1985, file: !3, line: 889, baseType: !6, size: 64, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1985, file: !3, line: 889, baseType: !6, size: 64, offset: 128)
!1991 = !DILocalVariable(name: "o", scope: !1972, file: !3, line: 894, type: !143)
!1992 = !DILocation(line: 886, column: 58, scope: !1972)
!1993 = !DILocation(line: 886, column: 75, scope: !1972)
!1994 = !DILocation(line: 887, column: 13, scope: !1972)
!1995 = !DILocation(line: 887, column: 9, scope: !1972)
!1996 = !DILocation(line: 889, column: 5, scope: !1972)
!1997 = !DILocation(line: 889, column: 13, scope: !1972)
!1998 = !DILocation(line: 890, column: 5, scope: !1972)
!1999 = !DILocation(line: 891, column: 9, scope: !1972)
!2000 = !DILocation(line: 892, column: 5, scope: !1972)
!2001 = !DILocation(line: 894, column: 28, scope: !1972)
!2002 = !DILocation(line: 894, column: 24, scope: !1972)
!2003 = !DILocation(line: 895, column: 13, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1972, file: !3, line: 895, column: 9)
!2005 = !DILocation(line: 895, column: 9, scope: !1972)
!2006 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !2007)
!2007 = distinct !DILocation(line: 895, column: 22, scope: !2004)
!2008 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !2007)
!2009 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !2007)
!2010 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !2007)
!2011 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !2007)
!2012 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !2007)
!2013 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !2007)
!2014 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !2007)
!2015 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !2007)
!2016 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !2007)
!2017 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !2007)
!2018 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !2007)
!2019 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !2007)
!2020 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !2007)
!2021 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !2007)
!2022 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !2007)
!2023 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !2007)
!2024 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !2007)
!2025 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !2007)
!2026 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !2007)
!2027 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !2007)
!2028 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !2007)
!2029 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !2007)
!2030 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !2007)
!2031 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !2007)
!2032 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !2007)
!2033 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !2007)
!2034 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !2007)
!2035 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !2007)
!2036 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !2007)
!2037 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !2007)
!2038 = !DILocation(line: 895, column: 22, scope: !2004)
!2039 = !DILocation(line: 898, column: 1, scope: !1972)
!2040 = !DILocation(line: 897, column: 5, scope: !1972)
!2041 = distinct !DISubprogram(name: "RM_CreateStringFromLongLong", scope: !3, file: !3, line: 909, type: !2042, isLocal: false, isDefinition: true, scopeLine: 909, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2044)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!143, !584, !112}
!2044 = !{!2045, !2046, !2047, !2051}
!2045 = !DILocalVariable(name: "ctx", arg: 1, scope: !2041, file: !3, line: 909, type: !584)
!2046 = !DILocalVariable(name: "ll", arg: 2, scope: !2041, file: !3, line: 909, type: !112)
!2047 = !DILocalVariable(name: "buf", scope: !2041, file: !3, line: 910, type: !2048)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 168, elements: !2049)
!2049 = !{!2050}
!2050 = !DISubrange(count: 21)
!2051 = !DILocalVariable(name: "len", scope: !2041, file: !3, line: 911, type: !157)
!2052 = !DILocation(line: 909, column: 64, scope: !2041)
!2053 = !DILocation(line: 909, column: 79, scope: !2041)
!2054 = !DILocation(line: 910, column: 5, scope: !2041)
!2055 = !DILocation(line: 910, column: 10, scope: !2041)
!2056 = !DILocation(line: 911, column: 18, scope: !2041)
!2057 = !DILocation(line: 911, column: 12, scope: !2041)
!2058 = !DILocation(line: 912, column: 12, scope: !2041)
!2059 = !DILocation(line: 913, column: 1, scope: !2041)
!2060 = !DILocation(line: 912, column: 5, scope: !2041)
!2061 = distinct !DISubprogram(name: "RM_CreateStringFromString", scope: !3, file: !3, line: 923, type: !2062, isLocal: false, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2066)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!143, !584, !2064}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!2066 = !{!2067, !2068, !2069}
!2067 = !DILocalVariable(name: "ctx", arg: 1, scope: !2061, file: !3, line: 923, type: !584)
!2068 = !DILocalVariable(name: "str", arg: 2, scope: !2061, file: !3, line: 923, type: !2064)
!2069 = !DILocalVariable(name: "o", scope: !2061, file: !3, line: 924, type: !143)
!2070 = !DILocation(line: 923, column: 62, scope: !2061)
!2071 = !DILocation(line: 923, column: 92, scope: !2061)
!2072 = !DILocation(line: 924, column: 28, scope: !2061)
!2073 = !DILocation(line: 924, column: 24, scope: !2061)
!2074 = !DILocation(line: 925, column: 13, scope: !2075)
!2075 = distinct !DILexicalBlock(scope: !2061, file: !3, line: 925, column: 9)
!2076 = !DILocation(line: 925, column: 9, scope: !2061)
!2077 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !2078)
!2078 = distinct !DILocation(line: 925, column: 22, scope: !2075)
!2079 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !2078)
!2080 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !2078)
!2081 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !2078)
!2082 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !2078)
!2083 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !2078)
!2084 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !2078)
!2085 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !2078)
!2086 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !2078)
!2087 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !2078)
!2088 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !2078)
!2089 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !2078)
!2090 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !2078)
!2091 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !2078)
!2092 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !2078)
!2093 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !2078)
!2094 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !2078)
!2095 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !2078)
!2096 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !2078)
!2097 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !2078)
!2098 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !2078)
!2099 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !2078)
!2100 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !2078)
!2101 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !2078)
!2102 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !2078)
!2103 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !2078)
!2104 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !2078)
!2105 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !2078)
!2106 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !2078)
!2107 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !2078)
!2108 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !2078)
!2109 = !DILocation(line: 925, column: 22, scope: !2075)
!2110 = !DILocation(line: 926, column: 5, scope: !2061)
!2111 = distinct !DISubprogram(name: "RM_FreeString", scope: !3, file: !3, line: 941, type: !2112, isLocal: false, isDefinition: true, scopeLine: 941, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2114)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{null, !584, !143}
!2114 = !{!2115, !2116}
!2115 = !DILocalVariable(name: "ctx", arg: 1, scope: !2111, file: !3, line: 941, type: !584)
!2116 = !DILocalVariable(name: "str", arg: 2, scope: !2111, file: !3, line: 941, type: !143)
!2117 = !DILocation(line: 941, column: 36, scope: !2111)
!2118 = !DILocation(line: 941, column: 60, scope: !2111)
!2119 = !DILocation(line: 942, column: 5, scope: !2111)
!2120 = !DILocation(line: 943, column: 13, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2111, file: !3, line: 943, column: 9)
!2122 = !DILocation(line: 943, column: 9, scope: !2111)
!2123 = !DILocation(line: 943, column: 64, scope: !2121)
!2124 = !DILocation(line: 943, column: 22, scope: !2121)
!2125 = !DILocation(line: 944, column: 1, scope: !2111)
!2126 = distinct !DISubprogram(name: "RM_RetainString", scope: !3, file: !3, line: 970, type: !2112, isLocal: false, isDefinition: true, scopeLine: 970, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2127)
!2127 = !{!2128, !2129}
!2128 = !DILocalVariable(name: "ctx", arg: 1, scope: !2126, file: !3, line: 970, type: !584)
!2129 = !DILocalVariable(name: "str", arg: 2, scope: !2126, file: !3, line: 970, type: !143)
!2130 = !DILocation(line: 970, column: 38, scope: !2126)
!2131 = !DILocation(line: 970, column: 62, scope: !2126)
!2132 = !DILocation(line: 971, column: 13, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2126, file: !3, line: 971, column: 9)
!2134 = !DILocation(line: 971, column: 21, scope: !2133)
!2135 = !DILocation(line: 971, column: 67, scope: !2133)
!2136 = !DILocation(line: 971, column: 25, scope: !2133)
!2137 = !DILocation(line: 971, column: 9, scope: !2126)
!2138 = !DILocation(line: 981, column: 9, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2133, file: !3, line: 971, column: 73)
!2140 = !DILocation(line: 982, column: 5, scope: !2139)
!2141 = !DILocation(line: 983, column: 1, scope: !2126)
!2142 = distinct !DISubprogram(name: "RM_StringPtrLen", scope: !3, file: !3, line: 988, type: !2143, isLocal: false, isDefinition: true, scopeLine: 988, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2146)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!523, !2064, !2145}
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!2146 = !{!2147, !2148, !2149}
!2147 = !DILocalVariable(name: "str", arg: 1, scope: !2142, file: !3, line: 988, type: !2064)
!2148 = !DILocalVariable(name: "len", arg: 2, scope: !2142, file: !3, line: 988, type: !2145)
!2149 = !DILocalVariable(name: "errmsg", scope: !2150, file: !3, line: 990, type: !523)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 989, column: 22)
!2151 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 989, column: 9)
!2152 = !DILocation(line: 988, column: 54, scope: !2142)
!2153 = !DILocation(line: 988, column: 67, scope: !2142)
!2154 = !DILocation(line: 989, column: 13, scope: !2151)
!2155 = !DILocation(line: 989, column: 9, scope: !2142)
!2156 = !DILocation(line: 0, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 994, column: 9)
!2158 = !DILocation(line: 0, scope: !2142)
!2159 = !DILocation(line: 991, column: 13, scope: !2150)
!2160 = !DILocation(line: 991, column: 25, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2150, file: !3, line: 991, column: 13)
!2162 = !DILocation(line: 991, column: 23, scope: !2161)
!2163 = !{!1051, !1051, i64 0}
!2164 = !DILocation(line: 991, column: 18, scope: !2161)
!2165 = !DILocation(line: 994, column: 9, scope: !2142)
!2166 = !DILocalVariable(name: "s", arg: 1, scope: !2167, file: !155, line: 87, type: !2170)
!2167 = distinct !DISubprogram(name: "sdslen", scope: !155, file: !155, line: 87, type: !2168, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2171)
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!304, !2170}
!2170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!2171 = !{!2166, !2172}
!2172 = !DILocalVariable(name: "flags", scope: !2167, file: !155, line: 88, type: !347)
!2173 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !2174)
!2174 = distinct !DILocation(line: 994, column: 21, scope: !2157)
!2175 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !2174)
!2176 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !2174)
!2177 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !2174)
!2178 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !2174)
!2179 = distinct !DILexicalBlock(scope: !2167, file: !155, line: 89, column: 33)
!2180 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !2174)
!2181 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !2174)
!2182 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !2174)
!2183 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !2174)
!2184 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !2174)
!2185 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !2174)
!2186 = !{!2187, !2187, i64 0}
!2187 = !{!"short", !893, i64 0}
!2188 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !2174)
!2189 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !2174)
!2190 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !2174)
!2191 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !2174)
!2192 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !2174)
!2193 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !2174)
!2194 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !2174)
!2195 = !DILocation(line: 0, scope: !2179, inlinedAt: !2174)
!2196 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !2174)
!2197 = !DILocation(line: 994, column: 19, scope: !2157)
!2198 = !DILocation(line: 994, column: 14, scope: !2157)
!2199 = !DILocation(line: 996, column: 1, scope: !2142)
!2200 = distinct !DISubprogram(name: "RM_StringToLongLong", scope: !3, file: !3, line: 1006, type: !2201, isLocal: false, isDefinition: true, scopeLine: 1006, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2204)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!17, !2064, !2203}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!2204 = !{!2205, !2206}
!2205 = !DILocalVariable(name: "str", arg: 1, scope: !2200, file: !3, line: 1006, type: !2064)
!2206 = !DILocalVariable(name: "ll", arg: 2, scope: !2200, file: !3, line: 1006, type: !2203)
!2207 = !DILocation(line: 1006, column: 50, scope: !2200)
!2208 = !DILocation(line: 1006, column: 66, scope: !2200)
!2209 = !DILocation(line: 1007, column: 27, scope: !2200)
!2210 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !2211)
!2211 = distinct !DILocation(line: 1007, column: 31, scope: !2200)
!2212 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !2211)
!2213 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !2211)
!2214 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !2211)
!2215 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !2211)
!2216 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !2211)
!2217 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !2211)
!2218 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !2211)
!2219 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !2211)
!2220 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !2211)
!2221 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !2211)
!2222 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !2211)
!2223 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !2211)
!2224 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !2211)
!2225 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !2211)
!2226 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !2211)
!2227 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !2211)
!2228 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !2211)
!2229 = !DILocation(line: 0, scope: !2179, inlinedAt: !2211)
!2230 = !DILocation(line: 0, scope: !2200)
!2231 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !2211)
!2232 = !DILocation(line: 1007, column: 12, scope: !2200)
!2233 = !DILocation(line: 1007, column: 5, scope: !2200)
!2234 = distinct !DISubprogram(name: "RM_StringToDouble", scope: !3, file: !3, line: 1014, type: !2235, isLocal: false, isDefinition: true, scopeLine: 1014, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2238)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!17, !2064, !2237}
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!2238 = !{!2239, !2240, !2241}
!2239 = !DILocalVariable(name: "str", arg: 1, scope: !2234, file: !3, line: 1014, type: !2064)
!2240 = !DILocalVariable(name: "d", arg: 2, scope: !2234, file: !3, line: 1014, type: !2237)
!2241 = !DILocalVariable(name: "retval", scope: !2234, file: !3, line: 1015, type: !17)
!2242 = !DILocation(line: 1014, column: 48, scope: !2234)
!2243 = !DILocation(line: 1014, column: 61, scope: !2234)
!2244 = !DILocation(line: 1015, column: 18, scope: !2234)
!2245 = !DILocation(line: 1015, column: 9, scope: !2234)
!2246 = !DILocation(line: 1016, column: 20, scope: !2234)
!2247 = !DILocation(line: 1016, column: 12, scope: !2234)
!2248 = !DILocation(line: 1016, column: 5, scope: !2234)
!2249 = distinct !DISubprogram(name: "RM_StringCompare", scope: !3, file: !3, line: 1022, type: !2250, isLocal: false, isDefinition: true, scopeLine: 1022, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2252)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!17, !143, !143}
!2252 = !{!2253, !2254}
!2253 = !DILocalVariable(name: "a", arg: 1, scope: !2249, file: !3, line: 1022, type: !143)
!2254 = !DILocalVariable(name: "b", arg: 2, scope: !2249, file: !3, line: 1022, type: !143)
!2255 = !DILocation(line: 1022, column: 41, scope: !2249)
!2256 = !DILocation(line: 1022, column: 63, scope: !2249)
!2257 = !DILocation(line: 1023, column: 12, scope: !2249)
!2258 = !DILocation(line: 1023, column: 5, scope: !2249)
!2259 = distinct !DISubprogram(name: "moduleAssertUnsharedString", scope: !3, file: !3, line: 1028, type: !2260, isLocal: false, isDefinition: true, scopeLine: 1028, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2262)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!143, !143}
!2262 = !{!2263}
!2263 = !DILocalVariable(name: "str", arg: 1, scope: !2259, file: !3, line: 1028, type: !143)
!2264 = !DILocation(line: 1028, column: 66, scope: !2259)
!2265 = !DILocation(line: 1029, column: 14, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 1029, column: 9)
!2267 = !DILocation(line: 1029, column: 23, scope: !2266)
!2268 = !DILocation(line: 1029, column: 9, scope: !2259)
!2269 = !DILocation(line: 1030, column: 9, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2266, file: !3, line: 1029, column: 29)
!2271 = !DILocation(line: 1034, column: 9, scope: !2270)
!2272 = !DILocation(line: 1036, column: 14, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 1036, column: 9)
!2274 = !DILocation(line: 1036, column: 23, scope: !2273)
!2275 = !DILocation(line: 1036, column: 9, scope: !2259)
!2276 = !DILocation(line: 1039, column: 35, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 1036, column: 47)
!2278 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !2279)
!2279 = distinct !DILocation(line: 1039, column: 39, scope: !2277)
!2280 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !2279)
!2281 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !2279)
!2282 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !2279)
!2283 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !2279)
!2284 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !2279)
!2285 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !2279)
!2286 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !2279)
!2287 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !2279)
!2288 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !2279)
!2289 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !2279)
!2290 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !2279)
!2291 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !2279)
!2292 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !2279)
!2293 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !2279)
!2294 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !2279)
!2295 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !2279)
!2296 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !2279)
!2297 = !DILocation(line: 0, scope: !2179, inlinedAt: !2279)
!2298 = !DILocation(line: 0, scope: !2277)
!2299 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !2279)
!2300 = !DILocation(line: 1039, column: 20, scope: !2277)
!2301 = !DILocation(line: 1039, column: 18, scope: !2277)
!2302 = !DILocation(line: 1041, column: 5, scope: !2277)
!2303 = !DILocation(line: 1041, column: 30, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2273, file: !3, line: 1041, column: 16)
!2305 = !DILocation(line: 1041, column: 16, scope: !2273)
!2306 = !DILocation(line: 1043, column: 47, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2304, file: !3, line: 1041, column: 51)
!2308 = !DILocation(line: 1043, column: 20, scope: !2307)
!2309 = !DILocation(line: 1043, column: 18, scope: !2307)
!2310 = !DILocation(line: 1045, column: 5, scope: !2307)
!2311 = !DILocation(line: 1046, column: 5, scope: !2259)
!2312 = !DILocation(line: 0, scope: !2259)
!2313 = !DILocation(line: 0, scope: !2270)
!2314 = !DILocation(line: 1047, column: 1, scope: !2259)
!2315 = distinct !DISubprogram(name: "RM_StringAppendBuffer", scope: !3, file: !3, line: 1052, type: !2316, isLocal: false, isDefinition: true, scopeLine: 1052, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2318)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!17, !584, !143, !523, !157}
!2318 = !{!2319, !2320, !2321, !2322}
!2319 = !DILocalVariable(name: "ctx", arg: 1, scope: !2315, file: !3, line: 1052, type: !584)
!2320 = !DILocalVariable(name: "str", arg: 2, scope: !2315, file: !3, line: 1052, type: !143)
!2321 = !DILocalVariable(name: "buf", arg: 3, scope: !2315, file: !3, line: 1052, type: !523)
!2322 = !DILocalVariable(name: "len", arg: 4, scope: !2315, file: !3, line: 1052, type: !157)
!2323 = !DILocation(line: 1052, column: 43, scope: !2315)
!2324 = !DILocation(line: 1052, column: 67, scope: !2315)
!2325 = !DILocation(line: 1052, column: 84, scope: !2315)
!2326 = !DILocation(line: 1052, column: 96, scope: !2315)
!2327 = !DILocation(line: 1054, column: 11, scope: !2315)
!2328 = !DILocation(line: 1055, column: 13, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2315, file: !3, line: 1055, column: 9)
!2330 = !DILocation(line: 1055, column: 9, scope: !2315)
!2331 = !DILocation(line: 1056, column: 31, scope: !2315)
!2332 = !DILocation(line: 1056, column: 16, scope: !2315)
!2333 = !DILocation(line: 1056, column: 14, scope: !2315)
!2334 = !DILocation(line: 1057, column: 5, scope: !2315)
!2335 = !DILocation(line: 0, scope: !2315)
!2336 = !DILocation(line: 0, scope: !2329)
!2337 = !DILocation(line: 1058, column: 1, scope: !2315)
!2338 = distinct !DISubprogram(name: "RM_WrongArity", scope: !3, file: !3, line: 1077, type: !1457, isLocal: false, isDefinition: true, scopeLine: 1077, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2339)
!2339 = !{!2340}
!2340 = !DILocalVariable(name: "ctx", arg: 1, scope: !2338, file: !3, line: 1077, type: !584)
!2341 = !DILocation(line: 1077, column: 35, scope: !2338)
!2342 = !DILocation(line: 1078, column: 30, scope: !2338)
!2343 = !DILocation(line: 1080, column: 29, scope: !2338)
!2344 = !DILocation(line: 1080, column: 16, scope: !2338)
!2345 = !DILocation(line: 1080, column: 38, scope: !2338)
!2346 = !DILocation(line: 1078, column: 5, scope: !2338)
!2347 = !DILocation(line: 1081, column: 5, scope: !2338)
!2348 = distinct !DISubprogram(name: "moduleGetReplyClient", scope: !3, file: !3, line: 1098, type: !2349, isLocal: false, isDefinition: true, scopeLine: 1098, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2351)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!27, !584}
!2351 = !{!2352}
!2352 = !DILocalVariable(name: "ctx", arg: 1, scope: !2348, file: !3, line: 1098, type: !584)
!2353 = !DILocation(line: 1098, column: 46, scope: !2348)
!2354 = !DILocation(line: 1099, column: 14, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 1099, column: 9)
!2356 = !DILocation(line: 1099, column: 20, scope: !2355)
!2357 = !DILocation(line: 1099, column: 9, scope: !2348)
!2358 = !DILocation(line: 1100, column: 18, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 1100, column: 13)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 1099, column: 51)
!2361 = !{!891, !892, i64 24}
!2362 = !DILocation(line: 1100, column: 13, scope: !2359)
!2363 = !DILocation(line: 1100, column: 13, scope: !2360)
!2364 = !DILocation(line: 1101, column: 41, scope: !2359)
!2365 = !DILocation(line: 1101, column: 13, scope: !2359)
!2366 = !DILocation(line: 1109, column: 21, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 1104, column: 12)
!2368 = !DILocation(line: 1109, column: 9, scope: !2367)
!2369 = !DILocation(line: 0, scope: !2359)
!2370 = !DILocation(line: 0, scope: !2367)
!2371 = !DILocation(line: 1111, column: 1, scope: !2348)
!2372 = distinct !DISubprogram(name: "RM_ReplyWithLongLong", scope: !3, file: !3, line: 1115, type: !2373, isLocal: false, isDefinition: true, scopeLine: 1115, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2375)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{!17, !584, !112}
!2375 = !{!2376, !2377, !2378}
!2376 = !DILocalVariable(name: "ctx", arg: 1, scope: !2372, file: !3, line: 1115, type: !584)
!2377 = !DILocalVariable(name: "ll", arg: 2, scope: !2372, file: !3, line: 1115, type: !112)
!2378 = !DILocalVariable(name: "c", scope: !2372, file: !3, line: 1116, type: !27)
!2379 = !DILocation(line: 1115, column: 42, scope: !2372)
!2380 = !DILocation(line: 1115, column: 57, scope: !2372)
!2381 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2382)
!2382 = distinct !DILocation(line: 1116, column: 17, scope: !2372)
!2383 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2382)
!2384 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2382)
!2385 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2382)
!2386 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2382)
!2387 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2382)
!2388 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2382)
!2389 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2382)
!2390 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2382)
!2391 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2382)
!2392 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2382)
!2393 = !DILocation(line: 1116, column: 13, scope: !2372)
!2394 = !DILocation(line: 1117, column: 9, scope: !2372)
!2395 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2382)
!2396 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2382)
!2397 = !DILocation(line: 0, scope: !2372)
!2398 = !DILocation(line: 1117, column: 11, scope: !2399)
!2399 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 1117, column: 9)
!2400 = !DILocation(line: 1118, column: 5, scope: !2372)
!2401 = !DILocation(line: 1119, column: 5, scope: !2372)
!2402 = !DILocation(line: 0, scope: !2399)
!2403 = !DILocation(line: 1120, column: 1, scope: !2372)
!2404 = distinct !DISubprogram(name: "replyWithStatus", scope: !3, file: !3, line: 1125, type: !2405, isLocal: false, isDefinition: true, scopeLine: 1125, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2407)
!2405 = !DISubroutineType(types: !2406)
!2406 = !{!17, !584, !523, !9}
!2407 = !{!2408, !2409, !2410, !2411, !2412}
!2408 = !DILocalVariable(name: "ctx", arg: 1, scope: !2404, file: !3, line: 1125, type: !584)
!2409 = !DILocalVariable(name: "msg", arg: 2, scope: !2404, file: !3, line: 1125, type: !523)
!2410 = !DILocalVariable(name: "prefix", arg: 3, scope: !2404, file: !3, line: 1125, type: !9)
!2411 = !DILocalVariable(name: "c", scope: !2404, file: !3, line: 1126, type: !27)
!2412 = !DILocalVariable(name: "strmsg", scope: !2404, file: !3, line: 1128, type: !154)
!2413 = !DILocation(line: 1125, column: 37, scope: !2404)
!2414 = !DILocation(line: 1125, column: 54, scope: !2404)
!2415 = !DILocation(line: 1125, column: 65, scope: !2404)
!2416 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2417)
!2417 = distinct !DILocation(line: 1126, column: 17, scope: !2404)
!2418 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2417)
!2419 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2417)
!2420 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2417)
!2421 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2417)
!2422 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2417)
!2423 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2417)
!2424 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2417)
!2425 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2417)
!2426 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2417)
!2427 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2417)
!2428 = !DILocation(line: 1126, column: 13, scope: !2404)
!2429 = !DILocation(line: 1127, column: 9, scope: !2404)
!2430 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2417)
!2431 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2417)
!2432 = !DILocation(line: 0, scope: !2404)
!2433 = !DILocation(line: 1127, column: 11, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2404, file: !3, line: 1127, column: 9)
!2435 = !DILocation(line: 1128, column: 18, scope: !2404)
!2436 = !DILocation(line: 1128, column: 9, scope: !2404)
!2437 = !DILocation(line: 1129, column: 14, scope: !2404)
!2438 = !DILocation(line: 1130, column: 14, scope: !2404)
!2439 = !DILocation(line: 1131, column: 5, scope: !2404)
!2440 = !DILocation(line: 1133, column: 1, scope: !2404)
!2441 = distinct !DISubprogram(name: "RM_ReplyWithError", scope: !3, file: !3, line: 1149, type: !2442, isLocal: false, isDefinition: true, scopeLine: 1149, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2444)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!17, !584, !523}
!2444 = !{!2445, !2446}
!2445 = !DILocalVariable(name: "ctx", arg: 1, scope: !2441, file: !3, line: 1149, type: !584)
!2446 = !DILocalVariable(name: "err", arg: 2, scope: !2441, file: !3, line: 1149, type: !523)
!2447 = !DILocation(line: 1149, column: 39, scope: !2441)
!2448 = !DILocation(line: 1149, column: 56, scope: !2441)
!2449 = !DILocation(line: 1150, column: 12, scope: !2441)
!2450 = !DILocation(line: 1150, column: 5, scope: !2441)
!2451 = distinct !DISubprogram(name: "RM_ReplyWithSimpleString", scope: !3, file: !3, line: 1158, type: !2442, isLocal: false, isDefinition: true, scopeLine: 1158, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2452)
!2452 = !{!2453, !2454}
!2453 = !DILocalVariable(name: "ctx", arg: 1, scope: !2451, file: !3, line: 1158, type: !584)
!2454 = !DILocalVariable(name: "msg", arg: 2, scope: !2451, file: !3, line: 1158, type: !523)
!2455 = !DILocation(line: 1158, column: 46, scope: !2451)
!2456 = !DILocation(line: 1158, column: 63, scope: !2451)
!2457 = !DILocation(line: 1159, column: 12, scope: !2451)
!2458 = !DILocation(line: 1159, column: 5, scope: !2451)
!2459 = distinct !DISubprogram(name: "RM_ReplyWithArray", scope: !3, file: !3, line: 1173, type: !2460, isLocal: false, isDefinition: true, scopeLine: 1173, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2462)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!17, !584, !94}
!2462 = !{!2463, !2464, !2465}
!2463 = !DILocalVariable(name: "ctx", arg: 1, scope: !2459, file: !3, line: 1173, type: !584)
!2464 = !DILocalVariable(name: "len", arg: 2, scope: !2459, file: !3, line: 1173, type: !94)
!2465 = !DILocalVariable(name: "c", scope: !2459, file: !3, line: 1174, type: !27)
!2466 = !DILocation(line: 1173, column: 39, scope: !2459)
!2467 = !DILocation(line: 1173, column: 49, scope: !2459)
!2468 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2469)
!2469 = distinct !DILocation(line: 1174, column: 17, scope: !2459)
!2470 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2469)
!2471 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2469)
!2472 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2469)
!2473 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2469)
!2474 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2469)
!2475 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2469)
!2476 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2469)
!2477 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2469)
!2478 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2469)
!2479 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2469)
!2480 = !DILocation(line: 1174, column: 13, scope: !2459)
!2481 = !DILocation(line: 1175, column: 9, scope: !2459)
!2482 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2469)
!2483 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2469)
!2484 = !DILocation(line: 0, scope: !2459)
!2485 = !DILocation(line: 1175, column: 11, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 1175, column: 9)
!2487 = !DILocation(line: 1176, column: 13, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 1176, column: 9)
!2489 = !DILocation(line: 1176, column: 9, scope: !2459)
!2490 = !DILocation(line: 1177, column: 47, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 1176, column: 49)
!2492 = !DILocation(line: 1178, column: 23, scope: !2491)
!2493 = !DILocation(line: 1178, column: 45, scope: !2491)
!2494 = !DILocation(line: 1178, column: 17, scope: !2491)
!2495 = !DILocation(line: 1177, column: 77, scope: !2491)
!2496 = !DILocation(line: 1177, column: 33, scope: !2491)
!2497 = !DILocation(line: 1177, column: 31, scope: !2491)
!2498 = !DILocation(line: 1180, column: 13, scope: !2491)
!2499 = !DILocation(line: 1179, column: 14, scope: !2491)
!2500 = !DILocation(line: 1179, column: 36, scope: !2491)
!2501 = !DILocation(line: 1179, column: 9, scope: !2491)
!2502 = !DILocation(line: 1179, column: 60, scope: !2491)
!2503 = !DILocation(line: 1181, column: 36, scope: !2491)
!2504 = !DILocation(line: 1182, column: 5, scope: !2491)
!2505 = !DILocation(line: 1183, column: 9, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 1182, column: 12)
!2507 = !DILocation(line: 0, scope: !2486)
!2508 = !DILocation(line: 1186, column: 1, scope: !2459)
!2509 = distinct !DISubprogram(name: "RM_ReplySetArrayLength", scope: !3, file: !3, line: 1214, type: !2510, isLocal: false, isDefinition: true, scopeLine: 1214, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2512)
!2510 = !DISubroutineType(types: !2511)
!2511 = !{null, !584, !94}
!2512 = !{!2513, !2514, !2515}
!2513 = !DILocalVariable(name: "ctx", arg: 1, scope: !2509, file: !3, line: 1214, type: !584)
!2514 = !DILocalVariable(name: "len", arg: 2, scope: !2509, file: !3, line: 1214, type: !94)
!2515 = !DILocalVariable(name: "c", scope: !2509, file: !3, line: 1215, type: !27)
!2516 = !DILocation(line: 1214, column: 45, scope: !2509)
!2517 = !DILocation(line: 1214, column: 55, scope: !2509)
!2518 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2519)
!2519 = distinct !DILocation(line: 1215, column: 17, scope: !2509)
!2520 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2519)
!2521 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2519)
!2522 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2519)
!2523 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2519)
!2524 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2519)
!2525 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2519)
!2526 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2519)
!2527 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2519)
!2528 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2519)
!2529 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2519)
!2530 = !DILocation(line: 1215, column: 13, scope: !2509)
!2531 = !DILocation(line: 1216, column: 9, scope: !2509)
!2532 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2519)
!2533 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2519)
!2534 = !DILocation(line: 0, scope: !2509)
!2535 = !DILocation(line: 1216, column: 11, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 1216, column: 9)
!2537 = !DILocation(line: 1217, column: 14, scope: !2538)
!2538 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 1217, column: 9)
!2539 = !DILocation(line: 1217, column: 37, scope: !2538)
!2540 = !DILocation(line: 1217, column: 9, scope: !2509)
!2541 = !DILocation(line: 1222, column: 27, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2538, file: !3, line: 1217, column: 43)
!2543 = !DILocation(line: 1222, column: 35, scope: !2542)
!2544 = !DILocation(line: 1218, column: 9, scope: !2542)
!2545 = !DILocation(line: 1223, column: 13, scope: !2542)
!2546 = !DILocation(line: 1225, column: 32, scope: !2509)
!2547 = !DILocation(line: 1227, column: 18, scope: !2509)
!2548 = !DILocation(line: 1227, column: 13, scope: !2509)
!2549 = !DILocation(line: 1226, column: 5, scope: !2509)
!2550 = !DILocation(line: 1229, column: 14, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 1229, column: 9)
!2552 = !DILocation(line: 1229, column: 37, scope: !2551)
!2553 = !DILocation(line: 1229, column: 9, scope: !2509)
!2554 = !DILocation(line: 1230, column: 20, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 1229, column: 43)
!2556 = !DILocation(line: 1230, column: 9, scope: !2555)
!2557 = !DILocation(line: 1231, column: 31, scope: !2555)
!2558 = !DILocation(line: 1232, column: 5, scope: !2555)
!2559 = !DILocation(line: 0, scope: !2536)
!2560 = !DILocation(line: 1233, column: 1, scope: !2509)
!2561 = distinct !DISubprogram(name: "RM_ReplyWithStringBuffer", scope: !3, file: !3, line: 1238, type: !2562, isLocal: false, isDefinition: true, scopeLine: 1238, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2564)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!17, !584, !523, !157}
!2564 = !{!2565, !2566, !2567, !2568}
!2565 = !DILocalVariable(name: "ctx", arg: 1, scope: !2561, file: !3, line: 1238, type: !584)
!2566 = !DILocalVariable(name: "buf", arg: 2, scope: !2561, file: !3, line: 1238, type: !523)
!2567 = !DILocalVariable(name: "len", arg: 3, scope: !2561, file: !3, line: 1238, type: !157)
!2568 = !DILocalVariable(name: "c", scope: !2561, file: !3, line: 1239, type: !27)
!2569 = !DILocation(line: 1238, column: 46, scope: !2561)
!2570 = !DILocation(line: 1238, column: 63, scope: !2561)
!2571 = !DILocation(line: 1238, column: 75, scope: !2561)
!2572 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2573)
!2573 = distinct !DILocation(line: 1239, column: 17, scope: !2561)
!2574 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2573)
!2575 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2573)
!2576 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2573)
!2577 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2573)
!2578 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2573)
!2579 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2573)
!2580 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2573)
!2581 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2573)
!2582 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2573)
!2583 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2573)
!2584 = !DILocation(line: 1239, column: 13, scope: !2561)
!2585 = !DILocation(line: 1240, column: 9, scope: !2561)
!2586 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2573)
!2587 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2573)
!2588 = !DILocation(line: 0, scope: !2561)
!2589 = !DILocation(line: 1240, column: 11, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 1240, column: 9)
!2591 = !DILocation(line: 1241, column: 5, scope: !2561)
!2592 = !DILocation(line: 1242, column: 5, scope: !2561)
!2593 = !DILocation(line: 0, scope: !2590)
!2594 = !DILocation(line: 1243, column: 1, scope: !2561)
!2595 = distinct !DISubprogram(name: "RM_ReplyWithCString", scope: !3, file: !3, line: 1249, type: !2442, isLocal: false, isDefinition: true, scopeLine: 1249, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2596)
!2596 = !{!2597, !2598, !2599}
!2597 = !DILocalVariable(name: "ctx", arg: 1, scope: !2595, file: !3, line: 1249, type: !584)
!2598 = !DILocalVariable(name: "buf", arg: 2, scope: !2595, file: !3, line: 1249, type: !523)
!2599 = !DILocalVariable(name: "c", scope: !2595, file: !3, line: 1250, type: !27)
!2600 = !DILocation(line: 1249, column: 41, scope: !2595)
!2601 = !DILocation(line: 1249, column: 58, scope: !2595)
!2602 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2603)
!2603 = distinct !DILocation(line: 1250, column: 17, scope: !2595)
!2604 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2603)
!2605 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2603)
!2606 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2603)
!2607 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2603)
!2608 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2603)
!2609 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2603)
!2610 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2603)
!2611 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2603)
!2612 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2603)
!2613 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2603)
!2614 = !DILocation(line: 1250, column: 13, scope: !2595)
!2615 = !DILocation(line: 1251, column: 9, scope: !2595)
!2616 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2603)
!2617 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2603)
!2618 = !DILocation(line: 0, scope: !2595)
!2619 = !DILocation(line: 1251, column: 11, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 1251, column: 9)
!2621 = !DILocation(line: 1252, column: 5, scope: !2595)
!2622 = !DILocation(line: 1253, column: 5, scope: !2595)
!2623 = !DILocation(line: 0, scope: !2620)
!2624 = !DILocation(line: 1254, column: 1, scope: !2595)
!2625 = distinct !DISubprogram(name: "RM_ReplyWithString", scope: !3, file: !3, line: 1259, type: !2626, isLocal: false, isDefinition: true, scopeLine: 1259, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2628)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!17, !584, !143}
!2628 = !{!2629, !2630, !2631}
!2629 = !DILocalVariable(name: "ctx", arg: 1, scope: !2625, file: !3, line: 1259, type: !584)
!2630 = !DILocalVariable(name: "str", arg: 2, scope: !2625, file: !3, line: 1259, type: !143)
!2631 = !DILocalVariable(name: "c", scope: !2625, file: !3, line: 1260, type: !27)
!2632 = !DILocation(line: 1259, column: 40, scope: !2625)
!2633 = !DILocation(line: 1259, column: 64, scope: !2625)
!2634 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2635)
!2635 = distinct !DILocation(line: 1260, column: 17, scope: !2625)
!2636 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2635)
!2637 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2635)
!2638 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2635)
!2639 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2635)
!2640 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2635)
!2641 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2635)
!2642 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2635)
!2643 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2635)
!2644 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2635)
!2645 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2635)
!2646 = !DILocation(line: 1260, column: 13, scope: !2625)
!2647 = !DILocation(line: 1261, column: 9, scope: !2625)
!2648 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2635)
!2649 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2635)
!2650 = !DILocation(line: 0, scope: !2625)
!2651 = !DILocation(line: 1261, column: 11, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2625, file: !3, line: 1261, column: 9)
!2653 = !DILocation(line: 1262, column: 5, scope: !2625)
!2654 = !DILocation(line: 1263, column: 5, scope: !2625)
!2655 = !DILocation(line: 0, scope: !2652)
!2656 = !DILocation(line: 1264, column: 1, scope: !2625)
!2657 = distinct !DISubprogram(name: "RM_ReplyWithNull", scope: !3, file: !3, line: 1270, type: !1457, isLocal: false, isDefinition: true, scopeLine: 1270, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2658)
!2658 = !{!2659, !2660}
!2659 = !DILocalVariable(name: "ctx", arg: 1, scope: !2657, file: !3, line: 1270, type: !584)
!2660 = !DILocalVariable(name: "c", scope: !2657, file: !3, line: 1271, type: !27)
!2661 = !DILocation(line: 1270, column: 38, scope: !2657)
!2662 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2663)
!2663 = distinct !DILocation(line: 1271, column: 17, scope: !2657)
!2664 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2663)
!2665 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2663)
!2666 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2663)
!2667 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2663)
!2668 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2663)
!2669 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2663)
!2670 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2663)
!2671 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2663)
!2672 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2663)
!2673 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2663)
!2674 = !DILocation(line: 1271, column: 13, scope: !2657)
!2675 = !DILocation(line: 1272, column: 9, scope: !2657)
!2676 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2663)
!2677 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2663)
!2678 = !DILocation(line: 0, scope: !2657)
!2679 = !DILocation(line: 1272, column: 11, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 1272, column: 9)
!2681 = !DILocation(line: 1273, column: 23, scope: !2657)
!2682 = !{!2683, !892, i64 80}
!2683 = !{!"sharedObjectsStruct", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !892, i64 56, !892, i64 64, !892, i64 72, !892, i64 80, !892, i64 88, !892, i64 96, !892, i64 104, !892, i64 112, !892, i64 120, !892, i64 128, !892, i64 136, !892, i64 144, !892, i64 152, !892, i64 160, !892, i64 168, !892, i64 176, !892, i64 184, !892, i64 192, !892, i64 200, !892, i64 208, !892, i64 216, !892, i64 224, !892, i64 232, !892, i64 240, !892, i64 248, !892, i64 256, !892, i64 264, !892, i64 272, !892, i64 280, !892, i64 288, !892, i64 296, !892, i64 304, !892, i64 312, !892, i64 320, !892, i64 328, !892, i64 336, !892, i64 344, !892, i64 352, !892, i64 360, !893, i64 368, !893, i64 448, !893, i64 80448, !893, i64 80704, !892, i64 80960, !892, i64 80968}
!2684 = !DILocation(line: 1273, column: 5, scope: !2657)
!2685 = !DILocation(line: 1274, column: 5, scope: !2657)
!2686 = !DILocation(line: 0, scope: !2680)
!2687 = !DILocation(line: 1275, column: 1, scope: !2657)
!2688 = distinct !DISubprogram(name: "RM_ReplyWithCallReply", scope: !3, file: !3, line: 1283, type: !2689, isLocal: false, isDefinition: true, scopeLine: 1283, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2691)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!17, !584, !1224}
!2691 = !{!2692, !2693, !2694, !2695}
!2692 = !DILocalVariable(name: "ctx", arg: 1, scope: !2688, file: !3, line: 1283, type: !584)
!2693 = !DILocalVariable(name: "reply", arg: 2, scope: !2688, file: !3, line: 1283, type: !1224)
!2694 = !DILocalVariable(name: "c", scope: !2688, file: !3, line: 1284, type: !27)
!2695 = !DILocalVariable(name: "proto", scope: !2688, file: !3, line: 1286, type: !154)
!2696 = !DILocation(line: 1283, column: 43, scope: !2688)
!2697 = !DILocation(line: 1283, column: 70, scope: !2688)
!2698 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2699)
!2699 = distinct !DILocation(line: 1284, column: 17, scope: !2688)
!2700 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2699)
!2701 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2699)
!2702 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2699)
!2703 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2699)
!2704 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2699)
!2705 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2699)
!2706 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2699)
!2707 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2699)
!2708 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2699)
!2709 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2699)
!2710 = !DILocation(line: 1284, column: 13, scope: !2688)
!2711 = !DILocation(line: 1285, column: 9, scope: !2688)
!2712 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2699)
!2713 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2699)
!2714 = !DILocation(line: 0, scope: !2688)
!2715 = !DILocation(line: 1285, column: 11, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 1285, column: 9)
!2717 = !DILocation(line: 1286, column: 34, scope: !2688)
!2718 = !{!1247, !892, i64 24}
!2719 = !DILocation(line: 1286, column: 48, scope: !2688)
!2720 = !{!1247, !1051, i64 32}
!2721 = !DILocation(line: 1286, column: 17, scope: !2688)
!2722 = !DILocation(line: 1286, column: 9, scope: !2688)
!2723 = !DILocation(line: 1287, column: 5, scope: !2688)
!2724 = !DILocation(line: 1289, column: 1, scope: !2688)
!2725 = distinct !DISubprogram(name: "RM_ReplyWithDouble", scope: !3, file: !3, line: 1297, type: !2726, isLocal: false, isDefinition: true, scopeLine: 1297, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2728)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!17, !584, !96}
!2728 = !{!2729, !2730, !2731}
!2729 = !DILocalVariable(name: "ctx", arg: 1, scope: !2725, file: !3, line: 1297, type: !584)
!2730 = !DILocalVariable(name: "d", arg: 2, scope: !2725, file: !3, line: 1297, type: !96)
!2731 = !DILocalVariable(name: "c", scope: !2725, file: !3, line: 1298, type: !27)
!2732 = !DILocation(line: 1297, column: 40, scope: !2725)
!2733 = !DILocation(line: 1297, column: 52, scope: !2725)
!2734 = !DILocation(line: 1098, column: 46, scope: !2348, inlinedAt: !2735)
!2735 = distinct !DILocation(line: 1298, column: 17, scope: !2725)
!2736 = !DILocation(line: 1099, column: 14, scope: !2355, inlinedAt: !2735)
!2737 = !DILocation(line: 1099, column: 20, scope: !2355, inlinedAt: !2735)
!2738 = !DILocation(line: 1099, column: 9, scope: !2348, inlinedAt: !2735)
!2739 = !DILocation(line: 1100, column: 18, scope: !2359, inlinedAt: !2735)
!2740 = !DILocation(line: 1100, column: 13, scope: !2359, inlinedAt: !2735)
!2741 = !DILocation(line: 1100, column: 13, scope: !2360, inlinedAt: !2735)
!2742 = !DILocation(line: 1101, column: 41, scope: !2359, inlinedAt: !2735)
!2743 = !DILocation(line: 1101, column: 13, scope: !2359, inlinedAt: !2735)
!2744 = !DILocation(line: 1103, column: 13, scope: !2359, inlinedAt: !2735)
!2745 = !DILocation(line: 1111, column: 1, scope: !2348, inlinedAt: !2735)
!2746 = !DILocation(line: 1298, column: 13, scope: !2725)
!2747 = !DILocation(line: 1299, column: 9, scope: !2725)
!2748 = !DILocation(line: 1109, column: 21, scope: !2367, inlinedAt: !2735)
!2749 = !DILocation(line: 1109, column: 9, scope: !2367, inlinedAt: !2735)
!2750 = !DILocation(line: 0, scope: !2725)
!2751 = !DILocation(line: 1299, column: 11, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 1299, column: 9)
!2753 = !DILocation(line: 1300, column: 5, scope: !2725)
!2754 = !DILocation(line: 1301, column: 5, scope: !2725)
!2755 = !DILocation(line: 0, scope: !2752)
!2756 = !DILocation(line: 1302, column: 1, scope: !2725)
!2757 = distinct !DISubprogram(name: "moduleReplicateMultiIfNeeded", scope: !3, file: !3, line: 1311, type: !880, isLocal: false, isDefinition: true, scopeLine: 1311, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2758)
!2758 = !{!2759}
!2759 = !DILocalVariable(name: "ctx", arg: 1, scope: !2757, file: !3, line: 1311, type: !584)
!2760 = !DILocation(line: 1311, column: 51, scope: !2757)
!2761 = !DILocation(line: 1314, column: 14, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 1314, column: 9)
!2763 = !DILocation(line: 1314, column: 22, scope: !2762)
!2764 = !DILocation(line: 1314, column: 28, scope: !2762)
!2765 = !DILocation(line: 1314, column: 9, scope: !2757)
!2766 = !DILocation(line: 1316, column: 14, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 1316, column: 9)
!2768 = !DILocation(line: 1316, column: 20, scope: !2767)
!2769 = !DILocation(line: 1316, column: 9, scope: !2757)
!2770 = !DILocation(line: 1320, column: 20, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 1320, column: 9)
!2772 = !DILocation(line: 1320, column: 9, scope: !2757)
!2773 = !DILocation(line: 1321, column: 5, scope: !2757)
!2774 = !DILocation(line: 1322, column: 16, scope: !2757)
!2775 = !DILocation(line: 1323, column: 1, scope: !2757)
!2776 = distinct !DISubprogram(name: "RM_Replicate", scope: !3, file: !3, line: 1344, type: !2777, isLocal: false, isDefinition: true, scopeLine: 1344, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2779)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!17, !584, !523, !523, null}
!2779 = !{!2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788}
!2780 = !DILocalVariable(name: "ctx", arg: 1, scope: !2776, file: !3, line: 1344, type: !584)
!2781 = !DILocalVariable(name: "cmdname", arg: 2, scope: !2776, file: !3, line: 1344, type: !523)
!2782 = !DILocalVariable(name: "fmt", arg: 3, scope: !2776, file: !3, line: 1344, type: !523)
!2783 = !DILocalVariable(name: "cmd", scope: !2776, file: !3, line: 1345, type: !18)
!2784 = !DILocalVariable(name: "argv", scope: !2776, file: !3, line: 1346, type: !165)
!2785 = !DILocalVariable(name: "argc", scope: !2776, file: !3, line: 1347, type: !17)
!2786 = !DILocalVariable(name: "flags", scope: !2776, file: !3, line: 1347, type: !17)
!2787 = !DILocalVariable(name: "j", scope: !2776, file: !3, line: 1347, type: !17)
!2788 = !DILocalVariable(name: "ap", scope: !2776, file: !3, line: 1348, type: !1980)
!2789 = !DILocation(line: 1344, column: 34, scope: !2776)
!2790 = !DILocation(line: 1344, column: 51, scope: !2776)
!2791 = !DILocation(line: 1344, column: 72, scope: !2776)
!2792 = !DILocation(line: 1346, column: 12, scope: !2776)
!2793 = !DILocation(line: 1347, column: 5, scope: !2776)
!2794 = !DILocation(line: 1347, column: 9, scope: !2776)
!2795 = !DILocation(line: 1347, column: 19, scope: !2776)
!2796 = !DILocation(line: 1348, column: 5, scope: !2776)
!2797 = !DILocation(line: 1348, column: 13, scope: !2776)
!2798 = !DILocation(line: 1350, column: 11, scope: !2776)
!2799 = !DILocation(line: 1345, column: 26, scope: !2776)
!2800 = !DILocation(line: 1351, column: 10, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 1351, column: 9)
!2802 = !DILocation(line: 1351, column: 9, scope: !2776)
!2803 = !DILocation(line: 1354, column: 5, scope: !2776)
!2804 = !DILocation(line: 1355, column: 12, scope: !2776)
!2805 = !DILocation(line: 1356, column: 5, scope: !2776)
!2806 = !DILocation(line: 1357, column: 14, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 1357, column: 9)
!2808 = !DILocation(line: 1357, column: 9, scope: !2776)
!2809 = !DILocation(line: 1311, column: 51, scope: !2757, inlinedAt: !2810)
!2810 = distinct !DILocation(line: 1360, column: 5, scope: !2776)
!2811 = !DILocation(line: 1314, column: 14, scope: !2762, inlinedAt: !2810)
!2812 = !DILocation(line: 1314, column: 22, scope: !2762, inlinedAt: !2810)
!2813 = !DILocation(line: 1314, column: 28, scope: !2762, inlinedAt: !2810)
!2814 = !DILocation(line: 1314, column: 9, scope: !2757, inlinedAt: !2810)
!2815 = !DILocation(line: 1316, column: 14, scope: !2767, inlinedAt: !2810)
!2816 = !DILocation(line: 1316, column: 20, scope: !2767, inlinedAt: !2810)
!2817 = !DILocation(line: 1316, column: 9, scope: !2757, inlinedAt: !2810)
!2818 = !DILocation(line: 1320, column: 20, scope: !2771, inlinedAt: !2810)
!2819 = !DILocation(line: 1320, column: 9, scope: !2757, inlinedAt: !2810)
!2820 = !DILocation(line: 1321, column: 5, scope: !2757, inlinedAt: !2810)
!2821 = !DILocation(line: 1322, column: 16, scope: !2757, inlinedAt: !2810)
!2822 = !DILocation(line: 1323, column: 1, scope: !2757, inlinedAt: !2810)
!2823 = !DILocation(line: 1361, column: 28, scope: !2776)
!2824 = !DILocation(line: 1361, column: 36, scope: !2776)
!2825 = !DILocation(line: 1361, column: 40, scope: !2776)
!2826 = !DILocation(line: 1361, column: 48, scope: !2776)
!2827 = !DILocation(line: 1361, column: 5, scope: !2776)
!2828 = !DILocation(line: 1347, column: 30, scope: !2776)
!2829 = !DILocation(line: 1365, column: 10, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 1365, column: 5)
!2831 = !DILocation(line: 1365, column: 19, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2830, file: !3, line: 1365, column: 5)
!2833 = !DILocation(line: 1365, column: 5, scope: !2830)
!2834 = !DILocation(line: 1365, column: 45, scope: !2832)
!2835 = !DILocation(line: 1365, column: 32, scope: !2832)
!2836 = !DILocation(line: 1365, column: 28, scope: !2832)
!2837 = !DILocation(line: 1365, column: 5, scope: !2832)
!2838 = distinct !{!2838, !2833, !2839}
!2839 = !DILocation(line: 1365, column: 52, scope: !2830)
!2840 = !DILocation(line: 1366, column: 11, scope: !2776)
!2841 = !DILocation(line: 1366, column: 5, scope: !2776)
!2842 = !DILocation(line: 1367, column: 17, scope: !2776)
!2843 = !{!1050, !1052, i64 2080}
!2844 = !DILocation(line: 1368, column: 5, scope: !2776)
!2845 = !DILocation(line: 0, scope: !2801)
!2846 = !DILocation(line: 1369, column: 1, scope: !2776)
!2847 = distinct !DISubprogram(name: "moduleCreateArgvFromUserFormat", scope: !3, file: !3, line: 2686, type: !2848, isLocal: false, isDefinition: true, scopeLine: 2686, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2851)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!165, !523, !523, !16, !16, !2850}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!2851 = !{!2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2866, !2869, !2872, !2873, !2876, !2879, !2880}
!2852 = !DILocalVariable(name: "cmdname", arg: 1, scope: !2847, file: !3, line: 2686, type: !523)
!2853 = !DILocalVariable(name: "fmt", arg: 2, scope: !2847, file: !3, line: 2686, type: !523)
!2854 = !DILocalVariable(name: "argcp", arg: 3, scope: !2847, file: !3, line: 2686, type: !16)
!2855 = !DILocalVariable(name: "flags", arg: 4, scope: !2847, file: !3, line: 2686, type: !16)
!2856 = !DILocalVariable(name: "ap", arg: 5, scope: !2847, file: !3, line: 2686, type: !2850)
!2857 = !DILocalVariable(name: "argc", scope: !2847, file: !3, line: 2687, type: !17)
!2858 = !DILocalVariable(name: "argv_size", scope: !2847, file: !3, line: 2687, type: !17)
!2859 = !DILocalVariable(name: "j", scope: !2847, file: !3, line: 2687, type: !17)
!2860 = !DILocalVariable(name: "argv", scope: !2847, file: !3, line: 2688, type: !165)
!2861 = !DILocalVariable(name: "p", scope: !2847, file: !3, line: 2700, type: !523)
!2862 = !DILocalVariable(name: "cstr", scope: !2863, file: !3, line: 2703, type: !9)
!2863 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 2702, column: 24)
!2864 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 2702, column: 13)
!2865 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2701, column: 15)
!2866 = !DILocalVariable(name: "obj", scope: !2867, file: !3, line: 2706, type: !143)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 2705, column: 31)
!2868 = distinct !DILexicalBlock(scope: !2864, file: !3, line: 2705, column: 20)
!2869 = !DILocalVariable(name: "buf", scope: !2870, file: !3, line: 2710, type: !9)
!2870 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2709, column: 31)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 2709, column: 20)
!2872 = !DILocalVariable(name: "len", scope: !2870, file: !3, line: 2711, type: !157)
!2873 = !DILocalVariable(name: "ll", scope: !2874, file: !3, line: 2714, type: !94)
!2874 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 2713, column: 31)
!2875 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 2713, column: 20)
!2876 = !DILocalVariable(name: "v", scope: !2877, file: !3, line: 2718, type: !165)
!2877 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 2716, column: 31)
!2878 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 2716, column: 20)
!2879 = !DILocalVariable(name: "vlen", scope: !2877, file: !3, line: 2719, type: !157)
!2880 = !DILocalVariable(name: "i", scope: !2877, file: !3, line: 2727, type: !157)
!2881 = !DILocation(line: 2686, column: 51, scope: !2847)
!2882 = !DILocation(line: 2686, column: 72, scope: !2847)
!2883 = !DILocation(line: 2686, column: 82, scope: !2847)
!2884 = !DILocation(line: 2686, column: 94, scope: !2847)
!2885 = !DILocation(line: 2686, column: 109, scope: !2847)
!2886 = !DILocation(line: 2687, column: 9, scope: !2847)
!2887 = !DILocation(line: 2688, column: 12, scope: !2847)
!2888 = !DILocation(line: 2692, column: 17, scope: !2847)
!2889 = !DILocation(line: 2687, column: 19, scope: !2847)
!2890 = !DILocation(line: 2693, column: 40, scope: !2847)
!2891 = !DILocation(line: 2693, column: 39, scope: !2847)
!2892 = !DILocation(line: 2693, column: 12, scope: !2847)
!2893 = !DILocation(line: 2696, column: 42, scope: !2847)
!2894 = !DILocation(line: 2696, column: 15, scope: !2847)
!2895 = !DILocation(line: 2696, column: 13, scope: !2847)
!2896 = !DILocation(line: 2700, column: 17, scope: !2847)
!2897 = !DILocation(line: 2701, column: 5, scope: !2847)
!2898 = !DILocation(line: 2701, column: 11, scope: !2847)
!2899 = !DILocation(line: 2702, column: 16, scope: !2864)
!2900 = !DILocation(line: 2702, column: 13, scope: !2865)
!2901 = !DILocation(line: 2703, column: 26, scope: !2863)
!2902 = !DILocation(line: 2703, column: 19, scope: !2863)
!2903 = !DILocation(line: 2704, column: 52, scope: !2863)
!2904 = !DILocation(line: 2704, column: 28, scope: !2863)
!2905 = !DILocation(line: 2704, column: 22, scope: !2863)
!2906 = !DILocation(line: 2704, column: 13, scope: !2863)
!2907 = !DILocation(line: 2704, column: 26, scope: !2863)
!2908 = !DILocation(line: 2705, column: 9, scope: !2863)
!2909 = !DILocation(line: 2705, column: 23, scope: !2868)
!2910 = !DILocation(line: 2705, column: 20, scope: !2864)
!2911 = !DILocation(line: 2706, column: 25, scope: !2867)
!2912 = !DILocation(line: 2706, column: 19, scope: !2867)
!2913 = !DILocation(line: 2707, column: 22, scope: !2867)
!2914 = !DILocation(line: 2707, column: 13, scope: !2867)
!2915 = !DILocation(line: 2707, column: 26, scope: !2867)
!2916 = !DILocation(line: 2708, column: 13, scope: !2867)
!2917 = !DILocation(line: 2709, column: 9, scope: !2867)
!2918 = !DILocation(line: 2709, column: 23, scope: !2871)
!2919 = !DILocation(line: 2709, column: 20, scope: !2868)
!2920 = !DILocation(line: 2710, column: 25, scope: !2870)
!2921 = !DILocation(line: 2710, column: 19, scope: !2870)
!2922 = !DILocation(line: 2711, column: 26, scope: !2870)
!2923 = !DILocation(line: 2711, column: 20, scope: !2870)
!2924 = !DILocation(line: 2712, column: 28, scope: !2870)
!2925 = !DILocation(line: 2712, column: 22, scope: !2870)
!2926 = !DILocation(line: 2712, column: 13, scope: !2870)
!2927 = !DILocation(line: 2712, column: 26, scope: !2870)
!2928 = !DILocation(line: 2713, column: 9, scope: !2870)
!2929 = !DILocation(line: 2713, column: 23, scope: !2875)
!2930 = !DILocation(line: 2713, column: 20, scope: !2871)
!2931 = !DILocation(line: 2714, column: 23, scope: !2874)
!2932 = !DILocation(line: 2714, column: 18, scope: !2874)
!2933 = !DILocation(line: 2715, column: 52, scope: !2874)
!2934 = !DILocation(line: 2715, column: 28, scope: !2874)
!2935 = !DILocation(line: 2715, column: 22, scope: !2874)
!2936 = !DILocation(line: 2715, column: 13, scope: !2874)
!2937 = !DILocation(line: 2715, column: 26, scope: !2874)
!2938 = !DILocation(line: 2716, column: 9, scope: !2874)
!2939 = !DILocation(line: 2716, column: 23, scope: !2878)
!2940 = !DILocation(line: 2716, column: 20, scope: !2875)
!2941 = !DILocation(line: 2718, column: 25, scope: !2877)
!2942 = !DILocation(line: 2718, column: 21, scope: !2877)
!2943 = !DILocation(line: 2719, column: 28, scope: !2877)
!2944 = !DILocation(line: 2719, column: 21, scope: !2877)
!2945 = !DILocation(line: 2724, column: 24, scope: !2877)
!2946 = !DILocation(line: 2725, column: 49, scope: !2877)
!2947 = !DILocation(line: 2725, column: 48, scope: !2877)
!2948 = !DILocation(line: 2725, column: 21, scope: !2877)
!2949 = !DILocation(line: 2727, column: 21, scope: !2877)
!2950 = !DILocation(line: 2728, column: 19, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2877, file: !3, line: 2728, column: 14)
!2952 = !DILocation(line: 2728, column: 28, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 2728, column: 14)
!2954 = !DILocation(line: 2728, column: 14, scope: !2951)
!2955 = !DILocation(line: 2729, column: 31, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 2728, column: 41)
!2957 = !DILocation(line: 2729, column: 18, scope: !2956)
!2958 = !DILocation(line: 2730, column: 33, scope: !2956)
!2959 = !DILocation(line: 2730, column: 27, scope: !2956)
!2960 = !DILocation(line: 2730, column: 18, scope: !2956)
!2961 = !DILocation(line: 2730, column: 31, scope: !2956)
!2962 = !DILocation(line: 2728, column: 37, scope: !2953)
!2963 = !DILocation(line: 2728, column: 14, scope: !2953)
!2964 = distinct !{!2964, !2954, !2965}
!2965 = !DILocation(line: 2731, column: 14, scope: !2951)
!2966 = !DILocation(line: 2732, column: 9, scope: !2877)
!2967 = !DILocation(line: 2732, column: 23, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 2732, column: 20)
!2969 = !DILocation(line: 2732, column: 20, scope: !2878)
!2970 = !DILocation(line: 0, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2847, file: !3, line: 2743, column: 5)
!2972 = !DILocation(line: 2733, column: 17, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 2732, column: 31)
!2974 = !DILocation(line: 2733, column: 33, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2973, file: !3, line: 2733, column: 17)
!2976 = !DILocation(line: 2733, column: 24, scope: !2975)
!2977 = !DILocation(line: 0, scope: !2863)
!2978 = !DILocation(line: 2737, column: 10, scope: !2865)
!2979 = !DILocation(line: 0, scope: !2847)
!2980 = distinct !{!2980, !2897, !2981}
!2981 = !DILocation(line: 2738, column: 5, scope: !2847)
!2982 = !DILocation(line: 2693, column: 10, scope: !2847)
!2983 = !DILocation(line: 2739, column: 12, scope: !2847)
!2984 = !DILocation(line: 2740, column: 5, scope: !2847)
!2985 = !DILocation(line: 2687, column: 30, scope: !2847)
!2986 = !DILocation(line: 2743, column: 19, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2971, file: !3, line: 2743, column: 5)
!2988 = !DILocation(line: 2743, column: 5, scope: !2971)
!2989 = !DILocation(line: 2744, column: 22, scope: !2987)
!2990 = !DILocation(line: 2744, column: 9, scope: !2987)
!2991 = !DILocation(line: 2743, column: 28, scope: !2987)
!2992 = !DILocation(line: 2743, column: 5, scope: !2987)
!2993 = distinct !{!2993, !2988, !2994}
!2994 = !DILocation(line: 2744, column: 29, scope: !2971)
!2995 = !DILocation(line: 2745, column: 5, scope: !2847)
!2996 = !DILocation(line: 2746, column: 5, scope: !2847)
!2997 = !DILocation(line: 2747, column: 1, scope: !2847)
!2998 = distinct !DISubprogram(name: "RM_ReplicateVerbatim", scope: !3, file: !3, line: 1382, type: !1457, isLocal: false, isDefinition: true, scopeLine: 1382, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2999)
!2999 = !{!3000}
!3000 = !DILocalVariable(name: "ctx", arg: 1, scope: !2998, file: !3, line: 1382, type: !584)
!3001 = !DILocation(line: 1382, column: 42, scope: !2998)
!3002 = !DILocation(line: 1383, column: 24, scope: !2998)
!3003 = !DILocation(line: 1383, column: 32, scope: !2998)
!3004 = !DILocation(line: 1383, column: 49, scope: !2998)
!3005 = !DILocation(line: 1383, column: 53, scope: !2998)
!3006 = !DILocation(line: 1384, column: 22, scope: !2998)
!3007 = !DILocation(line: 1384, column: 40, scope: !2998)
!3008 = !DILocation(line: 1383, column: 5, scope: !2998)
!3009 = !DILocation(line: 1386, column: 17, scope: !2998)
!3010 = !DILocation(line: 1387, column: 5, scope: !2998)
!3011 = distinct !DISubprogram(name: "RM_GetClientId", scope: !3, file: !3, line: 1405, type: !3012, isLocal: false, isDefinition: true, scopeLine: 1405, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3014)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!173, !584}
!3014 = !{!3015}
!3015 = !DILocalVariable(name: "ctx", arg: 1, scope: !3011, file: !3, line: 1405, type: !584)
!3016 = !DILocation(line: 1405, column: 51, scope: !3011)
!3017 = !DILocation(line: 1406, column: 14, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 1406, column: 9)
!3019 = !DILocation(line: 1406, column: 21, scope: !3018)
!3020 = !DILocation(line: 1406, column: 9, scope: !3011)
!3021 = !DILocation(line: 1407, column: 25, scope: !3011)
!3022 = !{!1306, !1051, i64 0}
!3023 = !DILocation(line: 1407, column: 5, scope: !3011)
!3024 = !DILocation(line: 0, scope: !3011)
!3025 = !DILocation(line: 0, scope: !3018)
!3026 = !DILocation(line: 1408, column: 1, scope: !3011)
!3027 = distinct !DISubprogram(name: "RM_GetSelectedDb", scope: !3, file: !3, line: 1411, type: !1457, isLocal: false, isDefinition: true, scopeLine: 1411, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3028)
!3028 = !{!3029}
!3029 = !DILocalVariable(name: "ctx", arg: 1, scope: !3027, file: !3, line: 1411, type: !584)
!3030 = !DILocation(line: 1411, column: 38, scope: !3027)
!3031 = !DILocation(line: 1412, column: 17, scope: !3027)
!3032 = !DILocation(line: 1412, column: 25, scope: !3027)
!3033 = !DILocation(line: 1412, column: 29, scope: !3027)
!3034 = !DILocation(line: 1412, column: 5, scope: !3027)
!3035 = distinct !DISubprogram(name: "RM_GetContextFlags", scope: !3, file: !3, line: 1452, type: !1457, isLocal: false, isDefinition: true, scopeLine: 1452, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3036)
!3036 = !{!3037, !3038, !3039, !3041}
!3037 = !DILocalVariable(name: "ctx", arg: 1, scope: !3035, file: !3, line: 1452, type: !584)
!3038 = !DILocalVariable(name: "flags", scope: !3035, file: !3, line: 1454, type: !17)
!3039 = !DILocalVariable(name: "level", scope: !3035, file: !3, line: 1496, type: !3040)
!3040 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!3041 = !DILocalVariable(name: "retval", scope: !3035, file: !3, line: 1497, type: !17)
!3042 = !DILocation(line: 1452, column: 40, scope: !3035)
!3043 = !DILocation(line: 1454, column: 9, scope: !3035)
!3044 = !DILocation(line: 1456, column: 14, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1456, column: 9)
!3046 = !DILocation(line: 1456, column: 9, scope: !3045)
!3047 = !DILocation(line: 1456, column: 9, scope: !3035)
!3048 = !DILocation(line: 1457, column: 26, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 1457, column: 13)
!3050 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 1456, column: 22)
!3051 = !DILocation(line: 1457, column: 32, scope: !3049)
!3052 = !DILocation(line: 1457, column: 13, scope: !3050)
!3053 = !DILocation(line: 1458, column: 10, scope: !3049)
!3054 = !DILocation(line: 0, scope: !3035)
!3055 = !DILocation(line: 1459, column: 32, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 1459, column: 13)
!3057 = !DILocation(line: 1459, column: 13, scope: !3050)
!3058 = !DILocation(line: 1460, column: 16, scope: !3056)
!3059 = !DILocation(line: 1460, column: 10, scope: !3056)
!3060 = !DILocation(line: 0, scope: !3049)
!3061 = !DILocation(line: 1462, column: 32, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 1462, column: 13)
!3063 = !DILocation(line: 1462, column: 13, scope: !3050)
!3064 = !DILocation(line: 1463, column: 16, scope: !3062)
!3065 = !DILocation(line: 1463, column: 10, scope: !3062)
!3066 = !DILocation(line: 1466, column: 16, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1466, column: 9)
!3068 = !{!1050, !895, i64 2924}
!3069 = !DILocation(line: 1466, column: 9, scope: !3067)
!3070 = !DILocation(line: 1466, column: 9, scope: !3035)
!3071 = !DILocation(line: 1467, column: 15, scope: !3067)
!3072 = !DILocation(line: 1467, column: 9, scope: !3067)
!3073 = !DILocation(line: 0, scope: !3062)
!3074 = !DILocation(line: 1469, column: 16, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1469, column: 9)
!3076 = !{!1050, !895, i64 860}
!3077 = !DILocation(line: 1469, column: 9, scope: !3075)
!3078 = !DILocation(line: 1469, column: 9, scope: !3035)
!3079 = !DILocation(line: 1470, column: 15, scope: !3075)
!3080 = !DILocation(line: 1470, column: 9, scope: !3075)
!3081 = !DILocation(line: 0, scope: !3067)
!3082 = !DILocation(line: 1473, column: 16, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1473, column: 9)
!3084 = !{!1050, !1052, i64 2704}
!3085 = !DILocation(line: 1473, column: 26, scope: !3083)
!3086 = !DILocation(line: 1473, column: 9, scope: !3035)
!3087 = !DILocation(line: 1474, column: 15, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 1473, column: 31)
!3089 = !DILocation(line: 1476, column: 20, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 1476, column: 13)
!3091 = !{!1050, !895, i64 2712}
!3092 = !DILocation(line: 1476, column: 37, scope: !3090)
!3093 = !DILocation(line: 1476, column: 13, scope: !3088)
!3094 = !DILocation(line: 1477, column: 19, scope: !3090)
!3095 = !DILocation(line: 1477, column: 13, scope: !3090)
!3096 = !DILocation(line: 0, scope: !3075)
!3097 = !DILocation(line: 1481, column: 16, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1481, column: 9)
!3099 = !{!1050, !895, i64 1880}
!3100 = !DILocation(line: 1481, column: 26, scope: !3098)
!3101 = !DILocation(line: 1481, column: 9, scope: !3035)
!3102 = !DILocation(line: 1482, column: 15, scope: !3098)
!3103 = !DILocation(line: 1482, column: 9, scope: !3098)
!3104 = !DILocation(line: 0, scope: !3090)
!3105 = !DILocation(line: 1483, column: 16, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1483, column: 9)
!3107 = !{!1050, !895, i64 2112}
!3108 = !DILocation(line: 1483, column: 30, scope: !3106)
!3109 = !DILocation(line: 1483, column: 9, scope: !3035)
!3110 = !DILocation(line: 1484, column: 15, scope: !3106)
!3111 = !DILocation(line: 1484, column: 9, scope: !3106)
!3112 = !DILocation(line: 0, scope: !3098)
!3113 = !DILocation(line: 1487, column: 16, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1487, column: 9)
!3115 = !{!1050, !892, i64 2464}
!3116 = !DILocation(line: 1487, column: 27, scope: !3114)
!3117 = !DILocation(line: 1487, column: 9, scope: !3035)
!3118 = !DILocation(line: 1490, column: 15, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1489, column: 12)
!3120 = !DILocation(line: 1491, column: 20, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 1491, column: 13)
!3122 = !{!1050, !895, i64 2556}
!3123 = !DILocation(line: 1491, column: 13, scope: !3121)
!3124 = !DILocation(line: 1491, column: 13, scope: !3119)
!3125 = !DILocation(line: 0, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1487, column: 36)
!3127 = !DILocation(line: 1496, column: 5, scope: !3035)
!3128 = !DILocation(line: 0, scope: !3119)
!3129 = !DILocation(line: 1496, column: 11, scope: !3035)
!3130 = !DILocation(line: 1497, column: 18, scope: !3035)
!3131 = !DILocation(line: 1497, column: 9, scope: !3035)
!3132 = !DILocation(line: 1498, column: 16, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1498, column: 9)
!3134 = !DILocation(line: 1498, column: 9, scope: !3035)
!3135 = !DILocation(line: 1498, column: 32, scope: !3133)
!3136 = !DILocation(line: 1498, column: 26, scope: !3133)
!3137 = !DILocation(line: 1499, column: 9, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1499, column: 9)
!3139 = !{!3140, !3140, i64 0}
!3140 = !{!"float", !893, i64 0}
!3141 = !DILocation(line: 1499, column: 15, scope: !3138)
!3142 = !DILocation(line: 1499, column: 9, scope: !3035)
!3143 = !DILocation(line: 1499, column: 29, scope: !3138)
!3144 = !DILocation(line: 1499, column: 23, scope: !3138)
!3145 = !DILocation(line: 0, scope: !3133)
!3146 = !DILocation(line: 1502, column: 1, scope: !3035)
!3147 = !DILocation(line: 1501, column: 5, scope: !3035)
!3148 = distinct !DISubprogram(name: "RM_SelectDb", scope: !3, file: !3, line: 1514, type: !3149, isLocal: false, isDefinition: true, scopeLine: 1514, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3151)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!17, !584, !17}
!3151 = !{!3152, !3153, !3154}
!3152 = !DILocalVariable(name: "ctx", arg: 1, scope: !3148, file: !3, line: 1514, type: !584)
!3153 = !DILocalVariable(name: "newid", arg: 2, scope: !3148, file: !3, line: 1514, type: !17)
!3154 = !DILocalVariable(name: "retval", scope: !3148, file: !3, line: 1515, type: !17)
!3155 = !DILocation(line: 1514, column: 33, scope: !3148)
!3156 = !DILocation(line: 1514, column: 42, scope: !3148)
!3157 = !DILocation(line: 1515, column: 32, scope: !3148)
!3158 = !DILocation(line: 1515, column: 18, scope: !3148)
!3159 = !DILocation(line: 1515, column: 9, scope: !3148)
!3160 = !DILocation(line: 1516, column: 20, scope: !3148)
!3161 = !DILocation(line: 1516, column: 12, scope: !3148)
!3162 = !DILocation(line: 1516, column: 5, scope: !3148)
!3163 = distinct !DISubprogram(name: "RM_OpenKey", scope: !3, file: !3, line: 1533, type: !3164, isLocal: false, isDefinition: true, scopeLine: 1533, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3166)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!6, !584, !143, !17}
!3166 = !{!3167, !3168, !3169, !3170, !3171}
!3167 = !DILocalVariable(name: "ctx", arg: 1, scope: !3163, file: !3, line: 1533, type: !584)
!3168 = !DILocalVariable(name: "keyname", arg: 2, scope: !3163, file: !3, line: 1533, type: !143)
!3169 = !DILocalVariable(name: "mode", arg: 3, scope: !3163, file: !3, line: 1533, type: !17)
!3170 = !DILocalVariable(name: "kp", scope: !3163, file: !3, line: 1534, type: !991)
!3171 = !DILocalVariable(name: "value", scope: !3163, file: !3, line: 1535, type: !143)
!3172 = !DILocation(line: 1533, column: 34, scope: !3163)
!3173 = !DILocation(line: 1533, column: 45, scope: !3163)
!3174 = !DILocation(line: 1533, column: 58, scope: !3163)
!3175 = !DILocation(line: 1537, column: 14, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1537, column: 9)
!3177 = !DILocation(line: 0, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 1539, column: 12)
!3179 = !DILocation(line: 1537, column: 9, scope: !3163)
!3180 = !DILocation(line: 1538, column: 17, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 1537, column: 35)
!3182 = !DILocation(line: 1535, column: 11, scope: !3163)
!3183 = !DILocation(line: 1539, column: 5, scope: !3181)
!3184 = !DILocation(line: 1540, column: 17, scope: !3178)
!3185 = !DILocation(line: 1541, column: 19, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 1541, column: 13)
!3187 = !DILocation(line: 1541, column: 13, scope: !3178)
!3188 = !DILocation(line: 1547, column: 10, scope: !3163)
!3189 = !DILocation(line: 1534, column: 21, scope: !3163)
!3190 = !DILocation(line: 1548, column: 9, scope: !3163)
!3191 = !DILocation(line: 1548, column: 13, scope: !3163)
!3192 = !DILocation(line: 1549, column: 19, scope: !3163)
!3193 = !DILocation(line: 1549, column: 27, scope: !3163)
!3194 = !DILocation(line: 1549, column: 9, scope: !3163)
!3195 = !DILocation(line: 1549, column: 12, scope: !3163)
!3196 = !DILocation(line: 1550, column: 9, scope: !3163)
!3197 = !DILocation(line: 1550, column: 13, scope: !3163)
!3198 = !DILocation(line: 1551, column: 5, scope: !3163)
!3199 = !DILocation(line: 1552, column: 9, scope: !3163)
!3200 = !DILocation(line: 1552, column: 15, scope: !3163)
!3201 = !DILocation(line: 1553, column: 9, scope: !3163)
!3202 = !DILocation(line: 1553, column: 14, scope: !3163)
!3203 = !{!1031, !892, i64 32}
!3204 = !DILocation(line: 1554, column: 9, scope: !3163)
!3205 = !DILocation(line: 1554, column: 14, scope: !3163)
!3206 = !DILocation(line: 1955, column: 35, scope: !1890, inlinedAt: !3207)
!3207 = distinct !DILocation(line: 1555, column: 5, scope: !3163)
!3208 = !DILocation(line: 1956, column: 10, scope: !1890, inlinedAt: !3207)
!3209 = !DILocation(line: 1956, column: 16, scope: !1890, inlinedAt: !3207)
!3210 = !DILocation(line: 1957, column: 10, scope: !1890, inlinedAt: !3207)
!3211 = !DILocation(line: 1957, column: 19, scope: !1890, inlinedAt: !3207)
!3212 = !DILocation(line: 1958, column: 10, scope: !1890, inlinedAt: !3207)
!3213 = !DILocation(line: 1958, column: 14, scope: !1890, inlinedAt: !3207)
!3214 = !DILocation(line: 1959, column: 1, scope: !1890, inlinedAt: !3207)
!3215 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !3216)
!3216 = distinct !DILocation(line: 1556, column: 5, scope: !3163)
!3217 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !3216)
!3218 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !3216)
!3219 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !3216)
!3220 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !3216)
!3221 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !3216)
!3222 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !3216)
!3223 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !3216)
!3224 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !3216)
!3225 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !3216)
!3226 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !3216)
!3227 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !3216)
!3228 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !3216)
!3229 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !3216)
!3230 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !3216)
!3231 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !3216)
!3232 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !3216)
!3233 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !3216)
!3234 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !3216)
!3235 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !3216)
!3236 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !3216)
!3237 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !3216)
!3238 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !3216)
!3239 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !3216)
!3240 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !3216)
!3241 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !3216)
!3242 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !3216)
!3243 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !3216)
!3244 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !3216)
!3245 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !3216)
!3246 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !3216)
!3247 = !DILocation(line: 1557, column: 5, scope: !3163)
!3248 = !DILocation(line: 0, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3186, file: !3, line: 1541, column: 28)
!3250 = !DILocation(line: 1558, column: 1, scope: !3163)
!3251 = !DILocation(line: 1962, column: 39, scope: !1878)
!3252 = !DILocation(line: 1964, column: 14, scope: !1883)
!3253 = !DILocation(line: 1964, column: 20, scope: !1883)
!3254 = !DILocation(line: 1964, column: 9, scope: !1878)
!3255 = !DILocation(line: 1965, column: 31, scope: !1883)
!3256 = !DILocation(line: 1965, column: 9, scope: !1883)
!3257 = !DILocation(line: 1955, column: 35, scope: !1890, inlinedAt: !3258)
!3258 = distinct !DILocation(line: 1969, column: 5, scope: !1878)
!3259 = !DILocation(line: 1956, column: 16, scope: !1890, inlinedAt: !3258)
!3260 = !DILocation(line: 1957, column: 10, scope: !1890, inlinedAt: !3258)
!3261 = !DILocation(line: 1957, column: 19, scope: !1890, inlinedAt: !3258)
!3262 = !DILocation(line: 1958, column: 10, scope: !1890, inlinedAt: !3258)
!3263 = !DILocation(line: 1958, column: 14, scope: !1890, inlinedAt: !3258)
!3264 = !DILocation(line: 1959, column: 1, scope: !1890, inlinedAt: !3258)
!3265 = !DILocation(line: 1970, column: 1, scope: !1878)
!3266 = distinct !DISubprogram(name: "RM_KeyType", scope: !3, file: !3, line: 1573, type: !1076, isLocal: false, isDefinition: true, scopeLine: 1573, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3267)
!3267 = !{!3268}
!3268 = !DILocalVariable(name: "key", arg: 1, scope: !3266, file: !3, line: 1573, type: !991)
!3269 = !DILocation(line: 1573, column: 32, scope: !3266)
!3270 = !DILocation(line: 1574, column: 13, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1574, column: 9)
!3272 = !DILocation(line: 1574, column: 21, scope: !3271)
!3273 = !DILocation(line: 1574, column: 29, scope: !3271)
!3274 = !DILocation(line: 1574, column: 35, scope: !3271)
!3275 = !DILocation(line: 1574, column: 9, scope: !3266)
!3276 = !DILocation(line: 1577, column: 24, scope: !3266)
!3277 = !DILocation(line: 1577, column: 5, scope: !3266)
!3278 = !DILocation(line: 0, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1577, column: 30)
!3280 = !DILocation(line: 0, scope: !3271)
!3281 = !DILocation(line: 1586, column: 1, scope: !3266)
!3282 = distinct !DISubprogram(name: "RM_ValueLength", scope: !3, file: !3, line: 1593, type: !3283, isLocal: false, isDefinition: true, scopeLine: 1593, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3285)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!157, !991}
!3285 = !{!3286}
!3286 = !DILocalVariable(name: "key", arg: 1, scope: !3282, file: !3, line: 1593, type: !991)
!3287 = !DILocation(line: 1593, column: 39, scope: !3282)
!3288 = !DILocation(line: 1594, column: 13, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 1594, column: 9)
!3290 = !DILocation(line: 1594, column: 21, scope: !3289)
!3291 = !DILocation(line: 1594, column: 29, scope: !3289)
!3292 = !DILocation(line: 1594, column: 35, scope: !3289)
!3293 = !DILocation(line: 1594, column: 9, scope: !3282)
!3294 = !DILocation(line: 1595, column: 24, scope: !3282)
!3295 = !DILocation(line: 1595, column: 5, scope: !3282)
!3296 = !DILocation(line: 1596, column: 29, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 1595, column: 30)
!3298 = !DILocation(line: 1596, column: 22, scope: !3297)
!3299 = !DILocation(line: 1597, column: 27, scope: !3297)
!3300 = !DILocation(line: 1597, column: 20, scope: !3297)
!3301 = !DILocation(line: 1598, column: 26, scope: !3297)
!3302 = !DILocation(line: 1598, column: 19, scope: !3297)
!3303 = !DILocation(line: 1599, column: 27, scope: !3297)
!3304 = !DILocation(line: 1599, column: 20, scope: !3297)
!3305 = !DILocation(line: 1600, column: 27, scope: !3297)
!3306 = !DILocation(line: 1600, column: 20, scope: !3297)
!3307 = !DILocation(line: 0, scope: !3297)
!3308 = !DILocation(line: 0, scope: !3289)
!3309 = !DILocation(line: 1603, column: 1, scope: !3282)
!3310 = distinct !DISubprogram(name: "RM_DeleteKey", scope: !3, file: !3, line: 1609, type: !1076, isLocal: false, isDefinition: true, scopeLine: 1609, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3311)
!3311 = !{!3312}
!3312 = !DILocalVariable(name: "key", arg: 1, scope: !3310, file: !3, line: 1609, type: !991)
!3313 = !DILocation(line: 1609, column: 34, scope: !3310)
!3314 = !DILocation(line: 1610, column: 16, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1610, column: 9)
!3316 = !DILocation(line: 1610, column: 21, scope: !3315)
!3317 = !DILocation(line: 1610, column: 9, scope: !3310)
!3318 = !DILocation(line: 1611, column: 14, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 1611, column: 9)
!3320 = !DILocation(line: 1611, column: 9, scope: !3319)
!3321 = !DILocation(line: 1611, column: 9, scope: !3310)
!3322 = !DILocation(line: 1612, column: 23, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 1611, column: 21)
!3324 = !DILocation(line: 1612, column: 31, scope: !3323)
!3325 = !DILocation(line: 1612, column: 9, scope: !3323)
!3326 = !DILocation(line: 1613, column: 20, scope: !3323)
!3327 = !DILocation(line: 1614, column: 5, scope: !3323)
!3328 = !DILocation(line: 0, scope: !3315)
!3329 = !DILocation(line: 1616, column: 1, scope: !3310)
!3330 = distinct !DISubprogram(name: "RM_UnlinkKey", scope: !3, file: !3, line: 1623, type: !1076, isLocal: false, isDefinition: true, scopeLine: 1623, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3331)
!3331 = !{!3332}
!3332 = !DILocalVariable(name: "key", arg: 1, scope: !3330, file: !3, line: 1623, type: !991)
!3333 = !DILocation(line: 1623, column: 34, scope: !3330)
!3334 = !DILocation(line: 1624, column: 16, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1624, column: 9)
!3336 = !DILocation(line: 1624, column: 21, scope: !3335)
!3337 = !DILocation(line: 1624, column: 9, scope: !3330)
!3338 = !DILocation(line: 1625, column: 14, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 1625, column: 9)
!3340 = !DILocation(line: 1625, column: 9, scope: !3339)
!3341 = !DILocation(line: 1625, column: 9, scope: !3330)
!3342 = !DILocation(line: 1626, column: 28, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3339, file: !3, line: 1625, column: 21)
!3344 = !DILocation(line: 1626, column: 36, scope: !3343)
!3345 = !DILocation(line: 1626, column: 9, scope: !3343)
!3346 = !DILocation(line: 1627, column: 20, scope: !3343)
!3347 = !DILocation(line: 1628, column: 5, scope: !3343)
!3348 = !DILocation(line: 0, scope: !3335)
!3349 = !DILocation(line: 1630, column: 1, scope: !3330)
!3350 = distinct !DISubprogram(name: "RM_GetExpire", scope: !3, file: !3, line: 1635, type: !3351, isLocal: false, isDefinition: true, scopeLine: 1635, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3353)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!229, !991}
!3353 = !{!3354, !3355}
!3354 = !DILocalVariable(name: "key", arg: 1, scope: !3350, file: !3, line: 1635, type: !991)
!3355 = !DILocalVariable(name: "expire", scope: !3350, file: !3, line: 1636, type: !229)
!3356 = !DILocation(line: 1635, column: 39, scope: !3350)
!3357 = !DILocation(line: 1636, column: 38, scope: !3350)
!3358 = !DILocation(line: 1636, column: 46, scope: !3350)
!3359 = !DILocation(line: 1636, column: 23, scope: !3350)
!3360 = !DILocation(line: 1636, column: 14, scope: !3350)
!3361 = !DILocation(line: 1637, column: 16, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3350, file: !3, line: 1637, column: 9)
!3363 = !DILocation(line: 1637, column: 22, scope: !3362)
!3364 = !DILocation(line: 1637, column: 30, scope: !3362)
!3365 = !DILocation(line: 1637, column: 36, scope: !3362)
!3366 = !DILocation(line: 1637, column: 9, scope: !3350)
!3367 = !DILocation(line: 1638, column: 15, scope: !3350)
!3368 = !DILocation(line: 1638, column: 12, scope: !3350)
!3369 = !DILocation(line: 1639, column: 12, scope: !3350)
!3370 = !DILocation(line: 1639, column: 5, scope: !3350)
!3371 = !DILocation(line: 0, scope: !3350)
!3372 = !DILocation(line: 0, scope: !3362)
!3373 = !DILocation(line: 1640, column: 1, scope: !3350)
!3374 = distinct !DISubprogram(name: "RM_SetExpire", scope: !3, file: !3, line: 1651, type: !3375, isLocal: false, isDefinition: true, scopeLine: 1651, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3377)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!17, !991, !229}
!3377 = !{!3378, !3379}
!3378 = !DILocalVariable(name: "key", arg: 1, scope: !3374, file: !3, line: 1651, type: !991)
!3379 = !DILocalVariable(name: "expire", arg: 2, scope: !3374, file: !3, line: 1651, type: !229)
!3380 = !DILocation(line: 1651, column: 34, scope: !3374)
!3381 = !DILocation(line: 1651, column: 48, scope: !3374)
!3382 = !DILocation(line: 1652, column: 16, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 1652, column: 9)
!3384 = !DILocation(line: 1652, column: 21, scope: !3383)
!3385 = !DILocation(line: 1652, column: 42, scope: !3383)
!3386 = !DILocation(line: 1652, column: 50, scope: !3383)
!3387 = !DILocation(line: 1652, column: 56, scope: !3383)
!3388 = !DILocation(line: 1652, column: 9, scope: !3374)
!3389 = !DILocation(line: 1654, column: 16, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 1654, column: 9)
!3391 = !DILocation(line: 1654, column: 9, scope: !3374)
!3392 = !DILocation(line: 1655, column: 19, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1654, column: 42)
!3394 = !DILocation(line: 1655, column: 16, scope: !3393)
!3395 = !DILocation(line: 1656, column: 24, scope: !3393)
!3396 = !DILocation(line: 1656, column: 29, scope: !3393)
!3397 = !DILocation(line: 1656, column: 41, scope: !3393)
!3398 = !DILocation(line: 1656, column: 49, scope: !3393)
!3399 = !DILocation(line: 1656, column: 9, scope: !3393)
!3400 = !DILocation(line: 1657, column: 5, scope: !3393)
!3401 = !DILocation(line: 1658, column: 27, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1657, column: 12)
!3403 = !DILocation(line: 1658, column: 35, scope: !3402)
!3404 = !DILocation(line: 1658, column: 9, scope: !3402)
!3405 = !DILocation(line: 1660, column: 5, scope: !3374)
!3406 = !DILocation(line: 0, scope: !3374)
!3407 = !DILocation(line: 0, scope: !3383)
!3408 = !DILocation(line: 1661, column: 1, scope: !3374)
!3409 = distinct !DISubprogram(name: "RM_StringSet", scope: !3, file: !3, line: 1671, type: !3410, isLocal: false, isDefinition: true, scopeLine: 1671, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3412)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!17, !991, !143}
!3412 = !{!3413, !3414}
!3413 = !DILocalVariable(name: "key", arg: 1, scope: !3409, file: !3, line: 1671, type: !991)
!3414 = !DILocalVariable(name: "str", arg: 2, scope: !3409, file: !3, line: 1671, type: !143)
!3415 = !DILocation(line: 1671, column: 34, scope: !3409)
!3416 = !DILocation(line: 1671, column: 58, scope: !3409)
!3417 = !DILocation(line: 1672, column: 16, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 1672, column: 9)
!3419 = !DILocation(line: 1672, column: 21, scope: !3418)
!3420 = !DILocation(line: 1672, column: 42, scope: !3418)
!3421 = !DILocation(line: 1672, column: 50, scope: !3418)
!3422 = !DILocation(line: 1672, column: 45, scope: !3418)
!3423 = !DILocation(line: 1672, column: 9, scope: !3409)
!3424 = !DILocation(line: 1609, column: 34, scope: !3310, inlinedAt: !3425)
!3425 = distinct !DILocation(line: 1673, column: 5, scope: !3409)
!3426 = !DILocation(line: 1610, column: 9, scope: !3310, inlinedAt: !3425)
!3427 = !DILocation(line: 1611, column: 14, scope: !3319, inlinedAt: !3425)
!3428 = !DILocation(line: 1611, column: 9, scope: !3319, inlinedAt: !3425)
!3429 = !DILocation(line: 1611, column: 9, scope: !3310, inlinedAt: !3425)
!3430 = !DILocation(line: 0, scope: !3409)
!3431 = !DILocation(line: 1674, column: 25, scope: !3409)
!3432 = !DILocation(line: 1612, column: 23, scope: !3323, inlinedAt: !3425)
!3433 = !DILocation(line: 1612, column: 31, scope: !3323, inlinedAt: !3425)
!3434 = !DILocation(line: 1612, column: 9, scope: !3323, inlinedAt: !3425)
!3435 = !DILocation(line: 1613, column: 20, scope: !3323, inlinedAt: !3425)
!3436 = !DILocation(line: 1614, column: 5, scope: !3323, inlinedAt: !3425)
!3437 = !DILocation(line: 1615, column: 5, scope: !3310, inlinedAt: !3425)
!3438 = !DILocation(line: 1616, column: 1, scope: !3310, inlinedAt: !3425)
!3439 = !DILocation(line: 1674, column: 17, scope: !3409)
!3440 = !DILocation(line: 1674, column: 5, scope: !3409)
!3441 = !DILocation(line: 1675, column: 16, scope: !3409)
!3442 = !DILocation(line: 1676, column: 5, scope: !3409)
!3443 = !DILocation(line: 0, scope: !3418)
!3444 = !DILocation(line: 1677, column: 1, scope: !3409)
!3445 = distinct !DISubprogram(name: "RM_StringDMA", scope: !3, file: !3, line: 1708, type: !3446, isLocal: false, isDefinition: true, scopeLine: 1708, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3448)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!9, !991, !2145, !17}
!3448 = !{!3449, !3450, !3451, !3452}
!3449 = !DILocalVariable(name: "key", arg: 1, scope: !3445, file: !3, line: 1708, type: !991)
!3450 = !DILocalVariable(name: "len", arg: 2, scope: !3445, file: !3, line: 1708, type: !2145)
!3451 = !DILocalVariable(name: "mode", arg: 3, scope: !3445, file: !3, line: 1708, type: !17)
!3452 = !DILocalVariable(name: "emptystring", scope: !3445, file: !3, line: 1713, type: !9)
!3453 = !DILocation(line: 1708, column: 36, scope: !3445)
!3454 = !DILocation(line: 1708, column: 49, scope: !3445)
!3455 = !DILocation(line: 1708, column: 58, scope: !3445)
!3456 = !DILocation(line: 1714, column: 14, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1714, column: 9)
!3458 = !DILocation(line: 1714, column: 20, scope: !3457)
!3459 = !DILocation(line: 1714, column: 9, scope: !3445)
!3460 = !DILocation(line: 1719, column: 21, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1719, column: 9)
!3462 = !DILocation(line: 1719, column: 26, scope: !3461)
!3463 = !DILocation(line: 1719, column: 9, scope: !3445)
!3464 = !DILocation(line: 1723, column: 15, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 1723, column: 9)
!3466 = !DILocation(line: 1723, column: 36, scope: !3465)
!3467 = !DILocation(line: 1723, column: 51, scope: !3465)
!3468 = !DILocation(line: 1723, column: 60, scope: !3465)
!3469 = !DILocation(line: 1723, column: 9, scope: !3445)
!3470 = !DILocation(line: 1724, column: 48, scope: !3465)
!3471 = !DILocation(line: 1724, column: 57, scope: !3465)
!3472 = !DILocation(line: 1724, column: 22, scope: !3465)
!3473 = !DILocation(line: 1724, column: 20, scope: !3465)
!3474 = !DILocation(line: 1724, column: 9, scope: !3465)
!3475 = !DILocation(line: 1726, column: 24, scope: !3445)
!3476 = !DILocation(line: 1726, column: 31, scope: !3445)
!3477 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !3478)
!3478 = distinct !DILocation(line: 1726, column: 12, scope: !3445)
!3479 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !3478)
!3480 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !3478)
!3481 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !3478)
!3482 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !3478)
!3483 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !3478)
!3484 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !3478)
!3485 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !3478)
!3486 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !3478)
!3487 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !3478)
!3488 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !3478)
!3489 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !3478)
!3490 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !3478)
!3491 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !3478)
!3492 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !3478)
!3493 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !3478)
!3494 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !3478)
!3495 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !3478)
!3496 = !DILocation(line: 0, scope: !2179, inlinedAt: !3478)
!3497 = !DILocation(line: 0, scope: !3445)
!3498 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !3478)
!3499 = !DILocation(line: 1727, column: 5, scope: !3445)
!3500 = !DILocation(line: 0, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 1714, column: 29)
!3502 = !DILocation(line: 1728, column: 1, scope: !3445)
!3503 = distinct !DISubprogram(name: "RM_StringTruncate", scope: !3, file: !3, line: 1742, type: !3504, isLocal: false, isDefinition: true, scopeLine: 1742, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!17, !991, !157}
!3506 = !{!3507, !3508, !3509, !3512}
!3507 = !DILocalVariable(name: "key", arg: 1, scope: !3503, file: !3, line: 1742, type: !991)
!3508 = !DILocalVariable(name: "newlen", arg: 2, scope: !3503, file: !3, line: 1742, type: !157)
!3509 = !DILocalVariable(name: "o", scope: !3510, file: !3, line: 1753, type: !143)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 1751, column: 29)
!3511 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1751, column: 9)
!3512 = !DILocalVariable(name: "curlen", scope: !3513, file: !3, line: 1760, type: !157)
!3513 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 1757, column: 12)
!3514 = !DILocation(line: 1742, column: 39, scope: !3503)
!3515 = !DILocation(line: 1742, column: 51, scope: !3503)
!3516 = !DILocation(line: 1743, column: 16, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1743, column: 9)
!3518 = !DILocation(line: 1743, column: 21, scope: !3517)
!3519 = !DILocation(line: 1743, column: 9, scope: !3503)
!3520 = !DILocation(line: 1744, column: 14, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1744, column: 9)
!3522 = !DILocation(line: 1744, column: 9, scope: !3521)
!3523 = !DILocation(line: 1744, column: 20, scope: !3521)
!3524 = !DILocation(line: 1744, column: 35, scope: !3521)
!3525 = !DILocation(line: 1744, column: 40, scope: !3521)
!3526 = !DILocation(line: 1744, column: 9, scope: !3503)
!3527 = !DILocation(line: 1745, column: 16, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1745, column: 9)
!3529 = !DILocation(line: 1745, column: 9, scope: !3503)
!3530 = !DILocation(line: 1749, column: 38, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3503, file: !3, line: 1749, column: 9)
!3532 = !DILocation(line: 1749, column: 28, scope: !3531)
!3533 = !DILocation(line: 0, scope: !3503)
!3534 = !DILocation(line: 1751, column: 9, scope: !3503)
!3535 = !DILocation(line: 1753, column: 43, scope: !3510)
!3536 = !DILocation(line: 1753, column: 19, scope: !3510)
!3537 = !DILocation(line: 1753, column: 15, scope: !3510)
!3538 = !DILocation(line: 1754, column: 21, scope: !3510)
!3539 = !DILocation(line: 1754, column: 29, scope: !3510)
!3540 = !DILocation(line: 1754, column: 9, scope: !3510)
!3541 = !DILocation(line: 1755, column: 20, scope: !3510)
!3542 = !DILocation(line: 1756, column: 9, scope: !3510)
!3543 = !DILocation(line: 1757, column: 5, scope: !3510)
!3544 = !DILocation(line: 1759, column: 48, scope: !3513)
!3545 = !DILocation(line: 1759, column: 57, scope: !3513)
!3546 = !DILocation(line: 1759, column: 22, scope: !3513)
!3547 = !DILocation(line: 1759, column: 20, scope: !3513)
!3548 = !DILocation(line: 1760, column: 44, scope: !3513)
!3549 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !3550)
!3550 = distinct !DILocation(line: 1760, column: 25, scope: !3513)
!3551 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !3550)
!3552 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !3550)
!3553 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !3550)
!3554 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !3550)
!3555 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !3550)
!3556 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !3550)
!3557 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !3550)
!3558 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !3550)
!3559 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !3550)
!3560 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !3550)
!3561 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !3550)
!3562 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !3550)
!3563 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !3550)
!3564 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !3550)
!3565 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !3550)
!3566 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !3550)
!3567 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !3550)
!3568 = !DILocation(line: 0, scope: !2179, inlinedAt: !3550)
!3569 = !DILocation(line: 0, scope: !3513)
!3570 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !3550)
!3571 = !DILocation(line: 1760, column: 16, scope: !3513)
!3572 = !DILocation(line: 1761, column: 20, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 1761, column: 13)
!3574 = !DILocation(line: 1761, column: 13, scope: !3513)
!3575 = !DILocation(line: 1762, column: 31, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1761, column: 30)
!3577 = !DILocation(line: 1762, column: 18, scope: !3576)
!3578 = !DILocation(line: 1762, column: 25, scope: !3576)
!3579 = !DILocation(line: 1762, column: 29, scope: !3576)
!3580 = !DILocation(line: 1763, column: 9, scope: !3576)
!3581 = !DILocation(line: 1763, column: 27, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 1763, column: 20)
!3583 = !DILocation(line: 1763, column: 20, scope: !3573)
!3584 = !DILocation(line: 1764, column: 46, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3582, file: !3, line: 1763, column: 37)
!3586 = !DILocation(line: 1764, column: 13, scope: !3585)
!3587 = !DILocation(line: 1766, column: 29, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3585, file: !3, line: 1766, column: 17)
!3589 = !DILocation(line: 1766, column: 36, scope: !3588)
!3590 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !3591)
!3591 = distinct !DILocation(line: 1766, column: 17, scope: !3588)
!3592 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !3591)
!3593 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !3591)
!3594 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !3591)
!3595 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !3591)
!3596 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !3591)
!3597 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !3591)
!3598 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !3591)
!3599 = !DILocalVariable(name: "s", arg: 1, scope: !3600, file: !155, line: 104, type: !2170)
!3600 = distinct !DISubprogram(name: "sdsavail", scope: !155, file: !155, line: 104, type: !2168, isLocal: true, isDefinition: true, scopeLine: 104, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3601)
!3601 = !{!3599, !3602, !3603, !3606, !3608, !3610}
!3602 = !DILocalVariable(name: "flags", scope: !3600, file: !155, line: 105, type: !347)
!3603 = !DILocalVariable(name: "sh", scope: !3604, file: !155, line: 111, type: !699)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !155, line: 110, column: 26)
!3605 = distinct !DILexicalBlock(scope: !3600, file: !155, line: 106, column: 33)
!3606 = !DILocalVariable(name: "sh", scope: !3607, file: !155, line: 115, type: !708)
!3607 = distinct !DILexicalBlock(scope: !3605, file: !155, line: 114, column: 27)
!3608 = !DILocalVariable(name: "sh", scope: !3609, file: !155, line: 119, type: !717)
!3609 = distinct !DILexicalBlock(scope: !3605, file: !155, line: 118, column: 27)
!3610 = !DILocalVariable(name: "sh", scope: !3611, file: !155, line: 123, type: !724)
!3611 = distinct !DILexicalBlock(scope: !3605, file: !155, line: 122, column: 27)
!3612 = !DILocation(line: 104, column: 41, scope: !3600, inlinedAt: !3613)
!3613 = distinct !DILocation(line: 1766, column: 43, scope: !3588)
!3614 = !DILocation(line: 105, column: 19, scope: !3600, inlinedAt: !3613)
!3615 = !DILocation(line: 106, column: 5, scope: !3600, inlinedAt: !3613)
!3616 = !DILocation(line: 111, column: 13, scope: !3604, inlinedAt: !3613)
!3617 = !DILocation(line: 112, column: 24, scope: !3604, inlinedAt: !3613)
!3618 = !DILocation(line: 112, column: 20, scope: !3604, inlinedAt: !3613)
!3619 = !DILocation(line: 112, column: 30, scope: !3604, inlinedAt: !3613)
!3620 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !3591)
!3621 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !3591)
!3622 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !3591)
!3623 = !DILocation(line: 115, column: 13, scope: !3607, inlinedAt: !3613)
!3624 = !DILocation(line: 116, column: 24, scope: !3607, inlinedAt: !3613)
!3625 = !DILocation(line: 116, column: 20, scope: !3607, inlinedAt: !3613)
!3626 = !DILocation(line: 116, column: 30, scope: !3607, inlinedAt: !3613)
!3627 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !3591)
!3628 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !3591)
!3629 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !3591)
!3630 = !DILocation(line: 119, column: 13, scope: !3609, inlinedAt: !3613)
!3631 = !DILocation(line: 120, column: 24, scope: !3609, inlinedAt: !3613)
!3632 = !DILocation(line: 120, column: 30, scope: !3609, inlinedAt: !3613)
!3633 = !DILocation(line: 120, column: 20, scope: !3609, inlinedAt: !3613)
!3634 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !3591)
!3635 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !3591)
!3636 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !3591)
!3637 = !DILocation(line: 123, column: 13, scope: !3611, inlinedAt: !3613)
!3638 = !DILocation(line: 124, column: 24, scope: !3611, inlinedAt: !3613)
!3639 = !DILocation(line: 124, column: 30, scope: !3611, inlinedAt: !3613)
!3640 = !DILocation(line: 0, scope: !3588)
!3641 = !DILocation(line: 128, column: 1, scope: !3600, inlinedAt: !3613)
!3642 = !DILocation(line: 1766, column: 17, scope: !3585)
!3643 = !DILocation(line: 0, scope: !3644, inlinedAt: !3613)
!3644 = distinct !DILexicalBlock(scope: !3605, file: !155, line: 107, column: 26)
!3645 = !DILocation(line: 1766, column: 41, scope: !3588)
!3646 = !DILocation(line: 1767, column: 35, scope: !3588)
!3647 = !DILocation(line: 1767, column: 22, scope: !3588)
!3648 = !DILocation(line: 1767, column: 29, scope: !3588)
!3649 = !DILocation(line: 1767, column: 33, scope: !3588)
!3650 = !DILocation(line: 1767, column: 17, scope: !3588)
!3651 = !DILocation(line: 1770, column: 5, scope: !3503)
!3652 = !DILocation(line: 0, scope: !3517)
!3653 = !DILocation(line: 1771, column: 1, scope: !3503)
!3654 = distinct !DISubprogram(name: "RM_ListPush", scope: !3, file: !3, line: 1781, type: !3655, isLocal: false, isDefinition: true, scopeLine: 1781, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3657)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!17, !991, !17, !143}
!3657 = !{!3658, !3659, !3660}
!3658 = !DILocalVariable(name: "key", arg: 1, scope: !3654, file: !3, line: 1781, type: !991)
!3659 = !DILocalVariable(name: "where", arg: 2, scope: !3654, file: !3, line: 1781, type: !17)
!3660 = !DILocalVariable(name: "ele", arg: 3, scope: !3654, file: !3, line: 1781, type: !143)
!3661 = !DILocation(line: 1781, column: 33, scope: !3654)
!3662 = !DILocation(line: 1781, column: 42, scope: !3654)
!3663 = !DILocation(line: 1781, column: 68, scope: !3654)
!3664 = !DILocation(line: 1782, column: 16, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 1782, column: 9)
!3666 = !DILocation(line: 1782, column: 21, scope: !3665)
!3667 = !DILocation(line: 1782, column: 9, scope: !3654)
!3668 = !DILocation(line: 1783, column: 14, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 1783, column: 9)
!3670 = !DILocation(line: 1783, column: 9, scope: !3669)
!3671 = !DILocation(line: 1783, column: 20, scope: !3669)
!3672 = !DILocation(line: 1783, column: 35, scope: !3669)
!3673 = !DILocation(line: 1783, column: 40, scope: !3669)
!3674 = !DILocation(line: 1783, column: 9, scope: !3654)
!3675 = !DILocation(line: 0, scope: !3669)
!3676 = !DILocation(line: 1784, column: 9, scope: !3654)
!3677 = !DILocation(line: 419, column: 42, scope: !988, inlinedAt: !3678)
!3678 = distinct !DILocation(line: 1784, column: 29, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 1784, column: 9)
!3680 = !DILocation(line: 419, column: 51, scope: !988, inlinedAt: !3678)
!3681 = !DILocation(line: 423, column: 42, scope: !1029, inlinedAt: !3678)
!3682 = !DILocation(line: 423, column: 9, scope: !988, inlinedAt: !3678)
!3683 = !DILocation(line: 426, column: 5, scope: !988, inlinedAt: !3678)
!3684 = !DILocation(line: 428, column: 15, scope: !1043, inlinedAt: !3678)
!3685 = !DILocation(line: 420, column: 11, scope: !988, inlinedAt: !3678)
!3686 = !DILocation(line: 429, column: 34, scope: !1043, inlinedAt: !3678)
!3687 = !DILocation(line: 429, column: 46, scope: !1043, inlinedAt: !3678)
!3688 = !DILocation(line: 430, column: 36, scope: !1043, inlinedAt: !3678)
!3689 = !DILocation(line: 429, column: 9, scope: !1043, inlinedAt: !3678)
!3690 = !DILocation(line: 431, column: 9, scope: !1043, inlinedAt: !3678)
!3691 = !DILocation(line: 440, column: 16, scope: !988, inlinedAt: !3678)
!3692 = !DILocation(line: 440, column: 24, scope: !988, inlinedAt: !3678)
!3693 = !DILocation(line: 440, column: 5, scope: !988, inlinedAt: !3678)
!3694 = !DILocation(line: 441, column: 16, scope: !988, inlinedAt: !3678)
!3695 = !DILocation(line: 442, column: 5, scope: !988, inlinedAt: !3678)
!3696 = !DILocation(line: 443, column: 1, scope: !988, inlinedAt: !3678)
!3697 = !DILocation(line: 1784, column: 29, scope: !3679)
!3698 = !DILocation(line: 1785, column: 23, scope: !3654)
!3699 = !DILocation(line: 1786, column: 16, scope: !3654)
!3700 = !DILocation(line: 1786, column: 9, scope: !3654)
!3701 = !DILocation(line: 1785, column: 5, scope: !3654)
!3702 = !DILocation(line: 1787, column: 5, scope: !3654)
!3703 = !DILocation(line: 0, scope: !3665)
!3704 = !DILocation(line: 1788, column: 1, scope: !3654)
!3705 = distinct !DISubprogram(name: "RM_ListPop", scope: !3, file: !3, line: 1797, type: !3706, isLocal: false, isDefinition: true, scopeLine: 1797, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3708)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!143, !991, !17}
!3708 = !{!3709, !3710, !3711, !3712}
!3709 = !DILocalVariable(name: "key", arg: 1, scope: !3705, file: !3, line: 1797, type: !991)
!3710 = !DILocalVariable(name: "where", arg: 2, scope: !3705, file: !3, line: 1797, type: !17)
!3711 = !DILocalVariable(name: "ele", scope: !3705, file: !3, line: 1801, type: !143)
!3712 = !DILocalVariable(name: "decoded", scope: !3705, file: !3, line: 1803, type: !143)
!3713 = !DILocation(line: 1797, column: 47, scope: !3705)
!3714 = !DILocation(line: 1797, column: 56, scope: !3705)
!3715 = !DILocation(line: 1798, column: 16, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3705, file: !3, line: 1798, column: 9)
!3717 = !DILocation(line: 1798, column: 21, scope: !3716)
!3718 = !DILocation(line: 1798, column: 42, scope: !3716)
!3719 = !DILocation(line: 1799, column: 14, scope: !3716)
!3720 = !DILocation(line: 1799, column: 20, scope: !3716)
!3721 = !DILocation(line: 1799, column: 28, scope: !3716)
!3722 = !DILocation(line: 1800, column: 21, scope: !3716)
!3723 = !DILocation(line: 1800, column: 26, scope: !3716)
!3724 = !DILocation(line: 1798, column: 9, scope: !3705)
!3725 = !DILocation(line: 1802, column: 16, scope: !3705)
!3726 = !DILocation(line: 1802, column: 9, scope: !3705)
!3727 = !DILocation(line: 1801, column: 17, scope: !3705)
!3728 = !DILocation(line: 1801, column: 11, scope: !3705)
!3729 = !DILocation(line: 1803, column: 21, scope: !3705)
!3730 = !DILocation(line: 1803, column: 11, scope: !3705)
!3731 = !DILocation(line: 1804, column: 5, scope: !3705)
!3732 = !DILocation(line: 1805, column: 5, scope: !3705)
!3733 = !DILocation(line: 1806, column: 24, scope: !3705)
!3734 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !3735)
!3735 = distinct !DILocation(line: 1806, column: 5, scope: !3705)
!3736 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !3735)
!3737 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !3735)
!3738 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !3735)
!3739 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !3735)
!3740 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !3735)
!3741 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !3735)
!3742 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !3735)
!3743 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !3735)
!3744 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !3735)
!3745 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !3735)
!3746 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !3735)
!3747 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !3735)
!3748 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !3735)
!3749 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !3735)
!3750 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !3735)
!3751 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !3735)
!3752 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !3735)
!3753 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !3735)
!3754 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !3735)
!3755 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !3735)
!3756 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !3735)
!3757 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !3735)
!3758 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !3735)
!3759 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !3735)
!3760 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !3735)
!3761 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !3735)
!3762 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !3735)
!3763 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !3735)
!3764 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !3735)
!3765 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !3735)
!3766 = !DILocation(line: 0, scope: !3705)
!3767 = !DILocation(line: 1808, column: 1, scope: !3705)
!3768 = distinct !DISubprogram(name: "RM_ZsetAddFlagsToCoreFlags", scope: !3, file: !3, line: 1816, type: !3769, isLocal: false, isDefinition: true, scopeLine: 1816, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3771)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!17, !17}
!3771 = !{!3772, !3773}
!3772 = !DILocalVariable(name: "flags", arg: 1, scope: !3768, file: !3, line: 1816, type: !17)
!3773 = !DILocalVariable(name: "retflags", scope: !3768, file: !3, line: 1817, type: !17)
!3774 = !DILocation(line: 1816, column: 36, scope: !3768)
!3775 = !DILocation(line: 1817, column: 9, scope: !3768)
!3776 = !DILocation(line: 1818, column: 15, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 1818, column: 9)
!3778 = !DILocation(line: 1818, column: 9, scope: !3768)
!3779 = !DILocation(line: 1818, column: 38, scope: !3777)
!3780 = !DILocation(line: 0, scope: !3768)
!3781 = !DILocation(line: 1819, column: 15, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 1819, column: 9)
!3783 = !DILocation(line: 1819, column: 9, scope: !3768)
!3784 = !DILocation(line: 1819, column: 47, scope: !3782)
!3785 = !DILocation(line: 1819, column: 38, scope: !3782)
!3786 = !DILocation(line: 0, scope: !3777)
!3787 = !DILocation(line: 1820, column: 5, scope: !3768)
!3788 = distinct !DISubprogram(name: "RM_ZsetAddFlagsFromCoreFlags", scope: !3, file: !3, line: 1824, type: !3769, isLocal: false, isDefinition: true, scopeLine: 1824, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3789)
!3789 = !{!3790, !3791}
!3790 = !DILocalVariable(name: "flags", arg: 1, scope: !3788, file: !3, line: 1824, type: !17)
!3791 = !DILocalVariable(name: "retflags", scope: !3788, file: !3, line: 1825, type: !17)
!3792 = !DILocation(line: 1824, column: 38, scope: !3788)
!3793 = !DILocation(line: 1825, column: 9, scope: !3788)
!3794 = !DILocation(line: 1826, column: 15, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 1826, column: 9)
!3796 = !DILocation(line: 1826, column: 9, scope: !3788)
!3797 = !DILocation(line: 1826, column: 29, scope: !3795)
!3798 = !DILocation(line: 0, scope: !3788)
!3799 = !DILocation(line: 1827, column: 15, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 1827, column: 9)
!3801 = !DILocation(line: 1827, column: 9, scope: !3788)
!3802 = !DILocation(line: 1827, column: 40, scope: !3800)
!3803 = !DILocation(line: 1827, column: 31, scope: !3800)
!3804 = !DILocation(line: 0, scope: !3795)
!3805 = !DILocation(line: 1828, column: 15, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 1828, column: 9)
!3807 = !DILocation(line: 1828, column: 9, scope: !3788)
!3808 = !DILocation(line: 1828, column: 36, scope: !3806)
!3809 = !DILocation(line: 1828, column: 27, scope: !3806)
!3810 = !DILocation(line: 0, scope: !3800)
!3811 = !DILocation(line: 1829, column: 5, scope: !3788)
!3812 = distinct !DISubprogram(name: "RM_ZsetAdd", scope: !3, file: !3, line: 1860, type: !3813, isLocal: false, isDefinition: true, scopeLine: 1860, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!17, !991, !96, !143, !16}
!3815 = !{!3816, !3817, !3818, !3819, !3820}
!3816 = !DILocalVariable(name: "key", arg: 1, scope: !3812, file: !3, line: 1860, type: !991)
!3817 = !DILocalVariable(name: "score", arg: 2, scope: !3812, file: !3, line: 1860, type: !96)
!3818 = !DILocalVariable(name: "ele", arg: 3, scope: !3812, file: !3, line: 1860, type: !143)
!3819 = !DILocalVariable(name: "flagsptr", arg: 4, scope: !3812, file: !3, line: 1860, type: !16)
!3820 = !DILocalVariable(name: "flags", scope: !3812, file: !3, line: 1861, type: !17)
!3821 = !DILocation(line: 1860, column: 32, scope: !3812)
!3822 = !DILocation(line: 1860, column: 44, scope: !3812)
!3823 = !DILocation(line: 1860, column: 70, scope: !3812)
!3824 = !DILocation(line: 1860, column: 80, scope: !3812)
!3825 = !DILocation(line: 1861, column: 5, scope: !3812)
!3826 = !DILocation(line: 1861, column: 9, scope: !3812)
!3827 = !DILocation(line: 1862, column: 16, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1862, column: 9)
!3829 = !DILocation(line: 1862, column: 21, scope: !3828)
!3830 = !DILocation(line: 1862, column: 9, scope: !3812)
!3831 = !DILocation(line: 1863, column: 14, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1863, column: 9)
!3833 = !DILocation(line: 1863, column: 9, scope: !3832)
!3834 = !DILocation(line: 1863, column: 20, scope: !3832)
!3835 = !DILocation(line: 1863, column: 35, scope: !3832)
!3836 = !DILocation(line: 1863, column: 40, scope: !3832)
!3837 = !DILocation(line: 1863, column: 9, scope: !3812)
!3838 = !DILocation(line: 0, scope: !3832)
!3839 = !DILocation(line: 1864, column: 9, scope: !3812)
!3840 = !DILocation(line: 419, column: 42, scope: !988, inlinedAt: !3841)
!3841 = distinct !DILocation(line: 1864, column: 29, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1864, column: 9)
!3843 = !DILocation(line: 419, column: 51, scope: !988, inlinedAt: !3841)
!3844 = !DILocation(line: 423, column: 42, scope: !1029, inlinedAt: !3841)
!3845 = !DILocation(line: 423, column: 9, scope: !988, inlinedAt: !3841)
!3846 = !DILocation(line: 426, column: 5, scope: !988, inlinedAt: !3841)
!3847 = !DILocation(line: 433, column: 15, scope: !1043, inlinedAt: !3841)
!3848 = !DILocation(line: 420, column: 11, scope: !988, inlinedAt: !3841)
!3849 = !DILocation(line: 434, column: 9, scope: !1043, inlinedAt: !3841)
!3850 = !DILocation(line: 440, column: 16, scope: !988, inlinedAt: !3841)
!3851 = !DILocation(line: 440, column: 24, scope: !988, inlinedAt: !3841)
!3852 = !DILocation(line: 440, column: 5, scope: !988, inlinedAt: !3841)
!3853 = !DILocation(line: 441, column: 16, scope: !988, inlinedAt: !3841)
!3854 = !DILocation(line: 442, column: 5, scope: !988, inlinedAt: !3841)
!3855 = !DILocation(line: 443, column: 1, scope: !988, inlinedAt: !3841)
!3856 = !DILocation(line: 1864, column: 29, scope: !3842)
!3857 = !DILocation(line: 1865, column: 9, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1865, column: 9)
!3859 = !DILocation(line: 1865, column: 9, scope: !3812)
!3860 = !DILocation(line: 1865, column: 54, scope: !3858)
!3861 = !DILocation(line: 1816, column: 36, scope: !3768, inlinedAt: !3862)
!3862 = distinct !DILocation(line: 1865, column: 27, scope: !3858)
!3863 = !DILocation(line: 1817, column: 9, scope: !3768, inlinedAt: !3862)
!3864 = !DILocation(line: 1818, column: 15, scope: !3777, inlinedAt: !3862)
!3865 = !DILocation(line: 1818, column: 9, scope: !3768, inlinedAt: !3862)
!3866 = !DILocation(line: 1818, column: 38, scope: !3777, inlinedAt: !3862)
!3867 = !DILocation(line: 0, scope: !3768, inlinedAt: !3862)
!3868 = !DILocation(line: 1819, column: 15, scope: !3782, inlinedAt: !3862)
!3869 = !DILocation(line: 1819, column: 9, scope: !3768, inlinedAt: !3862)
!3870 = !DILocation(line: 1819, column: 47, scope: !3782, inlinedAt: !3862)
!3871 = !DILocation(line: 1819, column: 38, scope: !3782, inlinedAt: !3862)
!3872 = !DILocation(line: 0, scope: !3777, inlinedAt: !3862)
!3873 = !DILocation(line: 1820, column: 5, scope: !3768, inlinedAt: !3862)
!3874 = !DILocation(line: 1865, column: 25, scope: !3858)
!3875 = !DILocation(line: 1865, column: 19, scope: !3858)
!3876 = !DILocation(line: 1866, column: 39, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1866, column: 9)
!3878 = !DILocation(line: 1866, column: 9, scope: !3877)
!3879 = !DILocation(line: 1866, column: 56, scope: !3877)
!3880 = !DILocation(line: 1866, column: 9, scope: !3812)
!3881 = !DILocation(line: 0, scope: !3812)
!3882 = !DILocation(line: 1867, column: 13, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 1866, column: 62)
!3884 = !DILocation(line: 1867, column: 33, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3883, file: !3, line: 1867, column: 13)
!3886 = !DILocation(line: 1867, column: 23, scope: !3885)
!3887 = !DILocation(line: 1870, column: 9, scope: !3812)
!3888 = !DILocation(line: 1870, column: 60, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 1870, column: 9)
!3890 = !DILocation(line: 1824, column: 38, scope: !3788, inlinedAt: !3891)
!3891 = distinct !DILocation(line: 1870, column: 31, scope: !3889)
!3892 = !DILocation(line: 1825, column: 9, scope: !3788, inlinedAt: !3891)
!3893 = !DILocation(line: 1826, column: 15, scope: !3795, inlinedAt: !3891)
!3894 = !DILocation(line: 1826, column: 9, scope: !3788, inlinedAt: !3891)
!3895 = !DILocation(line: 1826, column: 29, scope: !3795, inlinedAt: !3891)
!3896 = !DILocation(line: 0, scope: !3788, inlinedAt: !3891)
!3897 = !DILocation(line: 1827, column: 15, scope: !3800, inlinedAt: !3891)
!3898 = !DILocation(line: 1827, column: 9, scope: !3788, inlinedAt: !3891)
!3899 = !DILocation(line: 1827, column: 40, scope: !3800, inlinedAt: !3891)
!3900 = !DILocation(line: 1827, column: 31, scope: !3800, inlinedAt: !3891)
!3901 = !DILocation(line: 0, scope: !3795, inlinedAt: !3891)
!3902 = !DILocation(line: 1828, column: 15, scope: !3806, inlinedAt: !3891)
!3903 = !DILocation(line: 1828, column: 9, scope: !3788, inlinedAt: !3891)
!3904 = !DILocation(line: 1828, column: 36, scope: !3806, inlinedAt: !3891)
!3905 = !DILocation(line: 1828, column: 27, scope: !3806, inlinedAt: !3891)
!3906 = !DILocation(line: 0, scope: !3800, inlinedAt: !3891)
!3907 = !DILocation(line: 1829, column: 5, scope: !3788, inlinedAt: !3891)
!3908 = !DILocation(line: 1870, column: 29, scope: !3889)
!3909 = !DILocation(line: 1870, column: 19, scope: !3889)
!3910 = !DILocation(line: 0, scope: !3828)
!3911 = !DILocation(line: 1872, column: 1, scope: !3812)
!3912 = distinct !DISubprogram(name: "RM_ZsetIncrby", scope: !3, file: !3, line: 1887, type: !3913, isLocal: false, isDefinition: true, scopeLine: 1887, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3915)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!17, !991, !96, !143, !16, !2237}
!3915 = !{!3916, !3917, !3918, !3919, !3920, !3921}
!3916 = !DILocalVariable(name: "key", arg: 1, scope: !3912, file: !3, line: 1887, type: !991)
!3917 = !DILocalVariable(name: "score", arg: 2, scope: !3912, file: !3, line: 1887, type: !96)
!3918 = !DILocalVariable(name: "ele", arg: 3, scope: !3912, file: !3, line: 1887, type: !143)
!3919 = !DILocalVariable(name: "flagsptr", arg: 4, scope: !3912, file: !3, line: 1887, type: !16)
!3920 = !DILocalVariable(name: "newscore", arg: 5, scope: !3912, file: !3, line: 1887, type: !2237)
!3921 = !DILocalVariable(name: "flags", scope: !3912, file: !3, line: 1888, type: !17)
!3922 = !DILocation(line: 1887, column: 35, scope: !3912)
!3923 = !DILocation(line: 1887, column: 47, scope: !3912)
!3924 = !DILocation(line: 1887, column: 73, scope: !3912)
!3925 = !DILocation(line: 1887, column: 83, scope: !3912)
!3926 = !DILocation(line: 1887, column: 101, scope: !3912)
!3927 = !DILocation(line: 1888, column: 5, scope: !3912)
!3928 = !DILocation(line: 1888, column: 9, scope: !3912)
!3929 = !DILocation(line: 1889, column: 16, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1889, column: 9)
!3931 = !DILocation(line: 1889, column: 21, scope: !3930)
!3932 = !DILocation(line: 1889, column: 9, scope: !3912)
!3933 = !DILocation(line: 1890, column: 14, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1890, column: 9)
!3935 = !DILocation(line: 1890, column: 9, scope: !3934)
!3936 = !DILocation(line: 1890, column: 20, scope: !3934)
!3937 = !DILocation(line: 1890, column: 35, scope: !3934)
!3938 = !DILocation(line: 1890, column: 40, scope: !3934)
!3939 = !DILocation(line: 1890, column: 9, scope: !3912)
!3940 = !DILocation(line: 0, scope: !3934)
!3941 = !DILocation(line: 1891, column: 9, scope: !3912)
!3942 = !DILocation(line: 419, column: 42, scope: !988, inlinedAt: !3943)
!3943 = distinct !DILocation(line: 1891, column: 29, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1891, column: 9)
!3945 = !DILocation(line: 419, column: 51, scope: !988, inlinedAt: !3943)
!3946 = !DILocation(line: 423, column: 42, scope: !1029, inlinedAt: !3943)
!3947 = !DILocation(line: 423, column: 9, scope: !988, inlinedAt: !3943)
!3948 = !DILocation(line: 426, column: 5, scope: !988, inlinedAt: !3943)
!3949 = !DILocation(line: 433, column: 15, scope: !1043, inlinedAt: !3943)
!3950 = !DILocation(line: 420, column: 11, scope: !988, inlinedAt: !3943)
!3951 = !DILocation(line: 434, column: 9, scope: !1043, inlinedAt: !3943)
!3952 = !DILocation(line: 440, column: 16, scope: !988, inlinedAt: !3943)
!3953 = !DILocation(line: 440, column: 24, scope: !988, inlinedAt: !3943)
!3954 = !DILocation(line: 440, column: 5, scope: !988, inlinedAt: !3943)
!3955 = !DILocation(line: 441, column: 16, scope: !988, inlinedAt: !3943)
!3956 = !DILocation(line: 442, column: 5, scope: !988, inlinedAt: !3943)
!3957 = !DILocation(line: 443, column: 1, scope: !988, inlinedAt: !3943)
!3958 = !DILocation(line: 1891, column: 29, scope: !3944)
!3959 = !DILocation(line: 1892, column: 9, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1892, column: 9)
!3961 = !DILocation(line: 1892, column: 9, scope: !3912)
!3962 = !DILocation(line: 1892, column: 54, scope: !3960)
!3963 = !DILocation(line: 1816, column: 36, scope: !3768, inlinedAt: !3964)
!3964 = distinct !DILocation(line: 1892, column: 27, scope: !3960)
!3965 = !DILocation(line: 1817, column: 9, scope: !3768, inlinedAt: !3964)
!3966 = !DILocation(line: 1818, column: 15, scope: !3777, inlinedAt: !3964)
!3967 = !DILocation(line: 1818, column: 9, scope: !3768, inlinedAt: !3964)
!3968 = !DILocation(line: 1818, column: 38, scope: !3777, inlinedAt: !3964)
!3969 = !DILocation(line: 0, scope: !3768, inlinedAt: !3964)
!3970 = !DILocation(line: 1819, column: 15, scope: !3782, inlinedAt: !3964)
!3971 = !DILocation(line: 1819, column: 9, scope: !3768, inlinedAt: !3964)
!3972 = !DILocation(line: 1819, column: 47, scope: !3782, inlinedAt: !3964)
!3973 = !DILocation(line: 1819, column: 38, scope: !3782, inlinedAt: !3964)
!3974 = !DILocation(line: 0, scope: !3777, inlinedAt: !3964)
!3975 = !DILocation(line: 1820, column: 5, scope: !3768, inlinedAt: !3964)
!3976 = !DILocation(line: 1892, column: 25, scope: !3960)
!3977 = !DILocation(line: 1892, column: 19, scope: !3960)
!3978 = !DILocation(line: 1893, column: 11, scope: !3912)
!3979 = !DILocation(line: 1894, column: 39, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1894, column: 9)
!3981 = !DILocation(line: 1894, column: 9, scope: !3980)
!3982 = !DILocation(line: 1894, column: 60, scope: !3980)
!3983 = !DILocation(line: 1894, column: 9, scope: !3912)
!3984 = !DILocation(line: 0, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1899, column: 9)
!3986 = !DILocation(line: 1895, column: 13, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 1894, column: 66)
!3988 = !DILocation(line: 1895, column: 33, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1895, column: 13)
!3990 = !DILocation(line: 1895, column: 23, scope: !3989)
!3991 = !DILocation(line: 1899, column: 18, scope: !3985)
!3992 = !DILocation(line: 1899, column: 22, scope: !3985)
!3993 = !DILocation(line: 1899, column: 32, scope: !3985)
!3994 = !DILocation(line: 1899, column: 9, scope: !3912)
!3995 = !DILocation(line: 1900, column: 19, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 1899, column: 45)
!3997 = !DILocation(line: 1901, column: 9, scope: !3996)
!3998 = !DILocation(line: 1903, column: 9, scope: !3912)
!3999 = !DILocation(line: 1903, column: 60, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 1903, column: 9)
!4001 = !DILocation(line: 1824, column: 38, scope: !3788, inlinedAt: !4002)
!4002 = distinct !DILocation(line: 1903, column: 31, scope: !4000)
!4003 = !DILocation(line: 1825, column: 9, scope: !3788, inlinedAt: !4002)
!4004 = !DILocation(line: 1826, column: 15, scope: !3795, inlinedAt: !4002)
!4005 = !DILocation(line: 1826, column: 9, scope: !3788, inlinedAt: !4002)
!4006 = !DILocation(line: 1826, column: 29, scope: !3795, inlinedAt: !4002)
!4007 = !DILocation(line: 0, scope: !3788, inlinedAt: !4002)
!4008 = !DILocation(line: 1827, column: 15, scope: !3800, inlinedAt: !4002)
!4009 = !DILocation(line: 1827, column: 9, scope: !3788, inlinedAt: !4002)
!4010 = !DILocation(line: 1827, column: 40, scope: !3800, inlinedAt: !4002)
!4011 = !DILocation(line: 1827, column: 31, scope: !3800, inlinedAt: !4002)
!4012 = !DILocation(line: 0, scope: !3795, inlinedAt: !4002)
!4013 = !DILocation(line: 1828, column: 15, scope: !3806, inlinedAt: !4002)
!4014 = !DILocation(line: 1828, column: 9, scope: !3788, inlinedAt: !4002)
!4015 = !DILocation(line: 1828, column: 36, scope: !3806, inlinedAt: !4002)
!4016 = !DILocation(line: 1828, column: 27, scope: !3806, inlinedAt: !4002)
!4017 = !DILocation(line: 0, scope: !3800, inlinedAt: !4002)
!4018 = !DILocation(line: 1829, column: 5, scope: !3788, inlinedAt: !4002)
!4019 = !DILocation(line: 1903, column: 29, scope: !4000)
!4020 = !DILocation(line: 1903, column: 19, scope: !4000)
!4021 = !DILocation(line: 0, scope: !4000)
!4022 = !DILocation(line: 1904, column: 5, scope: !3912)
!4023 = !DILocation(line: 0, scope: !3930)
!4024 = !DILocation(line: 1905, column: 1, scope: !3912)
!4025 = distinct !DISubprogram(name: "RM_ZsetRem", scope: !3, file: !3, line: 1925, type: !4026, isLocal: false, isDefinition: true, scopeLine: 1925, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4028)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!17, !991, !143, !16}
!4028 = !{!4029, !4030, !4031}
!4029 = !DILocalVariable(name: "key", arg: 1, scope: !4025, file: !3, line: 1925, type: !991)
!4030 = !DILocalVariable(name: "ele", arg: 2, scope: !4025, file: !3, line: 1925, type: !143)
!4031 = !DILocalVariable(name: "deleted", arg: 3, scope: !4025, file: !3, line: 1925, type: !16)
!4032 = !DILocation(line: 1925, column: 32, scope: !4025)
!4033 = !DILocation(line: 1925, column: 56, scope: !4025)
!4034 = !DILocation(line: 1925, column: 66, scope: !4025)
!4035 = !DILocation(line: 1926, column: 16, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 1926, column: 9)
!4037 = !DILocation(line: 1926, column: 21, scope: !4036)
!4038 = !DILocation(line: 1926, column: 9, scope: !4025)
!4039 = !DILocation(line: 1927, column: 14, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 1927, column: 9)
!4041 = !DILocation(line: 1927, column: 9, scope: !4040)
!4042 = !DILocation(line: 1927, column: 20, scope: !4040)
!4043 = !DILocation(line: 1928, column: 28, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 1928, column: 9)
!4045 = !DILocation(line: 1927, column: 35, scope: !4040)
!4046 = !DILocation(line: 1927, column: 40, scope: !4040)
!4047 = !DILocation(line: 1927, column: 9, scope: !4025)
!4048 = !DILocation(line: 0, scope: !4040)
!4049 = !DILocation(line: 1928, column: 55, scope: !4044)
!4050 = !DILocation(line: 1928, column: 31, scope: !4044)
!4051 = !DILocation(line: 1928, column: 9, scope: !4025)
!4052 = !DILocation(line: 1929, column: 13, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1929, column: 13)
!4054 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1928, column: 61)
!4055 = !DILocation(line: 1929, column: 13, scope: !4054)
!4056 = !DILocation(line: 1929, column: 31, scope: !4053)
!4057 = !DILocation(line: 1929, column: 22, scope: !4053)
!4058 = !DILocation(line: 1931, column: 13, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 1931, column: 13)
!4060 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1930, column: 12)
!4061 = !DILocation(line: 1931, column: 13, scope: !4060)
!4062 = !DILocation(line: 1931, column: 31, scope: !4059)
!4063 = !DILocation(line: 1931, column: 22, scope: !4059)
!4064 = !DILocation(line: 0, scope: !4036)
!4065 = !DILocation(line: 1934, column: 1, scope: !4025)
!4066 = distinct !DISubprogram(name: "RM_ZsetScore", scope: !3, file: !3, line: 1944, type: !4067, isLocal: false, isDefinition: true, scopeLine: 1944, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!17, !991, !143, !2237}
!4069 = !{!4070, !4071, !4072}
!4070 = !DILocalVariable(name: "key", arg: 1, scope: !4066, file: !3, line: 1944, type: !991)
!4071 = !DILocalVariable(name: "ele", arg: 2, scope: !4066, file: !3, line: 1944, type: !143)
!4072 = !DILocalVariable(name: "score", arg: 3, scope: !4066, file: !3, line: 1944, type: !2237)
!4073 = !DILocation(line: 1944, column: 34, scope: !4066)
!4074 = !DILocation(line: 1944, column: 58, scope: !4066)
!4075 = !DILocation(line: 1944, column: 71, scope: !4066)
!4076 = !DILocation(line: 1945, column: 14, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1945, column: 9)
!4078 = !DILocation(line: 1945, column: 20, scope: !4077)
!4079 = !DILocation(line: 1945, column: 9, scope: !4066)
!4080 = !DILocation(line: 1945, column: 29, scope: !4077)
!4081 = !DILocation(line: 1946, column: 21, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1946, column: 9)
!4083 = !DILocation(line: 1946, column: 26, scope: !4082)
!4084 = !DILocation(line: 1946, column: 9, scope: !4066)
!4085 = !DILocation(line: 1946, column: 39, scope: !4082)
!4086 = !DILocation(line: 1947, column: 35, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1947, column: 9)
!4088 = !DILocation(line: 1947, column: 9, scope: !4087)
!4089 = !DILocation(line: 1947, column: 46, scope: !4087)
!4090 = !DILocation(line: 1947, column: 9, scope: !4066)
!4091 = !DILocation(line: 0, scope: !4066)
!4092 = !DILocation(line: 1947, column: 56, scope: !4087)
!4093 = !DILocation(line: 1949, column: 1, scope: !4066)
!4094 = distinct !DISubprogram(name: "RM_ZsetRangeEndReached", scope: !3, file: !3, line: 1973, type: !1076, isLocal: false, isDefinition: true, scopeLine: 1973, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4095)
!4095 = !{!4096}
!4096 = !DILocalVariable(name: "key", arg: 1, scope: !4094, file: !3, line: 1973, type: !991)
!4097 = !DILocation(line: 1973, column: 44, scope: !4094)
!4098 = !DILocation(line: 1974, column: 17, scope: !4094)
!4099 = !DILocation(line: 1974, column: 5, scope: !4094)
!4100 = distinct !DISubprogram(name: "zsetInitScoreRange", scope: !3, file: !3, line: 1983, type: !4101, isLocal: false, isDefinition: true, scopeLine: 1983, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4103)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!17, !991, !96, !96, !17, !17, !17}
!4103 = !{!4104, !4105, !4106, !4107, !4108, !4109, !4110, !4112, !4142}
!4104 = !DILocalVariable(name: "key", arg: 1, scope: !4100, file: !3, line: 1983, type: !991)
!4105 = !DILocalVariable(name: "min", arg: 2, scope: !4100, file: !3, line: 1983, type: !96)
!4106 = !DILocalVariable(name: "max", arg: 3, scope: !4100, file: !3, line: 1983, type: !96)
!4107 = !DILocalVariable(name: "minex", arg: 4, scope: !4100, file: !3, line: 1983, type: !17)
!4108 = !DILocalVariable(name: "maxex", arg: 5, scope: !4100, file: !3, line: 1983, type: !17)
!4109 = !DILocalVariable(name: "first", arg: 6, scope: !4100, file: !3, line: 1983, type: !17)
!4110 = !DILocalVariable(name: "zrs", scope: !4100, file: !3, line: 1992, type: !4111)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!4112 = !DILocalVariable(name: "zs", scope: !4113, file: !3, line: 2002, type: !4116)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 2001, column: 63)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 2001, column: 16)
!4115 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 1998, column: 9)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DIDerivedType(tag: DW_TAG_typedef, name: "zset", file: !13, line: 829, baseType: !4118)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zset", file: !13, line: 826, size: 128, elements: !4119)
!4119 = !{!4120, !4121}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !4118, file: !13, line: 827, baseType: !43, size: 64)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "zsl", scope: !4118, file: !13, line: 828, baseType: !4122, size: 64, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplist", file: !13, line: 824, baseType: !4124)
!4124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplist", file: !13, line: 820, size: 256, elements: !4125)
!4125 = !{!4126, !4139, !4140, !4141}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4124, file: !13, line: 821, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistNode", file: !13, line: 810, size: 192, elements: !4129)
!4129 = !{!4130, !4131, !4132, !4133}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "ele", scope: !4128, file: !13, line: 811, baseType: !154, size: 64)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "score", scope: !4128, file: !13, line: 812, baseType: !96, size: 64, offset: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "backward", scope: !4128, file: !13, line: 813, baseType: !4127, size: 64, offset: 128)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4128, file: !13, line: 817, baseType: !4134, offset: 192)
!4134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4135, elements: !624)
!4135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistLevel", file: !13, line: 814, size: 128, elements: !4136)
!4136 = !{!4137, !4138}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !4135, file: !13, line: 815, baseType: !4127, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !4135, file: !13, line: 816, baseType: !7, size: 64, offset: 64)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4124, file: !13, line: 821, baseType: !4127, size: 64, offset: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4124, file: !13, line: 822, baseType: !7, size: 64, offset: 128)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4124, file: !13, line: 823, baseType: !17, size: 32, offset: 192)
!4142 = !DILocalVariable(name: "zsl", scope: !4113, file: !3, line: 2003, type: !4122)
!4143 = !DILocation(line: 1983, column: 40, scope: !4100)
!4144 = !DILocation(line: 1983, column: 52, scope: !4100)
!4145 = !DILocation(line: 1983, column: 64, scope: !4100)
!4146 = !DILocation(line: 1983, column: 73, scope: !4100)
!4147 = !DILocation(line: 1983, column: 84, scope: !4100)
!4148 = !DILocation(line: 1983, column: 95, scope: !4100)
!4149 = !DILocation(line: 1984, column: 15, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 1984, column: 9)
!4151 = !DILocation(line: 1984, column: 10, scope: !4150)
!4152 = !DILocation(line: 1984, column: 21, scope: !4150)
!4153 = !DILocation(line: 1984, column: 36, scope: !4150)
!4154 = !DILocation(line: 1984, column: 41, scope: !4150)
!4155 = !DILocation(line: 1984, column: 9, scope: !4100)
!4156 = !DILocation(line: 1962, column: 39, scope: !1878, inlinedAt: !4157)
!4157 = distinct !DILocation(line: 1986, column: 5, scope: !4100)
!4158 = !DILocation(line: 1964, column: 14, scope: !1883, inlinedAt: !4157)
!4159 = !DILocation(line: 1964, column: 20, scope: !1883, inlinedAt: !4157)
!4160 = !DILocation(line: 1964, column: 9, scope: !1878, inlinedAt: !4157)
!4161 = !DILocation(line: 1965, column: 31, scope: !1883, inlinedAt: !4157)
!4162 = !DILocation(line: 1965, column: 9, scope: !1883, inlinedAt: !4157)
!4163 = !DILocation(line: 1998, column: 14, scope: !4115)
!4164 = !DILocation(line: 1998, column: 21, scope: !4115)
!4165 = !DILocation(line: 1955, column: 35, scope: !1890, inlinedAt: !4166)
!4166 = distinct !DILocation(line: 1969, column: 5, scope: !1878, inlinedAt: !4157)
!4167 = !DILocation(line: 1957, column: 10, scope: !1890, inlinedAt: !4166)
!4168 = !DILocation(line: 1957, column: 19, scope: !1890, inlinedAt: !4166)
!4169 = !DILocation(line: 1958, column: 10, scope: !1890, inlinedAt: !4166)
!4170 = !DILocation(line: 1959, column: 1, scope: !1890, inlinedAt: !4166)
!4171 = !DILocation(line: 1970, column: 1, scope: !1878, inlinedAt: !4157)
!4172 = !DILocation(line: 1987, column: 16, scope: !4100)
!4173 = !DILocation(line: 1988, column: 14, scope: !4100)
!4174 = !DILocation(line: 1992, column: 29, scope: !4100)
!4175 = !DILocation(line: 1992, column: 17, scope: !4100)
!4176 = !DILocation(line: 1993, column: 10, scope: !4100)
!4177 = !DILocation(line: 1993, column: 14, scope: !4100)
!4178 = !{!1032, !1033, i64 0}
!4179 = !DILocation(line: 1994, column: 10, scope: !4100)
!4180 = !DILocation(line: 1994, column: 14, scope: !4100)
!4181 = !{!1032, !1033, i64 8}
!4182 = !DILocation(line: 1995, column: 10, scope: !4100)
!4183 = !DILocation(line: 1995, column: 16, scope: !4100)
!4184 = !{!1032, !895, i64 16}
!4185 = !DILocation(line: 1996, column: 10, scope: !4100)
!4186 = !DILocation(line: 1996, column: 16, scope: !4100)
!4187 = !{!1032, !895, i64 20}
!4188 = !DILocation(line: 1998, column: 30, scope: !4115)
!4189 = !DILocation(line: 1998, column: 9, scope: !4100)
!4190 = !DILocation(line: 1999, column: 25, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4115, file: !3, line: 1998, column: 55)
!4192 = !DILocation(line: 0, scope: !4191)
!4193 = !DILocation(line: 1999, column: 33, scope: !4191)
!4194 = !DILocation(line: 2000, column: 33, scope: !4191)
!4195 = !DILocation(line: 1999, column: 23, scope: !4191)
!4196 = !DILocation(line: 2001, column: 5, scope: !4191)
!4197 = !DILocation(line: 2001, column: 37, scope: !4114)
!4198 = !DILocation(line: 2001, column: 16, scope: !4115)
!4199 = !DILocation(line: 2002, column: 32, scope: !4113)
!4200 = !DILocation(line: 2002, column: 15, scope: !4113)
!4201 = !DILocation(line: 2003, column: 30, scope: !4113)
!4202 = !{!4203, !892, i64 8}
!4203 = !{!"zset", !892, i64 0, !892, i64 8}
!4204 = !DILocation(line: 2003, column: 20, scope: !4113)
!4205 = !DILocation(line: 2004, column: 25, scope: !4113)
!4206 = !DILocation(line: 2004, column: 33, scope: !4113)
!4207 = !DILocation(line: 2005, column: 33, scope: !4113)
!4208 = !DILocation(line: 2004, column: 23, scope: !4113)
!4209 = !DILocation(line: 2007, column: 9, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 2006, column: 12)
!4211 = !DILocation(line: 2009, column: 14, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 2009, column: 9)
!4213 = !DILocation(line: 2009, column: 23, scope: !4212)
!4214 = !DILocation(line: 2009, column: 9, scope: !4100)
!4215 = !DILocation(line: 2009, column: 41, scope: !4212)
!4216 = !DILocation(line: 2009, column: 32, scope: !4212)
!4217 = !DILocation(line: 0, scope: !4100)
!4218 = !DILocation(line: 2011, column: 1, scope: !4100)
!4219 = distinct !DISubprogram(name: "RM_ZsetFirstInScoreRange", scope: !3, file: !3, line: 2028, type: !4220, isLocal: false, isDefinition: true, scopeLine: 2028, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!17, !991, !96, !96, !17, !17}
!4222 = !{!4223, !4224, !4225, !4226, !4227}
!4223 = !DILocalVariable(name: "key", arg: 1, scope: !4219, file: !3, line: 2028, type: !991)
!4224 = !DILocalVariable(name: "min", arg: 2, scope: !4219, file: !3, line: 2028, type: !96)
!4225 = !DILocalVariable(name: "max", arg: 3, scope: !4219, file: !3, line: 2028, type: !96)
!4226 = !DILocalVariable(name: "minex", arg: 4, scope: !4219, file: !3, line: 2028, type: !17)
!4227 = !DILocalVariable(name: "maxex", arg: 5, scope: !4219, file: !3, line: 2028, type: !17)
!4228 = !DILocation(line: 2028, column: 46, scope: !4219)
!4229 = !DILocation(line: 2028, column: 58, scope: !4219)
!4230 = !DILocation(line: 2028, column: 70, scope: !4219)
!4231 = !DILocation(line: 2028, column: 79, scope: !4219)
!4232 = !DILocation(line: 2028, column: 90, scope: !4219)
!4233 = !DILocation(line: 2029, column: 12, scope: !4219)
!4234 = !DILocation(line: 2029, column: 5, scope: !4219)
!4235 = distinct !DISubprogram(name: "RM_ZsetLastInScoreRange", scope: !3, file: !3, line: 2034, type: !4220, isLocal: false, isDefinition: true, scopeLine: 2034, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4236)
!4236 = !{!4237, !4238, !4239, !4240, !4241}
!4237 = !DILocalVariable(name: "key", arg: 1, scope: !4235, file: !3, line: 2034, type: !991)
!4238 = !DILocalVariable(name: "min", arg: 2, scope: !4235, file: !3, line: 2034, type: !96)
!4239 = !DILocalVariable(name: "max", arg: 3, scope: !4235, file: !3, line: 2034, type: !96)
!4240 = !DILocalVariable(name: "minex", arg: 4, scope: !4235, file: !3, line: 2034, type: !17)
!4241 = !DILocalVariable(name: "maxex", arg: 5, scope: !4235, file: !3, line: 2034, type: !17)
!4242 = !DILocation(line: 2034, column: 45, scope: !4235)
!4243 = !DILocation(line: 2034, column: 57, scope: !4235)
!4244 = !DILocation(line: 2034, column: 69, scope: !4235)
!4245 = !DILocation(line: 2034, column: 78, scope: !4235)
!4246 = !DILocation(line: 2034, column: 89, scope: !4235)
!4247 = !DILocation(line: 2035, column: 12, scope: !4235)
!4248 = !DILocation(line: 2035, column: 5, scope: !4235)
!4249 = distinct !DISubprogram(name: "zsetInitLexRange", scope: !3, file: !3, line: 2047, type: !4250, isLocal: false, isDefinition: true, scopeLine: 2047, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4252)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!17, !991, !143, !143, !17}
!4252 = !{!4253, !4254, !4255, !4256, !4257, !4259, !4263}
!4253 = !DILocalVariable(name: "key", arg: 1, scope: !4249, file: !3, line: 2047, type: !991)
!4254 = !DILocalVariable(name: "min", arg: 2, scope: !4249, file: !3, line: 2047, type: !143)
!4255 = !DILocalVariable(name: "max", arg: 3, scope: !4249, file: !3, line: 2047, type: !143)
!4256 = !DILocalVariable(name: "first", arg: 4, scope: !4249, file: !3, line: 2047, type: !17)
!4257 = !DILocalVariable(name: "zlrs", scope: !4249, file: !3, line: 2055, type: !4258)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!4259 = !DILocalVariable(name: "zs", scope: !4260, file: !3, line: 2066, type: !4116)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2065, column: 63)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2065, column: 16)
!4262 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2062, column: 9)
!4263 = !DILocalVariable(name: "zsl", scope: !4260, file: !3, line: 2067, type: !4122)
!4264 = !DILocation(line: 2047, column: 38, scope: !4249)
!4265 = !DILocation(line: 2047, column: 62, scope: !4249)
!4266 = !DILocation(line: 2047, column: 86, scope: !4249)
!4267 = !DILocation(line: 2047, column: 95, scope: !4249)
!4268 = !DILocation(line: 2048, column: 15, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2048, column: 9)
!4270 = !DILocation(line: 2048, column: 10, scope: !4269)
!4271 = !DILocation(line: 2048, column: 21, scope: !4269)
!4272 = !DILocation(line: 2048, column: 36, scope: !4269)
!4273 = !DILocation(line: 2048, column: 41, scope: !4269)
!4274 = !DILocation(line: 2048, column: 9, scope: !4249)
!4275 = !DILocation(line: 1962, column: 39, scope: !1878, inlinedAt: !4276)
!4276 = distinct !DILocation(line: 2050, column: 5, scope: !4249)
!4277 = !DILocation(line: 1964, column: 14, scope: !1883, inlinedAt: !4276)
!4278 = !DILocation(line: 1964, column: 20, scope: !1883, inlinedAt: !4276)
!4279 = !DILocation(line: 1964, column: 9, scope: !1878, inlinedAt: !4276)
!4280 = !DILocation(line: 0, scope: !4249)
!4281 = !DILocation(line: 1965, column: 9, scope: !1883, inlinedAt: !4276)
!4282 = !DILocation(line: 1955, column: 35, scope: !1890, inlinedAt: !4283)
!4283 = distinct !DILocation(line: 1969, column: 5, scope: !1878, inlinedAt: !4276)
!4284 = !DILocation(line: 1956, column: 16, scope: !1890, inlinedAt: !4283)
!4285 = !DILocation(line: 1957, column: 10, scope: !1890, inlinedAt: !4283)
!4286 = !DILocation(line: 1957, column: 19, scope: !1890, inlinedAt: !4283)
!4287 = !DILocation(line: 1958, column: 10, scope: !1890, inlinedAt: !4283)
!4288 = !DILocation(line: 1959, column: 1, scope: !1890, inlinedAt: !4283)
!4289 = !DILocation(line: 1970, column: 1, scope: !1878, inlinedAt: !4276)
!4290 = !DILocation(line: 2051, column: 14, scope: !4249)
!4291 = !DILocation(line: 2055, column: 20, scope: !4249)
!4292 = !DILocation(line: 2056, column: 9, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2056, column: 9)
!4294 = !DILocation(line: 2056, column: 42, scope: !4293)
!4295 = !DILocation(line: 2056, column: 9, scope: !4249)
!4296 = !DILocation(line: 2060, column: 16, scope: !4249)
!4297 = !DILocation(line: 2062, column: 14, scope: !4262)
!4298 = !DILocation(line: 2062, column: 21, scope: !4262)
!4299 = !DILocation(line: 2062, column: 30, scope: !4262)
!4300 = !DILocation(line: 2062, column: 9, scope: !4249)
!4301 = !DILocation(line: 2063, column: 25, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 2062, column: 55)
!4303 = !DILocation(line: 0, scope: !4302)
!4304 = !DILocation(line: 2063, column: 33, scope: !4302)
!4305 = !DILocation(line: 2064, column: 33, scope: !4302)
!4306 = !DILocation(line: 2063, column: 23, scope: !4302)
!4307 = !DILocation(line: 2065, column: 5, scope: !4302)
!4308 = !DILocation(line: 2065, column: 37, scope: !4261)
!4309 = !DILocation(line: 2065, column: 16, scope: !4262)
!4310 = !DILocation(line: 2066, column: 32, scope: !4260)
!4311 = !DILocation(line: 2066, column: 15, scope: !4260)
!4312 = !DILocation(line: 2067, column: 30, scope: !4260)
!4313 = !DILocation(line: 2067, column: 20, scope: !4260)
!4314 = !DILocation(line: 2068, column: 25, scope: !4260)
!4315 = !DILocation(line: 2068, column: 33, scope: !4260)
!4316 = !DILocation(line: 2069, column: 33, scope: !4260)
!4317 = !DILocation(line: 2068, column: 23, scope: !4260)
!4318 = !DILocation(line: 2071, column: 9, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 2070, column: 12)
!4320 = !DILocation(line: 2073, column: 14, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 2073, column: 9)
!4322 = !DILocation(line: 2073, column: 23, scope: !4321)
!4323 = !DILocation(line: 2073, column: 9, scope: !4249)
!4324 = !DILocation(line: 2073, column: 41, scope: !4321)
!4325 = !DILocation(line: 2073, column: 32, scope: !4321)
!4326 = !DILocation(line: 0, scope: !4293)
!4327 = !DILocation(line: 2076, column: 1, scope: !4249)
!4328 = distinct !DISubprogram(name: "RM_ZsetFirstInLexRange", scope: !3, file: !3, line: 2090, type: !4329, isLocal: false, isDefinition: true, scopeLine: 2090, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4331)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!17, !991, !143, !143}
!4331 = !{!4332, !4333, !4334}
!4332 = !DILocalVariable(name: "key", arg: 1, scope: !4328, file: !3, line: 2090, type: !991)
!4333 = !DILocalVariable(name: "min", arg: 2, scope: !4328, file: !3, line: 2090, type: !143)
!4334 = !DILocalVariable(name: "max", arg: 3, scope: !4328, file: !3, line: 2090, type: !143)
!4335 = !DILocation(line: 2090, column: 44, scope: !4328)
!4336 = !DILocation(line: 2090, column: 68, scope: !4328)
!4337 = !DILocation(line: 2090, column: 92, scope: !4328)
!4338 = !DILocation(line: 2091, column: 12, scope: !4328)
!4339 = !DILocation(line: 2091, column: 5, scope: !4328)
!4340 = distinct !DISubprogram(name: "RM_ZsetLastInLexRange", scope: !3, file: !3, line: 2096, type: !4329, isLocal: false, isDefinition: true, scopeLine: 2096, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4341)
!4341 = !{!4342, !4343, !4344}
!4342 = !DILocalVariable(name: "key", arg: 1, scope: !4340, file: !3, line: 2096, type: !991)
!4343 = !DILocalVariable(name: "min", arg: 2, scope: !4340, file: !3, line: 2096, type: !143)
!4344 = !DILocalVariable(name: "max", arg: 3, scope: !4340, file: !3, line: 2096, type: !143)
!4345 = !DILocation(line: 2096, column: 43, scope: !4340)
!4346 = !DILocation(line: 2096, column: 67, scope: !4340)
!4347 = !DILocation(line: 2096, column: 91, scope: !4340)
!4348 = !DILocation(line: 2097, column: 12, scope: !4340)
!4349 = !DILocation(line: 2097, column: 5, scope: !4340)
!4350 = distinct !DISubprogram(name: "RM_ZsetRangeCurrentElement", scope: !3, file: !3, line: 2103, type: !4351, isLocal: false, isDefinition: true, scopeLine: 2103, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4353)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!143, !991, !2237}
!4353 = !{!4354, !4355, !4356, !4357, !4360, !4361, !4362}
!4354 = !DILocalVariable(name: "key", arg: 1, scope: !4350, file: !3, line: 2103, type: !991)
!4355 = !DILocalVariable(name: "score", arg: 2, scope: !4350, file: !3, line: 2103, type: !2237)
!4356 = !DILocalVariable(name: "str", scope: !4350, file: !3, line: 2104, type: !143)
!4357 = !DILocalVariable(name: "eptr", scope: !4358, file: !3, line: 2108, type: !346)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 2107, column: 55)
!4359 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2107, column: 9)
!4360 = !DILocalVariable(name: "sptr", scope: !4358, file: !3, line: 2108, type: !346)
!4361 = !DILocalVariable(name: "ele", scope: !4358, file: !3, line: 2110, type: !154)
!4362 = !DILocalVariable(name: "ln", scope: !4363, file: !3, line: 2117, type: !4365)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 2116, column: 63)
!4364 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 2116, column: 16)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 64)
!4366 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplistNode", file: !13, line: 818, baseType: !4128)
!4367 = !DILocation(line: 2103, column: 63, scope: !4350)
!4368 = !DILocation(line: 2103, column: 76, scope: !4350)
!4369 = !DILocation(line: 2106, column: 14, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 2106, column: 9)
!4371 = !DILocation(line: 2106, column: 23, scope: !4370)
!4372 = !DILocation(line: 2106, column: 9, scope: !4350)
!4373 = !DILocation(line: 2107, column: 14, scope: !4359)
!4374 = !DILocation(line: 2107, column: 21, scope: !4359)
!4375 = !DILocation(line: 2107, column: 30, scope: !4359)
!4376 = !DILocation(line: 2107, column: 9, scope: !4350)
!4377 = !DILocation(line: 2108, column: 24, scope: !4358)
!4378 = !DILocation(line: 2110, column: 19, scope: !4358)
!4379 = !DILocation(line: 2110, column: 13, scope: !4358)
!4380 = !DILocation(line: 2111, column: 13, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 2111, column: 13)
!4382 = !DILocation(line: 2111, column: 13, scope: !4358)
!4383 = !DILocation(line: 2112, column: 37, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 2111, column: 20)
!4385 = !DILocation(line: 2112, column: 44, scope: !4384)
!4386 = !DILocation(line: 2112, column: 20, scope: !4384)
!4387 = !DILocation(line: 2108, column: 31, scope: !4358)
!4388 = !DILocation(line: 2113, column: 22, scope: !4384)
!4389 = !DILocation(line: 2113, column: 20, scope: !4384)
!4390 = !{!1033, !1033, i64 0}
!4391 = !DILocation(line: 2114, column: 9, scope: !4384)
!4392 = !DILocation(line: 2115, column: 15, scope: !4358)
!4393 = !DILocation(line: 2104, column: 24, scope: !4350)
!4394 = !DILocation(line: 2116, column: 5, scope: !4358)
!4395 = !DILocation(line: 2116, column: 37, scope: !4364)
!4396 = !DILocation(line: 2116, column: 16, scope: !4359)
!4397 = !DILocation(line: 2118, column: 13, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 2118, column: 13)
!4399 = !DILocation(line: 2118, column: 13, scope: !4363)
!4400 = !DILocation(line: 2117, column: 24, scope: !4363)
!4401 = !DILocation(line: 2118, column: 33, scope: !4398)
!4402 = !DILocation(line: 2118, column: 27, scope: !4398)
!4403 = !DILocation(line: 2118, column: 20, scope: !4398)
!4404 = !DILocation(line: 2119, column: 38, scope: !4363)
!4405 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !4406)
!4406 = distinct !DILocation(line: 2119, column: 42, scope: !4363)
!4407 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !4406)
!4408 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !4406)
!4409 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !4406)
!4410 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !4406)
!4411 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !4406)
!4412 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !4406)
!4413 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !4406)
!4414 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !4406)
!4415 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !4406)
!4416 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !4406)
!4417 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !4406)
!4418 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !4406)
!4419 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !4406)
!4420 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !4406)
!4421 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !4406)
!4422 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !4406)
!4423 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !4406)
!4424 = !DILocation(line: 0, scope: !2179, inlinedAt: !4406)
!4425 = !DILocation(line: 0, scope: !4363)
!4426 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !4406)
!4427 = !DILocation(line: 2119, column: 15, scope: !4363)
!4428 = !DILocation(line: 2121, column: 9, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 2120, column: 12)
!4430 = !DILocation(line: 2123, column: 24, scope: !4350)
!4431 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !4432)
!4432 = distinct !DILocation(line: 2123, column: 5, scope: !4350)
!4433 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !4432)
!4434 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !4432)
!4435 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !4432)
!4436 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !4432)
!4437 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !4432)
!4438 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !4432)
!4439 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !4432)
!4440 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !4432)
!4441 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !4432)
!4442 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !4432)
!4443 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !4432)
!4444 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !4432)
!4445 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !4432)
!4446 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !4432)
!4447 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !4432)
!4448 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !4432)
!4449 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !4432)
!4450 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !4432)
!4451 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !4432)
!4452 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !4432)
!4453 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !4432)
!4454 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !4432)
!4455 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !4432)
!4456 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !4432)
!4457 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !4432)
!4458 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !4432)
!4459 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !4432)
!4460 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !4432)
!4461 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !4432)
!4462 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !4432)
!4463 = !DILocation(line: 2124, column: 5, scope: !4350)
!4464 = !DILocation(line: 0, scope: !4350)
!4465 = !DILocation(line: 0, scope: !4370)
!4466 = !DILocation(line: 2125, column: 1, scope: !4350)
!4467 = distinct !DISubprogram(name: "RM_ZsetRangeNext", scope: !3, file: !3, line: 2130, type: !1076, isLocal: false, isDefinition: true, scopeLine: 2130, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4468)
!4468 = !{!4469, !4470, !4473, !4474, !4475, !4480, !4481, !4484}
!4469 = !DILocalVariable(name: "key", arg: 1, scope: !4467, file: !3, line: 2130, type: !991)
!4470 = !DILocalVariable(name: "zl", scope: !4471, file: !3, line: 2134, type: !346)
!4471 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2133, column: 55)
!4472 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 2133, column: 9)
!4473 = !DILocalVariable(name: "eptr", scope: !4471, file: !3, line: 2135, type: !346)
!4474 = !DILocalVariable(name: "next", scope: !4471, file: !3, line: 2136, type: !346)
!4475 = !DILocalVariable(name: "saved_next", scope: !4476, file: !3, line: 2147, type: !346)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2144, column: 61)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !3, line: 2144, column: 17)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 2142, column: 16)
!4479 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 2139, column: 13)
!4480 = !DILocalVariable(name: "score", scope: !4476, file: !3, line: 2149, type: !96)
!4481 = !DILocalVariable(name: "ln", scope: !4482, file: !3, line: 2165, type: !4365)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 2164, column: 63)
!4483 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 2164, column: 16)
!4484 = !DILocalVariable(name: "next", scope: !4482, file: !3, line: 2165, type: !4365)
!4485 = !DILocation(line: 2130, column: 38, scope: !4467)
!4486 = !DILocation(line: 2131, column: 15, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 2131, column: 9)
!4488 = !DILocation(line: 2131, column: 10, scope: !4487)
!4489 = !DILocation(line: 2131, column: 21, scope: !4487)
!4490 = !DILocation(line: 2131, column: 30, scope: !4487)
!4491 = !DILocation(line: 2131, column: 25, scope: !4487)
!4492 = !DILocation(line: 2131, column: 9, scope: !4467)
!4493 = !DILocation(line: 2133, column: 14, scope: !4472)
!4494 = !DILocation(line: 2133, column: 21, scope: !4472)
!4495 = !DILocation(line: 2133, column: 30, scope: !4472)
!4496 = !DILocation(line: 2133, column: 9, scope: !4467)
!4497 = !DILocation(line: 2134, column: 41, scope: !4471)
!4498 = !DILocation(line: 2134, column: 24, scope: !4471)
!4499 = !DILocation(line: 2135, column: 24, scope: !4471)
!4500 = !DILocation(line: 2137, column: 16, scope: !4471)
!4501 = !DILocation(line: 2136, column: 24, scope: !4471)
!4502 = !DILocation(line: 2138, column: 13, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 2138, column: 13)
!4504 = !DILocation(line: 2138, column: 13, scope: !4471)
!4505 = !DILocation(line: 2139, column: 13, scope: !4471)
!4506 = !DILocation(line: 2138, column: 26, scope: !4503)
!4507 = !DILocation(line: 2138, column: 19, scope: !4503)
!4508 = !DILocation(line: 2139, column: 18, scope: !4479)
!4509 = !DILocation(line: 2140, column: 18, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 2139, column: 27)
!4511 = !DILocation(line: 2140, column: 22, scope: !4510)
!4512 = !DILocation(line: 2141, column: 13, scope: !4510)
!4513 = !DILocation(line: 2144, column: 22, scope: !4477)
!4514 = !DILocation(line: 2144, column: 28, scope: !4477)
!4515 = !DILocation(line: 2144, column: 17, scope: !4478)
!4516 = !DILocation(line: 2147, column: 32, scope: !4476)
!4517 = !DILocation(line: 2148, column: 24, scope: !4476)
!4518 = !DILocation(line: 2149, column: 32, scope: !4476)
!4519 = !DILocation(line: 2149, column: 24, scope: !4476)
!4520 = !DILocation(line: 2150, column: 49, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 2150, column: 21)
!4522 = !DILocation(line: 2150, column: 22, scope: !4521)
!4523 = !DILocation(line: 2150, column: 21, scope: !4476)
!4524 = !DILocation(line: 2155, column: 13, scope: !4477)
!4525 = !DILocation(line: 2151, column: 26, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 2150, column: 55)
!4527 = !DILocation(line: 2151, column: 30, scope: !4526)
!4528 = !DILocation(line: 2152, column: 21, scope: !4526)
!4529 = !DILocation(line: 2155, column: 35, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 2155, column: 24)
!4531 = !DILocation(line: 2155, column: 24, scope: !4477)
!4532 = !DILocation(line: 2156, column: 51, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 2156, column: 21)
!4534 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 2155, column: 66)
!4535 = !DILocation(line: 2156, column: 22, scope: !4533)
!4536 = !DILocation(line: 2156, column: 21, scope: !4534)
!4537 = !DILocation(line: 2157, column: 26, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2156, column: 58)
!4539 = !DILocation(line: 2157, column: 30, scope: !4538)
!4540 = !DILocation(line: 2158, column: 21, scope: !4538)
!4541 = !DILocation(line: 2161, column: 27, scope: !4478)
!4542 = !DILocation(line: 2162, column: 13, scope: !4478)
!4543 = !DILocation(line: 2164, column: 37, scope: !4483)
!4544 = !DILocation(line: 2164, column: 16, scope: !4472)
!4545 = !DILocation(line: 2165, column: 24, scope: !4482)
!4546 = !DILocation(line: 2165, column: 56, scope: !4482)
!4547 = !DILocation(line: 2165, column: 65, scope: !4482)
!4548 = !{!4549, !892, i64 0}
!4549 = !{!"zskiplistLevel", !892, i64 0, !1051, i64 8}
!4550 = !DILocation(line: 2165, column: 45, scope: !4482)
!4551 = !DILocation(line: 2166, column: 18, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 2166, column: 13)
!4553 = !DILocation(line: 2166, column: 13, scope: !4482)
!4554 = !DILocation(line: 2167, column: 18, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2166, column: 27)
!4556 = !DILocation(line: 2167, column: 22, scope: !4555)
!4557 = !DILocation(line: 2168, column: 13, scope: !4555)
!4558 = !DILocation(line: 2171, column: 28, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4560, file: !3, line: 2171, column: 17)
!4560 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2169, column: 16)
!4561 = !DILocation(line: 2171, column: 60, scope: !4559)
!4562 = !DILocation(line: 2172, column: 39, scope: !4559)
!4563 = !DILocation(line: 2172, column: 51, scope: !4559)
!4564 = !DILocation(line: 2172, column: 18, scope: !4559)
!4565 = !DILocation(line: 2171, column: 17, scope: !4560)
!4566 = !DILocation(line: 2176, column: 29, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2176, column: 24)
!4568 = !DILocation(line: 2174, column: 22, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 2173, column: 13)
!4570 = !DILocation(line: 2174, column: 26, scope: !4569)
!4571 = !DILocation(line: 2175, column: 17, scope: !4569)
!4572 = !DILocation(line: 2176, column: 35, scope: !4567)
!4573 = !DILocation(line: 2176, column: 24, scope: !4559)
!4574 = !DILocation(line: 2177, column: 46, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 2177, column: 21)
!4576 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 2176, column: 66)
!4577 = !DILocation(line: 2177, column: 56, scope: !4575)
!4578 = !DILocation(line: 2177, column: 22, scope: !4575)
!4579 = !DILocation(line: 2177, column: 21, scope: !4576)
!4580 = !DILocation(line: 2178, column: 26, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 2177, column: 63)
!4582 = !DILocation(line: 2178, column: 30, scope: !4581)
!4583 = !DILocation(line: 2179, column: 21, scope: !4581)
!4584 = !DILocation(line: 2182, column: 27, scope: !4560)
!4585 = !DILocation(line: 2183, column: 13, scope: !4560)
!4586 = !DILocation(line: 0, scope: !4569)
!4587 = !DILocation(line: 0, scope: !4555)
!4588 = !DILocation(line: 2186, column: 9, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 2185, column: 12)
!4590 = !DILocation(line: 0, scope: !4487)
!4591 = !DILocation(line: 2188, column: 1, scope: !4467)
!4592 = distinct !DISubprogram(name: "RM_ZsetRangePrev", scope: !3, file: !3, line: 2193, type: !1076, isLocal: false, isDefinition: true, scopeLine: 2193, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4593)
!4593 = !{!4594, !4595, !4598, !4599, !4600, !4605, !4606, !4609}
!4594 = !DILocalVariable(name: "key", arg: 1, scope: !4592, file: !3, line: 2193, type: !991)
!4595 = !DILocalVariable(name: "zl", scope: !4596, file: !3, line: 2197, type: !346)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2196, column: 55)
!4597 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2196, column: 9)
!4598 = !DILocalVariable(name: "eptr", scope: !4596, file: !3, line: 2198, type: !346)
!4599 = !DILocalVariable(name: "prev", scope: !4596, file: !3, line: 2199, type: !346)
!4600 = !DILocalVariable(name: "saved_prev", scope: !4601, file: !3, line: 2210, type: !346)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 2207, column: 61)
!4602 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 2207, column: 17)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2205, column: 16)
!4604 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2202, column: 13)
!4605 = !DILocalVariable(name: "score", scope: !4601, file: !3, line: 2212, type: !96)
!4606 = !DILocalVariable(name: "ln", scope: !4607, file: !3, line: 2228, type: !4365)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2227, column: 63)
!4608 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 2227, column: 16)
!4609 = !DILocalVariable(name: "prev", scope: !4607, file: !3, line: 2228, type: !4365)
!4610 = !DILocation(line: 2193, column: 38, scope: !4592)
!4611 = !DILocation(line: 2194, column: 15, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4592, file: !3, line: 2194, column: 9)
!4613 = !DILocation(line: 2194, column: 10, scope: !4612)
!4614 = !DILocation(line: 2194, column: 21, scope: !4612)
!4615 = !DILocation(line: 2194, column: 30, scope: !4612)
!4616 = !DILocation(line: 2194, column: 25, scope: !4612)
!4617 = !DILocation(line: 2194, column: 9, scope: !4592)
!4618 = !DILocation(line: 2196, column: 14, scope: !4597)
!4619 = !DILocation(line: 2196, column: 21, scope: !4597)
!4620 = !DILocation(line: 2196, column: 30, scope: !4597)
!4621 = !DILocation(line: 2196, column: 9, scope: !4592)
!4622 = !DILocation(line: 2197, column: 41, scope: !4596)
!4623 = !DILocation(line: 2197, column: 24, scope: !4596)
!4624 = !DILocation(line: 2198, column: 24, scope: !4596)
!4625 = !DILocation(line: 2200, column: 16, scope: !4596)
!4626 = !DILocation(line: 2199, column: 24, scope: !4596)
!4627 = !DILocation(line: 2201, column: 13, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 2201, column: 13)
!4629 = !DILocation(line: 2201, column: 13, scope: !4596)
!4630 = !DILocation(line: 2202, column: 13, scope: !4596)
!4631 = !DILocation(line: 2201, column: 26, scope: !4628)
!4632 = !DILocation(line: 2201, column: 19, scope: !4628)
!4633 = !DILocation(line: 2202, column: 18, scope: !4604)
!4634 = !DILocation(line: 2203, column: 18, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 2202, column: 27)
!4636 = !DILocation(line: 2203, column: 22, scope: !4635)
!4637 = !DILocation(line: 2204, column: 13, scope: !4635)
!4638 = !DILocation(line: 2207, column: 22, scope: !4602)
!4639 = !DILocation(line: 2207, column: 28, scope: !4602)
!4640 = !DILocation(line: 2207, column: 17, scope: !4603)
!4641 = !DILocation(line: 2210, column: 32, scope: !4601)
!4642 = !DILocation(line: 2211, column: 24, scope: !4601)
!4643 = !DILocation(line: 2212, column: 32, scope: !4601)
!4644 = !DILocation(line: 2212, column: 24, scope: !4601)
!4645 = !DILocation(line: 2213, column: 49, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 2213, column: 21)
!4647 = !DILocation(line: 2213, column: 22, scope: !4646)
!4648 = !DILocation(line: 2213, column: 21, scope: !4601)
!4649 = !DILocation(line: 2218, column: 13, scope: !4602)
!4650 = !DILocation(line: 2214, column: 26, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 2213, column: 55)
!4652 = !DILocation(line: 2214, column: 30, scope: !4651)
!4653 = !DILocation(line: 2215, column: 21, scope: !4651)
!4654 = !DILocation(line: 2218, column: 35, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 2218, column: 24)
!4656 = !DILocation(line: 2218, column: 24, scope: !4602)
!4657 = !DILocation(line: 2219, column: 51, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 2219, column: 21)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 2218, column: 66)
!4660 = !DILocation(line: 2219, column: 22, scope: !4658)
!4661 = !DILocation(line: 2219, column: 21, scope: !4659)
!4662 = !DILocation(line: 2220, column: 26, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 2219, column: 58)
!4664 = !DILocation(line: 2220, column: 30, scope: !4663)
!4665 = !DILocation(line: 2221, column: 21, scope: !4663)
!4666 = !DILocation(line: 2224, column: 27, scope: !4603)
!4667 = !DILocation(line: 2225, column: 13, scope: !4603)
!4668 = !DILocation(line: 2227, column: 37, scope: !4608)
!4669 = !DILocation(line: 2227, column: 16, scope: !4597)
!4670 = !DILocation(line: 2228, column: 24, scope: !4607)
!4671 = !DILocation(line: 2228, column: 56, scope: !4607)
!4672 = !DILocation(line: 2228, column: 45, scope: !4607)
!4673 = !DILocation(line: 2229, column: 18, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 2229, column: 13)
!4675 = !DILocation(line: 2229, column: 13, scope: !4607)
!4676 = !DILocation(line: 2230, column: 18, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 2229, column: 27)
!4678 = !DILocation(line: 2230, column: 22, scope: !4677)
!4679 = !DILocation(line: 2231, column: 13, scope: !4677)
!4680 = !DILocation(line: 2234, column: 28, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 2234, column: 17)
!4682 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 2232, column: 16)
!4683 = !DILocation(line: 2234, column: 60, scope: !4681)
!4684 = !DILocation(line: 2235, column: 39, scope: !4681)
!4685 = !DILocation(line: 2235, column: 51, scope: !4681)
!4686 = !DILocation(line: 2235, column: 18, scope: !4681)
!4687 = !DILocation(line: 2234, column: 17, scope: !4682)
!4688 = !DILocation(line: 2239, column: 29, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 2239, column: 24)
!4690 = !DILocation(line: 2237, column: 22, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 2236, column: 13)
!4692 = !DILocation(line: 2237, column: 26, scope: !4691)
!4693 = !DILocation(line: 2238, column: 17, scope: !4691)
!4694 = !DILocation(line: 2239, column: 35, scope: !4689)
!4695 = !DILocation(line: 2239, column: 24, scope: !4681)
!4696 = !DILocation(line: 2240, column: 46, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 2240, column: 21)
!4698 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 2239, column: 66)
!4699 = !DILocation(line: 2240, column: 56, scope: !4697)
!4700 = !DILocation(line: 2240, column: 22, scope: !4697)
!4701 = !DILocation(line: 2240, column: 21, scope: !4698)
!4702 = !DILocation(line: 2241, column: 26, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 2240, column: 63)
!4704 = !DILocation(line: 2241, column: 30, scope: !4703)
!4705 = !DILocation(line: 2242, column: 21, scope: !4703)
!4706 = !DILocation(line: 2245, column: 27, scope: !4682)
!4707 = !DILocation(line: 2246, column: 13, scope: !4682)
!4708 = !DILocation(line: 0, scope: !4691)
!4709 = !DILocation(line: 0, scope: !4677)
!4710 = !DILocation(line: 2249, column: 9, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2248, column: 12)
!4712 = !DILocation(line: 0, scope: !4612)
!4713 = !DILocation(line: 2251, column: 1, scope: !4592)
!4714 = distinct !DISubprogram(name: "RM_HashSet", scope: !3, file: !3, line: 2309, type: !4715, isLocal: false, isDefinition: true, scopeLine: 2309, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4717)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!17, !991, !17, null}
!4717 = !{!4718, !4719, !4720, !4721, !4722, !4724, !4725, !4728, !4731, !4732}
!4718 = !DILocalVariable(name: "key", arg: 1, scope: !4714, file: !3, line: 2309, type: !991)
!4719 = !DILocalVariable(name: "flags", arg: 2, scope: !4714, file: !3, line: 2309, type: !17)
!4720 = !DILocalVariable(name: "ap", scope: !4714, file: !3, line: 2310, type: !1980)
!4721 = !DILocalVariable(name: "updated", scope: !4714, file: !3, line: 2315, type: !17)
!4722 = !DILocalVariable(name: "field", scope: !4723, file: !3, line: 2318, type: !143)
!4723 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 2317, column: 14)
!4724 = !DILocalVariable(name: "value", scope: !4723, file: !3, line: 2318, type: !143)
!4725 = !DILocalVariable(name: "cfield", scope: !4726, file: !3, line: 2321, type: !9)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 2320, column: 47)
!4727 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2320, column: 13)
!4728 = !DILocalVariable(name: "exists", scope: !4729, file: !3, line: 2332, type: !17)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 2331, column: 64)
!4730 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2331, column: 13)
!4731 = !DILocalVariable(name: "low_flags", scope: !4723, file: !3, line: 2348, type: !17)
!4732 = !DILocalVariable(name: "argv", scope: !4723, file: !3, line: 2355, type: !4733)
!4733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !143, size: 128, elements: !102)
!4734 = !DILocation(line: 2309, column: 32, scope: !4714)
!4735 = !DILocation(line: 2309, column: 41, scope: !4714)
!4736 = !DILocation(line: 2310, column: 5, scope: !4714)
!4737 = !DILocation(line: 2310, column: 13, scope: !4714)
!4738 = !DILocation(line: 2311, column: 16, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 2311, column: 9)
!4740 = !DILocation(line: 2311, column: 21, scope: !4739)
!4741 = !DILocation(line: 2311, column: 9, scope: !4714)
!4742 = !DILocation(line: 2312, column: 14, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 2312, column: 9)
!4744 = !DILocation(line: 2312, column: 9, scope: !4743)
!4745 = !DILocation(line: 2312, column: 20, scope: !4743)
!4746 = !DILocation(line: 2312, column: 35, scope: !4743)
!4747 = !DILocation(line: 2312, column: 40, scope: !4743)
!4748 = !DILocation(line: 2312, column: 9, scope: !4714)
!4749 = !DILocation(line: 0, scope: !4743)
!4750 = !DILocation(line: 2313, column: 9, scope: !4714)
!4751 = !DILocation(line: 419, column: 42, scope: !988, inlinedAt: !4752)
!4752 = distinct !DILocation(line: 2313, column: 29, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 2313, column: 9)
!4754 = !DILocation(line: 419, column: 51, scope: !988, inlinedAt: !4752)
!4755 = !DILocation(line: 423, column: 42, scope: !1029, inlinedAt: !4752)
!4756 = !DILocation(line: 423, column: 9, scope: !988, inlinedAt: !4752)
!4757 = !DILocation(line: 426, column: 5, scope: !988, inlinedAt: !4752)
!4758 = !DILocation(line: 436, column: 15, scope: !1043, inlinedAt: !4752)
!4759 = !DILocation(line: 420, column: 11, scope: !988, inlinedAt: !4752)
!4760 = !DILocation(line: 437, column: 9, scope: !1043, inlinedAt: !4752)
!4761 = !DILocation(line: 440, column: 16, scope: !988, inlinedAt: !4752)
!4762 = !DILocation(line: 440, column: 24, scope: !988, inlinedAt: !4752)
!4763 = !DILocation(line: 440, column: 5, scope: !988, inlinedAt: !4752)
!4764 = !DILocation(line: 441, column: 16, scope: !988, inlinedAt: !4752)
!4765 = !DILocation(line: 442, column: 5, scope: !988, inlinedAt: !4752)
!4766 = !DILocation(line: 443, column: 1, scope: !988, inlinedAt: !4752)
!4767 = !DILocation(line: 2313, column: 29, scope: !4753)
!4768 = !DILocation(line: 2315, column: 9, scope: !4714)
!4769 = !DILocation(line: 2316, column: 5, scope: !4714)
!4770 = !DILocation(line: 2317, column: 5, scope: !4714)
!4771 = !DILocation(line: 0, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !3, line: 2342, column: 47)
!4773 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2342, column: 13)
!4774 = !DILocation(line: 2320, column: 13, scope: !4723)
!4775 = !DILocation(line: 0, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 2324, column: 16)
!4777 = !DILocation(line: 2321, column: 28, scope: !4726)
!4778 = !DILocation(line: 2321, column: 19, scope: !4726)
!4779 = !DILocation(line: 2322, column: 24, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 2322, column: 17)
!4781 = !DILocation(line: 2322, column: 17, scope: !4726)
!4782 = !DILocation(line: 2323, column: 50, scope: !4726)
!4783 = !DILocation(line: 2323, column: 21, scope: !4726)
!4784 = !DILocation(line: 2318, column: 28, scope: !4723)
!4785 = !DILocation(line: 2324, column: 9, scope: !4727)
!4786 = !DILocation(line: 2328, column: 17, scope: !4723)
!4787 = !DILocation(line: 2322, column: 33, scope: !4780)
!4788 = !DILocation(line: 2325, column: 21, scope: !4776)
!4789 = !DILocation(line: 2326, column: 23, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 2326, column: 17)
!4791 = !DILocation(line: 2326, column: 17, scope: !4776)
!4792 = !DILocation(line: 2318, column: 36, scope: !4723)
!4793 = !DILocation(line: 2331, column: 13, scope: !4723)
!4794 = !DILocation(line: 2332, column: 46, scope: !4729)
!4795 = !DILocation(line: 2332, column: 60, scope: !4729)
!4796 = !DILocation(line: 2332, column: 26, scope: !4729)
!4797 = !DILocation(line: 2332, column: 17, scope: !4729)
!4798 = !DILocation(line: 2333, column: 52, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 2333, column: 17)
!4800 = !DILocation(line: 2333, column: 48, scope: !4799)
!4801 = !DILocation(line: 2334, column: 48, scope: !4799)
!4802 = !DILocation(line: 2336, column: 21, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2335, column: 13)
!4804 = !DILocation(line: 2336, column: 55, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 2336, column: 21)
!4806 = !DILocation(line: 2339, column: 9, scope: !4730)
!4807 = !DILocation(line: 2337, column: 17, scope: !4803)
!4808 = !DILocation(line: 2342, column: 19, scope: !4773)
!4809 = !DILocation(line: 2342, column: 13, scope: !4723)
!4810 = !DILocation(line: 2343, column: 44, scope: !4772)
!4811 = !DILocation(line: 2343, column: 58, scope: !4772)
!4812 = !DILocation(line: 2343, column: 24, scope: !4772)
!4813 = !DILocation(line: 2343, column: 21, scope: !4772)
!4814 = !DILocation(line: 2344, column: 17, scope: !4772)
!4815 = distinct !{!4815, !4770, !4816}
!4816 = !DILocation(line: 2365, column: 5, scope: !4714)
!4817 = !DILocation(line: 2344, column: 51, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 2344, column: 17)
!4819 = !DILocation(line: 2348, column: 13, scope: !4723)
!4820 = !DILocation(line: 2352, column: 13, scope: !4723)
!4821 = !DILocation(line: 2353, column: 13, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2352, column: 13)
!4823 = !DILocation(line: 0, scope: !4723)
!4824 = !DILocation(line: 2355, column: 9, scope: !4723)
!4825 = !DILocation(line: 2355, column: 15, scope: !4723)
!4826 = !DILocation(line: 2355, column: 25, scope: !4723)
!4827 = !DILocation(line: 2356, column: 36, scope: !4723)
!4828 = !DILocation(line: 2356, column: 9, scope: !4723)
!4829 = !DILocation(line: 2357, column: 37, scope: !4723)
!4830 = !DILocation(line: 2357, column: 51, scope: !4723)
!4831 = !DILocation(line: 2357, column: 63, scope: !4723)
!4832 = !DILocation(line: 2357, column: 20, scope: !4723)
!4833 = !DILocation(line: 2357, column: 17, scope: !4723)
!4834 = !DILocation(line: 2361, column: 13, scope: !4723)
!4835 = !DILocation(line: 2362, column: 23, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !4837, file: !3, line: 2361, column: 47)
!4837 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 2361, column: 13)
!4838 = !DILocation(line: 2363, column: 12, scope: !4836)
!4839 = !DILocation(line: 2364, column: 9, scope: !4836)
!4840 = !DILocation(line: 0, scope: !4714)
!4841 = !DILocation(line: 2366, column: 5, scope: !4714)
!4842 = !DILocation(line: 2367, column: 5, scope: !4714)
!4843 = !DILocation(line: 2369, column: 1, scope: !4714)
!4844 = !DILocation(line: 0, scope: !4739)
!4845 = distinct !DISubprogram(name: "RM_HashGet", scope: !3, file: !3, line: 2412, type: !4715, isLocal: false, isDefinition: true, scopeLine: 2412, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4846)
!4846 = !{!4847, !4848, !4849, !4850, !4852, !4853, !4854, !4857}
!4847 = !DILocalVariable(name: "key", arg: 1, scope: !4845, file: !3, line: 2412, type: !991)
!4848 = !DILocalVariable(name: "flags", arg: 2, scope: !4845, file: !3, line: 2412, type: !17)
!4849 = !DILocalVariable(name: "ap", scope: !4845, file: !3, line: 2413, type: !1980)
!4850 = !DILocalVariable(name: "field", scope: !4851, file: !3, line: 2418, type: !143)
!4851 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2417, column: 14)
!4852 = !DILocalVariable(name: "valueptr", scope: !4851, file: !3, line: 2418, type: !165)
!4853 = !DILocalVariable(name: "existsptr", scope: !4851, file: !3, line: 2419, type: !16)
!4854 = !DILocalVariable(name: "cfield", scope: !4855, file: !3, line: 2422, type: !9)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 2421, column: 47)
!4856 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2421, column: 13)
!4857 = !DILocalVariable(name: "decoded", scope: !4858, file: !3, line: 2442, type: !143)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 2441, column: 32)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 2441, column: 21)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 2439, column: 29)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !3, line: 2439, column: 17)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2437, column: 16)
!4863 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2431, column: 13)
!4864 = !DILocation(line: 2412, column: 32, scope: !4845)
!4865 = !DILocation(line: 2412, column: 41, scope: !4845)
!4866 = !DILocation(line: 2413, column: 5, scope: !4845)
!4867 = !DILocation(line: 2413, column: 13, scope: !4845)
!4868 = !DILocation(line: 2414, column: 14, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2414, column: 9)
!4870 = !DILocation(line: 2414, column: 9, scope: !4869)
!4871 = !DILocation(line: 2414, column: 20, scope: !4869)
!4872 = !DILocation(line: 2414, column: 35, scope: !4869)
!4873 = !DILocation(line: 2414, column: 40, scope: !4869)
!4874 = !DILocation(line: 2414, column: 9, scope: !4845)
!4875 = !DILocation(line: 2416, column: 5, scope: !4845)
!4876 = !DILocation(line: 2417, column: 5, scope: !4845)
!4877 = !DILocation(line: 2421, column: 13, scope: !4851)
!4878 = !DILocation(line: 0, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 2425, column: 16)
!4880 = !DILocation(line: 2422, column: 28, scope: !4855)
!4881 = !DILocation(line: 2422, column: 19, scope: !4855)
!4882 = !DILocation(line: 2423, column: 24, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 2423, column: 17)
!4884 = !DILocation(line: 2423, column: 17, scope: !4855)
!4885 = !DILocation(line: 2424, column: 50, scope: !4855)
!4886 = !DILocation(line: 2424, column: 21, scope: !4855)
!4887 = !DILocation(line: 2418, column: 28, scope: !4851)
!4888 = !DILocation(line: 2425, column: 9, scope: !4856)
!4889 = !DILocation(line: 0, scope: !4862)
!4890 = !DILocation(line: 2423, column: 33, scope: !4883)
!4891 = !DILocation(line: 2426, column: 21, scope: !4879)
!4892 = !DILocation(line: 2427, column: 23, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2427, column: 17)
!4894 = !DILocation(line: 2427, column: 17, scope: !4879)
!4895 = !DILocation(line: 2431, column: 13, scope: !4851)
!4896 = !DILocation(line: 0, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 2431, column: 46)
!4898 = !DILocation(line: 2432, column: 25, scope: !4897)
!4899 = !DILocation(line: 2419, column: 14, scope: !4851)
!4900 = !DILocation(line: 2433, column: 22, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 2433, column: 17)
!4902 = !DILocation(line: 2433, column: 17, scope: !4901)
!4903 = !DILocation(line: 2433, column: 17, scope: !4897)
!4904 = !DILocation(line: 2434, column: 63, scope: !4901)
!4905 = !DILocation(line: 2434, column: 30, scope: !4901)
!4906 = !DILocation(line: 2434, column: 28, scope: !4901)
!4907 = !DILocation(line: 2434, column: 17, scope: !4901)
!4908 = !DILocation(line: 2436, column: 28, scope: !4901)
!4909 = !DILocation(line: 2438, column: 24, scope: !4862)
!4910 = !DILocation(line: 2418, column: 37, scope: !4851)
!4911 = !DILocation(line: 2439, column: 22, scope: !4861)
!4912 = !DILocation(line: 2439, column: 17, scope: !4861)
!4913 = !DILocation(line: 2439, column: 17, scope: !4862)
!4914 = !DILocation(line: 2440, column: 70, scope: !4860)
!4915 = !DILocation(line: 2440, column: 29, scope: !4860)
!4916 = !DILocation(line: 2440, column: 27, scope: !4860)
!4917 = !DILocation(line: 2441, column: 21, scope: !4859)
!4918 = !DILocation(line: 2441, column: 21, scope: !4860)
!4919 = !DILocation(line: 2442, column: 37, scope: !4858)
!4920 = !DILocation(line: 2442, column: 27, scope: !4858)
!4921 = !DILocation(line: 2443, column: 34, scope: !4858)
!4922 = !DILocation(line: 2443, column: 21, scope: !4858)
!4923 = !DILocation(line: 2444, column: 31, scope: !4858)
!4924 = !DILocation(line: 2445, column: 17, scope: !4858)
!4925 = !DILocation(line: 2446, column: 21, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4860, file: !3, line: 2446, column: 21)
!4927 = !DILocation(line: 2446, column: 21, scope: !4860)
!4928 = !DILocation(line: 2447, column: 40, scope: !4926)
!4929 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !4930)
!4930 = distinct !DILocation(line: 2447, column: 21, scope: !4926)
!4931 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !4930)
!4932 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !4930)
!4933 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !4930)
!4934 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !4930)
!4935 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !4930)
!4936 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !4930)
!4937 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !4930)
!4938 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !4930)
!4939 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !4930)
!4940 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !4930)
!4941 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !4930)
!4942 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !4930)
!4943 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !4930)
!4944 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !4930)
!4945 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !4930)
!4946 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !4930)
!4947 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !4930)
!4948 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !4930)
!4949 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !4930)
!4950 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !4930)
!4951 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !4930)
!4952 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !4930)
!4953 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !4930)
!4954 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !4930)
!4955 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !4930)
!4956 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !4930)
!4957 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !4930)
!4958 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !4930)
!4959 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !4930)
!4960 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !4930)
!4961 = !DILocation(line: 2447, column: 21, scope: !4926)
!4962 = !DILocation(line: 2449, column: 27, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 2448, column: 20)
!4964 = !DILocation(line: 2454, column: 13, scope: !4851)
!4965 = !DILocation(line: 2454, column: 47, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2454, column: 13)
!4967 = !DILocation(line: 2455, column: 5, scope: !4845)
!4968 = !DILocation(line: 2456, column: 5, scope: !4845)
!4969 = !DILocation(line: 2457, column: 5, scope: !4845)
!4970 = !DILocation(line: 0, scope: !4845)
!4971 = !DILocation(line: 0, scope: !4869)
!4972 = !DILocation(line: 2458, column: 1, scope: !4845)
!4973 = distinct !DISubprogram(name: "moduleCreateCallReplyFromProto", scope: !3, file: !3, line: 2468, type: !4974, isLocal: false, isDefinition: true, scopeLine: 2468, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4976)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!1224, !584, !154}
!4976 = !{!4977, !4978, !4979}
!4977 = !DILocalVariable(name: "ctx", arg: 1, scope: !4973, file: !3, line: 2468, type: !584)
!4978 = !DILocalVariable(name: "proto", arg: 2, scope: !4973, file: !3, line: 2468, type: !154)
!4979 = !DILocalVariable(name: "reply", scope: !4973, file: !3, line: 2469, type: !1224)
!4980 = !DILocation(line: 2468, column: 70, scope: !4973)
!4981 = !DILocation(line: 2468, column: 79, scope: !4973)
!4982 = !DILocation(line: 2469, column: 35, scope: !4973)
!4983 = !DILocation(line: 2469, column: 27, scope: !4973)
!4984 = !DILocation(line: 2470, column: 12, scope: !4973)
!4985 = !DILocation(line: 2470, column: 16, scope: !4973)
!4986 = !DILocation(line: 2471, column: 12, scope: !4973)
!4987 = !DILocation(line: 2471, column: 18, scope: !4973)
!4988 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !4989)
!4989 = distinct !DILocation(line: 2472, column: 23, scope: !4973)
!4990 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !4989)
!4991 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !4989)
!4992 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !4989)
!4993 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !4989)
!4994 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !4989)
!4995 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !4989)
!4996 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !4989)
!4997 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !4989)
!4998 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !4989)
!4999 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !4989)
!5000 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !4989)
!5001 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !4989)
!5002 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !4989)
!5003 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !4989)
!5004 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !4989)
!5005 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !4989)
!5006 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !4989)
!5007 = !DILocation(line: 0, scope: !2179, inlinedAt: !4989)
!5008 = !DILocation(line: 0, scope: !4973)
!5009 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !4989)
!5010 = !DILocation(line: 2472, column: 12, scope: !4973)
!5011 = !DILocation(line: 2472, column: 21, scope: !4973)
!5012 = !DILocation(line: 2473, column: 12, scope: !4973)
!5013 = !DILocation(line: 2473, column: 18, scope: !4973)
!5014 = !{!1247, !895, i64 12}
!5015 = !DILocation(line: 2474, column: 12, scope: !4973)
!5016 = !DILocation(line: 2474, column: 5, scope: !4973)
!5017 = !DILocation(line: 2477, column: 54, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 2474, column: 22)
!5019 = !DILocation(line: 2478, column: 56, scope: !5018)
!5020 = !DILocation(line: 2479, column: 54, scope: !5018)
!5021 = !DILocation(line: 2480, column: 55, scope: !5018)
!5022 = !DILocation(line: 0, scope: !5018)
!5023 = !{!1247, !895, i64 8}
!5024 = !DILocation(line: 2482, column: 10, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 2482, column: 9)
!5026 = !DILocation(line: 2482, column: 19, scope: !5025)
!5027 = !DILocation(line: 2482, column: 26, scope: !5025)
!5028 = !DILocation(line: 2482, column: 38, scope: !5025)
!5029 = !DILocation(line: 2482, column: 46, scope: !5025)
!5030 = !DILocation(line: 2482, column: 49, scope: !5025)
!5031 = !DILocation(line: 2482, column: 58, scope: !5025)
!5032 = !DILocation(line: 2482, column: 9, scope: !4973)
!5033 = !DILocation(line: 2483, column: 16, scope: !5025)
!5034 = !DILocation(line: 2483, column: 21, scope: !5025)
!5035 = !DILocation(line: 2483, column: 9, scope: !5025)
!5036 = !DILocation(line: 2484, column: 5, scope: !4973)
!5037 = distinct !DISubprogram(name: "moduleParseCallReply", scope: !3, file: !3, line: 2495, type: !1222, isLocal: false, isDefinition: true, scopeLine: 2495, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5038)
!5038 = !{!5039}
!5039 = !DILocalVariable(name: "reply", arg: 1, scope: !5037, file: !3, line: 2495, type: !1224)
!5040 = !DILocation(line: 2495, column: 49, scope: !5037)
!5041 = !DILocation(line: 2496, column: 18, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 2496, column: 9)
!5043 = !DILocation(line: 2496, column: 24, scope: !5042)
!5044 = !DILocation(line: 2496, column: 9, scope: !5037)
!5045 = !DILocation(line: 2497, column: 18, scope: !5037)
!5046 = !DILocation(line: 2499, column: 19, scope: !5037)
!5047 = !DILocation(line: 2499, column: 12, scope: !5037)
!5048 = !DILocation(line: 2499, column: 5, scope: !5037)
!5049 = !DILocalVariable(name: "reply", arg: 1, scope: !5050, file: !3, line: 2508, type: !1224)
!5050 = distinct !DISubprogram(name: "moduleParseCallReply_Int", scope: !3, file: !3, line: 2508, type: !1222, isLocal: false, isDefinition: true, scopeLine: 2508, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5051)
!5051 = !{!5049, !5052, !5053}
!5052 = !DILocalVariable(name: "proto", scope: !5050, file: !3, line: 2509, type: !9)
!5053 = !DILocalVariable(name: "p", scope: !5050, file: !3, line: 2510, type: !9)
!5054 = !DILocation(line: 2508, column: 53, scope: !5050, inlinedAt: !5055)
!5055 = distinct !DILocation(line: 2500, column: 15, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5037, file: !3, line: 2499, column: 29)
!5057 = !DILocation(line: 2509, column: 11, scope: !5050, inlinedAt: !5055)
!5058 = !DILocation(line: 2510, column: 27, scope: !5050, inlinedAt: !5055)
!5059 = !DILocation(line: 2510, column: 15, scope: !5050, inlinedAt: !5055)
!5060 = !DILocation(line: 2510, column: 11, scope: !5050, inlinedAt: !5055)
!5061 = !DILocation(line: 2512, column: 24, scope: !5050, inlinedAt: !5055)
!5062 = !DILocation(line: 2512, column: 30, scope: !5050, inlinedAt: !5055)
!5063 = !DILocation(line: 2512, column: 41, scope: !5050, inlinedAt: !5055)
!5064 = !DILocation(line: 2512, column: 45, scope: !5050, inlinedAt: !5055)
!5065 = !DILocation(line: 2512, column: 5, scope: !5050, inlinedAt: !5055)
!5066 = !DILocation(line: 2513, column: 30, scope: !5050, inlinedAt: !5055)
!5067 = !DILocation(line: 2513, column: 12, scope: !5050, inlinedAt: !5055)
!5068 = !DILocation(line: 2513, column: 21, scope: !5050, inlinedAt: !5055)
!5069 = !DILocation(line: 2514, column: 12, scope: !5050, inlinedAt: !5055)
!5070 = !DILocation(line: 2514, column: 17, scope: !5050, inlinedAt: !5055)
!5071 = !DILocation(line: 2515, column: 1, scope: !5050, inlinedAt: !5055)
!5072 = !DILocation(line: 2500, column: 48, scope: !5056)
!5073 = !DILocalVariable(name: "reply", arg: 1, scope: !5074, file: !3, line: 2517, type: !1224)
!5074 = distinct !DISubprogram(name: "moduleParseCallReply_BulkString", scope: !3, file: !3, line: 2517, type: !1222, isLocal: false, isDefinition: true, scopeLine: 2517, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5075)
!5075 = !{!5073, !5076, !5077, !5078}
!5076 = !DILocalVariable(name: "proto", scope: !5074, file: !3, line: 2518, type: !9)
!5077 = !DILocalVariable(name: "p", scope: !5074, file: !3, line: 2519, type: !9)
!5078 = !DILocalVariable(name: "bulklen", scope: !5074, file: !3, line: 2520, type: !112)
!5079 = !DILocation(line: 2517, column: 60, scope: !5074, inlinedAt: !5080)
!5080 = distinct !DILocation(line: 2501, column: 15, scope: !5056)
!5081 = !DILocation(line: 2518, column: 11, scope: !5074, inlinedAt: !5080)
!5082 = !DILocation(line: 2519, column: 27, scope: !5074, inlinedAt: !5080)
!5083 = !DILocation(line: 2519, column: 15, scope: !5074, inlinedAt: !5080)
!5084 = !DILocation(line: 2519, column: 11, scope: !5074, inlinedAt: !5080)
!5085 = !DILocation(line: 2520, column: 5, scope: !5074, inlinedAt: !5080)
!5086 = !DILocation(line: 2522, column: 24, scope: !5074, inlinedAt: !5080)
!5087 = !DILocation(line: 2522, column: 30, scope: !5074, inlinedAt: !5080)
!5088 = !DILocation(line: 2520, column: 15, scope: !5074, inlinedAt: !5080)
!5089 = !DILocation(line: 2522, column: 5, scope: !5074, inlinedAt: !5080)
!5090 = !DILocation(line: 2523, column: 9, scope: !5091, inlinedAt: !5080)
!5091 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 2523, column: 9)
!5092 = !DILocation(line: 2523, column: 17, scope: !5091, inlinedAt: !5080)
!5093 = !DILocation(line: 2523, column: 9, scope: !5074, inlinedAt: !5080)
!5094 = !DILocation(line: 2524, column: 34, scope: !5095, inlinedAt: !5080)
!5095 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 2523, column: 24)
!5096 = !DILocation(line: 2526, column: 5, scope: !5095, inlinedAt: !5080)
!5097 = !DILocation(line: 2527, column: 27, scope: !5098, inlinedAt: !5080)
!5098 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 2526, column: 12)
!5099 = !DILocation(line: 2527, column: 20, scope: !5098, inlinedAt: !5080)
!5100 = !DILocation(line: 2527, column: 24, scope: !5098, inlinedAt: !5080)
!5101 = !DILocation(line: 2528, column: 16, scope: !5098, inlinedAt: !5080)
!5102 = !DILocation(line: 2528, column: 20, scope: !5098, inlinedAt: !5080)
!5103 = !{!1247, !1051, i64 16}
!5104 = !DILocation(line: 2529, column: 36, scope: !5098, inlinedAt: !5080)
!5105 = !DILocation(line: 2529, column: 44, scope: !5098, inlinedAt: !5080)
!5106 = !DILocation(line: 2529, column: 16, scope: !5098, inlinedAt: !5080)
!5107 = !DILocation(line: 2529, column: 25, scope: !5098, inlinedAt: !5080)
!5108 = !DILocation(line: 2530, column: 16, scope: !5098, inlinedAt: !5080)
!5109 = !DILocation(line: 2530, column: 21, scope: !5098, inlinedAt: !5080)
!5110 = !DILocation(line: 2532, column: 1, scope: !5074, inlinedAt: !5080)
!5111 = !DILocation(line: 2501, column: 55, scope: !5056)
!5112 = !DILocalVariable(name: "reply", arg: 1, scope: !5113, file: !3, line: 2534, type: !1224)
!5113 = distinct !DISubprogram(name: "moduleParseCallReply_SimpleString", scope: !3, file: !3, line: 2534, type: !1222, isLocal: false, isDefinition: true, scopeLine: 2534, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5114)
!5114 = !{!5112, !5115, !5116}
!5115 = !DILocalVariable(name: "proto", scope: !5113, file: !3, line: 2535, type: !9)
!5116 = !DILocalVariable(name: "p", scope: !5113, file: !3, line: 2536, type: !9)
!5117 = !DILocation(line: 2534, column: 62, scope: !5113, inlinedAt: !5118)
!5118 = distinct !DILocation(line: 2503, column: 15, scope: !5056)
!5119 = !DILocation(line: 2535, column: 11, scope: !5113, inlinedAt: !5118)
!5120 = !DILocation(line: 2536, column: 27, scope: !5113, inlinedAt: !5118)
!5121 = !DILocation(line: 2536, column: 15, scope: !5113, inlinedAt: !5118)
!5122 = !DILocation(line: 2536, column: 11, scope: !5113, inlinedAt: !5118)
!5123 = !DILocation(line: 2538, column: 16, scope: !5113, inlinedAt: !5118)
!5124 = !DILocation(line: 2538, column: 20, scope: !5113, inlinedAt: !5118)
!5125 = !DILocation(line: 2539, column: 19, scope: !5113, inlinedAt: !5118)
!5126 = !DILocation(line: 2539, column: 25, scope: !5113, inlinedAt: !5118)
!5127 = !DILocation(line: 2539, column: 12, scope: !5113, inlinedAt: !5118)
!5128 = !DILocation(line: 2539, column: 16, scope: !5113, inlinedAt: !5118)
!5129 = !DILocation(line: 2540, column: 30, scope: !5113, inlinedAt: !5118)
!5130 = !DILocation(line: 2540, column: 12, scope: !5113, inlinedAt: !5118)
!5131 = !DILocation(line: 2540, column: 21, scope: !5113, inlinedAt: !5118)
!5132 = !DILocation(line: 2541, column: 19, scope: !5113, inlinedAt: !5118)
!5133 = !DILocation(line: 2541, column: 28, scope: !5113, inlinedAt: !5118)
!5134 = !DILocation(line: 2541, column: 12, scope: !5113, inlinedAt: !5118)
!5135 = !DILocation(line: 2541, column: 17, scope: !5113, inlinedAt: !5118)
!5136 = !DILocation(line: 2543, column: 1, scope: !5113, inlinedAt: !5118)
!5137 = !DILocation(line: 2503, column: 57, scope: !5056)
!5138 = !DILocation(line: 2504, column: 15, scope: !5056)
!5139 = !DILocation(line: 2504, column: 50, scope: !5056)
!5140 = !DILocation(line: 2506, column: 1, scope: !5037)
!5141 = !DILocation(line: 2508, column: 53, scope: !5050)
!5142 = !DILocation(line: 2509, column: 26, scope: !5050)
!5143 = !DILocation(line: 2509, column: 11, scope: !5050)
!5144 = !DILocation(line: 2510, column: 27, scope: !5050)
!5145 = !DILocation(line: 2510, column: 15, scope: !5050)
!5146 = !DILocation(line: 2510, column: 11, scope: !5050)
!5147 = !DILocation(line: 2512, column: 24, scope: !5050)
!5148 = !DILocation(line: 2512, column: 30, scope: !5050)
!5149 = !DILocation(line: 2512, column: 41, scope: !5050)
!5150 = !DILocation(line: 2512, column: 45, scope: !5050)
!5151 = !DILocation(line: 2512, column: 5, scope: !5050)
!5152 = !DILocation(line: 2513, column: 30, scope: !5050)
!5153 = !DILocation(line: 2513, column: 12, scope: !5050)
!5154 = !DILocation(line: 2513, column: 21, scope: !5050)
!5155 = !DILocation(line: 2514, column: 12, scope: !5050)
!5156 = !DILocation(line: 2514, column: 17, scope: !5050)
!5157 = !DILocation(line: 2515, column: 1, scope: !5050)
!5158 = !DILocation(line: 2517, column: 60, scope: !5074)
!5159 = !DILocation(line: 2518, column: 26, scope: !5074)
!5160 = !DILocation(line: 2518, column: 11, scope: !5074)
!5161 = !DILocation(line: 2519, column: 27, scope: !5074)
!5162 = !DILocation(line: 2519, column: 15, scope: !5074)
!5163 = !DILocation(line: 2519, column: 11, scope: !5074)
!5164 = !DILocation(line: 2520, column: 5, scope: !5074)
!5165 = !DILocation(line: 2522, column: 24, scope: !5074)
!5166 = !DILocation(line: 2522, column: 30, scope: !5074)
!5167 = !DILocation(line: 2520, column: 15, scope: !5074)
!5168 = !DILocation(line: 2522, column: 5, scope: !5074)
!5169 = !DILocation(line: 2523, column: 9, scope: !5091)
!5170 = !DILocation(line: 2523, column: 17, scope: !5091)
!5171 = !DILocation(line: 2523, column: 9, scope: !5074)
!5172 = !DILocation(line: 2524, column: 34, scope: !5095)
!5173 = !DILocation(line: 2526, column: 5, scope: !5095)
!5174 = !DILocation(line: 2527, column: 27, scope: !5098)
!5175 = !DILocation(line: 2527, column: 20, scope: !5098)
!5176 = !DILocation(line: 2527, column: 24, scope: !5098)
!5177 = !DILocation(line: 2528, column: 16, scope: !5098)
!5178 = !DILocation(line: 2528, column: 20, scope: !5098)
!5179 = !DILocation(line: 2529, column: 36, scope: !5098)
!5180 = !DILocation(line: 2529, column: 44, scope: !5098)
!5181 = !DILocation(line: 2529, column: 16, scope: !5098)
!5182 = !DILocation(line: 2529, column: 25, scope: !5098)
!5183 = !DILocation(line: 2530, column: 16, scope: !5098)
!5184 = !DILocation(line: 2530, column: 21, scope: !5098)
!5185 = !DILocation(line: 2532, column: 1, scope: !5074)
!5186 = !DILocation(line: 2534, column: 62, scope: !5113)
!5187 = !DILocation(line: 2535, column: 26, scope: !5113)
!5188 = !DILocation(line: 2535, column: 11, scope: !5113)
!5189 = !DILocation(line: 2536, column: 27, scope: !5113)
!5190 = !DILocation(line: 2536, column: 15, scope: !5113)
!5191 = !DILocation(line: 2536, column: 11, scope: !5113)
!5192 = !DILocation(line: 2538, column: 16, scope: !5113)
!5193 = !DILocation(line: 2538, column: 20, scope: !5113)
!5194 = !DILocation(line: 2539, column: 19, scope: !5113)
!5195 = !DILocation(line: 2539, column: 25, scope: !5113)
!5196 = !DILocation(line: 2539, column: 12, scope: !5113)
!5197 = !DILocation(line: 2539, column: 16, scope: !5113)
!5198 = !DILocation(line: 2540, column: 30, scope: !5113)
!5199 = !DILocation(line: 2540, column: 12, scope: !5113)
!5200 = !DILocation(line: 2540, column: 21, scope: !5113)
!5201 = !DILocation(line: 2541, column: 19, scope: !5113)
!5202 = !DILocation(line: 2541, column: 28, scope: !5113)
!5203 = !DILocation(line: 2541, column: 12, scope: !5113)
!5204 = !DILocation(line: 2541, column: 17, scope: !5113)
!5205 = !DILocation(line: 2543, column: 1, scope: !5113)
!5206 = distinct !DISubprogram(name: "moduleParseCallReply_Array", scope: !3, file: !3, line: 2545, type: !1222, isLocal: false, isDefinition: true, scopeLine: 2545, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5207)
!5207 = !{!5208, !5209, !5210, !5211, !5212, !5213}
!5208 = !DILocalVariable(name: "reply", arg: 1, scope: !5206, file: !3, line: 2545, type: !1224)
!5209 = !DILocalVariable(name: "proto", scope: !5206, file: !3, line: 2546, type: !9)
!5210 = !DILocalVariable(name: "p", scope: !5206, file: !3, line: 2547, type: !9)
!5211 = !DILocalVariable(name: "arraylen", scope: !5206, file: !3, line: 2548, type: !112)
!5212 = !DILocalVariable(name: "j", scope: !5206, file: !3, line: 2548, type: !112)
!5213 = !DILocalVariable(name: "ele", scope: !5214, file: !3, line: 2562, type: !1224)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 2561, column: 36)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 2561, column: 5)
!5216 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 2561, column: 5)
!5217 = !DILocation(line: 2545, column: 55, scope: !5206)
!5218 = !DILocation(line: 2546, column: 26, scope: !5206)
!5219 = !DILocation(line: 2546, column: 11, scope: !5206)
!5220 = !DILocation(line: 2547, column: 27, scope: !5206)
!5221 = !DILocation(line: 2547, column: 15, scope: !5206)
!5222 = !DILocation(line: 2547, column: 11, scope: !5206)
!5223 = !DILocation(line: 2548, column: 5, scope: !5206)
!5224 = !DILocation(line: 2550, column: 24, scope: !5206)
!5225 = !DILocation(line: 2550, column: 30, scope: !5206)
!5226 = !DILocation(line: 2548, column: 15, scope: !5206)
!5227 = !DILocation(line: 2550, column: 5, scope: !5206)
!5228 = !DILocation(line: 2551, column: 7, scope: !5206)
!5229 = !DILocation(line: 2553, column: 9, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 2553, column: 9)
!5231 = !DILocation(line: 2553, column: 18, scope: !5230)
!5232 = !DILocation(line: 2553, column: 9, scope: !5206)
!5233 = !DILocation(line: 2559, column: 60, scope: !5206)
!5234 = !DILocation(line: 2559, column: 24, scope: !5206)
!5235 = !DILocation(line: 2559, column: 12, scope: !5206)
!5236 = !DILocation(line: 2559, column: 16, scope: !5206)
!5237 = !DILocation(line: 2559, column: 22, scope: !5206)
!5238 = !DILocation(line: 2560, column: 18, scope: !5206)
!5239 = !DILocation(line: 2560, column: 12, scope: !5206)
!5240 = !DILocation(line: 2560, column: 16, scope: !5206)
!5241 = !DILocation(line: 2548, column: 25, scope: !5206)
!5242 = !DILocation(line: 2561, column: 10, scope: !5216)
!5243 = !DILocation(line: 2561, column: 19, scope: !5215)
!5244 = !DILocation(line: 2561, column: 5, scope: !5216)
!5245 = !DILocation(line: 2562, column: 48, scope: !5214)
!5246 = !DILocation(line: 2562, column: 53, scope: !5214)
!5247 = !DILocation(line: 2562, column: 31, scope: !5214)
!5248 = !DILocation(line: 2563, column: 14, scope: !5214)
!5249 = !DILocation(line: 2563, column: 20, scope: !5214)
!5250 = !DILocation(line: 2565, column: 14, scope: !5214)
!5251 = !DILocation(line: 2565, column: 20, scope: !5214)
!5252 = !DILocation(line: 2566, column: 27, scope: !5214)
!5253 = !DILocation(line: 2566, column: 18, scope: !5214)
!5254 = !DILocation(line: 2567, column: 9, scope: !5214)
!5255 = !DILocation(line: 2568, column: 19, scope: !5214)
!5256 = !DILocation(line: 2568, column: 11, scope: !5214)
!5257 = !DILocation(line: 2561, column: 32, scope: !5215)
!5258 = !DILocation(line: 2561, column: 5, scope: !5215)
!5259 = !DILocation(line: 2561, column: 21, scope: !5215)
!5260 = distinct !{!5260, !5244, !5261}
!5261 = !DILocation(line: 2569, column: 5, scope: !5216)
!5262 = !DILocation(line: 0, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 2553, column: 25)
!5264 = !DILocation(line: 2572, column: 1, scope: !5206)
!5265 = distinct !DISubprogram(name: "RM_FreeCallReply_Rec", scope: !3, file: !3, line: 2576, type: !5266, isLocal: false, isDefinition: true, scopeLine: 2576, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5268)
!5266 = !DISubroutineType(types: !5267)
!5267 = !{null, !1224, !17}
!5268 = !{!5269, !5270, !5271}
!5269 = !DILocalVariable(name: "reply", arg: 1, scope: !5265, file: !3, line: 2576, type: !1224)
!5270 = !DILocalVariable(name: "freenested", arg: 2, scope: !5265, file: !3, line: 2576, type: !17)
!5271 = !DILocalVariable(name: "j", scope: !5272, file: !3, line: 2584, type: !157)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 2583, column: 53)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2583, column: 13)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !3, line: 2582, column: 58)
!5275 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2582, column: 9)
!5276 = !DILocation(line: 2576, column: 49, scope: !5265)
!5277 = !DILocation(line: 2576, column: 60, scope: !5265)
!5278 = !DILocation(line: 2580, column: 10, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2580, column: 9)
!5280 = !DILocation(line: 2580, column: 21, scope: !5279)
!5281 = !DILocation(line: 0, scope: !5275)
!5282 = !DILocation(line: 2580, column: 37, scope: !5279)
!5283 = !DILocation(line: 2580, column: 9, scope: !5265)
!5284 = !DILocation(line: 2582, column: 24, scope: !5275)
!5285 = !DILocation(line: 2582, column: 9, scope: !5265)
!5286 = !DILocation(line: 2583, column: 20, scope: !5273)
!5287 = !DILocation(line: 2583, column: 25, scope: !5273)
!5288 = !DILocation(line: 2583, column: 13, scope: !5274)
!5289 = !DILocation(line: 2584, column: 20, scope: !5272)
!5290 = !DILocation(line: 2585, column: 18, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 2585, column: 13)
!5292 = !DILocation(line: 2585, column: 36, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 2585, column: 13)
!5294 = !DILocation(line: 2585, column: 27, scope: !5293)
!5295 = !DILocation(line: 0, scope: !5272)
!5296 = !DILocation(line: 2585, column: 13, scope: !5291)
!5297 = !DILocation(line: 2586, column: 54, scope: !5293)
!5298 = !DILocation(line: 2586, column: 17, scope: !5293)
!5299 = !DILocation(line: 2585, column: 42, scope: !5293)
!5300 = !DILocation(line: 2585, column: 13, scope: !5293)
!5301 = distinct !{!5301, !5296, !5302}
!5302 = !DILocation(line: 2586, column: 58, scope: !5291)
!5303 = !DILocation(line: 2587, column: 19, scope: !5272)
!5304 = !DILocation(line: 2587, column: 13, scope: !5272)
!5305 = !DILocation(line: 2588, column: 9, scope: !5272)
!5306 = !DILocation(line: 2595, column: 18, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 2595, column: 9)
!5308 = !DILocation(line: 2595, column: 24, scope: !5307)
!5309 = !DILocation(line: 2595, column: 9, scope: !5265)
!5310 = !DILocation(line: 2596, column: 20, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 2596, column: 13)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 2595, column: 57)
!5313 = !DILocation(line: 2596, column: 13, scope: !5311)
!5314 = !DILocation(line: 2596, column: 13, scope: !5312)
!5315 = !DILocation(line: 2596, column: 27, scope: !5311)
!5316 = !DILocation(line: 2597, column: 15, scope: !5312)
!5317 = !DILocation(line: 2597, column: 9, scope: !5312)
!5318 = !DILocation(line: 2598, column: 5, scope: !5312)
!5319 = !DILocation(line: 2599, column: 1, scope: !5265)
!5320 = distinct !DISubprogram(name: "RM_CallReplyType", scope: !3, file: !3, line: 2612, type: !5321, isLocal: false, isDefinition: true, scopeLine: 2612, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5323)
!5321 = !DISubroutineType(types: !5322)
!5322 = !{!17, !1224}
!5323 = !{!5324}
!5324 = !DILocalVariable(name: "reply", arg: 1, scope: !5320, file: !3, line: 2612, type: !1224)
!5325 = !DILocation(line: 2612, column: 44, scope: !5320)
!5326 = !DILocation(line: 2613, column: 10, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 2613, column: 9)
!5328 = !DILocation(line: 2613, column: 9, scope: !5320)
!5329 = !DILocation(line: 2614, column: 19, scope: !5320)
!5330 = !DILocation(line: 2614, column: 5, scope: !5320)
!5331 = !DILocation(line: 0, scope: !5327)
!5332 = !DILocation(line: 2615, column: 1, scope: !5320)
!5333 = distinct !DISubprogram(name: "RM_CallReplyLength", scope: !3, file: !3, line: 2618, type: !5334, isLocal: false, isDefinition: true, scopeLine: 2618, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5336)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{!157, !1224}
!5336 = !{!5337}
!5337 = !DILocalVariable(name: "reply", arg: 1, scope: !5333, file: !3, line: 2618, type: !1224)
!5338 = !DILocation(line: 2618, column: 49, scope: !5333)
!5339 = !DILocation(line: 2619, column: 5, scope: !5333)
!5340 = !DILocation(line: 2620, column: 19, scope: !5333)
!5341 = !DILocation(line: 2620, column: 5, scope: !5333)
!5342 = !DILocation(line: 2624, column: 23, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 2620, column: 25)
!5344 = !DILocation(line: 2624, column: 9, scope: !5343)
!5345 = !DILocation(line: 0, scope: !5343)
!5346 = !DILocation(line: 2628, column: 1, scope: !5333)
!5347 = distinct !DISubprogram(name: "RM_CallReplyArrayElement", scope: !3, file: !3, line: 2632, type: !5348, isLocal: false, isDefinition: true, scopeLine: 2632, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5350)
!5348 = !DISubroutineType(types: !5349)
!5349 = !{!1224, !1224, !157}
!5350 = !{!5351, !5352}
!5351 = !DILocalVariable(name: "reply", arg: 1, scope: !5347, file: !3, line: 2632, type: !1224)
!5352 = !DILocalVariable(name: "idx", arg: 2, scope: !5347, file: !3, line: 2632, type: !157)
!5353 = !DILocation(line: 2632, column: 70, scope: !5347)
!5354 = !DILocation(line: 2632, column: 84, scope: !5347)
!5355 = !DILocation(line: 2633, column: 5, scope: !5347)
!5356 = !DILocation(line: 2634, column: 16, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2634, column: 9)
!5358 = !DILocation(line: 2634, column: 21, scope: !5357)
!5359 = !DILocation(line: 2634, column: 9, scope: !5347)
!5360 = !DILocation(line: 2635, column: 23, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2635, column: 9)
!5362 = !DILocation(line: 2635, column: 13, scope: !5361)
!5363 = !DILocation(line: 2635, column: 9, scope: !5347)
!5364 = !DILocation(line: 2636, column: 19, scope: !5347)
!5365 = !DILocation(line: 2636, column: 23, scope: !5347)
!5366 = !DILocation(line: 2636, column: 28, scope: !5347)
!5367 = !DILocation(line: 2636, column: 5, scope: !5347)
!5368 = !DILocation(line: 0, scope: !5347)
!5369 = !DILocation(line: 0, scope: !5357)
!5370 = !DILocation(line: 2637, column: 1, scope: !5347)
!5371 = distinct !DISubprogram(name: "RM_CallReplyInteger", scope: !3, file: !3, line: 2640, type: !5372, isLocal: false, isDefinition: true, scopeLine: 2640, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!112, !1224}
!5374 = !{!5375}
!5375 = !DILocalVariable(name: "reply", arg: 1, scope: !5371, file: !3, line: 2640, type: !1224)
!5376 = !DILocation(line: 2640, column: 53, scope: !5371)
!5377 = !DILocation(line: 2641, column: 5, scope: !5371)
!5378 = !DILocation(line: 2642, column: 16, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 2642, column: 9)
!5380 = !DILocation(line: 2642, column: 21, scope: !5379)
!5381 = !DILocation(line: 2642, column: 9, scope: !5371)
!5382 = !DILocation(line: 2643, column: 19, scope: !5371)
!5383 = !DILocation(line: 2643, column: 23, scope: !5371)
!5384 = !DILocation(line: 2643, column: 5, scope: !5371)
!5385 = !DILocation(line: 0, scope: !5371)
!5386 = !DILocation(line: 0, scope: !5379)
!5387 = !DILocation(line: 2644, column: 1, scope: !5371)
!5388 = distinct !DISubprogram(name: "RM_CallReplyStringPtr", scope: !3, file: !3, line: 2647, type: !5389, isLocal: false, isDefinition: true, scopeLine: 2647, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!523, !1224, !2145}
!5391 = !{!5392, !5393}
!5392 = !DILocalVariable(name: "reply", arg: 1, scope: !5388, file: !3, line: 2647, type: !1224)
!5393 = !DILocalVariable(name: "len", arg: 2, scope: !5388, file: !3, line: 2647, type: !2145)
!5394 = !DILocation(line: 2647, column: 57, scope: !5388)
!5395 = !DILocation(line: 2647, column: 72, scope: !5388)
!5396 = !DILocation(line: 2648, column: 5, scope: !5388)
!5397 = !DILocation(line: 2649, column: 16, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 2649, column: 9)
!5399 = !DILocation(line: 2649, column: 21, scope: !5398)
!5400 = !DILocation(line: 2649, column: 49, scope: !5398)
!5401 = !DILocation(line: 2650, column: 21, scope: !5398)
!5402 = !DILocation(line: 2649, column: 9, scope: !5388)
!5403 = !DILocation(line: 2651, column: 9, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 2651, column: 9)
!5405 = !DILocation(line: 2651, column: 9, scope: !5388)
!5406 = !DILocation(line: 2651, column: 28, scope: !5404)
!5407 = !DILocation(line: 2651, column: 19, scope: !5404)
!5408 = !DILocation(line: 2651, column: 14, scope: !5404)
!5409 = !DILocation(line: 2652, column: 23, scope: !5388)
!5410 = !DILocation(line: 2652, column: 5, scope: !5388)
!5411 = !DILocation(line: 0, scope: !5388)
!5412 = !DILocation(line: 0, scope: !5398)
!5413 = !DILocation(line: 2653, column: 1, scope: !5388)
!5414 = distinct !DISubprogram(name: "RM_CreateStringFromCallReply", scope: !3, file: !3, line: 2657, type: !5415, isLocal: false, isDefinition: true, scopeLine: 2657, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5417)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{!143, !1224}
!5417 = !{!5418, !5419, !5425}
!5418 = !DILocalVariable(name: "reply", arg: 1, scope: !5414, file: !3, line: 2657, type: !1224)
!5419 = !DILocalVariable(name: "buf", scope: !5420, file: !3, line: 2664, type: !5422)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 2663, column: 37)
!5421 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 2659, column: 25)
!5422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 512, elements: !5423)
!5423 = !{!5424}
!5424 = !DISubrange(count: 64)
!5425 = !DILocalVariable(name: "len", scope: !5420, file: !3, line: 2665, type: !17)
!5426 = !DILocation(line: 2657, column: 71, scope: !5414)
!5427 = !DILocation(line: 2658, column: 5, scope: !5414)
!5428 = !DILocation(line: 2659, column: 19, scope: !5414)
!5429 = !DILocation(line: 2659, column: 5, scope: !5414)
!5430 = !DILocation(line: 2662, column: 39, scope: !5421)
!5431 = !DILocation(line: 2662, column: 54, scope: !5421)
!5432 = !DILocation(line: 2662, column: 65, scope: !5421)
!5433 = !DILocation(line: 2662, column: 16, scope: !5421)
!5434 = !DILocation(line: 2662, column: 9, scope: !5421)
!5435 = !DILocation(line: 2664, column: 9, scope: !5420)
!5436 = !DILocation(line: 2664, column: 14, scope: !5420)
!5437 = !DILocation(line: 2665, column: 52, scope: !5420)
!5438 = !DILocation(line: 2665, column: 56, scope: !5420)
!5439 = !DILocation(line: 2665, column: 19, scope: !5420)
!5440 = !DILocation(line: 2665, column: 13, scope: !5420)
!5441 = !DILocation(line: 2666, column: 39, scope: !5420)
!5442 = !DILocation(line: 2666, column: 47, scope: !5420)
!5443 = !DILocation(line: 2666, column: 16, scope: !5420)
!5444 = !DILocation(line: 2667, column: 9, scope: !5421)
!5445 = !DILocation(line: 0, scope: !5421)
!5446 = !DILocation(line: 2670, column: 1, scope: !5414)
!5447 = distinct !DISubprogram(name: "RM_Call", scope: !3, file: !3, line: 2755, type: !5448, isLocal: false, isDefinition: true, scopeLine: 2755, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5450)
!5448 = !DISubroutineType(types: !5449)
!5449 = !{!1224, !584, !523, !523, null}
!5450 = !{!5451, !5452, !5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464}
!5451 = !DILocalVariable(name: "ctx", arg: 1, scope: !5447, file: !3, line: 2755, type: !584)
!5452 = !DILocalVariable(name: "cmdname", arg: 2, scope: !5447, file: !3, line: 2755, type: !523)
!5453 = !DILocalVariable(name: "fmt", arg: 3, scope: !5447, file: !3, line: 2755, type: !523)
!5454 = !DILocalVariable(name: "cmd", scope: !5447, file: !3, line: 2756, type: !18)
!5455 = !DILocalVariable(name: "c", scope: !5447, file: !3, line: 2757, type: !27)
!5456 = !DILocalVariable(name: "argv", scope: !5447, file: !3, line: 2758, type: !165)
!5457 = !DILocalVariable(name: "argc", scope: !5447, file: !3, line: 2759, type: !17)
!5458 = !DILocalVariable(name: "flags", scope: !5447, file: !3, line: 2759, type: !17)
!5459 = !DILocalVariable(name: "ap", scope: !5447, file: !3, line: 2760, type: !1980)
!5460 = !DILocalVariable(name: "reply", scope: !5447, file: !3, line: 2761, type: !1224)
!5461 = !DILocalVariable(name: "replicate", scope: !5447, file: !3, line: 2762, type: !17)
!5462 = !DILocalVariable(name: "call_flags", scope: !5447, file: !3, line: 2822, type: !17)
!5463 = !DILocalVariable(name: "proto", scope: !5447, file: !3, line: 2832, type: !154)
!5464 = !DILocalVariable(name: "o", scope: !5465, file: !3, line: 2835, type: !5466)
!5465 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2834, column: 33)
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5467, size: 64)
!5467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clientReplyBlock", file: !13, line: 642, baseType: !5468)
!5468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clientReplyBlock", file: !13, line: 639, size: 128, elements: !5469)
!5469 = !{!5470, !5471, !5472}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5468, file: !13, line: 640, baseType: !157, size: 64)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !5468, file: !13, line: 640, baseType: !157, size: 64, offset: 64)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5468, file: !13, line: 641, baseType: !623, offset: 128)
!5473 = !DILocation(line: 2755, column: 47, scope: !5447)
!5474 = !DILocation(line: 2755, column: 64, scope: !5447)
!5475 = !DILocation(line: 2755, column: 85, scope: !5447)
!5476 = !DILocation(line: 2757, column: 13, scope: !5447)
!5477 = !DILocation(line: 2758, column: 12, scope: !5447)
!5478 = !DILocation(line: 2759, column: 5, scope: !5447)
!5479 = !DILocation(line: 2759, column: 9, scope: !5447)
!5480 = !DILocation(line: 2759, column: 19, scope: !5447)
!5481 = !DILocation(line: 2760, column: 5, scope: !5447)
!5482 = !DILocation(line: 2760, column: 13, scope: !5447)
!5483 = !DILocation(line: 2761, column: 27, scope: !5447)
!5484 = !DILocation(line: 2762, column: 9, scope: !5447)
!5485 = !DILocation(line: 2765, column: 5, scope: !5447)
!5486 = !DILocation(line: 2766, column: 9, scope: !5447)
!5487 = !DILocation(line: 2767, column: 12, scope: !5447)
!5488 = !DILocation(line: 2768, column: 17, scope: !5447)
!5489 = !DILocation(line: 2768, column: 23, scope: !5447)
!5490 = !DILocation(line: 2769, column: 5, scope: !5447)
!5491 = !DILocation(line: 2772, column: 8, scope: !5447)
!5492 = !DILocation(line: 2772, column: 14, scope: !5447)
!5493 = !DILocation(line: 2773, column: 18, scope: !5447)
!5494 = !DILocation(line: 2773, column: 26, scope: !5447)
!5495 = !DILocation(line: 2773, column: 8, scope: !5447)
!5496 = !DILocation(line: 2773, column: 11, scope: !5447)
!5497 = !DILocation(line: 2774, column: 8, scope: !5447)
!5498 = !DILocation(line: 2774, column: 13, scope: !5447)
!5499 = !DILocation(line: 2775, column: 15, scope: !5447)
!5500 = !DILocation(line: 2775, column: 8, scope: !5447)
!5501 = !DILocation(line: 2775, column: 13, scope: !5447)
!5502 = !DILocation(line: 2776, column: 14, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2776, column: 9)
!5504 = !DILocation(line: 2776, column: 9, scope: !5503)
!5505 = !DILocation(line: 2776, column: 9, scope: !5447)
!5506 = !DILocation(line: 2776, column: 35, scope: !5503)
!5507 = !DILocation(line: 2776, column: 42, scope: !5503)
!5508 = !DILocation(line: 2776, column: 22, scope: !5503)
!5509 = !DILocation(line: 2780, column: 14, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2780, column: 9)
!5511 = !DILocation(line: 2780, column: 9, scope: !5447)
!5512 = !DILocation(line: 2783, column: 5, scope: !5447)
!5513 = !DILocation(line: 2788, column: 28, scope: !5447)
!5514 = !DILocation(line: 2788, column: 25, scope: !5447)
!5515 = !DILocation(line: 2788, column: 37, scope: !5447)
!5516 = !DILocation(line: 2788, column: 11, scope: !5447)
!5517 = !DILocation(line: 2756, column: 26, scope: !5447)
!5518 = !DILocation(line: 2789, column: 10, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2789, column: 9)
!5520 = !DILocation(line: 2789, column: 9, scope: !5447)
!5521 = !DILocation(line: 2790, column: 9, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2789, column: 15)
!5523 = !DILocation(line: 2790, column: 15, scope: !5522)
!5524 = !DILocation(line: 2791, column: 9, scope: !5522)
!5525 = !DILocation(line: 2793, column: 17, scope: !5447)
!5526 = !DILocation(line: 2793, column: 25, scope: !5447)
!5527 = !{!1306, !892, i64 88}
!5528 = !DILocation(line: 2793, column: 8, scope: !5447)
!5529 = !DILocation(line: 2793, column: 12, scope: !5447)
!5530 = !DILocation(line: 2796, column: 15, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2796, column: 9)
!5532 = !DILocation(line: 2796, column: 21, scope: !5531)
!5533 = !DILocation(line: 2796, column: 25, scope: !5531)
!5534 = !DILocation(line: 2796, column: 39, scope: !5531)
!5535 = !DILocation(line: 2796, column: 48, scope: !5531)
!5536 = !DILocation(line: 2796, column: 59, scope: !5531)
!5537 = !DILocation(line: 2796, column: 57, scope: !5531)
!5538 = !DILocation(line: 2796, column: 9, scope: !5447)
!5539 = !DILocation(line: 2797, column: 9, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 2796, column: 73)
!5541 = !DILocation(line: 2797, column: 15, scope: !5540)
!5542 = !DILocation(line: 2798, column: 9, scope: !5540)
!5543 = !DILocation(line: 2804, column: 16, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2804, column: 9)
!5545 = !DILocation(line: 2804, column: 9, scope: !5544)
!5546 = !DILocation(line: 2804, column: 32, scope: !5544)
!5547 = !DILocation(line: 2804, column: 42, scope: !5544)
!5548 = !DILocation(line: 2804, column: 50, scope: !5544)
!5549 = !DILocation(line: 2804, column: 56, scope: !5544)
!5550 = !DILocation(line: 2804, column: 9, scope: !5447)
!5551 = !DILocation(line: 2806, column: 18, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 2804, column: 74)
!5553 = !DILocation(line: 2807, column: 34, scope: !5552)
!5554 = !DILocation(line: 2807, column: 40, scope: !5552)
!5555 = !DILocation(line: 2807, column: 18, scope: !5552)
!5556 = !DILocation(line: 2808, column: 40, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 2808, column: 13)
!5558 = !DILocation(line: 2808, column: 48, scope: !5557)
!5559 = !DILocation(line: 2808, column: 13, scope: !5557)
!5560 = !DILocation(line: 2809, column: 35, scope: !5557)
!5561 = !{!1050, !892, i64 2944}
!5562 = !DILocation(line: 2809, column: 44, scope: !5557)
!5563 = !{!5564, !892, i64 0}
!5564 = !{!"clusterState", !892, i64 0, !1051, i64 8, !895, i64 16, !895, i64 20, !892, i64 24, !892, i64 32, !893, i64 40, !893, i64 131112, !893, i64 262184, !893, i64 393256, !892, i64 524328, !1052, i64 524336, !895, i64 524344, !895, i64 524348, !895, i64 524352, !1051, i64 524360, !895, i64 524368, !1052, i64 524376, !892, i64 524384, !1052, i64 524392, !895, i64 524400, !1051, i64 524408, !895, i64 524416, !893, i64 524424, !893, i64 524504, !1052, i64 524584}
!5565 = !DILocation(line: 2808, column: 64, scope: !5557)
!5566 = !DILocation(line: 2808, column: 13, scope: !5552)
!5567 = !DILocation(line: 2811, column: 13, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 2810, column: 9)
!5569 = !DILocation(line: 2811, column: 19, scope: !5568)
!5570 = !DILocation(line: 2812, column: 13, scope: !5568)
!5571 = !DILocation(line: 2819, column: 9, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2819, column: 9)
!5573 = !DILocation(line: 2819, column: 9, scope: !5447)
!5574 = !DILocation(line: 1311, column: 51, scope: !2757, inlinedAt: !5575)
!5575 = distinct !DILocation(line: 2819, column: 20, scope: !5572)
!5576 = !DILocation(line: 1314, column: 14, scope: !2762, inlinedAt: !5575)
!5577 = !DILocation(line: 1314, column: 22, scope: !2762, inlinedAt: !5575)
!5578 = !DILocation(line: 1314, column: 28, scope: !2762, inlinedAt: !5575)
!5579 = !DILocation(line: 1314, column: 9, scope: !2757, inlinedAt: !5575)
!5580 = !DILocation(line: 1316, column: 14, scope: !2767, inlinedAt: !5575)
!5581 = !DILocation(line: 1316, column: 20, scope: !2767, inlinedAt: !5575)
!5582 = !DILocation(line: 1316, column: 9, scope: !2757, inlinedAt: !5575)
!5583 = !DILocation(line: 1320, column: 20, scope: !2771, inlinedAt: !5575)
!5584 = !DILocation(line: 1320, column: 9, scope: !2757, inlinedAt: !5575)
!5585 = !DILocation(line: 1321, column: 5, scope: !2757, inlinedAt: !5575)
!5586 = !DILocation(line: 1322, column: 16, scope: !2757, inlinedAt: !5575)
!5587 = !DILocation(line: 1323, column: 1, scope: !2757, inlinedAt: !5575)
!5588 = !DILocation(line: 2819, column: 20, scope: !5572)
!5589 = !DILocation(line: 2822, column: 9, scope: !5447)
!5590 = !DILocation(line: 2823, column: 9, scope: !5447)
!5591 = !DILocation(line: 2826, column: 5, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 2823, column: 20)
!5593 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2823, column: 9)
!5594 = !DILocation(line: 0, scope: !5447)
!5595 = !DILocation(line: 0, scope: !5592)
!5596 = !DILocation(line: 2827, column: 5, scope: !5447)
!5597 = !DILocation(line: 2832, column: 27, scope: !5447)
!5598 = !DILocation(line: 2832, column: 37, scope: !5447)
!5599 = !{!1306, !895, i64 528}
!5600 = !DILocation(line: 2832, column: 34, scope: !5447)
!5601 = !DILocation(line: 2832, column: 17, scope: !5447)
!5602 = !DILocation(line: 2832, column: 9, scope: !5447)
!5603 = !DILocation(line: 2833, column: 15, scope: !5447)
!5604 = !DILocation(line: 2834, column: 5, scope: !5447)
!5605 = !DILocation(line: 2834, column: 11, scope: !5447)
!5606 = !{!1306, !892, i64 112}
!5607 = !{!5608, !1051, i64 40}
!5608 = !{!"list", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !1051, i64 40}
!5609 = !DILocation(line: 2835, column: 31, scope: !5465)
!5610 = !{!5608, !892, i64 0}
!5611 = !{!5612, !892, i64 16}
!5612 = !{!"listNode", !892, i64 0, !892, i64 8, !892, i64 16}
!5613 = !DILocation(line: 2835, column: 27, scope: !5465)
!5614 = !DILocation(line: 2837, column: 33, scope: !5465)
!5615 = !DILocation(line: 2837, column: 43, scope: !5465)
!5616 = !DILocation(line: 2837, column: 17, scope: !5465)
!5617 = !DILocation(line: 2838, column: 24, scope: !5465)
!5618 = !DILocation(line: 2838, column: 30, scope: !5465)
!5619 = !DILocation(line: 2838, column: 9, scope: !5465)
!5620 = distinct !{!5620, !5604, !5621}
!5621 = !DILocation(line: 2839, column: 5, scope: !5447)
!5622 = !DILocation(line: 0, scope: !5465)
!5623 = !DILocation(line: 2840, column: 13, scope: !5447)
!5624 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !5625)
!5625 = distinct !DILocation(line: 2841, column: 5, scope: !5447)
!5626 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !5625)
!5627 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !5625)
!5628 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !5625)
!5629 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !5625)
!5630 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !5625)
!5631 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !5625)
!5632 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !5625)
!5633 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !5625)
!5634 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !5625)
!5635 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !5625)
!5636 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !5625)
!5637 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !5625)
!5638 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !5625)
!5639 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !5625)
!5640 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !5625)
!5641 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !5625)
!5642 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !5625)
!5643 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !5625)
!5644 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !5625)
!5645 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !5625)
!5646 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !5625)
!5647 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !5625)
!5648 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !5625)
!5649 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !5625)
!5650 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !5625)
!5651 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !5625)
!5652 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !5625)
!5653 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !5625)
!5654 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !5625)
!5655 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !5625)
!5656 = !DILocation(line: 2841, column: 5, scope: !5447)
!5657 = !DILocation(line: 0, scope: !5522)
!5658 = !DILocation(line: 2844, column: 14, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 2844, column: 9)
!5660 = !DILocation(line: 2844, column: 9, scope: !5659)
!5661 = !DILocation(line: 2844, column: 9, scope: !5447)
!5662 = !DILocation(line: 2844, column: 35, scope: !5659)
!5663 = !DILocation(line: 2844, column: 42, scope: !5659)
!5664 = !DILocation(line: 2844, column: 22, scope: !5659)
!5665 = !DILocation(line: 2845, column: 5, scope: !5447)
!5666 = !DILocation(line: 2847, column: 1, scope: !5447)
!5667 = !DILocation(line: 2846, column: 5, scope: !5447)
!5668 = distinct !DISubprogram(name: "moduleCallCommandFilters", scope: !3, file: !3, line: 4972, type: !25, isLocal: false, isDefinition: true, scopeLine: 4972, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5669)
!5669 = !{!5670, !5671, !5672, !5673, !5679}
!5670 = !DILocalVariable(name: "c", arg: 1, scope: !5668, file: !3, line: 4972, type: !27)
!5671 = !DILocalVariable(name: "li", scope: !5668, file: !3, line: 4975, type: !759)
!5672 = !DILocalVariable(name: "ln", scope: !5668, file: !3, line: 4976, type: !120)
!5673 = !DILocalVariable(name: "filter", scope: !5668, file: !3, line: 4979, type: !5674)
!5674 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandFilterCtx", file: !3, line: 279, baseType: !5675)
!5675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCommandFilterCtx", file: !3, line: 276, size: 128, elements: !5676)
!5676 = !{!5677, !5678}
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !5675, file: !3, line: 277, baseType: !165, size: 64)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !5675, file: !3, line: 278, baseType: !17, size: 32, offset: 64)
!5679 = !DILocalVariable(name: "f", scope: !5680, file: !3, line: 4985, type: !5681)
!5680 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 4984, column: 33)
!5681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5682, size: 64)
!5682 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandFilter", file: !3, line: 290, baseType: !5683)
!5683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCommandFilter", file: !3, line: 283, size: 192, elements: !5684)
!5684 = !{!5685, !5686, !5692}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !5683, file: !3, line: 285, baseType: !577, size: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5683, file: !3, line: 287, baseType: !5687, size: 64, offset: 64)
!5687 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleCommandFilterFunc", file: !3, line: 281, baseType: !5688)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{null, !5691}
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5683, file: !3, line: 289, baseType: !17, size: 32, offset: 128)
!5693 = !DILocation(line: 4972, column: 39, scope: !5668)
!5694 = !DILocation(line: 4973, column: 9, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 4973, column: 9)
!5696 = !DILocation(line: 4973, column: 42, scope: !5695)
!5697 = !DILocation(line: 4973, column: 9, scope: !5668)
!5698 = !DILocation(line: 4975, column: 5, scope: !5668)
!5699 = !DILocation(line: 4975, column: 14, scope: !5668)
!5700 = !DILocation(line: 4977, column: 5, scope: !5668)
!5701 = !DILocation(line: 4979, column: 5, scope: !5668)
!5702 = !DILocation(line: 4980, column: 20, scope: !5668)
!5703 = !DILocation(line: 4979, column: 42, scope: !5668)
!5704 = !{!5705, !892, i64 0}
!5705 = !{!"RedisModuleCommandFilterCtx", !892, i64 0, !895, i64 8}
!5706 = !DILocation(line: 4981, column: 20, scope: !5668)
!5707 = !{!5705, !895, i64 8}
!5708 = !DILocation(line: 4984, column: 5, scope: !5668)
!5709 = !DILocation(line: 4984, column: 17, scope: !5668)
!5710 = !DILocation(line: 4976, column: 15, scope: !5668)
!5711 = !DILocation(line: 4985, column: 43, scope: !5680)
!5712 = !DILocation(line: 4985, column: 35, scope: !5680)
!5713 = !DILocation(line: 4990, column: 17, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 4990, column: 13)
!5715 = !{!5716, !895, i64 16}
!5716 = !{!"RedisModuleCommandFilter", !892, i64 0, !892, i64 8, !895, i64 16}
!5717 = !DILocation(line: 4990, column: 23, scope: !5714)
!5718 = !DILocation(line: 4990, column: 55, scope: !5714)
!5719 = !DILocation(line: 4990, column: 61, scope: !5714)
!5720 = !{!5716, !892, i64 0}
!5721 = !DILocation(line: 4990, column: 69, scope: !5714)
!5722 = !DILocation(line: 4990, column: 58, scope: !5714)
!5723 = !DILocation(line: 4990, column: 13, scope: !5680)
!5724 = distinct !{!5724, !5708, !5725}
!5725 = !DILocation(line: 4994, column: 5, scope: !5668)
!5726 = !DILocation(line: 4993, column: 12, scope: !5680)
!5727 = !{!5716, !892, i64 8}
!5728 = !DILocation(line: 4979, column: 33, scope: !5668)
!5729 = !DILocation(line: 4993, column: 9, scope: !5680)
!5730 = !DILocation(line: 0, scope: !5714)
!5731 = !DILocation(line: 4996, column: 22, scope: !5668)
!5732 = !DILocation(line: 4997, column: 22, scope: !5668)
!5733 = !DILocation(line: 4996, column: 13, scope: !5668)
!5734 = !DILocation(line: 4997, column: 13, scope: !5668)
!5735 = !DILocation(line: 4998, column: 1, scope: !5668)
!5736 = distinct !DISubprogram(name: "RM_CallReplyProto", scope: !3, file: !3, line: 2851, type: !5389, isLocal: false, isDefinition: true, scopeLine: 2851, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5737)
!5737 = !{!5738, !5739}
!5738 = !DILocalVariable(name: "reply", arg: 1, scope: !5736, file: !3, line: 2851, type: !1224)
!5739 = !DILocalVariable(name: "len", arg: 2, scope: !5736, file: !3, line: 2851, type: !2145)
!5740 = !DILocation(line: 2851, column: 53, scope: !5736)
!5741 = !DILocation(line: 2851, column: 68, scope: !5736)
!5742 = !DILocation(line: 2852, column: 16, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 2852, column: 9)
!5744 = !DILocation(line: 2852, column: 9, scope: !5743)
!5745 = !DILocation(line: 2852, column: 9, scope: !5736)
!5746 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !5747)
!5747 = distinct !DILocation(line: 2852, column: 30, scope: !5743)
!5748 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !5747)
!5749 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !5747)
!5750 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !5747)
!5751 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !5747)
!5752 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !5747)
!5753 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !5747)
!5754 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !5747)
!5755 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !5747)
!5756 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !5747)
!5757 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !5747)
!5758 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !5747)
!5759 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !5747)
!5760 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !5747)
!5761 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !5747)
!5762 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !5747)
!5763 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !5747)
!5764 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !5747)
!5765 = !DILocation(line: 0, scope: !2179, inlinedAt: !5747)
!5766 = !DILocation(line: 0, scope: !5743)
!5767 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !5747)
!5768 = !DILocation(line: 2852, column: 28, scope: !5743)
!5769 = !DILocation(line: 2852, column: 23, scope: !5743)
!5770 = !DILocation(line: 2853, column: 5, scope: !5736)
!5771 = distinct !DISubprogram(name: "moduleTypeEncodeId", scope: !3, file: !3, line: 2894, type: !5772, isLocal: false, isDefinition: true, scopeLine: 2894, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5774)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{!32, !523, !17}
!5774 = !{!5775, !5776, !5777, !5778, !5779, !5781, !5784}
!5775 = !DILocalVariable(name: "name", arg: 1, scope: !5771, file: !3, line: 2894, type: !523)
!5776 = !DILocalVariable(name: "encver", arg: 2, scope: !5771, file: !3, line: 2894, type: !17)
!5777 = !DILocalVariable(name: "cset", scope: !5771, file: !3, line: 2897, type: !523)
!5778 = !DILocalVariable(name: "id", scope: !5771, file: !3, line: 2901, type: !32)
!5779 = !DILocalVariable(name: "j", scope: !5780, file: !3, line: 2902, type: !17)
!5780 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 2902, column: 5)
!5781 = !DILocalVariable(name: "p", scope: !5782, file: !3, line: 2903, type: !9)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 2902, column: 33)
!5783 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 2902, column: 5)
!5784 = !DILocalVariable(name: "pos", scope: !5782, file: !3, line: 2905, type: !7)
!5785 = !DILocation(line: 2894, column: 41, scope: !5771)
!5786 = !DILocation(line: 2894, column: 51, scope: !5771)
!5787 = !DILocation(line: 2897, column: 24, scope: !5771)
!5788 = !DILocation(line: 2897, column: 17, scope: !5771)
!5789 = !DILocation(line: 2898, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 2898, column: 9)
!5791 = !DILocation(line: 2898, column: 22, scope: !5790)
!5792 = !DILocation(line: 2898, column: 9, scope: !5771)
!5793 = !DILocation(line: 2899, column: 20, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 2899, column: 9)
!5795 = !DILocation(line: 0, scope: !5780)
!5796 = !DILocation(line: 2902, column: 14, scope: !5780)
!5797 = !DILocation(line: 2901, column: 14, scope: !5771)
!5798 = !DILocation(line: 2902, column: 5, scope: !5780)
!5799 = !DILocation(line: 2903, column: 31, scope: !5782)
!5800 = !DILocation(line: 2903, column: 19, scope: !5782)
!5801 = !DILocation(line: 2903, column: 15, scope: !5782)
!5802 = !DILocation(line: 2904, column: 14, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 2904, column: 13)
!5804 = !DILocation(line: 2904, column: 13, scope: !5782)
!5805 = !DILocation(line: 2907, column: 5, scope: !5783)
!5806 = !DILocation(line: 2902, column: 5, scope: !5783)
!5807 = !DILocation(line: 2904, column: 17, scope: !5803)
!5808 = !DILocation(line: 2910, column: 1, scope: !5771)
!5809 = !DILocation(line: 0, scope: !5771)
!5810 = !DILocation(line: 2905, column: 30, scope: !5782)
!5811 = !DILocation(line: 2905, column: 23, scope: !5782)
!5812 = !DILocation(line: 2906, column: 18, scope: !5782)
!5813 = !DILocation(line: 2906, column: 24, scope: !5782)
!5814 = !DILocation(line: 2908, column: 14, scope: !5771)
!5815 = !DILocation(line: 2908, column: 23, scope: !5771)
!5816 = !DILocation(line: 2908, column: 21, scope: !5771)
!5817 = !DILocation(line: 2909, column: 5, scope: !5771)
!5818 = distinct !DISubprogram(name: "moduleTypeLookupModuleByName", scope: !3, file: !3, line: 2915, type: !5819, isLocal: false, isDefinition: true, scopeLine: 2915, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5821)
!5819 = !DISubroutineType(types: !5820)
!5820 = !{!267, !523}
!5821 = !{!5822, !5823, !5824, !5825, !5827, !5828, !5829}
!5822 = !DILocalVariable(name: "name", arg: 1, scope: !5818, file: !3, line: 2915, type: !523)
!5823 = !DILocalVariable(name: "di", scope: !5818, file: !3, line: 2916, type: !744)
!5824 = !DILocalVariable(name: "de", scope: !5818, file: !3, line: 2917, type: !81)
!5825 = !DILocalVariable(name: "module", scope: !5826, file: !3, line: 2920, type: !273)
!5826 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 2919, column: 41)
!5827 = !DILocalVariable(name: "li", scope: !5826, file: !3, line: 2921, type: !759)
!5828 = !DILocalVariable(name: "ln", scope: !5826, file: !3, line: 2922, type: !120)
!5829 = !DILocalVariable(name: "mt", scope: !5830, file: !3, line: 2926, type: !267)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 2925, column: 37)
!5831 = !DILocation(line: 2915, column: 54, scope: !5818)
!5832 = !DILocation(line: 2916, column: 40, scope: !5818)
!5833 = !DILocation(line: 2916, column: 24, scope: !5818)
!5834 = !DILocation(line: 2916, column: 19, scope: !5818)
!5835 = !DILocation(line: 2919, column: 5, scope: !5818)
!5836 = !DILocation(line: 2919, column: 18, scope: !5818)
!5837 = !DILocation(line: 2917, column: 16, scope: !5818)
!5838 = !DILocation(line: 2919, column: 32, scope: !5818)
!5839 = !DILocation(line: 2920, column: 38, scope: !5826)
!5840 = !DILocation(line: 2920, column: 29, scope: !5826)
!5841 = !DILocation(line: 2921, column: 9, scope: !5826)
!5842 = !DILocation(line: 2924, column: 28, scope: !5826)
!5843 = !DILocation(line: 2921, column: 18, scope: !5826)
!5844 = !DILocation(line: 2924, column: 9, scope: !5826)
!5845 = !DILocation(line: 2925, column: 9, scope: !5826)
!5846 = !DILocation(line: 2925, column: 21, scope: !5826)
!5847 = !DILocation(line: 2922, column: 19, scope: !5826)
!5848 = !DILocation(line: 2926, column: 34, scope: !5830)
!5849 = !DILocation(line: 2926, column: 25, scope: !5830)
!5850 = !DILocation(line: 2927, column: 29, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 2927, column: 17)
!5852 = !DILocation(line: 2927, column: 17, scope: !5851)
!5853 = !DILocation(line: 2927, column: 56, scope: !5851)
!5854 = !DILocation(line: 2927, column: 17, scope: !5830)
!5855 = !DILocation(line: 2928, column: 17, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2927, column: 62)
!5857 = !DILocation(line: 2929, column: 17, scope: !5856)
!5858 = !DILocation(line: 2932, column: 5, scope: !5818)
!5859 = !DILocation(line: 2931, column: 9, scope: !5826)
!5860 = !DILocation(line: 2933, column: 5, scope: !5818)
!5861 = !DILocation(line: 2934, column: 5, scope: !5818)
!5862 = !DILocation(line: 0, scope: !5818)
!5863 = !DILocation(line: 2935, column: 1, scope: !5818)
!5864 = !DILocation(line: 2942, column: 49, scope: !736)
!5865 = !DILocation(line: 2949, column: 9, scope: !736)
!5866 = !DILocation(line: 2950, column: 10, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2950, column: 5)
!5868 = !DILocation(line: 2950, column: 46, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 2950, column: 5)
!5870 = !DILocation(line: 2950, column: 58, scope: !5869)
!5871 = !{!5872, !892, i64 8}
!5872 = !{!"", !1051, i64 0, !892, i64 8}
!5873 = !DILocation(line: 2950, column: 61, scope: !5869)
!5874 = !DILocation(line: 2950, column: 5, scope: !5867)
!5875 = !DILocation(line: 2951, column: 22, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2951, column: 13)
!5877 = !{!5872, !1051, i64 0}
!5878 = !DILocation(line: 2951, column: 25, scope: !5876)
!5879 = !DILocation(line: 2951, column: 13, scope: !5869)
!5880 = !DILocation(line: 2950, column: 5, scope: !5869)
!5881 = !DILocation(line: 2950, column: 19, scope: !5869)
!5882 = !DILocation(line: 2954, column: 17, scope: !736)
!5883 = !DILocation(line: 2955, column: 40, scope: !736)
!5884 = !DILocation(line: 2955, column: 24, scope: !736)
!5885 = !DILocation(line: 2955, column: 19, scope: !736)
!5886 = !DILocation(line: 2958, column: 5, scope: !736)
!5887 = !DILocation(line: 2958, column: 18, scope: !736)
!5888 = !DILocation(line: 2956, column: 16, scope: !736)
!5889 = !DILocation(line: 2958, column: 32, scope: !736)
!5890 = !DILocation(line: 2959, column: 38, scope: !757)
!5891 = !DILocation(line: 2959, column: 29, scope: !757)
!5892 = !DILocation(line: 2960, column: 9, scope: !757)
!5893 = !DILocation(line: 2963, column: 28, scope: !757)
!5894 = !DILocation(line: 2960, column: 18, scope: !757)
!5895 = !DILocation(line: 2963, column: 9, scope: !757)
!5896 = !DILocation(line: 2964, column: 9, scope: !757)
!5897 = !DILocation(line: 2964, column: 21, scope: !757)
!5898 = !DILocation(line: 2961, column: 19, scope: !757)
!5899 = !DILocation(line: 2965, column: 39, scope: !766)
!5900 = !DILocation(line: 2965, column: 25, scope: !766)
!5901 = !DILocation(line: 2968, column: 26, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !766, file: !3, line: 2968, column: 17)
!5903 = !{!5904, !1051, i64 0}
!5904 = !{!"RedisModuleType", !1051, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !892, i64 56, !892, i64 64, !892, i64 72, !895, i64 80, !893, i64 84}
!5905 = !DILocation(line: 2968, column: 35, scope: !5902)
!5906 = !DILocation(line: 2968, column: 17, scope: !766)
!5907 = !DILocation(line: 0, scope: !757)
!5908 = distinct !{!5908, !5896, !5909}
!5909 = !DILocation(line: 2972, column: 9, scope: !757)
!5910 = !DILocation(line: 0, scope: !736)
!5911 = !DILocation(line: 2973, column: 5, scope: !736)
!5912 = !DILocation(line: 2958, column: 46, scope: !736)
!5913 = !DILocation(line: 2958, column: 40, scope: !736)
!5914 = distinct !{!5914, !5886, !5911}
!5915 = !DILocation(line: 0, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 2968, column: 48)
!5917 = !DILocation(line: 2974, column: 5, scope: !736)
!5918 = !DILocation(line: 2977, column: 9, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !736, file: !3, line: 2977, column: 9)
!5920 = !DILocation(line: 2977, column: 12, scope: !5919)
!5921 = !DILocation(line: 2978, column: 18, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2977, column: 45)
!5923 = !DILocation(line: 2978, column: 21, scope: !5922)
!5924 = !DILocation(line: 2979, column: 18, scope: !5922)
!5925 = !DILocation(line: 2979, column: 21, scope: !5922)
!5926 = !DILocation(line: 2980, column: 5, scope: !5922)
!5927 = !DILocation(line: 2982, column: 1, scope: !736)
!5928 = distinct !DISubprogram(name: "moduleTypeNameByID", scope: !3, file: !3, line: 2988, type: !5929, isLocal: false, isDefinition: true, scopeLine: 2988, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5931)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{null, !9, !32}
!5931 = !{!5932, !5933, !5934, !5935, !5936}
!5932 = !DILocalVariable(name: "name", arg: 1, scope: !5928, file: !3, line: 2988, type: !9)
!5933 = !DILocalVariable(name: "moduleid", arg: 2, scope: !5928, file: !3, line: 2988, type: !32)
!5934 = !DILocalVariable(name: "cset", scope: !5928, file: !3, line: 2989, type: !523)
!5935 = !DILocalVariable(name: "p", scope: !5928, file: !3, line: 2992, type: !9)
!5936 = !DILocalVariable(name: "j", scope: !5937, file: !3, line: 2994, type: !17)
!5937 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 2994, column: 5)
!5938 = !DILocation(line: 2988, column: 31, scope: !5928)
!5939 = !DILocation(line: 2988, column: 46, scope: !5928)
!5940 = !DILocation(line: 2989, column: 24, scope: !5928)
!5941 = !DILocation(line: 2989, column: 17, scope: !5928)
!5942 = !DILocation(line: 2991, column: 5, scope: !5928)
!5943 = !DILocation(line: 2991, column: 13, scope: !5928)
!5944 = !DILocation(line: 2992, column: 19, scope: !5928)
!5945 = !DILocation(line: 2992, column: 11, scope: !5928)
!5946 = !DILocation(line: 2993, column: 14, scope: !5928)
!5947 = !DILocation(line: 2994, column: 14, scope: !5937)
!5948 = !DILocation(line: 2994, column: 10, scope: !5937)
!5949 = !DILocation(line: 2994, column: 5, scope: !5937)
!5950 = !DILocation(line: 2995, column: 30, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 2994, column: 33)
!5952 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 2994, column: 5)
!5953 = !DILocation(line: 2995, column: 16, scope: !5951)
!5954 = !DILocation(line: 2995, column: 11, scope: !5951)
!5955 = !DILocation(line: 2995, column: 14, scope: !5951)
!5956 = !DILocation(line: 2996, column: 18, scope: !5951)
!5957 = !DILocation(line: 2994, column: 5, scope: !5952)
!5958 = !DILocation(line: 2998, column: 1, scope: !5928)
!5959 = !DILocation(line: 3064, column: 47, scope: !264)
!5960 = !DILocation(line: 3064, column: 64, scope: !264)
!5961 = !DILocation(line: 3064, column: 74, scope: !264)
!5962 = !DILocation(line: 3064, column: 88, scope: !264)
!5963 = !DILocation(line: 3065, column: 19, scope: !264)
!5964 = !DILocation(line: 3065, column: 14, scope: !264)
!5965 = !DILocation(line: 3066, column: 12, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3066, column: 9)
!5967 = !DILocation(line: 3066, column: 9, scope: !264)
!5968 = !DILocation(line: 3067, column: 9, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3067, column: 9)
!5970 = !DILocation(line: 3067, column: 44, scope: !5969)
!5971 = !DILocation(line: 3067, column: 9, scope: !264)
!5972 = !DILocation(line: 3069, column: 33, scope: !264)
!5973 = !DILocation(line: 3069, column: 32, scope: !264)
!5974 = !DILocation(line: 3069, column: 10, scope: !264)
!5975 = !DILocation(line: 3070, column: 29, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3070, column: 9)
!5977 = !DILocation(line: 3070, column: 9, scope: !264)
!5978 = !DILocation(line: 3087, column: 22, scope: !264)
!5979 = !DILocation(line: 3087, column: 17, scope: !264)
!5980 = !DILocation(line: 3088, column: 9, scope: !264)
!5981 = !DILocation(line: 3088, column: 12, scope: !264)
!5982 = !DILocation(line: 3089, column: 23, scope: !264)
!5983 = !DILocation(line: 3089, column: 9, scope: !264)
!5984 = !DILocation(line: 3089, column: 16, scope: !264)
!5985 = !{!5904, !892, i64 8}
!5986 = !DILocation(line: 3090, column: 25, scope: !264)
!5987 = !DILocation(line: 3090, column: 9, scope: !264)
!5988 = !DILocation(line: 3090, column: 18, scope: !264)
!5989 = !DILocation(line: 3092, column: 28, scope: !264)
!5990 = !DILocation(line: 3092, column: 9, scope: !264)
!5991 = !DILocation(line: 3092, column: 21, scope: !264)
!5992 = !DILocation(line: 3094, column: 23, scope: !264)
!5993 = !DILocation(line: 3094, column: 9, scope: !264)
!5994 = !DILocation(line: 3094, column: 16, scope: !264)
!5995 = !DILocation(line: 3096, column: 14, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !264, file: !3, line: 3096, column: 9)
!5997 = !{!5998, !1051, i64 0}
!5998 = !{!"typemethods", !1051, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !5999, i64 56}
!5999 = !{!"", !892, i64 0, !892, i64 8, !895, i64 16}
!6000 = !DILocation(line: 3096, column: 22, scope: !5996)
!6001 = !DILocation(line: 3096, column: 9, scope: !264)
!6002 = !DILocation(line: 3085, column: 8, scope: !264)
!6003 = !DILocation(line: 3097, column: 29, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 3096, column: 28)
!6005 = !DILocation(line: 3097, column: 13, scope: !6004)
!6006 = !DILocation(line: 3097, column: 32, scope: !6004)
!6007 = !DILocation(line: 3097, column: 22, scope: !6004)
!6008 = !DILocation(line: 3099, column: 41, scope: !6004)
!6009 = !{!5998, !895, i64 72}
!6010 = !DILocation(line: 3099, column: 13, scope: !6004)
!6011 = !DILocation(line: 3099, column: 31, scope: !6004)
!6012 = !{!5904, !895, i64 80}
!6013 = !DILocation(line: 3100, column: 5, scope: !6004)
!6014 = !DILocation(line: 3101, column: 16, scope: !264)
!6015 = !DILocation(line: 3101, column: 5, scope: !264)
!6016 = !DILocation(line: 3102, column: 26, scope: !264)
!6017 = !DILocation(line: 3102, column: 34, scope: !264)
!6018 = !DILocation(line: 3102, column: 5, scope: !264)
!6019 = !DILocation(line: 0, scope: !264)
!6020 = !DILocation(line: 0, scope: !5976)
!6021 = !DILocation(line: 3104, column: 1, scope: !264)
!6022 = distinct !DISubprogram(name: "RM_ModuleTypeSetValue", scope: !3, file: !3, line: 3110, type: !6023, isLocal: false, isDefinition: true, scopeLine: 3110, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6025)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!17, !991, !267, !6}
!6025 = !{!6026, !6027, !6028, !6029}
!6026 = !DILocalVariable(name: "key", arg: 1, scope: !6022, file: !3, line: 3110, type: !991)
!6027 = !DILocalVariable(name: "mt", arg: 2, scope: !6022, file: !3, line: 3110, type: !267)
!6028 = !DILocalVariable(name: "value", arg: 3, scope: !6022, file: !3, line: 3110, type: !6)
!6029 = !DILocalVariable(name: "o", scope: !6022, file: !3, line: 3113, type: !143)
!6030 = !DILocation(line: 3110, column: 43, scope: !6022)
!6031 = !DILocation(line: 3110, column: 60, scope: !6022)
!6032 = !DILocation(line: 3110, column: 70, scope: !6022)
!6033 = !DILocation(line: 3111, column: 16, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 3111, column: 9)
!6035 = !DILocation(line: 3111, column: 21, scope: !6034)
!6036 = !DILocation(line: 3111, column: 42, scope: !6034)
!6037 = !DILocation(line: 3111, column: 50, scope: !6034)
!6038 = !DILocation(line: 3111, column: 45, scope: !6034)
!6039 = !DILocation(line: 3111, column: 9, scope: !6022)
!6040 = !DILocation(line: 1609, column: 34, scope: !3310, inlinedAt: !6041)
!6041 = distinct !DILocation(line: 3112, column: 5, scope: !6022)
!6042 = !DILocation(line: 1610, column: 9, scope: !3310, inlinedAt: !6041)
!6043 = !DILocation(line: 1611, column: 14, scope: !3319, inlinedAt: !6041)
!6044 = !DILocation(line: 1611, column: 9, scope: !3319, inlinedAt: !6041)
!6045 = !DILocation(line: 1611, column: 9, scope: !3310, inlinedAt: !6041)
!6046 = !DILocation(line: 0, scope: !6022)
!6047 = !DILocation(line: 3114, column: 25, scope: !6022)
!6048 = !DILocation(line: 1612, column: 23, scope: !3323, inlinedAt: !6041)
!6049 = !DILocation(line: 1612, column: 31, scope: !3323, inlinedAt: !6041)
!6050 = !DILocation(line: 1612, column: 9, scope: !3323, inlinedAt: !6041)
!6051 = !DILocation(line: 1613, column: 20, scope: !3323, inlinedAt: !6041)
!6052 = !DILocation(line: 1614, column: 5, scope: !3323, inlinedAt: !6041)
!6053 = !DILocation(line: 1615, column: 5, scope: !3310, inlinedAt: !6041)
!6054 = !DILocation(line: 1616, column: 1, scope: !3310, inlinedAt: !6041)
!6055 = !DILocation(line: 3113, column: 15, scope: !6022)
!6056 = !DILocation(line: 3113, column: 11, scope: !6022)
!6057 = !DILocation(line: 3114, column: 17, scope: !6022)
!6058 = !DILocation(line: 3114, column: 5, scope: !6022)
!6059 = !DILocation(line: 3115, column: 5, scope: !6022)
!6060 = !DILocation(line: 3116, column: 16, scope: !6022)
!6061 = !DILocation(line: 3118, column: 1, scope: !6022)
!6062 = distinct !DISubprogram(name: "RM_ModuleTypeGetType", scope: !3, file: !3, line: 3125, type: !6063, isLocal: false, isDefinition: true, scopeLine: 3125, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6065)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!267, !991}
!6065 = !{!6066, !6067}
!6066 = !DILocalVariable(name: "key", arg: 1, scope: !6062, file: !3, line: 3125, type: !991)
!6067 = !DILocalVariable(name: "mv", scope: !6062, file: !3, line: 3129, type: !6068)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6069, size: 64)
!6069 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleValue", file: !13, line: 550, baseType: !6070)
!6070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleValue", file: !13, line: 547, size: 128, elements: !6071)
!6071 = !{!6072, !6073}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6070, file: !13, line: 548, baseType: !267, size: 64)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6070, file: !13, line: 549, baseType: !6, size: 64, offset: 64)
!6074 = !DILocation(line: 3125, column: 50, scope: !6062)
!6075 = !DILocation(line: 3126, column: 13, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 3126, column: 9)
!6077 = !DILocation(line: 3126, column: 21, scope: !6076)
!6078 = !DILocation(line: 3127, column: 14, scope: !6076)
!6079 = !DILocation(line: 3127, column: 20, scope: !6076)
!6080 = !DILocation(line: 3127, column: 28, scope: !6076)
!6081 = !DILocation(line: 1573, column: 32, scope: !3266, inlinedAt: !6082)
!6082 = distinct !DILocation(line: 3128, column: 9, scope: !6076)
!6083 = !DILocation(line: 1574, column: 21, scope: !3271, inlinedAt: !6082)
!6084 = !DILocation(line: 1574, column: 9, scope: !3266, inlinedAt: !6082)
!6085 = !DILocation(line: 1577, column: 24, scope: !3266, inlinedAt: !6082)
!6086 = !DILocation(line: 1577, column: 5, scope: !3266, inlinedAt: !6082)
!6087 = !DILocation(line: 0, scope: !6076)
!6088 = !DILocation(line: 1586, column: 1, scope: !3266, inlinedAt: !6082)
!6089 = !DILocation(line: 3126, column: 9, scope: !6062)
!6090 = !DILocation(line: 3129, column: 35, scope: !6062)
!6091 = !DILocation(line: 3129, column: 18, scope: !6062)
!6092 = !DILocation(line: 3130, column: 16, scope: !6062)
!6093 = !{!6094, !892, i64 0}
!6094 = !{!"moduleValue", !892, i64 0, !892, i64 8}
!6095 = !DILocation(line: 0, scope: !6062)
!6096 = !DILocation(line: 3131, column: 1, scope: !6062)
!6097 = distinct !DISubprogram(name: "RM_ModuleTypeGetValue", scope: !3, file: !3, line: 3139, type: !6098, isLocal: false, isDefinition: true, scopeLine: 3139, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!6, !991}
!6100 = !{!6101, !6102}
!6101 = !DILocalVariable(name: "key", arg: 1, scope: !6097, file: !3, line: 3139, type: !991)
!6102 = !DILocalVariable(name: "mv", scope: !6097, file: !3, line: 3143, type: !6068)
!6103 = !DILocation(line: 3139, column: 45, scope: !6097)
!6104 = !DILocation(line: 3140, column: 13, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 3140, column: 9)
!6106 = !DILocation(line: 3140, column: 21, scope: !6105)
!6107 = !DILocation(line: 3141, column: 14, scope: !6105)
!6108 = !DILocation(line: 3141, column: 20, scope: !6105)
!6109 = !DILocation(line: 3141, column: 28, scope: !6105)
!6110 = !DILocation(line: 1573, column: 32, scope: !3266, inlinedAt: !6111)
!6111 = distinct !DILocation(line: 3142, column: 9, scope: !6105)
!6112 = !DILocation(line: 1574, column: 21, scope: !3271, inlinedAt: !6111)
!6113 = !DILocation(line: 1574, column: 9, scope: !3266, inlinedAt: !6111)
!6114 = !DILocation(line: 1577, column: 24, scope: !3266, inlinedAt: !6111)
!6115 = !DILocation(line: 1577, column: 5, scope: !3266, inlinedAt: !6111)
!6116 = !DILocation(line: 0, scope: !6105)
!6117 = !DILocation(line: 1586, column: 1, scope: !3266, inlinedAt: !6111)
!6118 = !DILocation(line: 3140, column: 9, scope: !6097)
!6119 = !DILocation(line: 3143, column: 35, scope: !6097)
!6120 = !DILocation(line: 3143, column: 18, scope: !6097)
!6121 = !DILocation(line: 3144, column: 16, scope: !6097)
!6122 = !{!6094, !892, i64 8}
!6123 = !DILocation(line: 0, scope: !6097)
!6124 = !DILocation(line: 3145, column: 1, scope: !6097)
!6125 = distinct !DISubprogram(name: "moduleRDBLoadError", scope: !3, file: !3, line: 3153, type: !6126, isLocal: false, isDefinition: true, scopeLine: 3153, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6130)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{null, !6128}
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 64)
!6129 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleIO", file: !13, line: 564, baseType: !291)
!6130 = !{!6131}
!6131 = !DILocalVariable(name: "io", arg: 1, scope: !6125, file: !3, line: 3153, type: !6128)
!6132 = !DILocation(line: 3153, column: 40, scope: !6125)
!6133 = !DILocation(line: 3158, column: 13, scope: !6125)
!6134 = !{!6135, !892, i64 16}
!6135 = !{!"RedisModuleIO", !1051, i64 0, !892, i64 8, !892, i64 16, !895, i64 24, !895, i64 28, !892, i64 32, !892, i64 40}
!6136 = !DILocation(line: 3158, column: 19, scope: !6125)
!6137 = !DILocation(line: 3158, column: 27, scope: !6125)
!6138 = !DILocation(line: 3159, column: 9, scope: !6125)
!6139 = !DILocation(line: 3160, column: 33, scope: !6125)
!6140 = !{!6135, !1051, i64 0}
!6141 = !DILocation(line: 3154, column: 5, scope: !6125)
!6142 = !DILocation(line: 3161, column: 5, scope: !6125)
!6143 = distinct !DISubprogram(name: "RM_SaveUnsigned", scope: !3, file: !3, line: 3167, type: !6144, isLocal: false, isDefinition: true, scopeLine: 3167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6146)
!6144 = !DISubroutineType(types: !6145)
!6145 = !{null, !6128, !32}
!6146 = !{!6147, !6148, !6149}
!6147 = !DILocalVariable(name: "io", arg: 1, scope: !6143, file: !3, line: 3167, type: !6128)
!6148 = !DILocalVariable(name: "value", arg: 2, scope: !6143, file: !3, line: 3167, type: !32)
!6149 = !DILocalVariable(name: "retval", scope: !6143, file: !3, line: 3170, type: !17)
!6150 = !DILocation(line: 3167, column: 37, scope: !6143)
!6151 = !DILocation(line: 3167, column: 50, scope: !6143)
!6152 = !DILocation(line: 3168, column: 13, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 3168, column: 9)
!6154 = !{!6135, !895, i64 24}
!6155 = !DILocation(line: 3168, column: 9, scope: !6153)
!6156 = !DILocation(line: 3168, column: 9, scope: !6143)
!6157 = !DILocation(line: 3170, column: 33, scope: !6143)
!6158 = !{!6135, !892, i64 8}
!6159 = !DILocation(line: 3170, column: 18, scope: !6143)
!6160 = !DILocation(line: 3170, column: 9, scope: !6143)
!6161 = !DILocation(line: 3171, column: 16, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 3171, column: 9)
!6163 = !DILocation(line: 3171, column: 9, scope: !6143)
!6164 = !DILocation(line: 3172, column: 18, scope: !6143)
!6165 = !DILocation(line: 3172, column: 9, scope: !6143)
!6166 = !DILocation(line: 3172, column: 15, scope: !6143)
!6167 = !DILocation(line: 3174, column: 29, scope: !6143)
!6168 = !DILocation(line: 3174, column: 14, scope: !6143)
!6169 = !DILocation(line: 3175, column: 16, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 3175, column: 9)
!6171 = !DILocation(line: 3175, column: 9, scope: !6143)
!6172 = !DILocation(line: 3176, column: 18, scope: !6143)
!6173 = !DILocation(line: 3176, column: 15, scope: !6143)
!6174 = !DILocation(line: 3177, column: 5, scope: !6143)
!6175 = !DILocation(line: 3180, column: 15, scope: !6143)
!6176 = !DILocation(line: 3181, column: 1, scope: !6143)
!6177 = !DILocation(line: 0, scope: !6143)
!6178 = distinct !DISubprogram(name: "RM_LoadUnsigned", scope: !3, file: !3, line: 3186, type: !6179, isLocal: false, isDefinition: true, scopeLine: 3186, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6181)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!32, !6128}
!6181 = !{!6182, !6183, !6186, !6187}
!6182 = !DILocalVariable(name: "io", arg: 1, scope: !6178, file: !3, line: 3186, type: !6128)
!6183 = !DILocalVariable(name: "opcode", scope: !6184, file: !3, line: 3188, type: !32)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 3187, column: 23)
!6185 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 3187, column: 9)
!6186 = !DILocalVariable(name: "value", scope: !6178, file: !3, line: 3191, type: !32)
!6187 = !DILocalVariable(name: "retval", scope: !6178, file: !3, line: 3192, type: !17)
!6188 = !DILocation(line: 3186, column: 41, scope: !6178)
!6189 = !DILocation(line: 3187, column: 13, scope: !6185)
!6190 = !{!6135, !895, i64 28}
!6191 = !DILocation(line: 3187, column: 17, scope: !6185)
!6192 = !DILocation(line: 3187, column: 9, scope: !6178)
!6193 = !DILocation(line: 0, scope: !6178)
!6194 = !DILocation(line: 3188, column: 42, scope: !6184)
!6195 = !DILocation(line: 3188, column: 27, scope: !6184)
!6196 = !DILocation(line: 3188, column: 18, scope: !6184)
!6197 = !DILocation(line: 3189, column: 20, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 3189, column: 13)
!6199 = !DILocation(line: 3189, column: 13, scope: !6184)
!6200 = !DILocation(line: 0, scope: !6198)
!6201 = !DILocation(line: 3192, column: 38, scope: !6178)
!6202 = !DILocation(line: 3191, column: 14, scope: !6178)
!6203 = !DILocation(line: 3192, column: 18, scope: !6178)
!6204 = !DILocation(line: 3192, column: 9, scope: !6178)
!6205 = !DILocation(line: 3193, column: 16, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 3193, column: 9)
!6207 = !DILocation(line: 3193, column: 9, scope: !6178)
!6208 = !DILocation(line: 3197, column: 5, scope: !6178)
!6209 = !DILocation(line: 3194, column: 12, scope: !6178)
!6210 = !DILocation(line: 3194, column: 5, scope: !6178)
!6211 = !DILocation(line: 3199, column: 1, scope: !6178)
!6212 = distinct !DISubprogram(name: "RM_SaveSigned", scope: !3, file: !3, line: 3202, type: !6213, isLocal: false, isDefinition: true, scopeLine: 3202, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6215)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{null, !6128, !92}
!6215 = !{!6216, !6217, !6218}
!6216 = !DILocalVariable(name: "io", arg: 1, scope: !6212, file: !3, line: 3202, type: !6128)
!6217 = !DILocalVariable(name: "value", arg: 2, scope: !6212, file: !3, line: 3202, type: !92)
!6218 = !DILocalVariable(name: "conv", scope: !6212, file: !3, line: 3203, type: !6219)
!6219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6212, file: !3, line: 3203, size: 64, elements: !6220)
!6220 = !{!6221, !6222}
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6219, file: !3, line: 3203, baseType: !32, size: 64)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6219, file: !3, line: 3203, baseType: !92, size: 64)
!6223 = !DILocation(line: 3202, column: 35, scope: !6212)
!6224 = !DILocation(line: 3202, column: 47, scope: !6212)
!6225 = !DILocation(line: 3203, column: 36, scope: !6212)
!6226 = !DILocation(line: 3167, column: 37, scope: !6143, inlinedAt: !6227)
!6227 = distinct !DILocation(line: 3205, column: 5, scope: !6212)
!6228 = !DILocation(line: 3167, column: 50, scope: !6143, inlinedAt: !6227)
!6229 = !DILocation(line: 3168, column: 13, scope: !6153, inlinedAt: !6227)
!6230 = !DILocation(line: 3168, column: 9, scope: !6153, inlinedAt: !6227)
!6231 = !DILocation(line: 3168, column: 9, scope: !6143, inlinedAt: !6227)
!6232 = !DILocation(line: 3170, column: 33, scope: !6143, inlinedAt: !6227)
!6233 = !DILocation(line: 3170, column: 18, scope: !6143, inlinedAt: !6227)
!6234 = !DILocation(line: 3170, column: 9, scope: !6143, inlinedAt: !6227)
!6235 = !DILocation(line: 3171, column: 16, scope: !6162, inlinedAt: !6227)
!6236 = !DILocation(line: 3171, column: 9, scope: !6143, inlinedAt: !6227)
!6237 = !DILocation(line: 3172, column: 18, scope: !6143, inlinedAt: !6227)
!6238 = !DILocation(line: 3172, column: 9, scope: !6143, inlinedAt: !6227)
!6239 = !DILocation(line: 3172, column: 15, scope: !6143, inlinedAt: !6227)
!6240 = !DILocation(line: 3174, column: 29, scope: !6143, inlinedAt: !6227)
!6241 = !DILocation(line: 3174, column: 14, scope: !6143, inlinedAt: !6227)
!6242 = !DILocation(line: 3175, column: 16, scope: !6170, inlinedAt: !6227)
!6243 = !DILocation(line: 3175, column: 9, scope: !6143, inlinedAt: !6227)
!6244 = !DILocation(line: 3176, column: 18, scope: !6143, inlinedAt: !6227)
!6245 = !DILocation(line: 3176, column: 15, scope: !6143, inlinedAt: !6227)
!6246 = !DILocation(line: 3177, column: 5, scope: !6143, inlinedAt: !6227)
!6247 = !DILocation(line: 3180, column: 15, scope: !6143, inlinedAt: !6227)
!6248 = !DILocation(line: 3181, column: 1, scope: !6143, inlinedAt: !6227)
!6249 = !DILocation(line: 0, scope: !6212)
!6250 = !DILocation(line: 3206, column: 1, scope: !6212)
!6251 = distinct !DISubprogram(name: "RM_LoadSigned", scope: !3, file: !3, line: 3209, type: !6252, isLocal: false, isDefinition: true, scopeLine: 3209, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6254)
!6252 = !DISubroutineType(types: !6253)
!6253 = !{!92, !6128}
!6254 = !{!6255, !6256}
!6255 = !DILocalVariable(name: "io", arg: 1, scope: !6251, file: !3, line: 3209, type: !6128)
!6256 = !DILocalVariable(name: "conv", scope: !6251, file: !3, line: 3210, type: !6257)
!6257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6251, file: !3, line: 3210, size: 64, elements: !6258)
!6258 = !{!6259, !6260}
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6257, file: !3, line: 3210, baseType: !32, size: 64)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !6257, file: !3, line: 3210, baseType: !92, size: 64)
!6261 = !DILocation(line: 3209, column: 38, scope: !6251)
!6262 = !DILocation(line: 3186, column: 41, scope: !6178, inlinedAt: !6263)
!6263 = distinct !DILocation(line: 3211, column: 14, scope: !6251)
!6264 = !DILocation(line: 3187, column: 13, scope: !6185, inlinedAt: !6263)
!6265 = !DILocation(line: 3187, column: 17, scope: !6185, inlinedAt: !6263)
!6266 = !DILocation(line: 3187, column: 9, scope: !6178, inlinedAt: !6263)
!6267 = !DILocation(line: 0, scope: !6178, inlinedAt: !6263)
!6268 = !DILocation(line: 3188, column: 42, scope: !6184, inlinedAt: !6263)
!6269 = !DILocation(line: 3188, column: 27, scope: !6184, inlinedAt: !6263)
!6270 = !DILocation(line: 3188, column: 18, scope: !6184, inlinedAt: !6263)
!6271 = !DILocation(line: 3189, column: 20, scope: !6198, inlinedAt: !6263)
!6272 = !DILocation(line: 3189, column: 13, scope: !6184, inlinedAt: !6263)
!6273 = !DILocation(line: 0, scope: !6198, inlinedAt: !6263)
!6274 = !DILocation(line: 3192, column: 38, scope: !6178, inlinedAt: !6263)
!6275 = !DILocation(line: 3191, column: 14, scope: !6178, inlinedAt: !6263)
!6276 = !DILocation(line: 3192, column: 18, scope: !6178, inlinedAt: !6263)
!6277 = !DILocation(line: 3192, column: 9, scope: !6178, inlinedAt: !6263)
!6278 = !DILocation(line: 3193, column: 16, scope: !6206, inlinedAt: !6263)
!6279 = !DILocation(line: 3193, column: 9, scope: !6178, inlinedAt: !6263)
!6280 = !DILocation(line: 3197, column: 5, scope: !6178, inlinedAt: !6263)
!6281 = !DILocation(line: 3194, column: 12, scope: !6178, inlinedAt: !6263)
!6282 = !DILocation(line: 3194, column: 5, scope: !6178, inlinedAt: !6263)
!6283 = !DILocation(line: 3199, column: 1, scope: !6178, inlinedAt: !6263)
!6284 = !DILocation(line: 3210, column: 36, scope: !6251)
!6285 = !DILocation(line: 3212, column: 5, scope: !6251)
!6286 = distinct !DISubprogram(name: "RM_SaveString", scope: !3, file: !3, line: 3221, type: !6287, isLocal: false, isDefinition: true, scopeLine: 3221, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6289)
!6287 = !DISubroutineType(types: !6288)
!6288 = !{null, !6128, !143}
!6289 = !{!6290, !6291, !6292}
!6290 = !DILocalVariable(name: "io", arg: 1, scope: !6286, file: !3, line: 3221, type: !6128)
!6291 = !DILocalVariable(name: "s", arg: 2, scope: !6286, file: !3, line: 3221, type: !143)
!6292 = !DILocalVariable(name: "retval", scope: !6286, file: !3, line: 3224, type: !6293)
!6293 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !187, line: 200, baseType: !364)
!6294 = !DILocation(line: 3221, column: 35, scope: !6286)
!6295 = !DILocation(line: 3221, column: 58, scope: !6286)
!6296 = !DILocation(line: 3222, column: 13, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 3222, column: 9)
!6298 = !DILocation(line: 3222, column: 9, scope: !6297)
!6299 = !DILocation(line: 3222, column: 9, scope: !6286)
!6300 = !DILocation(line: 3224, column: 37, scope: !6286)
!6301 = !DILocation(line: 3224, column: 22, scope: !6286)
!6302 = !DILocation(line: 3225, column: 16, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 3225, column: 9)
!6304 = !DILocation(line: 3225, column: 9, scope: !6286)
!6305 = !DILocation(line: 3224, column: 13, scope: !6286)
!6306 = !DILocation(line: 3226, column: 9, scope: !6286)
!6307 = !DILocation(line: 3226, column: 15, scope: !6286)
!6308 = !DILocation(line: 3228, column: 38, scope: !6286)
!6309 = !DILocation(line: 3228, column: 14, scope: !6286)
!6310 = !DILocation(line: 3229, column: 16, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 3229, column: 9)
!6312 = !DILocation(line: 3229, column: 9, scope: !6286)
!6313 = !DILocation(line: 3230, column: 15, scope: !6286)
!6314 = !DILocation(line: 3231, column: 5, scope: !6286)
!6315 = !DILocation(line: 3234, column: 15, scope: !6286)
!6316 = !DILocation(line: 3235, column: 1, scope: !6286)
!6317 = !DILocation(line: 0, scope: !6286)
!6318 = distinct !DISubprogram(name: "RM_SaveStringBuffer", scope: !3, file: !3, line: 3239, type: !6319, isLocal: false, isDefinition: true, scopeLine: 3239, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{null, !6128, !523, !157}
!6321 = !{!6322, !6323, !6324, !6325}
!6322 = !DILocalVariable(name: "io", arg: 1, scope: !6318, file: !3, line: 3239, type: !6128)
!6323 = !DILocalVariable(name: "str", arg: 2, scope: !6318, file: !3, line: 3239, type: !523)
!6324 = !DILocalVariable(name: "len", arg: 3, scope: !6318, file: !3, line: 3239, type: !157)
!6325 = !DILocalVariable(name: "retval", scope: !6318, file: !3, line: 3242, type: !6293)
!6326 = !DILocation(line: 3239, column: 41, scope: !6318)
!6327 = !DILocation(line: 3239, column: 57, scope: !6318)
!6328 = !DILocation(line: 3239, column: 69, scope: !6318)
!6329 = !DILocation(line: 3240, column: 13, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3240, column: 9)
!6331 = !DILocation(line: 3240, column: 9, scope: !6330)
!6332 = !DILocation(line: 3240, column: 9, scope: !6318)
!6333 = !DILocation(line: 3242, column: 37, scope: !6318)
!6334 = !DILocation(line: 3242, column: 22, scope: !6318)
!6335 = !DILocation(line: 3243, column: 16, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3243, column: 9)
!6337 = !DILocation(line: 3243, column: 9, scope: !6318)
!6338 = !DILocation(line: 3242, column: 13, scope: !6318)
!6339 = !DILocation(line: 3244, column: 9, scope: !6318)
!6340 = !DILocation(line: 3244, column: 15, scope: !6318)
!6341 = !DILocation(line: 3246, column: 35, scope: !6318)
!6342 = !DILocation(line: 3246, column: 14, scope: !6318)
!6343 = !DILocation(line: 3247, column: 16, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 3247, column: 9)
!6345 = !DILocation(line: 3247, column: 9, scope: !6318)
!6346 = !DILocation(line: 3248, column: 15, scope: !6318)
!6347 = !DILocation(line: 3249, column: 5, scope: !6318)
!6348 = !DILocation(line: 3252, column: 15, scope: !6318)
!6349 = !DILocation(line: 3253, column: 1, scope: !6318)
!6350 = !DILocation(line: 0, scope: !6318)
!6351 = distinct !DISubprogram(name: "moduleLoadString", scope: !3, file: !3, line: 3256, type: !6352, isLocal: false, isDefinition: true, scopeLine: 3256, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6354)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{!6, !6128, !17, !2145}
!6354 = !{!6355, !6356, !6357, !6358, !6361}
!6355 = !DILocalVariable(name: "io", arg: 1, scope: !6351, file: !3, line: 3256, type: !6128)
!6356 = !DILocalVariable(name: "plain", arg: 2, scope: !6351, file: !3, line: 3256, type: !17)
!6357 = !DILocalVariable(name: "lenptr", arg: 3, scope: !6351, file: !3, line: 3256, type: !2145)
!6358 = !DILocalVariable(name: "opcode", scope: !6359, file: !3, line: 3258, type: !32)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 3257, column: 23)
!6360 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 3257, column: 9)
!6361 = !DILocalVariable(name: "s", scope: !6351, file: !3, line: 3261, type: !6)
!6362 = !DILocation(line: 3256, column: 39, scope: !6351)
!6363 = !DILocation(line: 3256, column: 47, scope: !6351)
!6364 = !DILocation(line: 3256, column: 62, scope: !6351)
!6365 = !DILocation(line: 3257, column: 13, scope: !6360)
!6366 = !DILocation(line: 3257, column: 17, scope: !6360)
!6367 = !DILocation(line: 3257, column: 9, scope: !6351)
!6368 = !DILocation(line: 0, scope: !6351)
!6369 = !DILocation(line: 3258, column: 42, scope: !6359)
!6370 = !DILocation(line: 3258, column: 27, scope: !6359)
!6371 = !DILocation(line: 3258, column: 18, scope: !6359)
!6372 = !DILocation(line: 3259, column: 20, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 3259, column: 13)
!6374 = !DILocation(line: 3259, column: 13, scope: !6359)
!6375 = !DILocation(line: 0, scope: !6373)
!6376 = !DILocation(line: 3261, column: 46, scope: !6351)
!6377 = !DILocation(line: 3262, column: 15, scope: !6351)
!6378 = !DILocation(line: 3261, column: 15, scope: !6351)
!6379 = !DILocation(line: 3261, column: 11, scope: !6351)
!6380 = !DILocation(line: 3263, column: 11, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 3263, column: 9)
!6382 = !DILocation(line: 3263, column: 9, scope: !6351)
!6383 = !DILocation(line: 3267, column: 5, scope: !6351)
!6384 = !DILocation(line: 3264, column: 5, scope: !6351)
!6385 = !DILocation(line: 3269, column: 1, scope: !6351)
!6386 = distinct !DISubprogram(name: "RM_LoadString", scope: !3, file: !3, line: 3280, type: !6387, isLocal: false, isDefinition: true, scopeLine: 3280, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6389)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!143, !6128}
!6389 = !{!6390}
!6390 = !DILocalVariable(name: "io", arg: 1, scope: !6386, file: !3, line: 3280, type: !6128)
!6391 = !DILocation(line: 3280, column: 49, scope: !6386)
!6392 = !DILocation(line: 3256, column: 39, scope: !6351, inlinedAt: !6393)
!6393 = distinct !DILocation(line: 3281, column: 12, scope: !6386)
!6394 = !DILocation(line: 3256, column: 47, scope: !6351, inlinedAt: !6393)
!6395 = !DILocation(line: 3256, column: 62, scope: !6351, inlinedAt: !6393)
!6396 = !DILocation(line: 3257, column: 13, scope: !6360, inlinedAt: !6393)
!6397 = !DILocation(line: 3257, column: 17, scope: !6360, inlinedAt: !6393)
!6398 = !DILocation(line: 3257, column: 9, scope: !6351, inlinedAt: !6393)
!6399 = !DILocation(line: 0, scope: !6351, inlinedAt: !6393)
!6400 = !DILocation(line: 3258, column: 42, scope: !6359, inlinedAt: !6393)
!6401 = !DILocation(line: 3258, column: 27, scope: !6359, inlinedAt: !6393)
!6402 = !DILocation(line: 3258, column: 18, scope: !6359, inlinedAt: !6393)
!6403 = !DILocation(line: 3259, column: 20, scope: !6373, inlinedAt: !6393)
!6404 = !DILocation(line: 3259, column: 13, scope: !6359, inlinedAt: !6393)
!6405 = !DILocation(line: 0, scope: !6373, inlinedAt: !6393)
!6406 = !DILocation(line: 3261, column: 46, scope: !6351, inlinedAt: !6393)
!6407 = !DILocation(line: 3261, column: 15, scope: !6351, inlinedAt: !6393)
!6408 = !DILocation(line: 3261, column: 11, scope: !6351, inlinedAt: !6393)
!6409 = !DILocation(line: 3263, column: 11, scope: !6381, inlinedAt: !6393)
!6410 = !DILocation(line: 3263, column: 9, scope: !6351, inlinedAt: !6393)
!6411 = !DILocation(line: 3267, column: 5, scope: !6351, inlinedAt: !6393)
!6412 = !DILocation(line: 3264, column: 5, scope: !6351, inlinedAt: !6393)
!6413 = !DILocation(line: 3269, column: 1, scope: !6351, inlinedAt: !6393)
!6414 = !DILocation(line: 3281, column: 12, scope: !6386)
!6415 = !DILocation(line: 3281, column: 5, scope: !6386)
!6416 = distinct !DISubprogram(name: "RM_LoadStringBuffer", scope: !3, file: !3, line: 3291, type: !6417, isLocal: false, isDefinition: true, scopeLine: 3291, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6419)
!6417 = !DISubroutineType(types: !6418)
!6418 = !{!9, !6128, !2145}
!6419 = !{!6420, !6421}
!6420 = !DILocalVariable(name: "io", arg: 1, scope: !6416, file: !3, line: 3291, type: !6128)
!6421 = !DILocalVariable(name: "lenptr", arg: 2, scope: !6416, file: !3, line: 3291, type: !2145)
!6422 = !DILocation(line: 3291, column: 42, scope: !6416)
!6423 = !DILocation(line: 3291, column: 54, scope: !6416)
!6424 = !DILocation(line: 3256, column: 39, scope: !6351, inlinedAt: !6425)
!6425 = distinct !DILocation(line: 3292, column: 12, scope: !6416)
!6426 = !DILocation(line: 3256, column: 47, scope: !6351, inlinedAt: !6425)
!6427 = !DILocation(line: 3256, column: 62, scope: !6351, inlinedAt: !6425)
!6428 = !DILocation(line: 3257, column: 13, scope: !6360, inlinedAt: !6425)
!6429 = !DILocation(line: 3257, column: 17, scope: !6360, inlinedAt: !6425)
!6430 = !DILocation(line: 3257, column: 9, scope: !6351, inlinedAt: !6425)
!6431 = !DILocation(line: 0, scope: !6351, inlinedAt: !6425)
!6432 = !DILocation(line: 3258, column: 42, scope: !6359, inlinedAt: !6425)
!6433 = !DILocation(line: 3258, column: 27, scope: !6359, inlinedAt: !6425)
!6434 = !DILocation(line: 3258, column: 18, scope: !6359, inlinedAt: !6425)
!6435 = !DILocation(line: 3259, column: 20, scope: !6373, inlinedAt: !6425)
!6436 = !DILocation(line: 3259, column: 13, scope: !6359, inlinedAt: !6425)
!6437 = !DILocation(line: 0, scope: !6373, inlinedAt: !6425)
!6438 = !DILocation(line: 3261, column: 46, scope: !6351, inlinedAt: !6425)
!6439 = !DILocation(line: 3261, column: 15, scope: !6351, inlinedAt: !6425)
!6440 = !DILocation(line: 3261, column: 11, scope: !6351, inlinedAt: !6425)
!6441 = !DILocation(line: 3263, column: 11, scope: !6381, inlinedAt: !6425)
!6442 = !DILocation(line: 3263, column: 9, scope: !6351, inlinedAt: !6425)
!6443 = !DILocation(line: 3267, column: 5, scope: !6351, inlinedAt: !6425)
!6444 = !DILocation(line: 3264, column: 5, scope: !6351, inlinedAt: !6425)
!6445 = !DILocation(line: 3269, column: 1, scope: !6351, inlinedAt: !6425)
!6446 = !DILocation(line: 3292, column: 5, scope: !6416)
!6447 = distinct !DISubprogram(name: "RM_SaveDouble", scope: !3, file: !3, line: 3298, type: !6448, isLocal: false, isDefinition: true, scopeLine: 3298, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6450)
!6448 = !DISubroutineType(types: !6449)
!6449 = !{null, !6128, !96}
!6450 = !{!6451, !6452, !6453}
!6451 = !DILocalVariable(name: "io", arg: 1, scope: !6447, file: !3, line: 3298, type: !6128)
!6452 = !DILocalVariable(name: "value", arg: 2, scope: !6447, file: !3, line: 3298, type: !96)
!6453 = !DILocalVariable(name: "retval", scope: !6447, file: !3, line: 3301, type: !17)
!6454 = !DILocation(line: 3298, column: 35, scope: !6447)
!6455 = !DILocation(line: 3298, column: 46, scope: !6447)
!6456 = !DILocation(line: 3299, column: 13, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 3299, column: 9)
!6458 = !DILocation(line: 3299, column: 9, scope: !6457)
!6459 = !DILocation(line: 3299, column: 9, scope: !6447)
!6460 = !DILocation(line: 3301, column: 33, scope: !6447)
!6461 = !DILocation(line: 3301, column: 18, scope: !6447)
!6462 = !DILocation(line: 3301, column: 9, scope: !6447)
!6463 = !DILocation(line: 3302, column: 16, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 3302, column: 9)
!6465 = !DILocation(line: 3302, column: 9, scope: !6447)
!6466 = !DILocation(line: 3303, column: 18, scope: !6447)
!6467 = !DILocation(line: 3303, column: 9, scope: !6447)
!6468 = !DILocation(line: 3303, column: 15, scope: !6447)
!6469 = !DILocation(line: 3305, column: 43, scope: !6447)
!6470 = !DILocation(line: 3305, column: 14, scope: !6447)
!6471 = !DILocation(line: 3306, column: 16, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 3306, column: 9)
!6473 = !DILocation(line: 3306, column: 9, scope: !6447)
!6474 = !DILocation(line: 3307, column: 18, scope: !6447)
!6475 = !DILocation(line: 3307, column: 15, scope: !6447)
!6476 = !DILocation(line: 3308, column: 5, scope: !6447)
!6477 = !DILocation(line: 3311, column: 15, scope: !6447)
!6478 = !DILocation(line: 3312, column: 1, scope: !6447)
!6479 = !DILocation(line: 0, scope: !6447)
!6480 = distinct !DISubprogram(name: "RM_LoadDouble", scope: !3, file: !3, line: 3316, type: !6481, isLocal: false, isDefinition: true, scopeLine: 3316, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!96, !6128}
!6483 = !{!6484, !6485, !6488, !6489}
!6484 = !DILocalVariable(name: "io", arg: 1, scope: !6480, file: !3, line: 3316, type: !6128)
!6485 = !DILocalVariable(name: "opcode", scope: !6486, file: !3, line: 3318, type: !32)
!6486 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 3317, column: 23)
!6487 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 3317, column: 9)
!6488 = !DILocalVariable(name: "value", scope: !6480, file: !3, line: 3321, type: !96)
!6489 = !DILocalVariable(name: "retval", scope: !6480, file: !3, line: 3322, type: !17)
!6490 = !DILocation(line: 3316, column: 37, scope: !6480)
!6491 = !DILocation(line: 3317, column: 13, scope: !6487)
!6492 = !DILocation(line: 3317, column: 17, scope: !6487)
!6493 = !DILocation(line: 3317, column: 9, scope: !6480)
!6494 = !DILocation(line: 0, scope: !6480)
!6495 = !DILocation(line: 3318, column: 42, scope: !6486)
!6496 = !DILocation(line: 3318, column: 27, scope: !6486)
!6497 = !DILocation(line: 3318, column: 18, scope: !6486)
!6498 = !DILocation(line: 3319, column: 20, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 3319, column: 13)
!6500 = !DILocation(line: 3319, column: 13, scope: !6486)
!6501 = !DILocation(line: 0, scope: !6499)
!6502 = !DILocation(line: 3322, column: 47, scope: !6480)
!6503 = !DILocation(line: 3321, column: 12, scope: !6480)
!6504 = !DILocation(line: 3322, column: 18, scope: !6480)
!6505 = !DILocation(line: 3322, column: 9, scope: !6480)
!6506 = !DILocation(line: 3323, column: 16, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 3323, column: 9)
!6508 = !DILocation(line: 3323, column: 9, scope: !6480)
!6509 = !DILocation(line: 3327, column: 5, scope: !6480)
!6510 = !DILocation(line: 3324, column: 12, scope: !6480)
!6511 = !DILocation(line: 3324, column: 5, scope: !6480)
!6512 = !DILocation(line: 3329, column: 1, scope: !6480)
!6513 = distinct !DISubprogram(name: "RM_SaveFloat", scope: !3, file: !3, line: 3334, type: !6514, isLocal: false, isDefinition: true, scopeLine: 3334, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{null, !6128, !3040}
!6516 = !{!6517, !6518, !6519}
!6517 = !DILocalVariable(name: "io", arg: 1, scope: !6513, file: !3, line: 3334, type: !6128)
!6518 = !DILocalVariable(name: "value", arg: 2, scope: !6513, file: !3, line: 3334, type: !3040)
!6519 = !DILocalVariable(name: "retval", scope: !6513, file: !3, line: 3337, type: !17)
!6520 = !DILocation(line: 3334, column: 34, scope: !6513)
!6521 = !DILocation(line: 3334, column: 44, scope: !6513)
!6522 = !DILocation(line: 3335, column: 13, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 3335, column: 9)
!6524 = !DILocation(line: 3335, column: 9, scope: !6523)
!6525 = !DILocation(line: 3335, column: 9, scope: !6513)
!6526 = !DILocation(line: 3337, column: 33, scope: !6513)
!6527 = !DILocation(line: 3337, column: 18, scope: !6513)
!6528 = !DILocation(line: 3337, column: 9, scope: !6513)
!6529 = !DILocation(line: 3338, column: 16, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 3338, column: 9)
!6531 = !DILocation(line: 3338, column: 9, scope: !6513)
!6532 = !DILocation(line: 3339, column: 18, scope: !6513)
!6533 = !DILocation(line: 3339, column: 9, scope: !6513)
!6534 = !DILocation(line: 3339, column: 15, scope: !6513)
!6535 = !DILocation(line: 3341, column: 42, scope: !6513)
!6536 = !DILocation(line: 3341, column: 14, scope: !6513)
!6537 = !DILocation(line: 3342, column: 16, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 3342, column: 9)
!6539 = !DILocation(line: 3342, column: 9, scope: !6513)
!6540 = !DILocation(line: 3343, column: 18, scope: !6513)
!6541 = !DILocation(line: 3343, column: 15, scope: !6513)
!6542 = !DILocation(line: 3344, column: 5, scope: !6513)
!6543 = !DILocation(line: 3347, column: 15, scope: !6513)
!6544 = !DILocation(line: 3348, column: 1, scope: !6513)
!6545 = !DILocation(line: 0, scope: !6513)
!6546 = distinct !DISubprogram(name: "RM_LoadFloat", scope: !3, file: !3, line: 3352, type: !6547, isLocal: false, isDefinition: true, scopeLine: 3352, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6549)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{!3040, !6128}
!6549 = !{!6550, !6551, !6554, !6555}
!6550 = !DILocalVariable(name: "io", arg: 1, scope: !6546, file: !3, line: 3352, type: !6128)
!6551 = !DILocalVariable(name: "opcode", scope: !6552, file: !3, line: 3354, type: !32)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 3353, column: 23)
!6553 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3353, column: 9)
!6554 = !DILocalVariable(name: "value", scope: !6546, file: !3, line: 3357, type: !3040)
!6555 = !DILocalVariable(name: "retval", scope: !6546, file: !3, line: 3358, type: !17)
!6556 = !DILocation(line: 3352, column: 35, scope: !6546)
!6557 = !DILocation(line: 3353, column: 13, scope: !6553)
!6558 = !DILocation(line: 3353, column: 17, scope: !6553)
!6559 = !DILocation(line: 3353, column: 9, scope: !6546)
!6560 = !DILocation(line: 0, scope: !6546)
!6561 = !DILocation(line: 3354, column: 42, scope: !6552)
!6562 = !DILocation(line: 3354, column: 27, scope: !6552)
!6563 = !DILocation(line: 3354, column: 18, scope: !6552)
!6564 = !DILocation(line: 3355, column: 20, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 3355, column: 13)
!6566 = !DILocation(line: 3355, column: 13, scope: !6552)
!6567 = !DILocation(line: 0, scope: !6565)
!6568 = !DILocation(line: 3358, column: 46, scope: !6546)
!6569 = !DILocation(line: 3357, column: 11, scope: !6546)
!6570 = !DILocation(line: 3358, column: 18, scope: !6546)
!6571 = !DILocation(line: 3358, column: 9, scope: !6546)
!6572 = !DILocation(line: 3359, column: 16, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3359, column: 9)
!6574 = !DILocation(line: 3359, column: 9, scope: !6546)
!6575 = !DILocation(line: 3363, column: 5, scope: !6546)
!6576 = !DILocation(line: 3360, column: 12, scope: !6546)
!6577 = !DILocation(line: 3360, column: 5, scope: !6546)
!6578 = !DILocation(line: 3365, column: 1, scope: !6546)
!6579 = distinct !DISubprogram(name: "rdbSaveModulesAux", scope: !3, file: !3, line: 3369, type: !6580, isLocal: false, isDefinition: true, scopeLine: 3369, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6582)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!6293, !295, !17}
!6582 = !{!6583, !6584, !6585, !6586, !6587, !6588, !6590, !6591, !6592, !6594}
!6583 = !DILocalVariable(name: "rdb", arg: 1, scope: !6579, file: !3, line: 3369, type: !295)
!6584 = !DILocalVariable(name: "when", arg: 2, scope: !6579, file: !3, line: 3369, type: !17)
!6585 = !DILocalVariable(name: "total_written", scope: !6579, file: !3, line: 3370, type: !157)
!6586 = !DILocalVariable(name: "di", scope: !6579, file: !3, line: 3371, type: !744)
!6587 = !DILocalVariable(name: "de", scope: !6579, file: !3, line: 3372, type: !81)
!6588 = !DILocalVariable(name: "module", scope: !6589, file: !3, line: 3375, type: !273)
!6589 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 3374, column: 41)
!6590 = !DILocalVariable(name: "li", scope: !6589, file: !3, line: 3376, type: !759)
!6591 = !DILocalVariable(name: "ln", scope: !6589, file: !3, line: 3377, type: !120)
!6592 = !DILocalVariable(name: "mt", scope: !6593, file: !3, line: 3381, type: !267)
!6593 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 3380, column: 37)
!6594 = !DILocalVariable(name: "ret", scope: !6593, file: !3, line: 3384, type: !6293)
!6595 = !DILocation(line: 3369, column: 32, scope: !6579)
!6596 = !DILocation(line: 3369, column: 41, scope: !6579)
!6597 = !DILocation(line: 3370, column: 12, scope: !6579)
!6598 = !DILocation(line: 3371, column: 40, scope: !6579)
!6599 = !DILocation(line: 3371, column: 24, scope: !6579)
!6600 = !DILocation(line: 3371, column: 19, scope: !6579)
!6601 = !DILocation(line: 3374, column: 5, scope: !6579)
!6602 = !DILocation(line: 3374, column: 18, scope: !6579)
!6603 = !DILocation(line: 3372, column: 16, scope: !6579)
!6604 = !DILocation(line: 3374, column: 32, scope: !6579)
!6605 = !DILocation(line: 3375, column: 38, scope: !6589)
!6606 = !DILocation(line: 3375, column: 29, scope: !6589)
!6607 = !DILocation(line: 3376, column: 9, scope: !6589)
!6608 = !DILocation(line: 3379, column: 28, scope: !6589)
!6609 = !DILocation(line: 3376, column: 18, scope: !6589)
!6610 = !DILocation(line: 3379, column: 9, scope: !6589)
!6611 = !DILocation(line: 3380, column: 9, scope: !6589)
!6612 = !DILocation(line: 3380, column: 21, scope: !6589)
!6613 = !DILocation(line: 3377, column: 19, scope: !6589)
!6614 = !DILocation(line: 3381, column: 34, scope: !6593)
!6615 = !DILocation(line: 3381, column: 25, scope: !6593)
!6616 = !DILocation(line: 3382, column: 22, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 3382, column: 17)
!6618 = !{!5904, !892, i64 72}
!6619 = !DILocation(line: 3382, column: 18, scope: !6617)
!6620 = !DILocation(line: 3382, column: 31, scope: !6617)
!6621 = !DILocation(line: 3382, column: 40, scope: !6617)
!6622 = !DILocation(line: 3382, column: 58, scope: !6617)
!6623 = !DILocation(line: 3382, column: 17, scope: !6593)
!6624 = !DILocation(line: 3384, column: 27, scope: !6593)
!6625 = !DILocation(line: 3384, column: 21, scope: !6593)
!6626 = !DILocation(line: 3385, column: 20, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 3385, column: 17)
!6628 = !DILocation(line: 3385, column: 17, scope: !6593)
!6629 = !DILocation(line: 3389, column: 27, scope: !6593)
!6630 = !DILocation(line: 3390, column: 9, scope: !6589)
!6631 = distinct !{!6631, !6611, !6630}
!6632 = !DILocation(line: 3391, column: 5, scope: !6579)
!6633 = !DILocation(line: 3393, column: 5, scope: !6579)
!6634 = !DILocation(line: 3394, column: 5, scope: !6579)
!6635 = !DILocation(line: 3386, column: 17, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 3385, column: 26)
!6637 = !DILocation(line: 3387, column: 17, scope: !6636)
!6638 = !DILocation(line: 3395, column: 1, scope: !6579)
!6639 = !DILocation(line: 0, scope: !6579)
!6640 = distinct !DISubprogram(name: "RM_DigestAddStringBuffer", scope: !3, file: !3, line: 3439, type: !6641, isLocal: false, isDefinition: true, scopeLine: 3439, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6645)
!6641 = !DISubroutineType(types: !6642)
!6642 = !{null, !6643, !346, !157}
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDigest", file: !13, line: 586, baseType: !649)
!6645 = !{!6646, !6647, !6648}
!6646 = !DILocalVariable(name: "md", arg: 1, scope: !6640, file: !3, line: 3439, type: !6643)
!6647 = !DILocalVariable(name: "ele", arg: 2, scope: !6640, file: !3, line: 3439, type: !346)
!6648 = !DILocalVariable(name: "len", arg: 3, scope: !6640, file: !3, line: 3439, type: !157)
!6649 = !DILocation(line: 3439, column: 50, scope: !6640)
!6650 = !DILocation(line: 3439, column: 69, scope: !6640)
!6651 = !DILocation(line: 3439, column: 81, scope: !6640)
!6652 = !DILocation(line: 3440, column: 15, scope: !6640)
!6653 = !DILocation(line: 3440, column: 5, scope: !6640)
!6654 = !DILocation(line: 3441, column: 1, scope: !6640)
!6655 = distinct !DISubprogram(name: "RM_DigestAddLongLong", scope: !3, file: !3, line: 3445, type: !6656, isLocal: false, isDefinition: true, scopeLine: 3445, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6658)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !6643, !112}
!6658 = !{!6659, !6660, !6661, !6662}
!6659 = !DILocalVariable(name: "md", arg: 1, scope: !6655, file: !3, line: 3445, type: !6643)
!6660 = !DILocalVariable(name: "ll", arg: 2, scope: !6655, file: !3, line: 3445, type: !112)
!6661 = !DILocalVariable(name: "buf", scope: !6655, file: !3, line: 3446, type: !2048)
!6662 = !DILocalVariable(name: "len", scope: !6655, file: !3, line: 3447, type: !157)
!6663 = !DILocation(line: 3445, column: 46, scope: !6655)
!6664 = !DILocation(line: 3445, column: 60, scope: !6655)
!6665 = !DILocation(line: 3446, column: 5, scope: !6655)
!6666 = !DILocation(line: 3446, column: 10, scope: !6655)
!6667 = !DILocation(line: 3447, column: 18, scope: !6655)
!6668 = !DILocation(line: 3447, column: 12, scope: !6655)
!6669 = !DILocation(line: 3448, column: 15, scope: !6655)
!6670 = !DILocation(line: 3448, column: 5, scope: !6655)
!6671 = !DILocation(line: 3449, column: 1, scope: !6655)
!6672 = distinct !DISubprogram(name: "RM_DigestEndSequence", scope: !3, file: !3, line: 3452, type: !6673, isLocal: false, isDefinition: true, scopeLine: 3452, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6675)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{null, !6643}
!6675 = !{!6676}
!6676 = !DILocalVariable(name: "md", arg: 1, scope: !6672, file: !3, line: 3452, type: !6643)
!6677 = !DILocation(line: 3452, column: 46, scope: !6672)
!6678 = !DILocation(line: 3453, column: 15, scope: !6672)
!6679 = !DILocation(line: 3453, column: 21, scope: !6672)
!6680 = !DILocation(line: 3453, column: 5, scope: !6672)
!6681 = !DILocation(line: 3454, column: 5, scope: !6672)
!6682 = !DILocation(line: 3455, column: 1, scope: !6672)
!6683 = distinct !DISubprogram(name: "RM_EmitAOF", scope: !3, file: !3, line: 3466, type: !6684, isLocal: false, isDefinition: true, scopeLine: 3466, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6686)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{null, !6128, !523, !523, null}
!6686 = !{!6687, !6688, !6689, !6690, !6691, !6692, !6693, !6694, !6695}
!6687 = !DILocalVariable(name: "io", arg: 1, scope: !6683, file: !3, line: 3466, type: !6128)
!6688 = !DILocalVariable(name: "cmdname", arg: 2, scope: !6683, file: !3, line: 3466, type: !523)
!6689 = !DILocalVariable(name: "fmt", arg: 3, scope: !6683, file: !3, line: 3466, type: !523)
!6690 = !DILocalVariable(name: "cmd", scope: !6683, file: !3, line: 3468, type: !18)
!6691 = !DILocalVariable(name: "argv", scope: !6683, file: !3, line: 3469, type: !165)
!6692 = !DILocalVariable(name: "argc", scope: !6683, file: !3, line: 3470, type: !17)
!6693 = !DILocalVariable(name: "flags", scope: !6683, file: !3, line: 3470, type: !17)
!6694 = !DILocalVariable(name: "j", scope: !6683, file: !3, line: 3470, type: !17)
!6695 = !DILocalVariable(name: "ap", scope: !6683, file: !3, line: 3471, type: !1980)
!6696 = !DILocation(line: 3466, column: 32, scope: !6683)
!6697 = !DILocation(line: 3466, column: 48, scope: !6683)
!6698 = !DILocation(line: 3466, column: 69, scope: !6683)
!6699 = !DILocation(line: 3467, column: 13, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 3467, column: 9)
!6701 = !DILocation(line: 3467, column: 9, scope: !6700)
!6702 = !DILocation(line: 3467, column: 9, scope: !6683)
!6703 = !DILocation(line: 3469, column: 12, scope: !6683)
!6704 = !DILocation(line: 3470, column: 5, scope: !6683)
!6705 = !DILocation(line: 3470, column: 9, scope: !6683)
!6706 = !DILocation(line: 3470, column: 19, scope: !6683)
!6707 = !DILocation(line: 3471, column: 5, scope: !6683)
!6708 = !DILocation(line: 3471, column: 13, scope: !6683)
!6709 = !DILocation(line: 3473, column: 11, scope: !6683)
!6710 = !DILocation(line: 3468, column: 26, scope: !6683)
!6711 = !DILocation(line: 3474, column: 10, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 3474, column: 9)
!6713 = !DILocation(line: 3474, column: 9, scope: !6683)
!6714 = !DILocation(line: 3478, column: 17, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 3474, column: 15)
!6716 = !DILocation(line: 3478, column: 13, scope: !6715)
!6717 = !DILocation(line: 3475, column: 9, scope: !6715)
!6718 = !DILocation(line: 3479, column: 19, scope: !6715)
!6719 = !DILocation(line: 3480, column: 9, scope: !6715)
!6720 = !DILocation(line: 3480, column: 15, scope: !6715)
!6721 = !DILocation(line: 3481, column: 9, scope: !6715)
!6722 = !DILocation(line: 3485, column: 5, scope: !6683)
!6723 = !DILocation(line: 3486, column: 12, scope: !6683)
!6724 = !DILocation(line: 3487, column: 5, scope: !6683)
!6725 = !DILocation(line: 3488, column: 14, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 3488, column: 9)
!6727 = !DILocation(line: 3488, column: 9, scope: !6683)
!6728 = !DILocation(line: 3492, column: 17, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 3488, column: 23)
!6730 = !DILocation(line: 3492, column: 13, scope: !6729)
!6731 = !DILocation(line: 3489, column: 9, scope: !6729)
!6732 = !DILocation(line: 3493, column: 19, scope: !6729)
!6733 = !DILocation(line: 3494, column: 9, scope: !6729)
!6734 = !DILocation(line: 3494, column: 15, scope: !6729)
!6735 = !DILocation(line: 3495, column: 9, scope: !6729)
!6736 = !DILocation(line: 3499, column: 14, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 3499, column: 9)
!6738 = !DILocation(line: 3499, column: 10, scope: !6737)
!6739 = !DILocation(line: 3499, column: 20, scope: !6737)
!6740 = !DILocation(line: 3503, column: 21, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 3503, column: 5)
!6742 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 3503, column: 5)
!6743 = !DILocation(line: 3499, column: 45, scope: !6737)
!6744 = !DILocation(line: 3499, column: 53, scope: !6737)
!6745 = !DILocation(line: 3499, column: 23, scope: !6737)
!6746 = !DILocation(line: 3499, column: 59, scope: !6737)
!6747 = !DILocation(line: 3499, column: 9, scope: !6683)
!6748 = !DILocation(line: 3500, column: 19, scope: !6737)
!6749 = !DILocation(line: 3500, column: 9, scope: !6737)
!6750 = !DILocation(line: 3470, column: 30, scope: !6683)
!6751 = !DILocation(line: 3503, column: 10, scope: !6742)
!6752 = !DILocation(line: 3503, column: 19, scope: !6741)
!6753 = !DILocation(line: 3503, column: 5, scope: !6742)
!6754 = !DILocation(line: 3504, column: 18, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 3504, column: 13)
!6756 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 3503, column: 32)
!6757 = !DILocation(line: 3504, column: 14, scope: !6755)
!6758 = !DILocation(line: 3504, column: 24, scope: !6755)
!6759 = !DILocation(line: 3506, column: 22, scope: !6756)
!6760 = !DILocation(line: 3504, column: 50, scope: !6755)
!6761 = !DILocation(line: 3504, column: 54, scope: !6755)
!6762 = !DILocation(line: 3504, column: 27, scope: !6755)
!6763 = !DILocation(line: 3504, column: 63, scope: !6755)
!6764 = !DILocation(line: 3504, column: 13, scope: !6756)
!6765 = !DILocation(line: 3505, column: 23, scope: !6755)
!6766 = !DILocation(line: 3505, column: 13, scope: !6755)
!6767 = !DILocation(line: 3506, column: 9, scope: !6756)
!6768 = !DILocation(line: 3503, column: 28, scope: !6741)
!6769 = !DILocation(line: 3503, column: 5, scope: !6741)
!6770 = distinct !{!6770, !6753, !6771}
!6771 = !DILocation(line: 3507, column: 5, scope: !6742)
!6772 = !DILocation(line: 3508, column: 11, scope: !6683)
!6773 = !DILocation(line: 3508, column: 5, scope: !6683)
!6774 = !DILocation(line: 3509, column: 5, scope: !6683)
!6775 = !DILocation(line: 0, scope: !6715)
!6776 = !DILocation(line: 3510, column: 1, scope: !6683)
!6777 = distinct !DISubprogram(name: "RM_GetContextFromIO", scope: !3, file: !3, line: 3516, type: !6778, isLocal: false, isDefinition: true, scopeLine: 3516, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6780)
!6778 = !DISubroutineType(types: !6779)
!6779 = !{!584, !6128}
!6780 = !{!6781, !6782}
!6781 = !DILocalVariable(name: "io", arg: 1, scope: !6777, file: !3, line: 3516, type: !6128)
!6782 = !DILocalVariable(name: "ctxtemplate", scope: !6777, file: !3, line: 3518, type: !585)
!6783 = !DILocation(line: 3516, column: 52, scope: !6777)
!6784 = !DILocation(line: 3517, column: 13, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 3517, column: 9)
!6786 = !{!6135, !892, i64 32}
!6787 = !DILocation(line: 3517, column: 9, scope: !6785)
!6788 = !DILocation(line: 3517, column: 9, scope: !6777)
!6789 = !DILocation(line: 3518, column: 5, scope: !6777)
!6790 = !DILocation(line: 3518, column: 20, scope: !6777)
!6791 = !DILocation(line: 3519, column: 15, scope: !6777)
!6792 = !DILocation(line: 3519, column: 13, scope: !6777)
!6793 = !DILocation(line: 3520, column: 18, scope: !6777)
!6794 = !DILocation(line: 3521, column: 27, scope: !6777)
!6795 = !DILocation(line: 3521, column: 33, scope: !6777)
!6796 = !DILocation(line: 3521, column: 9, scope: !6777)
!6797 = !DILocation(line: 3521, column: 14, scope: !6777)
!6798 = !DILocation(line: 3521, column: 21, scope: !6777)
!6799 = !DILocation(line: 3522, column: 14, scope: !6777)
!6800 = !DILocation(line: 3522, column: 21, scope: !6777)
!6801 = !DILocation(line: 3524, column: 1, scope: !6777)
!6802 = !DILocation(line: 0, scope: !6777)
!6803 = distinct !DISubprogram(name: "RM_GetKeyNameFromIO", scope: !3, file: !3, line: 3530, type: !6804, isLocal: false, isDefinition: true, scopeLine: 3530, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6806)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!2064, !6128}
!6806 = !{!6807}
!6807 = !DILocalVariable(name: "io", arg: 1, scope: !6803, file: !3, line: 3530, type: !6128)
!6808 = !DILocation(line: 3530, column: 61, scope: !6803)
!6809 = !DILocation(line: 3531, column: 16, scope: !6803)
!6810 = !{!6135, !892, i64 40}
!6811 = !DILocation(line: 3531, column: 5, scope: !6803)
!6812 = distinct !DISubprogram(name: "RM_LogRaw", scope: !3, file: !3, line: 3544, type: !6813, isLocal: false, isDefinition: true, scopeLine: 3544, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6815)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{null, !577, !523, !523, !2850}
!6815 = !{!6816, !6817, !6818, !6819, !6820, !6824, !6825}
!6816 = !DILocalVariable(name: "module", arg: 1, scope: !6812, file: !3, line: 3544, type: !577)
!6817 = !DILocalVariable(name: "levelstr", arg: 2, scope: !6812, file: !3, line: 3544, type: !523)
!6818 = !DILocalVariable(name: "fmt", arg: 3, scope: !6812, file: !3, line: 3544, type: !523)
!6819 = !DILocalVariable(name: "ap", arg: 4, scope: !6812, file: !3, line: 3544, type: !2850)
!6820 = !DILocalVariable(name: "msg", scope: !6812, file: !3, line: 3545, type: !6821)
!6821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !6822)
!6822 = !{!6823}
!6823 = !DISubrange(count: 1024)
!6824 = !DILocalVariable(name: "name_len", scope: !6812, file: !3, line: 3546, type: !157)
!6825 = !DILocalVariable(name: "level", scope: !6812, file: !3, line: 3547, type: !17)
!6826 = !DILocation(line: 3544, column: 29, scope: !6812)
!6827 = !DILocation(line: 3544, column: 49, scope: !6812)
!6828 = !DILocation(line: 3544, column: 71, scope: !6812)
!6829 = !DILocation(line: 3544, column: 84, scope: !6812)
!6830 = !DILocation(line: 3545, column: 5, scope: !6812)
!6831 = !DILocation(line: 3545, column: 10, scope: !6812)
!6832 = !DILocation(line: 3549, column: 10, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 3549, column: 9)
!6834 = !DILocation(line: 3549, column: 9, scope: !6812)
!6835 = !DILocation(line: 3547, column: 9, scope: !6812)
!6836 = !DILocation(line: 3549, column: 40, scope: !6833)
!6837 = !DILocation(line: 3550, column: 15, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 3550, column: 14)
!6839 = !DILocation(line: 3550, column: 14, scope: !6833)
!6840 = !DILocation(line: 3550, column: 47, scope: !6838)
!6841 = !DILocation(line: 3551, column: 15, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 3551, column: 14)
!6843 = !DILocation(line: 3551, column: 14, scope: !6838)
!6844 = !DILocation(line: 3551, column: 46, scope: !6842)
!6845 = !DILocation(line: 3552, column: 15, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 3552, column: 14)
!6847 = !DILocation(line: 3552, column: 14, scope: !6842)
!6848 = !DILocation(line: 3552, column: 47, scope: !6846)
!6849 = !DILocation(line: 0, scope: !6833)
!6850 = !DILocation(line: 3555, column: 24, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 3555, column: 9)
!6852 = !{!1050, !895, i64 1728}
!6853 = !DILocation(line: 3555, column: 15, scope: !6851)
!6854 = !DILocation(line: 3555, column: 9, scope: !6812)
!6855 = !DILocation(line: 3557, column: 51, scope: !6812)
!6856 = !DILocation(line: 3557, column: 67, scope: !6812)
!6857 = !DILocation(line: 3557, column: 16, scope: !6812)
!6858 = !DILocation(line: 3546, column: 12, scope: !6812)
!6859 = !DILocation(line: 3558, column: 19, scope: !6812)
!6860 = !DILocation(line: 3558, column: 43, scope: !6812)
!6861 = !DILocation(line: 3558, column: 5, scope: !6812)
!6862 = !DILocation(line: 3559, column: 5, scope: !6812)
!6863 = !DILocation(line: 3560, column: 1, scope: !6812)
!6864 = !DILocation(line: 0, scope: !6851)
!6865 = distinct !DISubprogram(name: "RM_Log", scope: !3, file: !3, line: 3580, type: !6866, isLocal: false, isDefinition: true, scopeLine: 3580, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6868)
!6866 = !DISubroutineType(types: !6867)
!6867 = !{null, !584, !523, !523, null}
!6868 = !{!6869, !6870, !6871, !6872}
!6869 = !DILocalVariable(name: "ctx", arg: 1, scope: !6865, file: !3, line: 3580, type: !584)
!6870 = !DILocalVariable(name: "levelstr", arg: 2, scope: !6865, file: !3, line: 3580, type: !523)
!6871 = !DILocalVariable(name: "fmt", arg: 3, scope: !6865, file: !3, line: 3580, type: !523)
!6872 = !DILocalVariable(name: "ap", scope: !6865, file: !3, line: 3581, type: !1980)
!6873 = !DILocation(line: 3580, column: 29, scope: !6865)
!6874 = !DILocation(line: 3580, column: 46, scope: !6865)
!6875 = !DILocation(line: 3580, column: 68, scope: !6865)
!6876 = !DILocation(line: 3581, column: 5, scope: !6865)
!6877 = !DILocation(line: 3581, column: 13, scope: !6865)
!6878 = !DILocation(line: 3582, column: 5, scope: !6865)
!6879 = !DILocation(line: 3583, column: 15, scope: !6865)
!6880 = !DILocation(line: 3583, column: 25, scope: !6865)
!6881 = !DILocation(line: 3583, column: 5, scope: !6865)
!6882 = !DILocation(line: 3584, column: 5, scope: !6865)
!6883 = !DILocation(line: 3585, column: 1, scope: !6865)
!6884 = distinct !DISubprogram(name: "RM_LogIOError", scope: !3, file: !3, line: 3592, type: !6684, isLocal: false, isDefinition: true, scopeLine: 3592, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6885)
!6885 = !{!6886, !6887, !6888, !6889}
!6886 = !DILocalVariable(name: "io", arg: 1, scope: !6884, file: !3, line: 3592, type: !6128)
!6887 = !DILocalVariable(name: "levelstr", arg: 2, scope: !6884, file: !3, line: 3592, type: !523)
!6888 = !DILocalVariable(name: "fmt", arg: 3, scope: !6884, file: !3, line: 3592, type: !523)
!6889 = !DILocalVariable(name: "ap", scope: !6884, file: !3, line: 3593, type: !1980)
!6890 = !DILocation(line: 3592, column: 35, scope: !6884)
!6891 = !DILocation(line: 3592, column: 51, scope: !6884)
!6892 = !DILocation(line: 3592, column: 73, scope: !6884)
!6893 = !DILocation(line: 3593, column: 5, scope: !6884)
!6894 = !DILocation(line: 3593, column: 13, scope: !6884)
!6895 = !DILocation(line: 3594, column: 5, scope: !6884)
!6896 = !DILocation(line: 3595, column: 19, scope: !6884)
!6897 = !DILocation(line: 3595, column: 25, scope: !6884)
!6898 = !DILocation(line: 3595, column: 5, scope: !6884)
!6899 = !DILocation(line: 3596, column: 5, scope: !6884)
!6900 = !DILocation(line: 3597, column: 1, scope: !6884)
!6901 = distinct !DISubprogram(name: "moduleBlockedClientPipeReadable", scope: !3, file: !3, line: 3607, type: !6902, isLocal: false, isDefinition: true, scopeLine: 3607, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6964)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{null, !6904, !17, !6, !17}
!6904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6905, size: 64)
!6905 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventLoop", file: !6906, line: 109, baseType: !6907)
!6906 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/ae.h", directory: "/root/.unikraft/apps/redis/build")
!6907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeEventLoop", file: !6906, line: 97, size: 640, elements: !6908)
!6908 = !{!6909, !6910, !6911, !6912, !6913, !6927, !6934, !6956, !6957, !6958, !6963}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !6907, file: !6906, line: 98, baseType: !17, size: 32)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "setsize", scope: !6907, file: !6906, line: 99, baseType: !17, size: 32, offset: 32)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventNextId", scope: !6907, file: !6906, line: 100, baseType: !112, size: 64, offset: 64)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "lastTime", scope: !6907, file: !6906, line: 101, baseType: !176, size: 64, offset: 128)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !6907, file: !6906, line: 102, baseType: !6914, size: 64, offset: 192)
!6914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6915, size: 64)
!6915 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileEvent", file: !6906, line: 76, baseType: !6916)
!6916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFileEvent", file: !6906, line: 71, size: 256, elements: !6917)
!6917 = !{!6918, !6919, !6925, !6926}
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6916, file: !6906, line: 72, baseType: !17, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "rfileProc", scope: !6916, file: !6906, line: 73, baseType: !6920, size: 64, offset: 64)
!6920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6921, size: 64)
!6921 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileProc", file: !6906, line: 65, baseType: !6922)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{null, !6924, !17, !6, !17}
!6924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6907, size: 64)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "wfileProc", scope: !6916, file: !6906, line: 74, baseType: !6920, size: 64, offset: 128)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !6916, file: !6906, line: 75, baseType: !6, size: 64, offset: 192)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "fired", scope: !6907, file: !6906, line: 103, baseType: !6928, size: 64, offset: 256)
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFiredEvent", file: !6906, line: 94, baseType: !6930)
!6930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFiredEvent", file: !6906, line: 91, size: 64, elements: !6931)
!6931 = !{!6932, !6933}
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !6930, file: !6906, line: 92, baseType: !17, size: 32)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6930, file: !6906, line: 93, baseType: !17, size: 32, offset: 32)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventHead", scope: !6907, file: !6906, line: 104, baseType: !6935, size: 64, offset: 320)
!6935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6936, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeEvent", file: !6906, line: 88, baseType: !6937)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeTimeEvent", file: !6906, line: 79, size: 512, elements: !6938)
!6938 = !{!6939, !6940, !6941, !6942, !6947, !6952, !6953, !6955}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6937, file: !6906, line: 80, baseType: !112, size: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "when_sec", scope: !6937, file: !6906, line: 81, baseType: !94, size: 64, offset: 64)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "when_ms", scope: !6937, file: !6906, line: 82, baseType: !94, size: 64, offset: 128)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "timeProc", scope: !6937, file: !6906, line: 83, baseType: !6943, size: 64, offset: 192)
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 64)
!6944 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeProc", file: !6906, line: 66, baseType: !6945)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!17, !6924, !112, !6}
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "finalizerProc", scope: !6937, file: !6906, line: 84, baseType: !6948, size: 64, offset: 256)
!6948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6949, size: 64)
!6949 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventFinalizerProc", file: !6906, line: 67, baseType: !6950)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{null, !6924, !6}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !6937, file: !6906, line: 85, baseType: !6, size: 64, offset: 320)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6937, file: !6906, line: 86, baseType: !6954, size: 64, offset: 384)
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 64)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6937, file: !6906, line: 87, baseType: !6954, size: 64, offset: 448)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !6907, file: !6906, line: 105, baseType: !17, size: 32, offset: 384)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "apidata", scope: !6907, file: !6906, line: 106, baseType: !6, size: 64, offset: 448)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "beforesleep", scope: !6907, file: !6906, line: 107, baseType: !6959, size: 64, offset: 512)
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6960, size: 64)
!6960 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeBeforeSleepProc", file: !6906, line: 68, baseType: !6961)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{null, !6924}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "aftersleep", scope: !6907, file: !6906, line: 108, baseType: !6959, size: 64, offset: 576)
!6964 = !{!6965, !6966, !6967, !6968}
!6965 = !DILocalVariable(name: "el", arg: 1, scope: !6901, file: !3, line: 3607, type: !6904)
!6966 = !DILocalVariable(name: "fd", arg: 2, scope: !6901, file: !3, line: 3607, type: !17)
!6967 = !DILocalVariable(name: "privdata", arg: 3, scope: !6901, file: !3, line: 3607, type: !6)
!6968 = !DILocalVariable(name: "mask", arg: 4, scope: !6901, file: !3, line: 3607, type: !17)
!6969 = !DILocation(line: 3607, column: 51, scope: !6901)
!6970 = !DILocation(line: 3607, column: 59, scope: !6901)
!6971 = !DILocation(line: 3607, column: 69, scope: !6901)
!6972 = !DILocation(line: 3607, column: 83, scope: !6901)
!6973 = !DILocation(line: 3612, column: 1, scope: !6901)
!6974 = distinct !DISubprogram(name: "unblockClientFromModule", scope: !3, file: !3, line: 3626, type: !25, isLocal: false, isDefinition: true, scopeLine: 3626, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6975)
!6975 = !{!6976, !6977, !6980}
!6976 = !DILocalVariable(name: "c", arg: 1, scope: !6974, file: !3, line: 3626, type: !27)
!6977 = !DILocalVariable(name: "bc", scope: !6974, file: !3, line: 3627, type: !6978)
!6978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6979, size: 64)
!6979 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleBlockedClient", file: !3, line: 230, baseType: !573)
!6980 = !DILocalVariable(name: "ctx", scope: !6981, file: !3, line: 3631, type: !585)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 3630, column: 34)
!6982 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3630, column: 9)
!6983 = !DILocation(line: 3626, column: 38, scope: !6974)
!6984 = !DILocation(line: 3627, column: 44, scope: !6974)
!6985 = !{!1306, !892, i64 472}
!6986 = !DILocation(line: 3627, column: 31, scope: !6974)
!6987 = !DILocation(line: 3630, column: 13, scope: !6982)
!6988 = !{!6989, !892, i64 32}
!6989 = !{!"RedisModuleBlockedClient", !892, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !892, i64 32, !892, i64 40, !892, i64 48, !892, i64 56, !895, i64 64}
!6990 = !DILocation(line: 3630, column: 9, scope: !6982)
!6991 = !DILocation(line: 3630, column: 9, scope: !6974)
!6992 = !DILocation(line: 3631, column: 9, scope: !6981)
!6993 = !DILocation(line: 3631, column: 24, scope: !6981)
!6994 = !DILocation(line: 3632, column: 36, scope: !6981)
!6995 = !{!6989, !892, i64 48}
!6996 = !DILocation(line: 3632, column: 13, scope: !6981)
!6997 = !DILocation(line: 3632, column: 30, scope: !6981)
!6998 = !{!891, !892, i64 72}
!6999 = !DILocation(line: 3633, column: 13, scope: !6981)
!7000 = !DILocation(line: 3634, column: 26, scope: !6981)
!7001 = !DILocation(line: 3633, column: 20, scope: !6981)
!7002 = !DILocation(line: 3635, column: 13, scope: !6981)
!7003 = !DILocation(line: 3635, column: 9, scope: !6981)
!7004 = !DILocation(line: 3636, column: 9, scope: !6981)
!7005 = !DILocation(line: 3637, column: 5, scope: !6982)
!7006 = !DILocation(line: 3637, column: 5, scope: !6981)
!7007 = !DILocation(line: 3639, column: 9, scope: !6974)
!7008 = !DILocation(line: 3639, column: 16, scope: !6974)
!7009 = !{!6989, !892, i64 0}
!7010 = !DILocation(line: 3644, column: 5, scope: !6974)
!7011 = !DILocation(line: 3645, column: 1, scope: !6974)
!7012 = distinct !DISubprogram(name: "RM_BlockClient", scope: !3, file: !3, line: 3663, type: !7013, isLocal: false, isDefinition: true, scopeLine: 3663, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7015)
!7013 = !DISubroutineType(types: !7014)
!7014 = !{!6978, !584, !580, !580, !593, !112}
!7015 = !{!7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024}
!7016 = !DILocalVariable(name: "ctx", arg: 1, scope: !7012, file: !3, line: 3663, type: !584)
!7017 = !DILocalVariable(name: "reply_callback", arg: 2, scope: !7012, file: !3, line: 3663, type: !580)
!7018 = !DILocalVariable(name: "timeout_callback", arg: 3, scope: !7012, file: !3, line: 3663, type: !580)
!7019 = !DILocalVariable(name: "free_privdata", arg: 4, scope: !7012, file: !3, line: 3663, type: !593)
!7020 = !DILocalVariable(name: "timeout_ms", arg: 5, scope: !7012, file: !3, line: 3663, type: !112)
!7021 = !DILocalVariable(name: "c", scope: !7012, file: !3, line: 3664, type: !27)
!7022 = !DILocalVariable(name: "islua", scope: !7012, file: !3, line: 3665, type: !17)
!7023 = !DILocalVariable(name: "ismulti", scope: !7012, file: !3, line: 3666, type: !17)
!7024 = !DILocalVariable(name: "bc", scope: !7012, file: !3, line: 3669, type: !6978)
!7025 = !DILocation(line: 3663, column: 58, scope: !7012)
!7026 = !DILocation(line: 3663, column: 82, scope: !7012)
!7027 = !DILocation(line: 3663, column: 117, scope: !7012)
!7028 = !DILocation(line: 3663, column: 142, scope: !7012)
!7029 = !DILocation(line: 3663, column: 191, scope: !7012)
!7030 = !DILocation(line: 3664, column: 22, scope: !7012)
!7031 = !DILocation(line: 3664, column: 13, scope: !7012)
!7032 = !DILocation(line: 3665, column: 20, scope: !7012)
!7033 = !DILocation(line: 3665, column: 26, scope: !7012)
!7034 = !DILocation(line: 3665, column: 9, scope: !7012)
!7035 = !DILocation(line: 3666, column: 9, scope: !7012)
!7036 = !DILocation(line: 3668, column: 37, scope: !7012)
!7037 = !DILocation(line: 3668, column: 13, scope: !7012)
!7038 = !DILocation(line: 3668, column: 35, scope: !7012)
!7039 = !DILocation(line: 3669, column: 36, scope: !7012)
!7040 = !DILocation(line: 3669, column: 31, scope: !7012)
!7041 = !DILocation(line: 3675, column: 19, scope: !7012)
!7042 = !DILocation(line: 3675, column: 25, scope: !7012)
!7043 = !DILocation(line: 3675, column: 9, scope: !7012)
!7044 = !DILocation(line: 3675, column: 16, scope: !7012)
!7045 = !DILocation(line: 3676, column: 23, scope: !7012)
!7046 = !DILocation(line: 3676, column: 9, scope: !7012)
!7047 = !DILocation(line: 3676, column: 16, scope: !7012)
!7048 = !{!6989, !892, i64 8}
!7049 = !DILocation(line: 3677, column: 9, scope: !7012)
!7050 = !DILocation(line: 3677, column: 24, scope: !7012)
!7051 = !{!6989, !892, i64 16}
!7052 = !DILocation(line: 3678, column: 9, scope: !7012)
!7053 = !DILocation(line: 3678, column: 26, scope: !7012)
!7054 = !{!6989, !892, i64 24}
!7055 = !DILocation(line: 3679, column: 9, scope: !7012)
!7056 = !DILocation(line: 3679, column: 29, scope: !7012)
!7057 = !DILocation(line: 3680, column: 9, scope: !7012)
!7058 = !DILocation(line: 3680, column: 23, scope: !7012)
!7059 = !{!6989, !892, i64 40}
!7060 = !DILocation(line: 3681, column: 9, scope: !7012)
!7061 = !DILocation(line: 3681, column: 18, scope: !7012)
!7062 = !DILocation(line: 3682, column: 24, scope: !7012)
!7063 = !DILocation(line: 3682, column: 9, scope: !7012)
!7064 = !DILocation(line: 3682, column: 22, scope: !7012)
!7065 = !{!6989, !892, i64 56}
!7066 = !DILocation(line: 3683, column: 23, scope: !7012)
!7067 = !DILocation(line: 3683, column: 29, scope: !7012)
!7068 = !DILocation(line: 3684, column: 19, scope: !7012)
!7069 = !DILocation(line: 3684, column: 23, scope: !7012)
!7070 = !DILocation(line: 3684, column: 9, scope: !7012)
!7071 = !DILocation(line: 3684, column: 14, scope: !7012)
!7072 = !{!6989, !895, i64 64}
!7073 = !DILocation(line: 3685, column: 23, scope: !7012)
!7074 = !DILocation(line: 3685, column: 37, scope: !7012)
!7075 = !DILocation(line: 3685, column: 45, scope: !7012)
!7076 = !DILocation(line: 3685, column: 13, scope: !7012)
!7077 = !DILocation(line: 3685, column: 21, scope: !7012)
!7078 = !{!1306, !1052, i64 392}
!7079 = !DILocation(line: 3687, column: 15, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 3687, column: 9)
!7081 = !DILocation(line: 3688, column: 39, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3687, column: 27)
!7083 = !DILocation(line: 3689, column: 26, scope: !7082)
!7084 = !DILocation(line: 3689, column: 9, scope: !7082)
!7085 = !DILocation(line: 3692, column: 5, scope: !7082)
!7086 = !DILocation(line: 3693, column: 9, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3692, column: 12)
!7088 = !DILocation(line: 3695, column: 5, scope: !7012)
!7089 = distinct !DISubprogram(name: "RM_UnblockClient", scope: !3, file: !3, line: 3709, type: !7090, isLocal: false, isDefinition: true, scopeLine: 3709, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7092)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!17, !6978, !6}
!7092 = !{!7093, !7094}
!7093 = !DILocalVariable(name: "bc", arg: 1, scope: !7089, file: !3, line: 3709, type: !6978)
!7094 = !DILocalVariable(name: "privdata", arg: 2, scope: !7089, file: !3, line: 3709, type: !6)
!7095 = !DILocation(line: 3709, column: 48, scope: !7089)
!7096 = !DILocation(line: 3709, column: 58, scope: !7089)
!7097 = !DILocation(line: 3710, column: 5, scope: !7089)
!7098 = !DILocation(line: 3711, column: 9, scope: !7089)
!7099 = !DILocation(line: 3711, column: 18, scope: !7089)
!7100 = !DILocation(line: 3712, column: 21, scope: !7089)
!7101 = !DILocation(line: 3712, column: 44, scope: !7089)
!7102 = !DILocation(line: 3712, column: 5, scope: !7089)
!7103 = !DILocation(line: 3713, column: 15, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 3713, column: 9)
!7105 = !DILocation(line: 3713, column: 9, scope: !7104)
!7106 = !DILocation(line: 3716, column: 5, scope: !7089)
!7107 = !DILocation(line: 3717, column: 5, scope: !7089)
!7108 = distinct !DISubprogram(name: "RM_AbortBlock", scope: !3, file: !3, line: 3722, type: !7109, isLocal: false, isDefinition: true, scopeLine: 3722, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7111)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!17, !6978}
!7111 = !{!7112}
!7112 = !DILocalVariable(name: "bc", arg: 1, scope: !7108, file: !3, line: 3722, type: !6978)
!7113 = !DILocation(line: 3722, column: 45, scope: !7108)
!7114 = !DILocation(line: 3723, column: 9, scope: !7108)
!7115 = !DILocation(line: 3723, column: 24, scope: !7108)
!7116 = !DILocation(line: 3724, column: 9, scope: !7108)
!7117 = !DILocation(line: 3724, column: 29, scope: !7108)
!7118 = !DILocation(line: 3709, column: 48, scope: !7089, inlinedAt: !7119)
!7119 = distinct !DILocation(line: 3725, column: 12, scope: !7108)
!7120 = !DILocation(line: 3709, column: 58, scope: !7089, inlinedAt: !7119)
!7121 = !DILocation(line: 3710, column: 5, scope: !7089, inlinedAt: !7119)
!7122 = !DILocation(line: 3711, column: 9, scope: !7089, inlinedAt: !7119)
!7123 = !DILocation(line: 3711, column: 18, scope: !7089, inlinedAt: !7119)
!7124 = !DILocation(line: 3712, column: 21, scope: !7089, inlinedAt: !7119)
!7125 = !DILocation(line: 3712, column: 44, scope: !7089, inlinedAt: !7119)
!7126 = !DILocation(line: 3712, column: 5, scope: !7089, inlinedAt: !7119)
!7127 = !DILocation(line: 3713, column: 15, scope: !7104, inlinedAt: !7119)
!7128 = !DILocation(line: 3713, column: 9, scope: !7104, inlinedAt: !7119)
!7129 = !DILocation(line: 3716, column: 5, scope: !7089, inlinedAt: !7119)
!7130 = !DILocation(line: 3717, column: 5, scope: !7089, inlinedAt: !7119)
!7131 = !DILocation(line: 3725, column: 5, scope: !7108)
!7132 = distinct !DISubprogram(name: "RM_SetDisconnectCallback", scope: !3, file: !3, line: 3744, type: !7133, isLocal: false, isDefinition: true, scopeLine: 3744, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7135)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{null, !6978, !588}
!7135 = !{!7136, !7137}
!7136 = !DILocalVariable(name: "bc", arg: 1, scope: !7132, file: !3, line: 3744, type: !6978)
!7137 = !DILocalVariable(name: "callback", arg: 2, scope: !7132, file: !3, line: 3744, type: !588)
!7138 = !DILocation(line: 3744, column: 57, scope: !7132)
!7139 = !DILocation(line: 3744, column: 87, scope: !7132)
!7140 = !DILocation(line: 3745, column: 9, scope: !7132)
!7141 = !DILocation(line: 3745, column: 29, scope: !7132)
!7142 = !DILocation(line: 3746, column: 1, scope: !7132)
!7143 = distinct !DISubprogram(name: "moduleHandleBlockedClients", scope: !3, file: !3, line: 3756, type: !492, isLocal: false, isDefinition: true, scopeLine: 3756, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7144)
!7144 = !{!7145, !7146, !7147, !7149, !7151, !7154}
!7145 = !DILocalVariable(name: "ln", scope: !7143, file: !3, line: 3757, type: !120)
!7146 = !DILocalVariable(name: "bc", scope: !7143, file: !3, line: 3758, type: !6978)
!7147 = !DILocalVariable(name: "buf", scope: !7143, file: !3, line: 3763, type: !7148)
!7148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !399)
!7149 = !DILocalVariable(name: "c", scope: !7150, file: !3, line: 3768, type: !27)
!7150 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 3765, column: 48)
!7151 = !DILocalVariable(name: "ctx", scope: !7152, file: !3, line: 3778, type: !585)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 3777, column: 38)
!7153 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 3777, column: 13)
!7154 = !DILocalVariable(name: "ctx", scope: !7155, file: !3, line: 3791, type: !585)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 3790, column: 48)
!7156 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 3790, column: 13)
!7157 = !DILocation(line: 527, column: 15, scope: !1297, inlinedAt: !7158)
!7158 = distinct !DILocation(line: 3785, column: 13, scope: !7152)
!7159 = !DILocation(line: 3760, column: 5, scope: !7143)
!7160 = !DILocation(line: 3763, column: 5, scope: !7143)
!7161 = !DILocation(line: 3763, column: 10, scope: !7143)
!7162 = !DILocation(line: 3764, column: 5, scope: !7143)
!7163 = !DILocation(line: 3764, column: 17, scope: !7143)
!7164 = !DILocation(line: 3764, column: 12, scope: !7143)
!7165 = !DILocation(line: 3764, column: 54, scope: !7143)
!7166 = distinct !{!7166, !7162, !7167}
!7167 = !DILocation(line: 3764, column: 59, scope: !7143)
!7168 = !DILocation(line: 3765, column: 12, scope: !7143)
!7169 = !DILocation(line: 3765, column: 5, scope: !7143)
!7170 = !DILocation(line: 3766, column: 14, scope: !7150)
!7171 = !DILocation(line: 3757, column: 15, scope: !7143)
!7172 = !DILocation(line: 3767, column: 18, scope: !7150)
!7173 = !DILocation(line: 3758, column: 31, scope: !7143)
!7174 = !DILocation(line: 3768, column: 25, scope: !7150)
!7175 = !DILocation(line: 3768, column: 17, scope: !7150)
!7176 = !DILocation(line: 3769, column: 9, scope: !7150)
!7177 = !DILocation(line: 3770, column: 9, scope: !7150)
!7178 = !DILocation(line: 3777, column: 13, scope: !7153)
!7179 = !DILocation(line: 3777, column: 15, scope: !7153)
!7180 = !DILocation(line: 3777, column: 22, scope: !7153)
!7181 = !DILocation(line: 3777, column: 18, scope: !7153)
!7182 = !DILocation(line: 3777, column: 13, scope: !7150)
!7183 = !DILocation(line: 3778, column: 13, scope: !7152)
!7184 = !DILocation(line: 3778, column: 28, scope: !7152)
!7185 = !DILocation(line: 3779, column: 23, scope: !7152)
!7186 = !DILocation(line: 3780, column: 40, scope: !7152)
!7187 = !DILocation(line: 3780, column: 34, scope: !7152)
!7188 = !DILocation(line: 3782, column: 30, scope: !7152)
!7189 = !DILocation(line: 3781, column: 24, scope: !7152)
!7190 = !DILocation(line: 3783, column: 32, scope: !7152)
!7191 = !DILocation(line: 3784, column: 17, scope: !7152)
!7192 = !DILocation(line: 3784, column: 48, scope: !7152)
!7193 = !DILocation(line: 3784, column: 56, scope: !7152)
!7194 = !DILocation(line: 3784, column: 13, scope: !7152)
!7195 = !DILocation(line: 519, column: 66, scope: !1292, inlinedAt: !7158)
!7196 = !DILocation(line: 520, column: 22, scope: !1292, inlinedAt: !7158)
!7197 = !DILocation(line: 520, column: 13, scope: !1292, inlinedAt: !7158)
!7198 = !DILocation(line: 522, column: 12, scope: !1304, inlinedAt: !7158)
!7199 = !DILocation(line: 522, column: 18, scope: !1304, inlinedAt: !7158)
!7200 = !DILocation(line: 522, column: 9, scope: !1292, inlinedAt: !7158)
!7201 = !DILocation(line: 526, column: 14, scope: !1298, inlinedAt: !7158)
!7202 = !DILocation(line: 526, column: 20, scope: !1298, inlinedAt: !7158)
!7203 = !DILocation(line: 526, column: 9, scope: !1292, inlinedAt: !7158)
!7204 = !DILocation(line: 527, column: 9, scope: !1297, inlinedAt: !7158)
!7205 = !DILocation(line: 528, column: 23, scope: !1297, inlinedAt: !7158)
!7206 = !DILocation(line: 528, column: 21, scope: !1297, inlinedAt: !7158)
!7207 = !DILocation(line: 529, column: 30, scope: !1297, inlinedAt: !7158)
!7208 = !DILocation(line: 529, column: 45, scope: !1297, inlinedAt: !7158)
!7209 = !DILocation(line: 529, column: 49, scope: !1297, inlinedAt: !7158)
!7210 = !DILocation(line: 529, column: 9, scope: !1297, inlinedAt: !7158)
!7211 = !DILocation(line: 531, column: 22, scope: !1297, inlinedAt: !7158)
!7212 = !DILocation(line: 531, column: 9, scope: !1297, inlinedAt: !7158)
!7213 = !DILocation(line: 532, column: 5, scope: !1298, inlinedAt: !7158)
!7214 = !DILocation(line: 532, column: 5, scope: !1297, inlinedAt: !7158)
!7215 = !DILocation(line: 0, scope: !7152)
!7216 = !DILocation(line: 533, column: 1, scope: !1292, inlinedAt: !7158)
!7217 = !DILocation(line: 3786, column: 13, scope: !7152)
!7218 = !DILocation(line: 3787, column: 9, scope: !7153)
!7219 = !DILocation(line: 3787, column: 9, scope: !7152)
!7220 = !DILocation(line: 3790, column: 17, scope: !7156)
!7221 = !DILocation(line: 3790, column: 13, scope: !7156)
!7222 = !DILocation(line: 3790, column: 26, scope: !7156)
!7223 = !DILocation(line: 3790, column: 33, scope: !7156)
!7224 = !DILocation(line: 3790, column: 29, scope: !7156)
!7225 = !DILocation(line: 3790, column: 13, scope: !7150)
!7226 = !DILocation(line: 3791, column: 13, scope: !7155)
!7227 = !DILocation(line: 3791, column: 28, scope: !7155)
!7228 = !DILocation(line: 3792, column: 19, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7155, file: !3, line: 3792, column: 17)
!7230 = !DILocation(line: 3792, column: 17, scope: !7155)
!7231 = !DILocation(line: 3793, column: 27, scope: !7229)
!7232 = !DILocation(line: 3793, column: 17, scope: !7229)
!7233 = !DILocation(line: 3794, column: 40, scope: !7155)
!7234 = !DILocation(line: 3794, column: 34, scope: !7155)
!7235 = !DILocation(line: 3796, column: 30, scope: !7155)
!7236 = !DILocation(line: 3795, column: 24, scope: !7155)
!7237 = !DILocation(line: 3797, column: 17, scope: !7155)
!7238 = !DILocation(line: 3797, column: 40, scope: !7155)
!7239 = !DILocation(line: 3797, column: 13, scope: !7155)
!7240 = !DILocation(line: 3798, column: 13, scope: !7155)
!7241 = !DILocation(line: 3799, column: 9, scope: !7156)
!7242 = !DILocation(line: 3799, column: 9, scope: !7155)
!7243 = !DILocation(line: 3805, column: 13, scope: !7150)
!7244 = !DILocation(line: 0, scope: !7150)
!7245 = !DILocation(line: 3805, column: 16, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 3805, column: 13)
!7247 = !DILocation(line: 3806, column: 24, scope: !7150)
!7248 = !DILocation(line: 3806, column: 9, scope: !7150)
!7249 = !DILocation(line: 3808, column: 13, scope: !7150)
!7250 = !DILocation(line: 3812, column: 17, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 3808, column: 24)
!7252 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 3808, column: 13)
!7253 = !DILocation(line: 3812, column: 37, scope: !7251)
!7254 = !DILocation(line: 3813, column: 13, scope: !7251)
!7255 = !DILocation(line: 3817, column: 17, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 3817, column: 17)
!7257 = !DILocation(line: 3817, column: 44, scope: !7256)
!7258 = !DILocation(line: 3818, column: 22, scope: !7256)
!7259 = !DILocation(line: 3818, column: 28, scope: !7256)
!7260 = !DILocation(line: 3817, column: 17, scope: !7251)
!7261 = !DILocation(line: 3820, column: 26, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 3819, column: 13)
!7263 = !DILocation(line: 3821, column: 40, scope: !7262)
!7264 = !{!1050, !892, i64 528}
!7265 = !DILocation(line: 3821, column: 62, scope: !7262)
!7266 = !DILocation(line: 3821, column: 17, scope: !7262)
!7267 = !DILocation(line: 3822, column: 13, scope: !7262)
!7268 = !DILocation(line: 3828, column: 9, scope: !7150)
!7269 = !DILocation(line: 3831, column: 9, scope: !7150)
!7270 = distinct !{!7270, !7169, !7271}
!7271 = !DILocation(line: 3832, column: 5, scope: !7143)
!7272 = !DILocation(line: 3833, column: 5, scope: !7143)
!7273 = !DILocation(line: 3834, column: 1, scope: !7143)
!7274 = distinct !DISubprogram(name: "moduleBlockedClientTimedOut", scope: !3, file: !3, line: 3840, type: !25, isLocal: false, isDefinition: true, scopeLine: 3840, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7275)
!7275 = !{!7276, !7277, !7278}
!7276 = !DILocalVariable(name: "c", arg: 1, scope: !7274, file: !3, line: 3840, type: !27)
!7277 = !DILocalVariable(name: "bc", scope: !7274, file: !3, line: 3841, type: !6978)
!7278 = !DILocalVariable(name: "ctx", scope: !7274, file: !3, line: 3842, type: !585)
!7279 = !DILocation(line: 3840, column: 42, scope: !7274)
!7280 = !DILocation(line: 3841, column: 44, scope: !7274)
!7281 = !DILocation(line: 3841, column: 31, scope: !7274)
!7282 = !DILocation(line: 3842, column: 5, scope: !7274)
!7283 = !DILocation(line: 3842, column: 20, scope: !7274)
!7284 = !DILocation(line: 3843, column: 9, scope: !7274)
!7285 = !DILocation(line: 3843, column: 15, scope: !7274)
!7286 = !DILocation(line: 3844, column: 9, scope: !7274)
!7287 = !DILocation(line: 3845, column: 22, scope: !7274)
!7288 = !DILocation(line: 3844, column: 16, scope: !7274)
!7289 = !DILocation(line: 3846, column: 9, scope: !7274)
!7290 = !DILocation(line: 3846, column: 24, scope: !7274)
!7291 = !DILocation(line: 3847, column: 9, scope: !7274)
!7292 = !DILocation(line: 3847, column: 42, scope: !7274)
!7293 = !DILocation(line: 3847, column: 50, scope: !7274)
!7294 = !DILocation(line: 3847, column: 5, scope: !7274)
!7295 = !DILocation(line: 3848, column: 5, scope: !7274)
!7296 = !DILocation(line: 3852, column: 9, scope: !7274)
!7297 = !DILocation(line: 3852, column: 29, scope: !7274)
!7298 = !DILocation(line: 3853, column: 1, scope: !7274)
!7299 = distinct !DISubprogram(name: "RM_IsBlockedReplyRequest", scope: !3, file: !3, line: 3857, type: !1457, isLocal: false, isDefinition: true, scopeLine: 3857, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7300)
!7300 = !{!7301}
!7301 = !DILocalVariable(name: "ctx", arg: 1, scope: !7299, file: !3, line: 3857, type: !584)
!7302 = !DILocation(line: 3857, column: 46, scope: !7299)
!7303 = !DILocation(line: 3858, column: 18, scope: !7299)
!7304 = !DILocation(line: 3858, column: 57, scope: !7299)
!7305 = !DILocation(line: 3858, column: 5, scope: !7299)
!7306 = distinct !DISubprogram(name: "RM_IsBlockedTimeoutRequest", scope: !3, file: !3, line: 3863, type: !1457, isLocal: false, isDefinition: true, scopeLine: 3863, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7307)
!7307 = !{!7308}
!7308 = !DILocalVariable(name: "ctx", arg: 1, scope: !7306, file: !3, line: 3863, type: !584)
!7309 = !DILocation(line: 3863, column: 48, scope: !7306)
!7310 = !DILocation(line: 3864, column: 18, scope: !7306)
!7311 = !DILocation(line: 3864, column: 59, scope: !7306)
!7312 = !DILocation(line: 3864, column: 5, scope: !7306)
!7313 = distinct !DISubprogram(name: "RM_GetBlockedClientPrivateData", scope: !3, file: !3, line: 3868, type: !7314, isLocal: false, isDefinition: true, scopeLine: 3868, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!6, !584}
!7316 = !{!7317}
!7317 = !DILocalVariable(name: "ctx", arg: 1, scope: !7313, file: !3, line: 3868, type: !584)
!7318 = !DILocation(line: 3868, column: 54, scope: !7313)
!7319 = !DILocation(line: 3869, column: 17, scope: !7313)
!7320 = !DILocation(line: 3869, column: 5, scope: !7313)
!7321 = distinct !DISubprogram(name: "RM_GetBlockedClientHandle", scope: !3, file: !3, line: 3876, type: !7322, isLocal: false, isDefinition: true, scopeLine: 3876, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7324)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{!6978, !584}
!7324 = !{!7325}
!7325 = !DILocalVariable(name: "ctx", arg: 1, scope: !7321, file: !3, line: 3876, type: !584)
!7326 = !DILocation(line: 3876, column: 69, scope: !7321)
!7327 = !DILocation(line: 3877, column: 17, scope: !7321)
!7328 = !DILocation(line: 3877, column: 5, scope: !7321)
!7329 = distinct !DISubprogram(name: "RM_BlockedClientDisconnected", scope: !3, file: !3, line: 3883, type: !1457, isLocal: false, isDefinition: true, scopeLine: 3883, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7330)
!7330 = !{!7331}
!7331 = !DILocalVariable(name: "ctx", arg: 1, scope: !7329, file: !3, line: 3883, type: !584)
!7332 = !DILocation(line: 3883, column: 50, scope: !7329)
!7333 = !DILocation(line: 3884, column: 18, scope: !7329)
!7334 = !DILocation(line: 3884, column: 64, scope: !7329)
!7335 = !DILocation(line: 3884, column: 5, scope: !7329)
!7336 = distinct !DISubprogram(name: "RM_GetThreadSafeContext", scope: !3, file: !3, line: 3910, type: !7337, isLocal: false, isDefinition: true, scopeLine: 3910, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7339)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{!584, !6978}
!7339 = !{!7340, !7341, !7342}
!7340 = !DILocalVariable(name: "bc", arg: 1, scope: !7336, file: !3, line: 3910, type: !6978)
!7341 = !DILocalVariable(name: "ctx", scope: !7336, file: !3, line: 3911, type: !584)
!7342 = !DILocalVariable(name: "empty", scope: !7336, file: !3, line: 3912, type: !585)
!7343 = !DILocation(line: 3910, column: 67, scope: !7336)
!7344 = !DILocation(line: 3911, column: 27, scope: !7336)
!7345 = !DILocation(line: 3911, column: 21, scope: !7336)
!7346 = !DILocation(line: 3912, column: 5, scope: !7336)
!7347 = !DILocation(line: 3912, column: 20, scope: !7336)
!7348 = !DILocation(line: 3913, column: 5, scope: !7336)
!7349 = !DILocation(line: 3914, column: 9, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 3914, column: 9)
!7351 = !DILocation(line: 3914, column: 9, scope: !7336)
!7352 = !DILocation(line: 3915, column: 14, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3914, column: 13)
!7354 = !DILocation(line: 3915, column: 29, scope: !7353)
!7355 = !DILocation(line: 3916, column: 27, scope: !7353)
!7356 = !DILocation(line: 3916, column: 14, scope: !7353)
!7357 = !DILocation(line: 3916, column: 21, scope: !7353)
!7358 = !DILocation(line: 3917, column: 5, scope: !7353)
!7359 = !DILocation(line: 3918, column: 10, scope: !7336)
!7360 = !DILocation(line: 3918, column: 16, scope: !7336)
!7361 = !DILocation(line: 3923, column: 19, scope: !7336)
!7362 = !DILocation(line: 3923, column: 10, scope: !7336)
!7363 = !DILocation(line: 3923, column: 17, scope: !7336)
!7364 = !DILocation(line: 3924, column: 9, scope: !7336)
!7365 = !DILocation(line: 3925, column: 34, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 3924, column: 13)
!7367 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 3924, column: 9)
!7368 = !DILocation(line: 3925, column: 9, scope: !7366)
!7369 = !DILocation(line: 3926, column: 31, scope: !7366)
!7370 = !DILocation(line: 3926, column: 39, scope: !7366)
!7371 = !DILocation(line: 3926, column: 14, scope: !7366)
!7372 = !DILocation(line: 3926, column: 22, scope: !7366)
!7373 = !DILocation(line: 3926, column: 25, scope: !7366)
!7374 = !DILocation(line: 3927, column: 5, scope: !7366)
!7375 = !DILocation(line: 3929, column: 1, scope: !7336)
!7376 = !DILocation(line: 3928, column: 5, scope: !7336)
!7377 = distinct !DISubprogram(name: "RM_FreeThreadSafeContext", scope: !3, file: !3, line: 3932, type: !880, isLocal: false, isDefinition: true, scopeLine: 3932, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7378)
!7378 = !{!7379}
!7379 = !DILocalVariable(name: "ctx", arg: 1, scope: !7377, file: !3, line: 3932, type: !584)
!7380 = !DILocation(line: 3932, column: 47, scope: !7377)
!7381 = !DILocation(line: 3933, column: 5, scope: !7377)
!7382 = !DILocation(line: 3934, column: 11, scope: !7377)
!7383 = !DILocation(line: 3934, column: 5, scope: !7377)
!7384 = !DILocation(line: 3935, column: 1, scope: !7377)
!7385 = distinct !DISubprogram(name: "RM_ThreadSafeContextLock", scope: !3, file: !3, line: 3940, type: !880, isLocal: false, isDefinition: true, scopeLine: 3940, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7386)
!7386 = !{!7387}
!7387 = !DILocalVariable(name: "ctx", arg: 1, scope: !7385, file: !3, line: 3940, type: !584)
!7388 = !DILocation(line: 3940, column: 47, scope: !7385)
!7389 = !DILocation(line: 3952, column: 5, scope: !7390, inlinedAt: !7391)
!7390 = distinct !DISubprogram(name: "moduleAcquireGIL", scope: !3, file: !3, line: 3951, type: !492, isLocal: false, isDefinition: true, scopeLine: 3951, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7391 = distinct !DILocation(line: 3942, column: 5, scope: !7385)
!7392 = !DILocation(line: 3953, column: 1, scope: !7390, inlinedAt: !7391)
!7393 = !DILocation(line: 3943, column: 1, scope: !7385)
!7394 = !DILocation(line: 3952, column: 5, scope: !7390)
!7395 = !DILocation(line: 3953, column: 1, scope: !7390)
!7396 = distinct !DISubprogram(name: "RM_ThreadSafeContextUnlock", scope: !3, file: !3, line: 3946, type: !880, isLocal: false, isDefinition: true, scopeLine: 3946, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7397)
!7397 = !{!7398}
!7398 = !DILocalVariable(name: "ctx", arg: 1, scope: !7396, file: !3, line: 3946, type: !584)
!7399 = !DILocation(line: 3946, column: 49, scope: !7396)
!7400 = !DILocation(line: 3956, column: 5, scope: !7401, inlinedAt: !7402)
!7401 = distinct !DISubprogram(name: "moduleReleaseGIL", scope: !3, file: !3, line: 3955, type: !492, isLocal: false, isDefinition: true, scopeLine: 3955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7402 = distinct !DILocation(line: 3948, column: 5, scope: !7396)
!7403 = !DILocation(line: 3957, column: 1, scope: !7401, inlinedAt: !7402)
!7404 = !DILocation(line: 3949, column: 1, scope: !7396)
!7405 = !DILocation(line: 3956, column: 5, scope: !7401)
!7406 = !DILocation(line: 3957, column: 1, scope: !7401)
!7407 = distinct !DISubprogram(name: "RM_SubscribeToKeyspaceEvents", scope: !3, file: !3, line: 4013, type: !7408, isLocal: false, isDefinition: true, scopeLine: 4013, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7414)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!17, !584, !17, !7410}
!7410 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleNotificationFunc", file: !3, line: 241, baseType: !7411)
!7411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7412, size: 64)
!7412 = !DISubroutineType(types: !7413)
!7413 = !{!17, !584, !17, !523, !143}
!7414 = !{!7415, !7416, !7417, !7418}
!7415 = !DILocalVariable(name: "ctx", arg: 1, scope: !7407, file: !3, line: 4013, type: !584)
!7416 = !DILocalVariable(name: "types", arg: 2, scope: !7407, file: !3, line: 4013, type: !17)
!7417 = !DILocalVariable(name: "callback", arg: 3, scope: !7407, file: !3, line: 4013, type: !7410)
!7418 = !DILocalVariable(name: "sub", scope: !7407, file: !3, line: 4014, type: !7419)
!7419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7420, size: 64)
!7420 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleKeyspaceSubscriber", file: !3, line: 255, baseType: !7421)
!7421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleKeyspaceSubscriber", file: !3, line: 245, size: 192, elements: !7422)
!7422 = !{!7423, !7424, !7425, !7426}
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7421, file: !3, line: 247, baseType: !577, size: 64)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "notify_callback", scope: !7421, file: !3, line: 249, baseType: !7410, size: 64, offset: 64)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "event_mask", scope: !7421, file: !3, line: 251, baseType: !17, size: 32, offset: 128)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7421, file: !3, line: 254, baseType: !17, size: 32, offset: 160)
!7427 = !DILocation(line: 4013, column: 50, scope: !7407)
!7428 = !DILocation(line: 4013, column: 59, scope: !7407)
!7429 = !DILocation(line: 4013, column: 94, scope: !7407)
!7430 = !DILocation(line: 4014, column: 42, scope: !7407)
!7431 = !DILocation(line: 4014, column: 36, scope: !7407)
!7432 = !DILocation(line: 4015, column: 24, scope: !7407)
!7433 = !DILocation(line: 4015, column: 17, scope: !7407)
!7434 = !{!7435, !892, i64 0}
!7435 = !{!"RedisModuleKeyspaceSubscriber", !892, i64 0, !892, i64 8, !895, i64 16, !895, i64 20}
!7436 = !DILocation(line: 4016, column: 10, scope: !7407)
!7437 = !DILocation(line: 4016, column: 21, scope: !7407)
!7438 = !{!7435, !895, i64 16}
!7439 = !DILocation(line: 4017, column: 10, scope: !7407)
!7440 = !DILocation(line: 4017, column: 26, scope: !7407)
!7441 = !{!7435, !892, i64 8}
!7442 = !DILocation(line: 4018, column: 10, scope: !7407)
!7443 = !DILocation(line: 4018, column: 17, scope: !7407)
!7444 = !{!7435, !895, i64 20}
!7445 = !DILocation(line: 4020, column: 21, scope: !7407)
!7446 = !DILocation(line: 4020, column: 5, scope: !7407)
!7447 = !DILocation(line: 4021, column: 5, scope: !7407)
!7448 = distinct !DISubprogram(name: "moduleNotifyKeyspaceEvent", scope: !3, file: !3, line: 4027, type: !7449, isLocal: false, isDefinition: true, scopeLine: 4027, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7451)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{null, !17, !523, !143, !17}
!7451 = !{!7452, !7453, !7454, !7455, !7456, !7457, !7458, !7460}
!7452 = !DILocalVariable(name: "type", arg: 1, scope: !7448, file: !3, line: 4027, type: !17)
!7453 = !DILocalVariable(name: "event", arg: 2, scope: !7448, file: !3, line: 4027, type: !523)
!7454 = !DILocalVariable(name: "key", arg: 3, scope: !7448, file: !3, line: 4027, type: !143)
!7455 = !DILocalVariable(name: "dbid", arg: 4, scope: !7448, file: !3, line: 4027, type: !17)
!7456 = !DILocalVariable(name: "li", scope: !7448, file: !3, line: 4031, type: !759)
!7457 = !DILocalVariable(name: "ln", scope: !7448, file: !3, line: 4032, type: !120)
!7458 = !DILocalVariable(name: "sub", scope: !7459, file: !3, line: 4039, type: !7419)
!7459 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 4038, column: 33)
!7460 = !DILocalVariable(name: "ctx", scope: !7461, file: !3, line: 4043, type: !585)
!7461 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 4042, column: 59)
!7462 = distinct !DILexicalBlock(scope: !7459, file: !3, line: 4042, column: 13)
!7463 = !DILocation(line: 4027, column: 36, scope: !7448)
!7464 = !DILocation(line: 4027, column: 54, scope: !7448)
!7465 = !DILocation(line: 4027, column: 67, scope: !7448)
!7466 = !DILocation(line: 4027, column: 76, scope: !7448)
!7467 = !DILocation(line: 4029, column: 9, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 4029, column: 9)
!7469 = !DILocation(line: 4029, column: 47, scope: !7468)
!7470 = !DILocation(line: 4029, column: 9, scope: !7448)
!7471 = !DILocation(line: 4031, column: 5, scope: !7448)
!7472 = !DILocation(line: 4031, column: 14, scope: !7448)
!7473 = !DILocation(line: 4033, column: 5, scope: !7448)
!7474 = !DILocation(line: 4036, column: 10, scope: !7448)
!7475 = !DILocation(line: 4038, column: 5, scope: !7448)
!7476 = !DILocation(line: 4038, column: 17, scope: !7448)
!7477 = !DILocation(line: 4032, column: 15, scope: !7448)
!7478 = !DILocation(line: 4039, column: 50, scope: !7459)
!7479 = !DILocation(line: 4039, column: 40, scope: !7459)
!7480 = !DILocation(line: 4042, column: 19, scope: !7462)
!7481 = !DILocation(line: 4042, column: 30, scope: !7462)
!7482 = !DILocation(line: 4042, column: 38, scope: !7462)
!7483 = !DILocation(line: 4042, column: 46, scope: !7462)
!7484 = !DILocation(line: 4042, column: 53, scope: !7462)
!7485 = !DILocation(line: 4042, column: 13, scope: !7459)
!7486 = !DILocation(line: 4043, column: 13, scope: !7461)
!7487 = !DILocation(line: 4043, column: 28, scope: !7461)
!7488 = !DILocation(line: 4044, column: 31, scope: !7461)
!7489 = !DILocation(line: 4044, column: 24, scope: !7461)
!7490 = !DILocation(line: 4045, column: 26, scope: !7461)
!7491 = !DILocation(line: 4045, column: 24, scope: !7461)
!7492 = !DILocation(line: 4046, column: 13, scope: !7461)
!7493 = !DILocation(line: 4051, column: 25, scope: !7461)
!7494 = !DILocation(line: 4052, column: 18, scope: !7461)
!7495 = !DILocation(line: 4052, column: 13, scope: !7461)
!7496 = !DILocation(line: 4053, column: 25, scope: !7461)
!7497 = !DILocation(line: 4054, column: 13, scope: !7461)
!7498 = !DILocation(line: 4055, column: 9, scope: !7462)
!7499 = !DILocation(line: 4055, column: 9, scope: !7461)
!7500 = distinct !{!7500, !7475, !7501}
!7501 = !DILocation(line: 4056, column: 5, scope: !7448)
!7502 = !DILocation(line: 4057, column: 1, scope: !7448)
!7503 = distinct !DISubprogram(name: "moduleUnsubscribeNotifications", scope: !3, file: !3, line: 4060, type: !7504, isLocal: false, isDefinition: true, scopeLine: 4060, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7506)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{null, !577}
!7506 = !{!7507, !7508, !7509, !7510}
!7507 = !DILocalVariable(name: "module", arg: 1, scope: !7503, file: !3, line: 4060, type: !577)
!7508 = !DILocalVariable(name: "li", scope: !7503, file: !3, line: 4061, type: !759)
!7509 = !DILocalVariable(name: "ln", scope: !7503, file: !3, line: 4062, type: !120)
!7510 = !DILocalVariable(name: "sub", scope: !7511, file: !3, line: 4065, type: !7419)
!7511 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 4064, column: 33)
!7512 = !DILocation(line: 4060, column: 50, scope: !7503)
!7513 = !DILocation(line: 4061, column: 5, scope: !7503)
!7514 = !DILocation(line: 4063, column: 16, scope: !7503)
!7515 = !DILocation(line: 4061, column: 14, scope: !7503)
!7516 = !DILocation(line: 4063, column: 5, scope: !7503)
!7517 = !DILocation(line: 4064, column: 5, scope: !7503)
!7518 = !DILocation(line: 4064, column: 17, scope: !7503)
!7519 = !DILocation(line: 4062, column: 15, scope: !7503)
!7520 = !DILocation(line: 4065, column: 50, scope: !7511)
!7521 = !DILocation(line: 4065, column: 40, scope: !7511)
!7522 = !DILocation(line: 4066, column: 18, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 4066, column: 13)
!7524 = !DILocation(line: 4066, column: 25, scope: !7523)
!7525 = !DILocation(line: 4066, column: 13, scope: !7511)
!7526 = !DILocation(line: 4067, column: 25, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 4066, column: 36)
!7528 = !DILocation(line: 4067, column: 13, scope: !7527)
!7529 = !DILocation(line: 4068, column: 13, scope: !7527)
!7530 = !DILocation(line: 4069, column: 9, scope: !7527)
!7531 = distinct !{!7531, !7517, !7532}
!7532 = !DILocation(line: 4070, column: 5, scope: !7503)
!7533 = !DILocation(line: 4071, column: 1, scope: !7503)
!7534 = distinct !DISubprogram(name: "moduleCallClusterReceivers", scope: !3, file: !3, line: 4102, type: !7535, isLocal: false, isDefinition: true, scopeLine: 4102, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7537)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{null, !523, !32, !703, !797, !618}
!7537 = !{!7538, !7539, !7540, !7541, !7542, !7543, !7544}
!7538 = !DILocalVariable(name: "sender_id", arg: 1, scope: !7534, file: !3, line: 4102, type: !523)
!7539 = !DILocalVariable(name: "module_id", arg: 2, scope: !7534, file: !3, line: 4102, type: !32)
!7540 = !DILocalVariable(name: "type", arg: 3, scope: !7534, file: !3, line: 4102, type: !703)
!7541 = !DILocalVariable(name: "payload", arg: 4, scope: !7534, file: !3, line: 4102, type: !797)
!7542 = !DILocalVariable(name: "len", arg: 5, scope: !7534, file: !3, line: 4102, type: !618)
!7543 = !DILocalVariable(name: "r", scope: !7534, file: !3, line: 4103, type: !787)
!7544 = !DILocalVariable(name: "ctx", scope: !7545, file: !3, line: 4106, type: !585)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 4105, column: 40)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 4105, column: 13)
!7547 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 4104, column: 14)
!7548 = !DILocation(line: 4102, column: 45, scope: !7534)
!7549 = !DILocation(line: 4102, column: 65, scope: !7534)
!7550 = !DILocation(line: 4102, column: 84, scope: !7534)
!7551 = !DILocation(line: 4102, column: 111, scope: !7534)
!7552 = !DILocation(line: 4102, column: 129, scope: !7534)
!7553 = !DILocation(line: 4103, column: 32, scope: !7534)
!7554 = !DILocation(line: 4103, column: 28, scope: !7534)
!7555 = !DILocation(line: 4104, column: 5, scope: !7534)
!7556 = !DILocation(line: 4105, column: 16, scope: !7546)
!7557 = !{!7558, !1051, i64 0}
!7558 = !{!"moduleClusterReceiver", !1051, i64 0, !892, i64 8, !892, i64 16, !892, i64 24}
!7559 = !DILocation(line: 4105, column: 26, scope: !7546)
!7560 = !DILocation(line: 4105, column: 13, scope: !7547)
!7561 = !DILocation(line: 4106, column: 13, scope: !7545)
!7562 = !DILocation(line: 4106, column: 28, scope: !7545)
!7563 = !DILocation(line: 4107, column: 29, scope: !7545)
!7564 = !{!7558, !892, i64 16}
!7565 = !DILocation(line: 4107, column: 17, scope: !7545)
!7566 = !DILocation(line: 4107, column: 24, scope: !7545)
!7567 = !DILocation(line: 4108, column: 26, scope: !7545)
!7568 = !DILocation(line: 4108, column: 17, scope: !7545)
!7569 = !DILocation(line: 4108, column: 24, scope: !7545)
!7570 = !DILocation(line: 4109, column: 13, scope: !7545)
!7571 = !DILocation(line: 4110, column: 16, scope: !7545)
!7572 = !{!7558, !892, i64 8}
!7573 = !DILocation(line: 4110, column: 13, scope: !7545)
!7574 = !DILocation(line: 4111, column: 13, scope: !7545)
!7575 = !DILocation(line: 4113, column: 9, scope: !7546)
!7576 = !DILocation(line: 4114, column: 16, scope: !7547)
!7577 = !{!7558, !892, i64 24}
!7578 = distinct !{!7578, !7555, !7579}
!7579 = !DILocation(line: 4115, column: 5, scope: !7534)
!7580 = !DILocation(line: 4116, column: 1, scope: !7534)
!7581 = distinct !DISubprogram(name: "RM_RegisterClusterMessageReceiver", scope: !3, file: !3, line: 4123, type: !7582, isLocal: false, isDefinition: true, scopeLine: 4123, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7584)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{null, !584, !703, !793}
!7584 = !{!7585, !7586, !7587, !7588, !7589, !7590}
!7585 = !DILocalVariable(name: "ctx", arg: 1, scope: !7581, file: !3, line: 4123, type: !584)
!7586 = !DILocalVariable(name: "type", arg: 2, scope: !7581, file: !3, line: 4123, type: !703)
!7587 = !DILocalVariable(name: "callback", arg: 3, scope: !7581, file: !3, line: 4123, type: !793)
!7588 = !DILocalVariable(name: "module_id", scope: !7581, file: !3, line: 4126, type: !32)
!7589 = !DILocalVariable(name: "r", scope: !7581, file: !3, line: 4127, type: !787)
!7590 = !DILocalVariable(name: "prev", scope: !7581, file: !3, line: 4127, type: !787)
!7591 = !DILocation(line: 4123, column: 56, scope: !7581)
!7592 = !DILocation(line: 4123, column: 69, scope: !7581)
!7593 = !DILocation(line: 4123, column: 109, scope: !7581)
!7594 = !DILocation(line: 4124, column: 17, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 4124, column: 9)
!7596 = !DILocation(line: 4124, column: 10, scope: !7595)
!7597 = !DILocation(line: 4124, column: 9, scope: !7581)
!7598 = !DILocation(line: 4126, column: 50, scope: !7581)
!7599 = !DILocation(line: 4126, column: 58, scope: !7581)
!7600 = !DILocation(line: 4126, column: 26, scope: !7581)
!7601 = !DILocation(line: 4126, column: 14, scope: !7581)
!7602 = !DILocation(line: 4127, column: 32, scope: !7581)
!7603 = !DILocation(line: 4127, column: 28, scope: !7581)
!7604 = !DILocation(line: 4127, column: 57, scope: !7581)
!7605 = !DILocation(line: 4128, column: 5, scope: !7581)
!7606 = !DILocation(line: 4129, column: 16, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 4129, column: 13)
!7608 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 4128, column: 14)
!7609 = !DILocation(line: 4129, column: 26, scope: !7607)
!7610 = !DILocation(line: 4129, column: 13, scope: !7608)
!7611 = distinct !{!7611, !7605, !7612}
!7612 = !DILocation(line: 4147, column: 5, scope: !7581)
!7613 = !DILocation(line: 4131, column: 17, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 4131, column: 17)
!7615 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 4129, column: 40)
!7616 = !DILocation(line: 4131, column: 17, scope: !7615)
!7617 = !DILocation(line: 4132, column: 20, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 4131, column: 27)
!7619 = !DILocation(line: 4132, column: 29, scope: !7618)
!7620 = !DILocation(line: 4133, column: 13, scope: !7618)
!7621 = !DILocation(line: 0, scope: !7608)
!7622 = !DILocation(line: 4137, column: 21, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 4137, column: 21)
!7624 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 4133, column: 20)
!7625 = !DILocation(line: 0, scope: !7623)
!7626 = !DILocation(line: 4137, column: 21, scope: !7624)
!7627 = !DILocation(line: 4141, column: 17, scope: !7624)
!7628 = !DILocation(line: 4146, column: 16, scope: !7608)
!7629 = !DILocation(line: 4150, column: 9, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 4150, column: 9)
!7631 = !DILocation(line: 4150, column: 9, scope: !7581)
!7632 = !DILocation(line: 4151, column: 13, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 4150, column: 19)
!7634 = !DILocation(line: 4152, column: 12, scope: !7633)
!7635 = !DILocation(line: 4152, column: 22, scope: !7633)
!7636 = !DILocation(line: 4153, column: 26, scope: !7633)
!7637 = !DILocation(line: 4153, column: 12, scope: !7633)
!7638 = !DILocation(line: 4153, column: 19, scope: !7633)
!7639 = !DILocation(line: 4154, column: 12, scope: !7633)
!7640 = !DILocation(line: 4154, column: 21, scope: !7633)
!7641 = !DILocation(line: 4155, column: 19, scope: !7633)
!7642 = !DILocation(line: 4155, column: 12, scope: !7633)
!7643 = !DILocation(line: 4155, column: 17, scope: !7633)
!7644 = !DILocation(line: 4156, column: 32, scope: !7633)
!7645 = !DILocation(line: 4157, column: 5, scope: !7633)
!7646 = !DILocation(line: 0, scope: !7615)
!7647 = !DILocation(line: 4158, column: 1, scope: !7581)
!7648 = distinct !DISubprogram(name: "RM_SendClusterMessage", scope: !3, file: !3, line: 4167, type: !7649, isLocal: false, isDefinition: true, scopeLine: 4167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7651)
!7649 = !DISubroutineType(types: !7650)
!7650 = !{!17, !584, !9, !703, !346, !618}
!7651 = !{!7652, !7653, !7654, !7655, !7656, !7657}
!7652 = !DILocalVariable(name: "ctx", arg: 1, scope: !7648, file: !3, line: 4167, type: !584)
!7653 = !DILocalVariable(name: "target_id", arg: 2, scope: !7648, file: !3, line: 4167, type: !9)
!7654 = !DILocalVariable(name: "type", arg: 3, scope: !7648, file: !3, line: 4167, type: !703)
!7655 = !DILocalVariable(name: "msg", arg: 4, scope: !7648, file: !3, line: 4167, type: !346)
!7656 = !DILocalVariable(name: "len", arg: 5, scope: !7648, file: !3, line: 4167, type: !618)
!7657 = !DILocalVariable(name: "module_id", scope: !7648, file: !3, line: 4169, type: !32)
!7658 = !DILocation(line: 4167, column: 43, scope: !7648)
!7659 = !DILocation(line: 4167, column: 54, scope: !7648)
!7660 = !DILocation(line: 4167, column: 73, scope: !7648)
!7661 = !DILocation(line: 4167, column: 94, scope: !7648)
!7662 = !DILocation(line: 4167, column: 108, scope: !7648)
!7663 = !DILocation(line: 4168, column: 17, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 4168, column: 9)
!7665 = !DILocation(line: 4168, column: 10, scope: !7664)
!7666 = !DILocation(line: 4168, column: 9, scope: !7648)
!7667 = !DILocation(line: 4169, column: 50, scope: !7648)
!7668 = !DILocation(line: 4169, column: 58, scope: !7648)
!7669 = !DILocation(line: 4169, column: 26, scope: !7648)
!7670 = !DILocation(line: 4169, column: 14, scope: !7648)
!7671 = !DILocation(line: 4170, column: 9, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 4170, column: 9)
!7673 = !DILocation(line: 4170, column: 76, scope: !7672)
!7674 = !DILocation(line: 4170, column: 9, scope: !7648)
!7675 = !DILocation(line: 0, scope: !7672)
!7676 = !DILocation(line: 4171, column: 9, scope: !7672)
!7677 = !DILocation(line: 0, scope: !7664)
!7678 = !DILocation(line: 4174, column: 1, scope: !7648)
!7679 = distinct !DISubprogram(name: "RM_GetClusterNodesList", scope: !3, file: !3, line: 4198, type: !7680, isLocal: false, isDefinition: true, scopeLine: 4198, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7683)
!7680 = !DISubroutineType(types: !7681)
!7681 = !{!7682, !584, !2145}
!7682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!7683 = !{!7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691}
!7684 = !DILocalVariable(name: "ctx", arg: 1, scope: !7679, file: !3, line: 4198, type: !584)
!7685 = !DILocalVariable(name: "numnodes", arg: 2, scope: !7679, file: !3, line: 4198, type: !2145)
!7686 = !DILocalVariable(name: "count", scope: !7679, file: !3, line: 4202, type: !157)
!7687 = !DILocalVariable(name: "ids", scope: !7679, file: !3, line: 4203, type: !7682)
!7688 = !DILocalVariable(name: "di", scope: !7679, file: !3, line: 4204, type: !744)
!7689 = !DILocalVariable(name: "de", scope: !7679, file: !3, line: 4205, type: !81)
!7690 = !DILocalVariable(name: "j", scope: !7679, file: !3, line: 4206, type: !17)
!7691 = !DILocalVariable(name: "node", scope: !7692, file: !3, line: 4208, type: !7693)
!7692 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 4207, column: 40)
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7694, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNode", file: !7695, line: 141, baseType: !7696)
!7695 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.h", directory: "/root/.unikraft/apps/redis/build")
!7696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNode", file: !7695, line: 116, size: 18112, elements: !7697)
!7697 = !{!7698, !7699, !7703, !7704, !7705, !7709, !7710, !7711, !7714, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7735}
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7696, file: !7695, line: 117, baseType: !229, size: 64)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7696, file: !7695, line: 118, baseType: !7700, size: 320, offset: 64)
!7700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 320, elements: !7701)
!7701 = !{!7702}
!7702 = !DISubrange(count: 40)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7696, file: !7695, line: 119, baseType: !17, size: 32, offset: 384)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !7696, file: !7695, line: 120, baseType: !32, size: 64, offset: 448)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7696, file: !7695, line: 121, baseType: !7706, size: 16384, offset: 512)
!7706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 16384, elements: !7707)
!7707 = !{!7708}
!7708 = !DISubrange(count: 2048)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "numslots", scope: !7696, file: !7695, line: 122, baseType: !17, size: 32, offset: 16896)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "numslaves", scope: !7696, file: !7695, line: 123, baseType: !17, size: 32, offset: 16928)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !7696, file: !7695, line: 124, baseType: !7712, size: 64, offset: 16960)
!7712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7713, size: 64)
!7713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7696, size: 64)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !7696, file: !7695, line: 125, baseType: !7713, size: 64, offset: 17024)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !7696, file: !7695, line: 129, baseType: !229, size: 64, offset: 17088)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !7696, file: !7695, line: 130, baseType: !229, size: 64, offset: 17152)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "fail_time", scope: !7696, file: !7695, line: 131, baseType: !229, size: 64, offset: 17216)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "voted_time", scope: !7696, file: !7695, line: 132, baseType: !229, size: 64, offset: 17280)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset_time", scope: !7696, file: !7695, line: 133, baseType: !229, size: 64, offset: 17344)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "orphaned_time", scope: !7696, file: !7695, line: 134, baseType: !229, size: 64, offset: 17408)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !7696, file: !7695, line: 135, baseType: !112, size: 64, offset: 17472)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7696, file: !7695, line: 136, baseType: !203, size: 368, offset: 17536)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7696, file: !7695, line: 137, baseType: !17, size: 32, offset: 17920)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !7696, file: !7695, line: 138, baseType: !17, size: 32, offset: 17952)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7696, file: !7695, line: 139, baseType: !7726, size: 64, offset: 17984)
!7726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7727, size: 64)
!7727 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterLink", file: !7695, line: 47, baseType: !7728)
!7728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterLink", file: !7695, line: 41, size: 320, elements: !7729)
!7729 = !{!7730, !7731, !7732, !7733, !7734}
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7728, file: !7695, line: 42, baseType: !229, size: 64)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7728, file: !7695, line: 43, baseType: !17, size: 32, offset: 64)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf", scope: !7728, file: !7695, line: 44, baseType: !154, size: 64, offset: 128)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "rcvbuf", scope: !7728, file: !7695, line: 45, baseType: !154, size: 64, offset: 192)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7728, file: !7695, line: 46, baseType: !7713, size: 64, offset: 256)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "fail_reports", scope: !7696, file: !7695, line: 140, baseType: !114, size: 64, offset: 18048)
!7736 = !DILocation(line: 4198, column: 47, scope: !7679)
!7737 = !DILocation(line: 4198, column: 60, scope: !7679)
!7738 = !DILocation(line: 4201, column: 17, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 4201, column: 9)
!7740 = !DILocation(line: 4201, column: 10, scope: !7739)
!7741 = !DILocation(line: 4201, column: 9, scope: !7679)
!7742 = !DILocation(line: 4202, column: 20, scope: !7679)
!7743 = !{!5564, !892, i64 24}
!7744 = !{!7745, !1051, i64 24}
!7745 = !{!"dictht", !892, i64 0, !1051, i64 8, !1051, i64 16, !1051, i64 24}
!7746 = !DILocation(line: 4202, column: 12, scope: !7679)
!7747 = !DILocation(line: 4203, column: 35, scope: !7679)
!7748 = !DILocation(line: 4203, column: 18, scope: !7679)
!7749 = !DILocation(line: 4203, column: 12, scope: !7679)
!7750 = !DILocation(line: 4204, column: 47, scope: !7679)
!7751 = !DILocation(line: 4204, column: 56, scope: !7679)
!7752 = !DILocation(line: 4204, column: 24, scope: !7679)
!7753 = !DILocation(line: 4204, column: 19, scope: !7679)
!7754 = !DILocation(line: 4206, column: 9, scope: !7679)
!7755 = !DILocation(line: 4207, column: 5, scope: !7679)
!7756 = !DILocation(line: 4207, column: 17, scope: !7679)
!7757 = !DILocation(line: 4205, column: 16, scope: !7679)
!7758 = !DILocation(line: 4207, column: 31, scope: !7679)
!7759 = !DILocation(line: 4208, column: 29, scope: !7692)
!7760 = !DILocation(line: 4208, column: 22, scope: !7692)
!7761 = !DILocation(line: 4209, column: 19, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4209, column: 13)
!7763 = !{!7764, !895, i64 48}
!7764 = !{!"clusterNode", !1052, i64 0, !893, i64 8, !895, i64 48, !1051, i64 56, !893, i64 64, !895, i64 2112, !895, i64 2116, !892, i64 2120, !892, i64 2128, !1052, i64 2136, !1052, i64 2144, !1052, i64 2152, !1052, i64 2160, !1052, i64 2168, !1052, i64 2176, !1052, i64 2184, !893, i64 2192, !895, i64 2240, !895, i64 2244, !892, i64 2248, !892, i64 2256}
!7765 = !DILocation(line: 4209, column: 25, scope: !7762)
!7766 = !DILocation(line: 4209, column: 13, scope: !7692)
!7767 = distinct !{!7767, !7755, !7768}
!7768 = !DILocation(line: 4213, column: 5, scope: !7679)
!7769 = !DILocation(line: 4210, column: 18, scope: !7692)
!7770 = !DILocation(line: 4210, column: 9, scope: !7692)
!7771 = !DILocation(line: 4210, column: 16, scope: !7692)
!7772 = !DILocation(line: 4211, column: 23, scope: !7692)
!7773 = !DILocation(line: 4211, column: 9, scope: !7692)
!7774 = !DILocation(line: 4212, column: 10, scope: !7692)
!7775 = !DILocation(line: 0, scope: !7692)
!7776 = !DILocation(line: 0, scope: !7762)
!7777 = !DILocation(line: 4214, column: 17, scope: !7679)
!7778 = !DILocation(line: 4214, column: 15, scope: !7679)
!7779 = !DILocation(line: 4215, column: 5, scope: !7679)
!7780 = !DILocation(line: 4215, column: 12, scope: !7679)
!7781 = !DILocation(line: 4217, column: 5, scope: !7679)
!7782 = !DILocation(line: 0, scope: !7739)
!7783 = !DILocation(line: 4219, column: 1, scope: !7679)
!7784 = distinct !DISubprogram(name: "RM_FreeClusterNodesList", scope: !3, file: !3, line: 4222, type: !7785, isLocal: false, isDefinition: true, scopeLine: 4222, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7787)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{null, !7682}
!7787 = !{!7788, !7789}
!7788 = !DILocalVariable(name: "ids", arg: 1, scope: !7784, file: !3, line: 4222, type: !7682)
!7789 = !DILocalVariable(name: "j", scope: !7790, file: !3, line: 4224, type: !17)
!7790 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 4224, column: 5)
!7791 = !DILocation(line: 4222, column: 37, scope: !7784)
!7792 = !DILocation(line: 4223, column: 13, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 4223, column: 9)
!7794 = !DILocation(line: 4223, column: 9, scope: !7784)
!7795 = !DILocation(line: 4224, column: 14, scope: !7790)
!7796 = !DILocation(line: 4224, column: 10, scope: !7790)
!7797 = !DILocation(line: 4224, column: 21, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 4224, column: 5)
!7799 = !DILocation(line: 4224, column: 5, scope: !7790)
!7800 = !DILocation(line: 4225, column: 11, scope: !7784)
!7801 = !DILocation(line: 4225, column: 5, scope: !7784)
!7802 = !DILocation(line: 4226, column: 1, scope: !7784)
!7803 = !DILocation(line: 4224, column: 34, scope: !7798)
!7804 = !DILocation(line: 4224, column: 30, scope: !7798)
!7805 = !DILocation(line: 4224, column: 5, scope: !7798)
!7806 = distinct !{!7806, !7799, !7807}
!7807 = !DILocation(line: 4224, column: 46, scope: !7790)
!7808 = distinct !DISubprogram(name: "RM_GetMyClusterID", scope: !3, file: !3, line: 4230, type: !7809, isLocal: false, isDefinition: true, scopeLine: 4230, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{!523}
!7811 = !DILocation(line: 4231, column: 17, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4231, column: 9)
!7813 = !DILocation(line: 4231, column: 10, scope: !7812)
!7814 = !DILocation(line: 4231, column: 9, scope: !7808)
!7815 = !DILocation(line: 4232, column: 19, scope: !7808)
!7816 = !DILocation(line: 4232, column: 28, scope: !7808)
!7817 = !DILocation(line: 4232, column: 12, scope: !7808)
!7818 = !DILocation(line: 4232, column: 5, scope: !7808)
!7819 = !DILocation(line: 0, scope: !7812)
!7820 = !DILocation(line: 4233, column: 1, scope: !7808)
!7821 = distinct !DISubprogram(name: "RM_GetClusterSize", scope: !3, file: !3, line: 4239, type: !7822, isLocal: false, isDefinition: true, scopeLine: 4239, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!157}
!7824 = !DILocation(line: 4240, column: 17, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 4240, column: 9)
!7826 = !DILocation(line: 4240, column: 10, scope: !7825)
!7827 = !DILocation(line: 4240, column: 9, scope: !7821)
!7828 = !DILocation(line: 4241, column: 12, scope: !7821)
!7829 = !DILocation(line: 4241, column: 5, scope: !7821)
!7830 = !DILocation(line: 0, scope: !7825)
!7831 = !DILocation(line: 4242, column: 1, scope: !7821)
!7832 = distinct !DISubprogram(name: "RM_GetClusterNodeInfo", scope: !3, file: !3, line: 4266, type: !7833, isLocal: false, isDefinition: true, scopeLine: 4266, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7835)
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!17, !584, !523, !9, !9, !16, !16}
!7835 = !{!7836, !7837, !7838, !7839, !7840, !7841, !7842}
!7836 = !DILocalVariable(name: "ctx", arg: 1, scope: !7832, file: !3, line: 4266, type: !584)
!7837 = !DILocalVariable(name: "id", arg: 2, scope: !7832, file: !3, line: 4266, type: !523)
!7838 = !DILocalVariable(name: "ip", arg: 3, scope: !7832, file: !3, line: 4266, type: !9)
!7839 = !DILocalVariable(name: "master_id", arg: 4, scope: !7832, file: !3, line: 4266, type: !9)
!7840 = !DILocalVariable(name: "port", arg: 5, scope: !7832, file: !3, line: 4266, type: !16)
!7841 = !DILocalVariable(name: "flags", arg: 6, scope: !7832, file: !3, line: 4266, type: !16)
!7842 = !DILocalVariable(name: "node", scope: !7832, file: !3, line: 4269, type: !7693)
!7843 = !DILocation(line: 4266, column: 43, scope: !7832)
!7844 = !DILocation(line: 4266, column: 60, scope: !7832)
!7845 = !DILocation(line: 4266, column: 70, scope: !7832)
!7846 = !DILocation(line: 4266, column: 80, scope: !7832)
!7847 = !DILocation(line: 4266, column: 96, scope: !7832)
!7848 = !DILocation(line: 4266, column: 107, scope: !7832)
!7849 = !DILocation(line: 4269, column: 25, scope: !7832)
!7850 = !DILocation(line: 4269, column: 18, scope: !7832)
!7851 = !DILocation(line: 4270, column: 15, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4270, column: 9)
!7853 = !DILocation(line: 4270, column: 21, scope: !7852)
!7854 = !DILocation(line: 4270, column: 9, scope: !7832)
!7855 = !DILocation(line: 4273, column: 9, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4273, column: 9)
!7857 = !DILocation(line: 4273, column: 9, scope: !7832)
!7858 = !DILocation(line: 4273, column: 23, scope: !7856)
!7859 = !DILocation(line: 4273, column: 13, scope: !7856)
!7860 = !DILocation(line: 4275, column: 9, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4275, column: 9)
!7862 = !DILocation(line: 4275, column: 9, scope: !7832)
!7863 = !DILocation(line: 4279, column: 19, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 4279, column: 13)
!7865 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 4275, column: 20)
!7866 = !DILocation(line: 4279, column: 25, scope: !7864)
!7867 = !DILocation(line: 4279, column: 47, scope: !7864)
!7868 = !DILocation(line: 4279, column: 56, scope: !7864)
!7869 = !{!7764, !892, i64 2128}
!7870 = !DILocation(line: 4279, column: 50, scope: !7864)
!7871 = !DILocation(line: 4279, column: 13, scope: !7865)
!7872 = !DILocation(line: 4280, column: 30, scope: !7864)
!7873 = !DILocation(line: 4280, column: 13, scope: !7864)
!7874 = !DILocation(line: 4282, column: 13, scope: !7864)
!7875 = !DILocation(line: 4284, column: 9, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4284, column: 9)
!7877 = !DILocation(line: 4284, column: 9, scope: !7832)
!7878 = !DILocation(line: 4284, column: 29, scope: !7876)
!7879 = !{!7764, !895, i64 2240}
!7880 = !DILocation(line: 4284, column: 21, scope: !7876)
!7881 = !DILocation(line: 4284, column: 15, scope: !7876)
!7882 = !DILocation(line: 4288, column: 9, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 4288, column: 9)
!7884 = !DILocation(line: 4288, column: 9, scope: !7832)
!7885 = !DILocation(line: 4289, column: 16, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 4288, column: 16)
!7887 = !DILocation(line: 4290, column: 19, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4290, column: 13)
!7889 = !DILocation(line: 4290, column: 25, scope: !7888)
!7890 = !DILocation(line: 4290, column: 13, scope: !7886)
!7891 = !DILocation(line: 4290, column: 55, scope: !7888)
!7892 = !DILocation(line: 4290, column: 48, scope: !7888)
!7893 = !DILocation(line: 4291, column: 19, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4291, column: 13)
!7895 = !DILocation(line: 4291, column: 25, scope: !7894)
!7896 = !DILocation(line: 4291, column: 13, scope: !7886)
!7897 = !DILocation(line: 4291, column: 55, scope: !7894)
!7898 = !DILocation(line: 4291, column: 48, scope: !7894)
!7899 = !DILocation(line: 4292, column: 19, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4292, column: 13)
!7901 = !DILocation(line: 4292, column: 25, scope: !7900)
!7902 = !DILocation(line: 4292, column: 13, scope: !7886)
!7903 = !DILocation(line: 4292, column: 54, scope: !7900)
!7904 = !DILocation(line: 4292, column: 47, scope: !7900)
!7905 = !DILocation(line: 4293, column: 19, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4293, column: 13)
!7907 = !DILocation(line: 4293, column: 25, scope: !7906)
!7908 = !DILocation(line: 4293, column: 13, scope: !7886)
!7909 = !DILocation(line: 4293, column: 54, scope: !7906)
!7910 = !DILocation(line: 4293, column: 47, scope: !7906)
!7911 = !DILocation(line: 4294, column: 19, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4294, column: 13)
!7913 = !DILocation(line: 4294, column: 25, scope: !7912)
!7914 = !DILocation(line: 4294, column: 13, scope: !7886)
!7915 = !DILocation(line: 4294, column: 53, scope: !7912)
!7916 = !DILocation(line: 4294, column: 46, scope: !7912)
!7917 = !DILocation(line: 4295, column: 19, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 4295, column: 13)
!7919 = !DILocation(line: 4295, column: 25, scope: !7918)
!7920 = !DILocation(line: 4295, column: 13, scope: !7886)
!7921 = !DILocation(line: 4295, column: 59, scope: !7918)
!7922 = !DILocation(line: 4295, column: 52, scope: !7918)
!7923 = !DILocation(line: 0, scope: !7832)
!7924 = !DILocation(line: 0, scope: !7852)
!7925 = !DILocation(line: 4298, column: 1, scope: !7832)
!7926 = distinct !DISubprogram(name: "RM_SetClusterFlags", scope: !3, file: !3, line: 4318, type: !7927, isLocal: false, isDefinition: true, scopeLine: 4318, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7929)
!7927 = !DISubroutineType(types: !7928)
!7928 = !{null, !584, !32}
!7929 = !{!7930, !7931}
!7930 = !DILocalVariable(name: "ctx", arg: 1, scope: !7926, file: !3, line: 4318, type: !584)
!7931 = !DILocalVariable(name: "flags", arg: 2, scope: !7926, file: !3, line: 4318, type: !32)
!7932 = !DILocation(line: 4318, column: 41, scope: !7926)
!7933 = !DILocation(line: 4318, column: 55, scope: !7926)
!7934 = !DILocation(line: 4320, column: 15, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 4320, column: 9)
!7936 = !DILocation(line: 4320, column: 9, scope: !7926)
!7937 = !DILocation(line: 4321, column: 37, scope: !7935)
!7938 = !{!1050, !895, i64 2984}
!7939 = !DILocation(line: 4321, column: 9, scope: !7935)
!7940 = !DILocation(line: 4322, column: 15, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 4322, column: 9)
!7942 = !DILocation(line: 4322, column: 9, scope: !7926)
!7943 = !DILocation(line: 4323, column: 37, scope: !7941)
!7944 = !DILocation(line: 4323, column: 9, scope: !7941)
!7945 = !DILocation(line: 4324, column: 1, scope: !7926)
!7946 = distinct !DISubprogram(name: "moduleTimerHandler", scope: !3, file: !3, line: 4360, type: !6945, isLocal: false, isDefinition: true, scopeLine: 4360, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7947)
!7947 = !{!7948, !7949, !7950, !7951, !7981, !7982, !7983, !7985, !7997}
!7948 = !DILocalVariable(name: "eventLoop", arg: 1, scope: !7946, file: !3, line: 4360, type: !6924)
!7949 = !DILocalVariable(name: "id", arg: 2, scope: !7946, file: !3, line: 4360, type: !112)
!7950 = !DILocalVariable(name: "clientData", arg: 3, scope: !7946, file: !3, line: 4360, type: !6)
!7951 = !DILocalVariable(name: "ri", scope: !7946, file: !3, line: 4366, type: !7952)
!7952 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxIterator", file: !808, line: 186, baseType: !7953)
!7953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxIterator", file: !808, line: 175, size: 3840, elements: !7954)
!7954 = !{!7955, !7956, !7957, !7958, !7959, !7960, !7961, !7965, !7966, !7975}
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7953, file: !808, line: 176, baseType: !17, size: 32)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !7953, file: !808, line: 177, baseType: !806, size: 64, offset: 64)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7953, file: !808, line: 178, baseType: !346, size: 64, offset: 128)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7953, file: !808, line: 179, baseType: !6, size: 64, offset: 192)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !7953, file: !808, line: 180, baseType: !157, size: 64, offset: 256)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "key_max", scope: !7953, file: !808, line: 181, baseType: !157, size: 64, offset: 320)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "key_static_string", scope: !7953, file: !808, line: 182, baseType: !7962, size: 1024, offset: 384)
!7962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 1024, elements: !7963)
!7963 = !{!7964}
!7964 = !DISubrange(count: 128)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7953, file: !808, line: 183, baseType: !812, size: 64, offset: 1408)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !7953, file: !808, line: 184, baseType: !7967, size: 2304, offset: 1472)
!7967 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxStack", file: !808, line: 150, baseType: !7968)
!7968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxStack", file: !808, line: 143, size: 2304, elements: !7969)
!7969 = !{!7970, !7971, !7972, !7973, !7974}
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !7968, file: !808, line: 144, baseType: !8, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7968, file: !808, line: 145, baseType: !157, size: 64, offset: 64)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "maxitems", scope: !7968, file: !808, line: 145, baseType: !157, size: 64, offset: 128)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "static_items", scope: !7968, file: !808, line: 148, baseType: !500, size: 2048, offset: 192)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "oom", scope: !7968, file: !808, line: 149, baseType: !17, size: 32, offset: 2240)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "node_cb", scope: !7953, file: !808, line: 185, baseType: !7976, size: 64, offset: 3776)
!7976 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNodeCallback", file: !808, line: 165, baseType: !7977)
!7977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7978, size: 64)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{!17, !7980}
!7980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!7981 = !DILocalVariable(name: "now", scope: !7946, file: !3, line: 4368, type: !32)
!7982 = !DILocalVariable(name: "next_period", scope: !7946, file: !3, line: 4369, type: !112)
!7983 = !DILocalVariable(name: "expiretime", scope: !7984, file: !3, line: 4373, type: !32)
!7984 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 4370, column: 14)
!7985 = !DILocalVariable(name: "timer", scope: !7986, file: !3, line: 4377, type: !7988)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 4376, column: 32)
!7987 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 4376, column: 13)
!7988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7989, size: 64)
!7989 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleTimer", file: !3, line: 4356, baseType: !7990)
!7990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleTimer", file: !3, line: 4351, size: 256, elements: !7991)
!7991 = !{!7992, !7993, !7995, !7996}
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7990, file: !3, line: 4352, baseType: !577, size: 64)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !7990, file: !3, line: 4353, baseType: !7994, size: 64, offset: 64)
!7994 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleTimerProc", file: !3, line: 4348, baseType: !593)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7990, file: !3, line: 4354, baseType: !6, size: 64, offset: 128)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "dbid", scope: !7990, file: !3, line: 4355, baseType: !17, size: 32, offset: 192)
!7997 = !DILocalVariable(name: "ctx", scope: !7986, file: !3, line: 4378, type: !585)
!7998 = !DILocation(line: 4360, column: 44, scope: !7946)
!7999 = !DILocation(line: 4360, column: 65, scope: !7946)
!8000 = !DILocation(line: 4360, column: 75, scope: !7946)
!8001 = !DILocation(line: 4366, column: 5, scope: !7946)
!8002 = !DILocation(line: 4367, column: 18, scope: !7946)
!8003 = !DILocation(line: 4366, column: 17, scope: !7946)
!8004 = !DILocation(line: 4367, column: 5, scope: !7946)
!8005 = !DILocation(line: 4368, column: 20, scope: !7946)
!8006 = !DILocation(line: 4368, column: 14, scope: !7946)
!8007 = !DILocation(line: 4369, column: 15, scope: !7946)
!8008 = !DILocation(line: 4370, column: 5, scope: !7946)
!8009 = !DILocation(line: 4371, column: 9, scope: !7984)
!8010 = !DILocation(line: 4372, column: 14, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 4372, column: 13)
!8012 = !DILocation(line: 4372, column: 13, scope: !7984)
!8013 = !DILocation(line: 4392, column: 5, scope: !7946)
!8014 = !DILocation(line: 4395, column: 9, scope: !7946)
!8015 = !DILocation(line: 4373, column: 9, scope: !7984)
!8016 = !DILocation(line: 4374, column: 31, scope: !7984)
!8017 = !{!8018, !892, i64 16}
!8018 = !{!"raxIterator", !895, i64 0, !892, i64 8, !892, i64 16, !892, i64 24, !1051, i64 32, !1051, i64 40, !893, i64 48, !892, i64 176, !8019, i64 184, !892, i64 472}
!8019 = !{!"raxStack", !892, i64 0, !1051, i64 8, !1051, i64 16, !893, i64 24, !895, i64 280}
!8020 = !DILocation(line: 4374, column: 9, scope: !7984)
!8021 = !DILocation(line: 4375, column: 22, scope: !7984)
!8022 = !DILocation(line: 4373, column: 18, scope: !7984)
!8023 = !DILocation(line: 4375, column: 20, scope: !7984)
!8024 = !DILocation(line: 4376, column: 17, scope: !7987)
!8025 = !DILocation(line: 4376, column: 13, scope: !7984)
!8026 = !DILocation(line: 4377, column: 42, scope: !7986)
!8027 = !{!8018, !892, i64 24}
!8028 = !DILocation(line: 4377, column: 31, scope: !7986)
!8029 = !DILocation(line: 4378, column: 13, scope: !7986)
!8030 = !DILocation(line: 4378, column: 28, scope: !7986)
!8031 = !DILocation(line: 4380, column: 33, scope: !7986)
!8032 = !{!8033, !892, i64 0}
!8033 = !{!"RedisModuleTimer", !892, i64 0, !892, i64 8, !892, i64 16, !895, i64 24}
!8034 = !DILocation(line: 4380, column: 24, scope: !7986)
!8035 = !DILocation(line: 4381, column: 26, scope: !7986)
!8036 = !DILocation(line: 4381, column: 24, scope: !7986)
!8037 = !DILocation(line: 4382, column: 41, scope: !7986)
!8038 = !{!8033, !895, i64 24}
!8039 = !DILocation(line: 4382, column: 13, scope: !7986)
!8040 = !DILocation(line: 4383, column: 20, scope: !7986)
!8041 = !{!8033, !892, i64 8}
!8042 = !DILocation(line: 4383, column: 41, scope: !7986)
!8043 = !{!8033, !892, i64 16}
!8044 = !DILocation(line: 4383, column: 13, scope: !7986)
!8045 = !DILocation(line: 4384, column: 13, scope: !7986)
!8046 = !DILocation(line: 4385, column: 23, scope: !7986)
!8047 = !DILocation(line: 4385, column: 49, scope: !7986)
!8048 = !DILocation(line: 4385, column: 56, scope: !7986)
!8049 = !{!8018, !1051, i64 32}
!8050 = !DILocation(line: 4385, column: 13, scope: !7986)
!8051 = !DILocation(line: 4386, column: 13, scope: !7986)
!8052 = !DILocation(line: 4387, column: 9, scope: !7987)
!8053 = !DILocation(line: 4391, column: 5, scope: !7946)
!8054 = !DILocation(line: 4388, column: 38, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 4387, column: 16)
!8056 = !DILocation(line: 4388, column: 43, scope: !8055)
!8057 = !DILocation(line: 4389, column: 13, scope: !8055)
!8058 = !DILocation(line: 4395, column: 21, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 4395, column: 9)
!8060 = !DILocation(line: 4395, column: 27, scope: !8059)
!8061 = !DILocation(line: 0, scope: !7946)
!8062 = !DILocation(line: 4396, column: 21, scope: !7946)
!8063 = !DILocation(line: 4396, column: 13, scope: !7946)
!8064 = !DILocation(line: 4396, column: 29, scope: !7946)
!8065 = !DILocation(line: 4396, column: 12, scope: !7946)
!8066 = !DILocation(line: 4397, column: 1, scope: !7946)
!8067 = !DILocation(line: 4396, column: 5, scope: !7946)
!8068 = distinct !DISubprogram(name: "RM_CreateTimer", scope: !3, file: !3, line: 4402, type: !8069, isLocal: false, isDefinition: true, scopeLine: 4402, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8073)
!8069 = !DISubroutineType(types: !8070)
!8070 = !{!8071, !584, !229, !7994, !6}
!8071 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleTimerID", file: !8072, line: 139, baseType: !32)
!8072 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/redismodule.h", directory: "/root/.unikraft/apps/redis/build")
!8073 = !{!8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081}
!8074 = !DILocalVariable(name: "ctx", arg: 1, scope: !8068, file: !3, line: 4402, type: !584)
!8075 = !DILocalVariable(name: "period", arg: 2, scope: !8068, file: !3, line: 4402, type: !229)
!8076 = !DILocalVariable(name: "callback", arg: 3, scope: !8068, file: !3, line: 4402, type: !7994)
!8077 = !DILocalVariable(name: "data", arg: 4, scope: !8068, file: !3, line: 4402, type: !6)
!8078 = !DILocalVariable(name: "timer", scope: !8068, file: !3, line: 4403, type: !7988)
!8079 = !DILocalVariable(name: "expiretime", scope: !8068, file: !3, line: 4408, type: !32)
!8080 = !DILocalVariable(name: "key", scope: !8068, file: !3, line: 4409, type: !32)
!8081 = !DILocalVariable(name: "ri", scope: !8082, file: !3, line: 4425, type: !7952)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 4424, column: 24)
!8083 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 4424, column: 9)
!8084 = !DILocation(line: 4402, column: 51, scope: !8068)
!8085 = !DILocation(line: 4402, column: 65, scope: !8068)
!8086 = !DILocation(line: 4402, column: 94, scope: !8068)
!8087 = !DILocation(line: 4402, column: 110, scope: !8068)
!8088 = !DILocation(line: 4403, column: 31, scope: !8068)
!8089 = !DILocation(line: 4403, column: 23, scope: !8068)
!8090 = !DILocation(line: 4404, column: 26, scope: !8068)
!8091 = !DILocation(line: 4404, column: 19, scope: !8068)
!8092 = !DILocation(line: 4405, column: 12, scope: !8068)
!8093 = !DILocation(line: 4405, column: 21, scope: !8068)
!8094 = !DILocation(line: 4406, column: 12, scope: !8068)
!8095 = !DILocation(line: 4406, column: 17, scope: !8068)
!8096 = !DILocation(line: 4407, column: 24, scope: !8068)
!8097 = !DILocation(line: 4407, column: 32, scope: !8068)
!8098 = !DILocation(line: 4407, column: 36, scope: !8068)
!8099 = !DILocation(line: 4407, column: 12, scope: !8068)
!8100 = !DILocation(line: 4407, column: 17, scope: !8068)
!8101 = !DILocation(line: 4408, column: 27, scope: !8068)
!8102 = !DILocation(line: 4408, column: 42, scope: !8068)
!8103 = !DILocation(line: 4408, column: 35, scope: !8068)
!8104 = !DILocation(line: 4408, column: 14, scope: !8068)
!8105 = !DILocation(line: 4409, column: 5, scope: !8068)
!8106 = !DILocation(line: 4411, column: 5, scope: !8068)
!8107 = !DILocation(line: 4412, column: 15, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 4411, column: 14)
!8109 = !DILocation(line: 4409, column: 14, scope: !8068)
!8110 = !DILocation(line: 4412, column: 13, scope: !8108)
!8111 = !DILocation(line: 4413, column: 21, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 4413, column: 13)
!8113 = !DILocation(line: 4413, column: 13, scope: !8112)
!8114 = !DILocation(line: 4413, column: 66, scope: !8112)
!8115 = !DILocation(line: 4413, column: 63, scope: !8112)
!8116 = !DILocation(line: 4413, column: 13, scope: !8108)
!8117 = !DILocation(line: 4414, column: 23, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 4413, column: 79)
!8119 = !DILocation(line: 4414, column: 13, scope: !8118)
!8120 = !DILocation(line: 4424, column: 9, scope: !8083)
!8121 = !DILocation(line: 4424, column: 17, scope: !8083)
!8122 = !DILocation(line: 4424, column: 9, scope: !8068)
!8123 = !DILocation(line: 4440, column: 9, scope: !8068)
!8124 = !DILocation(line: 4417, column: 23, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 4416, column: 16)
!8126 = distinct !{!8126, !8106, !8127}
!8127 = !DILocation(line: 4419, column: 5, scope: !8068)
!8128 = !DILocation(line: 4425, column: 9, scope: !8082)
!8129 = !DILocation(line: 4426, column: 22, scope: !8082)
!8130 = !DILocation(line: 4425, column: 21, scope: !8082)
!8131 = !DILocation(line: 4426, column: 9, scope: !8082)
!8132 = !DILocation(line: 4427, column: 9, scope: !8082)
!8133 = !DILocation(line: 4428, column: 9, scope: !8082)
!8134 = !DILocation(line: 4429, column: 23, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 4429, column: 13)
!8136 = !DILocation(line: 4429, column: 13, scope: !8135)
!8137 = !DILocation(line: 4429, column: 45, scope: !8135)
!8138 = !DILocation(line: 4429, column: 13, scope: !8082)
!8139 = !DILocation(line: 4432, column: 38, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 4429, column: 51)
!8141 = !{!1050, !892, i64 72}
!8142 = !DILocation(line: 4432, column: 41, scope: !8140)
!8143 = !DILocation(line: 4432, column: 13, scope: !8140)
!8144 = !DILocation(line: 4433, column: 21, scope: !8140)
!8145 = !DILocation(line: 4434, column: 9, scope: !8140)
!8146 = !DILocation(line: 4435, column: 9, scope: !8082)
!8147 = !DILocation(line: 4436, column: 5, scope: !8083)
!8148 = !DILocation(line: 4436, column: 5, scope: !8082)
!8149 = !DILocation(line: 4440, column: 9, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 4440, column: 9)
!8151 = !DILocation(line: 4440, column: 17, scope: !8150)
!8152 = !DILocation(line: 4441, column: 44, scope: !8150)
!8153 = !DILocation(line: 4441, column: 19, scope: !8150)
!8154 = !DILocation(line: 4441, column: 17, scope: !8150)
!8155 = !DILocation(line: 4441, column: 9, scope: !8150)
!8156 = !DILocation(line: 4443, column: 12, scope: !8068)
!8157 = !DILocation(line: 4444, column: 1, scope: !8068)
!8158 = !DILocation(line: 4443, column: 5, scope: !8068)
!8159 = distinct !DISubprogram(name: "RM_StopTimer", scope: !3, file: !3, line: 4450, type: !8160, isLocal: false, isDefinition: true, scopeLine: 4450, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8162)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!17, !584, !8071, !8}
!8162 = !{!8163, !8164, !8165, !8166}
!8163 = !DILocalVariable(name: "ctx", arg: 1, scope: !8159, file: !3, line: 4450, type: !584)
!8164 = !DILocalVariable(name: "id", arg: 2, scope: !8159, file: !3, line: 4450, type: !8071)
!8165 = !DILocalVariable(name: "data", arg: 3, scope: !8159, file: !3, line: 4450, type: !8)
!8166 = !DILocalVariable(name: "timer", scope: !8159, file: !3, line: 4451, type: !7988)
!8167 = !DILocation(line: 4450, column: 34, scope: !8159)
!8168 = !DILocation(line: 4450, column: 58, scope: !8159)
!8169 = !DILocation(line: 4450, column: 69, scope: !8159)
!8170 = !DILocation(line: 4451, column: 39, scope: !8159)
!8171 = !DILocation(line: 4451, column: 46, scope: !8159)
!8172 = !DILocation(line: 4451, column: 31, scope: !8159)
!8173 = !DILocation(line: 4451, column: 23, scope: !8159)
!8174 = !DILocation(line: 4452, column: 18, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 4452, column: 9)
!8176 = !DILocation(line: 4452, column: 15, scope: !8175)
!8177 = !DILocation(line: 4452, column: 30, scope: !8175)
!8178 = !DILocation(line: 4452, column: 40, scope: !8175)
!8179 = !DILocation(line: 4452, column: 55, scope: !8175)
!8180 = !DILocation(line: 4452, column: 47, scope: !8175)
!8181 = !DILocation(line: 4452, column: 9, scope: !8159)
!8182 = !DILocation(line: 4454, column: 9, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 4454, column: 9)
!8184 = !DILocation(line: 4454, column: 9, scope: !8159)
!8185 = !DILocation(line: 4454, column: 30, scope: !8183)
!8186 = !DILocation(line: 4454, column: 21, scope: !8183)
!8187 = !DILocation(line: 4454, column: 15, scope: !8183)
!8188 = !DILocation(line: 4455, column: 15, scope: !8159)
!8189 = !DILocation(line: 4455, column: 5, scope: !8159)
!8190 = !DILocation(line: 4456, column: 5, scope: !8159)
!8191 = !DILocation(line: 4457, column: 5, scope: !8159)
!8192 = !DILocation(line: 0, scope: !8159)
!8193 = !DILocation(line: 0, scope: !8175)
!8194 = !DILocation(line: 4458, column: 1, scope: !8159)
!8195 = distinct !DISubprogram(name: "RM_GetTimerInfo", scope: !3, file: !3, line: 4466, type: !8196, isLocal: false, isDefinition: true, scopeLine: 4466, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8199)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{!17, !584, !8071, !8198, !8}
!8198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!8199 = !{!8200, !8201, !8202, !8203, !8204, !8205}
!8200 = !DILocalVariable(name: "ctx", arg: 1, scope: !8195, file: !3, line: 4466, type: !584)
!8201 = !DILocalVariable(name: "id", arg: 2, scope: !8195, file: !3, line: 4466, type: !8071)
!8202 = !DILocalVariable(name: "remaining", arg: 3, scope: !8195, file: !3, line: 4466, type: !8198)
!8203 = !DILocalVariable(name: "data", arg: 4, scope: !8195, file: !3, line: 4466, type: !8)
!8204 = !DILocalVariable(name: "timer", scope: !8195, file: !3, line: 4467, type: !7988)
!8205 = !DILocalVariable(name: "rem", scope: !8206, file: !3, line: 4471, type: !92)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 4470, column: 20)
!8207 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4470, column: 9)
!8208 = !DILocation(line: 4466, column: 37, scope: !8195)
!8209 = !DILocation(line: 4466, column: 61, scope: !8195)
!8210 = !DILocation(line: 4466, column: 75, scope: !8195)
!8211 = !DILocation(line: 4466, column: 93, scope: !8195)
!8212 = !DILocation(line: 4467, column: 39, scope: !8195)
!8213 = !DILocation(line: 4467, column: 46, scope: !8195)
!8214 = !DILocation(line: 4467, column: 31, scope: !8195)
!8215 = !DILocation(line: 4467, column: 23, scope: !8195)
!8216 = !DILocation(line: 4468, column: 18, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4468, column: 9)
!8218 = !DILocation(line: 4468, column: 15, scope: !8217)
!8219 = !DILocation(line: 4468, column: 30, scope: !8217)
!8220 = !DILocation(line: 4468, column: 40, scope: !8217)
!8221 = !DILocation(line: 4468, column: 55, scope: !8217)
!8222 = !DILocation(line: 4468, column: 47, scope: !8217)
!8223 = !DILocation(line: 4468, column: 9, scope: !8195)
!8224 = !DILocation(line: 4470, column: 9, scope: !8207)
!8225 = !DILocation(line: 4470, column: 9, scope: !8195)
!8226 = !DILocation(line: 4471, column: 23, scope: !8206)
!8227 = !DILocation(line: 4471, column: 35, scope: !8206)
!8228 = !DILocation(line: 4471, column: 34, scope: !8206)
!8229 = !DILocation(line: 4471, column: 17, scope: !8206)
!8230 = !DILocation(line: 4472, column: 13, scope: !8206)
!8231 = !DILocation(line: 4473, column: 25, scope: !8206)
!8232 = !DILocation(line: 4473, column: 20, scope: !8206)
!8233 = !DILocation(line: 4474, column: 5, scope: !8206)
!8234 = !DILocation(line: 4475, column: 9, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4475, column: 9)
!8236 = !DILocation(line: 4475, column: 9, scope: !8195)
!8237 = !DILocation(line: 4475, column: 30, scope: !8235)
!8238 = !DILocation(line: 4475, column: 21, scope: !8235)
!8239 = !DILocation(line: 4475, column: 15, scope: !8235)
!8240 = !DILocation(line: 0, scope: !8195)
!8241 = !DILocation(line: 0, scope: !8217)
!8242 = !DILocation(line: 4477, column: 1, scope: !8195)
!8243 = distinct !DISubprogram(name: "RM_CreateDict", scope: !3, file: !3, line: 4500, type: !8244, isLocal: false, isDefinition: true, scopeLine: 4500, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8246)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!1260, !584}
!8246 = !{!8247, !8248}
!8247 = !DILocalVariable(name: "ctx", arg: 1, scope: !8243, file: !3, line: 4500, type: !584)
!8248 = !DILocalVariable(name: "d", scope: !8243, file: !3, line: 4501, type: !8249)
!8249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!8250 = !DILocation(line: 4500, column: 48, scope: !8243)
!8251 = !DILocation(line: 4501, column: 33, scope: !8243)
!8252 = !DILocation(line: 4501, column: 29, scope: !8243)
!8253 = !DILocation(line: 4502, column: 14, scope: !8243)
!8254 = !DILocation(line: 4502, column: 8, scope: !8243)
!8255 = !DILocation(line: 4502, column: 12, scope: !8243)
!8256 = !DILocation(line: 4503, column: 13, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 4503, column: 9)
!8258 = !DILocation(line: 4503, column: 9, scope: !8243)
!8259 = !DILocation(line: 787, column: 36, scope: !1743, inlinedAt: !8260)
!8260 = distinct !DILocation(line: 4503, column: 22, scope: !8257)
!8261 = !DILocation(line: 787, column: 45, scope: !1743, inlinedAt: !8260)
!8262 = !DILocation(line: 787, column: 57, scope: !1743, inlinedAt: !8260)
!8263 = !DILocation(line: 788, column: 16, scope: !1754, inlinedAt: !8260)
!8264 = !DILocation(line: 788, column: 22, scope: !1754, inlinedAt: !8260)
!8265 = !DILocation(line: 788, column: 9, scope: !1743, inlinedAt: !8260)
!8266 = !DILocation(line: 789, column: 14, scope: !1758, inlinedAt: !8260)
!8267 = !DILocation(line: 789, column: 35, scope: !1758, inlinedAt: !8260)
!8268 = !DILocation(line: 789, column: 27, scope: !1758, inlinedAt: !8260)
!8269 = !DILocation(line: 789, column: 9, scope: !1743, inlinedAt: !8260)
!8270 = !DILocation(line: 794, column: 10, scope: !1743, inlinedAt: !8260)
!8271 = !DILocation(line: 790, column: 26, scope: !1764, inlinedAt: !8260)
!8272 = !DILocation(line: 791, column: 30, scope: !1766, inlinedAt: !8260)
!8273 = !DILocation(line: 791, column: 13, scope: !1764, inlinedAt: !8260)
!8274 = !DILocation(line: 791, column: 53, scope: !1766, inlinedAt: !8260)
!8275 = !DILocation(line: 791, column: 36, scope: !1766, inlinedAt: !8260)
!8276 = !DILocation(line: 792, column: 79, scope: !1764, inlinedAt: !8260)
!8277 = !DILocation(line: 792, column: 38, scope: !1764, inlinedAt: !8260)
!8278 = !DILocation(line: 792, column: 74, scope: !1764, inlinedAt: !8260)
!8279 = !DILocation(line: 792, column: 73, scope: !1764, inlinedAt: !8260)
!8280 = !DILocation(line: 792, column: 24, scope: !1764, inlinedAt: !8260)
!8281 = !DILocation(line: 792, column: 22, scope: !1764, inlinedAt: !8260)
!8282 = !DILocation(line: 793, column: 5, scope: !1764, inlinedAt: !8260)
!8283 = !DILocation(line: 794, column: 23, scope: !1743, inlinedAt: !8260)
!8284 = !DILocation(line: 794, column: 5, scope: !1743, inlinedAt: !8260)
!8285 = !DILocation(line: 794, column: 37, scope: !1743, inlinedAt: !8260)
!8286 = !DILocation(line: 794, column: 42, scope: !1743, inlinedAt: !8260)
!8287 = !DILocation(line: 795, column: 37, scope: !1743, inlinedAt: !8260)
!8288 = !DILocation(line: 795, column: 41, scope: !1743, inlinedAt: !8260)
!8289 = !DILocation(line: 796, column: 22, scope: !1743, inlinedAt: !8260)
!8290 = !DILocation(line: 797, column: 1, scope: !1743, inlinedAt: !8260)
!8291 = !DILocation(line: 4503, column: 22, scope: !8257)
!8292 = !DILocation(line: 4504, column: 5, scope: !8243)
!8293 = distinct !DISubprogram(name: "RM_DictSize", scope: !3, file: !3, line: 4517, type: !8294, isLocal: false, isDefinition: true, scopeLine: 4517, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8296)
!8294 = !DISubroutineType(types: !8295)
!8295 = !{!32, !1260}
!8296 = !{!8297}
!8297 = !DILocalVariable(name: "d", arg: 1, scope: !8293, file: !3, line: 4517, type: !1260)
!8298 = !DILocation(line: 4517, column: 39, scope: !8293)
!8299 = !DILocation(line: 4518, column: 23, scope: !8293)
!8300 = !DILocation(line: 4518, column: 12, scope: !8293)
!8301 = !DILocation(line: 4518, column: 5, scope: !8293)
!8302 = distinct !DISubprogram(name: "RM_DictSetC", scope: !3, file: !3, line: 4525, type: !8303, isLocal: false, isDefinition: true, scopeLine: 4525, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8305)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!17, !1260, !6, !157, !6}
!8305 = !{!8306, !8307, !8308, !8309, !8310}
!8306 = !DILocalVariable(name: "d", arg: 1, scope: !8302, file: !3, line: 4525, type: !1260)
!8307 = !DILocalVariable(name: "key", arg: 2, scope: !8302, file: !3, line: 4525, type: !6)
!8308 = !DILocalVariable(name: "keylen", arg: 3, scope: !8302, file: !3, line: 4525, type: !157)
!8309 = !DILocalVariable(name: "ptr", arg: 4, scope: !8302, file: !3, line: 4525, type: !6)
!8310 = !DILocalVariable(name: "retval", scope: !8302, file: !3, line: 4526, type: !17)
!8311 = !DILocation(line: 4525, column: 34, scope: !8302)
!8312 = !DILocation(line: 4525, column: 43, scope: !8302)
!8313 = !DILocation(line: 4525, column: 55, scope: !8302)
!8314 = !DILocation(line: 4525, column: 69, scope: !8302)
!8315 = !DILocation(line: 4526, column: 34, scope: !8302)
!8316 = !DILocation(line: 4526, column: 18, scope: !8302)
!8317 = !DILocation(line: 4526, column: 9, scope: !8302)
!8318 = !DILocation(line: 4527, column: 20, scope: !8302)
!8319 = !DILocation(line: 4527, column: 12, scope: !8302)
!8320 = !DILocation(line: 4527, column: 5, scope: !8302)
!8321 = distinct !DISubprogram(name: "RM_DictReplaceC", scope: !3, file: !3, line: 4532, type: !8303, isLocal: false, isDefinition: true, scopeLine: 4532, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8322)
!8322 = !{!8323, !8324, !8325, !8326, !8327}
!8323 = !DILocalVariable(name: "d", arg: 1, scope: !8321, file: !3, line: 4532, type: !1260)
!8324 = !DILocalVariable(name: "key", arg: 2, scope: !8321, file: !3, line: 4532, type: !6)
!8325 = !DILocalVariable(name: "keylen", arg: 3, scope: !8321, file: !3, line: 4532, type: !157)
!8326 = !DILocalVariable(name: "ptr", arg: 4, scope: !8321, file: !3, line: 4532, type: !6)
!8327 = !DILocalVariable(name: "retval", scope: !8321, file: !3, line: 4533, type: !17)
!8328 = !DILocation(line: 4532, column: 38, scope: !8321)
!8329 = !DILocation(line: 4532, column: 47, scope: !8321)
!8330 = !DILocation(line: 4532, column: 59, scope: !8321)
!8331 = !DILocation(line: 4532, column: 73, scope: !8321)
!8332 = !DILocation(line: 4533, column: 31, scope: !8321)
!8333 = !DILocation(line: 4533, column: 18, scope: !8321)
!8334 = !DILocation(line: 4533, column: 9, scope: !8321)
!8335 = !DILocation(line: 4534, column: 20, scope: !8321)
!8336 = !DILocation(line: 4534, column: 12, scope: !8321)
!8337 = !DILocation(line: 4534, column: 5, scope: !8321)
!8338 = distinct !DISubprogram(name: "RM_DictSet", scope: !3, file: !3, line: 4538, type: !8339, isLocal: false, isDefinition: true, scopeLine: 4538, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8341)
!8339 = !DISubroutineType(types: !8340)
!8340 = !{!17, !1260, !143, !6}
!8341 = !{!8342, !8343, !8344}
!8342 = !DILocalVariable(name: "d", arg: 1, scope: !8338, file: !3, line: 4538, type: !1260)
!8343 = !DILocalVariable(name: "key", arg: 2, scope: !8338, file: !3, line: 4538, type: !143)
!8344 = !DILocalVariable(name: "ptr", arg: 3, scope: !8338, file: !3, line: 4538, type: !6)
!8345 = !DILocation(line: 4538, column: 33, scope: !8338)
!8346 = !DILocation(line: 4538, column: 55, scope: !8338)
!8347 = !DILocation(line: 4538, column: 66, scope: !8338)
!8348 = !DILocation(line: 4539, column: 31, scope: !8338)
!8349 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8350)
!8350 = distinct !DILocation(line: 4539, column: 35, scope: !8338)
!8351 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8350)
!8352 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8350)
!8353 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8350)
!8354 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8350)
!8355 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8350)
!8356 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8350)
!8357 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8350)
!8358 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8350)
!8359 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8350)
!8360 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8350)
!8361 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8350)
!8362 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8350)
!8363 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8350)
!8364 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8350)
!8365 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8350)
!8366 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8350)
!8367 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8350)
!8368 = !DILocation(line: 0, scope: !2179, inlinedAt: !8350)
!8369 = !DILocation(line: 0, scope: !8338)
!8370 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8350)
!8371 = !DILocation(line: 4525, column: 34, scope: !8302, inlinedAt: !8372)
!8372 = distinct !DILocation(line: 4539, column: 12, scope: !8338)
!8373 = !DILocation(line: 4525, column: 43, scope: !8302, inlinedAt: !8372)
!8374 = !DILocation(line: 4525, column: 55, scope: !8302, inlinedAt: !8372)
!8375 = !DILocation(line: 4525, column: 69, scope: !8302, inlinedAt: !8372)
!8376 = !DILocation(line: 4526, column: 34, scope: !8302, inlinedAt: !8372)
!8377 = !DILocation(line: 4526, column: 18, scope: !8302, inlinedAt: !8372)
!8378 = !DILocation(line: 4526, column: 9, scope: !8302, inlinedAt: !8372)
!8379 = !DILocation(line: 4527, column: 20, scope: !8302, inlinedAt: !8372)
!8380 = !DILocation(line: 4527, column: 12, scope: !8302, inlinedAt: !8372)
!8381 = !DILocation(line: 4527, column: 5, scope: !8302, inlinedAt: !8372)
!8382 = !DILocation(line: 4539, column: 5, scope: !8338)
!8383 = distinct !DISubprogram(name: "RM_DictReplace", scope: !3, file: !3, line: 4543, type: !8339, isLocal: false, isDefinition: true, scopeLine: 4543, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8384)
!8384 = !{!8385, !8386, !8387}
!8385 = !DILocalVariable(name: "d", arg: 1, scope: !8383, file: !3, line: 4543, type: !1260)
!8386 = !DILocalVariable(name: "key", arg: 2, scope: !8383, file: !3, line: 4543, type: !143)
!8387 = !DILocalVariable(name: "ptr", arg: 3, scope: !8383, file: !3, line: 4543, type: !6)
!8388 = !DILocation(line: 4543, column: 37, scope: !8383)
!8389 = !DILocation(line: 4543, column: 59, scope: !8383)
!8390 = !DILocation(line: 4543, column: 70, scope: !8383)
!8391 = !DILocation(line: 4544, column: 35, scope: !8383)
!8392 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8393)
!8393 = distinct !DILocation(line: 4544, column: 39, scope: !8383)
!8394 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8393)
!8395 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8393)
!8396 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8393)
!8397 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8393)
!8398 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8393)
!8399 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8393)
!8400 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8393)
!8401 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8393)
!8402 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8393)
!8403 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8393)
!8404 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8393)
!8405 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8393)
!8406 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8393)
!8407 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8393)
!8408 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8393)
!8409 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8393)
!8410 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8393)
!8411 = !DILocation(line: 0, scope: !2179, inlinedAt: !8393)
!8412 = !DILocation(line: 0, scope: !8383)
!8413 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8393)
!8414 = !DILocation(line: 4532, column: 38, scope: !8321, inlinedAt: !8415)
!8415 = distinct !DILocation(line: 4544, column: 12, scope: !8383)
!8416 = !DILocation(line: 4532, column: 47, scope: !8321, inlinedAt: !8415)
!8417 = !DILocation(line: 4532, column: 59, scope: !8321, inlinedAt: !8415)
!8418 = !DILocation(line: 4532, column: 73, scope: !8321, inlinedAt: !8415)
!8419 = !DILocation(line: 4533, column: 31, scope: !8321, inlinedAt: !8415)
!8420 = !DILocation(line: 4533, column: 18, scope: !8321, inlinedAt: !8415)
!8421 = !DILocation(line: 4533, column: 9, scope: !8321, inlinedAt: !8415)
!8422 = !DILocation(line: 4534, column: 20, scope: !8321, inlinedAt: !8415)
!8423 = !DILocation(line: 4534, column: 12, scope: !8321, inlinedAt: !8415)
!8424 = !DILocation(line: 4534, column: 5, scope: !8321, inlinedAt: !8415)
!8425 = !DILocation(line: 4544, column: 5, scope: !8383)
!8426 = distinct !DISubprogram(name: "RM_DictGetC", scope: !3, file: !3, line: 4552, type: !8427, isLocal: false, isDefinition: true, scopeLine: 4552, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8429)
!8427 = !DISubroutineType(types: !8428)
!8428 = !{!6, !1260, !6, !157, !16}
!8429 = !{!8430, !8431, !8432, !8433, !8434}
!8430 = !DILocalVariable(name: "d", arg: 1, scope: !8426, file: !3, line: 4552, type: !1260)
!8431 = !DILocalVariable(name: "key", arg: 2, scope: !8426, file: !3, line: 4552, type: !6)
!8432 = !DILocalVariable(name: "keylen", arg: 3, scope: !8426, file: !3, line: 4552, type: !157)
!8433 = !DILocalVariable(name: "nokey", arg: 4, scope: !8426, file: !3, line: 4552, type: !16)
!8434 = !DILocalVariable(name: "res", scope: !8426, file: !3, line: 4553, type: !6)
!8435 = !DILocation(line: 4552, column: 36, scope: !8426)
!8436 = !DILocation(line: 4552, column: 45, scope: !8426)
!8437 = !DILocation(line: 4552, column: 57, scope: !8426)
!8438 = !DILocation(line: 4552, column: 70, scope: !8426)
!8439 = !DILocation(line: 4553, column: 28, scope: !8426)
!8440 = !DILocation(line: 4553, column: 17, scope: !8426)
!8441 = !DILocation(line: 4553, column: 11, scope: !8426)
!8442 = !DILocation(line: 4554, column: 9, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 4554, column: 9)
!8444 = !DILocation(line: 4554, column: 9, scope: !8426)
!8445 = !DILocation(line: 0, scope: !8443)
!8446 = !DILocation(line: 4554, column: 30, scope: !8443)
!8447 = !DILocation(line: 4554, column: 23, scope: !8443)
!8448 = !DILocation(line: 4554, column: 16, scope: !8443)
!8449 = !DILocation(line: 4555, column: 17, scope: !8426)
!8450 = !DILocation(line: 4555, column: 12, scope: !8426)
!8451 = !DILocation(line: 4555, column: 5, scope: !8426)
!8452 = distinct !DISubprogram(name: "RM_DictGet", scope: !3, file: !3, line: 4559, type: !8453, isLocal: false, isDefinition: true, scopeLine: 4559, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8455)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!6, !1260, !143, !16}
!8455 = !{!8456, !8457, !8458}
!8456 = !DILocalVariable(name: "d", arg: 1, scope: !8452, file: !3, line: 4559, type: !1260)
!8457 = !DILocalVariable(name: "key", arg: 2, scope: !8452, file: !3, line: 4559, type: !143)
!8458 = !DILocalVariable(name: "nokey", arg: 3, scope: !8452, file: !3, line: 4559, type: !16)
!8459 = !DILocation(line: 4559, column: 35, scope: !8452)
!8460 = !DILocation(line: 4559, column: 57, scope: !8452)
!8461 = !DILocation(line: 4559, column: 67, scope: !8452)
!8462 = !DILocation(line: 4560, column: 31, scope: !8452)
!8463 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8464)
!8464 = distinct !DILocation(line: 4560, column: 35, scope: !8452)
!8465 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8464)
!8466 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8464)
!8467 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8464)
!8468 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8464)
!8469 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8464)
!8470 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8464)
!8471 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8464)
!8472 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8464)
!8473 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8464)
!8474 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8464)
!8475 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8464)
!8476 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8464)
!8477 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8464)
!8478 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8464)
!8479 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8464)
!8480 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8464)
!8481 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8464)
!8482 = !DILocation(line: 0, scope: !2179, inlinedAt: !8464)
!8483 = !DILocation(line: 0, scope: !8452)
!8484 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8464)
!8485 = !DILocation(line: 4552, column: 36, scope: !8426, inlinedAt: !8486)
!8486 = distinct !DILocation(line: 4560, column: 12, scope: !8452)
!8487 = !DILocation(line: 4552, column: 45, scope: !8426, inlinedAt: !8486)
!8488 = !DILocation(line: 4552, column: 57, scope: !8426, inlinedAt: !8486)
!8489 = !DILocation(line: 4552, column: 70, scope: !8426, inlinedAt: !8486)
!8490 = !DILocation(line: 4553, column: 28, scope: !8426, inlinedAt: !8486)
!8491 = !DILocation(line: 4553, column: 17, scope: !8426, inlinedAt: !8486)
!8492 = !DILocation(line: 4553, column: 11, scope: !8426, inlinedAt: !8486)
!8493 = !DILocation(line: 4554, column: 9, scope: !8443, inlinedAt: !8486)
!8494 = !DILocation(line: 4554, column: 9, scope: !8426, inlinedAt: !8486)
!8495 = !DILocation(line: 0, scope: !8443, inlinedAt: !8486)
!8496 = !DILocation(line: 4554, column: 30, scope: !8443, inlinedAt: !8486)
!8497 = !DILocation(line: 4554, column: 23, scope: !8443, inlinedAt: !8486)
!8498 = !DILocation(line: 4554, column: 16, scope: !8443, inlinedAt: !8486)
!8499 = !DILocation(line: 4555, column: 17, scope: !8426, inlinedAt: !8486)
!8500 = !DILocation(line: 4555, column: 12, scope: !8426, inlinedAt: !8486)
!8501 = !DILocation(line: 4555, column: 5, scope: !8426, inlinedAt: !8486)
!8502 = !DILocation(line: 4560, column: 5, scope: !8452)
!8503 = distinct !DISubprogram(name: "RM_DictDelC", scope: !3, file: !3, line: 4570, type: !8303, isLocal: false, isDefinition: true, scopeLine: 4570, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8504)
!8504 = !{!8505, !8506, !8507, !8508, !8509}
!8505 = !DILocalVariable(name: "d", arg: 1, scope: !8503, file: !3, line: 4570, type: !1260)
!8506 = !DILocalVariable(name: "key", arg: 2, scope: !8503, file: !3, line: 4570, type: !6)
!8507 = !DILocalVariable(name: "keylen", arg: 3, scope: !8503, file: !3, line: 4570, type: !157)
!8508 = !DILocalVariable(name: "oldval", arg: 4, scope: !8503, file: !3, line: 4570, type: !6)
!8509 = !DILocalVariable(name: "retval", scope: !8503, file: !3, line: 4571, type: !17)
!8510 = !DILocation(line: 4570, column: 34, scope: !8503)
!8511 = !DILocation(line: 4570, column: 43, scope: !8503)
!8512 = !DILocation(line: 4570, column: 55, scope: !8503)
!8513 = !DILocation(line: 4570, column: 69, scope: !8503)
!8514 = !DILocation(line: 4571, column: 31, scope: !8503)
!8515 = !DILocation(line: 4571, column: 46, scope: !8503)
!8516 = !DILocation(line: 4571, column: 18, scope: !8503)
!8517 = !DILocation(line: 4571, column: 9, scope: !8503)
!8518 = !DILocation(line: 4572, column: 12, scope: !8503)
!8519 = !DILocation(line: 4572, column: 5, scope: !8503)
!8520 = distinct !DISubprogram(name: "RM_DictDel", scope: !3, file: !3, line: 4576, type: !8339, isLocal: false, isDefinition: true, scopeLine: 4576, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8521)
!8521 = !{!8522, !8523, !8524}
!8522 = !DILocalVariable(name: "d", arg: 1, scope: !8520, file: !3, line: 4576, type: !1260)
!8523 = !DILocalVariable(name: "key", arg: 2, scope: !8520, file: !3, line: 4576, type: !143)
!8524 = !DILocalVariable(name: "oldval", arg: 3, scope: !8520, file: !3, line: 4576, type: !6)
!8525 = !DILocation(line: 4576, column: 33, scope: !8520)
!8526 = !DILocation(line: 4576, column: 55, scope: !8520)
!8527 = !DILocation(line: 4576, column: 66, scope: !8520)
!8528 = !DILocation(line: 4577, column: 31, scope: !8520)
!8529 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8530)
!8530 = distinct !DILocation(line: 4577, column: 35, scope: !8520)
!8531 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8530)
!8532 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8530)
!8533 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8530)
!8534 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8530)
!8535 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8530)
!8536 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8530)
!8537 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8530)
!8538 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8530)
!8539 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8530)
!8540 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8530)
!8541 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8530)
!8542 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8530)
!8543 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8530)
!8544 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8530)
!8545 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8530)
!8546 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8530)
!8547 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8530)
!8548 = !DILocation(line: 0, scope: !2179, inlinedAt: !8530)
!8549 = !DILocation(line: 0, scope: !8520)
!8550 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8530)
!8551 = !DILocation(line: 4570, column: 34, scope: !8503, inlinedAt: !8552)
!8552 = distinct !DILocation(line: 4577, column: 12, scope: !8520)
!8553 = !DILocation(line: 4570, column: 43, scope: !8503, inlinedAt: !8552)
!8554 = !DILocation(line: 4570, column: 55, scope: !8503, inlinedAt: !8552)
!8555 = !DILocation(line: 4570, column: 69, scope: !8503, inlinedAt: !8552)
!8556 = !DILocation(line: 4571, column: 31, scope: !8503, inlinedAt: !8552)
!8557 = !DILocation(line: 4571, column: 46, scope: !8503, inlinedAt: !8552)
!8558 = !DILocation(line: 4571, column: 18, scope: !8503, inlinedAt: !8552)
!8559 = !DILocation(line: 4571, column: 9, scope: !8503, inlinedAt: !8552)
!8560 = !DILocation(line: 4572, column: 12, scope: !8503, inlinedAt: !8552)
!8561 = !DILocation(line: 4572, column: 5, scope: !8503, inlinedAt: !8552)
!8562 = !DILocation(line: 4577, column: 5, scope: !8520)
!8563 = distinct !DISubprogram(name: "RM_DictIteratorStartC", scope: !3, file: !3, line: 4600, type: !8564, isLocal: false, isDefinition: true, scopeLine: 4600, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8572)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!8566, !1260, !523, !6, !157}
!8566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8567, size: 64)
!8567 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleDictIter", file: !3, line: 274, baseType: !8568)
!8568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDictIter", file: !3, line: 271, size: 3904, elements: !8569)
!8569 = !{!8570, !8571}
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !8568, file: !3, line: 272, baseType: !1260, size: 64)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !8568, file: !3, line: 273, baseType: !7952, size: 3840, offset: 64)
!8572 = !{!8573, !8574, !8575, !8576, !8577}
!8573 = !DILocalVariable(name: "d", arg: 1, scope: !8563, file: !3, line: 4600, type: !1260)
!8574 = !DILocalVariable(name: "op", arg: 2, scope: !8563, file: !3, line: 4600, type: !523)
!8575 = !DILocalVariable(name: "key", arg: 3, scope: !8563, file: !3, line: 4600, type: !6)
!8576 = !DILocalVariable(name: "keylen", arg: 4, scope: !8563, file: !3, line: 4600, type: !157)
!8577 = !DILocalVariable(name: "di", scope: !8563, file: !3, line: 4601, type: !8566)
!8578 = !DILocation(line: 4600, column: 61, scope: !8563)
!8579 = !DILocation(line: 4600, column: 76, scope: !8563)
!8580 = !DILocation(line: 4600, column: 86, scope: !8563)
!8581 = !DILocation(line: 4600, column: 98, scope: !8563)
!8582 = !DILocation(line: 4601, column: 31, scope: !8563)
!8583 = !DILocation(line: 4601, column: 26, scope: !8563)
!8584 = !DILocation(line: 4602, column: 9, scope: !8563)
!8585 = !DILocation(line: 4602, column: 14, scope: !8563)
!8586 = !{!8587, !892, i64 0}
!8587 = !{!"RedisModuleDictIter", !892, i64 0, !8018, i64 8}
!8588 = !DILocation(line: 4603, column: 19, scope: !8563)
!8589 = !DILocation(line: 4603, column: 25, scope: !8563)
!8590 = !DILocation(line: 4603, column: 5, scope: !8563)
!8591 = !DILocation(line: 4604, column: 5, scope: !8563)
!8592 = !DILocation(line: 4605, column: 5, scope: !8563)
!8593 = distinct !DISubprogram(name: "RM_DictIteratorStart", scope: !3, file: !3, line: 4610, type: !8594, isLocal: false, isDefinition: true, scopeLine: 4610, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8596)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{!8566, !1260, !523, !143}
!8596 = !{!8597, !8598, !8599}
!8597 = !DILocalVariable(name: "d", arg: 1, scope: !8593, file: !3, line: 4610, type: !1260)
!8598 = !DILocalVariable(name: "op", arg: 2, scope: !8593, file: !3, line: 4610, type: !523)
!8599 = !DILocalVariable(name: "key", arg: 3, scope: !8593, file: !3, line: 4610, type: !143)
!8600 = !DILocation(line: 4610, column: 60, scope: !8593)
!8601 = !DILocation(line: 4610, column: 75, scope: !8593)
!8602 = !DILocation(line: 4610, column: 98, scope: !8593)
!8603 = !DILocation(line: 4611, column: 44, scope: !8593)
!8604 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8605)
!8605 = distinct !DILocation(line: 4611, column: 48, scope: !8593)
!8606 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8605)
!8607 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8605)
!8608 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8605)
!8609 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8605)
!8610 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8605)
!8611 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8605)
!8612 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8605)
!8613 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8605)
!8614 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8605)
!8615 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8605)
!8616 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8605)
!8617 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8605)
!8618 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8605)
!8619 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8605)
!8620 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8605)
!8621 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8605)
!8622 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8605)
!8623 = !DILocation(line: 0, scope: !2179, inlinedAt: !8605)
!8624 = !DILocation(line: 0, scope: !8593)
!8625 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8605)
!8626 = !DILocation(line: 4600, column: 61, scope: !8563, inlinedAt: !8627)
!8627 = distinct !DILocation(line: 4611, column: 12, scope: !8593)
!8628 = !DILocation(line: 4600, column: 76, scope: !8563, inlinedAt: !8627)
!8629 = !DILocation(line: 4600, column: 86, scope: !8563, inlinedAt: !8627)
!8630 = !DILocation(line: 4600, column: 98, scope: !8563, inlinedAt: !8627)
!8631 = !DILocation(line: 4601, column: 31, scope: !8563, inlinedAt: !8627)
!8632 = !DILocation(line: 4601, column: 26, scope: !8563, inlinedAt: !8627)
!8633 = !DILocation(line: 4602, column: 9, scope: !8563, inlinedAt: !8627)
!8634 = !DILocation(line: 4602, column: 14, scope: !8563, inlinedAt: !8627)
!8635 = !DILocation(line: 4603, column: 19, scope: !8563, inlinedAt: !8627)
!8636 = !DILocation(line: 4603, column: 25, scope: !8563, inlinedAt: !8627)
!8637 = !DILocation(line: 4603, column: 5, scope: !8563, inlinedAt: !8627)
!8638 = !DILocation(line: 4604, column: 5, scope: !8563, inlinedAt: !8627)
!8639 = !DILocation(line: 4605, column: 5, scope: !8563, inlinedAt: !8627)
!8640 = !DILocation(line: 4611, column: 5, scope: !8593)
!8641 = distinct !DISubprogram(name: "RM_DictIteratorStop", scope: !3, file: !3, line: 4616, type: !8642, isLocal: false, isDefinition: true, scopeLine: 4616, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8644)
!8642 = !DISubroutineType(types: !8643)
!8643 = !{null, !8566}
!8644 = !{!8645}
!8645 = !DILocalVariable(name: "di", arg: 1, scope: !8641, file: !3, line: 4616, type: !8566)
!8646 = !DILocation(line: 4616, column: 47, scope: !8641)
!8647 = !DILocation(line: 4617, column: 18, scope: !8641)
!8648 = !DILocation(line: 4617, column: 5, scope: !8641)
!8649 = !DILocation(line: 4618, column: 11, scope: !8641)
!8650 = !DILocation(line: 4618, column: 5, scope: !8641)
!8651 = !DILocation(line: 4619, column: 1, scope: !8641)
!8652 = distinct !DISubprogram(name: "RM_DictIteratorReseekC", scope: !3, file: !3, line: 4628, type: !8653, isLocal: false, isDefinition: true, scopeLine: 4628, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8655)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{!17, !8566, !523, !6, !157}
!8655 = !{!8656, !8657, !8658, !8659}
!8656 = !DILocalVariable(name: "di", arg: 1, scope: !8652, file: !3, line: 4628, type: !8566)
!8657 = !DILocalVariable(name: "op", arg: 2, scope: !8652, file: !3, line: 4628, type: !523)
!8658 = !DILocalVariable(name: "key", arg: 3, scope: !8652, file: !3, line: 4628, type: !6)
!8659 = !DILocalVariable(name: "keylen", arg: 4, scope: !8652, file: !3, line: 4628, type: !157)
!8660 = !DILocation(line: 4628, column: 49, scope: !8652)
!8661 = !DILocation(line: 4628, column: 65, scope: !8652)
!8662 = !DILocation(line: 4628, column: 75, scope: !8652)
!8663 = !DILocation(line: 4628, column: 87, scope: !8652)
!8664 = !DILocation(line: 4629, column: 25, scope: !8652)
!8665 = !DILocation(line: 4629, column: 12, scope: !8652)
!8666 = !DILocation(line: 4629, column: 5, scope: !8652)
!8667 = distinct !DISubprogram(name: "RM_DictIteratorReseek", scope: !3, file: !3, line: 4634, type: !8668, isLocal: false, isDefinition: true, scopeLine: 4634, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8670)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!17, !8566, !523, !143}
!8670 = !{!8671, !8672, !8673}
!8671 = !DILocalVariable(name: "di", arg: 1, scope: !8667, file: !3, line: 4634, type: !8566)
!8672 = !DILocalVariable(name: "op", arg: 2, scope: !8667, file: !3, line: 4634, type: !523)
!8673 = !DILocalVariable(name: "key", arg: 3, scope: !8667, file: !3, line: 4634, type: !143)
!8674 = !DILocation(line: 4634, column: 48, scope: !8667)
!8675 = !DILocation(line: 4634, column: 64, scope: !8667)
!8676 = !DILocation(line: 4634, column: 87, scope: !8667)
!8677 = !DILocation(line: 4635, column: 46, scope: !8667)
!8678 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8679)
!8679 = distinct !DILocation(line: 4635, column: 50, scope: !8667)
!8680 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8679)
!8681 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8679)
!8682 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8679)
!8683 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8679)
!8684 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8679)
!8685 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8679)
!8686 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8679)
!8687 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8679)
!8688 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8679)
!8689 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8679)
!8690 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8679)
!8691 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8679)
!8692 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8679)
!8693 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8679)
!8694 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8679)
!8695 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8679)
!8696 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8679)
!8697 = !DILocation(line: 0, scope: !2179, inlinedAt: !8679)
!8698 = !DILocation(line: 0, scope: !8667)
!8699 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8679)
!8700 = !DILocation(line: 4628, column: 49, scope: !8652, inlinedAt: !8701)
!8701 = distinct !DILocation(line: 4635, column: 12, scope: !8667)
!8702 = !DILocation(line: 4628, column: 65, scope: !8652, inlinedAt: !8701)
!8703 = !DILocation(line: 4628, column: 75, scope: !8652, inlinedAt: !8701)
!8704 = !DILocation(line: 4628, column: 87, scope: !8652, inlinedAt: !8701)
!8705 = !DILocation(line: 4629, column: 25, scope: !8652, inlinedAt: !8701)
!8706 = !DILocation(line: 4629, column: 12, scope: !8652, inlinedAt: !8701)
!8707 = !DILocation(line: 4629, column: 5, scope: !8652, inlinedAt: !8701)
!8708 = !DILocation(line: 4635, column: 5, scope: !8667)
!8709 = distinct !DISubprogram(name: "RM_DictNextC", scope: !3, file: !3, line: 4663, type: !8710, isLocal: false, isDefinition: true, scopeLine: 4663, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8712)
!8710 = !DISubroutineType(types: !8711)
!8711 = !{!6, !8566, !2145, !8}
!8712 = !{!8713, !8714, !8715}
!8713 = !DILocalVariable(name: "di", arg: 1, scope: !8709, file: !3, line: 4663, type: !8566)
!8714 = !DILocalVariable(name: "keylen", arg: 2, scope: !8709, file: !3, line: 4663, type: !2145)
!8715 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8709, file: !3, line: 4663, type: !8)
!8716 = !DILocation(line: 4663, column: 41, scope: !8709)
!8717 = !DILocation(line: 4663, column: 53, scope: !8709)
!8718 = !DILocation(line: 4663, column: 68, scope: !8709)
!8719 = !DILocation(line: 4664, column: 23, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 4664, column: 9)
!8721 = !DILocation(line: 4664, column: 10, scope: !8720)
!8722 = !DILocation(line: 4664, column: 9, scope: !8709)
!8723 = !DILocation(line: 4665, column: 9, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 4665, column: 9)
!8725 = !DILocation(line: 4665, column: 9, scope: !8709)
!8726 = !DILocation(line: 4665, column: 34, scope: !8724)
!8727 = !{!8587, !1051, i64 40}
!8728 = !DILocation(line: 4665, column: 25, scope: !8724)
!8729 = !DILocation(line: 4665, column: 17, scope: !8724)
!8730 = !DILocation(line: 4666, column: 9, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 4666, column: 9)
!8732 = !DILocation(line: 4666, column: 9, scope: !8709)
!8733 = !DILocation(line: 4666, column: 36, scope: !8731)
!8734 = !{!8587, !892, i64 32}
!8735 = !DILocation(line: 4666, column: 27, scope: !8731)
!8736 = !DILocation(line: 4666, column: 18, scope: !8731)
!8737 = !DILocation(line: 4667, column: 19, scope: !8709)
!8738 = !{!8587, !892, i64 24}
!8739 = !DILocation(line: 4667, column: 5, scope: !8709)
!8740 = !DILocation(line: 0, scope: !8720)
!8741 = !DILocation(line: 4668, column: 1, scope: !8709)
!8742 = distinct !DISubprogram(name: "RM_DictPrevC", scope: !3, file: !3, line: 4673, type: !8710, isLocal: false, isDefinition: true, scopeLine: 4673, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8743)
!8743 = !{!8744, !8745, !8746}
!8744 = !DILocalVariable(name: "di", arg: 1, scope: !8742, file: !3, line: 4673, type: !8566)
!8745 = !DILocalVariable(name: "keylen", arg: 2, scope: !8742, file: !3, line: 4673, type: !2145)
!8746 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8742, file: !3, line: 4673, type: !8)
!8747 = !DILocation(line: 4673, column: 41, scope: !8742)
!8748 = !DILocation(line: 4673, column: 53, scope: !8742)
!8749 = !DILocation(line: 4673, column: 68, scope: !8742)
!8750 = !DILocation(line: 4674, column: 23, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 4674, column: 9)
!8752 = !DILocation(line: 4674, column: 10, scope: !8751)
!8753 = !DILocation(line: 4674, column: 9, scope: !8742)
!8754 = !DILocation(line: 4675, column: 9, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 4675, column: 9)
!8756 = !DILocation(line: 4675, column: 9, scope: !8742)
!8757 = !DILocation(line: 4675, column: 34, scope: !8755)
!8758 = !DILocation(line: 4675, column: 25, scope: !8755)
!8759 = !DILocation(line: 4675, column: 17, scope: !8755)
!8760 = !DILocation(line: 4676, column: 9, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 4676, column: 9)
!8762 = !DILocation(line: 4676, column: 9, scope: !8742)
!8763 = !DILocation(line: 4676, column: 36, scope: !8761)
!8764 = !DILocation(line: 4676, column: 27, scope: !8761)
!8765 = !DILocation(line: 4676, column: 18, scope: !8761)
!8766 = !DILocation(line: 4677, column: 19, scope: !8742)
!8767 = !DILocation(line: 4677, column: 5, scope: !8742)
!8768 = !DILocation(line: 0, scope: !8751)
!8769 = !DILocation(line: 4678, column: 1, scope: !8742)
!8770 = distinct !DISubprogram(name: "RM_DictNext", scope: !3, file: !3, line: 4687, type: !8771, isLocal: false, isDefinition: true, scopeLine: 4687, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8773)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!143, !584, !8566, !8}
!8773 = !{!8774, !8775, !8776, !8777, !8778}
!8774 = !DILocalVariable(name: "ctx", arg: 1, scope: !8770, file: !3, line: 4687, type: !584)
!8775 = !DILocalVariable(name: "di", arg: 2, scope: !8770, file: !3, line: 4687, type: !8566)
!8776 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8770, file: !3, line: 4687, type: !8)
!8777 = !DILocalVariable(name: "keylen", scope: !8770, file: !3, line: 4688, type: !157)
!8778 = !DILocalVariable(name: "key", scope: !8770, file: !3, line: 4689, type: !6)
!8779 = !DILocation(line: 4687, column: 48, scope: !8770)
!8780 = !DILocation(line: 4687, column: 74, scope: !8770)
!8781 = !DILocation(line: 4687, column: 85, scope: !8770)
!8782 = !DILocation(line: 4663, column: 41, scope: !8709, inlinedAt: !8783)
!8783 = distinct !DILocation(line: 4689, column: 17, scope: !8770)
!8784 = !DILocation(line: 4663, column: 68, scope: !8709, inlinedAt: !8783)
!8785 = !DILocation(line: 4664, column: 23, scope: !8720, inlinedAt: !8783)
!8786 = !DILocation(line: 4664, column: 10, scope: !8720, inlinedAt: !8783)
!8787 = !DILocation(line: 4664, column: 9, scope: !8709, inlinedAt: !8783)
!8788 = !DILocation(line: 0, scope: !8770)
!8789 = !DILocation(line: 4668, column: 1, scope: !8709, inlinedAt: !8783)
!8790 = !DILocation(line: 4689, column: 11, scope: !8770)
!8791 = !DILocation(line: 4690, column: 9, scope: !8770)
!8792 = !DILocation(line: 4665, column: 34, scope: !8724, inlinedAt: !8783)
!8793 = !DILocation(line: 4665, column: 17, scope: !8724, inlinedAt: !8783)
!8794 = !DILocation(line: 4666, column: 9, scope: !8731, inlinedAt: !8783)
!8795 = !DILocation(line: 4666, column: 9, scope: !8709, inlinedAt: !8783)
!8796 = !DILocation(line: 4666, column: 36, scope: !8731, inlinedAt: !8783)
!8797 = !DILocation(line: 4666, column: 27, scope: !8731, inlinedAt: !8783)
!8798 = !DILocation(line: 4666, column: 18, scope: !8731, inlinedAt: !8783)
!8799 = !DILocation(line: 4667, column: 19, scope: !8709, inlinedAt: !8783)
!8800 = !DILocation(line: 4667, column: 5, scope: !8709, inlinedAt: !8783)
!8801 = !DILocation(line: 4690, column: 13, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 4690, column: 9)
!8803 = !DILocation(line: 4688, column: 12, scope: !8770)
!8804 = !DILocation(line: 4691, column: 12, scope: !8770)
!8805 = !DILocation(line: 4691, column: 5, scope: !8770)
!8806 = !DILocation(line: 0, scope: !8802)
!8807 = !DILocation(line: 4692, column: 1, scope: !8770)
!8808 = distinct !DISubprogram(name: "RM_DictPrev", scope: !3, file: !3, line: 4697, type: !8771, isLocal: false, isDefinition: true, scopeLine: 4697, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8809)
!8809 = !{!8810, !8811, !8812, !8813, !8814}
!8810 = !DILocalVariable(name: "ctx", arg: 1, scope: !8808, file: !3, line: 4697, type: !584)
!8811 = !DILocalVariable(name: "di", arg: 2, scope: !8808, file: !3, line: 4697, type: !8566)
!8812 = !DILocalVariable(name: "dataptr", arg: 3, scope: !8808, file: !3, line: 4697, type: !8)
!8813 = !DILocalVariable(name: "keylen", scope: !8808, file: !3, line: 4698, type: !157)
!8814 = !DILocalVariable(name: "key", scope: !8808, file: !3, line: 4699, type: !6)
!8815 = !DILocation(line: 4697, column: 48, scope: !8808)
!8816 = !DILocation(line: 4697, column: 74, scope: !8808)
!8817 = !DILocation(line: 4697, column: 85, scope: !8808)
!8818 = !DILocation(line: 4673, column: 41, scope: !8742, inlinedAt: !8819)
!8819 = distinct !DILocation(line: 4699, column: 17, scope: !8808)
!8820 = !DILocation(line: 4673, column: 68, scope: !8742, inlinedAt: !8819)
!8821 = !DILocation(line: 4674, column: 23, scope: !8751, inlinedAt: !8819)
!8822 = !DILocation(line: 4674, column: 10, scope: !8751, inlinedAt: !8819)
!8823 = !DILocation(line: 4674, column: 9, scope: !8742, inlinedAt: !8819)
!8824 = !DILocation(line: 0, scope: !8808)
!8825 = !DILocation(line: 4678, column: 1, scope: !8742, inlinedAt: !8819)
!8826 = !DILocation(line: 4699, column: 11, scope: !8808)
!8827 = !DILocation(line: 4700, column: 9, scope: !8808)
!8828 = !DILocation(line: 4675, column: 34, scope: !8755, inlinedAt: !8819)
!8829 = !DILocation(line: 4675, column: 17, scope: !8755, inlinedAt: !8819)
!8830 = !DILocation(line: 4676, column: 9, scope: !8761, inlinedAt: !8819)
!8831 = !DILocation(line: 4676, column: 9, scope: !8742, inlinedAt: !8819)
!8832 = !DILocation(line: 4676, column: 36, scope: !8761, inlinedAt: !8819)
!8833 = !DILocation(line: 4676, column: 27, scope: !8761, inlinedAt: !8819)
!8834 = !DILocation(line: 4676, column: 18, scope: !8761, inlinedAt: !8819)
!8835 = !DILocation(line: 4677, column: 19, scope: !8742, inlinedAt: !8819)
!8836 = !DILocation(line: 4677, column: 5, scope: !8742, inlinedAt: !8819)
!8837 = !DILocation(line: 4700, column: 13, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 4700, column: 9)
!8839 = !DILocation(line: 4698, column: 12, scope: !8808)
!8840 = !DILocation(line: 4701, column: 12, scope: !8808)
!8841 = !DILocation(line: 4701, column: 5, scope: !8808)
!8842 = !DILocation(line: 0, scope: !8838)
!8843 = !DILocation(line: 4702, column: 1, scope: !8808)
!8844 = distinct !DISubprogram(name: "RM_DictCompareC", scope: !3, file: !3, line: 4716, type: !8653, isLocal: false, isDefinition: true, scopeLine: 4716, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8845)
!8845 = !{!8846, !8847, !8848, !8849, !8850}
!8846 = !DILocalVariable(name: "di", arg: 1, scope: !8844, file: !3, line: 4716, type: !8566)
!8847 = !DILocalVariable(name: "op", arg: 2, scope: !8844, file: !3, line: 4716, type: !523)
!8848 = !DILocalVariable(name: "key", arg: 3, scope: !8844, file: !3, line: 4716, type: !6)
!8849 = !DILocalVariable(name: "keylen", arg: 4, scope: !8844, file: !3, line: 4716, type: !157)
!8850 = !DILocalVariable(name: "res", scope: !8844, file: !3, line: 4718, type: !17)
!8851 = !DILocation(line: 4716, column: 42, scope: !8844)
!8852 = !DILocation(line: 4716, column: 58, scope: !8844)
!8853 = !DILocation(line: 4716, column: 68, scope: !8844)
!8854 = !DILocation(line: 4716, column: 80, scope: !8844)
!8855 = !DILocation(line: 4717, column: 21, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 4717, column: 9)
!8857 = !DILocation(line: 4717, column: 9, scope: !8856)
!8858 = !DILocation(line: 4717, column: 9, scope: !8844)
!8859 = !DILocation(line: 4718, column: 15, scope: !8844)
!8860 = !DILocation(line: 4718, column: 9, scope: !8844)
!8861 = !DILocation(line: 4719, column: 12, scope: !8844)
!8862 = !DILocation(line: 0, scope: !8844)
!8863 = !DILocation(line: 4720, column: 1, scope: !8844)
!8864 = distinct !DISubprogram(name: "RM_DictCompare", scope: !3, file: !3, line: 4724, type: !8668, isLocal: false, isDefinition: true, scopeLine: 4724, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8865)
!8865 = !{!8866, !8867, !8868, !8869}
!8866 = !DILocalVariable(name: "di", arg: 1, scope: !8864, file: !3, line: 4724, type: !8566)
!8867 = !DILocalVariable(name: "op", arg: 2, scope: !8864, file: !3, line: 4724, type: !523)
!8868 = !DILocalVariable(name: "key", arg: 3, scope: !8864, file: !3, line: 4724, type: !143)
!8869 = !DILocalVariable(name: "res", scope: !8864, file: !3, line: 4726, type: !17)
!8870 = !DILocation(line: 4724, column: 41, scope: !8864)
!8871 = !DILocation(line: 4724, column: 57, scope: !8864)
!8872 = !DILocation(line: 4724, column: 80, scope: !8864)
!8873 = !DILocation(line: 4725, column: 21, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 4725, column: 9)
!8875 = !DILocation(line: 4725, column: 9, scope: !8874)
!8876 = !DILocation(line: 4725, column: 9, scope: !8864)
!8877 = !DILocation(line: 4726, column: 42, scope: !8864)
!8878 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !8879)
!8879 = distinct !DILocation(line: 4726, column: 46, scope: !8864)
!8880 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !8879)
!8881 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !8879)
!8882 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !8879)
!8883 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !8879)
!8884 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !8879)
!8885 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !8879)
!8886 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !8879)
!8887 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !8879)
!8888 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !8879)
!8889 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !8879)
!8890 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !8879)
!8891 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !8879)
!8892 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !8879)
!8893 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !8879)
!8894 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !8879)
!8895 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !8879)
!8896 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !8879)
!8897 = !DILocation(line: 0, scope: !2179, inlinedAt: !8879)
!8898 = !DILocation(line: 0, scope: !8864)
!8899 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !8879)
!8900 = !DILocation(line: 4726, column: 15, scope: !8864)
!8901 = !DILocation(line: 4726, column: 9, scope: !8864)
!8902 = !DILocation(line: 4727, column: 12, scope: !8864)
!8903 = !DILocation(line: 4728, column: 1, scope: !8864)
!8904 = distinct !DISubprogram(name: "RM_GetRandomBytes", scope: !3, file: !3, line: 4738, type: !8905, isLocal: false, isDefinition: true, scopeLine: 4738, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8907)
!8905 = !DISubroutineType(types: !8906)
!8906 = !{null, !346, !157}
!8907 = !{!8908, !8909}
!8908 = !DILocalVariable(name: "dst", arg: 1, scope: !8904, file: !3, line: 4738, type: !346)
!8909 = !DILocalVariable(name: "len", arg: 2, scope: !8904, file: !3, line: 4738, type: !157)
!8910 = !DILocation(line: 4738, column: 39, scope: !8904)
!8911 = !DILocation(line: 4738, column: 51, scope: !8904)
!8912 = !DILocation(line: 4739, column: 5, scope: !8904)
!8913 = !DILocation(line: 4740, column: 1, scope: !8904)
!8914 = distinct !DISubprogram(name: "RM_GetRandomHexChars", scope: !3, file: !3, line: 4745, type: !8915, isLocal: false, isDefinition: true, scopeLine: 4745, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8917)
!8915 = !DISubroutineType(types: !8916)
!8916 = !{null, !9, !157}
!8917 = !{!8918, !8919}
!8918 = !DILocalVariable(name: "dst", arg: 1, scope: !8914, file: !3, line: 4745, type: !9)
!8919 = !DILocalVariable(name: "len", arg: 2, scope: !8914, file: !3, line: 4745, type: !157)
!8920 = !DILocation(line: 4745, column: 33, scope: !8914)
!8921 = !DILocation(line: 4745, column: 45, scope: !8914)
!8922 = !DILocation(line: 4746, column: 5, scope: !8914)
!8923 = !DILocation(line: 4747, column: 1, scope: !8914)
!8924 = distinct !DISubprogram(name: "RM_ExportSharedAPI", scope: !3, file: !3, line: 4765, type: !8925, isLocal: false, isDefinition: true, scopeLine: 4765, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8927)
!8925 = !DISubroutineType(types: !8926)
!8926 = !{!17, !584, !523, !6}
!8927 = !{!8928, !8929, !8930, !8931}
!8928 = !DILocalVariable(name: "ctx", arg: 1, scope: !8924, file: !3, line: 4765, type: !584)
!8929 = !DILocalVariable(name: "apiname", arg: 2, scope: !8924, file: !3, line: 4765, type: !523)
!8930 = !DILocalVariable(name: "func", arg: 3, scope: !8924, file: !3, line: 4765, type: !6)
!8931 = !DILocalVariable(name: "sapi", scope: !8924, file: !3, line: 4766, type: !8932)
!8932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8933, size: 64)
!8933 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleSharedAPI", file: !3, line: 66, baseType: !8934)
!8934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleSharedAPI", file: !3, line: 62, size: 128, elements: !8935)
!8935 = !{!8936, !8937}
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8934, file: !3, line: 63, baseType: !6, size: 64)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8934, file: !3, line: 64, baseType: !577, size: 64, offset: 64)
!8938 = !DILocation(line: 4765, column: 40, scope: !8924)
!8939 = !DILocation(line: 4765, column: 57, scope: !8924)
!8940 = !DILocation(line: 4765, column: 72, scope: !8924)
!8941 = !DILocation(line: 4766, column: 34, scope: !8924)
!8942 = !DILocation(line: 4766, column: 27, scope: !8924)
!8943 = !DILocation(line: 4767, column: 25, scope: !8924)
!8944 = !DILocation(line: 4767, column: 11, scope: !8924)
!8945 = !DILocation(line: 4767, column: 18, scope: !8924)
!8946 = !{!8947, !892, i64 8}
!8947 = !{!"RedisModuleSharedAPI", !892, i64 0, !892, i64 8}
!8948 = !DILocation(line: 4768, column: 11, scope: !8924)
!8949 = !DILocation(line: 4768, column: 16, scope: !8924)
!8950 = !{!8947, !892, i64 0}
!8951 = !DILocation(line: 4769, column: 24, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 4769, column: 9)
!8953 = !{!1050, !892, i64 192}
!8954 = !DILocation(line: 4769, column: 9, scope: !8952)
!8955 = !DILocation(line: 4769, column: 57, scope: !8952)
!8956 = !DILocation(line: 4769, column: 9, scope: !8924)
!8957 = !DILocation(line: 4770, column: 9, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 4769, column: 69)
!8959 = !DILocation(line: 4771, column: 9, scope: !8958)
!8960 = !DILocation(line: 0, scope: !8924)
!8961 = !DILocation(line: 0, scope: !8958)
!8962 = !DILocation(line: 4774, column: 1, scope: !8924)
!8963 = distinct !DISubprogram(name: "RM_GetSharedAPI", scope: !3, file: !3, line: 4809, type: !8964, isLocal: false, isDefinition: true, scopeLine: 4809, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8966)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{!6, !584, !523}
!8966 = !{!8967, !8968, !8969, !8970}
!8967 = !DILocalVariable(name: "ctx", arg: 1, scope: !8963, file: !3, line: 4809, type: !584)
!8968 = !DILocalVariable(name: "apiname", arg: 2, scope: !8963, file: !3, line: 4809, type: !523)
!8969 = !DILocalVariable(name: "de", scope: !8963, file: !3, line: 4810, type: !81)
!8970 = !DILocalVariable(name: "sapi", scope: !8963, file: !3, line: 4812, type: !8932)
!8971 = !DILocation(line: 4809, column: 39, scope: !8963)
!8972 = !DILocation(line: 4809, column: 56, scope: !8963)
!8973 = !DILocation(line: 4810, column: 37, scope: !8963)
!8974 = !DILocation(line: 4810, column: 21, scope: !8963)
!8975 = !DILocation(line: 4810, column: 16, scope: !8963)
!8976 = !DILocation(line: 4811, column: 12, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 4811, column: 9)
!8978 = !DILocation(line: 4811, column: 9, scope: !8963)
!8979 = !DILocation(line: 4812, column: 34, scope: !8963)
!8980 = !DILocation(line: 4812, column: 27, scope: !8963)
!8981 = !DILocation(line: 4813, column: 29, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 4813, column: 9)
!8983 = !DILocation(line: 4813, column: 37, scope: !8982)
!8984 = !DILocation(line: 4813, column: 49, scope: !8982)
!8985 = !DILocation(line: 4813, column: 9, scope: !8982)
!8986 = !DILocation(line: 4813, column: 57, scope: !8982)
!8987 = !DILocation(line: 4813, column: 9, scope: !8963)
!8988 = !DILocation(line: 4814, column: 31, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 4813, column: 66)
!8990 = !DILocation(line: 4814, column: 39, scope: !8989)
!8991 = !DILocation(line: 4814, column: 51, scope: !8989)
!8992 = !DILocation(line: 4814, column: 9, scope: !8989)
!8993 = !DILocation(line: 4815, column: 30, scope: !8989)
!8994 = !DILocation(line: 4815, column: 38, scope: !8989)
!8995 = !DILocation(line: 4815, column: 50, scope: !8989)
!8996 = !DILocation(line: 4815, column: 9, scope: !8989)
!8997 = !DILocation(line: 4816, column: 5, scope: !8989)
!8998 = !DILocation(line: 4817, column: 18, scope: !8963)
!8999 = !DILocation(line: 0, scope: !8963)
!9000 = !DILocation(line: 4818, column: 1, scope: !8963)
!9001 = distinct !DISubprogram(name: "moduleUnregisterSharedAPI", scope: !3, file: !3, line: 4826, type: !9002, isLocal: false, isDefinition: true, scopeLine: 4826, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9004)
!9002 = !DISubroutineType(types: !9003)
!9003 = !{!17, !577}
!9004 = !{!9005, !9006, !9007, !9008, !9009, !9011}
!9005 = !DILocalVariable(name: "module", arg: 1, scope: !9001, file: !3, line: 4826, type: !577)
!9006 = !DILocalVariable(name: "count", scope: !9001, file: !3, line: 4827, type: !17)
!9007 = !DILocalVariable(name: "di", scope: !9001, file: !3, line: 4828, type: !744)
!9008 = !DILocalVariable(name: "de", scope: !9001, file: !3, line: 4829, type: !81)
!9009 = !DILocalVariable(name: "apiname", scope: !9010, file: !3, line: 4831, type: !523)
!9010 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 4830, column: 41)
!9011 = !DILocalVariable(name: "sapi", scope: !9010, file: !3, line: 4832, type: !8932)
!9012 = !DILocation(line: 4826, column: 44, scope: !9001)
!9013 = !DILocation(line: 4827, column: 9, scope: !9001)
!9014 = !DILocation(line: 4828, column: 51, scope: !9001)
!9015 = !DILocation(line: 4828, column: 24, scope: !9001)
!9016 = !DILocation(line: 4828, column: 19, scope: !9001)
!9017 = !DILocation(line: 4830, column: 5, scope: !9001)
!9018 = !DILocation(line: 4830, column: 18, scope: !9001)
!9019 = !DILocation(line: 4829, column: 16, scope: !9001)
!9020 = !DILocation(line: 4830, column: 32, scope: !9001)
!9021 = !DILocation(line: 4831, column: 31, scope: !9010)
!9022 = !{!9023, !892, i64 0}
!9023 = !{!"dictEntry", !892, i64 0, !893, i64 8, !892, i64 16}
!9024 = !DILocation(line: 4831, column: 21, scope: !9010)
!9025 = !DILocation(line: 4832, column: 38, scope: !9010)
!9026 = !DILocation(line: 4832, column: 31, scope: !9010)
!9027 = !DILocation(line: 4833, column: 19, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 4833, column: 13)
!9029 = !DILocation(line: 4833, column: 26, scope: !9028)
!9030 = !DILocation(line: 4833, column: 13, scope: !9010)
!9031 = !DILocation(line: 4834, column: 31, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 4833, column: 37)
!9033 = !DILocation(line: 4834, column: 13, scope: !9032)
!9034 = !DILocation(line: 4835, column: 13, scope: !9032)
!9035 = !DILocation(line: 4836, column: 18, scope: !9032)
!9036 = !DILocation(line: 4837, column: 9, scope: !9032)
!9037 = !DILocation(line: 0, scope: !9001)
!9038 = distinct !{!9038, !9017, !9039}
!9039 = !DILocation(line: 4838, column: 5, scope: !9001)
!9040 = !DILocation(line: 0, scope: !9032)
!9041 = !DILocation(line: 4839, column: 5, scope: !9001)
!9042 = !DILocation(line: 4840, column: 5, scope: !9001)
!9043 = distinct !DISubprogram(name: "moduleUnregisterUsedAPI", scope: !3, file: !3, line: 4847, type: !9002, isLocal: false, isDefinition: true, scopeLine: 4847, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9044)
!9044 = !{!9045, !9046, !9047, !9048, !9049, !9051}
!9045 = !DILocalVariable(name: "module", arg: 1, scope: !9043, file: !3, line: 4847, type: !577)
!9046 = !DILocalVariable(name: "li", scope: !9043, file: !3, line: 4848, type: !759)
!9047 = !DILocalVariable(name: "ln", scope: !9043, file: !3, line: 4849, type: !120)
!9048 = !DILocalVariable(name: "count", scope: !9043, file: !3, line: 4850, type: !17)
!9049 = !DILocalVariable(name: "used", scope: !9050, file: !3, line: 4854, type: !577)
!9050 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 4853, column: 33)
!9051 = !DILocalVariable(name: "ln", scope: !9050, file: !3, line: 4855, type: !120)
!9052 = !DILocation(line: 4847, column: 42, scope: !9043)
!9053 = !DILocation(line: 4848, column: 5, scope: !9043)
!9054 = !DILocation(line: 4850, column: 9, scope: !9043)
!9055 = !DILocation(line: 4852, column: 24, scope: !9043)
!9056 = !DILocation(line: 4848, column: 14, scope: !9043)
!9057 = !DILocation(line: 4852, column: 5, scope: !9043)
!9058 = !DILocation(line: 4853, column: 5, scope: !9043)
!9059 = !DILocation(line: 4853, column: 17, scope: !9043)
!9060 = !DILocation(line: 4849, column: 15, scope: !9043)
!9061 = !DILocation(line: 4854, column: 33, scope: !9050)
!9062 = !DILocation(line: 4854, column: 22, scope: !9050)
!9063 = !DILocation(line: 4855, column: 44, scope: !9050)
!9064 = !DILocation(line: 4855, column: 24, scope: !9050)
!9065 = !DILocation(line: 4855, column: 19, scope: !9050)
!9066 = !DILocation(line: 4856, column: 13, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 4856, column: 13)
!9068 = !DILocation(line: 4856, column: 13, scope: !9050)
!9069 = !DILocation(line: 4857, column: 33, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 4856, column: 17)
!9071 = !DILocation(line: 4857, column: 13, scope: !9070)
!9072 = !DILocation(line: 4858, column: 18, scope: !9070)
!9073 = !DILocation(line: 4859, column: 9, scope: !9070)
!9074 = !DILocation(line: 0, scope: !9043)
!9075 = distinct !{!9075, !9058, !9076}
!9076 = !DILocation(line: 4860, column: 5, scope: !9043)
!9077 = !DILocation(line: 0, scope: !9070)
!9078 = !DILocation(line: 4862, column: 1, scope: !9043)
!9079 = !DILocation(line: 4861, column: 5, scope: !9043)
!9080 = distinct !DISubprogram(name: "moduleUnregisterFilters", scope: !3, file: !3, line: 4868, type: !9002, isLocal: false, isDefinition: true, scopeLine: 4868, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9081)
!9081 = !{!9082, !9083, !9084, !9085, !9086, !9088}
!9082 = !DILocalVariable(name: "module", arg: 1, scope: !9080, file: !3, line: 4868, type: !577)
!9083 = !DILocalVariable(name: "li", scope: !9080, file: !3, line: 4869, type: !759)
!9084 = !DILocalVariable(name: "ln", scope: !9080, file: !3, line: 4870, type: !120)
!9085 = !DILocalVariable(name: "count", scope: !9080, file: !3, line: 4871, type: !17)
!9086 = !DILocalVariable(name: "filter", scope: !9087, file: !3, line: 4875, type: !5681)
!9087 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 4874, column: 33)
!9088 = !DILocalVariable(name: "ln", scope: !9087, file: !3, line: 4876, type: !120)
!9089 = !DILocation(line: 4868, column: 42, scope: !9080)
!9090 = !DILocation(line: 4869, column: 5, scope: !9080)
!9091 = !DILocation(line: 4871, column: 9, scope: !9080)
!9092 = !DILocation(line: 4873, column: 24, scope: !9080)
!9093 = !DILocation(line: 4869, column: 14, scope: !9080)
!9094 = !DILocation(line: 4873, column: 5, scope: !9080)
!9095 = !DILocation(line: 4874, column: 5, scope: !9080)
!9096 = !DILocation(line: 4874, column: 17, scope: !9080)
!9097 = !DILocation(line: 4870, column: 15, scope: !9080)
!9098 = !DILocation(line: 4875, column: 48, scope: !9087)
!9099 = !DILocation(line: 4875, column: 35, scope: !9087)
!9100 = !DILocation(line: 4876, column: 38, scope: !9087)
!9101 = !DILocation(line: 4876, column: 24, scope: !9087)
!9102 = !DILocation(line: 4876, column: 19, scope: !9087)
!9103 = !DILocation(line: 4877, column: 13, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 4877, column: 13)
!9105 = !DILocation(line: 4877, column: 13, scope: !9087)
!9106 = !DILocation(line: 4878, column: 25, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 4877, column: 17)
!9108 = !DILocation(line: 4878, column: 13, scope: !9107)
!9109 = !DILocation(line: 4879, column: 18, scope: !9107)
!9110 = !DILocation(line: 4880, column: 9, scope: !9107)
!9111 = !DILocation(line: 0, scope: !9080)
!9112 = !DILocation(line: 4881, column: 9, scope: !9087)
!9113 = distinct !{!9113, !9095, !9114}
!9114 = !DILocation(line: 4882, column: 5, scope: !9080)
!9115 = !DILocation(line: 0, scope: !9107)
!9116 = !DILocation(line: 4884, column: 1, scope: !9080)
!9117 = !DILocation(line: 4883, column: 5, scope: !9080)
!9118 = distinct !DISubprogram(name: "RM_RegisterCommandFilter", scope: !3, file: !3, line: 4942, type: !9119, isLocal: false, isDefinition: true, scopeLine: 4942, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9121)
!9119 = !DISubroutineType(types: !9120)
!9120 = !{!5681, !584, !5687, !17}
!9121 = !{!9122, !9123, !9124, !9125}
!9122 = !DILocalVariable(name: "ctx", arg: 1, scope: !9118, file: !3, line: 4942, type: !584)
!9123 = !DILocalVariable(name: "callback", arg: 2, scope: !9118, file: !3, line: 4942, type: !5687)
!9124 = !DILocalVariable(name: "flags", arg: 3, scope: !9118, file: !3, line: 4942, type: !17)
!9125 = !DILocalVariable(name: "filter", scope: !9118, file: !3, line: 4943, type: !5681)
!9126 = !DILocation(line: 4942, column: 68, scope: !9118)
!9127 = !DILocation(line: 4942, column: 102, scope: !9118)
!9128 = !DILocation(line: 4942, column: 116, scope: !9118)
!9129 = !DILocation(line: 4943, column: 40, scope: !9118)
!9130 = !DILocation(line: 4943, column: 31, scope: !9118)
!9131 = !DILocation(line: 4944, column: 27, scope: !9118)
!9132 = !DILocation(line: 4944, column: 20, scope: !9118)
!9133 = !DILocation(line: 4945, column: 13, scope: !9118)
!9134 = !DILocation(line: 4945, column: 22, scope: !9118)
!9135 = !DILocation(line: 4946, column: 13, scope: !9118)
!9136 = !DILocation(line: 4946, column: 19, scope: !9118)
!9137 = !DILocation(line: 4948, column: 21, scope: !9118)
!9138 = !DILocation(line: 4948, column: 5, scope: !9118)
!9139 = !DILocation(line: 4949, column: 26, scope: !9118)
!9140 = !DILocation(line: 4949, column: 34, scope: !9118)
!9141 = !DILocation(line: 4949, column: 5, scope: !9118)
!9142 = !DILocation(line: 4950, column: 5, scope: !9118)
!9143 = distinct !DISubprogram(name: "RM_UnregisterCommandFilter", scope: !3, file: !3, line: 4955, type: !9144, isLocal: false, isDefinition: true, scopeLine: 4955, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9146)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!17, !584, !5681}
!9146 = !{!9147, !9148, !9149}
!9147 = !DILocalVariable(name: "ctx", arg: 1, scope: !9143, file: !3, line: 4955, type: !584)
!9148 = !DILocalVariable(name: "filter", arg: 2, scope: !9143, file: !3, line: 4955, type: !5681)
!9149 = !DILocalVariable(name: "ln", scope: !9143, file: !3, line: 4956, type: !120)
!9150 = !DILocation(line: 4955, column: 48, scope: !9143)
!9151 = !DILocation(line: 4955, column: 79, scope: !9143)
!9152 = !DILocation(line: 4959, column: 17, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 4959, column: 9)
!9154 = !DILocation(line: 4959, column: 32, scope: !9153)
!9155 = !DILocation(line: 4959, column: 24, scope: !9153)
!9156 = !DILocation(line: 4959, column: 9, scope: !9143)
!9157 = !DILocation(line: 4961, column: 24, scope: !9143)
!9158 = !DILocation(line: 4961, column: 45, scope: !9143)
!9159 = !DILocation(line: 4961, column: 10, scope: !9143)
!9160 = !DILocation(line: 4956, column: 15, scope: !9143)
!9161 = !DILocation(line: 4962, column: 10, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 4962, column: 9)
!9163 = !DILocation(line: 4962, column: 9, scope: !9143)
!9164 = !DILocation(line: 4963, column: 17, scope: !9143)
!9165 = !DILocation(line: 4963, column: 5, scope: !9143)
!9166 = !DILocation(line: 4965, column: 29, scope: !9143)
!9167 = !DILocation(line: 4965, column: 37, scope: !9143)
!9168 = !DILocation(line: 4965, column: 10, scope: !9143)
!9169 = !DILocation(line: 4966, column: 10, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 4966, column: 9)
!9171 = !DILocation(line: 4966, column: 9, scope: !9143)
!9172 = !DILocation(line: 4967, column: 22, scope: !9143)
!9173 = !DILocation(line: 4967, column: 30, scope: !9143)
!9174 = !DILocation(line: 4967, column: 5, scope: !9143)
!9175 = !DILocation(line: 4969, column: 5, scope: !9143)
!9176 = !DILocation(line: 0, scope: !9162)
!9177 = !DILocation(line: 0, scope: !9153)
!9178 = !DILocation(line: 4970, column: 1, scope: !9143)
!9179 = distinct !DISubprogram(name: "RM_CommandFilterArgsCount", scope: !3, file: !3, line: 5003, type: !9180, isLocal: false, isDefinition: true, scopeLine: 5004, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9182)
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!17, !5691}
!9182 = !{!9183}
!9183 = !DILocalVariable(name: "fctx", arg: 1, scope: !9179, file: !3, line: 5003, type: !5691)
!9184 = !DILocation(line: 5003, column: 60, scope: !9179)
!9185 = !DILocation(line: 5005, column: 18, scope: !9179)
!9186 = !DILocation(line: 5005, column: 5, scope: !9179)
!9187 = distinct !DISubprogram(name: "RM_CommandFilterArgGet", scope: !3, file: !3, line: 5011, type: !9188, isLocal: false, isDefinition: true, scopeLine: 5012, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9190)
!9188 = !DISubroutineType(types: !9189)
!9189 = !{!2064, !5691, !17}
!9190 = !{!9191, !9192}
!9191 = !DILocalVariable(name: "fctx", arg: 1, scope: !9187, file: !3, line: 5011, type: !5691)
!9192 = !DILocalVariable(name: "pos", arg: 2, scope: !9187, file: !3, line: 5011, type: !17)
!9193 = !DILocation(line: 5011, column: 78, scope: !9187)
!9194 = !DILocation(line: 5011, column: 88, scope: !9187)
!9195 = !DILocation(line: 5013, column: 13, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 5013, column: 9)
!9197 = !DILocation(line: 5013, column: 17, scope: !9196)
!9198 = !DILocation(line: 5013, column: 33, scope: !9196)
!9199 = !DILocation(line: 5013, column: 24, scope: !9196)
!9200 = !DILocation(line: 5013, column: 9, scope: !9187)
!9201 = !DILocation(line: 5014, column: 18, scope: !9187)
!9202 = !DILocation(line: 5014, column: 12, scope: !9187)
!9203 = !DILocation(line: 5014, column: 5, scope: !9187)
!9204 = !DILocation(line: 0, scope: !9187)
!9205 = !DILocation(line: 0, scope: !9196)
!9206 = !DILocation(line: 5015, column: 1, scope: !9187)
!9207 = distinct !DISubprogram(name: "RM_CommandFilterArgInsert", scope: !3, file: !3, line: 5023, type: !9208, isLocal: false, isDefinition: true, scopeLine: 5024, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9210)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{!17, !5691, !17, !143}
!9210 = !{!9211, !9212, !9213, !9214}
!9211 = !DILocalVariable(name: "fctx", arg: 1, scope: !9207, file: !3, line: 5023, type: !5691)
!9212 = !DILocalVariable(name: "pos", arg: 2, scope: !9207, file: !3, line: 5023, type: !17)
!9213 = !DILocalVariable(name: "arg", arg: 3, scope: !9207, file: !3, line: 5023, type: !143)
!9214 = !DILocalVariable(name: "i", scope: !9207, file: !3, line: 5025, type: !17)
!9215 = !DILocation(line: 5023, column: 60, scope: !9207)
!9216 = !DILocation(line: 5023, column: 70, scope: !9207)
!9217 = !DILocation(line: 5023, column: 94, scope: !9207)
!9218 = !DILocation(line: 5027, column: 13, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 5027, column: 9)
!9220 = !DILocation(line: 5027, column: 17, scope: !9219)
!9221 = !DILocation(line: 5027, column: 32, scope: !9219)
!9222 = !DILocation(line: 5027, column: 24, scope: !9219)
!9223 = !DILocation(line: 5027, column: 9, scope: !9207)
!9224 = !DILocation(line: 5029, column: 33, scope: !9207)
!9225 = !DILocation(line: 5029, column: 50, scope: !9207)
!9226 = !DILocation(line: 5029, column: 39, scope: !9207)
!9227 = !DILocation(line: 5029, column: 53, scope: !9207)
!9228 = !DILocation(line: 5029, column: 18, scope: !9207)
!9229 = !DILocation(line: 5029, column: 16, scope: !9207)
!9230 = !DILocation(line: 5030, column: 20, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 5030, column: 5)
!9232 = !DILocation(line: 5025, column: 9, scope: !9207)
!9233 = !DILocation(line: 5030, column: 10, scope: !9231)
!9234 = !DILocation(line: 5030, column: 28, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 5030, column: 5)
!9236 = !DILocation(line: 5030, column: 5, scope: !9231)
!9237 = !DILocation(line: 0, scope: !9207)
!9238 = !DILocation(line: 5033, column: 5, scope: !9207)
!9239 = !DILocation(line: 5031, column: 37, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 5030, column: 40)
!9241 = !DILocation(line: 5031, column: 25, scope: !9240)
!9242 = !DILocation(line: 5031, column: 9, scope: !9240)
!9243 = !DILocation(line: 5031, column: 23, scope: !9240)
!9244 = !DILocation(line: 5030, column: 5, scope: !9235)
!9245 = distinct !{!9245, !9246}
!9246 = !{!"llvm.loop.unroll.disable"}
!9247 = distinct !{!9247, !9236, !9248}
!9248 = !DILocation(line: 5032, column: 5, scope: !9231)
!9249 = !DILocation(line: 5033, column: 21, scope: !9207)
!9250 = !DILocation(line: 5034, column: 15, scope: !9207)
!9251 = !DILocation(line: 5036, column: 5, scope: !9207)
!9252 = !DILocation(line: 0, scope: !9219)
!9253 = !DILocation(line: 5037, column: 1, scope: !9207)
!9254 = distinct !DISubprogram(name: "RM_CommandFilterArgReplace", scope: !3, file: !3, line: 5045, type: !9208, isLocal: false, isDefinition: true, scopeLine: 5046, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9255)
!9255 = !{!9256, !9257, !9258}
!9256 = !DILocalVariable(name: "fctx", arg: 1, scope: !9254, file: !3, line: 5045, type: !5691)
!9257 = !DILocalVariable(name: "pos", arg: 2, scope: !9254, file: !3, line: 5045, type: !17)
!9258 = !DILocalVariable(name: "arg", arg: 3, scope: !9254, file: !3, line: 5045, type: !143)
!9259 = !DILocation(line: 5045, column: 61, scope: !9254)
!9260 = !DILocation(line: 5045, column: 71, scope: !9254)
!9261 = !DILocation(line: 5045, column: 95, scope: !9254)
!9262 = !DILocation(line: 5047, column: 13, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 5047, column: 9)
!9264 = !DILocation(line: 5047, column: 17, scope: !9263)
!9265 = !DILocation(line: 5047, column: 33, scope: !9263)
!9266 = !DILocation(line: 5047, column: 24, scope: !9263)
!9267 = !DILocation(line: 5047, column: 9, scope: !9254)
!9268 = !DILocation(line: 5049, column: 24, scope: !9254)
!9269 = !DILocation(line: 5049, column: 18, scope: !9254)
!9270 = !DILocation(line: 5049, column: 5, scope: !9254)
!9271 = !DILocation(line: 5050, column: 11, scope: !9254)
!9272 = !DILocation(line: 5050, column: 5, scope: !9254)
!9273 = !DILocation(line: 5050, column: 21, scope: !9254)
!9274 = !DILocation(line: 5052, column: 5, scope: !9254)
!9275 = !DILocation(line: 0, scope: !9254)
!9276 = !DILocation(line: 0, scope: !9263)
!9277 = !DILocation(line: 5053, column: 1, scope: !9254)
!9278 = distinct !DISubprogram(name: "RM_CommandFilterArgDelete", scope: !3, file: !3, line: 5058, type: !9279, isLocal: false, isDefinition: true, scopeLine: 5059, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9281)
!9279 = !DISubroutineType(types: !9280)
!9280 = !{!17, !5691, !17}
!9281 = !{!9282, !9283, !9284}
!9282 = !DILocalVariable(name: "fctx", arg: 1, scope: !9278, file: !3, line: 5058, type: !5691)
!9283 = !DILocalVariable(name: "pos", arg: 2, scope: !9278, file: !3, line: 5058, type: !17)
!9284 = !DILocalVariable(name: "i", scope: !9278, file: !3, line: 5060, type: !17)
!9285 = !DILocation(line: 5058, column: 60, scope: !9278)
!9286 = !DILocation(line: 5058, column: 70, scope: !9278)
!9287 = !DILocation(line: 5061, column: 13, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 5061, column: 9)
!9289 = !DILocation(line: 5061, column: 17, scope: !9288)
!9290 = !DILocation(line: 5061, column: 33, scope: !9288)
!9291 = !DILocation(line: 5061, column: 24, scope: !9288)
!9292 = !DILocation(line: 5061, column: 9, scope: !9278)
!9293 = !DILocation(line: 5063, column: 24, scope: !9278)
!9294 = !DILocation(line: 5063, column: 18, scope: !9278)
!9295 = !DILocation(line: 5063, column: 5, scope: !9278)
!9296 = !DILocation(line: 5060, column: 9, scope: !9278)
!9297 = !DILocation(line: 5064, column: 10, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 5064, column: 5)
!9299 = !DILocation(line: 5064, column: 29, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9298, file: !3, line: 5064, column: 5)
!9301 = !DILocation(line: 5064, column: 33, scope: !9300)
!9302 = !DILocation(line: 5064, column: 21, scope: !9300)
!9303 = !DILocation(line: 5064, column: 5, scope: !9298)
!9304 = !DILocation(line: 5065, column: 31, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 5064, column: 42)
!9306 = !DILocation(line: 5065, column: 37, scope: !9305)
!9307 = !DILocation(line: 5065, column: 25, scope: !9305)
!9308 = !DILocation(line: 5065, column: 9, scope: !9305)
!9309 = !DILocation(line: 5065, column: 23, scope: !9305)
!9310 = !DILocation(line: 5064, column: 5, scope: !9300)
!9311 = distinct !{!9311, !9246}
!9312 = distinct !{!9312, !9303, !9313}
!9313 = !DILocation(line: 5066, column: 5, scope: !9298)
!9314 = !DILocation(line: 5067, column: 15, scope: !9278)
!9315 = !DILocation(line: 5069, column: 5, scope: !9278)
!9316 = !DILocation(line: 0, scope: !9278)
!9317 = !DILocation(line: 0, scope: !9288)
!9318 = !DILocation(line: 5070, column: 1, scope: !9278)
!9319 = distinct !DISubprogram(name: "dictCStringKeyHash", scope: !3, file: !3, line: 5079, type: !55, isLocal: false, isDefinition: true, scopeLine: 5079, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9320)
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "key", arg: 1, scope: !9319, file: !3, line: 5079, type: !57)
!9322 = !DILocation(line: 5079, column: 41, scope: !9319)
!9323 = !DILocation(line: 5080, column: 53, scope: !9319)
!9324 = !DILocation(line: 5080, column: 12, scope: !9319)
!9325 = !DILocation(line: 5080, column: 5, scope: !9319)
!9326 = distinct !DISubprogram(name: "dictCStringKeyCompare", scope: !3, file: !3, line: 5083, type: !66, isLocal: false, isDefinition: true, scopeLine: 5083, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9327)
!9327 = !{!9328, !9329, !9330}
!9328 = !DILocalVariable(name: "privdata", arg: 1, scope: !9326, file: !3, line: 5083, type: !6)
!9329 = !DILocalVariable(name: "key1", arg: 2, scope: !9326, file: !3, line: 5083, type: !57)
!9330 = !DILocalVariable(name: "key2", arg: 3, scope: !9326, file: !3, line: 5083, type: !57)
!9331 = !DILocation(line: 5083, column: 33, scope: !9326)
!9332 = !DILocation(line: 5083, column: 55, scope: !9326)
!9333 = !DILocation(line: 5083, column: 73, scope: !9326)
!9334 = !DILocation(line: 5085, column: 12, scope: !9326)
!9335 = !DILocation(line: 5085, column: 30, scope: !9326)
!9336 = !DILocation(line: 5085, column: 5, scope: !9326)
!9337 = distinct !DISubprogram(name: "moduleRegisterApi", scope: !3, file: !3, line: 5097, type: !9338, isLocal: false, isDefinition: true, scopeLine: 5097, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !9340)
!9338 = !DISubroutineType(types: !9339)
!9339 = !{!17, !523, !6}
!9340 = !{!9341, !9342}
!9341 = !DILocalVariable(name: "funcname", arg: 1, scope: !9337, file: !3, line: 5097, type: !523)
!9342 = !DILocalVariable(name: "funcptr", arg: 2, scope: !9337, file: !3, line: 5097, type: !6)
!9343 = !DILocation(line: 5097, column: 35, scope: !9337)
!9344 = !DILocation(line: 5097, column: 51, scope: !9337)
!9345 = !DILocation(line: 5098, column: 27, scope: !9337)
!9346 = !DILocation(line: 5098, column: 12, scope: !9337)
!9347 = !DILocation(line: 5098, column: 5, scope: !9337)
!9348 = distinct !DISubprogram(name: "moduleInitModulesSystem", scope: !3, file: !3, line: 5107, type: !492, isLocal: false, isDefinition: true, scopeLine: 5107, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!9349 = !DILocation(line: 5108, column: 30, scope: !9348)
!9350 = !DILocation(line: 5108, column: 28, scope: !9348)
!9351 = !DILocation(line: 5109, column: 31, scope: !9348)
!9352 = !DILocation(line: 5109, column: 29, scope: !9348)
!9353 = !{!1050, !892, i64 200}
!9354 = !DILocation(line: 5110, column: 15, scope: !9348)
!9355 = !DILocation(line: 5110, column: 13, scope: !9348)
!9356 = !DILocation(line: 5113, column: 33, scope: !9348)
!9357 = !DILocation(line: 5113, column: 31, scope: !9348)
!9358 = !DILocation(line: 5114, column: 37, scope: !9348)
!9359 = !DILocation(line: 5114, column: 35, scope: !9348)
!9360 = !DILocation(line: 5115, column: 36, scope: !9348)
!9361 = !DILocation(line: 5115, column: 42, scope: !9348)
!9362 = !DILocation(line: 5118, column: 28, scope: !9348)
!9363 = !DILocation(line: 5118, column: 26, scope: !9348)
!9364 = !DILocation(line: 5120, column: 5, scope: !9348)
!9365 = !DILocation(line: 5121, column: 9, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 5121, column: 9)
!9367 = !DILocation(line: 5121, column: 42, scope: !9366)
!9368 = !DILocation(line: 5121, column: 9, scope: !9348)
!9369 = !DILocation(line: 5124, column: 22, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 5121, column: 49)
!9371 = !DILocation(line: 5124, column: 13, scope: !9370)
!9372 = !DILocation(line: 5122, column: 9, scope: !9370)
!9373 = !DILocation(line: 5125, column: 9, scope: !9370)
!9374 = !DILocation(line: 5129, column: 23, scope: !9348)
!9375 = !DILocation(line: 5129, column: 5, scope: !9348)
!9376 = !DILocation(line: 5130, column: 23, scope: !9348)
!9377 = !DILocation(line: 5130, column: 5, scope: !9348)
!9378 = !DILocation(line: 5133, column: 14, scope: !9348)
!9379 = !DILocation(line: 5133, column: 12, scope: !9348)
!9380 = !DILocation(line: 5137, column: 5, scope: !9348)
!9381 = !DILocation(line: 5138, column: 1, scope: !9348)
!9382 = distinct !DISubprogram(name: "moduleRegisterCoreAPI", scope: !3, file: !3, line: 5364, type: !492, isLocal: false, isDefinition: true, scopeLine: 5364, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!9383 = !DILocation(line: 5365, column: 24, scope: !9382)
!9384 = !DILocation(line: 5365, column: 22, scope: !9382)
!9385 = !DILocation(line: 5366, column: 24, scope: !9382)
!9386 = !DILocation(line: 5366, column: 22, scope: !9382)
!9387 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9388)
!9388 = distinct !DILocation(line: 5367, column: 5, scope: !9382)
!9389 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9388)
!9390 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9388)
!9391 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9388)
!9392 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9388)
!9393 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9394)
!9394 = distinct !DILocation(line: 5368, column: 5, scope: !9382)
!9395 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9394)
!9396 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9394)
!9397 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9394)
!9398 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9394)
!9399 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9400)
!9400 = distinct !DILocation(line: 5369, column: 5, scope: !9382)
!9401 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9400)
!9402 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9400)
!9403 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9400)
!9404 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9400)
!9405 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9406)
!9406 = distinct !DILocation(line: 5370, column: 5, scope: !9382)
!9407 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9406)
!9408 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9406)
!9409 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9406)
!9410 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9406)
!9411 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9412)
!9412 = distinct !DILocation(line: 5371, column: 5, scope: !9382)
!9413 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9412)
!9414 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9412)
!9415 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9412)
!9416 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9412)
!9417 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9418)
!9418 = distinct !DILocation(line: 5372, column: 5, scope: !9382)
!9419 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9418)
!9420 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9418)
!9421 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9418)
!9422 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9418)
!9423 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9424)
!9424 = distinct !DILocation(line: 5373, column: 5, scope: !9382)
!9425 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9424)
!9426 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9424)
!9427 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9424)
!9428 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9424)
!9429 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9430)
!9430 = distinct !DILocation(line: 5374, column: 5, scope: !9382)
!9431 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9430)
!9432 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9430)
!9433 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9430)
!9434 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9430)
!9435 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9436)
!9436 = distinct !DILocation(line: 5375, column: 5, scope: !9382)
!9437 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9436)
!9438 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9436)
!9439 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9436)
!9440 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9436)
!9441 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9442)
!9442 = distinct !DILocation(line: 5376, column: 5, scope: !9382)
!9443 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9442)
!9444 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9442)
!9445 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9442)
!9446 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9442)
!9447 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9448)
!9448 = distinct !DILocation(line: 5377, column: 5, scope: !9382)
!9449 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9448)
!9450 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9448)
!9451 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9448)
!9452 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9448)
!9453 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9454)
!9454 = distinct !DILocation(line: 5378, column: 5, scope: !9382)
!9455 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9454)
!9456 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9454)
!9457 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9454)
!9458 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9454)
!9459 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9460)
!9460 = distinct !DILocation(line: 5379, column: 5, scope: !9382)
!9461 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9460)
!9462 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9460)
!9463 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9460)
!9464 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9460)
!9465 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9466)
!9466 = distinct !DILocation(line: 5380, column: 5, scope: !9382)
!9467 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9466)
!9468 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9466)
!9469 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9466)
!9470 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9466)
!9471 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9472)
!9472 = distinct !DILocation(line: 5381, column: 5, scope: !9382)
!9473 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9472)
!9474 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9472)
!9475 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9472)
!9476 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9472)
!9477 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9478)
!9478 = distinct !DILocation(line: 5382, column: 5, scope: !9382)
!9479 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9478)
!9480 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9478)
!9481 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9478)
!9482 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9478)
!9483 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9484)
!9484 = distinct !DILocation(line: 5383, column: 5, scope: !9382)
!9485 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9484)
!9486 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9484)
!9487 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9484)
!9488 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9484)
!9489 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9490)
!9490 = distinct !DILocation(line: 5384, column: 5, scope: !9382)
!9491 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9490)
!9492 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9490)
!9493 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9490)
!9494 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9490)
!9495 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9496)
!9496 = distinct !DILocation(line: 5385, column: 5, scope: !9382)
!9497 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9496)
!9498 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9496)
!9499 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9496)
!9500 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9496)
!9501 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9502)
!9502 = distinct !DILocation(line: 5386, column: 5, scope: !9382)
!9503 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9502)
!9504 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9502)
!9505 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9502)
!9506 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9502)
!9507 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9508)
!9508 = distinct !DILocation(line: 5387, column: 5, scope: !9382)
!9509 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9508)
!9510 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9508)
!9511 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9508)
!9512 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9508)
!9513 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9514)
!9514 = distinct !DILocation(line: 5388, column: 5, scope: !9382)
!9515 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9514)
!9516 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9514)
!9517 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9514)
!9518 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9514)
!9519 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9520)
!9520 = distinct !DILocation(line: 5389, column: 5, scope: !9382)
!9521 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9520)
!9522 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9520)
!9523 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9520)
!9524 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9520)
!9525 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9526)
!9526 = distinct !DILocation(line: 5390, column: 5, scope: !9382)
!9527 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9526)
!9528 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9526)
!9529 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9526)
!9530 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9526)
!9531 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9532)
!9532 = distinct !DILocation(line: 5391, column: 5, scope: !9382)
!9533 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9532)
!9534 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9532)
!9535 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9532)
!9536 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9532)
!9537 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9538)
!9538 = distinct !DILocation(line: 5392, column: 5, scope: !9382)
!9539 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9538)
!9540 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9538)
!9541 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9538)
!9542 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9538)
!9543 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9544)
!9544 = distinct !DILocation(line: 5393, column: 5, scope: !9382)
!9545 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9544)
!9546 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9544)
!9547 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9544)
!9548 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9544)
!9549 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9550)
!9550 = distinct !DILocation(line: 5394, column: 5, scope: !9382)
!9551 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9550)
!9552 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9550)
!9553 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9550)
!9554 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9550)
!9555 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9556)
!9556 = distinct !DILocation(line: 5395, column: 5, scope: !9382)
!9557 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9556)
!9558 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9556)
!9559 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9556)
!9560 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9556)
!9561 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9562)
!9562 = distinct !DILocation(line: 5396, column: 5, scope: !9382)
!9563 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9562)
!9564 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9562)
!9565 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9562)
!9566 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9562)
!9567 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9568)
!9568 = distinct !DILocation(line: 5397, column: 5, scope: !9382)
!9569 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9568)
!9570 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9568)
!9571 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9568)
!9572 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9568)
!9573 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9574)
!9574 = distinct !DILocation(line: 5398, column: 5, scope: !9382)
!9575 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9574)
!9576 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9574)
!9577 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9574)
!9578 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9574)
!9579 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9580)
!9580 = distinct !DILocation(line: 5399, column: 5, scope: !9382)
!9581 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9580)
!9582 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9580)
!9583 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9580)
!9584 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9580)
!9585 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9586)
!9586 = distinct !DILocation(line: 5400, column: 5, scope: !9382)
!9587 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9586)
!9588 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9586)
!9589 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9586)
!9590 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9586)
!9591 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9592)
!9592 = distinct !DILocation(line: 5401, column: 5, scope: !9382)
!9593 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9592)
!9594 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9592)
!9595 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9592)
!9596 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9592)
!9597 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9598)
!9598 = distinct !DILocation(line: 5402, column: 5, scope: !9382)
!9599 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9598)
!9600 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9598)
!9601 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9598)
!9602 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9598)
!9603 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9604)
!9604 = distinct !DILocation(line: 5403, column: 5, scope: !9382)
!9605 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9604)
!9606 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9604)
!9607 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9604)
!9608 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9604)
!9609 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9610)
!9610 = distinct !DILocation(line: 5404, column: 5, scope: !9382)
!9611 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9610)
!9612 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9610)
!9613 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9610)
!9614 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9610)
!9615 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 5405, column: 5, scope: !9382)
!9617 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9616)
!9618 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9616)
!9619 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9616)
!9620 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9616)
!9621 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9622)
!9622 = distinct !DILocation(line: 5406, column: 5, scope: !9382)
!9623 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9622)
!9624 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9622)
!9625 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9622)
!9626 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9622)
!9627 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9628)
!9628 = distinct !DILocation(line: 5407, column: 5, scope: !9382)
!9629 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9628)
!9630 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9628)
!9631 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9628)
!9632 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9628)
!9633 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9634)
!9634 = distinct !DILocation(line: 5408, column: 5, scope: !9382)
!9635 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9634)
!9636 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9634)
!9637 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9634)
!9638 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9634)
!9639 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9640)
!9640 = distinct !DILocation(line: 5409, column: 5, scope: !9382)
!9641 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9640)
!9642 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9640)
!9643 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9640)
!9644 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9640)
!9645 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9646)
!9646 = distinct !DILocation(line: 5410, column: 5, scope: !9382)
!9647 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9646)
!9648 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9646)
!9649 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9646)
!9650 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9646)
!9651 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 5411, column: 5, scope: !9382)
!9653 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9652)
!9654 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9652)
!9655 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9652)
!9656 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9652)
!9657 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9658)
!9658 = distinct !DILocation(line: 5412, column: 5, scope: !9382)
!9659 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9658)
!9660 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9658)
!9661 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9658)
!9662 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9658)
!9663 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 5413, column: 5, scope: !9382)
!9665 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9664)
!9666 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9664)
!9667 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9664)
!9668 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9664)
!9669 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 5414, column: 5, scope: !9382)
!9671 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9670)
!9672 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9670)
!9673 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9670)
!9674 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9670)
!9675 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9676)
!9676 = distinct !DILocation(line: 5415, column: 5, scope: !9382)
!9677 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9676)
!9678 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9676)
!9679 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9676)
!9680 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9676)
!9681 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9682)
!9682 = distinct !DILocation(line: 5416, column: 5, scope: !9382)
!9683 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9682)
!9684 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9682)
!9685 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9682)
!9686 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9682)
!9687 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 5417, column: 5, scope: !9382)
!9689 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9688)
!9690 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9688)
!9691 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9688)
!9692 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9688)
!9693 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9694)
!9694 = distinct !DILocation(line: 5418, column: 5, scope: !9382)
!9695 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9694)
!9696 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9694)
!9697 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9694)
!9698 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9694)
!9699 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9700)
!9700 = distinct !DILocation(line: 5419, column: 5, scope: !9382)
!9701 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9700)
!9702 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9700)
!9703 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9700)
!9704 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9700)
!9705 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 5420, column: 5, scope: !9382)
!9707 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9706)
!9708 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9706)
!9709 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9706)
!9710 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9706)
!9711 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9712)
!9712 = distinct !DILocation(line: 5421, column: 5, scope: !9382)
!9713 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9712)
!9714 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9712)
!9715 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9712)
!9716 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9712)
!9717 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 5422, column: 5, scope: !9382)
!9719 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9718)
!9720 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9718)
!9721 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9718)
!9722 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9718)
!9723 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 5423, column: 5, scope: !9382)
!9725 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9724)
!9726 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9724)
!9727 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9724)
!9728 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9724)
!9729 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9730)
!9730 = distinct !DILocation(line: 5424, column: 5, scope: !9382)
!9731 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9730)
!9732 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9730)
!9733 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9730)
!9734 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9730)
!9735 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9736)
!9736 = distinct !DILocation(line: 5425, column: 5, scope: !9382)
!9737 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9736)
!9738 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9736)
!9739 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9736)
!9740 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9736)
!9741 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9742)
!9742 = distinct !DILocation(line: 5426, column: 5, scope: !9382)
!9743 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9742)
!9744 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9742)
!9745 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9742)
!9746 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9742)
!9747 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 5427, column: 5, scope: !9382)
!9749 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9748)
!9750 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9748)
!9751 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9748)
!9752 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9748)
!9753 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 5428, column: 5, scope: !9382)
!9755 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9754)
!9756 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9754)
!9757 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9754)
!9758 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9754)
!9759 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9760)
!9760 = distinct !DILocation(line: 5429, column: 5, scope: !9382)
!9761 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9760)
!9762 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9760)
!9763 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9760)
!9764 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9760)
!9765 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9766)
!9766 = distinct !DILocation(line: 5430, column: 5, scope: !9382)
!9767 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9766)
!9768 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9766)
!9769 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9766)
!9770 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9766)
!9771 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9772)
!9772 = distinct !DILocation(line: 5431, column: 5, scope: !9382)
!9773 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9772)
!9774 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9772)
!9775 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9772)
!9776 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9772)
!9777 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9778)
!9778 = distinct !DILocation(line: 5432, column: 5, scope: !9382)
!9779 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9778)
!9780 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9778)
!9781 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9778)
!9782 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9778)
!9783 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9784)
!9784 = distinct !DILocation(line: 5433, column: 5, scope: !9382)
!9785 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9784)
!9786 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9784)
!9787 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9784)
!9788 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9784)
!9789 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9790)
!9790 = distinct !DILocation(line: 5434, column: 5, scope: !9382)
!9791 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9790)
!9792 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9790)
!9793 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9790)
!9794 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9790)
!9795 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9796)
!9796 = distinct !DILocation(line: 5435, column: 5, scope: !9382)
!9797 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9796)
!9798 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9796)
!9799 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9796)
!9800 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9796)
!9801 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9802)
!9802 = distinct !DILocation(line: 5436, column: 5, scope: !9382)
!9803 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9802)
!9804 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9802)
!9805 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9802)
!9806 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9802)
!9807 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9808)
!9808 = distinct !DILocation(line: 5437, column: 5, scope: !9382)
!9809 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9808)
!9810 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9808)
!9811 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9808)
!9812 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9808)
!9813 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9814)
!9814 = distinct !DILocation(line: 5438, column: 5, scope: !9382)
!9815 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9814)
!9816 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9814)
!9817 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9814)
!9818 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9814)
!9819 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9820)
!9820 = distinct !DILocation(line: 5439, column: 5, scope: !9382)
!9821 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9820)
!9822 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9820)
!9823 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9820)
!9824 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9820)
!9825 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9826)
!9826 = distinct !DILocation(line: 5440, column: 5, scope: !9382)
!9827 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9826)
!9828 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9826)
!9829 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9826)
!9830 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9826)
!9831 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9832)
!9832 = distinct !DILocation(line: 5441, column: 5, scope: !9382)
!9833 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9832)
!9834 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9832)
!9835 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9832)
!9836 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9832)
!9837 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9838)
!9838 = distinct !DILocation(line: 5442, column: 5, scope: !9382)
!9839 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9838)
!9840 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9838)
!9841 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9838)
!9842 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9838)
!9843 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9844)
!9844 = distinct !DILocation(line: 5443, column: 5, scope: !9382)
!9845 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9844)
!9846 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9844)
!9847 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9844)
!9848 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9844)
!9849 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9850)
!9850 = distinct !DILocation(line: 5444, column: 5, scope: !9382)
!9851 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9850)
!9852 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9850)
!9853 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9850)
!9854 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9850)
!9855 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9856)
!9856 = distinct !DILocation(line: 5445, column: 5, scope: !9382)
!9857 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9856)
!9858 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9856)
!9859 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9856)
!9860 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9856)
!9861 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9862)
!9862 = distinct !DILocation(line: 5446, column: 5, scope: !9382)
!9863 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9862)
!9864 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9862)
!9865 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9862)
!9866 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9862)
!9867 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9868)
!9868 = distinct !DILocation(line: 5447, column: 5, scope: !9382)
!9869 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9868)
!9870 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9868)
!9871 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9868)
!9872 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9868)
!9873 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9874)
!9874 = distinct !DILocation(line: 5448, column: 5, scope: !9382)
!9875 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9874)
!9876 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9874)
!9877 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9874)
!9878 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9874)
!9879 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9880)
!9880 = distinct !DILocation(line: 5449, column: 5, scope: !9382)
!9881 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9880)
!9882 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9880)
!9883 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9880)
!9884 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9880)
!9885 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9886)
!9886 = distinct !DILocation(line: 5450, column: 5, scope: !9382)
!9887 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9886)
!9888 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9886)
!9889 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9886)
!9890 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9886)
!9891 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9892)
!9892 = distinct !DILocation(line: 5451, column: 5, scope: !9382)
!9893 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9892)
!9894 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9892)
!9895 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9892)
!9896 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9892)
!9897 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9898)
!9898 = distinct !DILocation(line: 5452, column: 5, scope: !9382)
!9899 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9898)
!9900 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9898)
!9901 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9898)
!9902 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9898)
!9903 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9904)
!9904 = distinct !DILocation(line: 5453, column: 5, scope: !9382)
!9905 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9904)
!9906 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9904)
!9907 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9904)
!9908 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9904)
!9909 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9910)
!9910 = distinct !DILocation(line: 5454, column: 5, scope: !9382)
!9911 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9910)
!9912 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9910)
!9913 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9910)
!9914 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9910)
!9915 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9916)
!9916 = distinct !DILocation(line: 5455, column: 5, scope: !9382)
!9917 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9916)
!9918 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9916)
!9919 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9916)
!9920 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9916)
!9921 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9922)
!9922 = distinct !DILocation(line: 5456, column: 5, scope: !9382)
!9923 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9922)
!9924 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9922)
!9925 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9922)
!9926 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9922)
!9927 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9928)
!9928 = distinct !DILocation(line: 5457, column: 5, scope: !9382)
!9929 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9928)
!9930 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9928)
!9931 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9928)
!9932 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9928)
!9933 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9934)
!9934 = distinct !DILocation(line: 5458, column: 5, scope: !9382)
!9935 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9934)
!9936 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9934)
!9937 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9934)
!9938 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9934)
!9939 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9940)
!9940 = distinct !DILocation(line: 5459, column: 5, scope: !9382)
!9941 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9940)
!9942 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9940)
!9943 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9940)
!9944 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9940)
!9945 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 5460, column: 5, scope: !9382)
!9947 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9946)
!9948 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9946)
!9949 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9946)
!9950 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9946)
!9951 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9952)
!9952 = distinct !DILocation(line: 5461, column: 5, scope: !9382)
!9953 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9952)
!9954 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9952)
!9955 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9952)
!9956 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9952)
!9957 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9958)
!9958 = distinct !DILocation(line: 5462, column: 5, scope: !9382)
!9959 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9958)
!9960 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9958)
!9961 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9958)
!9962 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9958)
!9963 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9964)
!9964 = distinct !DILocation(line: 5463, column: 5, scope: !9382)
!9965 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9964)
!9966 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9964)
!9967 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9964)
!9968 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9964)
!9969 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9970)
!9970 = distinct !DILocation(line: 5464, column: 5, scope: !9382)
!9971 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9970)
!9972 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9970)
!9973 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9970)
!9974 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9970)
!9975 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9976)
!9976 = distinct !DILocation(line: 5465, column: 5, scope: !9382)
!9977 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9976)
!9978 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9976)
!9979 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9976)
!9980 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9976)
!9981 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9982)
!9982 = distinct !DILocation(line: 5466, column: 5, scope: !9382)
!9983 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9982)
!9984 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9982)
!9985 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9982)
!9986 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9982)
!9987 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9988)
!9988 = distinct !DILocation(line: 5467, column: 5, scope: !9382)
!9989 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9988)
!9990 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9988)
!9991 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9988)
!9992 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9988)
!9993 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !9994)
!9994 = distinct !DILocation(line: 5468, column: 5, scope: !9382)
!9995 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !9994)
!9996 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !9994)
!9997 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !9994)
!9998 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !9994)
!9999 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10000)
!10000 = distinct !DILocation(line: 5469, column: 5, scope: !9382)
!10001 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10000)
!10002 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10000)
!10003 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10000)
!10004 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10000)
!10005 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10006)
!10006 = distinct !DILocation(line: 5470, column: 5, scope: !9382)
!10007 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10006)
!10008 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10006)
!10009 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10006)
!10010 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10006)
!10011 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10012)
!10012 = distinct !DILocation(line: 5471, column: 5, scope: !9382)
!10013 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10012)
!10014 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10012)
!10015 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10012)
!10016 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10012)
!10017 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10018)
!10018 = distinct !DILocation(line: 5472, column: 5, scope: !9382)
!10019 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10018)
!10020 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10018)
!10021 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10018)
!10022 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10018)
!10023 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10024)
!10024 = distinct !DILocation(line: 5473, column: 5, scope: !9382)
!10025 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10024)
!10026 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10024)
!10027 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10024)
!10028 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10024)
!10029 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10030)
!10030 = distinct !DILocation(line: 5474, column: 5, scope: !9382)
!10031 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10030)
!10032 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10030)
!10033 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10030)
!10034 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10030)
!10035 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10036)
!10036 = distinct !DILocation(line: 5475, column: 5, scope: !9382)
!10037 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10036)
!10038 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10036)
!10039 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10036)
!10040 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10036)
!10041 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10042)
!10042 = distinct !DILocation(line: 5476, column: 5, scope: !9382)
!10043 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10042)
!10044 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10042)
!10045 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10042)
!10046 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10042)
!10047 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10048)
!10048 = distinct !DILocation(line: 5477, column: 5, scope: !9382)
!10049 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10048)
!10050 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10048)
!10051 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10048)
!10052 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10048)
!10053 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10054)
!10054 = distinct !DILocation(line: 5478, column: 5, scope: !9382)
!10055 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10054)
!10056 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10054)
!10057 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10054)
!10058 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10054)
!10059 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10060)
!10060 = distinct !DILocation(line: 5479, column: 5, scope: !9382)
!10061 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10060)
!10062 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10060)
!10063 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10060)
!10064 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10060)
!10065 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10066)
!10066 = distinct !DILocation(line: 5480, column: 5, scope: !9382)
!10067 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10066)
!10068 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10066)
!10069 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10066)
!10070 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10066)
!10071 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10072)
!10072 = distinct !DILocation(line: 5481, column: 5, scope: !9382)
!10073 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10072)
!10074 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10072)
!10075 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10072)
!10076 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10072)
!10077 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10078)
!10078 = distinct !DILocation(line: 5482, column: 5, scope: !9382)
!10079 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10078)
!10080 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10078)
!10081 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10078)
!10082 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10078)
!10083 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10084)
!10084 = distinct !DILocation(line: 5483, column: 5, scope: !9382)
!10085 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10084)
!10086 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10084)
!10087 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10084)
!10088 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10084)
!10089 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10090)
!10090 = distinct !DILocation(line: 5484, column: 5, scope: !9382)
!10091 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10090)
!10092 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10090)
!10093 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10090)
!10094 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10090)
!10095 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10096)
!10096 = distinct !DILocation(line: 5485, column: 5, scope: !9382)
!10097 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10096)
!10098 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10096)
!10099 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10096)
!10100 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10096)
!10101 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10102)
!10102 = distinct !DILocation(line: 5486, column: 5, scope: !9382)
!10103 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10102)
!10104 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10102)
!10105 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10102)
!10106 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10102)
!10107 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10108)
!10108 = distinct !DILocation(line: 5487, column: 5, scope: !9382)
!10109 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10108)
!10110 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10108)
!10111 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10108)
!10112 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10108)
!10113 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10114)
!10114 = distinct !DILocation(line: 5488, column: 5, scope: !9382)
!10115 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10114)
!10116 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10114)
!10117 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10114)
!10118 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10114)
!10119 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10120)
!10120 = distinct !DILocation(line: 5489, column: 5, scope: !9382)
!10121 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10120)
!10122 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10120)
!10123 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10120)
!10124 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10120)
!10125 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10126)
!10126 = distinct !DILocation(line: 5490, column: 5, scope: !9382)
!10127 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10126)
!10128 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10126)
!10129 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10126)
!10130 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10126)
!10131 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10132)
!10132 = distinct !DILocation(line: 5491, column: 5, scope: !9382)
!10133 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10132)
!10134 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10132)
!10135 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10132)
!10136 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10132)
!10137 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10138)
!10138 = distinct !DILocation(line: 5492, column: 5, scope: !9382)
!10139 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10138)
!10140 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10138)
!10141 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10138)
!10142 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10138)
!10143 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10144)
!10144 = distinct !DILocation(line: 5493, column: 5, scope: !9382)
!10145 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10144)
!10146 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10144)
!10147 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10144)
!10148 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10144)
!10149 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10150)
!10150 = distinct !DILocation(line: 5494, column: 5, scope: !9382)
!10151 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10150)
!10152 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10150)
!10153 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10150)
!10154 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10150)
!10155 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10156)
!10156 = distinct !DILocation(line: 5495, column: 5, scope: !9382)
!10157 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10156)
!10158 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10156)
!10159 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10156)
!10160 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10156)
!10161 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10162)
!10162 = distinct !DILocation(line: 5496, column: 5, scope: !9382)
!10163 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10162)
!10164 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10162)
!10165 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10162)
!10166 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10162)
!10167 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10168)
!10168 = distinct !DILocation(line: 5497, column: 5, scope: !9382)
!10169 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10168)
!10170 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10168)
!10171 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10168)
!10172 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10168)
!10173 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10174)
!10174 = distinct !DILocation(line: 5498, column: 5, scope: !9382)
!10175 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10174)
!10176 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10174)
!10177 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10174)
!10178 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10174)
!10179 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10180)
!10180 = distinct !DILocation(line: 5499, column: 5, scope: !9382)
!10181 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10180)
!10182 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10180)
!10183 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10180)
!10184 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10180)
!10185 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10186)
!10186 = distinct !DILocation(line: 5500, column: 5, scope: !9382)
!10187 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10186)
!10188 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10186)
!10189 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10186)
!10190 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10186)
!10191 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10192)
!10192 = distinct !DILocation(line: 5501, column: 5, scope: !9382)
!10193 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10192)
!10194 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10192)
!10195 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10192)
!10196 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10192)
!10197 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10198)
!10198 = distinct !DILocation(line: 5502, column: 5, scope: !9382)
!10199 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10198)
!10200 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10198)
!10201 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10198)
!10202 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10198)
!10203 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10204)
!10204 = distinct !DILocation(line: 5503, column: 5, scope: !9382)
!10205 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10204)
!10206 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10204)
!10207 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10204)
!10208 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10204)
!10209 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10210)
!10210 = distinct !DILocation(line: 5504, column: 5, scope: !9382)
!10211 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10210)
!10212 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10210)
!10213 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10210)
!10214 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10210)
!10215 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10216)
!10216 = distinct !DILocation(line: 5505, column: 5, scope: !9382)
!10217 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10216)
!10218 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10216)
!10219 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10216)
!10220 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10216)
!10221 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10222)
!10222 = distinct !DILocation(line: 5506, column: 5, scope: !9382)
!10223 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10222)
!10224 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10222)
!10225 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10222)
!10226 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10222)
!10227 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10228)
!10228 = distinct !DILocation(line: 5507, column: 5, scope: !9382)
!10229 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10228)
!10230 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10228)
!10231 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10228)
!10232 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10228)
!10233 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10234)
!10234 = distinct !DILocation(line: 5508, column: 5, scope: !9382)
!10235 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10234)
!10236 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10234)
!10237 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10234)
!10238 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10234)
!10239 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10240)
!10240 = distinct !DILocation(line: 5509, column: 5, scope: !9382)
!10241 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10240)
!10242 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10240)
!10243 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10240)
!10244 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10240)
!10245 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10246)
!10246 = distinct !DILocation(line: 5510, column: 5, scope: !9382)
!10247 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10246)
!10248 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10246)
!10249 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10246)
!10250 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10246)
!10251 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10252)
!10252 = distinct !DILocation(line: 5511, column: 5, scope: !9382)
!10253 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10252)
!10254 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10252)
!10255 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10252)
!10256 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10252)
!10257 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10258)
!10258 = distinct !DILocation(line: 5512, column: 5, scope: !9382)
!10259 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10258)
!10260 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10258)
!10261 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10258)
!10262 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10258)
!10263 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10264)
!10264 = distinct !DILocation(line: 5513, column: 5, scope: !9382)
!10265 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10264)
!10266 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10264)
!10267 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10264)
!10268 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10264)
!10269 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10270)
!10270 = distinct !DILocation(line: 5514, column: 5, scope: !9382)
!10271 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10270)
!10272 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10270)
!10273 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10270)
!10274 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10270)
!10275 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10276)
!10276 = distinct !DILocation(line: 5515, column: 5, scope: !9382)
!10277 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10276)
!10278 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10276)
!10279 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10276)
!10280 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10276)
!10281 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 5516, column: 5, scope: !9382)
!10283 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10282)
!10284 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10282)
!10285 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10282)
!10286 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10282)
!10287 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10288)
!10288 = distinct !DILocation(line: 5517, column: 5, scope: !9382)
!10289 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10288)
!10290 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10288)
!10291 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10288)
!10292 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10288)
!10293 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10294)
!10294 = distinct !DILocation(line: 5518, column: 5, scope: !9382)
!10295 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10294)
!10296 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10294)
!10297 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10294)
!10298 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10294)
!10299 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10300)
!10300 = distinct !DILocation(line: 5519, column: 5, scope: !9382)
!10301 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10300)
!10302 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10300)
!10303 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10300)
!10304 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10300)
!10305 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10306)
!10306 = distinct !DILocation(line: 5520, column: 5, scope: !9382)
!10307 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10306)
!10308 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10306)
!10309 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10306)
!10310 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10306)
!10311 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10312)
!10312 = distinct !DILocation(line: 5521, column: 5, scope: !9382)
!10313 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10312)
!10314 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10312)
!10315 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10312)
!10316 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10312)
!10317 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10318)
!10318 = distinct !DILocation(line: 5522, column: 5, scope: !9382)
!10319 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10318)
!10320 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10318)
!10321 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10318)
!10322 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10318)
!10323 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 5523, column: 5, scope: !9382)
!10325 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10324)
!10326 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10324)
!10327 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10324)
!10328 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10324)
!10329 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10330)
!10330 = distinct !DILocation(line: 5524, column: 5, scope: !9382)
!10331 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10330)
!10332 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10330)
!10333 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10330)
!10334 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10330)
!10335 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 5525, column: 5, scope: !9382)
!10337 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10336)
!10338 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10336)
!10339 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10336)
!10340 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10336)
!10341 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10342)
!10342 = distinct !DILocation(line: 5526, column: 5, scope: !9382)
!10343 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10342)
!10344 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10342)
!10345 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10342)
!10346 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10342)
!10347 = !DILocation(line: 5097, column: 35, scope: !9337, inlinedAt: !10348)
!10348 = distinct !DILocation(line: 5527, column: 5, scope: !9382)
!10349 = !DILocation(line: 5097, column: 51, scope: !9337, inlinedAt: !10348)
!10350 = !DILocation(line: 5098, column: 27, scope: !9337, inlinedAt: !10348)
!10351 = !DILocation(line: 5098, column: 12, scope: !9337, inlinedAt: !10348)
!10352 = !DILocation(line: 5098, column: 5, scope: !9337, inlinedAt: !10348)
!10353 = !DILocation(line: 5528, column: 1, scope: !9382)
!10354 = distinct !DISubprogram(name: "moduleLoadFromQueue", scope: !3, file: !3, line: 5149, type: !492, isLocal: false, isDefinition: true, scopeLine: 5149, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10355)
!10355 = !{!10356, !10357, !10358}
!10356 = !DILocalVariable(name: "li", scope: !10354, file: !3, line: 5150, type: !759)
!10357 = !DILocalVariable(name: "ln", scope: !10354, file: !3, line: 5151, type: !120)
!10358 = !DILocalVariable(name: "loadmod", scope: !10359, file: !3, line: 5155, type: !10360)
!10359 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 5154, column: 33)
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10361, size: 64)
!10361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleLoadQueueEntry", file: !13, line: 787, size: 192, elements: !10362)
!10362 = !{!10363, !10364, !10365}
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !10361, file: !13, line: 788, baseType: !154, size: 64)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !10361, file: !13, line: 789, baseType: !17, size: 32, offset: 64)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !10361, file: !13, line: 790, baseType: !165, size: 64, offset: 128)
!10366 = !DILocation(line: 5150, column: 5, scope: !10354)
!10367 = !DILocation(line: 5153, column: 23, scope: !10354)
!10368 = !DILocation(line: 5150, column: 14, scope: !10354)
!10369 = !DILocation(line: 5153, column: 5, scope: !10354)
!10370 = !DILocation(line: 5154, column: 5, scope: !10354)
!10371 = !DILocation(line: 5154, column: 17, scope: !10354)
!10372 = !DILocation(line: 5151, column: 15, scope: !10354)
!10373 = !DILocation(line: 5155, column: 52, scope: !10359)
!10374 = !DILocation(line: 5155, column: 38, scope: !10359)
!10375 = !DILocation(line: 5156, column: 33, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 5156, column: 13)
!10377 = !{!10378, !892, i64 0}
!10378 = !{!"moduleLoadQueueEntry", !892, i64 0, !895, i64 8, !892, i64 16}
!10379 = !DILocation(line: 5156, column: 56, scope: !10376)
!10380 = !{!10378, !892, i64 16}
!10381 = !DILocation(line: 5156, column: 70, scope: !10376)
!10382 = !{!10378, !895, i64 8}
!10383 = !DILocation(line: 5156, column: 13, scope: !10376)
!10384 = !DILocation(line: 5157, column: 13, scope: !10376)
!10385 = !DILocation(line: 5156, column: 13, scope: !10359)
!10386 = !DILocation(line: 5161, column: 26, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 5158, column: 9)
!10388 = !DILocation(line: 5159, column: 13, scope: !10387)
!10389 = !DILocation(line: 5162, column: 13, scope: !10387)
!10390 = distinct !{!10390, !10370, !10391}
!10391 = !DILocation(line: 5164, column: 5, scope: !10354)
!10392 = !DILocation(line: 5165, column: 1, scope: !10354)
!10393 = distinct !DISubprogram(name: "moduleLoad", scope: !3, file: !3, line: 5198, type: !10394, isLocal: false, isDefinition: true, scopeLine: 5198, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10396)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{!17, !523, !8, !17}
!10396 = !{!10397, !10398, !10399, !10400, !10401, !10402}
!10397 = !DILocalVariable(name: "path", arg: 1, scope: !10393, file: !3, line: 5198, type: !523)
!10398 = !DILocalVariable(name: "module_argv", arg: 2, scope: !10393, file: !3, line: 5198, type: !8)
!10399 = !DILocalVariable(name: "module_argc", arg: 3, scope: !10393, file: !3, line: 5198, type: !17)
!10400 = !DILocalVariable(name: "onload", scope: !10393, file: !3, line: 5199, type: !696)
!10401 = !DILocalVariable(name: "handle", scope: !10393, file: !3, line: 5200, type: !6)
!10402 = !DILocalVariable(name: "ctx", scope: !10393, file: !3, line: 5201, type: !585)
!10403 = !DILocation(line: 5198, column: 28, scope: !10393)
!10404 = !DILocation(line: 5198, column: 41, scope: !10393)
!10405 = !DILocation(line: 5198, column: 58, scope: !10393)
!10406 = !DILocation(line: 5201, column: 5, scope: !10393)
!10407 = !DILocation(line: 5201, column: 20, scope: !10393)
!10408 = !DILocation(line: 5203, column: 14, scope: !10393)
!10409 = !DILocation(line: 5200, column: 11, scope: !10393)
!10410 = !DILocation(line: 5204, column: 16, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 5204, column: 9)
!10412 = !DILocation(line: 5204, column: 9, scope: !10393)
!10413 = !DILocation(line: 5205, column: 69, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 5204, column: 25)
!10415 = !DILocation(line: 5205, column: 9, scope: !10414)
!10416 = !DILocation(line: 5206, column: 9, scope: !10414)
!10417 = !DILocation(line: 5208, column: 61, scope: !10393)
!10418 = !DILocation(line: 5209, column: 16, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 5209, column: 9)
!10420 = !DILocation(line: 5209, column: 9, scope: !10393)
!10421 = !DILocation(line: 5210, column: 9, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 5209, column: 25)
!10423 = !DILocation(line: 5211, column: 9, scope: !10422)
!10424 = !DILocation(line: 5214, column: 9, scope: !10422)
!10425 = !DILocation(line: 5208, column: 14, scope: !10393)
!10426 = !DILocation(line: 5199, column: 11, scope: !10393)
!10427 = !DILocation(line: 5216, column: 9, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 5216, column: 9)
!10429 = !DILocation(line: 5216, column: 53, scope: !10428)
!10430 = !DILocation(line: 5216, column: 9, scope: !10393)
!10431 = !DILocation(line: 5217, column: 17, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 5217, column: 13)
!10433 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 5216, column: 73)
!10434 = !DILocation(line: 5217, column: 13, scope: !10432)
!10435 = !DILocation(line: 5217, column: 13, scope: !10433)
!10436 = !DILocation(line: 5218, column: 13, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10432, file: !3, line: 5217, column: 25)
!10438 = !DILocation(line: 5219, column: 43, scope: !10437)
!10439 = !DILocation(line: 5219, column: 13, scope: !10437)
!10440 = !DILocation(line: 5220, column: 41, scope: !10437)
!10441 = !DILocation(line: 5220, column: 13, scope: !10437)
!10442 = !DILocation(line: 5221, column: 43, scope: !10437)
!10443 = !DILocalVariable(name: "module", arg: 1, scope: !10444, file: !3, line: 5167, type: !273)
!10444 = distinct !DISubprogram(name: "moduleFreeModuleStructure", scope: !3, file: !3, line: 5167, type: !10445, isLocal: false, isDefinition: true, scopeLine: 5167, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10447)
!10445 = !DISubroutineType(types: !10446)
!10446 = !{null, !273}
!10447 = !{!10443}
!10448 = !DILocation(line: 5167, column: 52, scope: !10444, inlinedAt: !10449)
!10449 = distinct !DILocation(line: 5221, column: 13, scope: !10437)
!10450 = !DILocation(line: 5168, column: 25, scope: !10444, inlinedAt: !10449)
!10451 = !DILocation(line: 5168, column: 5, scope: !10444, inlinedAt: !10449)
!10452 = !DILocation(line: 5169, column: 25, scope: !10444, inlinedAt: !10449)
!10453 = !DILocation(line: 5169, column: 5, scope: !10444, inlinedAt: !10449)
!10454 = !DILocation(line: 5170, column: 21, scope: !10444, inlinedAt: !10449)
!10455 = !DILocation(line: 5170, column: 5, scope: !10444, inlinedAt: !10449)
!10456 = !DILocation(line: 5171, column: 11, scope: !10444, inlinedAt: !10449)
!10457 = !DILocation(line: 5171, column: 5, scope: !10444, inlinedAt: !10449)
!10458 = !DILocation(line: 5172, column: 1, scope: !10444, inlinedAt: !10449)
!10459 = !DILocation(line: 5222, column: 9, scope: !10437)
!10460 = !DILocation(line: 5223, column: 9, scope: !10433)
!10461 = !DILocation(line: 5224, column: 9, scope: !10433)
!10462 = !DILocation(line: 5226, column: 9, scope: !10433)
!10463 = !DILocation(line: 5230, column: 13, scope: !10393)
!10464 = !DILocation(line: 5230, column: 25, scope: !10393)
!10465 = !DILocation(line: 5230, column: 33, scope: !10393)
!10466 = !DILocation(line: 5230, column: 38, scope: !10393)
!10467 = !DILocation(line: 5230, column: 5, scope: !10393)
!10468 = !DILocation(line: 5231, column: 9, scope: !10393)
!10469 = !DILocation(line: 5231, column: 17, scope: !10393)
!10470 = !DILocation(line: 5231, column: 24, scope: !10393)
!10471 = !{!1174, !892, i64 0}
!10472 = !DILocation(line: 5232, column: 66, scope: !10393)
!10473 = !DILocation(line: 5232, column: 5, scope: !10393)
!10474 = !DILocation(line: 5233, column: 5, scope: !10393)
!10475 = !DILocation(line: 5234, column: 5, scope: !10393)
!10476 = !DILocation(line: 0, scope: !10393)
!10477 = !DILocation(line: 0, scope: !10414)
!10478 = !DILocation(line: 5235, column: 1, scope: !10393)
!10479 = !DILocation(line: 5167, column: 52, scope: !10444)
!10480 = !DILocation(line: 5168, column: 25, scope: !10444)
!10481 = !DILocation(line: 5168, column: 5, scope: !10444)
!10482 = !DILocation(line: 5169, column: 25, scope: !10444)
!10483 = !DILocation(line: 5169, column: 5, scope: !10444)
!10484 = !DILocation(line: 5170, column: 21, scope: !10444)
!10485 = !DILocation(line: 5170, column: 5, scope: !10444)
!10486 = !DILocation(line: 5171, column: 11, scope: !10444)
!10487 = !DILocation(line: 5171, column: 5, scope: !10444)
!10488 = !DILocation(line: 5172, column: 1, scope: !10444)
!10489 = distinct !DISubprogram(name: "moduleUnregisterCommands", scope: !3, file: !3, line: 5174, type: !10445, isLocal: false, isDefinition: true, scopeLine: 5174, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10490)
!10490 = !{!10491, !10492, !10493, !10494, !10496, !10499}
!10491 = !DILocalVariable(name: "module", arg: 1, scope: !10489, file: !3, line: 5174, type: !273)
!10492 = !DILocalVariable(name: "di", scope: !10489, file: !3, line: 5176, type: !744)
!10493 = !DILocalVariable(name: "de", scope: !10489, file: !3, line: 5177, type: !81)
!10494 = !DILocalVariable(name: "cmd", scope: !10495, file: !3, line: 5179, type: !18)
!10495 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 5178, column: 41)
!10496 = !DILocalVariable(name: "cp", scope: !10497, file: !3, line: 5181, type: !1337)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !3, line: 5180, column: 56)
!10498 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5180, column: 13)
!10499 = !DILocalVariable(name: "cmdname", scope: !10497, file: !3, line: 5183, type: !154)
!10500 = !DILocation(line: 5174, column: 51, scope: !10489)
!10501 = !DILocation(line: 5176, column: 51, scope: !10489)
!10502 = !DILocation(line: 5176, column: 24, scope: !10489)
!10503 = !DILocation(line: 5176, column: 19, scope: !10489)
!10504 = !DILocation(line: 5178, column: 5, scope: !10489)
!10505 = !DILocation(line: 5178, column: 18, scope: !10489)
!10506 = !DILocation(line: 5177, column: 16, scope: !10489)
!10507 = !DILocation(line: 5178, column: 32, scope: !10489)
!10508 = !DILocation(line: 5179, column: 36, scope: !10495)
!10509 = !DILocation(line: 5179, column: 30, scope: !10495)
!10510 = !DILocation(line: 5180, column: 18, scope: !10498)
!10511 = !DILocation(line: 5180, column: 23, scope: !10498)
!10512 = !DILocation(line: 5180, column: 13, scope: !10495)
!10513 = !DILocation(line: 5182, column: 44, scope: !10497)
!10514 = !DILocation(line: 5181, column: 38, scope: !10497)
!10515 = !DILocation(line: 5183, column: 31, scope: !10497)
!10516 = !DILocation(line: 5183, column: 41, scope: !10497)
!10517 = !DILocation(line: 5183, column: 17, scope: !10497)
!10518 = !DILocation(line: 5184, column: 21, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10497, file: !3, line: 5184, column: 17)
!10520 = !DILocation(line: 5184, column: 28, scope: !10519)
!10521 = !DILocation(line: 5184, column: 17, scope: !10497)
!10522 = !DILocation(line: 5185, column: 35, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 5184, column: 39)
!10524 = !DILocation(line: 5185, column: 17, scope: !10523)
!10525 = !DILocation(line: 5186, column: 35, scope: !10523)
!10526 = !DILocation(line: 5186, column: 17, scope: !10523)
!10527 = !DILocation(line: 5187, column: 17, scope: !10523)
!10528 = !DILocation(line: 5188, column: 27, scope: !10523)
!10529 = !DILocation(line: 5188, column: 17, scope: !10523)
!10530 = !DILocation(line: 5189, column: 17, scope: !10523)
!10531 = !DILocation(line: 5190, column: 13, scope: !10523)
!10532 = !DILocation(line: 5191, column: 9, scope: !10497)
!10533 = distinct !{!10533, !10504, !10534}
!10534 = !DILocation(line: 5192, column: 5, scope: !10489)
!10535 = !DILocation(line: 5193, column: 5, scope: !10489)
!10536 = !DILocation(line: 5194, column: 1, scope: !10489)
!10537 = distinct !DISubprogram(name: "moduleUnload", scope: !3, file: !3, line: 5244, type: !10538, isLocal: false, isDefinition: true, scopeLine: 5244, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10540)
!10538 = !DISubroutineType(types: !10539)
!10539 = !{!17, !154}
!10540 = !{!10541, !10542, !10543}
!10541 = !DILocalVariable(name: "name", arg: 1, scope: !10537, file: !3, line: 5244, type: !154)
!10542 = !DILocalVariable(name: "module", scope: !10537, file: !3, line: 5245, type: !273)
!10543 = !DILocalVariable(name: "error", scope: !10544, file: !3, line: 5270, type: !9)
!10544 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 5269, column: 40)
!10545 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 5269, column: 9)
!10546 = !DILocation(line: 5244, column: 22, scope: !10537)
!10547 = !DILocation(line: 5245, column: 49, scope: !10537)
!10548 = !DILocation(line: 5245, column: 34, scope: !10537)
!10549 = !DILocation(line: 5245, column: 25, scope: !10537)
!10550 = !DILocation(line: 5247, column: 16, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10537, file: !3, line: 5247, column: 9)
!10552 = !DILocation(line: 5247, column: 9, scope: !10537)
!10553 = !DILocation(line: 5248, column: 9, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 5247, column: 25)
!10555 = !DILocation(line: 5248, column: 15, scope: !10554)
!10556 = !DILocation(line: 5249, column: 9, scope: !10554)
!10557 = !DILocation(line: 5250, column: 16, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 5250, column: 16)
!10559 = !DILocation(line: 5250, column: 16, scope: !10551)
!10560 = !DILocation(line: 5251, column: 9, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 5250, column: 43)
!10562 = !DILocation(line: 5251, column: 15, scope: !10561)
!10563 = !DILocation(line: 5252, column: 9, scope: !10561)
!10564 = !DILocation(line: 5253, column: 16, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 5253, column: 16)
!10566 = !DILocation(line: 5253, column: 16, scope: !10558)
!10567 = !DILocation(line: 5254, column: 9, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10565, file: !3, line: 5253, column: 44)
!10569 = !DILocation(line: 5254, column: 15, scope: !10568)
!10570 = !DILocation(line: 5255, column: 9, scope: !10568)
!10571 = !DILocation(line: 5258, column: 5, scope: !10537)
!10572 = !DILocation(line: 5259, column: 5, scope: !10537)
!10573 = !DILocation(line: 5260, column: 5, scope: !10537)
!10574 = !DILocation(line: 5261, column: 5, scope: !10537)
!10575 = !DILocation(line: 5264, column: 5, scope: !10537)
!10576 = !DILocation(line: 5269, column: 25, scope: !10545)
!10577 = !DILocation(line: 5269, column: 9, scope: !10545)
!10578 = !DILocation(line: 5269, column: 33, scope: !10545)
!10579 = !DILocation(line: 5269, column: 9, scope: !10537)
!10580 = !DILocation(line: 5277, column: 54, scope: !10537)
!10581 = !DILocation(line: 5270, column: 23, scope: !10544)
!10582 = !DILocation(line: 5270, column: 15, scope: !10544)
!10583 = !DILocation(line: 5271, column: 19, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 5271, column: 13)
!10585 = !DILocation(line: 5271, column: 13, scope: !10544)
!10586 = !DILocation(line: 5273, column: 21, scope: !10544)
!10587 = !DILocation(line: 5272, column: 9, scope: !10544)
!10588 = !DILocation(line: 5274, column: 5, scope: !10544)
!10589 = !DILocation(line: 5277, column: 5, scope: !10537)
!10590 = !DILocation(line: 5278, column: 16, scope: !10537)
!10591 = !DILocation(line: 5278, column: 32, scope: !10537)
!10592 = !DILocation(line: 5278, column: 5, scope: !10537)
!10593 = !DILocation(line: 5279, column: 18, scope: !10537)
!10594 = !DILocation(line: 5167, column: 52, scope: !10444, inlinedAt: !10595)
!10595 = distinct !DILocation(line: 5280, column: 5, scope: !10537)
!10596 = !DILocation(line: 5168, column: 25, scope: !10444, inlinedAt: !10595)
!10597 = !DILocation(line: 5168, column: 5, scope: !10444, inlinedAt: !10595)
!10598 = !DILocation(line: 5169, column: 25, scope: !10444, inlinedAt: !10595)
!10599 = !DILocation(line: 5169, column: 5, scope: !10444, inlinedAt: !10595)
!10600 = !DILocation(line: 5170, column: 21, scope: !10444, inlinedAt: !10595)
!10601 = !DILocation(line: 5170, column: 5, scope: !10444, inlinedAt: !10595)
!10602 = !DILocation(line: 5171, column: 5, scope: !10444, inlinedAt: !10595)
!10603 = !DILocation(line: 5172, column: 1, scope: !10444, inlinedAt: !10595)
!10604 = !DILocation(line: 5282, column: 5, scope: !10537)
!10605 = !DILocation(line: 0, scope: !10537)
!10606 = !DILocation(line: 0, scope: !10554)
!10607 = !DILocation(line: 5283, column: 1, scope: !10537)
!10608 = distinct !DISubprogram(name: "moduleCommand", scope: !3, file: !3, line: 5288, type: !25, isLocal: false, isDefinition: true, scopeLine: 5288, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10609)
!10609 = !{!10610, !10611, !10612, !10616, !10619, !10620, !10625, !10628, !10629, !10631}
!10610 = !DILocalVariable(name: "c", arg: 1, scope: !10608, file: !3, line: 5288, type: !27)
!10611 = !DILocalVariable(name: "subcmd", scope: !10608, file: !3, line: 5289, type: !9)
!10612 = !DILocalVariable(name: "help", scope: !10613, file: !3, line: 5291, type: !10615)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 5290, column: 53)
!10614 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 5290, column: 9)
!10615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 256, elements: !455)
!10616 = !DILocalVariable(name: "argv", scope: !10617, file: !3, line: 5300, type: !165)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 5299, column: 53)
!10618 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 5299, column: 9)
!10619 = !DILocalVariable(name: "argc", scope: !10617, file: !3, line: 5301, type: !17)
!10620 = !DILocalVariable(name: "errmsg", scope: !10621, file: !3, line: 5317, type: !9)
!10621 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 5316, column: 14)
!10622 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 5314, column: 13)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 5313, column: 62)
!10624 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 5313, column: 16)
!10625 = !DILocalVariable(name: "di", scope: !10626, file: !3, line: 5337, type: !744)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 5336, column: 60)
!10627 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 5336, column: 16)
!10628 = !DILocalVariable(name: "de", scope: !10626, file: !3, line: 5338, type: !81)
!10629 = !DILocalVariable(name: "name", scope: !10630, file: !3, line: 5342, type: !154)
!10630 = distinct !DILexicalBlock(scope: !10626, file: !3, line: 5341, column: 45)
!10631 = !DILocalVariable(name: "module", scope: !10630, file: !3, line: 5343, type: !273)
!10632 = !DILocation(line: 5288, column: 28, scope: !10608)
!10633 = !DILocation(line: 5289, column: 23, scope: !10608)
!10634 = !DILocation(line: 5289, column: 20, scope: !10608)
!10635 = !DILocation(line: 5289, column: 32, scope: !10608)
!10636 = !DILocation(line: 5289, column: 11, scope: !10608)
!10637 = !DILocation(line: 5290, column: 12, scope: !10614)
!10638 = !DILocation(line: 5290, column: 17, scope: !10614)
!10639 = !DILocation(line: 5290, column: 22, scope: !10614)
!10640 = !DILocation(line: 5290, column: 26, scope: !10614)
!10641 = !DILocation(line: 5290, column: 9, scope: !10608)
!10642 = !DILocation(line: 5291, column: 9, scope: !10613)
!10643 = !DILocation(line: 5291, column: 21, scope: !10613)
!10644 = !DILocation(line: 5297, column: 25, scope: !10613)
!10645 = !DILocation(line: 5297, column: 9, scope: !10613)
!10646 = !DILocation(line: 5298, column: 5, scope: !10614)
!10647 = !DILocation(line: 5298, column: 5, scope: !10613)
!10648 = !DILocation(line: 5299, column: 10, scope: !10618)
!10649 = !DILocation(line: 5299, column: 36, scope: !10618)
!10650 = !DILocation(line: 5299, column: 47, scope: !10618)
!10651 = !DILocation(line: 5299, column: 9, scope: !10614)
!10652 = !DILocation(line: 5300, column: 16, scope: !10617)
!10653 = !DILocation(line: 5301, column: 13, scope: !10617)
!10654 = !DILocation(line: 5303, column: 21, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 5303, column: 13)
!10656 = !DILocation(line: 5303, column: 13, scope: !10617)
!10657 = !DILocation(line: 5304, column: 28, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 5303, column: 26)
!10659 = !DILocation(line: 5305, column: 21, scope: !10658)
!10660 = !DILocation(line: 5306, column: 9, scope: !10658)
!10661 = !DILocation(line: 0, scope: !10617)
!10662 = !DILocation(line: 5308, column: 24, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 5308, column: 13)
!10664 = !DILocation(line: 5308, column: 36, scope: !10663)
!10665 = !DILocation(line: 5308, column: 13, scope: !10663)
!10666 = !DILocation(line: 5308, column: 60, scope: !10663)
!10667 = !DILocation(line: 5308, column: 13, scope: !10617)
!10668 = !DILocation(line: 5309, column: 31, scope: !10663)
!10669 = !{!2683, !892, i64 8}
!10670 = !DILocation(line: 5309, column: 13, scope: !10663)
!10671 = !DILocation(line: 5311, column: 13, scope: !10663)
!10672 = !DILocation(line: 5313, column: 5, scope: !10617)
!10673 = !DILocation(line: 5313, column: 17, scope: !10624)
!10674 = !DILocation(line: 5313, column: 45, scope: !10624)
!10675 = !DILocation(line: 5313, column: 56, scope: !10624)
!10676 = !DILocation(line: 5313, column: 16, scope: !10618)
!10677 = !DILocation(line: 5314, column: 26, scope: !10622)
!10678 = !DILocation(line: 5314, column: 38, scope: !10622)
!10679 = !DILocation(line: 5314, column: 13, scope: !10622)
!10680 = !DILocation(line: 5314, column: 43, scope: !10622)
!10681 = !DILocation(line: 5314, column: 13, scope: !10623)
!10682 = !DILocation(line: 5315, column: 31, scope: !10622)
!10683 = !DILocation(line: 5315, column: 13, scope: !10622)
!10684 = !DILocation(line: 5318, column: 20, scope: !10621)
!10685 = !DILocation(line: 5318, column: 13, scope: !10621)
!10686 = !DILocation(line: 5325, column: 17, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 5318, column: 27)
!10688 = !DILocation(line: 5329, column: 17, scope: !10687)
!10689 = !DILocation(line: 5332, column: 17, scope: !10687)
!10690 = !DILocation(line: 0, scope: !10687)
!10691 = !DILocation(line: 5317, column: 19, scope: !10621)
!10692 = !DILocation(line: 5334, column: 13, scope: !10621)
!10693 = !DILocation(line: 5336, column: 17, scope: !10627)
!10694 = !DILocation(line: 5336, column: 43, scope: !10627)
!10695 = !DILocation(line: 5336, column: 16, scope: !10624)
!10696 = !DILocation(line: 5337, column: 44, scope: !10626)
!10697 = !DILocation(line: 5337, column: 28, scope: !10626)
!10698 = !DILocation(line: 5337, column: 23, scope: !10626)
!10699 = !DILocation(line: 5340, column: 32, scope: !10626)
!10700 = !DILocation(line: 5340, column: 9, scope: !10626)
!10701 = !DILocation(line: 5341, column: 9, scope: !10626)
!10702 = !DILocation(line: 5341, column: 22, scope: !10626)
!10703 = !DILocation(line: 5338, column: 20, scope: !10626)
!10704 = !DILocation(line: 5341, column: 36, scope: !10626)
!10705 = !DILocation(line: 5342, column: 24, scope: !10630)
!10706 = !DILocation(line: 5342, column: 17, scope: !10630)
!10707 = !DILocation(line: 5343, column: 42, scope: !10630)
!10708 = !DILocation(line: 5343, column: 33, scope: !10630)
!10709 = !DILocation(line: 5344, column: 13, scope: !10630)
!10710 = !DILocation(line: 5345, column: 13, scope: !10630)
!10711 = !DILocation(line: 87, column: 39, scope: !2167, inlinedAt: !10712)
!10712 = distinct !DILocation(line: 5346, column: 40, scope: !10630)
!10713 = !DILocation(line: 88, column: 27, scope: !2167, inlinedAt: !10712)
!10714 = !DILocation(line: 88, column: 19, scope: !2167, inlinedAt: !10712)
!10715 = !DILocation(line: 89, column: 5, scope: !2167, inlinedAt: !10712)
!10716 = !DILocation(line: 91, column: 20, scope: !2179, inlinedAt: !10712)
!10717 = !DILocation(line: 91, column: 13, scope: !2179, inlinedAt: !10712)
!10718 = !DILocation(line: 93, column: 20, scope: !2179, inlinedAt: !10712)
!10719 = !DILocation(line: 93, column: 34, scope: !2179, inlinedAt: !10712)
!10720 = !DILocation(line: 93, column: 13, scope: !2179, inlinedAt: !10712)
!10721 = !DILocation(line: 95, column: 20, scope: !2179, inlinedAt: !10712)
!10722 = !DILocation(line: 95, column: 35, scope: !2179, inlinedAt: !10712)
!10723 = !DILocation(line: 95, column: 13, scope: !2179, inlinedAt: !10712)
!10724 = !DILocation(line: 97, column: 20, scope: !2179, inlinedAt: !10712)
!10725 = !DILocation(line: 97, column: 35, scope: !2179, inlinedAt: !10712)
!10726 = !DILocation(line: 97, column: 13, scope: !2179, inlinedAt: !10712)
!10727 = !DILocation(line: 99, column: 20, scope: !2179, inlinedAt: !10712)
!10728 = !DILocation(line: 99, column: 35, scope: !2179, inlinedAt: !10712)
!10729 = !DILocation(line: 99, column: 13, scope: !2179, inlinedAt: !10712)
!10730 = !DILocation(line: 0, scope: !2179, inlinedAt: !10712)
!10731 = !DILocation(line: 0, scope: !10630)
!10732 = !DILocation(line: 102, column: 1, scope: !2167, inlinedAt: !10712)
!10733 = !DILocation(line: 5346, column: 13, scope: !10630)
!10734 = !DILocation(line: 5347, column: 13, scope: !10630)
!10735 = !DILocation(line: 5348, column: 40, scope: !10630)
!10736 = !DILocation(line: 5348, column: 32, scope: !10630)
!10737 = !DILocation(line: 5348, column: 13, scope: !10630)
!10738 = distinct !{!10738, !10701, !10739}
!10739 = !DILocation(line: 5349, column: 9, scope: !10626)
!10740 = !DILocation(line: 5350, column: 9, scope: !10626)
!10741 = !DILocation(line: 5352, column: 9, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 5351, column: 12)
!10743 = !DILocation(line: 5353, column: 9, scope: !10742)
!10744 = !DILocation(line: 5355, column: 1, scope: !10608)
!10745 = !DILocation(line: 0, scope: !10742)
!10746 = distinct !DISubprogram(name: "moduleCount", scope: !3, file: !3, line: 5358, type: !7822, isLocal: false, isDefinition: true, scopeLine: 5358, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!10747 = !DILocation(line: 5359, column: 12, scope: !10746)
!10748 = !DILocation(line: 5359, column: 5, scope: !10746)
