; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.0, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.redisCommand = type { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.redisObject = type { i32, i32, i8* }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.0 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.clusterState = type opaque
%struct.lua_State = type opaque
%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon, %struct.dictEntry* }
%union.anon = type { i8* }
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.rdbSaveInfo = type { i32, i32, [41 x i8], i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.2, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct._mbstate_t = type { i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct._rio = type { i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*)*, i32 (%struct._rio*)*, void (%struct._rio*, i8*, i64)*, i64, i64, i64, %union.anon.5 }
%union.anon.5 = type { %struct.anon.8 }
%struct.anon.8 = type { i32*, i32*, i32, i64, i8* }
%struct.raxIterator = type { i32, %struct.rax*, i8*, i8*, i64, i64, [128 x i8], %struct.raxNode*, %struct.raxStack, i32 (%struct.raxNode**)* }
%struct.raxStack = type { i8**, i64, i64, [32 x i8*], i32 }
%struct.streamNACK = type { i64, i64, %struct.streamConsumer* }
%struct.streamConsumer = type { i64, i8*, %struct.rax* }
%struct.streamCG = type { %struct.streamID, %struct.rax*, %struct.rax* }
%struct.streamID = type { i64, i64 }
%struct.RedisModuleIO = type { i64, %struct._rio*, %struct.RedisModuleType*, i32, i32, %struct.RedisModuleCtx*, %struct.redisObject* }
%struct.RedisModuleType = type { i64, %struct.RedisModule*, i8* (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i8*)*, void (%struct.RedisModuleIO*, %struct.redisObject*, i8*)*, i64 (i8*)*, void (%struct.RedisModuleDigest*, i8*)*, void (i8*)*, i32 (%struct.RedisModuleIO*, i32, i32)*, void (%struct.RedisModuleIO*, i32)*, i32, [10 x i8] }
%struct.RedisModule = type opaque
%struct.RedisModuleDigest = type { [20 x i8], [20 x i8] }
%struct.RedisModuleCtx = type opaque
%struct.quicklist = type { %struct.quicklistNode*, %struct.quicklistNode*, i64, i64, i32 }
%struct.quicklistNode = type { %struct.quicklistNode*, %struct.quicklistNode*, i8*, i32, i32 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.intset = type { i32, i32, [0 x i8] }
%struct.zset = type { %struct.dict*, %struct.zskiplist* }
%struct.zskiplist = type { %struct.zskiplistNode*, %struct.zskiplistNode*, i64, i32 }
%struct.zskiplistNode = type { i8*, double, %struct.zskiplistNode*, [0 x %struct.zskiplistLevel] }
%struct.zskiplistLevel = type { %struct.zskiplistNode*, i64 }
%struct.stream = type { %struct.rax*, i64, %struct.streamID, %struct.rax* }
%struct.moduleValue = type { %struct.RedisModuleType*, i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i64, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.listIter = type { %struct.listNode*, i32 }

@.str = private unnamed_addr constant [55 x i8] c"Internal error in RDB reading function at rdb.c:%d -> \00", align 1
@rdbCheckMode = external dso_local local_unnamed_addr global i32, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@server = external dso_local global %struct.redisServer, align 8
@.str.3 = private unnamed_addr constant [46 x i8] c"Impossible to read %llu bytes in rdbLoadRaw()\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Unknown length encoding %d in rdbLoadLen()\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"Unknown RDB integer encoding type %d\00", align 1
@SDS_NOINIT = external dso_local local_unnamed_addr global i8*, align 8
@.str.6 = private unnamed_addr constant [30 x i8] c"Invalid LZF compressed string\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"enclen < 32\00", align 1
@.str.8 = private unnamed_addr constant [71 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"sdsEncodedObject(obj)\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"Unknown RDB string encoding type %d\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"%.17g\00", align 1
@R_NegInf = external dso_local local_unnamed_addr global double, align 8
@R_PosInf = external dso_local local_unnamed_addr global double, align 8
@R_Nan = external dso_local local_unnamed_addr global double, align 8
@.str.12 = private unnamed_addr constant [4 x i8] c"%lg\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"Unknown list encoding\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"Unknown set encoding\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Unknown sorted set encoding\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"Unknown hash encoding\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"Unknown object type\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"len != -1\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"redis-ver\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"5.0.6\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"redis-bits\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"used-mem\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"repl-stream-db\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"repl-id\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"repl-offset\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"aof-preamble\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"REDIS%04d\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"lua\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"$EOF:\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"temp-%d.rdb\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.35 = private unnamed_addr constant [70 x i8] c"Failed opening the RDB file %s (in server root dir %s) for saving: %s\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.37 = private unnamed_addr constant [85 x i8] c"Error moving temp DB file %s on the final destination %s (in server root dir %s): %s\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"DB saved on disk\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"Write error saving DB on disk: %s\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"redis-rdb-bgsave\00", align 1
@.str.41 = private unnamed_addr constant [44 x i8] c"RDB: %zu MB of memory used by copy-on-write\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@.str.43 = private unnamed_addr constant [35 x i8] c"Can't save in background: fork: %s\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"Background saving started by pid %d\00", align 1
@.str.45 = private unnamed_addr constant [43 x i8] c"Error reading integer from module %s value\00", align 1
@.str.46 = private unnamed_addr constant [42 x i8] c"Error reading string from module %s value\00", align 1
@.str.47 = private unnamed_addr constant [41 x i8] c"Error reading float from module %s value\00", align 1
@.str.48 = private unnamed_addr constant [42 x i8] c"Error reading double from module %s value\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"module-dummy-value\00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"Duplicate keys detected\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"len == 0\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"Unknown RDB encoding type %d\00", align 1
@.str.53 = private unnamed_addr constant [64 x i8] c"Stream master ID loading failed: invalid encoding or I/O error.\00", align 1
@.str.54 = private unnamed_addr constant [53 x i8] c"Stream node key entry is not the size of a stream ID\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"Empty listpack inside stream\00", align 1
@.str.56 = private unnamed_addr constant [36 x i8] c"Listpack re-added with existing key\00", align 1
@.str.57 = private unnamed_addr constant [50 x i8] c"Error reading the consumer group name from Stream\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"Duplicated consumer group name %s\00", align 1
@.str.59 = private unnamed_addr constant [57 x i8] c"Duplicated gobal PEL entry loading stream consumer group\00", align 1
@.str.60 = private unnamed_addr constant [50 x i8] c"Error reading the consumer name from Stream group\00", align 1
@raxNotFound = external dso_local local_unnamed_addr global i8*, align 8
@.str.61 = private unnamed_addr constant [45 x i8] c"Consumer entry not found in group global PEL\00", align 1
@.str.62 = private unnamed_addr constant [63 x i8] c"Duplicated consumer PEL entry  loading a stream consumer group\00", align 1
@.str.63 = private unnamed_addr constant [72 x i8] c"The RDB file contains module data I can't load: no matching module '%s'\00", align 1
@.str.64 = private unnamed_addr constant [115 x i8] c"The RDB file contains module data for the module '%s' that is not terminated by the proper module value EOF marker\00", align 1
@.str.65 = private unnamed_addr constant [159 x i8] c"The RDB file contains module data for the module type '%s', that the responsible module is not able to load. Check for modules log above for additional clues.\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"REDIS\00", align 1
@.str.67 = private unnamed_addr constant [44 x i8] c"Wrong signature trying to load DB from file\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"Can't handle RDB format version %d\00", align 1
@.str.69 = private unnamed_addr constant [103 x i8] c"FATAL: Data file was created with a Redis server configured to handle more than %d databases. Exiting\0A\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"RDB '%s': %s\00", align 1
@.str.71 = private unnamed_addr constant [46 x i8] c"Can't load Lua script from RDB file! BODY: %s\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c"Unrecognized RDB AUX field: '%s'\00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"bad when_opcode\00", align 1
@.str.74 = private unnamed_addr constant [76 x i8] c"The RDB file contains AUX module data I can't load: no matching module '%s'\00", align 1
@.str.75 = private unnamed_addr constant [87 x i8] c"The RDB file contains module AUX data, but the module '%s' doesn't seem to support it.\00", align 1
@.str.76 = private unnamed_addr constant [163 x i8] c"The RDB file contains module AUX data for the module type '%s', that the responsible module is not able to load. Check for modules log above for additional clues.\00", align 1
@.str.77 = private unnamed_addr constant [119 x i8] c"The RDB file contains module AUX data for the module '%s' that is not terminated by the proper module value EOF marker\00", align 1
@.str.78 = private unnamed_addr constant [63 x i8] c"RDB file was saved with checksum disabled: no check performed.\00", align 1
@.str.79 = private unnamed_addr constant [34 x i8] c"Wrong RDB checksum. Aborting now.\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"RDB CRC error\00", align 1
@.str.81 = private unnamed_addr constant [65 x i8] c"Short read or OOM loading DB. Unrecoverable error, aborting now.\00", align 1
@.str.82 = private unnamed_addr constant [32 x i8] c"Unexpected EOF reading RDB file\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.84 = private unnamed_addr constant [42 x i8] c"Background saving terminated with success\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"Background saving error\00", align 1
@.str.86 = private unnamed_addr constant [42 x i8] c"Background saving terminated by signal %d\00", align 1
@.str.87 = private unnamed_addr constant [21 x i8] c"rdb-unlink-temp-file\00", align 1
@.str.88 = private unnamed_addr constant [48 x i8] c"Background RDB transfer terminated with success\00", align 1
@.str.89 = private unnamed_addr constant [26 x i8] c"Background transfer error\00", align 1
@.str.90 = private unnamed_addr constant [44 x i8] c"Background transfer terminated by signal %d\00", align 1
@.str.91 = private unnamed_addr constant [55 x i8] c"Closing slave %s: child->slave RDB transfer failed: %s\00", align 1
@.str.92 = private unnamed_addr constant [27 x i8] c"RDB transfer child aborted\00", align 1
@.str.93 = private unnamed_addr constant [51 x i8] c"Slave %s correctly received the streamed RDB file.\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"Unknown RDB child type.\00", align 1
@.str.95 = private unnamed_addr constant [20 x i8] c"redis-rdb-to-slaves\00", align 1
@.str.96 = private unnamed_addr constant [42 x i8] c"Background RDB transfer started by pid %d\00", align 1
@.str.97 = private unnamed_addr constant [36 x i8] c"Background save already in progress\00", align 1
@shared = external dso_local local_unnamed_addr global %struct.sharedObjectsStruct, align 8
@.str.98 = private unnamed_addr constant [9 x i8] c"schedule\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"Background saving scheduled\00", align 1
@.str.100 = private unnamed_addr constant [127 x i8] c"An AOF log rewriting in progress: can't BGSAVE right now. Use BGSAVE SCHEDULE in order to schedule a BGSAVE whenever possible.\00", align 1
@.str.101 = private unnamed_addr constant [26 x i8] c"Background saving started\00", align 1
@rdbPopulateSaveInfo.rsi_init = private unnamed_addr constant %struct.rdbSaveInfo { i32 -1, i32 0, [41 x i8] c"000000000000000000000000000000\00\00\00\00\00\00\00\00\00\00\00", i64 -1 }, align 8
@__A_VARIABLE = internal global i32 0

; Function Attrs: noredzone noreturn nounwind
define dso_local void @rdbCheckThenExit(i32, i8*, ...) local_unnamed_addr #0 !dbg !147 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca [2 x i8*], align 16
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !179
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #4, !dbg !179
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !181
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #4, !dbg !181
  %8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 1024, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 %0) #9, !dbg !183
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, !dbg !185
  call void @llvm.va_start(i8* nonnull %6), !dbg !185
  %10 = sext i32 %8 to i64, !dbg !186
  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 %10, !dbg !186
  %12 = sub nsw i64 1024, %10, !dbg !187
  %13 = call i32 @vsnprintf(i8* nonnull %11, i64 %12, i8* %1, %struct.__va_list_tag* nonnull %9) #9, !dbg !188
  call void @llvm.va_end(i8* nonnull %6), !dbg !189
  %14 = load i32, i32* @rdbCheckMode, align 4, !dbg !190, !tbaa !191
  %15 = icmp eq i32 %14, 0, !dbg !190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !195
  br i1 %15, label %16, label %23, !dbg !195

; <label>:16:                                     ; preds = %2
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %7) #9, !dbg !196
  %17 = bitcast [2 x i8*]* %5 to i8*, !dbg !197
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4, !dbg !197
  %18 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i64 0, i64 0, !dbg !199
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %18, align 16, !dbg !199, !tbaa !200
  %19 = getelementptr inbounds [2 x i8*], [2 x i8*]* %5, i64 0, i64 1, !dbg !199
  %20 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157) to i64*), align 8, !dbg !202, !tbaa !203
  %21 = bitcast i8** %19 to i64*, !dbg !199
  store i64 %20, i64* %21, align 8, !dbg !199, !tbaa !200
  %22 = call i32 @redis_check_rdb_main(i32 2, i8** nonnull %18, %struct.__sFILE* null) #9, !dbg !211
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4, !dbg !212
  br label %24, !dbg !213

; <label>:23:                                     ; preds = %2
  call void (i8*, ...) @rdbCheckError(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %7) #9, !dbg !214
  br label %24

; <label>:24:                                     ; preds = %23, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @exit(i32 1) #10, !dbg !216
  unreachable
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

; Function Attrs: noredzone
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: noredzone
declare dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @redis_check_rdb_main(i32, i8**, %struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local void @rdbCheckError(i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local void @rdbLoadRaw(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !217 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !504
  %4 = icmp eq i64 %2, 0, !dbg !504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !504
  br i1 %4, label %34, label %5, !dbg !504

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %10, !dbg !504

; <label>:10:                                     ; preds = %27, %5
  %11 = phi i64 [ %2, %5 ], [ %29, %27 ]
  %12 = phi i8* [ %1, %5 ], [ %28, %27 ]
  %13 = load i64, i64* %6, align 8, !dbg !505, !tbaa !506
  %14 = icmp eq i64 %13, 0, !dbg !508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !509
  br i1 %14, label %17, label %15, !dbg !509

; <label>:15:                                     ; preds = %10
  %16 = icmp ult i64 %13, %11, !dbg !510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !511
  br i1 %16, label %18, label %17, !dbg !511

; <label>:17:                                     ; preds = %15, %10
  br label %18, !dbg !511

; <label>:18:                                     ; preds = %15, %17
  %19 = phi i64 [ %11, %17 ], [ %13, %15 ], !dbg !511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !511
  %20 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %7, align 8, !dbg !513, !tbaa !515
  %21 = tail call i64 %20(%struct._rio* nonnull %0, i8* %12, i64 %19) #9, !dbg !516
  %22 = icmp eq i64 %21, 0, !dbg !517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !518
  br i1 %22, label %33, label %23, !dbg !518

; <label>:23:                                     ; preds = %18
  %24 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !519, !tbaa !521
  %25 = icmp eq void (%struct._rio*, i8*, i64)* %24, null, !dbg !522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !523
  br i1 %25, label %27, label %26, !dbg !523

; <label>:26:                                     ; preds = %23
  tail call void %24(%struct._rio* nonnull %0, i8* %12, i64 %19) #9, !dbg !524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !524
  br label %27, !dbg !524

; <label>:27:                                     ; preds = %26, %23
  %28 = getelementptr inbounds i8, i8* %12, i64 %19, !dbg !525
  %29 = sub i64 %11, %19, !dbg !526
  %30 = load i64, i64* %9, align 8, !dbg !527, !tbaa !528
  %31 = add i64 %30, %19, !dbg !527
  store i64 %31, i64* %9, align 8, !dbg !527, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !529
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %32 = icmp eq i64 %29, 0, !dbg !504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !504
  br i1 %32, label %34, label %10, !dbg !504

; <label>:33:                                     ; preds = %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !530
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !532
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 85, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 %2) #11, !dbg !533
  unreachable

; <label>:34:                                     ; preds = %27, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !536
  ret void, !dbg !536
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveType(%struct._rio*, i8 zeroext) local_unnamed_addr #6 !dbg !537 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1, !tbaa !545
  %4 = icmp eq %struct._rio* %0, null, !dbg !560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !562
  br i1 %4, label %36, label %5, !dbg !562

; <label>:5:                                      ; preds = %2
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !576
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %10, !dbg !576

; <label>:10:                                     ; preds = %27, %5
  %11 = phi i64 [ 1, %5 ], [ %29, %27 ]
  %12 = phi i8* [ %3, %5 ], [ %28, %27 ]
  %13 = load i64, i64* %6, align 8, !dbg !577, !tbaa !506
  %14 = icmp eq i64 %13, 0, !dbg !578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !579
  br i1 %14, label %17, label %15, !dbg !579

; <label>:15:                                     ; preds = %10
  %16 = icmp ult i64 %13, %11, !dbg !580
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !581
  br i1 %16, label %18, label %17, !dbg !581

; <label>:17:                                     ; preds = %15, %10
  br label %18, !dbg !581

; <label>:18:                                     ; preds = %15, %17
  %19 = phi i64 [ %11, %17 ], [ %13, %15 ], !dbg !581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !581
  %20 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %7, align 8, !dbg !583, !tbaa !521
  %21 = icmp eq void (%struct._rio*, i8*, i64)* %20, null, !dbg !585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !586
  br i1 %21, label %23, label %22, !dbg !586

; <label>:22:                                     ; preds = %18
  call void %20(%struct._rio* nonnull %0, i8* %12, i64 %19) #9, !dbg !587
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !587
  br label %23, !dbg !587

; <label>:23:                                     ; preds = %22, %18
  %24 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %8, align 8, !dbg !588, !tbaa !590
  %25 = call i64 %24(%struct._rio* nonnull %0, i8* %12, i64 %19) #9, !dbg !591
  %26 = icmp eq i64 %25, 0, !dbg !592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !593
  br i1 %26, label %33, label %27, !dbg !593

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds i8, i8* %12, i64 %19, !dbg !594
  %29 = sub i64 %11, %19, !dbg !595
  %30 = load i64, i64* %9, align 8, !dbg !596, !tbaa !528
  %31 = add i64 %30, %19, !dbg !596
  store i64 %31, i64* %9, align 8, !dbg !596, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !597
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %32 = icmp eq i64 %29, 0, !dbg !576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !576
  br i1 %32, label %34, label %10, !dbg !576

; <label>:33:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !598
  br label %34, !dbg !599

; <label>:34:                                     ; preds = %27, %33
  %35 = phi i32 [ -1, %33 ], [ 1, %27 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !601
  br label %36, !dbg !602

; <label>:36:                                     ; preds = %34, %2
  %37 = phi i32 [ 1, %2 ], [ %35, %34 ], !dbg !603
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !605
  ret i32 %37, !dbg !605
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadType(%struct._rio*) local_unnamed_addr #6 !dbg !606 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #4, !dbg !614
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !620
  %3 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %7, !dbg !620

; <label>:7:                                      ; preds = %24, %1
  %8 = phi i64 [ 1, %1 ], [ %26, %24 ]
  %9 = phi i8* [ %2, %1 ], [ %25, %24 ]
  %10 = load i64, i64* %3, align 8, !dbg !621, !tbaa !506
  %11 = icmp eq i64 %10, 0, !dbg !622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !623
  br i1 %11, label %14, label %12, !dbg !623

; <label>:12:                                     ; preds = %7
  %13 = icmp ult i64 %10, %8, !dbg !624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !625
  br i1 %13, label %15, label %14, !dbg !625

; <label>:14:                                     ; preds = %12, %7
  br label %15, !dbg !625

; <label>:15:                                     ; preds = %12, %14
  %16 = phi i64 [ %8, %14 ], [ %10, %12 ], !dbg !625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !625
  %17 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %4, align 8, !dbg !627, !tbaa !515
  %18 = call i64 %17(%struct._rio* nonnull %0, i8* %9, i64 %16) #9, !dbg !628
  %19 = icmp eq i64 %18, 0, !dbg !629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !630
  br i1 %19, label %30, label %20, !dbg !630

; <label>:20:                                     ; preds = %15
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %5, align 8, !dbg !631, !tbaa !521
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !633
  br i1 %22, label %24, label %23, !dbg !633

; <label>:23:                                     ; preds = %20
  call void %21(%struct._rio* nonnull %0, i8* %9, i64 %16) #9, !dbg !634
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !634
  br label %24, !dbg !634

; <label>:24:                                     ; preds = %23, %20
  %25 = getelementptr inbounds i8, i8* %9, i64 %16, !dbg !635
  %26 = sub i64 %8, %16, !dbg !636
  %27 = load i64, i64* %6, align 8, !dbg !637, !tbaa !528
  %28 = add i64 %27, %16, !dbg !637
  store i64 %28, i64* %6, align 8, !dbg !637, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !638
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %29 = icmp eq i64 %26, 0, !dbg !620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !620
  br i1 %29, label %31, label %7, !dbg !620

; <label>:30:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !639
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !641
  br label %34, !dbg !642

; <label>:31:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !643
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !641
  %32 = load i8, i8* %2, align 1, !dbg !644, !tbaa !545
  %33 = zext i8 %32 to i32, !dbg !644
  br label %34, !dbg !645

; <label>:34:                                     ; preds = %31, %30
  %35 = phi i32 [ -1, %30 ], [ %33, %31 ], !dbg !646
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !647
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #4, !dbg !648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !648
  ret i32 %35, !dbg !648
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbLoadTime(%struct._rio*) local_unnamed_addr #6 !dbg !649 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*, !dbg !656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #4, !dbg !656
  call void @rdbLoadRaw(%struct._rio* %0, i8* nonnull %3, i64 4) #11, !dbg !657
  %4 = load i32, i32* %2, align 4, !dbg !658, !tbaa !191
  %5 = sext i32 %4 to i64, !dbg !660
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #4, !dbg !661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !662
  ret i64 %5, !dbg !662
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveMillisecondTime(%struct._rio*, i64) local_unnamed_addr #6 !dbg !663 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !672
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4, !dbg !672
  store i64 %1, i64* %3, align 8, !dbg !673, !tbaa !674
  %5 = icmp eq %struct._rio* %0, null, !dbg !679
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !680
  br i1 %5, label %37, label %6, !dbg !680

; <label>:6:                                      ; preds = %2
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !685
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %11, !dbg !685

; <label>:11:                                     ; preds = %28, %6
  %12 = phi i64 [ 8, %6 ], [ %30, %28 ]
  %13 = phi i8* [ %4, %6 ], [ %29, %28 ]
  %14 = load i64, i64* %7, align 8, !dbg !686, !tbaa !506
  %15 = icmp eq i64 %14, 0, !dbg !687
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !688
  br i1 %15, label %18, label %16, !dbg !688

; <label>:16:                                     ; preds = %11
  %17 = icmp ult i64 %14, %12, !dbg !689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !690
  br i1 %17, label %19, label %18, !dbg !690

; <label>:18:                                     ; preds = %16, %11
  br label %19, !dbg !690

; <label>:19:                                     ; preds = %16, %18
  %20 = phi i64 [ %12, %18 ], [ %14, %16 ], !dbg !690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !690
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !692, !tbaa !521
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !694
  br i1 %22, label %24, label %23, !dbg !694

; <label>:23:                                     ; preds = %19
  call void %21(%struct._rio* nonnull %0, i8* %13, i64 %20) #9, !dbg !695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !695
  br label %24, !dbg !695

; <label>:24:                                     ; preds = %23, %19
  %25 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %9, align 8, !dbg !696, !tbaa !590
  %26 = call i64 %25(%struct._rio* nonnull %0, i8* %13, i64 %20) #9, !dbg !697
  %27 = icmp eq i64 %26, 0, !dbg !698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !699
  br i1 %27, label %34, label %28, !dbg !699

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds i8, i8* %13, i64 %20, !dbg !700
  %30 = sub i64 %12, %20, !dbg !701
  %31 = load i64, i64* %10, align 8, !dbg !702, !tbaa !528
  %32 = add i64 %31, %20, !dbg !702
  store i64 %32, i64* %10, align 8, !dbg !702, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !703
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %33 = icmp eq i64 %30, 0, !dbg !685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !685
  br i1 %33, label %35, label %11, !dbg !685

; <label>:34:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !704
  br label %35, !dbg !705

; <label>:35:                                     ; preds = %28, %34
  %36 = phi i32 [ -1, %34 ], [ 8, %28 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !707
  br label %37, !dbg !708

; <label>:37:                                     ; preds = %35, %2
  %38 = phi i32 [ 8, %2 ], [ %36, %35 ], !dbg !709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !710
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4, !dbg !711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !712
  ret i32 %38, !dbg !712
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbLoadMillisecondTime(%struct._rio*, i32) local_unnamed_addr #6 !dbg !713 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !722
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4, !dbg !722
  call void @rdbLoadRaw(%struct._rio* %0, i8* nonnull %4, i64 8) #11, !dbg !723
  %5 = load i64, i64* %3, align 8, !dbg !724, !tbaa !674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4, !dbg !726
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !727
  ret i64 %5, !dbg !727
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveLen(%struct._rio*, i64) local_unnamed_addr #6 !dbg !728 {
  %3 = alloca i64, align 8
  %4 = alloca [2 x i8], align 1
  %5 = alloca i32, align 4
  store i64 %1, i64* %3, align 8, !tbaa !674
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !744
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #4, !dbg !744
  %7 = icmp ult i64 %1, 64, !dbg !746
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !747
  br i1 %7, label %8, label %42, !dbg !747

; <label>:8:                                      ; preds = %2
  %9 = trunc i64 %1 to i8, !dbg !748
  store i8 %9, i8* %6, align 1, !dbg !750, !tbaa !545
  %10 = icmp eq %struct._rio* %0, null, !dbg !756
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !757
  br i1 %10, label %41, label %11, !dbg !757

; <label>:11:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !762
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %14 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %15 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %16, !dbg !762

; <label>:16:                                     ; preds = %33, %11
  %17 = phi i64 [ 1, %11 ], [ %35, %33 ]
  %18 = phi i8* [ %6, %11 ], [ %34, %33 ]
  %19 = load i64, i64* %12, align 8, !dbg !763, !tbaa !506
  %20 = icmp eq i64 %19, 0, !dbg !764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !765
  br i1 %20, label %23, label %21, !dbg !765

; <label>:21:                                     ; preds = %16
  %22 = icmp ult i64 %19, %17, !dbg !766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !767
  br i1 %22, label %24, label %23, !dbg !767

; <label>:23:                                     ; preds = %21, %16
  br label %24, !dbg !767

; <label>:24:                                     ; preds = %21, %23
  %25 = phi i64 [ %17, %23 ], [ %19, %21 ], !dbg !767
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !767
  %26 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !769, !tbaa !521
  %27 = icmp eq void (%struct._rio*, i8*, i64)* %26, null, !dbg !770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !771
  br i1 %27, label %29, label %28, !dbg !771

; <label>:28:                                     ; preds = %24
  call void %26(%struct._rio* nonnull %0, i8* %18, i64 %25) #9, !dbg !772
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !772
  br label %29, !dbg !772

; <label>:29:                                     ; preds = %28, %24
  %30 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %14, align 8, !dbg !773, !tbaa !590
  %31 = call i64 %30(%struct._rio* nonnull %0, i8* %18, i64 %25) #9, !dbg !774
  %32 = icmp eq i64 %31, 0, !dbg !775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !776
  br i1 %32, label %40, label %33, !dbg !776

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds i8, i8* %18, i64 %25, !dbg !777
  %35 = sub i64 %17, %25, !dbg !778
  %36 = load i64, i64* %15, align 8, !dbg !779, !tbaa !528
  %37 = add i64 %36, %25, !dbg !779
  store i64 %37, i64* %15, align 8, !dbg !779, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !780
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %38 = icmp eq i64 %35, 0, !dbg !762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !762
  br i1 %38, label %39, label %16, !dbg !762

; <label>:39:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !783
  br label %41, !dbg !783

; <label>:40:                                     ; preds = %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !784
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !787
  br label %218, !dbg !787

; <label>:41:                                     ; preds = %8, %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !787
  br label %216, !dbg !787

; <label>:42:                                     ; preds = %2
  %43 = icmp ult i64 %1, 16384, !dbg !789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !790
  br i1 %43, label %44, label %82, !dbg !790

; <label>:44:                                     ; preds = %42
  %45 = lshr i64 %1, 8, !dbg !791
  %46 = trunc i64 %45 to i8, !dbg !793
  %47 = or i8 %46, 64, !dbg !793
  store i8 %47, i8* %6, align 1, !dbg !794, !tbaa !545
  %48 = trunc i64 %1 to i8, !dbg !795
  %49 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !796
  store i8 %48, i8* %49, align 1, !dbg !797, !tbaa !545
  %50 = icmp eq %struct._rio* %0, null, !dbg !803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !804
  br i1 %50, label %81, label %51, !dbg !804

; <label>:51:                                     ; preds = %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !809
  %52 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %53 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %54 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %55 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %56, !dbg !809

; <label>:56:                                     ; preds = %73, %51
  %57 = phi i64 [ 2, %51 ], [ %75, %73 ]
  %58 = phi i8* [ %6, %51 ], [ %74, %73 ]
  %59 = load i64, i64* %52, align 8, !dbg !810, !tbaa !506
  %60 = icmp eq i64 %59, 0, !dbg !811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !812
  br i1 %60, label %63, label %61, !dbg !812

; <label>:61:                                     ; preds = %56
  %62 = icmp ult i64 %59, %57, !dbg !813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !814
  br i1 %62, label %64, label %63, !dbg !814

; <label>:63:                                     ; preds = %61, %56
  br label %64, !dbg !814

; <label>:64:                                     ; preds = %61, %63
  %65 = phi i64 [ %57, %63 ], [ %59, %61 ], !dbg !814
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !814
  %66 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %53, align 8, !dbg !816, !tbaa !521
  %67 = icmp eq void (%struct._rio*, i8*, i64)* %66, null, !dbg !817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !818
  br i1 %67, label %69, label %68, !dbg !818

; <label>:68:                                     ; preds = %64
  call void %66(%struct._rio* nonnull %0, i8* %58, i64 %65) #9, !dbg !819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !819
  br label %69, !dbg !819

; <label>:69:                                     ; preds = %68, %64
  %70 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %54, align 8, !dbg !820, !tbaa !590
  %71 = call i64 %70(%struct._rio* nonnull %0, i8* %58, i64 %65) #9, !dbg !821
  %72 = icmp eq i64 %71, 0, !dbg !822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !823
  br i1 %72, label %80, label %73, !dbg !823

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds i8, i8* %58, i64 %65, !dbg !824
  %75 = sub i64 %57, %65, !dbg !825
  %76 = load i64, i64* %55, align 8, !dbg !826, !tbaa !528
  %77 = add i64 %76, %65, !dbg !826
  store i64 %77, i64* %55, align 8, !dbg !826, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !827
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %78 = icmp eq i64 %75, 0, !dbg !809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !809
  br i1 %78, label %79, label %56, !dbg !809

; <label>:79:                                     ; preds = %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !830
  br label %81, !dbg !830

; <label>:80:                                     ; preds = %69
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !831
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !832
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !834
  br label %218, !dbg !834

; <label>:81:                                     ; preds = %44, %79
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !835
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !834
  br label %216, !dbg !834

; <label>:82:                                     ; preds = %42
  %83 = icmp ult i64 %1, 4294967296, !dbg !836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !837
  br i1 %83, label %84, label %153, !dbg !837

; <label>:84:                                     ; preds = %82
  store i8 -128, i8* %6, align 1, !dbg !838, !tbaa !545
  %85 = icmp eq %struct._rio* %0, null, !dbg !844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !845
  br i1 %85, label %117, label %86, !dbg !845

; <label>:86:                                     ; preds = %84
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !850
  %87 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %88 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %89 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %90 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %91, !dbg !850

; <label>:91:                                     ; preds = %108, %86
  %92 = phi i64 [ 1, %86 ], [ %110, %108 ]
  %93 = phi i8* [ %6, %86 ], [ %109, %108 ]
  %94 = load i64, i64* %87, align 8, !dbg !851, !tbaa !506
  %95 = icmp eq i64 %94, 0, !dbg !852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !853
  br i1 %95, label %98, label %96, !dbg !853

; <label>:96:                                     ; preds = %91
  %97 = icmp ult i64 %94, %92, !dbg !854
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !855
  br i1 %97, label %99, label %98, !dbg !855

; <label>:98:                                     ; preds = %96, %91
  br label %99, !dbg !855

; <label>:99:                                     ; preds = %96, %98
  %100 = phi i64 [ %92, %98 ], [ %94, %96 ], !dbg !855
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !855
  %101 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %88, align 8, !dbg !857, !tbaa !521
  %102 = icmp eq void (%struct._rio*, i8*, i64)* %101, null, !dbg !858
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !859
  br i1 %102, label %104, label %103, !dbg !859

; <label>:103:                                    ; preds = %99
  call void %101(%struct._rio* nonnull %0, i8* %93, i64 %100) #9, !dbg !860
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !860
  br label %104, !dbg !860

; <label>:104:                                    ; preds = %103, %99
  %105 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %89, align 8, !dbg !861, !tbaa !590
  %106 = call i64 %105(%struct._rio* nonnull %0, i8* %93, i64 %100) #9, !dbg !862
  %107 = icmp eq i64 %106, 0, !dbg !863
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !864
  br i1 %107, label %116, label %108, !dbg !864

; <label>:108:                                    ; preds = %104
  %109 = getelementptr inbounds i8, i8* %93, i64 %100, !dbg !865
  %110 = sub i64 %92, %100, !dbg !866
  %111 = load i64, i64* %90, align 8, !dbg !867, !tbaa !528
  %112 = add i64 %111, %100, !dbg !867
  store i64 %112, i64* %90, align 8, !dbg !867, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !868
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %113 = icmp eq i64 %110, 0, !dbg !850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !850
  br i1 %113, label %114, label %91, !dbg !850

; <label>:114:                                    ; preds = %108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !871
  %115 = load i64, i64* %3, align 8, !dbg !872, !tbaa !674
  br label %117, !dbg !871

; <label>:116:                                    ; preds = %104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !873
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !876
  br label %218, !dbg !877

; <label>:117:                                    ; preds = %114, %84
  %118 = phi i64 [ %115, %114 ], [ %1, %84 ], !dbg !872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !875
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !876
  %119 = bitcast i32* %5 to i8*, !dbg !879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #4, !dbg !879
  %120 = trunc i64 %118 to i32, !dbg !872
  %121 = call i32 @lwip_htonl(i32 %120) #9, !dbg !872
  store i32 %121, i32* %5, align 4, !dbg !880, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !886
  br i1 %85, label %151, label %122, !dbg !886

; <label>:122:                                    ; preds = %117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !891
  %123 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %124 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %125 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %126 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %127, !dbg !891

; <label>:127:                                    ; preds = %144, %122
  %128 = phi i64 [ 4, %122 ], [ %146, %144 ]
  %129 = phi i8* [ %119, %122 ], [ %145, %144 ]
  %130 = load i64, i64* %123, align 8, !dbg !892, !tbaa !506
  %131 = icmp eq i64 %130, 0, !dbg !893
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !894
  br i1 %131, label %134, label %132, !dbg !894

; <label>:132:                                    ; preds = %127
  %133 = icmp ult i64 %130, %128, !dbg !895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !896
  br i1 %133, label %135, label %134, !dbg !896

; <label>:134:                                    ; preds = %132, %127
  br label %135, !dbg !896

; <label>:135:                                    ; preds = %132, %134
  %136 = phi i64 [ %128, %134 ], [ %130, %132 ], !dbg !896
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !896
  %137 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %124, align 8, !dbg !898, !tbaa !521
  %138 = icmp eq void (%struct._rio*, i8*, i64)* %137, null, !dbg !899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !900
  br i1 %138, label %140, label %139, !dbg !900

; <label>:139:                                    ; preds = %135
  call void %137(%struct._rio* nonnull %0, i8* %129, i64 %136) #9, !dbg !901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !901
  br label %140, !dbg !901

; <label>:140:                                    ; preds = %139, %135
  %141 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %125, align 8, !dbg !902, !tbaa !590
  %142 = call i64 %141(%struct._rio* nonnull %0, i8* %129, i64 %136) #9, !dbg !903
  %143 = icmp eq i64 %142, 0, !dbg !904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !905
  br i1 %143, label %152, label %144, !dbg !905

; <label>:144:                                    ; preds = %140
  %145 = getelementptr inbounds i8, i8* %129, i64 %136, !dbg !906
  %146 = sub i64 %128, %136, !dbg !907
  %147 = load i64, i64* %126, align 8, !dbg !908, !tbaa !528
  %148 = add i64 %147, %136, !dbg !908
  store i64 %148, i64* %126, align 8, !dbg !908, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !909
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %149 = icmp eq i64 %146, 0, !dbg !891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !891
  br i1 %149, label %150, label %127, !dbg !891

; <label>:150:                                    ; preds = %144
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !912
  br label %151, !dbg !912

; <label>:151:                                    ; preds = %150, %117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !915
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #4, !dbg !918
  br label %216

; <label>:152:                                    ; preds = %140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !919
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !912
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !915
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #4, !dbg !918
  br label %218

; <label>:153:                                    ; preds = %82
  store i8 -127, i8* %6, align 1, !dbg !921, !tbaa !545
  %154 = icmp eq %struct._rio* %0, null, !dbg !928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !930
  br i1 %154, label %213, label %155, !dbg !929

; <label>:155:                                    ; preds = %153
  %156 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %157 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %158 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %159 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %160, !dbg !935

; <label>:160:                                    ; preds = %177, %155
  %161 = phi i64 [ 1, %155 ], [ %179, %177 ]
  %162 = phi i8* [ %6, %155 ], [ %178, %177 ]
  %163 = load i64, i64* %156, align 8, !dbg !936, !tbaa !506
  %164 = icmp eq i64 %163, 0, !dbg !937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !938
  br i1 %164, label %167, label %165, !dbg !938

; <label>:165:                                    ; preds = %160
  %166 = icmp ult i64 %163, %161, !dbg !939
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !940
  br i1 %166, label %168, label %167, !dbg !940

; <label>:167:                                    ; preds = %165, %160
  br label %168, !dbg !940

; <label>:168:                                    ; preds = %165, %167
  %169 = phi i64 [ %161, %167 ], [ %163, %165 ], !dbg !940
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !940
  %170 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %157, align 8, !dbg !942, !tbaa !521
  %171 = icmp eq void (%struct._rio*, i8*, i64)* %170, null, !dbg !943
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !944
  br i1 %171, label %173, label %172, !dbg !944

; <label>:172:                                    ; preds = %168
  call void %170(%struct._rio* nonnull %0, i8* %162, i64 %169) #9, !dbg !945
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !945
  br label %173, !dbg !945

; <label>:173:                                    ; preds = %172, %168
  %174 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %158, align 8, !dbg !946, !tbaa !590
  %175 = call i64 %174(%struct._rio* nonnull %0, i8* %162, i64 %169) #9, !dbg !947
  %176 = icmp eq i64 %175, 0, !dbg !948
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !949
  br i1 %176, label %183, label %177, !dbg !949

; <label>:177:                                    ; preds = %173
  %178 = getelementptr inbounds i8, i8* %162, i64 %169, !dbg !950
  %179 = sub i64 %161, %169, !dbg !951
  %180 = load i64, i64* %159, align 8, !dbg !952, !tbaa !528
  %181 = add i64 %180, %169, !dbg !952
  store i64 %181, i64* %159, align 8, !dbg !952, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !953
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %182 = icmp eq i64 %179, 0, !dbg !935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !935
  br i1 %182, label %184, label %160, !dbg !935

; <label>:183:                                    ; preds = %173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !954
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !959
  br label %218, !dbg !960

; <label>:184:                                    ; preds = %177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !959
  %185 = load i64, i64* %3, align 8, !dbg !963, !tbaa !674
  %186 = call i64 @intrev64(i64 %185) #9, !dbg !963
  store i64 %186, i64* %3, align 8, !dbg !964, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !969
  %187 = bitcast i64* %3 to i8*, !dbg !970
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !976
  br label %188, !dbg !976

; <label>:188:                                    ; preds = %205, %184
  %189 = phi i64 [ 8, %184 ], [ %207, %205 ]
  %190 = phi i8* [ %187, %184 ], [ %206, %205 ]
  %191 = load i64, i64* %156, align 8, !dbg !977, !tbaa !506
  %192 = icmp eq i64 %191, 0, !dbg !978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !979
  br i1 %192, label %195, label %193, !dbg !979

; <label>:193:                                    ; preds = %188
  %194 = icmp ult i64 %191, %189, !dbg !980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !981
  br i1 %194, label %196, label %195, !dbg !981

; <label>:195:                                    ; preds = %193, %188
  br label %196, !dbg !981

; <label>:196:                                    ; preds = %193, %195
  %197 = phi i64 [ %189, %195 ], [ %191, %193 ], !dbg !981
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !981
  %198 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %157, align 8, !dbg !983, !tbaa !521
  %199 = icmp eq void (%struct._rio*, i8*, i64)* %198, null, !dbg !984
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !985
  br i1 %199, label %201, label %200, !dbg !985

; <label>:200:                                    ; preds = %196
  call void %198(%struct._rio* nonnull %0, i8* %190, i64 %197) #9, !dbg !986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !986
  br label %201, !dbg !986

; <label>:201:                                    ; preds = %200, %196
  %202 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %158, align 8, !dbg !987, !tbaa !590
  %203 = call i64 %202(%struct._rio* nonnull %0, i8* %190, i64 %197) #9, !dbg !988
  %204 = icmp eq i64 %203, 0, !dbg !989
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !990
  br i1 %204, label %212, label %205, !dbg !990

; <label>:205:                                    ; preds = %201
  %206 = getelementptr inbounds i8, i8* %190, i64 %197, !dbg !991
  %207 = sub i64 %189, %197, !dbg !992
  %208 = load i64, i64* %159, align 8, !dbg !993, !tbaa !528
  %209 = add i64 %208, %197, !dbg !993
  store i64 %209, i64* %159, align 8, !dbg !993, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !994
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %210 = icmp eq i64 %207, 0, !dbg !976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !976
  br i1 %210, label %211, label %188, !dbg !976

; <label>:211:                                    ; preds = %205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !995
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !996
  br label %215, !dbg !997

; <label>:212:                                    ; preds = %201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !998
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !997
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !999
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1001
  br label %218, !dbg !1001

; <label>:213:                                    ; preds = %153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !959
  %214 = call i64 @intrev64(i64 %1) #9, !dbg !963
  store i64 %214, i64* %3, align 8, !dbg !964, !tbaa !674
  br label %215

; <label>:215:                                    ; preds = %213, %211
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1002
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1003
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1001
  br label %216, !dbg !1001

; <label>:216:                                    ; preds = %215, %151, %81, %41
  %217 = phi i32 [ 1, %41 ], [ 2, %81 ], [ 9, %215 ], [ 5, %151 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %218, !dbg !1004

; <label>:218:                                    ; preds = %212, %152, %80, %40, %216, %183, %116
  %219 = phi i32 [ %217, %216 ], [ -1, %116 ], [ -1, %152 ], [ -1, %183 ], [ -1, %40 ], [ -1, %80 ], [ -1, %212 ], !dbg !1002
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #4, !dbg !1005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1005
  ret i32 %219, !dbg !1005
}

; Function Attrs: noredzone
declare dso_local i32 @lwip_htonl(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @intrev64(i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadLenByRef(%struct._rio*, i32*, i64* nocapture) local_unnamed_addr #6 !dbg !1006 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !1028
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #4, !dbg !1028
  %8 = icmp ne i32* %1, null, !dbg !1030
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1032
  br i1 %8, label %9, label %10, !dbg !1032

; <label>:9:                                      ; preds = %3
  store i32 0, i32* %1, align 4, !dbg !1033, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1034
  br label %10, !dbg !1034

; <label>:10:                                     ; preds = %9, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1040
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1040
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %14 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %15, !dbg !1040

; <label>:15:                                     ; preds = %32, %10
  %16 = phi i64 [ 1, %10 ], [ %34, %32 ]
  %17 = phi i8* [ %7, %10 ], [ %33, %32 ]
  %18 = load i64, i64* %11, align 8, !dbg !1041, !tbaa !506
  %19 = icmp eq i64 %18, 0, !dbg !1042
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1043
  br i1 %19, label %22, label %20, !dbg !1043

; <label>:20:                                     ; preds = %15
  %21 = icmp ult i64 %18, %16, !dbg !1044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1045
  br i1 %21, label %23, label %22, !dbg !1045

; <label>:22:                                     ; preds = %20, %15
  br label %23, !dbg !1045

; <label>:23:                                     ; preds = %20, %22
  %24 = phi i64 [ %16, %22 ], [ %18, %20 ], !dbg !1045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1045
  %25 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1047, !tbaa !515
  %26 = call i64 %25(%struct._rio* nonnull %0, i8* %17, i64 %24) #9, !dbg !1048
  %27 = icmp eq i64 %26, 0, !dbg !1049
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1050
  br i1 %27, label %38, label %28, !dbg !1050

; <label>:28:                                     ; preds = %23
  %29 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1051, !tbaa !521
  %30 = icmp eq void (%struct._rio*, i8*, i64)* %29, null, !dbg !1052
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1053
  br i1 %30, label %32, label %31, !dbg !1053

; <label>:31:                                     ; preds = %28
  call void %29(%struct._rio* nonnull %0, i8* %17, i64 %24) #9, !dbg !1054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1054
  br label %32, !dbg !1054

; <label>:32:                                     ; preds = %31, %28
  %33 = getelementptr inbounds i8, i8* %17, i64 %24, !dbg !1055
  %34 = sub i64 %16, %24, !dbg !1056
  %35 = load i64, i64* %14, align 8, !dbg !1057, !tbaa !528
  %36 = add i64 %35, %24, !dbg !1057
  store i64 %36, i64* %14, align 8, !dbg !1057, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1058
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %37 = icmp eq i64 %34, 0, !dbg !1040
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1040
  br i1 %37, label %39, label %15, !dbg !1040

; <label>:38:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1059
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1061
  br label %155, !dbg !1062

; <label>:39:                                     ; preds = %32
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1063
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1061
  %40 = load i8, i8* %7, align 1, !dbg !1064, !tbaa !545
  %41 = zext i8 %40 to i32, !dbg !1064
  %42 = lshr i32 %41, 6, !dbg !1065
  %43 = icmp eq i32 %42, 3, !dbg !1067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1068
  br i1 %43, label %44, label %49, !dbg !1068

; <label>:44:                                     ; preds = %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1069
  br i1 %8, label %45, label %46, !dbg !1069

; <label>:45:                                     ; preds = %44
  store i32 1, i32* %1, align 4, !dbg !1071, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1073
  br label %46, !dbg !1073

; <label>:46:                                     ; preds = %45, %44
  %47 = and i8 %40, 63, !dbg !1074
  %48 = zext i8 %47 to i64, !dbg !1075
  store i64 %48, i64* %2, align 8, !dbg !1076, !tbaa !674
  br label %154, !dbg !1077

; <label>:49:                                     ; preds = %39
  %50 = icmp eq i32 %42, 0, !dbg !1078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1079
  br i1 %50, label %51, label %54, !dbg !1079

; <label>:51:                                     ; preds = %49
  %52 = and i32 %41, 63, !dbg !1080
  %53 = zext i32 %52 to i64, !dbg !1082
  store i64 %53, i64* %2, align 8, !dbg !1083, !tbaa !674
  br label %154, !dbg !1084

; <label>:54:                                     ; preds = %49
  %55 = icmp eq i32 %42, 1, !dbg !1085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1086
  br i1 %55, label %56, label %90, !dbg !1086

; <label>:56:                                     ; preds = %54
  %57 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !1087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1094
  br label %58, !dbg !1094

; <label>:58:                                     ; preds = %75, %56
  %59 = phi i64 [ 1, %56 ], [ %77, %75 ]
  %60 = phi i8* [ %57, %56 ], [ %76, %75 ]
  %61 = load i64, i64* %11, align 8, !dbg !1095, !tbaa !506
  %62 = icmp eq i64 %61, 0, !dbg !1096
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %62, label %65, label %63, !dbg !1097

; <label>:63:                                     ; preds = %58
  %64 = icmp ult i64 %61, %59, !dbg !1098
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1099
  br i1 %64, label %66, label %65, !dbg !1099

; <label>:65:                                     ; preds = %63, %58
  br label %66, !dbg !1099

; <label>:66:                                     ; preds = %63, %65
  %67 = phi i64 [ %59, %65 ], [ %61, %63 ], !dbg !1099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1099
  %68 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1101, !tbaa !515
  %69 = call i64 %68(%struct._rio* nonnull %0, i8* %60, i64 %67) #9, !dbg !1102
  %70 = icmp eq i64 %69, 0, !dbg !1103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1104
  br i1 %70, label %81, label %71, !dbg !1104

; <label>:71:                                     ; preds = %66
  %72 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1105, !tbaa !521
  %73 = icmp eq void (%struct._rio*, i8*, i64)* %72, null, !dbg !1106
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1107
  br i1 %73, label %75, label %74, !dbg !1107

; <label>:74:                                     ; preds = %71
  call void %72(%struct._rio* nonnull %0, i8* %60, i64 %67) #9, !dbg !1108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1108
  br label %75, !dbg !1108

; <label>:75:                                     ; preds = %74, %71
  %76 = getelementptr inbounds i8, i8* %60, i64 %67, !dbg !1109
  %77 = sub i64 %59, %67, !dbg !1110
  %78 = load i64, i64* %14, align 8, !dbg !1111, !tbaa !528
  %79 = add i64 %78, %67, !dbg !1111
  store i64 %79, i64* %14, align 8, !dbg !1111, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1112
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %80 = icmp eq i64 %77, 0, !dbg !1094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1094
  br i1 %80, label %82, label %58, !dbg !1094

; <label>:81:                                     ; preds = %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1113
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1115
  br label %155, !dbg !1116

; <label>:82:                                     ; preds = %75
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1115
  %83 = load i8, i8* %7, align 1, !dbg !1118, !tbaa !545
  %84 = and i8 %83, 63, !dbg !1119
  %85 = zext i8 %84 to i64, !dbg !1119
  %86 = shl nuw nsw i64 %85, 8, !dbg !1120
  %87 = load i8, i8* %57, align 1, !dbg !1121, !tbaa !545
  %88 = zext i8 %87 to i64, !dbg !1121
  %89 = or i64 %86, %88, !dbg !1122
  store i64 %89, i64* %2, align 8, !dbg !1123, !tbaa !674
  br label %154, !dbg !1124

; <label>:90:                                     ; preds = %54
  %91 = icmp eq i8 %40, -128, !dbg !1125
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1126
  br i1 %91, label %92, label %122, !dbg !1126

; <label>:92:                                     ; preds = %90
  %93 = bitcast i32* %5 to i8*, !dbg !1127
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #4, !dbg !1127
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1133
  br label %94, !dbg !1133

; <label>:94:                                     ; preds = %111, %92
  %95 = phi i64 [ 4, %92 ], [ %113, %111 ]
  %96 = phi i8* [ %93, %92 ], [ %112, %111 ]
  %97 = load i64, i64* %11, align 8, !dbg !1134, !tbaa !506
  %98 = icmp eq i64 %97, 0, !dbg !1135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1136
  br i1 %98, label %101, label %99, !dbg !1136

; <label>:99:                                     ; preds = %94
  %100 = icmp ult i64 %97, %95, !dbg !1137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1138
  br i1 %100, label %102, label %101, !dbg !1138

; <label>:101:                                    ; preds = %99, %94
  br label %102, !dbg !1138

; <label>:102:                                    ; preds = %99, %101
  %103 = phi i64 [ %95, %101 ], [ %97, %99 ], !dbg !1138
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1138
  %104 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1140, !tbaa !515
  %105 = call i64 %104(%struct._rio* nonnull %0, i8* %96, i64 %103) #9, !dbg !1141
  %106 = icmp eq i64 %105, 0, !dbg !1142
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1143
  br i1 %106, label %117, label %107, !dbg !1143

; <label>:107:                                    ; preds = %102
  %108 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1144, !tbaa !521
  %109 = icmp eq void (%struct._rio*, i8*, i64)* %108, null, !dbg !1145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1146
  br i1 %109, label %111, label %110, !dbg !1146

; <label>:110:                                    ; preds = %107
  call void %108(%struct._rio* nonnull %0, i8* %96, i64 %103) #9, !dbg !1147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1147
  br label %111, !dbg !1147

; <label>:111:                                    ; preds = %110, %107
  %112 = getelementptr inbounds i8, i8* %96, i64 %103, !dbg !1148
  %113 = sub i64 %95, %103, !dbg !1149
  %114 = load i64, i64* %14, align 8, !dbg !1150, !tbaa !528
  %115 = add i64 %114, %103, !dbg !1150
  store i64 %115, i64* %14, align 8, !dbg !1150, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1151
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %116 = icmp eq i64 %113, 0, !dbg !1133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1133
  br i1 %116, label %118, label %94, !dbg !1133

; <label>:117:                                    ; preds = %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1152
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #4, !dbg !1156
  br label %155

; <label>:118:                                    ; preds = %111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1157
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1154
  %119 = load i32, i32* %5, align 4, !dbg !1158, !tbaa !191
  %120 = call i32 @lwip_htonl(i32 %119) #9, !dbg !1158
  %121 = zext i32 %120 to i64, !dbg !1158
  store i64 %121, i64* %2, align 8, !dbg !1160, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1156
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #4, !dbg !1156
  br label %154

; <label>:122:                                    ; preds = %90
  %123 = icmp eq i8 %40, -127, !dbg !1161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1162
  br i1 %123, label %124, label %153, !dbg !1162

; <label>:124:                                    ; preds = %122
  %125 = bitcast i64* %6 to i8*, !dbg !1163
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #4, !dbg !1163
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1169
  br label %126, !dbg !1169

; <label>:126:                                    ; preds = %143, %124
  %127 = phi i64 [ 8, %124 ], [ %145, %143 ]
  %128 = phi i8* [ %125, %124 ], [ %144, %143 ]
  %129 = load i64, i64* %11, align 8, !dbg !1170, !tbaa !506
  %130 = icmp eq i64 %129, 0, !dbg !1171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1172
  br i1 %130, label %133, label %131, !dbg !1172

; <label>:131:                                    ; preds = %126
  %132 = icmp ult i64 %129, %127, !dbg !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1174
  br i1 %132, label %134, label %133, !dbg !1174

; <label>:133:                                    ; preds = %131, %126
  br label %134, !dbg !1174

; <label>:134:                                    ; preds = %131, %133
  %135 = phi i64 [ %127, %133 ], [ %129, %131 ], !dbg !1174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1174
  %136 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %12, align 8, !dbg !1176, !tbaa !515
  %137 = call i64 %136(%struct._rio* nonnull %0, i8* %128, i64 %135) #9, !dbg !1177
  %138 = icmp eq i64 %137, 0, !dbg !1178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1179
  br i1 %138, label %149, label %139, !dbg !1179

; <label>:139:                                    ; preds = %134
  %140 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1180, !tbaa !521
  %141 = icmp eq void (%struct._rio*, i8*, i64)* %140, null, !dbg !1181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1182
  br i1 %141, label %143, label %142, !dbg !1182

; <label>:142:                                    ; preds = %139
  call void %140(%struct._rio* nonnull %0, i8* %128, i64 %135) #9, !dbg !1183
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1183
  br label %143, !dbg !1183

; <label>:143:                                    ; preds = %142, %139
  %144 = getelementptr inbounds i8, i8* %128, i64 %135, !dbg !1184
  %145 = sub i64 %127, %135, !dbg !1185
  %146 = load i64, i64* %14, align 8, !dbg !1186, !tbaa !528
  %147 = add i64 %146, %135, !dbg !1186
  store i64 %147, i64* %14, align 8, !dbg !1186, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1187
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %148 = icmp eq i64 %145, 0, !dbg !1169
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1169
  br i1 %148, label %150, label %126, !dbg !1169

; <label>:149:                                    ; preds = %134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1188
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #4, !dbg !1192
  br label %155

; <label>:150:                                    ; preds = %143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1190
  %151 = load i64, i64* %6, align 8, !dbg !1194, !tbaa !674
  %152 = call i64 @intrev64(i64 %151) #9, !dbg !1194
  store i64 %152, i64* %2, align 8, !dbg !1196, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #4, !dbg !1192
  br label %154

; <label>:153:                                    ; preds = %122
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 213, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i32 %42) #11, !dbg !1197
  unreachable

; <label>:154:                                    ; preds = %150, %118, %51, %82, %46
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %155, !dbg !1199

; <label>:155:                                    ; preds = %149, %117, %154, %81, %38
  %156 = phi i32 [ -1, %38 ], [ 0, %154 ], [ -1, %81 ], [ -1, %117 ], [ -1, %149 ], !dbg !1200
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #4, !dbg !1201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1201
  ret i32 %156, !dbg !1201
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbLoadLen(%struct._rio*, i32*) local_unnamed_addr #6 !dbg !1202 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !1211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4, !dbg !1211
  %5 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* %1, i64* nonnull %3) #11, !dbg !1213
  %6 = icmp eq i32 %5, -1, !dbg !1215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1216
  %7 = load i64, i64* %3, align 8, !dbg !1217
  %8 = select i1 %6, i64 -1, i64 %7, !dbg !1216
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4, !dbg !1219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1219
  ret i64 %8, !dbg !1219
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbEncodeInteger(i64, i8* nocapture) local_unnamed_addr #6 !dbg !1220 {
  %3 = add i64 %0, 128, !dbg !1228
  %4 = icmp ult i64 %3, 256, !dbg !1228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1228
  br i1 %4, label %5, label %6, !dbg !1228

; <label>:5:                                      ; preds = %2
  store i8 -64, i8* %1, align 1, !dbg !1230, !tbaa !545
  br label %26, !dbg !1232

; <label>:6:                                      ; preds = %2
  %7 = add i64 %0, 32768, !dbg !1233
  %8 = icmp ult i64 %7, 65536, !dbg !1233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1233
  br i1 %8, label %9, label %13, !dbg !1233

; <label>:9:                                      ; preds = %6
  store i8 -63, i8* %1, align 1, !dbg !1235, !tbaa !545
  %10 = trunc i64 %0 to i8, !dbg !1237
  %11 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1238
  store i8 %10, i8* %11, align 1, !dbg !1239, !tbaa !545
  %12 = lshr i64 %0, 8, !dbg !1240
  br label %26, !dbg !1241

; <label>:13:                                     ; preds = %6
  %14 = add i64 %0, 2147483648, !dbg !1242
  %15 = icmp ult i64 %14, 4294967296, !dbg !1242
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1242
  br i1 %15, label %16, label %32, !dbg !1242

; <label>:16:                                     ; preds = %13
  store i8 -62, i8* %1, align 1, !dbg !1244, !tbaa !545
  %17 = trunc i64 %0 to i8, !dbg !1246
  %18 = getelementptr inbounds i8, i8* %1, i64 1, !dbg !1247
  store i8 %17, i8* %18, align 1, !dbg !1248, !tbaa !545
  %19 = lshr i64 %0, 8, !dbg !1249
  %20 = trunc i64 %19 to i8, !dbg !1250
  %21 = getelementptr inbounds i8, i8* %1, i64 2, !dbg !1251
  store i8 %20, i8* %21, align 1, !dbg !1252, !tbaa !545
  %22 = lshr i64 %0, 16, !dbg !1253
  %23 = trunc i64 %22 to i8, !dbg !1254
  %24 = getelementptr inbounds i8, i8* %1, i64 3, !dbg !1255
  store i8 %23, i8* %24, align 1, !dbg !1256, !tbaa !545
  %25 = lshr i64 %0, 24, !dbg !1257
  br label %26, !dbg !1258

; <label>:26:                                     ; preds = %5, %9, %16
  %27 = phi i64 [ %25, %16 ], [ %12, %9 ], [ %0, %5 ]
  %28 = phi i64 [ 4, %16 ], [ 2, %9 ], [ 1, %5 ]
  %29 = phi i32 [ 5, %16 ], [ 3, %9 ], [ 2, %5 ]
  %30 = trunc i64 %27 to i8, !dbg !1259
  %31 = getelementptr inbounds i8, i8* %1, i64 %28, !dbg !1259
  store i8 %30, i8* %31, align 1, !dbg !1259, !tbaa !545
  br label %32, !dbg !1259

; <label>:32:                                     ; preds = %26, %13
  %33 = phi i32 [ 0, %13 ], [ %29, %26 ], !dbg !1260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1262
  ret i32 %33, !dbg !1262
}

; Function Attrs: noredzone nounwind
define dso_local i8* @rdbLoadIntegerObject(%struct._rio*, i32, i32, i64*) local_unnamed_addr #6 !dbg !1263 {
  %5 = alloca [4 x i8], align 1
  %6 = alloca [21 x i8], align 16
  %7 = and i32 %2, 2, !dbg !1296
  %8 = and i32 %2, 1, !dbg !1299
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0, !dbg !1301
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #4, !dbg !1301
  %10 = icmp eq i32 %1, 0, !dbg !1303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1304
  br i1 %10, label %11, label %43, !dbg !1304

; <label>:11:                                     ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1311
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %14 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %15 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %16, !dbg !1311

; <label>:16:                                     ; preds = %33, %11
  %17 = phi i64 [ 1, %11 ], [ %35, %33 ]
  %18 = phi i8* [ %9, %11 ], [ %34, %33 ]
  %19 = load i64, i64* %12, align 8, !dbg !1312, !tbaa !506
  %20 = icmp eq i64 %19, 0, !dbg !1313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1314
  br i1 %20, label %23, label %21, !dbg !1314

; <label>:21:                                     ; preds = %16
  %22 = icmp ult i64 %19, %17, !dbg !1315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1316
  br i1 %22, label %24, label %23, !dbg !1316

; <label>:23:                                     ; preds = %21, %16
  br label %24, !dbg !1316

; <label>:24:                                     ; preds = %21, %23
  %25 = phi i64 [ %17, %23 ], [ %19, %21 ], !dbg !1316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1316
  %26 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %13, align 8, !dbg !1318, !tbaa !515
  %27 = call i64 %26(%struct._rio* nonnull %0, i8* %18, i64 %25) #9, !dbg !1319
  %28 = icmp eq i64 %27, 0, !dbg !1320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1321
  br i1 %28, label %39, label %29, !dbg !1321

; <label>:29:                                     ; preds = %24
  %30 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %14, align 8, !dbg !1322, !tbaa !521
  %31 = icmp eq void (%struct._rio*, i8*, i64)* %30, null, !dbg !1323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1324
  br i1 %31, label %33, label %32, !dbg !1324

; <label>:32:                                     ; preds = %29
  call void %30(%struct._rio* nonnull %0, i8* %18, i64 %25) #9, !dbg !1325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1325
  br label %33, !dbg !1325

; <label>:33:                                     ; preds = %32, %29
  %34 = getelementptr inbounds i8, i8* %18, i64 %25, !dbg !1326
  %35 = sub i64 %17, %25, !dbg !1327
  %36 = load i64, i64* %15, align 8, !dbg !1328, !tbaa !528
  %37 = add i64 %36, %25, !dbg !1328
  store i64 %37, i64* %15, align 8, !dbg !1328, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1329
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %38 = icmp eq i64 %35, 0, !dbg !1311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1311
  br i1 %38, label %40, label %16, !dbg !1311

; <label>:39:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1330
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1332
  br label %166, !dbg !1333

; <label>:40:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1332
  %41 = load i8, i8* %9, align 1, !dbg !1335, !tbaa !545
  %42 = sext i8 %41 to i64, !dbg !1336
  br label %134, !dbg !1338

; <label>:43:                                     ; preds = %4
  %44 = icmp eq i32 %1, 1, !dbg !1339
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1340
  br i1 %44, label %45, label %83, !dbg !1340

; <label>:45:                                     ; preds = %43
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1346
  %46 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %47 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %48 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %49 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %50, !dbg !1346

; <label>:50:                                     ; preds = %67, %45
  %51 = phi i64 [ 2, %45 ], [ %69, %67 ]
  %52 = phi i8* [ %9, %45 ], [ %68, %67 ]
  %53 = load i64, i64* %46, align 8, !dbg !1347, !tbaa !506
  %54 = icmp eq i64 %53, 0, !dbg !1348
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1349
  br i1 %54, label %57, label %55, !dbg !1349

; <label>:55:                                     ; preds = %50
  %56 = icmp ult i64 %53, %51, !dbg !1350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1351
  br i1 %56, label %58, label %57, !dbg !1351

; <label>:57:                                     ; preds = %55, %50
  br label %58, !dbg !1351

; <label>:58:                                     ; preds = %55, %57
  %59 = phi i64 [ %51, %57 ], [ %53, %55 ], !dbg !1351
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1351
  %60 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %47, align 8, !dbg !1353, !tbaa !515
  %61 = call i64 %60(%struct._rio* nonnull %0, i8* %52, i64 %59) #9, !dbg !1354
  %62 = icmp eq i64 %61, 0, !dbg !1355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1356
  br i1 %62, label %82, label %63, !dbg !1356

; <label>:63:                                     ; preds = %58
  %64 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %48, align 8, !dbg !1357, !tbaa !521
  %65 = icmp eq void (%struct._rio*, i8*, i64)* %64, null, !dbg !1358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1359
  br i1 %65, label %67, label %66, !dbg !1359

; <label>:66:                                     ; preds = %63
  call void %64(%struct._rio* nonnull %0, i8* %52, i64 %59) #9, !dbg !1360
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1360
  br label %67, !dbg !1360

; <label>:67:                                     ; preds = %66, %63
  %68 = getelementptr inbounds i8, i8* %52, i64 %59, !dbg !1361
  %69 = sub i64 %51, %59, !dbg !1362
  %70 = load i64, i64* %49, align 8, !dbg !1363, !tbaa !528
  %71 = add i64 %70, %59, !dbg !1363
  store i64 %71, i64* %49, align 8, !dbg !1363, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1364
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %72 = icmp eq i64 %69, 0, !dbg !1346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1346
  br i1 %72, label %73, label %50, !dbg !1346

; <label>:73:                                     ; preds = %67
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1367
  %74 = load i8, i8* %9, align 1, !dbg !1368, !tbaa !545
  %75 = zext i8 %74 to i16, !dbg !1368
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1, !dbg !1369
  %77 = load i8, i8* %76, align 1, !dbg !1369, !tbaa !545
  %78 = zext i8 %77 to i16, !dbg !1369
  %79 = shl nuw i16 %78, 8, !dbg !1370
  %80 = or i16 %79, %75, !dbg !1371
  %81 = sext i16 %80 to i64, !dbg !1373
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1374
  br label %134

; <label>:82:                                     ; preds = %58
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1375
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1376
  br label %166

; <label>:83:                                     ; preds = %43
  %84 = icmp eq i32 %1, 2, !dbg !1377
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1378
  br i1 %84, label %85, label %133, !dbg !1378

; <label>:85:                                     ; preds = %83
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1384
  %86 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %87 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %88 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %89 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %90, !dbg !1384

; <label>:90:                                     ; preds = %107, %85
  %91 = phi i64 [ 4, %85 ], [ %109, %107 ]
  %92 = phi i8* [ %9, %85 ], [ %108, %107 ]
  %93 = load i64, i64* %86, align 8, !dbg !1385, !tbaa !506
  %94 = icmp eq i64 %93, 0, !dbg !1386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1387
  br i1 %94, label %97, label %95, !dbg !1387

; <label>:95:                                     ; preds = %90
  %96 = icmp ult i64 %93, %91, !dbg !1388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1389
  br i1 %96, label %98, label %97, !dbg !1389

; <label>:97:                                     ; preds = %95, %90
  br label %98, !dbg !1389

; <label>:98:                                     ; preds = %95, %97
  %99 = phi i64 [ %91, %97 ], [ %93, %95 ], !dbg !1389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1389
  %100 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %87, align 8, !dbg !1391, !tbaa !515
  %101 = call i64 %100(%struct._rio* nonnull %0, i8* %92, i64 %99) #9, !dbg !1392
  %102 = icmp eq i64 %101, 0, !dbg !1393
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1394
  br i1 %102, label %132, label %103, !dbg !1394

; <label>:103:                                    ; preds = %98
  %104 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %88, align 8, !dbg !1395, !tbaa !521
  %105 = icmp eq void (%struct._rio*, i8*, i64)* %104, null, !dbg !1396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1397
  br i1 %105, label %107, label %106, !dbg !1397

; <label>:106:                                    ; preds = %103
  call void %104(%struct._rio* nonnull %0, i8* %92, i64 %99) #9, !dbg !1398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1398
  br label %107, !dbg !1398

; <label>:107:                                    ; preds = %106, %103
  %108 = getelementptr inbounds i8, i8* %92, i64 %99, !dbg !1399
  %109 = sub i64 %91, %99, !dbg !1400
  %110 = load i64, i64* %89, align 8, !dbg !1401, !tbaa !528
  %111 = add i64 %110, %99, !dbg !1401
  store i64 %111, i64* %89, align 8, !dbg !1401, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1402
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %112 = icmp eq i64 %109, 0, !dbg !1384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1384
  br i1 %112, label %113, label %90, !dbg !1384

; <label>:113:                                    ; preds = %107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1405
  %114 = load i8, i8* %9, align 1, !dbg !1406, !tbaa !545
  %115 = zext i8 %114 to i32, !dbg !1406
  %116 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1, !dbg !1407
  %117 = load i8, i8* %116, align 1, !dbg !1407, !tbaa !545
  %118 = zext i8 %117 to i32, !dbg !1407
  %119 = shl nuw nsw i32 %118, 8, !dbg !1408
  %120 = or i32 %119, %115, !dbg !1409
  %121 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 2, !dbg !1410
  %122 = load i8, i8* %121, align 1, !dbg !1410, !tbaa !545
  %123 = zext i8 %122 to i32, !dbg !1410
  %124 = shl nuw nsw i32 %123, 16, !dbg !1411
  %125 = or i32 %120, %124, !dbg !1412
  %126 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 3, !dbg !1413
  %127 = load i8, i8* %126, align 1, !dbg !1413, !tbaa !545
  %128 = zext i8 %127 to i32, !dbg !1413
  %129 = shl nuw i32 %128, 24, !dbg !1414
  %130 = or i32 %125, %129, !dbg !1415
  %131 = sext i32 %130 to i64, !dbg !1417
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1418
  br label %134

; <label>:132:                                    ; preds = %98
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1419
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1404
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1405
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1420
  br label %166

; <label>:133:                                    ; preds = %83
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 281, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0), i32 %1) #11, !dbg !1421
  unreachable

; <label>:134:                                    ; preds = %113, %73, %40
  %135 = phi i64 [ %42, %40 ], [ %81, %73 ], [ %131, %113 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %136 = icmp eq i32 %7, 0, !dbg !1423
  %137 = and i32 %2, 6, !dbg !1424
  %138 = icmp eq i32 %137, 0, !dbg !1424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1424
  br i1 %138, label %157, label %139, !dbg !1424

; <label>:139:                                    ; preds = %134
  %140 = getelementptr inbounds [21 x i8], [21 x i8]* %6, i64 0, i64 0, !dbg !1425
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %140) #4, !dbg !1425
  %141 = call i32 @ll2string(i8* nonnull %140, i64 21, i64 %135) #9, !dbg !1427
  %142 = icmp eq i64* %3, null, !dbg !1429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1431
  br i1 %142, label %145, label %143, !dbg !1431

; <label>:143:                                    ; preds = %139
  %144 = sext i32 %141 to i64, !dbg !1432
  store i64 %144, i64* %3, align 8, !dbg !1433, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1434
  br label %145, !dbg !1434

; <label>:145:                                    ; preds = %139, %143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1435
  br i1 %136, label %149, label %146, !dbg !1435

; <label>:146:                                    ; preds = %145
  %147 = sext i32 %141 to i64, !dbg !1436
  %148 = call i8* @zmalloc(i64 %147) #9, !dbg !1437
  br label %153, !dbg !1435

; <label>:149:                                    ; preds = %145
  %150 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !1438, !tbaa !200
  %151 = sext i32 %141 to i64, !dbg !1439
  %152 = call i8* @sdsnewlen(i8* %150, i64 %151) #9, !dbg !1440
  br label %153, !dbg !1435

; <label>:153:                                    ; preds = %149, %146
  %154 = phi i64 [ %151, %149 ], [ %147, %146 ], !dbg !1441
  %155 = phi i8* [ %152, %149 ], [ %148, %146 ], !dbg !1435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1435
  %156 = call i8* @memcpy(i8* %155, i8* nonnull %140, i64 %154) #9, !dbg !1443
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %140) #4, !dbg !1444
  br label %166

; <label>:157:                                    ; preds = %134
  %158 = icmp eq i32 %8, 0, !dbg !1445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1447
  br i1 %158, label %162, label %159, !dbg !1447

; <label>:159:                                    ; preds = %157
  %160 = call %struct.redisObject* @createStringObjectFromLongLongForValue(i64 %135) #9, !dbg !1448
  %161 = bitcast %struct.redisObject* %160 to i8*, !dbg !1448
  br label %166, !dbg !1450

; <label>:162:                                    ; preds = %157
  %163 = call i8* @sdsfromlonglong(i64 %135) #9, !dbg !1451
  %164 = call %struct.redisObject* @createObject(i32 0, i8* %163) #9, !dbg !1453
  %165 = bitcast %struct.redisObject* %164 to i8*, !dbg !1453
  br label %166, !dbg !1454

; <label>:166:                                    ; preds = %132, %82, %162, %159, %153, %39
  %167 = phi i8* [ null, %39 ], [ %155, %153 ], [ %161, %159 ], [ %165, %162 ], [ null, %82 ], [ null, %132 ], !dbg !1455
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #4, !dbg !1456
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1456
  ret i8* %167, !dbg !1456
}

; Function Attrs: noredzone
declare dso_local i32 @ll2string(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObjectFromLongLongForValue(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsfromlonglong(i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbTryIntegerEncoding(i8*, i64, i8* nocapture) local_unnamed_addr #6 !dbg !1457 {
  %4 = alloca i8*, align 8
  %5 = alloca [32 x i8], align 16
  %6 = bitcast i8** %4 to i8*, !dbg !1471
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4, !dbg !1471
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i64 0, i64 0, !dbg !1471
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4, !dbg !1471
  %8 = call i64 @strtoll(i8* %0, i8** nonnull %4, i32 10) #9, !dbg !1474
  %9 = load i8*, i8** %4, align 8, !dbg !1476, !tbaa !200
  %10 = load i8, i8* %9, align 1, !dbg !1476, !tbaa !545
  %11 = icmp eq i8 %10, 0, !dbg !1478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1479
  br i1 %11, label %12, label %51, !dbg !1479

; <label>:12:                                     ; preds = %3
  %13 = call i32 @ll2string(i8* nonnull %7, i64 32, i64 %8) #9, !dbg !1480
  %14 = call i64 @strlen(i8* nonnull %7) #9, !dbg !1481
  %15 = icmp eq i64 %14, %1, !dbg !1483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1484
  br i1 %15, label %16, label %51, !dbg !1484

; <label>:16:                                     ; preds = %12
  %17 = call i32 @memcmp(i8* nonnull %7, i8* %0, i64 %1) #9, !dbg !1485
  %18 = icmp eq i32 %17, 0, !dbg !1485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1486
  br i1 %18, label %19, label %51, !dbg !1486

; <label>:19:                                     ; preds = %16
  %20 = add i64 %8, 128, !dbg !1490
  %21 = icmp ult i64 %20, 256, !dbg !1490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1490
  br i1 %21, label %22, label %23, !dbg !1490

; <label>:22:                                     ; preds = %19
  store i8 -64, i8* %2, align 1, !dbg !1491, !tbaa !545
  br label %43, !dbg !1492

; <label>:23:                                     ; preds = %19
  %24 = add i64 %8, 32768, !dbg !1493
  %25 = icmp ult i64 %24, 65536, !dbg !1493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1493
  br i1 %25, label %26, label %30, !dbg !1493

; <label>:26:                                     ; preds = %23
  store i8 -63, i8* %2, align 1, !dbg !1494, !tbaa !545
  %27 = trunc i64 %8 to i8, !dbg !1495
  %28 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !1496
  store i8 %27, i8* %28, align 1, !dbg !1497, !tbaa !545
  %29 = lshr i64 %8, 8, !dbg !1498
  br label %43, !dbg !1499

; <label>:30:                                     ; preds = %23
  %31 = add i64 %8, 2147483648, !dbg !1500
  %32 = icmp ult i64 %31, 4294967296, !dbg !1500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1500
  br i1 %32, label %33, label %49, !dbg !1500

; <label>:33:                                     ; preds = %30
  store i8 -62, i8* %2, align 1, !dbg !1501, !tbaa !545
  %34 = trunc i64 %8 to i8, !dbg !1502
  %35 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !1503
  store i8 %34, i8* %35, align 1, !dbg !1504, !tbaa !545
  %36 = lshr i64 %8, 8, !dbg !1505
  %37 = trunc i64 %36 to i8, !dbg !1506
  %38 = getelementptr inbounds i8, i8* %2, i64 2, !dbg !1507
  store i8 %37, i8* %38, align 1, !dbg !1508, !tbaa !545
  %39 = lshr i64 %8, 16, !dbg !1509
  %40 = trunc i64 %39 to i8, !dbg !1510
  %41 = getelementptr inbounds i8, i8* %2, i64 3, !dbg !1511
  store i8 %40, i8* %41, align 1, !dbg !1512, !tbaa !545
  %42 = lshr i64 %8, 24, !dbg !1513
  br label %43, !dbg !1514

; <label>:43:                                     ; preds = %33, %26, %22
  %44 = phi i64 [ %8, %22 ], [ %29, %26 ], [ %42, %33 ]
  %45 = phi i64 [ 1, %22 ], [ 2, %26 ], [ 4, %33 ]
  %46 = phi i32 [ 2, %22 ], [ 3, %26 ], [ 5, %33 ]
  %47 = trunc i64 %44 to i8, !dbg !1515
  %48 = getelementptr inbounds i8, i8* %2, i64 %45, !dbg !1515
  store i8 %47, i8* %48, align 1, !dbg !1515, !tbaa !545
  br label %49, !dbg !1515

; <label>:49:                                     ; preds = %43, %30
  %50 = phi i32 [ 0, %30 ], [ %46, %43 ], !dbg !1516
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1517
  br label %51, !dbg !1518

; <label>:51:                                     ; preds = %12, %16, %3, %49
  %52 = phi i32 [ %50, %49 ], [ 0, %3 ], [ 0, %16 ], [ 0, %12 ], !dbg !1515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1519
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4, !dbg !1520
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4, !dbg !1520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1520
  ret i32 %52, !dbg !1520
}

; Function Attrs: noredzone
declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveLzfBlob(%struct._rio*, i8*, i64, i64) local_unnamed_addr #6 !dbg !1521 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #4, !dbg !1537
  store i8 -61, i8* %5, align 1, !dbg !1539, !tbaa !545
  %6 = icmp eq %struct._rio* %0, null, !dbg !1545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1546
  br i1 %6, label %37, label %7, !dbg !1546

; <label>:7:                                      ; preds = %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1551
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %12, !dbg !1551

; <label>:12:                                     ; preds = %29, %7
  %13 = phi i64 [ 1, %7 ], [ %31, %29 ]
  %14 = phi i8* [ %5, %7 ], [ %30, %29 ]
  %15 = load i64, i64* %8, align 8, !dbg !1552, !tbaa !506
  %16 = icmp eq i64 %15, 0, !dbg !1553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1554
  br i1 %16, label %19, label %17, !dbg !1554

; <label>:17:                                     ; preds = %12
  %18 = icmp ult i64 %15, %13, !dbg !1555
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1556
  br i1 %18, label %20, label %19, !dbg !1556

; <label>:19:                                     ; preds = %17, %12
  br label %20, !dbg !1556

; <label>:20:                                     ; preds = %17, %19
  %21 = phi i64 [ %13, %19 ], [ %15, %17 ], !dbg !1556
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1556
  %22 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %9, align 8, !dbg !1558, !tbaa !521
  %23 = icmp eq void (%struct._rio*, i8*, i64)* %22, null, !dbg !1559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1560
  br i1 %23, label %25, label %24, !dbg !1560

; <label>:24:                                     ; preds = %20
  call void %22(%struct._rio* nonnull %0, i8* %14, i64 %21) #9, !dbg !1561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1561
  br label %25, !dbg !1561

; <label>:25:                                     ; preds = %24, %20
  %26 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %10, align 8, !dbg !1562, !tbaa !590
  %27 = call i64 %26(%struct._rio* nonnull %0, i8* %14, i64 %21) #9, !dbg !1563
  %28 = icmp eq i64 %27, 0, !dbg !1564
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1565
  br i1 %28, label %36, label %29, !dbg !1565

; <label>:29:                                     ; preds = %25
  %30 = getelementptr inbounds i8, i8* %14, i64 %21, !dbg !1566
  %31 = sub i64 %13, %21, !dbg !1567
  %32 = load i64, i64* %11, align 8, !dbg !1568, !tbaa !528
  %33 = add i64 %32, %21, !dbg !1568
  store i64 %33, i64* %11, align 8, !dbg !1568, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1569
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %34 = icmp eq i64 %31, 0, !dbg !1551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1551
  br i1 %34, label %35, label %12, !dbg !1551

; <label>:35:                                     ; preds = %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1572
  br label %37, !dbg !1572

; <label>:36:                                     ; preds = %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1573
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1574
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1575
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1577
  br label %87, !dbg !1577

; <label>:37:                                     ; preds = %35, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1575
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1577
  %38 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %2) #11, !dbg !1579
  %39 = icmp eq i32 %38, -1, !dbg !1581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1582
  br i1 %39, label %87, label %40, !dbg !1582

; <label>:40:                                     ; preds = %37
  %41 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %3) #11, !dbg !1583
  %42 = icmp eq i32 %41, -1, !dbg !1585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1586
  br i1 %42, label %87, label %43, !dbg !1586

; <label>:43:                                     ; preds = %40
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1592
  br i1 %6, label %76, label %44, !dbg !1592

; <label>:44:                                     ; preds = %43
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1597
  %45 = icmp eq i64 %2, 0, !dbg !1597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1597
  br i1 %45, label %74, label %46, !dbg !1597

; <label>:46:                                     ; preds = %44
  %47 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %48 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %49 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %50 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %51, !dbg !1597

; <label>:51:                                     ; preds = %68, %46
  %52 = phi i64 [ %2, %46 ], [ %70, %68 ]
  %53 = phi i8* [ %1, %46 ], [ %69, %68 ]
  %54 = load i64, i64* %47, align 8, !dbg !1598, !tbaa !506
  %55 = icmp eq i64 %54, 0, !dbg !1599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1600
  br i1 %55, label %58, label %56, !dbg !1600

; <label>:56:                                     ; preds = %51
  %57 = icmp ult i64 %54, %52, !dbg !1601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1602
  br i1 %57, label %59, label %58, !dbg !1602

; <label>:58:                                     ; preds = %56, %51
  br label %59, !dbg !1602

; <label>:59:                                     ; preds = %56, %58
  %60 = phi i64 [ %52, %58 ], [ %54, %56 ], !dbg !1602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1602
  %61 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %48, align 8, !dbg !1604, !tbaa !521
  %62 = icmp eq void (%struct._rio*, i8*, i64)* %61, null, !dbg !1605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1606
  br i1 %62, label %64, label %63, !dbg !1606

; <label>:63:                                     ; preds = %59
  call void %61(%struct._rio* nonnull %0, i8* %53, i64 %60) #9, !dbg !1607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1607
  br label %64, !dbg !1607

; <label>:64:                                     ; preds = %63, %59
  %65 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %49, align 8, !dbg !1608, !tbaa !590
  %66 = call i64 %65(%struct._rio* nonnull %0, i8* %53, i64 %60) #9, !dbg !1609
  %67 = icmp eq i64 %66, 0, !dbg !1610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1611
  br i1 %67, label %75, label %68, !dbg !1611

; <label>:68:                                     ; preds = %64
  %69 = getelementptr inbounds i8, i8* %53, i64 %60, !dbg !1612
  %70 = sub i64 %52, %60, !dbg !1613
  %71 = load i64, i64* %50, align 8, !dbg !1614, !tbaa !528
  %72 = add i64 %71, %60, !dbg !1614
  store i64 %72, i64* %50, align 8, !dbg !1614, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1615
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %73 = icmp eq i64 %70, 0, !dbg !1597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1597
  br i1 %73, label %74, label %51, !dbg !1597

; <label>:74:                                     ; preds = %68, %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1618
  br label %76, !dbg !1618

; <label>:75:                                     ; preds = %64
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1619
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1618
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1622
  br label %87, !dbg !1622

; <label>:76:                                     ; preds = %43, %74
  %77 = trunc i64 %2 to i32, !dbg !1623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1621
  %78 = icmp eq i32 %77, -1, !dbg !1625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1622
  br i1 %78, label %87, label %79, !dbg !1622

; <label>:79:                                     ; preds = %76
  %80 = shl i64 %2, 32, !dbg !1626
  %81 = ashr exact i64 %80, 32, !dbg !1626
  %82 = sext i32 %38 to i64, !dbg !1579
  %83 = sext i32 %41 to i64, !dbg !1583
  %84 = add nsw i64 %81, 1, !dbg !1627
  %85 = add nsw i64 %84, %82, !dbg !1628
  %86 = add nsw i64 %85, %83, !dbg !1629
  br label %87, !dbg !1630

; <label>:87:                                     ; preds = %37, %40, %76, %36, %75, %79
  %88 = phi i64 [ %86, %79 ], [ -1, %75 ], [ -1, %36 ], [ -1, %76 ], [ -1, %40 ], [ -1, %37 ], !dbg !1631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1631
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #4, !dbg !1632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1632
  ret i64 %88, !dbg !1632
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveLzfStringObject(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !1633 {
  %4 = icmp ult i64 %2, 5, !dbg !1647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1649
  br i1 %4, label %18, label %5, !dbg !1649

; <label>:5:                                      ; preds = %3
  %6 = add i64 %2, -3, !dbg !1651
  %7 = tail call i8* @zmalloc(i64 %6) #9, !dbg !1653
  %8 = icmp eq i8* %7, null, !dbg !1655
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1656
  br i1 %8, label %18, label %9, !dbg !1656

; <label>:9:                                      ; preds = %5
  %10 = trunc i64 %2 to i32, !dbg !1657
  %11 = add i32 %10, -4, !dbg !1658
  %12 = tail call i32 @lzf_compress(i8* %1, i32 %10, i8* nonnull %7, i32 %11) #9, !dbg !1659
  %13 = icmp eq i32 %12, 0, !dbg !1660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1662
  br i1 %13, label %14, label %15, !dbg !1662

; <label>:14:                                     ; preds = %9
  tail call void @zfree(i8* nonnull %7) #9, !dbg !1663
  br label %18, !dbg !1665

; <label>:15:                                     ; preds = %9
  %16 = zext i32 %12 to i64, !dbg !1659
  %17 = tail call i64 @rdbSaveLzfBlob(%struct._rio* %0, i8* nonnull %7, i64 %16, i64 %2) #11, !dbg !1667
  tail call void @zfree(i8* nonnull %7) #9, !dbg !1669
  br label %18

; <label>:18:                                     ; preds = %5, %3, %15, %14
  %19 = phi i64 [ 0, %14 ], [ %17, %15 ], [ 0, %3 ], [ 0, %5 ], !dbg !1670
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1671
  ret i64 %19, !dbg !1671
}

; Function Attrs: noredzone
declare dso_local i32 @lzf_compress(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @rdbLoadLzfStringObject(%struct._rio*, i32, i64*) local_unnamed_addr #6 !dbg !1672 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = and i32 %1, 2, !dbg !1688
  %7 = bitcast i64* %5 to i8*, !dbg !1697
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4, !dbg !1697
  %8 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %5) #9, !dbg !1699
  %9 = icmp eq i32 %8, -1, !dbg !1700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1701
  br i1 %9, label %10, label %11, !dbg !1701

; <label>:10:                                     ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !1703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1705
  br label %88, !dbg !1705

; <label>:11:                                     ; preds = %3
  %12 = load i64, i64* %5, align 8, !dbg !1706, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1707
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !1703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1703
  %13 = icmp eq i64 %12, -1, !dbg !1708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1705
  br i1 %13, label %88, label %14, !dbg !1705

; <label>:14:                                     ; preds = %11
  %15 = bitcast i64* %4 to i8*, !dbg !1713
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4, !dbg !1713
  %16 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %4) #9, !dbg !1715
  %17 = icmp eq i32 %16, -1, !dbg !1716
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1717
  br i1 %17, label %18, label %19, !dbg !1717

; <label>:18:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1718
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4, !dbg !1719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1721
  br label %88, !dbg !1721

; <label>:19:                                     ; preds = %14
  %20 = load i64, i64* %4, align 8, !dbg !1722, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1723
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4, !dbg !1719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1719
  %21 = icmp eq i64 %20, -1, !dbg !1724
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1721
  br i1 %21, label %88, label %22, !dbg !1721

; <label>:22:                                     ; preds = %19
  %23 = tail call i8* @zmalloc(i64 %12) #9, !dbg !1725
  %24 = icmp eq i8* %23, null, !dbg !1727
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1728
  br i1 %24, label %82, label %25, !dbg !1728

; <label>:25:                                     ; preds = %22
  %26 = icmp eq i32 %6, 0, !dbg !1729
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1731
  br i1 %26, label %29, label %27, !dbg !1731

; <label>:27:                                     ; preds = %25
  %28 = tail call i8* @zmalloc(i64 %20) #9, !dbg !1732
  br label %32, !dbg !1734

; <label>:29:                                     ; preds = %25
  %30 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !1735, !tbaa !200
  %31 = tail call i8* @sdsnewlen(i8* %30, i64 %20) #9, !dbg !1737
  br label %32

; <label>:32:                                     ; preds = %29, %27
  %33 = phi i8* [ %28, %27 ], [ %31, %29 ], !dbg !1738
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %34 = icmp eq i64* %2, null, !dbg !1739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1741
  br i1 %34, label %36, label %35, !dbg !1741

; <label>:35:                                     ; preds = %32
  store i64 %20, i64* %2, align 8, !dbg !1742, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1743
  br label %36, !dbg !1743

; <label>:36:                                     ; preds = %32, %35
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1749
  %37 = icmp eq i64 %12, 0, !dbg !1749
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1749
  br i1 %37, label %67, label %38, !dbg !1749

; <label>:38:                                     ; preds = %36
  %39 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %40 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %41 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %43, !dbg !1749

; <label>:43:                                     ; preds = %61, %38
  %44 = phi i64 [ %12, %38 ], [ %63, %61 ]
  %45 = phi i8* [ %23, %38 ], [ %62, %61 ]
  %46 = load i64, i64* %39, align 8, !dbg !1750, !tbaa !506
  %47 = icmp eq i64 %46, 0, !dbg !1751
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1752
  br i1 %47, label %50, label %48, !dbg !1752

; <label>:48:                                     ; preds = %43
  %49 = icmp ult i64 %46, %44, !dbg !1753
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1754
  br i1 %49, label %51, label %50, !dbg !1754

; <label>:50:                                     ; preds = %48, %43
  br label %51, !dbg !1754

; <label>:51:                                     ; preds = %48, %50
  %52 = phi i64 [ %44, %50 ], [ %46, %48 ], !dbg !1754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1754
  %53 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %40, align 8, !dbg !1756, !tbaa !515
  %54 = tail call i64 %53(%struct._rio* nonnull %0, i8* %45, i64 %52) #9, !dbg !1757
  %55 = icmp eq i64 %54, 0, !dbg !1758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1759
  br i1 %55, label %56, label %57, !dbg !1759

; <label>:56:                                     ; preds = %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1760
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1762
  br label %82, !dbg !1762

; <label>:57:                                     ; preds = %51
  %58 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %41, align 8, !dbg !1763, !tbaa !521
  %59 = icmp eq void (%struct._rio*, i8*, i64)* %58, null, !dbg !1764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1765
  br i1 %59, label %61, label %60, !dbg !1765

; <label>:60:                                     ; preds = %57
  tail call void %58(%struct._rio* nonnull %0, i8* %45, i64 %52) #9, !dbg !1766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1766
  br label %61, !dbg !1766

; <label>:61:                                     ; preds = %60, %57
  %62 = getelementptr inbounds i8, i8* %45, i64 %52, !dbg !1767
  %63 = sub i64 %44, %52, !dbg !1768
  %64 = load i64, i64* %42, align 8, !dbg !1769, !tbaa !528
  %65 = add i64 %64, %52, !dbg !1769
  store i64 %65, i64* %42, align 8, !dbg !1769, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1770
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %66 = icmp eq i64 %63, 0, !dbg !1749
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1749
  br i1 %66, label %67, label %43, !dbg !1749

; <label>:67:                                     ; preds = %61, %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1762
  %68 = trunc i64 %12 to i32, !dbg !1772
  %69 = trunc i64 %20 to i32, !dbg !1774
  %70 = tail call i32 @lzf_decompress(i8* nonnull %23, i32 %68, i8* %33, i32 %69) #9, !dbg !1775
  %71 = icmp eq i32 %70, 0, !dbg !1776
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1777
  br i1 %71, label %72, label %76, !dbg !1777

; <label>:72:                                     ; preds = %67
  %73 = load i32, i32* @rdbCheckMode, align 4, !dbg !1778, !tbaa !191
  %74 = icmp eq i32 %73, 0, !dbg !1778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1781
  br i1 %74, label %82, label %75, !dbg !1781

; <label>:75:                                     ; preds = %72
  tail call void (i8*, ...) @rdbCheckSetError(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !1782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1782
  br label %82, !dbg !1782

; <label>:76:                                     ; preds = %67
  tail call void @zfree(i8* nonnull %23) #9, !dbg !1783
  %77 = and i32 %1, 6, !dbg !1784
  %78 = icmp eq i32 %77, 0, !dbg !1784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1784
  br i1 %78, label %79, label %88, !dbg !1784

; <label>:79:                                     ; preds = %76
  %80 = tail call %struct.redisObject* @createObject(i32 0, i8* %33) #9, !dbg !1786
  %81 = bitcast %struct.redisObject* %80 to i8*, !dbg !1786
  br label %88, !dbg !1788

; <label>:82:                                     ; preds = %56, %72, %75, %22
  %83 = phi i8* [ null, %22 ], [ %33, %75 ], [ %33, %72 ], [ %33, %56 ], !dbg !1789
  tail call void @zfree(i8* %23) #9, !dbg !1790
  %84 = icmp eq i32 %6, 0, !dbg !1791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1793
  br i1 %84, label %86, label %85, !dbg !1793

; <label>:85:                                     ; preds = %82
  tail call void @zfree(i8* %83) #9, !dbg !1794
  br label %87, !dbg !1794

; <label>:86:                                     ; preds = %82
  tail call void @sdsfree(i8* %83) #9, !dbg !1795
  br label %87

; <label>:87:                                     ; preds = %86, %85
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %88, !dbg !1796

; <label>:88:                                     ; preds = %76, %19, %18, %11, %10, %87, %79
  %89 = phi i8* [ null, %87 ], [ %81, %79 ], [ null, %10 ], [ null, %11 ], [ null, %18 ], [ null, %19 ], [ %33, %76 ], !dbg !1797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1799
  ret i8* %89, !dbg !1799
}

; Function Attrs: noredzone
declare dso_local i32 @lzf_decompress(i8*, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rdbCheckSetError(i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveRawString(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !1800 {
  %4 = alloca [5 x i8], align 1
  %5 = icmp ult i64 %2, 12, !dbg !1818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1819
  br i1 %5, label %6, label %49, !dbg !1819

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0, !dbg !1820
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %7) #4, !dbg !1820
  %8 = call i32 @rdbTryIntegerEncoding(i8* %1, i64 %2, i8* nonnull %7) #11, !dbg !1822
  %9 = icmp sgt i32 %8, 0, !dbg !1825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1826
  br i1 %9, label %10, label %48, !dbg !1826

; <label>:10:                                     ; preds = %6
  %11 = sext i32 %8 to i64, !dbg !1827
  %12 = icmp eq %struct._rio* %0, null, !dbg !1834
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1835
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1836
  br i1 %12, label %13, label %14, !dbg !1835

; <label>:13:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1838
  br label %46, !dbg !1839

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %16 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %17 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %19, !dbg !1844

; <label>:19:                                     ; preds = %36, %14
  %20 = phi i64 [ %11, %14 ], [ %38, %36 ]
  %21 = phi i8* [ %7, %14 ], [ %37, %36 ]
  %22 = load i64, i64* %15, align 8, !dbg !1845, !tbaa !506
  %23 = icmp eq i64 %22, 0, !dbg !1846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1847
  br i1 %23, label %26, label %24, !dbg !1847

; <label>:24:                                     ; preds = %19
  %25 = icmp ult i64 %22, %20, !dbg !1848
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1849
  br i1 %25, label %27, label %26, !dbg !1849

; <label>:26:                                     ; preds = %24, %19
  br label %27, !dbg !1849

; <label>:27:                                     ; preds = %24, %26
  %28 = phi i64 [ %20, %26 ], [ %22, %24 ], !dbg !1849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1849
  %29 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %16, align 8, !dbg !1851, !tbaa !521
  %30 = icmp eq void (%struct._rio*, i8*, i64)* %29, null, !dbg !1852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1853
  br i1 %30, label %32, label %31, !dbg !1853

; <label>:31:                                     ; preds = %27
  call void %29(%struct._rio* nonnull %0, i8* %21, i64 %28) #9, !dbg !1854
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1854
  br label %32, !dbg !1854

; <label>:32:                                     ; preds = %31, %27
  %33 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %17, align 8, !dbg !1855, !tbaa !590
  %34 = call i64 %33(%struct._rio* nonnull %0, i8* %21, i64 %28) #9, !dbg !1856
  %35 = icmp eq i64 %34, 0, !dbg !1857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1858
  br i1 %35, label %42, label %36, !dbg !1858

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds i8, i8* %21, i64 %28, !dbg !1859
  %38 = sub i64 %20, %28, !dbg !1860
  %39 = load i64, i64* %18, align 8, !dbg !1861, !tbaa !528
  %40 = add i64 %39, %28, !dbg !1861
  store i64 %40, i64* %18, align 8, !dbg !1861, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1862
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %41 = icmp eq i64 %38, 0, !dbg !1844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1844
  br i1 %41, label %43, label %19, !dbg !1844

; <label>:42:                                     ; preds = %32
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1863
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1867
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1838
  br label %45, !dbg !1839

; <label>:43:                                     ; preds = %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1867
  %44 = icmp eq i32 %8, -1, !dbg !1870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1838
  br i1 %44, label %45, label %46, !dbg !1839

; <label>:45:                                     ; preds = %42, %43
  br label %46, !dbg !1839

; <label>:46:                                     ; preds = %13, %43, %45
  %47 = phi i64 [ %11, %13 ], [ %11, %43 ], [ -1, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %7) #4, !dbg !1871
  br label %102

; <label>:48:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1871
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %7) #4, !dbg !1871
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1872
  br label %59, !dbg !1872

; <label>:49:                                     ; preds = %3
  %50 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 158), align 8, !dbg !1874, !tbaa !1875
  %51 = icmp ne i32 %50, 0, !dbg !1876
  %52 = icmp ugt i64 %2, 20, !dbg !1877
  %53 = and i1 %52, %51, !dbg !1872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1872
  br i1 %53, label %54, label %59, !dbg !1872

; <label>:54:                                     ; preds = %49
  %55 = tail call i64 @rdbSaveLzfStringObject(%struct._rio* %0, i8* %1, i64 %2) #11, !dbg !1878
  %56 = icmp eq i64 %55, -1, !dbg !1881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1883
  br i1 %56, label %102, label %57, !dbg !1883

; <label>:57:                                     ; preds = %54
  %58 = icmp sgt i64 %55, 0, !dbg !1884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1886
  br i1 %58, label %102, label %59, !dbg !1886

; <label>:59:                                     ; preds = %48, %57, %49
  %60 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %2) #11, !dbg !1887
  %61 = sext i32 %60 to i64, !dbg !1887
  %62 = icmp eq i32 %60, -1, !dbg !1889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1890
  br i1 %62, label %102, label %63, !dbg !1890

; <label>:63:                                     ; preds = %59
  %64 = icmp eq i64 %2, 0, !dbg !1891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1893
  br i1 %64, label %102, label %65, !dbg !1893

; <label>:65:                                     ; preds = %63
  %66 = icmp eq %struct._rio* %0, null, !dbg !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1901
  br i1 %66, label %97, label %67, !dbg !1901

; <label>:67:                                     ; preds = %65
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1906
  %68 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %69 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %70 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %71 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %72, !dbg !1906

; <label>:72:                                     ; preds = %89, %67
  %73 = phi i64 [ %2, %67 ], [ %91, %89 ]
  %74 = phi i8* [ %1, %67 ], [ %90, %89 ]
  %75 = load i64, i64* %68, align 8, !dbg !1907, !tbaa !506
  %76 = icmp eq i64 %75, 0, !dbg !1908
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1909
  br i1 %76, label %79, label %77, !dbg !1909

; <label>:77:                                     ; preds = %72
  %78 = icmp ult i64 %75, %73, !dbg !1910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1911
  br i1 %78, label %80, label %79, !dbg !1911

; <label>:79:                                     ; preds = %77, %72
  br label %80, !dbg !1911

; <label>:80:                                     ; preds = %77, %79
  %81 = phi i64 [ %73, %79 ], [ %75, %77 ], !dbg !1911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1911
  %82 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %69, align 8, !dbg !1913, !tbaa !521
  %83 = icmp eq void (%struct._rio*, i8*, i64)* %82, null, !dbg !1914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1915
  br i1 %83, label %85, label %84, !dbg !1915

; <label>:84:                                     ; preds = %80
  tail call void %82(%struct._rio* nonnull %0, i8* %74, i64 %81) #9, !dbg !1916
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1916
  br label %85, !dbg !1916

; <label>:85:                                     ; preds = %84, %80
  %86 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %70, align 8, !dbg !1917, !tbaa !590
  %87 = tail call i64 %86(%struct._rio* nonnull %0, i8* %74, i64 %81) #9, !dbg !1918
  %88 = icmp eq i64 %87, 0, !dbg !1919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1920
  br i1 %88, label %96, label %89, !dbg !1920

; <label>:89:                                     ; preds = %85
  %90 = getelementptr inbounds i8, i8* %74, i64 %81, !dbg !1921
  %91 = sub i64 %73, %81, !dbg !1922
  %92 = load i64, i64* %71, align 8, !dbg !1923, !tbaa !528
  %93 = add i64 %92, %81, !dbg !1923
  store i64 %93, i64* %71, align 8, !dbg !1923, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1924
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %94 = icmp eq i64 %91, 0, !dbg !1906
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1906
  br i1 %94, label %95, label %72, !dbg !1906

; <label>:95:                                     ; preds = %89
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1927
  br label %97, !dbg !1927

; <label>:96:                                     ; preds = %85
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1928
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1931
  br label %102, !dbg !1931

; <label>:97:                                     ; preds = %65, %95
  %98 = trunc i64 %2 to i32, !dbg !1932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1930
  %99 = icmp eq i32 %98, -1, !dbg !1934
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1931
  br i1 %99, label %102, label %100, !dbg !1931

; <label>:100:                                    ; preds = %97
  %101 = add i64 %61, %2, !dbg !1935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1936
  br label %102, !dbg !1936

; <label>:102:                                    ; preds = %100, %63, %97, %96, %59, %57, %54, %46
  %103 = phi i64 [ %47, %46 ], [ -1, %54 ], [ %55, %57 ], [ -1, %59 ], [ -1, %96 ], [ -1, %97 ], [ %101, %100 ], [ %61, %63 ], !dbg !1836
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1937
  ret i64 %103, !dbg !1937
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveLongLongAsStringObject(%struct._rio*, i64) local_unnamed_addr #6 !dbg !1938 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0, !dbg !1951
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #4, !dbg !1951
  %5 = add i64 %1, 128, !dbg !1957
  %6 = icmp ult i64 %5, 256, !dbg !1957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1957
  br i1 %6, label %7, label %10, !dbg !1957

; <label>:7:                                      ; preds = %2
  store i8 -64, i8* %4, align 16, !dbg !1958, !tbaa !545
  %8 = trunc i64 %1 to i8, !dbg !1959
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 1, !dbg !1960
  store i8 %8, i8* %9, align 1, !dbg !1961, !tbaa !545
  br label %34, !dbg !1962

; <label>:10:                                     ; preds = %2
  %11 = add i64 %1, 32768, !dbg !1963
  %12 = icmp ult i64 %11, 65536, !dbg !1963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1963
  br i1 %12, label %13, label %19, !dbg !1963

; <label>:13:                                     ; preds = %10
  store i8 -63, i8* %4, align 16, !dbg !1964, !tbaa !545
  %14 = trunc i64 %1 to i8, !dbg !1965
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 1, !dbg !1966
  store i8 %14, i8* %15, align 1, !dbg !1967, !tbaa !545
  %16 = lshr i64 %1, 8, !dbg !1968
  %17 = trunc i64 %16 to i8, !dbg !1969
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 2, !dbg !1970
  store i8 %17, i8* %18, align 2, !dbg !1971, !tbaa !545
  br label %34, !dbg !1972

; <label>:19:                                     ; preds = %10
  %20 = add i64 %1, 2147483648, !dbg !1973
  %21 = icmp ult i64 %20, 4294967296, !dbg !1973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1973
  br i1 %21, label %22, label %72, !dbg !1973

; <label>:22:                                     ; preds = %19
  store i8 -62, i8* %4, align 16, !dbg !1974, !tbaa !545
  %23 = trunc i64 %1 to i8, !dbg !1975
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 1, !dbg !1976
  store i8 %23, i8* %24, align 1, !dbg !1977, !tbaa !545
  %25 = lshr i64 %1, 8, !dbg !1978
  %26 = trunc i64 %25 to i8, !dbg !1979
  %27 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 2, !dbg !1980
  store i8 %26, i8* %27, align 2, !dbg !1981, !tbaa !545
  %28 = lshr i64 %1, 16, !dbg !1982
  %29 = trunc i64 %28 to i8, !dbg !1983
  %30 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 3, !dbg !1984
  store i8 %29, i8* %30, align 1, !dbg !1985, !tbaa !545
  %31 = lshr i64 %1, 24, !dbg !1986
  %32 = trunc i64 %31 to i8, !dbg !1987
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 4, !dbg !1988
  store i8 %32, i8* %33, align 4, !dbg !1989, !tbaa !545
  br label %34, !dbg !1990

; <label>:34:                                     ; preds = %7, %13, %22
  %35 = phi i32 [ 5, %22 ], [ 3, %13 ], [ 2, %7 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1992
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1994
  %36 = icmp eq %struct._rio* %0, null, !dbg !2000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2001
  br i1 %36, label %69, label %37, !dbg !2001

; <label>:37:                                     ; preds = %34
  %38 = zext i32 %35 to i64, !dbg !2002
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2008
  %39 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %40 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %41 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %43, !dbg !2008

; <label>:43:                                     ; preds = %60, %37
  %44 = phi i64 [ %38, %37 ], [ %62, %60 ]
  %45 = phi i8* [ %4, %37 ], [ %61, %60 ]
  %46 = load i64, i64* %39, align 8, !dbg !2009, !tbaa !506
  %47 = icmp eq i64 %46, 0, !dbg !2010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2011
  br i1 %47, label %50, label %48, !dbg !2011

; <label>:48:                                     ; preds = %43
  %49 = icmp ult i64 %46, %44, !dbg !2012
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2013
  br i1 %49, label %51, label %50, !dbg !2013

; <label>:50:                                     ; preds = %48, %43
  br label %51, !dbg !2013

; <label>:51:                                     ; preds = %48, %50
  %52 = phi i64 [ %44, %50 ], [ %46, %48 ], !dbg !2013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2013
  %53 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %40, align 8, !dbg !2015, !tbaa !521
  %54 = icmp eq void (%struct._rio*, i8*, i64)* %53, null, !dbg !2016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2017
  br i1 %54, label %56, label %55, !dbg !2017

; <label>:55:                                     ; preds = %51
  call void %53(%struct._rio* nonnull %0, i8* %45, i64 %52) #9, !dbg !2018
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2018
  br label %56, !dbg !2018

; <label>:56:                                     ; preds = %55, %51
  %57 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %41, align 8, !dbg !2019, !tbaa !590
  %58 = call i64 %57(%struct._rio* nonnull %0, i8* %45, i64 %52) #9, !dbg !2020
  %59 = icmp eq i64 %58, 0, !dbg !2021
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2022
  br i1 %59, label %66, label %60, !dbg !2022

; <label>:60:                                     ; preds = %56
  %61 = getelementptr inbounds i8, i8* %45, i64 %52, !dbg !2023
  %62 = sub i64 %44, %52, !dbg !2024
  %63 = load i64, i64* %42, align 8, !dbg !2025, !tbaa !528
  %64 = add i64 %63, %52, !dbg !2025
  store i64 %64, i64* %42, align 8, !dbg !2025, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2026
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %65 = icmp eq i64 %62, 0, !dbg !2008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2008
  br i1 %65, label %67, label %43, !dbg !2008

; <label>:66:                                     ; preds = %56
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2027
  br label %67, !dbg !2028

; <label>:67:                                     ; preds = %60, %66
  %68 = phi i32 [ -1, %66 ], [ %35, %60 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2029
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2030
  br label %69, !dbg !2031

; <label>:69:                                     ; preds = %67, %34
  %70 = phi i32 [ %35, %34 ], [ %68, %67 ], !dbg !2032
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2033
  %71 = sext i32 %70 to i64, !dbg !2034
  br label %119, !dbg !2035

; <label>:72:                                     ; preds = %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1992
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1994
  %73 = call i32 @ll2string(i8* nonnull %4, i64 32, i64 %1) #9, !dbg !2037
  %74 = icmp slt i32 %73, 32, !dbg !2039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2039
  br i1 %74, label %76, label %75, !dbg !2039

; <label>:75:                                     ; preds = %72
  call void @_serverAssert(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 447) #9, !dbg !2039
  call void @_exit(i32 1) #10, !dbg !2039
  unreachable

; <label>:76:                                     ; preds = %72
  %77 = sext i32 %73 to i64, !dbg !2040
  %78 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %77) #11, !dbg !2042
  %79 = sext i32 %78 to i64, !dbg !2042
  %80 = icmp eq i32 %78, -1, !dbg !2044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2045
  br i1 %80, label %119, label %81, !dbg !2045

; <label>:81:                                     ; preds = %76
  %82 = icmp eq %struct._rio* %0, null, !dbg !2051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2052
  br i1 %82, label %115, label %83, !dbg !2052

; <label>:83:                                     ; preds = %81
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2057
  %84 = icmp eq i32 %73, 0, !dbg !2057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2057
  br i1 %84, label %113, label %85, !dbg !2057

; <label>:85:                                     ; preds = %83
  %86 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %87 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %88 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %89 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %90, !dbg !2057

; <label>:90:                                     ; preds = %107, %85
  %91 = phi i64 [ %77, %85 ], [ %109, %107 ]
  %92 = phi i8* [ %4, %85 ], [ %108, %107 ]
  %93 = load i64, i64* %86, align 8, !dbg !2058, !tbaa !506
  %94 = icmp eq i64 %93, 0, !dbg !2059
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2060
  br i1 %94, label %97, label %95, !dbg !2060

; <label>:95:                                     ; preds = %90
  %96 = icmp ult i64 %93, %91, !dbg !2061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2062
  br i1 %96, label %98, label %97, !dbg !2062

; <label>:97:                                     ; preds = %95, %90
  br label %98, !dbg !2062

; <label>:98:                                     ; preds = %95, %97
  %99 = phi i64 [ %91, %97 ], [ %93, %95 ], !dbg !2062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2062
  %100 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %87, align 8, !dbg !2064, !tbaa !521
  %101 = icmp eq void (%struct._rio*, i8*, i64)* %100, null, !dbg !2065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2066
  br i1 %101, label %103, label %102, !dbg !2066

; <label>:102:                                    ; preds = %98
  call void %100(%struct._rio* nonnull %0, i8* %92, i64 %99) #9, !dbg !2067
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2067
  br label %103, !dbg !2067

; <label>:103:                                    ; preds = %102, %98
  %104 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %88, align 8, !dbg !2068, !tbaa !590
  %105 = call i64 %104(%struct._rio* nonnull %0, i8* %92, i64 %99) #9, !dbg !2069
  %106 = icmp eq i64 %105, 0, !dbg !2070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2071
  br i1 %106, label %114, label %107, !dbg !2071

; <label>:107:                                    ; preds = %103
  %108 = getelementptr inbounds i8, i8* %92, i64 %99, !dbg !2072
  %109 = sub i64 %91, %99, !dbg !2073
  %110 = load i64, i64* %89, align 8, !dbg !2074, !tbaa !528
  %111 = add i64 %110, %99, !dbg !2074
  store i64 %111, i64* %89, align 8, !dbg !2074, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2075
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %112 = icmp eq i64 %109, 0, !dbg !2057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2057
  br i1 %112, label %113, label %90, !dbg !2057

; <label>:113:                                    ; preds = %107, %83
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2078
  br label %115, !dbg !2078

; <label>:114:                                    ; preds = %103
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2079
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2082
  br label %119, !dbg !2082

; <label>:115:                                    ; preds = %81, %113
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2081
  %116 = icmp eq i32 %73, -1, !dbg !2084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2082
  %117 = add nsw i64 %79, %77, !dbg !2085
  %118 = select i1 %116, i64 -1, i64 %117, !dbg !2082
  br label %119, !dbg !2082

; <label>:119:                                    ; preds = %115, %114, %76, %69
  %120 = phi i64 [ %71, %69 ], [ -1, %76 ], [ -1, %114 ], [ %118, %115 ], !dbg !1991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2031
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #4, !dbg !2086
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2086
  ret i64 %120, !dbg !2086
}

; Function Attrs: noredzone
declare dso_local void @_serverAssert(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #5

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveStringObject(%struct._rio*, %struct.redisObject*) local_unnamed_addr #6 !dbg !2087 {
  %3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !2105
  %4 = load i32, i32* %3, align 8, !dbg !2105
  %5 = lshr i32 %4, 4, !dbg !2105
  %6 = and i32 %5, 15, !dbg !2105
  %7 = icmp eq i32 %6, 1, !dbg !2107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2108
  br i1 %7, label %8, label %13, !dbg !2108

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !2109
  %10 = bitcast i8** %9 to i64*, !dbg !2109
  %11 = load i64, i64* %10, align 8, !dbg !2109, !tbaa !2111
  %12 = tail call i64 @rdbSaveLongLongAsStringObject(%struct._rio* %0, i64 %11) #11, !dbg !2113
  br label %48, !dbg !2114

; <label>:13:                                     ; preds = %2
  %14 = icmp eq i32 %6, 0, !dbg !2115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2115
  br i1 %14, label %18, label %15, !dbg !2115

; <label>:15:                                     ; preds = %13
  %16 = icmp eq i32 %6, 8, !dbg !2115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2115
  br i1 %16, label %18, label %17, !dbg !2115

; <label>:17:                                     ; preds = %15
  tail call void @_serverAssertWithInfo(%struct.client* null, %struct.redisObject* nonnull %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 463) #9, !dbg !2115
  tail call void @_exit(i32 1) #10, !dbg !2115
  unreachable

; <label>:18:                                     ; preds = %13, %15
  %19 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !2117
  %20 = load i8*, i8** %19, align 8, !dbg !2117, !tbaa !2111
  %21 = getelementptr inbounds i8, i8* %20, i64 -1, !dbg !2127
  %22 = load i8, i8* %21, align 1, !dbg !2127, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2129
  %23 = trunc i8 %22 to i3, !dbg !2129
  switch i3 %23, label %45 [
    i3 0, label %24
    i3 1, label %27
    i3 2, label %31
    i3 3, label %36
    i3 -4, label %41
  ], !dbg !2129

; <label>:24:                                     ; preds = %18
  %25 = lshr i8 %22, 3, !dbg !2130
  %26 = zext i8 %25 to i64, !dbg !2130
  br label %45, !dbg !2132

; <label>:27:                                     ; preds = %18
  %28 = getelementptr inbounds i8, i8* %20, i64 -3, !dbg !2133
  %29 = load i8, i8* %28, align 1, !dbg !2134, !tbaa !545
  %30 = zext i8 %29 to i64, !dbg !2133
  br label %45, !dbg !2135

; <label>:31:                                     ; preds = %18
  %32 = getelementptr inbounds i8, i8* %20, i64 -5, !dbg !2136
  %33 = bitcast i8* %32 to i16*, !dbg !2137
  %34 = load i16, i16* %33, align 1, !dbg !2137, !tbaa !2138
  %35 = zext i16 %34 to i64, !dbg !2136
  br label %45, !dbg !2140

; <label>:36:                                     ; preds = %18
  %37 = getelementptr inbounds i8, i8* %20, i64 -9, !dbg !2141
  %38 = bitcast i8* %37 to i32*, !dbg !2142
  %39 = load i32, i32* %38, align 1, !dbg !2142, !tbaa !191
  %40 = zext i32 %39 to i64, !dbg !2141
  br label %45, !dbg !2143

; <label>:41:                                     ; preds = %18
  %42 = getelementptr inbounds i8, i8* %20, i64 -17, !dbg !2144
  %43 = bitcast i8* %42 to i64*, !dbg !2145
  %44 = load i64, i64* %43, align 1, !dbg !2145, !tbaa !674
  br label %45, !dbg !2146

; <label>:45:                                     ; preds = %18, %24, %27, %31, %36, %41
  %46 = phi i64 [ %44, %41 ], [ %40, %36 ], [ %35, %31 ], [ %30, %27 ], [ %26, %24 ], [ 0, %18 ], !dbg !2147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2149
  %47 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %20, i64 %46) #11, !dbg !2150
  br label %48, !dbg !2151

; <label>:48:                                     ; preds = %45, %8
  %49 = phi i64 [ %12, %8 ], [ %47, %45 ], !dbg !2148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2153
  ret i64 %49, !dbg !2153
}

; Function Attrs: noredzone
declare dso_local void @_serverAssertWithInfo(%struct.client*, %struct.redisObject*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @rdbGenericLoadStringObject(%struct._rio*, i32, i64*) local_unnamed_addr #6 !dbg !2154 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = and i32 %1, 1, !dbg !2172
  %7 = and i32 %1, 2, !dbg !2174
  %8 = bitcast i32* %5 to i8*, !dbg !2177
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #4, !dbg !2177
  %9 = bitcast i64* %4 to i8*, !dbg !2182
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !dbg !2182
  %10 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* nonnull %5, i64* nonnull %4) #9, !dbg !2184
  %11 = icmp eq i32 %10, -1, !dbg !2185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2186
  %12 = load i64, i64* %4, align 8, !dbg !2187
  %13 = select i1 %11, i64 -1, i64 %12, !dbg !2186
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !dbg !2189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2189
  %14 = load i32, i32* %5, align 4, !dbg !2191, !tbaa !191
  %15 = icmp eq i32 %14, 0, !dbg !2191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2193
  br i1 %15, label %23, label %16, !dbg !2193

; <label>:16:                                     ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2194
  switch i64 %13, label %22 [
    i64 0, label %17
    i64 1, label %17
    i64 2, label %17
    i64 3, label %20
  ], !dbg !2194

; <label>:17:                                     ; preds = %16, %16, %16
  %18 = trunc i64 %13 to i32, !dbg !2196
  %19 = call i8* @rdbLoadIntegerObject(%struct._rio* %0, i32 %18, i32 %1, i64* %2) #11, !dbg !2198
  br label %123, !dbg !2199

; <label>:20:                                     ; preds = %16
  %21 = call i8* @rdbLoadLzfStringObject(%struct._rio* %0, i32 %1, i64* %2) #11, !dbg !2200
  br label %123, !dbg !2201

; <label>:22:                                     ; preds = %16
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 498, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0), i64 %13) #11, !dbg !2202
  unreachable

; <label>:23:                                     ; preds = %3
  %24 = icmp eq i64 %13, -1, !dbg !2203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2205
  br i1 %24, label %123, label %25, !dbg !2205

; <label>:25:                                     ; preds = %23
  %26 = icmp ne i32 %7, 0, !dbg !2206
  %27 = and i32 %1, 6, !dbg !2207
  %28 = icmp eq i32 %27, 0, !dbg !2207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2207
  br i1 %28, label %77, label %29, !dbg !2207

; <label>:29:                                     ; preds = %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2208
  br i1 %26, label %30, label %32, !dbg !2208

; <label>:30:                                     ; preds = %29
  %31 = call i8* @zmalloc(i64 %13) #9, !dbg !2209
  br label %35, !dbg !2208

; <label>:32:                                     ; preds = %29
  %33 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !2210, !tbaa !200
  %34 = call i8* @sdsnewlen(i8* %33, i64 %13) #9, !dbg !2211
  br label %35, !dbg !2208

; <label>:35:                                     ; preds = %32, %30
  %36 = phi i8* [ %31, %30 ], [ %34, %32 ], !dbg !2208
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2208
  %37 = icmp eq i64* %2, null, !dbg !2213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2215
  br i1 %37, label %39, label %38, !dbg !2215

; <label>:38:                                     ; preds = %35
  store i64 %13, i64* %2, align 8, !dbg !2216, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2217
  br label %39, !dbg !2217

; <label>:39:                                     ; preds = %35, %38
  %40 = icmp eq i64 %13, 0, !dbg !2218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2220
  br i1 %40, label %75, label %41, !dbg !2220

; <label>:41:                                     ; preds = %39
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2225
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %43 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %44 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %45 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %46, !dbg !2225

; <label>:46:                                     ; preds = %63, %41
  %47 = phi i64 [ %13, %41 ], [ %65, %63 ]
  %48 = phi i8* [ %36, %41 ], [ %64, %63 ]
  %49 = load i64, i64* %42, align 8, !dbg !2226, !tbaa !506
  %50 = icmp eq i64 %49, 0, !dbg !2227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2228
  br i1 %50, label %53, label %51, !dbg !2228

; <label>:51:                                     ; preds = %46
  %52 = icmp ult i64 %49, %47, !dbg !2229
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2230
  br i1 %52, label %54, label %53, !dbg !2230

; <label>:53:                                     ; preds = %51, %46
  br label %54, !dbg !2230

; <label>:54:                                     ; preds = %51, %53
  %55 = phi i64 [ %47, %53 ], [ %49, %51 ], !dbg !2230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2230
  %56 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %43, align 8, !dbg !2232, !tbaa !515
  %57 = call i64 %56(%struct._rio* nonnull %0, i8* %48, i64 %55) #9, !dbg !2233
  %58 = icmp eq i64 %57, 0, !dbg !2234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2235
  br i1 %58, label %70, label %59, !dbg !2235

; <label>:59:                                     ; preds = %54
  %60 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %44, align 8, !dbg !2236, !tbaa !521
  %61 = icmp eq void (%struct._rio*, i8*, i64)* %60, null, !dbg !2237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2238
  br i1 %61, label %63, label %62, !dbg !2238

; <label>:62:                                     ; preds = %59
  call void %60(%struct._rio* nonnull %0, i8* %48, i64 %55) #9, !dbg !2239
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2239
  br label %63, !dbg !2239

; <label>:63:                                     ; preds = %62, %59
  %64 = getelementptr inbounds i8, i8* %48, i64 %55, !dbg !2240
  %65 = sub i64 %47, %55, !dbg !2241
  %66 = load i64, i64* %45, align 8, !dbg !2242, !tbaa !528
  %67 = add i64 %66, %55, !dbg !2242
  store i64 %67, i64* %45, align 8, !dbg !2242, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2243
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %68 = icmp eq i64 %65, 0, !dbg !2225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2225
  br i1 %68, label %69, label %46, !dbg !2225

; <label>:69:                                     ; preds = %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2245
  br label %73, !dbg !2246

; <label>:70:                                     ; preds = %54
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2247
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2246
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2248
  br i1 %26, label %71, label %72, !dbg !2248

; <label>:71:                                     ; preds = %70
  call void @zfree(i8* %36) #9, !dbg !2250
  br label %73, !dbg !2250

; <label>:72:                                     ; preds = %70
  call void @sdsfree(i8* %36) #9, !dbg !2252
  br label %73

; <label>:73:                                     ; preds = %71, %72, %69
  %74 = phi i8* [ %36, %69 ], [ null, %72 ], [ null, %71 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %75, !dbg !2253

; <label>:75:                                     ; preds = %73, %39
  %76 = phi i8* [ %36, %39 ], [ %74, %73 ], !dbg !2254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2253
  br label %123

; <label>:77:                                     ; preds = %25
  %78 = icmp eq i32 %6, 0, !dbg !2255
  %79 = load i8*, i8** @SDS_NOINIT, align 8, !dbg !2256, !tbaa !200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2255
  br i1 %78, label %82, label %80, !dbg !2255

; <label>:80:                                     ; preds = %77
  %81 = call %struct.redisObject* @createStringObject(i8* %79, i64 %13) #9, !dbg !2257
  br label %84, !dbg !2255

; <label>:82:                                     ; preds = %77
  %83 = call %struct.redisObject* @createRawStringObject(i8* %79, i64 %13) #9, !dbg !2258
  br label %84, !dbg !2255

; <label>:84:                                     ; preds = %82, %80
  %85 = phi %struct.redisObject* [ %81, %80 ], [ %83, %82 ], !dbg !2255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2255
  %86 = icmp eq i64 %13, 0, !dbg !2260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2262
  br i1 %86, label %119, label %87, !dbg !2262

; <label>:87:                                     ; preds = %84
  %88 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %85, i64 0, i32 2, !dbg !2263
  %89 = load i8*, i8** %88, align 8, !dbg !2263, !tbaa !2111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2268
  %90 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %91 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %92 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %93 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %94, !dbg !2268

; <label>:94:                                     ; preds = %111, %87
  %95 = phi i64 [ %13, %87 ], [ %113, %111 ]
  %96 = phi i8* [ %89, %87 ], [ %112, %111 ]
  %97 = load i64, i64* %90, align 8, !dbg !2269, !tbaa !506
  %98 = icmp eq i64 %97, 0, !dbg !2270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2271
  br i1 %98, label %101, label %99, !dbg !2271

; <label>:99:                                     ; preds = %94
  %100 = icmp ult i64 %97, %95, !dbg !2272
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2273
  br i1 %100, label %102, label %101, !dbg !2273

; <label>:101:                                    ; preds = %99, %94
  br label %102, !dbg !2273

; <label>:102:                                    ; preds = %99, %101
  %103 = phi i64 [ %95, %101 ], [ %97, %99 ], !dbg !2273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2273
  %104 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %91, align 8, !dbg !2275, !tbaa !515
  %105 = call i64 %104(%struct._rio* nonnull %0, i8* %96, i64 %103) #9, !dbg !2276
  %106 = icmp eq i64 %105, 0, !dbg !2277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2278
  br i1 %106, label %118, label %107, !dbg !2278

; <label>:107:                                    ; preds = %102
  %108 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %92, align 8, !dbg !2279, !tbaa !521
  %109 = icmp eq void (%struct._rio*, i8*, i64)* %108, null, !dbg !2280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2281
  br i1 %109, label %111, label %110, !dbg !2281

; <label>:110:                                    ; preds = %107
  call void %108(%struct._rio* nonnull %0, i8* %96, i64 %103) #9, !dbg !2282
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2282
  br label %111, !dbg !2282

; <label>:111:                                    ; preds = %110, %107
  %112 = getelementptr inbounds i8, i8* %96, i64 %103, !dbg !2283
  %113 = sub i64 %95, %103, !dbg !2284
  %114 = load i64, i64* %93, align 8, !dbg !2285, !tbaa !528
  %115 = add i64 %114, %103, !dbg !2285
  store i64 %115, i64* %93, align 8, !dbg !2285, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2286
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %116 = icmp eq i64 %113, 0, !dbg !2268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2268
  br i1 %116, label %117, label %94, !dbg !2268

; <label>:117:                                    ; preds = %111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2289
  br label %119, !dbg !2289

; <label>:118:                                    ; preds = %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2290
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2289
  call void @decrRefCount(%struct.redisObject* %85) #9, !dbg !2291
  br label %121, !dbg !2293

; <label>:119:                                    ; preds = %117, %84
  %120 = bitcast %struct.redisObject* %85 to i8*, !dbg !2294
  br label %121, !dbg !2295

; <label>:121:                                    ; preds = %119, %118
  %122 = phi i8* [ null, %118 ], [ %120, %119 ], !dbg !2256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2296
  br label %123

; <label>:123:                                    ; preds = %23, %121, %75, %20, %17
  %124 = phi i8* [ %76, %75 ], [ %122, %121 ], [ %21, %20 ], [ %19, %17 ], [ null, %23 ], !dbg !2297
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #4, !dbg !2298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2298
  ret i8* %124, !dbg !2298
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createRawStringObject(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadStringObject(%struct._rio*) local_unnamed_addr #6 !dbg !2299 {
  %2 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %0, i32 0, i64* null) #11, !dbg !2305
  %3 = bitcast i8* %2 to %struct.redisObject*, !dbg !2305
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2306
  ret %struct.redisObject* %3, !dbg !2306
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadEncodedStringObject(%struct._rio*) local_unnamed_addr #6 !dbg !2307 {
  %2 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %0, i32 1, i64* null) #11, !dbg !2311
  %3 = bitcast i8* %2 to %struct.redisObject*, !dbg !2311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2312
  ret %struct.redisObject* %3, !dbg !2312
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveDoubleValue(%struct._rio*, double) local_unnamed_addr #6 !dbg !2313 {
  %3 = alloca [128 x i8], align 16
  %4 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0, !dbg !2330
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #4, !dbg !2330
  %5 = tail call i32 @__fpclassifyd(double %1) #9, !dbg !2332
  %6 = icmp eq i32 %5, 0, !dbg !2332
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2333
  br i1 %6, label %7, label %8, !dbg !2333

; <label>:7:                                      ; preds = %2
  store i8 -3, i8* %4, align 16, !dbg !2334, !tbaa !545
  br label %21, !dbg !2337

; <label>:8:                                      ; preds = %2
  %9 = tail call i32 @__fpclassifyd(double %1) #9, !dbg !2338
  %10 = icmp ugt i32 %9, 1, !dbg !2338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2339
  br i1 %10, label %14, label %11, !dbg !2339

; <label>:11:                                     ; preds = %8
  %12 = fcmp olt double %1, 0.000000e+00, !dbg !2340
  %13 = select i1 %12, i8 -1, i8 -2, !dbg !2342
  store i8 %13, i8* %4, align 16, !dbg !2343, !tbaa !545
  br label %21, !dbg !2344

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 1, !dbg !2345
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %15, i64 127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), double %1) #9, !dbg !2347
  %17 = call i64 @strlen(i8* nonnull %15) #9, !dbg !2348
  %18 = trunc i64 %17 to i8, !dbg !2348
  store i8 %18, i8* %4, align 16, !dbg !2349, !tbaa !545
  %19 = and i64 %17, 255, !dbg !2350
  %20 = add nuw nsw i64 %19, 1, !dbg !2351
  br label %21

; <label>:21:                                     ; preds = %11, %14, %7
  %22 = phi i64 [ 1, %7 ], [ %20, %14 ], [ 1, %11 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %23 = icmp eq %struct._rio* %0, null, !dbg !2356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2357
  br i1 %23, label %54, label %24, !dbg !2357

; <label>:24:                                     ; preds = %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2362
  %25 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %26 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %27 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %28 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %29, !dbg !2362

; <label>:29:                                     ; preds = %46, %24
  %30 = phi i64 [ %22, %24 ], [ %48, %46 ]
  %31 = phi i8* [ %4, %24 ], [ %47, %46 ]
  %32 = load i64, i64* %25, align 8, !dbg !2363, !tbaa !506
  %33 = icmp eq i64 %32, 0, !dbg !2364
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2365
  br i1 %33, label %36, label %34, !dbg !2365

; <label>:34:                                     ; preds = %29
  %35 = icmp ult i64 %32, %30, !dbg !2366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2367
  br i1 %35, label %37, label %36, !dbg !2367

; <label>:36:                                     ; preds = %34, %29
  br label %37, !dbg !2367

; <label>:37:                                     ; preds = %34, %36
  %38 = phi i64 [ %30, %36 ], [ %32, %34 ], !dbg !2367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2367
  %39 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %26, align 8, !dbg !2369, !tbaa !521
  %40 = icmp eq void (%struct._rio*, i8*, i64)* %39, null, !dbg !2370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2371
  br i1 %40, label %42, label %41, !dbg !2371

; <label>:41:                                     ; preds = %37
  call void %39(%struct._rio* nonnull %0, i8* %31, i64 %38) #9, !dbg !2372
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2372
  br label %42, !dbg !2372

; <label>:42:                                     ; preds = %41, %37
  %43 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %27, align 8, !dbg !2373, !tbaa !590
  %44 = call i64 %43(%struct._rio* nonnull %0, i8* %31, i64 %38) #9, !dbg !2374
  %45 = icmp eq i64 %44, 0, !dbg !2375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2376
  br i1 %45, label %53, label %46, !dbg !2376

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds i8, i8* %31, i64 %38, !dbg !2377
  %48 = sub i64 %30, %38, !dbg !2378
  %49 = load i64, i64* %28, align 8, !dbg !2379, !tbaa !528
  %50 = add i64 %49, %38, !dbg !2379
  store i64 %50, i64* %28, align 8, !dbg !2379, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2380
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %51 = icmp eq i64 %48, 0, !dbg !2362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2362
  br i1 %51, label %52, label %29, !dbg !2362

; <label>:52:                                     ; preds = %46
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2381
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2383
  br label %54, !dbg !2383

; <label>:53:                                     ; preds = %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2384
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2383
  br label %56, !dbg !2385

; <label>:54:                                     ; preds = %52, %21
  %55 = trunc i64 %22 to i32, !dbg !2386
  br label %56, !dbg !2387

; <label>:56:                                     ; preds = %53, %54
  %57 = phi i32 [ -1, %53 ], [ %55, %54 ], !dbg !2388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2390
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #4, !dbg !2391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2392
  ret i32 %57, !dbg !2392
}

; Function Attrs: noredzone
declare dso_local i32 @__fpclassifyd(double) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadDoubleValue(%struct._rio*, double*) local_unnamed_addr #6 !dbg !2393 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !2407
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %5) #4, !dbg !2407
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #4, !dbg !2410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2416
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %10, !dbg !2416

; <label>:10:                                     ; preds = %27, %2
  %11 = phi i64 [ 1, %2 ], [ %29, %27 ]
  %12 = phi i8* [ %4, %2 ], [ %28, %27 ]
  %13 = load i64, i64* %6, align 8, !dbg !2417, !tbaa !506
  %14 = icmp eq i64 %13, 0, !dbg !2418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2419
  br i1 %14, label %17, label %15, !dbg !2419

; <label>:15:                                     ; preds = %10
  %16 = icmp ult i64 %13, %11, !dbg !2420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2421
  br i1 %16, label %18, label %17, !dbg !2421

; <label>:17:                                     ; preds = %15, %10
  br label %18, !dbg !2421

; <label>:18:                                     ; preds = %15, %17
  %19 = phi i64 [ %11, %17 ], [ %13, %15 ], !dbg !2421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2421
  %20 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %7, align 8, !dbg !2423, !tbaa !515
  %21 = call i64 %20(%struct._rio* nonnull %0, i8* %12, i64 %19) #9, !dbg !2424
  %22 = icmp eq i64 %21, 0, !dbg !2425
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2426
  br i1 %22, label %33, label %23, !dbg !2426

; <label>:23:                                     ; preds = %18
  %24 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2427, !tbaa !521
  %25 = icmp eq void (%struct._rio*, i8*, i64)* %24, null, !dbg !2428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2429
  br i1 %25, label %27, label %26, !dbg !2429

; <label>:26:                                     ; preds = %23
  call void %24(%struct._rio* nonnull %0, i8* %12, i64 %19) #9, !dbg !2430
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2430
  br label %27, !dbg !2430

; <label>:27:                                     ; preds = %26, %23
  %28 = getelementptr inbounds i8, i8* %12, i64 %19, !dbg !2431
  %29 = sub i64 %11, %19, !dbg !2432
  %30 = load i64, i64* %9, align 8, !dbg !2433, !tbaa !528
  %31 = add i64 %30, %19, !dbg !2433
  store i64 %31, i64* %9, align 8, !dbg !2433, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2434
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %32 = icmp eq i64 %29, 0, !dbg !2416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2416
  br i1 %32, label %34, label %10, !dbg !2416

; <label>:33:                                     ; preds = %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2435
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2437
  br label %80, !dbg !2438

; <label>:34:                                     ; preds = %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2437
  %35 = load i8, i8* %4, align 1, !dbg !2440, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2441
  switch i8 %35, label %45 [
    i8 -1, label %36
    i8 -2, label %39
    i8 -3, label %42
  ], !dbg !2441

; <label>:36:                                     ; preds = %34
  %37 = load i64, i64* bitcast (double* @R_NegInf to i64*), align 8, !dbg !2442, !tbaa !2444
  %38 = bitcast double* %1 to i64*, !dbg !2445
  store i64 %37, i64* %38, align 8, !dbg !2445, !tbaa !2444
  br label %80, !dbg !2446

; <label>:39:                                     ; preds = %34
  %40 = load i64, i64* bitcast (double* @R_PosInf to i64*), align 8, !dbg !2447, !tbaa !2444
  %41 = bitcast double* %1 to i64*, !dbg !2448
  store i64 %40, i64* %41, align 8, !dbg !2448, !tbaa !2444
  br label %80, !dbg !2449

; <label>:42:                                     ; preds = %34
  %43 = load i64, i64* bitcast (double* @R_Nan to i64*), align 8, !dbg !2450, !tbaa !2444
  %44 = bitcast double* %1 to i64*, !dbg !2451
  store i64 %43, i64* %44, align 8, !dbg !2451, !tbaa !2444
  br label %80, !dbg !2452

; <label>:45:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2457
  %46 = icmp eq i8 %35, 0, !dbg !2457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2457
  br i1 %46, label %76, label %47, !dbg !2457

; <label>:47:                                     ; preds = %45
  %48 = zext i8 %35 to i64, !dbg !2458
  br label %49, !dbg !2460

; <label>:49:                                     ; preds = %47, %66
  %50 = phi i64 [ %68, %66 ], [ %48, %47 ]
  %51 = phi i8* [ %67, %66 ], [ %5, %47 ]
  %52 = load i64, i64* %6, align 8, !dbg !2460, !tbaa !506
  %53 = icmp eq i64 %52, 0, !dbg !2461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2462
  br i1 %53, label %56, label %54, !dbg !2462

; <label>:54:                                     ; preds = %49
  %55 = icmp ult i64 %52, %50, !dbg !2463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2464
  br i1 %55, label %57, label %56, !dbg !2464

; <label>:56:                                     ; preds = %54, %49
  br label %57, !dbg !2464

; <label>:57:                                     ; preds = %54, %56
  %58 = phi i64 [ %50, %56 ], [ %52, %54 ], !dbg !2464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2464
  %59 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %7, align 8, !dbg !2466, !tbaa !515
  %60 = call i64 %59(%struct._rio* nonnull %0, i8* %51, i64 %58) #9, !dbg !2467
  %61 = icmp eq i64 %60, 0, !dbg !2468
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2469
  br i1 %61, label %72, label %62, !dbg !2469

; <label>:62:                                     ; preds = %57
  %63 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2470, !tbaa !521
  %64 = icmp eq void (%struct._rio*, i8*, i64)* %63, null, !dbg !2471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2472
  br i1 %64, label %66, label %65, !dbg !2472

; <label>:65:                                     ; preds = %62
  call void %63(%struct._rio* nonnull %0, i8* %51, i64 %58) #9, !dbg !2473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2473
  br label %66, !dbg !2473

; <label>:66:                                     ; preds = %65, %62
  %67 = getelementptr inbounds i8, i8* %51, i64 %58, !dbg !2474
  %68 = sub i64 %50, %58, !dbg !2475
  %69 = load i64, i64* %9, align 8, !dbg !2476, !tbaa !528
  %70 = add i64 %69, %58, !dbg !2476
  store i64 %70, i64* %9, align 8, !dbg !2476, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2477
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %71 = icmp eq i64 %68, 0, !dbg !2457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2457
  br i1 %71, label %73, label %49, !dbg !2457

; <label>:72:                                     ; preds = %57
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2478
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2479
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2480
  br label %80, !dbg !2481

; <label>:73:                                     ; preds = %66
  %74 = load i8, i8* %4, align 1, !dbg !2482, !tbaa !545
  %75 = zext i8 %74 to i64, !dbg !2483
  br label %76, !dbg !2483

; <label>:76:                                     ; preds = %73, %45
  %77 = phi i64 [ %75, %73 ], [ 0, %45 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2479
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2480
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %77, !dbg !2484
  store i8 0, i8* %78, align 1, !dbg !2485, !tbaa !545
  %79 = call i32 (i8*, i8*, ...) @sscanf(i8* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), double* %1) #9, !dbg !2486
  br label %80, !dbg !2487

; <label>:80:                                     ; preds = %76, %72, %42, %39, %36, %33
  %81 = phi i32 [ -1, %33 ], [ -1, %72 ], [ 0, %76 ], [ 0, %42 ], [ 0, %39 ], [ 0, %36 ], !dbg !2488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2489
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #4, !dbg !2490
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %5) #4, !dbg !2490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2490
  ret i32 %81, !dbg !2490
}

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveBinaryDoubleValue(%struct._rio*, double) local_unnamed_addr #6 !dbg !2491 {
  %3 = alloca double, align 8
  store double %1, double* %3, align 8, !tbaa !2444
  %4 = icmp eq %struct._rio* %0, null, !dbg !2500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2501
  br i1 %4, label %37, label %5, !dbg !2501

; <label>:5:                                      ; preds = %2
  %6 = bitcast double* %3 to i8*, !dbg !2502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2508
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %11, !dbg !2508

; <label>:11:                                     ; preds = %28, %5
  %12 = phi i64 [ 8, %5 ], [ %30, %28 ]
  %13 = phi i8* [ %6, %5 ], [ %29, %28 ]
  %14 = load i64, i64* %7, align 8, !dbg !2509, !tbaa !506
  %15 = icmp eq i64 %14, 0, !dbg !2510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2511
  br i1 %15, label %18, label %16, !dbg !2511

; <label>:16:                                     ; preds = %11
  %17 = icmp ult i64 %14, %12, !dbg !2512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2513
  br i1 %17, label %19, label %18, !dbg !2513

; <label>:18:                                     ; preds = %16, %11
  br label %19, !dbg !2513

; <label>:19:                                     ; preds = %16, %18
  %20 = phi i64 [ %12, %18 ], [ %14, %16 ], !dbg !2513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2513
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2515, !tbaa !521
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !2516
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2517
  br i1 %22, label %24, label %23, !dbg !2517

; <label>:23:                                     ; preds = %19
  call void %21(%struct._rio* nonnull %0, i8* %13, i64 %20) #9, !dbg !2518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2518
  br label %24, !dbg !2518

; <label>:24:                                     ; preds = %23, %19
  %25 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %9, align 8, !dbg !2519, !tbaa !590
  %26 = call i64 %25(%struct._rio* nonnull %0, i8* %13, i64 %20) #9, !dbg !2520
  %27 = icmp eq i64 %26, 0, !dbg !2521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2522
  br i1 %27, label %34, label %28, !dbg !2522

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds i8, i8* %13, i64 %20, !dbg !2523
  %30 = sub i64 %12, %20, !dbg !2524
  %31 = load i64, i64* %10, align 8, !dbg !2525, !tbaa !528
  %32 = add i64 %31, %20, !dbg !2525
  store i64 %32, i64* %10, align 8, !dbg !2525, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2526
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %33 = icmp eq i64 %30, 0, !dbg !2508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2508
  br i1 %33, label %35, label %11, !dbg !2508

; <label>:34:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2527
  br label %35, !dbg !2528

; <label>:35:                                     ; preds = %28, %34
  %36 = phi i32 [ -1, %34 ], [ 8, %28 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2530
  br label %37, !dbg !2531

; <label>:37:                                     ; preds = %35, %2
  %38 = phi i32 [ 8, %2 ], [ %36, %35 ], !dbg !2532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2534
  ret i32 %38, !dbg !2534
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadBinaryDoubleValue(%struct._rio*, double*) local_unnamed_addr #6 !dbg !2535 {
  %3 = bitcast double* %1 to i8*, !dbg !2541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2547
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %8, !dbg !2547

; <label>:8:                                      ; preds = %25, %2
  %9 = phi i64 [ 8, %2 ], [ %27, %25 ]
  %10 = phi i8* [ %3, %2 ], [ %26, %25 ]
  %11 = load i64, i64* %4, align 8, !dbg !2548, !tbaa !506
  %12 = icmp eq i64 %11, 0, !dbg !2549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2550
  br i1 %12, label %15, label %13, !dbg !2550

; <label>:13:                                     ; preds = %8
  %14 = icmp ult i64 %11, %9, !dbg !2551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2552
  br i1 %14, label %16, label %15, !dbg !2552

; <label>:15:                                     ; preds = %13, %8
  br label %16, !dbg !2552

; <label>:16:                                     ; preds = %13, %15
  %17 = phi i64 [ %9, %15 ], [ %11, %13 ], !dbg !2552
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2552
  %18 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %5, align 8, !dbg !2554, !tbaa !515
  %19 = tail call i64 %18(%struct._rio* nonnull %0, i8* %10, i64 %17) #9, !dbg !2555
  %20 = icmp eq i64 %19, 0, !dbg !2556
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2557
  br i1 %20, label %31, label %21, !dbg !2557

; <label>:21:                                     ; preds = %16
  %22 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %6, align 8, !dbg !2558, !tbaa !521
  %23 = icmp eq void (%struct._rio*, i8*, i64)* %22, null, !dbg !2559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2560
  br i1 %23, label %25, label %24, !dbg !2560

; <label>:24:                                     ; preds = %21
  tail call void %22(%struct._rio* nonnull %0, i8* %10, i64 %17) #9, !dbg !2561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2561
  br label %25, !dbg !2561

; <label>:25:                                     ; preds = %24, %21
  %26 = getelementptr inbounds i8, i8* %10, i64 %17, !dbg !2562
  %27 = sub i64 %9, %17, !dbg !2563
  %28 = load i64, i64* %7, align 8, !dbg !2564, !tbaa !528
  %29 = add i64 %28, %17, !dbg !2564
  store i64 %29, i64* %7, align 8, !dbg !2564, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2565
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %30 = icmp eq i64 %27, 0, !dbg !2547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2547
  br i1 %30, label %32, label %8, !dbg !2547

; <label>:31:                                     ; preds = %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2566
  br label %32, !dbg !2567

; <label>:32:                                     ; preds = %25, %31
  %33 = phi i32 [ -1, %31 ], [ 0, %25 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2569
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2571
  ret i32 %33, !dbg !2571
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveBinaryFloatValue(%struct._rio*, float) local_unnamed_addr #6 !dbg !2572 {
  %3 = alloca float, align 4
  store float %1, float* %3, align 4, !tbaa !2581
  %4 = icmp eq %struct._rio* %0, null, !dbg !2586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2587
  br i1 %4, label %37, label %5, !dbg !2587

; <label>:5:                                      ; preds = %2
  %6 = bitcast float* %3 to i8*, !dbg !2588
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2594
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %8 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %11, !dbg !2594

; <label>:11:                                     ; preds = %28, %5
  %12 = phi i64 [ 4, %5 ], [ %30, %28 ]
  %13 = phi i8* [ %6, %5 ], [ %29, %28 ]
  %14 = load i64, i64* %7, align 8, !dbg !2595, !tbaa !506
  %15 = icmp eq i64 %14, 0, !dbg !2596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2597
  br i1 %15, label %18, label %16, !dbg !2597

; <label>:16:                                     ; preds = %11
  %17 = icmp ult i64 %14, %12, !dbg !2598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2599
  br i1 %17, label %19, label %18, !dbg !2599

; <label>:18:                                     ; preds = %16, %11
  br label %19, !dbg !2599

; <label>:19:                                     ; preds = %16, %18
  %20 = phi i64 [ %12, %18 ], [ %14, %16 ], !dbg !2599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2599
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %8, align 8, !dbg !2601, !tbaa !521
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !2602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2603
  br i1 %22, label %24, label %23, !dbg !2603

; <label>:23:                                     ; preds = %19
  call void %21(%struct._rio* nonnull %0, i8* %13, i64 %20) #9, !dbg !2604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2604
  br label %24, !dbg !2604

; <label>:24:                                     ; preds = %23, %19
  %25 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %9, align 8, !dbg !2605, !tbaa !590
  %26 = call i64 %25(%struct._rio* nonnull %0, i8* %13, i64 %20) #9, !dbg !2606
  %27 = icmp eq i64 %26, 0, !dbg !2607
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2608
  br i1 %27, label %34, label %28, !dbg !2608

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds i8, i8* %13, i64 %20, !dbg !2609
  %30 = sub i64 %12, %20, !dbg !2610
  %31 = load i64, i64* %10, align 8, !dbg !2611, !tbaa !528
  %32 = add i64 %31, %20, !dbg !2611
  store i64 %32, i64* %10, align 8, !dbg !2611, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2612
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %33 = icmp eq i64 %30, 0, !dbg !2594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2594
  br i1 %33, label %35, label %11, !dbg !2594

; <label>:34:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2613
  br label %35, !dbg !2614

; <label>:35:                                     ; preds = %28, %34
  %36 = phi i32 [ -1, %34 ], [ 4, %28 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2616
  br label %37, !dbg !2617

; <label>:37:                                     ; preds = %35, %2
  %38 = phi i32 [ 4, %2 ], [ %36, %35 ], !dbg !2618
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2620
  ret i32 %38, !dbg !2620
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadBinaryFloatValue(%struct._rio*, float*) local_unnamed_addr #6 !dbg !2621 {
  %3 = bitcast float* %1 to i8*, !dbg !2630
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2636
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %7 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %8, !dbg !2636

; <label>:8:                                      ; preds = %25, %2
  %9 = phi i64 [ 4, %2 ], [ %27, %25 ]
  %10 = phi i8* [ %3, %2 ], [ %26, %25 ]
  %11 = load i64, i64* %4, align 8, !dbg !2637, !tbaa !506
  %12 = icmp eq i64 %11, 0, !dbg !2638
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2639
  br i1 %12, label %15, label %13, !dbg !2639

; <label>:13:                                     ; preds = %8
  %14 = icmp ult i64 %11, %9, !dbg !2640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2641
  br i1 %14, label %16, label %15, !dbg !2641

; <label>:15:                                     ; preds = %13, %8
  br label %16, !dbg !2641

; <label>:16:                                     ; preds = %13, %15
  %17 = phi i64 [ %9, %15 ], [ %11, %13 ], !dbg !2641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2641
  %18 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %5, align 8, !dbg !2643, !tbaa !515
  %19 = tail call i64 %18(%struct._rio* nonnull %0, i8* %10, i64 %17) #9, !dbg !2644
  %20 = icmp eq i64 %19, 0, !dbg !2645
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2646
  br i1 %20, label %31, label %21, !dbg !2646

; <label>:21:                                     ; preds = %16
  %22 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %6, align 8, !dbg !2647, !tbaa !521
  %23 = icmp eq void (%struct._rio*, i8*, i64)* %22, null, !dbg !2648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2649
  br i1 %23, label %25, label %24, !dbg !2649

; <label>:24:                                     ; preds = %21
  tail call void %22(%struct._rio* nonnull %0, i8* %10, i64 %17) #9, !dbg !2650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2650
  br label %25, !dbg !2650

; <label>:25:                                     ; preds = %24, %21
  %26 = getelementptr inbounds i8, i8* %10, i64 %17, !dbg !2651
  %27 = sub i64 %9, %17, !dbg !2652
  %28 = load i64, i64* %7, align 8, !dbg !2653, !tbaa !528
  %29 = add i64 %28, %17, !dbg !2653
  store i64 %29, i64* %7, align 8, !dbg !2653, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2654
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %30 = icmp eq i64 %27, 0, !dbg !2636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2636
  br i1 %30, label %32, label %8, !dbg !2636

; <label>:31:                                     ; preds = %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2655
  br label %32, !dbg !2656

; <label>:32:                                     ; preds = %25, %31
  %33 = phi i32 [ -1, %31 ], [ 0, %25 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2658
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2660
  ret i32 %33, !dbg !2660
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveObjectType(%struct._rio*, %struct.redisObject* nocapture readonly) local_unnamed_addr #6 !dbg !2661 {
  %3 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !2669
  %4 = load i32, i32* %3, align 8, !dbg !2669
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2670
  %5 = trunc i32 %4 to i4, !dbg !2670
  switch i4 %5, label %33 [
    i4 0, label %34
    i4 1, label %6
    i4 2, label %10
    i4 3, label %17
    i4 4, label %24
    i4 6, label %31
    i4 5, label %32
  ], !dbg !2670

; <label>:6:                                      ; preds = %2
  %7 = and i32 %4, 240, !dbg !2671
  %8 = icmp eq i32 %7, 144, !dbg !2674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2675
  br i1 %8, label %34, label %9, !dbg !2675

; <label>:9:                                      ; preds = %6
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 633, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !2676
  tail call void @_exit(i32 1) #10, !dbg !2676
  unreachable

; <label>:10:                                     ; preds = %2
  %11 = lshr i32 %4, 4, !dbg !2677
  %12 = and i32 %11, 15, !dbg !2677
  %13 = icmp eq i32 %12, 6, !dbg !2679
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2680
  br i1 %13, label %34, label %14, !dbg !2680

; <label>:14:                                     ; preds = %10
  %15 = icmp eq i32 %12, 2, !dbg !2681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2683
  br i1 %15, label %34, label %16, !dbg !2683

; <label>:16:                                     ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 640, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2684
  tail call void @_exit(i32 1) #10, !dbg !2684
  unreachable

; <label>:17:                                     ; preds = %2
  %18 = lshr i32 %4, 4, !dbg !2685
  %19 = and i32 %18, 15, !dbg !2685
  %20 = icmp eq i32 %19, 5, !dbg !2687
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2688
  br i1 %20, label %34, label %21, !dbg !2688

; <label>:21:                                     ; preds = %17
  %22 = icmp eq i32 %19, 7, !dbg !2689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2691
  br i1 %22, label %34, label %23, !dbg !2691

; <label>:23:                                     ; preds = %21
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 647, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2692
  tail call void @_exit(i32 1) #10, !dbg !2692
  unreachable

; <label>:24:                                     ; preds = %2
  %25 = lshr i32 %4, 4, !dbg !2693
  %26 = and i32 %25, 15, !dbg !2693
  %27 = icmp eq i32 %26, 5, !dbg !2695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2696
  br i1 %27, label %34, label %28, !dbg !2696

; <label>:28:                                     ; preds = %24
  %29 = icmp eq i32 %26, 2, !dbg !2697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2699
  br i1 %29, label %34, label %30, !dbg !2699

; <label>:30:                                     ; preds = %28
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 654, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2700
  tail call void @_exit(i32 1) #10, !dbg !2700
  unreachable

; <label>:31:                                     ; preds = %2
  br label %34, !dbg !2701

; <label>:32:                                     ; preds = %2
  br label %34, !dbg !2702

; <label>:33:                                     ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 660, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !2703
  tail call void @_exit(i32 1) #10, !dbg !2703
  unreachable

; <label>:34:                                     ; preds = %28, %24, %21, %17, %14, %10, %6, %2, %32, %31
  %35 = phi i8 [ 7, %32 ], [ 15, %31 ], [ 0, %2 ], [ 14, %6 ], [ 11, %10 ], [ 2, %14 ], [ 12, %17 ], [ 5, %21 ], [ 13, %24 ], [ 4, %28 ]
  %36 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext %35) #11, !dbg !2704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2705
  ret i32 %36, !dbg !2705
}

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadObjectType(%struct._rio*) local_unnamed_addr #6 !dbg !2706 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #4, !dbg !2715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2720
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2720
  %3 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %4 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %6 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %7, !dbg !2720

; <label>:7:                                      ; preds = %24, %1
  %8 = phi i64 [ 1, %1 ], [ %26, %24 ]
  %9 = phi i8* [ %2, %1 ], [ %25, %24 ]
  %10 = load i64, i64* %3, align 8, !dbg !2721, !tbaa !506
  %11 = icmp eq i64 %10, 0, !dbg !2722
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2723
  br i1 %11, label %14, label %12, !dbg !2723

; <label>:12:                                     ; preds = %7
  %13 = icmp ult i64 %10, %8, !dbg !2724
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2725
  br i1 %13, label %15, label %14, !dbg !2725

; <label>:14:                                     ; preds = %12, %7
  br label %15, !dbg !2725

; <label>:15:                                     ; preds = %12, %14
  %16 = phi i64 [ %8, %14 ], [ %10, %12 ], !dbg !2725
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2725
  %17 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %4, align 8, !dbg !2727, !tbaa !515
  %18 = call i64 %17(%struct._rio* nonnull %0, i8* %9, i64 %16) #9, !dbg !2728
  %19 = icmp eq i64 %18, 0, !dbg !2729
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2730
  br i1 %19, label %30, label %20, !dbg !2730

; <label>:20:                                     ; preds = %15
  %21 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %5, align 8, !dbg !2731, !tbaa !521
  %22 = icmp eq void (%struct._rio*, i8*, i64)* %21, null, !dbg !2732
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2733
  br i1 %22, label %24, label %23, !dbg !2733

; <label>:23:                                     ; preds = %20
  call void %21(%struct._rio* nonnull %0, i8* %9, i64 %16) #9, !dbg !2734
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2734
  br label %24, !dbg !2734

; <label>:24:                                     ; preds = %23, %20
  %25 = getelementptr inbounds i8, i8* %9, i64 %16, !dbg !2735
  %26 = sub i64 %8, %16, !dbg !2736
  %27 = load i64, i64* %6, align 8, !dbg !2737, !tbaa !528
  %28 = add i64 %27, %16, !dbg !2737
  store i64 %28, i64* %6, align 8, !dbg !2737, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2738
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %29 = icmp eq i64 %26, 0, !dbg !2720
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2720
  br i1 %29, label %31, label %7, !dbg !2720

; <label>:30:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2739
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2741
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2742
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #4, !dbg !2743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2745
  br label %39, !dbg !2746

; <label>:31:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2741
  %32 = load i8, i8* %2, align 1, !dbg !2748, !tbaa !545
  %33 = zext i8 %32 to i32, !dbg !2748
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2749
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #4, !dbg !2743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2745
  %34 = icmp ult i8 %32, 8, !dbg !2750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2750
  br i1 %34, label %38, label %35, !dbg !2750

; <label>:35:                                     ; preds = %31
  %36 = add nsw i32 %33, -9, !dbg !2750
  %37 = icmp ult i32 %36, 7, !dbg !2750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2750
  br i1 %37, label %38, label %39, !dbg !2750

; <label>:38:                                     ; preds = %35, %31
  br label %39, !dbg !2752

; <label>:39:                                     ; preds = %35, %38, %30
  %40 = phi i32 [ -1, %30 ], [ %33, %38 ], [ -1, %35 ], !dbg !2753
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2755
  ret i32 %40, !dbg !2755
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveStreamPEL(%struct._rio*, %struct.rax*, i32) local_unnamed_addr #6 !dbg !2756 {
  %4 = alloca %struct.raxIterator, align 8
  %5 = tail call i64 @raxSize(%struct.rax* %1) #9, !dbg !2835
  %6 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %5) #11, !dbg !2837
  %7 = icmp eq i32 %6, -1, !dbg !2838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2839
  br i1 %7, label %80, label %8, !dbg !2839

; <label>:8:                                      ; preds = %3
  %9 = sext i32 %6 to i64, !dbg !2837
  %10 = bitcast %struct.raxIterator* %4 to i8*, !dbg !2841
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %10) #4, !dbg !2841
  call void @raxStart(%struct.raxIterator* nonnull %4, %struct.rax* %1) #9, !dbg !2843
  %11 = call i32 @raxSeek(%struct.raxIterator* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !2844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2845
  %12 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !2846
  %13 = icmp eq i32 %12, 0, !dbg !2845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2845
  br i1 %13, label %76, label %14, !dbg !2845

; <label>:14:                                     ; preds = %8
  %15 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 2
  %16 = icmp eq %struct._rio* %0, null
  %17 = icmp eq i32 %2, 0
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %19 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %20 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %21 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  %22 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %4, i64 0, i32 3
  %23 = bitcast i8** %22 to %struct.streamNACK**
  br label %24, !dbg !2845

; <label>:24:                                     ; preds = %14, %72
  %25 = phi i64 [ %9, %14 ], [ %73, %72 ]
  %26 = load i8*, i8** %15, align 8, !dbg !2847, !tbaa !2849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2856
  br i1 %16, label %53, label %27, !dbg !2856

; <label>:27:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2861
  br label %28, !dbg !2861

; <label>:28:                                     ; preds = %45, %27
  %29 = phi i64 [ 16, %27 ], [ %47, %45 ]
  %30 = phi i8* [ %26, %27 ], [ %46, %45 ]
  %31 = load i64, i64* %18, align 8, !dbg !2862, !tbaa !506
  %32 = icmp eq i64 %31, 0, !dbg !2863
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2864
  br i1 %32, label %35, label %33, !dbg !2864

; <label>:33:                                     ; preds = %28
  %34 = icmp ult i64 %31, %29, !dbg !2865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2866
  br i1 %34, label %36, label %35, !dbg !2866

; <label>:35:                                     ; preds = %33, %28
  br label %36, !dbg !2866

; <label>:36:                                     ; preds = %33, %35
  %37 = phi i64 [ %29, %35 ], [ %31, %33 ], !dbg !2866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2866
  %38 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %19, align 8, !dbg !2868, !tbaa !521
  %39 = icmp eq void (%struct._rio*, i8*, i64)* %38, null, !dbg !2869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2870
  br i1 %39, label %41, label %40, !dbg !2870

; <label>:40:                                     ; preds = %36
  call void %38(%struct._rio* nonnull %0, i8* %30, i64 %37) #9, !dbg !2871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2871
  br label %41, !dbg !2871

; <label>:41:                                     ; preds = %40, %36
  %42 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %20, align 8, !dbg !2872, !tbaa !590
  %43 = call i64 %42(%struct._rio* nonnull %0, i8* %30, i64 %37) #9, !dbg !2873
  %44 = icmp eq i64 %43, 0, !dbg !2874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2875
  br i1 %44, label %52, label %45, !dbg !2875

; <label>:45:                                     ; preds = %41
  %46 = getelementptr inbounds i8, i8* %30, i64 %37, !dbg !2876
  %47 = sub i64 %29, %37, !dbg !2877
  %48 = load i64, i64* %21, align 8, !dbg !2878, !tbaa !528
  %49 = add i64 %48, %37, !dbg !2878
  store i64 %49, i64* %21, align 8, !dbg !2878, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2879
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %50 = icmp eq i64 %47, 0, !dbg !2861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2861
  br i1 %50, label %51, label %28, !dbg !2861

; <label>:51:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2882
  br label %53, !dbg !2882

; <label>:52:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2883
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2886
  br label %78, !dbg !2887

; <label>:53:                                     ; preds = %51, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2886
  %54 = add nsw i64 %25, 16, !dbg !2889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2890
  br i1 %17, label %72, label %55, !dbg !2890

; <label>:55:                                     ; preds = %53
  %56 = load %struct.streamNACK*, %struct.streamNACK** %23, align 8, !dbg !2891, !tbaa !2892
  %57 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %56, i64 0, i32 0, !dbg !2894
  %58 = load i64, i64* %57, align 8, !dbg !2894, !tbaa !2896
  %59 = call i32 @rdbSaveMillisecondTime(%struct._rio* %0, i64 %58) #11, !dbg !2898
  %60 = icmp eq i32 %59, -1, !dbg !2899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2900
  br i1 %60, label %66, label %61, !dbg !2900

; <label>:61:                                     ; preds = %55
  %62 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %56, i64 0, i32 1, !dbg !2901
  %63 = load i64, i64* %62, align 8, !dbg !2901, !tbaa !2903
  %64 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %63) #11, !dbg !2904
  %65 = icmp eq i32 %64, -1, !dbg !2905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2906
  br i1 %65, label %66, label %67, !dbg !2906

; <label>:66:                                     ; preds = %61, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2907
  br label %78

; <label>:67:                                     ; preds = %61
  %68 = sext i32 %59 to i64, !dbg !2898
  %69 = add nsw i64 %54, %68, !dbg !2908
  %70 = sext i32 %64 to i64, !dbg !2904
  %71 = add nsw i64 %69, %70, !dbg !2909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2910
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %72

; <label>:72:                                     ; preds = %67, %53
  %73 = phi i64 [ %71, %67 ], [ %54, %53 ], !dbg !2889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2845
  %74 = call i32 @raxNext(%struct.raxIterator* nonnull %4) #9, !dbg !2846
  %75 = icmp eq i32 %74, 0, !dbg !2845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2845
  br i1 %75, label %76, label %24, !dbg !2845, !llvm.loop !2911

; <label>:76:                                     ; preds = %72, %8
  %77 = phi i64 [ %9, %8 ], [ %73, %72 ], !dbg !2913
  call void @raxStop(%struct.raxIterator* nonnull %4) #9, !dbg !2914
  br label %78, !dbg !2915

; <label>:78:                                     ; preds = %66, %76, %52
  %79 = phi i64 [ -1, %52 ], [ %77, %76 ], [ -1, %66 ], !dbg !2916
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %10) #4, !dbg !2917
  br label %80

; <label>:80:                                     ; preds = %3, %78
  %81 = phi i64 [ %79, %78 ], [ -1, %3 ], !dbg !2918
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2917
  ret i64 %81, !dbg !2917
}

; Function Attrs: noredzone
declare dso_local i64 @raxSize(%struct.rax*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @raxStart(%struct.raxIterator*, %struct.rax*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @raxSeek(%struct.raxIterator*, i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @raxNext(%struct.raxIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @raxStop(%struct.raxIterator*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveStreamConsumers(%struct._rio*, %struct.streamCG* nocapture readonly) local_unnamed_addr #6 !dbg !2919 {
  %3 = alloca %struct.raxIterator, align 8
  %4 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %1, i64 0, i32 2, !dbg !2945
  %5 = load %struct.rax*, %struct.rax** %4, align 8, !dbg !2945, !tbaa !2947
  %6 = tail call i64 @raxSize(%struct.rax* %5) #9, !dbg !2950
  %7 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %6) #11, !dbg !2951
  %8 = icmp eq i32 %7, -1, !dbg !2952
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2953
  br i1 %8, label %50, label %9, !dbg !2953

; <label>:9:                                      ; preds = %2
  %10 = sext i32 %7 to i64, !dbg !2951
  %11 = bitcast %struct.raxIterator* %3 to i8*, !dbg !2955
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %11) #4, !dbg !2955
  %12 = load %struct.rax*, %struct.rax** %4, align 8, !dbg !2956, !tbaa !2947
  call void @raxStart(%struct.raxIterator* nonnull %3, %struct.rax* %12) #9, !dbg !2958
  %13 = call i32 @raxSeek(%struct.raxIterator* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !2959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2960
  %14 = call i32 @raxNext(%struct.raxIterator* nonnull %3) #9, !dbg !2961
  %15 = icmp eq i32 %14, 0, !dbg !2960
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2960
  br i1 %15, label %46, label %16, !dbg !2960

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %3, i64 0, i32 3
  %18 = bitcast i8** %17 to %struct.streamConsumer**
  %19 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %3, i64 0, i32 2
  %20 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %3, i64 0, i32 4
  br label %21, !dbg !2960

; <label>:21:                                     ; preds = %16, %39
  %22 = phi i64 [ %10, %16 ], [ %43, %39 ]
  %23 = load %struct.streamConsumer*, %struct.streamConsumer** %18, align 8, !dbg !2962, !tbaa !2892
  %24 = load i8*, i8** %19, align 8, !dbg !2964, !tbaa !2849
  %25 = load i64, i64* %20, align 8, !dbg !2966, !tbaa !2967
  %26 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %24, i64 %25) #11, !dbg !2968
  %27 = icmp eq i64 %26, -1, !dbg !2969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2970
  br i1 %27, label %38, label %28, !dbg !2970

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %23, i64 0, i32 0, !dbg !2971
  %30 = load i64, i64* %29, align 8, !dbg !2971, !tbaa !2973
  %31 = call i32 @rdbSaveMillisecondTime(%struct._rio* %0, i64 %30) #11, !dbg !2975
  %32 = icmp eq i32 %31, -1, !dbg !2976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2977
  br i1 %32, label %38, label %33, !dbg !2977

; <label>:33:                                     ; preds = %28
  %34 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %23, i64 0, i32 2, !dbg !2978
  %35 = load %struct.rax*, %struct.rax** %34, align 8, !dbg !2978, !tbaa !2980
  %36 = call i64 @rdbSaveStreamPEL(%struct._rio* %0, %struct.rax* %35, i32 0) #11, !dbg !2981
  %37 = icmp eq i64 %36, -1, !dbg !2982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2983
  br i1 %37, label %38, label %39, !dbg !2983

; <label>:38:                                     ; preds = %33, %28, %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2984
  br label %48

; <label>:39:                                     ; preds = %33
  %40 = add nsw i64 %26, %22, !dbg !2985
  %41 = sext i32 %31 to i64, !dbg !2975
  %42 = add nsw i64 %40, %41, !dbg !2986
  %43 = add nsw i64 %42, %36, !dbg !2987
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2988
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %44 = call i32 @raxNext(%struct.raxIterator* nonnull %3) #9, !dbg !2961
  %45 = icmp eq i32 %44, 0, !dbg !2960
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2960
  br i1 %45, label %46, label %21, !dbg !2960

; <label>:46:                                     ; preds = %39, %9
  %47 = phi i64 [ %10, %9 ], [ %43, %39 ], !dbg !2989
  call void @raxStop(%struct.raxIterator* nonnull %3) #9, !dbg !2990
  br label %48, !dbg !2991

; <label>:48:                                     ; preds = %38, %46
  %49 = phi i64 [ %47, %46 ], [ -1, %38 ], !dbg !2992
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %11) #4, !dbg !2993
  br label %50

; <label>:50:                                     ; preds = %2, %48
  %51 = phi i64 [ %49, %48 ], [ -1, %2 ], !dbg !2994
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2993
  ret i64 %51, !dbg !2993
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveObject(%struct._rio*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #6 !dbg !2995 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.raxIterator, align 8
  %6 = alloca %struct.RedisModuleIO, align 8
  %7 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 0, !dbg !3228
  %8 = load i32, i32* %7, align 8, !dbg !3228
  %9 = and i32 %8, 15, !dbg !3228
  %10 = icmp eq i32 %9, 0, !dbg !3229
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3230
  br i1 %10, label %11, label %14, !dbg !3230

; <label>:11:                                     ; preds = %3
  %12 = tail call i64 @rdbSaveStringObject(%struct._rio* %0, %struct.redisObject* nonnull %1) #11, !dbg !3231
  %13 = icmp eq i64 %12, -1, !dbg !3234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3236
  br i1 %13, label %508, label %506, !dbg !3235

; <label>:14:                                     ; preds = %3
  %15 = icmp eq i32 %9, 1, !dbg !3237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3238
  br i1 %15, label %16, label %68, !dbg !3238

; <label>:16:                                     ; preds = %14
  %17 = and i32 %8, 240, !dbg !3239
  %18 = icmp eq i32 %17, 144, !dbg !3240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3241
  br i1 %18, label %19, label %67, !dbg !3241

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3242
  %21 = bitcast i8** %20 to %struct.quicklist**, !dbg !3242
  %22 = load %struct.quicklist*, %struct.quicklist** %21, align 8, !dbg !3242, !tbaa !2111
  %23 = getelementptr inbounds %struct.quicklist, %struct.quicklist* %22, i64 0, i32 0, !dbg !3244
  %24 = load %struct.quicklistNode*, %struct.quicklistNode** %23, align 8, !dbg !3244, !tbaa !3245
  %25 = getelementptr inbounds %struct.quicklist, %struct.quicklist* %22, i64 0, i32 3, !dbg !3248
  %26 = load i64, i64* %25, align 8, !dbg !3248, !tbaa !3250
  %27 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %26) #11, !dbg !3251
  %28 = icmp eq i32 %27, -1, !dbg !3252
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3253
  br i1 %28, label %29, label %30, !dbg !3253

; <label>:29:                                     ; preds = %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3254
  br label %64, !dbg !3254

; <label>:30:                                     ; preds = %19
  %31 = sext i32 %27 to i64, !dbg !3251
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3255
  %32 = icmp eq %struct.quicklistNode* %24, null, !dbg !3255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3255
  br i1 %32, label %65, label %33, !dbg !3255

; <label>:33:                                     ; preds = %30
  %34 = bitcast i8** %4 to i8*
  br label %35, !dbg !3255

; <label>:35:                                     ; preds = %33, %58
  %36 = phi i64 [ %31, %33 ], [ %60, %58 ]
  %37 = phi %struct.quicklistNode* [ %24, %33 ], [ %62, %58 ]
  %38 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %37, i64 0, i32 4, !dbg !3256
  %39 = load i32, i32* %38, align 4, !dbg !3256
  %40 = and i32 %39, 196608, !dbg !3256
  %41 = icmp eq i32 %40, 131072, !dbg !3256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3257
  br i1 %41, label %42, label %50, !dbg !3257

; <label>:42:                                     ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4, !dbg !3258
  %43 = call i64 @quicklistGetLzf(%struct.quicklistNode* nonnull %37, i8** nonnull %4) #9, !dbg !3260
  %44 = load i8*, i8** %4, align 8, !dbg !3262, !tbaa !200
  %45 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %37, i64 0, i32 3, !dbg !3264
  %46 = load i32, i32* %45, align 8, !dbg !3264, !tbaa !3265
  %47 = zext i32 %46 to i64, !dbg !3267
  %48 = call i64 @rdbSaveLzfBlob(%struct._rio* %0, i8* %44, i64 %43, i64 %47) #11, !dbg !3268
  %49 = icmp eq i64 %48, -1, !dbg !3269
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4, !dbg !3272
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %49, label %64, label %58, !dbg !3270

; <label>:50:                                     ; preds = %35
  %51 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %37, i64 0, i32 2, !dbg !3273
  %52 = load i8*, i8** %51, align 8, !dbg !3273, !tbaa !3276
  %53 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %37, i64 0, i32 3, !dbg !3277
  %54 = load i32, i32* %53, align 8, !dbg !3277, !tbaa !3265
  %55 = zext i32 %54 to i64, !dbg !3278
  %56 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %52, i64 %55) #11, !dbg !3279
  %57 = icmp eq i64 %56, -1, !dbg !3280
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3281
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %57, label %64, label %58, !dbg !3281

; <label>:58:                                     ; preds = %50, %42
  %59 = phi i64 [ %48, %42 ], [ %56, %50 ]
  %60 = add nsw i64 %59, %36, !dbg !3282
  %61 = getelementptr inbounds %struct.quicklistNode, %struct.quicklistNode* %37, i64 0, i32 1, !dbg !3283
  %62 = load %struct.quicklistNode*, %struct.quicklistNode** %61, align 8, !dbg !3283, !tbaa !3284
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3255
  %63 = icmp eq %struct.quicklistNode* %62, null, !dbg !3255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3255
  br i1 %63, label %65, label %35, !dbg !3255, !llvm.loop !3285

; <label>:64:                                     ; preds = %50, %42, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:65:                                     ; preds = %58, %30
  %66 = phi i64 [ %31, %30 ], [ %60, %58 ], !dbg !3287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3288
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %506

; <label>:67:                                     ; preds = %16
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 783, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !3289
  tail call void @_exit(i32 1) #10, !dbg !3289
  unreachable

; <label>:68:                                     ; preds = %14
  %69 = icmp eq i32 %9, 2, !dbg !3291
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3292
  br i1 %69, label %70, label %143, !dbg !3292

; <label>:70:                                     ; preds = %68
  %71 = lshr i32 %8, 4, !dbg !3293
  %72 = and i32 %71, 15, !dbg !3293
  %73 = icmp eq i32 %72, 2, !dbg !3294
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3295
  br i1 %73, label %74, label %132, !dbg !3295

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3296
  %76 = bitcast i8** %75 to %struct.dict**, !dbg !3296
  %77 = load %struct.dict*, %struct.dict** %76, align 8, !dbg !3296, !tbaa !2111
  %78 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %77) #9, !dbg !3298
  %79 = getelementptr inbounds %struct.dict, %struct.dict* %77, i64 0, i32 2, i64 0, i32 3, !dbg !3300
  %80 = load i64, i64* %79, align 8, !dbg !3300, !tbaa !3302
  %81 = getelementptr inbounds %struct.dict, %struct.dict* %77, i64 0, i32 2, i64 1, i32 3, !dbg !3300
  %82 = load i64, i64* %81, align 8, !dbg !3300, !tbaa !3302
  %83 = add i64 %82, %80, !dbg !3300
  %84 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %83) #11, !dbg !3304
  %85 = icmp eq i32 %84, -1, !dbg !3305
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3306
  br i1 %85, label %86, label %87, !dbg !3306

; <label>:86:                                     ; preds = %74
  tail call void @dictReleaseIterator(%struct.dictIterator* %78) #9, !dbg !3307
  br label %129, !dbg !3309

; <label>:87:                                     ; preds = %74
  %88 = sext i32 %84 to i64, !dbg !3304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3310
  %89 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %78) #9, !dbg !3311
  %90 = icmp eq %struct.dictEntry* %89, null, !dbg !3313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3310
  br i1 %90, label %130, label %91, !dbg !3310

; <label>:91:                                     ; preds = %87, %125
  %92 = phi %struct.dictEntry* [ %127, %125 ], [ %89, %87 ]
  %93 = phi i64 [ %126, %125 ], [ %88, %87 ]
  %94 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %92, i64 0, i32 0, !dbg !3314
  %95 = load i8*, i8** %94, align 8, !dbg !3314, !tbaa !3315
  %96 = getelementptr inbounds i8, i8* %95, i64 -1, !dbg !3321
  %97 = load i8, i8* %96, align 1, !dbg !3321, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3323
  %98 = trunc i8 %97 to i3, !dbg !3323
  switch i3 %98, label %120 [
    i3 0, label %99
    i3 1, label %102
    i3 2, label %106
    i3 3, label %111
    i3 -4, label %116
  ], !dbg !3323

; <label>:99:                                     ; preds = %91
  %100 = lshr i8 %97, 3, !dbg !3324
  %101 = zext i8 %100 to i64, !dbg !3324
  br label %120, !dbg !3325

; <label>:102:                                    ; preds = %91
  %103 = getelementptr inbounds i8, i8* %95, i64 -3, !dbg !3326
  %104 = load i8, i8* %103, align 1, !dbg !3327, !tbaa !545
  %105 = zext i8 %104 to i64, !dbg !3326
  br label %120, !dbg !3328

; <label>:106:                                    ; preds = %91
  %107 = getelementptr inbounds i8, i8* %95, i64 -5, !dbg !3329
  %108 = bitcast i8* %107 to i16*, !dbg !3330
  %109 = load i16, i16* %108, align 1, !dbg !3330, !tbaa !2138
  %110 = zext i16 %109 to i64, !dbg !3329
  br label %120, !dbg !3331

; <label>:111:                                    ; preds = %91
  %112 = getelementptr inbounds i8, i8* %95, i64 -9, !dbg !3332
  %113 = bitcast i8* %112 to i32*, !dbg !3333
  %114 = load i32, i32* %113, align 1, !dbg !3333, !tbaa !191
  %115 = zext i32 %114 to i64, !dbg !3332
  br label %120, !dbg !3334

; <label>:116:                                    ; preds = %91
  %117 = getelementptr inbounds i8, i8* %95, i64 -17, !dbg !3335
  %118 = bitcast i8* %117 to i64*, !dbg !3336
  %119 = load i64, i64* %118, align 1, !dbg !3336, !tbaa !674
  br label %120, !dbg !3337

; <label>:120:                                    ; preds = %91, %99, %102, %106, %111, %116
  %121 = phi i64 [ %119, %116 ], [ %115, %111 ], [ %110, %106 ], [ %105, %102 ], [ %101, %99 ], [ 0, %91 ], !dbg !3338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3339
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3340
  %122 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %95, i64 %121) #11, !dbg !3341
  %123 = icmp eq i64 %122, -1, !dbg !3342
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3343
  br i1 %123, label %124, label %125, !dbg !3343

; <label>:124:                                    ; preds = %120
  tail call void @dictReleaseIterator(%struct.dictIterator* %78) #9, !dbg !3344
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3346
  br label %129

; <label>:125:                                    ; preds = %120
  %126 = add nsw i64 %122, %93, !dbg !3347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3348
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %127 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %78) #9, !dbg !3311
  %128 = icmp eq %struct.dictEntry* %127, null, !dbg !3313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3310
  br i1 %128, label %130, label %91, !dbg !3310

; <label>:129:                                    ; preds = %86, %124
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:130:                                    ; preds = %125, %87
  %131 = phi i64 [ %88, %87 ], [ %126, %125 ], !dbg !3349
  tail call void @dictReleaseIterator(%struct.dictIterator* %78) #9, !dbg !3350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3351
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %506

; <label>:132:                                    ; preds = %70
  %133 = icmp eq i32 %72, 6, !dbg !3352
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3353
  br i1 %133, label %134, label %142, !dbg !3353

; <label>:134:                                    ; preds = %132
  %135 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3354
  %136 = bitcast i8** %135 to %struct.intset**, !dbg !3354
  %137 = load %struct.intset*, %struct.intset** %136, align 8, !dbg !3354, !tbaa !2111
  %138 = tail call i64 @intsetBlobLen(%struct.intset* %137) #9, !dbg !3355
  %139 = load i8*, i8** %135, align 8, !dbg !3357, !tbaa !2111
  %140 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %139, i64 %138) #11, !dbg !3359
  %141 = icmp eq i64 %140, -1, !dbg !3360
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3362
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %141, label %508, label %506

; <label>:142:                                    ; preds = %132
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 815, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !3363
  tail call void @_exit(i32 1) #10, !dbg !3363
  unreachable

; <label>:143:                                    ; preds = %68
  %144 = icmp eq i32 %9, 3, !dbg !3365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3366
  br i1 %144, label %145, label %223, !dbg !3366

; <label>:145:                                    ; preds = %143
  %146 = lshr i32 %8, 4, !dbg !3367
  %147 = and i32 %146, 15, !dbg !3367
  %148 = icmp eq i32 %147, 5, !dbg !3368
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3369
  br i1 %148, label %149, label %156, !dbg !3369

; <label>:149:                                    ; preds = %145
  %150 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3370
  %151 = load i8*, i8** %150, align 8, !dbg !3370, !tbaa !2111
  %152 = tail call i64 @ziplistBlobLen(i8* %151) #9, !dbg !3371
  %153 = load i8*, i8** %150, align 8, !dbg !3373, !tbaa !2111
  %154 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %153, i64 %152) #11, !dbg !3375
  %155 = icmp eq i64 %154, -1, !dbg !3376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3377
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3378
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %155, label %508, label %506

; <label>:156:                                    ; preds = %145
  %157 = icmp eq i32 %147, 7, !dbg !3379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3380
  br i1 %157, label %158, label %222, !dbg !3380

; <label>:158:                                    ; preds = %156
  %159 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3381
  %160 = bitcast i8** %159 to %struct.zset**, !dbg !3381
  %161 = load %struct.zset*, %struct.zset** %160, align 8, !dbg !3381, !tbaa !2111
  %162 = getelementptr inbounds %struct.zset, %struct.zset* %161, i64 0, i32 1, !dbg !3383
  %163 = load %struct.zskiplist*, %struct.zskiplist** %162, align 8, !dbg !3383, !tbaa !3384
  %164 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %163, i64 0, i32 2, !dbg !3387
  %165 = load i64, i64* %164, align 8, !dbg !3387, !tbaa !3389
  %166 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %165) #11, !dbg !3391
  %167 = icmp eq i32 %166, -1, !dbg !3392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3393
  br i1 %167, label %168, label %169, !dbg !3393

; <label>:168:                                    ; preds = %158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3394
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:169:                                    ; preds = %158
  %170 = sext i32 %166 to i64, !dbg !3391
  %171 = getelementptr inbounds %struct.zskiplist, %struct.zskiplist* %163, i64 0, i32 1, !dbg !3395
  %172 = load %struct.zskiplistNode*, %struct.zskiplistNode** %171, align 8, !dbg !3395, !tbaa !3396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3398
  %173 = icmp eq %struct.zskiplistNode* %172, null, !dbg !3399
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3398
  br i1 %173, label %220, label %174, !dbg !3398

; <label>:174:                                    ; preds = %169, %212
  %175 = phi i64 [ %215, %212 ], [ %170, %169 ]
  %176 = phi %struct.zskiplistNode* [ %217, %212 ], [ %172, %169 ]
  %177 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %176, i64 0, i32 0, !dbg !3400
  %178 = load i8*, i8** %177, align 8, !dbg !3400, !tbaa !200
  %179 = getelementptr inbounds i8, i8* %178, i64 -1, !dbg !3405
  %180 = load i8, i8* %179, align 1, !dbg !3405, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3407
  %181 = trunc i8 %180 to i3, !dbg !3407
  switch i3 %181, label %203 [
    i3 0, label %182
    i3 1, label %185
    i3 2, label %189
    i3 3, label %194
    i3 -4, label %199
  ], !dbg !3407

; <label>:182:                                    ; preds = %174
  %183 = lshr i8 %180, 3, !dbg !3408
  %184 = zext i8 %183 to i64, !dbg !3408
  br label %203, !dbg !3409

; <label>:185:                                    ; preds = %174
  %186 = getelementptr inbounds i8, i8* %178, i64 -3, !dbg !3410
  %187 = load i8, i8* %186, align 1, !dbg !3411, !tbaa !545
  %188 = zext i8 %187 to i64, !dbg !3410
  br label %203, !dbg !3412

; <label>:189:                                    ; preds = %174
  %190 = getelementptr inbounds i8, i8* %178, i64 -5, !dbg !3413
  %191 = bitcast i8* %190 to i16*, !dbg !3414
  %192 = load i16, i16* %191, align 1, !dbg !3414, !tbaa !2138
  %193 = zext i16 %192 to i64, !dbg !3413
  br label %203, !dbg !3415

; <label>:194:                                    ; preds = %174
  %195 = getelementptr inbounds i8, i8* %178, i64 -9, !dbg !3416
  %196 = bitcast i8* %195 to i32*, !dbg !3417
  %197 = load i32, i32* %196, align 1, !dbg !3417, !tbaa !191
  %198 = zext i32 %197 to i64, !dbg !3416
  br label %203, !dbg !3418

; <label>:199:                                    ; preds = %174
  %200 = getelementptr inbounds i8, i8* %178, i64 -17, !dbg !3419
  %201 = bitcast i8* %200 to i64*, !dbg !3420
  %202 = load i64, i64* %201, align 1, !dbg !3420, !tbaa !674
  br label %203, !dbg !3421

; <label>:203:                                    ; preds = %174, %182, %185, %189, %194, %199
  %204 = phi i64 [ %202, %199 ], [ %198, %194 ], [ %193, %189 ], [ %188, %185 ], [ %184, %182 ], [ 0, %174 ], !dbg !3422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3424
  %205 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %178, i64 %204) #11, !dbg !3425
  %206 = icmp eq i64 %205, -1, !dbg !3426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3427
  br i1 %206, label %219, label %207, !dbg !3427

; <label>:207:                                    ; preds = %203
  %208 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %176, i64 0, i32 1, !dbg !3428
  %209 = load double, double* %208, align 8, !dbg !3428, !tbaa !2444
  %210 = tail call i32 @rdbSaveBinaryDoubleValue(%struct._rio* %0, double %209) #11, !dbg !3430
  %211 = icmp eq i32 %210, -1, !dbg !3431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3432
  br i1 %211, label %219, label %212, !dbg !3432

; <label>:212:                                    ; preds = %207
  %213 = add nsw i64 %205, %175, !dbg !3433
  %214 = sext i32 %210 to i64, !dbg !3430
  %215 = add nsw i64 %213, %214, !dbg !3434
  %216 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %176, i64 0, i32 2, !dbg !3435
  %217 = load %struct.zskiplistNode*, %struct.zskiplistNode** %216, align 8, !dbg !3435, !tbaa !200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3398
  %218 = icmp eq %struct.zskiplistNode* %217, null, !dbg !3399
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3398
  br i1 %218, label %220, label %174, !dbg !3398, !llvm.loop !3436

; <label>:219:                                    ; preds = %207, %203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3438
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:220:                                    ; preds = %212, %169
  %221 = phi i64 [ %170, %169 ], [ %215, %212 ], !dbg !3439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3440
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %506

; <label>:222:                                    ; preds = %156
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !3441
  tail call void @_exit(i32 1) #10, !dbg !3441
  unreachable

; <label>:223:                                    ; preds = %143
  %224 = icmp eq i32 %9, 4, !dbg !3443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3444
  br i1 %224, label %225, label %332, !dbg !3444

; <label>:225:                                    ; preds = %223
  %226 = lshr i32 %8, 4, !dbg !3445
  %227 = and i32 %226, 15, !dbg !3445
  %228 = icmp eq i32 %227, 5, !dbg !3446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3447
  br i1 %228, label %229, label %236, !dbg !3447

; <label>:229:                                    ; preds = %225
  %230 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3448
  %231 = load i8*, i8** %230, align 8, !dbg !3448, !tbaa !2111
  %232 = tail call i64 @ziplistBlobLen(i8* %231) #9, !dbg !3449
  %233 = load i8*, i8** %230, align 8, !dbg !3451, !tbaa !2111
  %234 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %233, i64 %232) #11, !dbg !3453
  %235 = icmp eq i64 %234, -1, !dbg !3454
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3455
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3456
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %235, label %508, label %506

; <label>:236:                                    ; preds = %225
  %237 = icmp eq i32 %227, 2, !dbg !3457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3458
  br i1 %237, label %238, label %331, !dbg !3458

; <label>:238:                                    ; preds = %236
  %239 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3459
  %240 = bitcast i8** %239 to %struct.dict**, !dbg !3459
  %241 = load %struct.dict*, %struct.dict** %240, align 8, !dbg !3459, !tbaa !2111
  %242 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %241) #9, !dbg !3460
  %243 = load %struct.dict*, %struct.dict** %240, align 8, !dbg !3462, !tbaa !2111
  %244 = getelementptr inbounds %struct.dict, %struct.dict* %243, i64 0, i32 2, i64 0, i32 3, !dbg !3462
  %245 = load i64, i64* %244, align 8, !dbg !3462, !tbaa !3302
  %246 = getelementptr inbounds %struct.dict, %struct.dict* %243, i64 0, i32 2, i64 1, i32 3, !dbg !3462
  %247 = load i64, i64* %246, align 8, !dbg !3462, !tbaa !3302
  %248 = add i64 %247, %245, !dbg !3462
  %249 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %248) #11, !dbg !3464
  %250 = icmp eq i32 %249, -1, !dbg !3465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3466
  br i1 %250, label %251, label %252, !dbg !3466

; <label>:251:                                    ; preds = %238
  tail call void @dictReleaseIterator(%struct.dictIterator* %242) #9, !dbg !3467
  br label %328, !dbg !3469

; <label>:252:                                    ; preds = %238
  %253 = sext i32 %249 to i64, !dbg !3464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3470
  %254 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %242) #9, !dbg !3471
  %255 = icmp eq %struct.dictEntry* %254, null, !dbg !3473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3470
  br i1 %255, label %329, label %256, !dbg !3470

; <label>:256:                                    ; preds = %252, %324
  %257 = phi %struct.dictEntry* [ %326, %324 ], [ %254, %252 ]
  %258 = phi i64 [ %325, %324 ], [ %253, %252 ]
  %259 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %257, i64 0, i32 0, !dbg !3474
  %260 = load i8*, i8** %259, align 8, !dbg !3474, !tbaa !3315
  %261 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %257, i64 0, i32 1, i32 0, !dbg !3476
  %262 = load i8*, i8** %261, align 8, !dbg !3476, !tbaa !545
  %263 = getelementptr inbounds i8, i8* %260, i64 -1, !dbg !3481
  %264 = load i8, i8* %263, align 1, !dbg !3481, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3483
  %265 = trunc i8 %264 to i3, !dbg !3483
  switch i3 %265, label %287 [
    i3 0, label %266
    i3 1, label %269
    i3 2, label %273
    i3 3, label %278
    i3 -4, label %283
  ], !dbg !3483

; <label>:266:                                    ; preds = %256
  %267 = lshr i8 %264, 3, !dbg !3484
  %268 = zext i8 %267 to i64, !dbg !3484
  br label %287, !dbg !3485

; <label>:269:                                    ; preds = %256
  %270 = getelementptr inbounds i8, i8* %260, i64 -3, !dbg !3486
  %271 = load i8, i8* %270, align 1, !dbg !3487, !tbaa !545
  %272 = zext i8 %271 to i64, !dbg !3486
  br label %287, !dbg !3488

; <label>:273:                                    ; preds = %256
  %274 = getelementptr inbounds i8, i8* %260, i64 -5, !dbg !3489
  %275 = bitcast i8* %274 to i16*, !dbg !3490
  %276 = load i16, i16* %275, align 1, !dbg !3490, !tbaa !2138
  %277 = zext i16 %276 to i64, !dbg !3489
  br label %287, !dbg !3491

; <label>:278:                                    ; preds = %256
  %279 = getelementptr inbounds i8, i8* %260, i64 -9, !dbg !3492
  %280 = bitcast i8* %279 to i32*, !dbg !3493
  %281 = load i32, i32* %280, align 1, !dbg !3493, !tbaa !191
  %282 = zext i32 %281 to i64, !dbg !3492
  br label %287, !dbg !3494

; <label>:283:                                    ; preds = %256
  %284 = getelementptr inbounds i8, i8* %260, i64 -17, !dbg !3495
  %285 = bitcast i8* %284 to i64*, !dbg !3496
  %286 = load i64, i64* %285, align 1, !dbg !3496, !tbaa !674
  br label %287, !dbg !3497

; <label>:287:                                    ; preds = %256, %266, %269, %273, %278, %283
  %288 = phi i64 [ %286, %283 ], [ %282, %278 ], [ %277, %273 ], [ %272, %269 ], [ %268, %266 ], [ 0, %256 ], !dbg !3498
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3500
  %289 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %260, i64 %288) #11, !dbg !3501
  %290 = icmp eq i64 %289, -1, !dbg !3502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3503
  br i1 %290, label %291, label %292, !dbg !3503

; <label>:291:                                    ; preds = %287
  tail call void @dictReleaseIterator(%struct.dictIterator* %242) #9, !dbg !3504
  br label %323, !dbg !3506

; <label>:292:                                    ; preds = %287
  %293 = add nsw i64 %289, %258, !dbg !3507
  %294 = getelementptr inbounds i8, i8* %262, i64 -1, !dbg !3511
  %295 = load i8, i8* %294, align 1, !dbg !3511, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3513
  %296 = trunc i8 %295 to i3, !dbg !3513
  switch i3 %296, label %318 [
    i3 0, label %297
    i3 1, label %300
    i3 2, label %304
    i3 3, label %309
    i3 -4, label %314
  ], !dbg !3513

; <label>:297:                                    ; preds = %292
  %298 = lshr i8 %295, 3, !dbg !3514
  %299 = zext i8 %298 to i64, !dbg !3514
  br label %318, !dbg !3515

; <label>:300:                                    ; preds = %292
  %301 = getelementptr inbounds i8, i8* %262, i64 -3, !dbg !3516
  %302 = load i8, i8* %301, align 1, !dbg !3517, !tbaa !545
  %303 = zext i8 %302 to i64, !dbg !3516
  br label %318, !dbg !3518

; <label>:304:                                    ; preds = %292
  %305 = getelementptr inbounds i8, i8* %262, i64 -5, !dbg !3519
  %306 = bitcast i8* %305 to i16*, !dbg !3520
  %307 = load i16, i16* %306, align 1, !dbg !3520, !tbaa !2138
  %308 = zext i16 %307 to i64, !dbg !3519
  br label %318, !dbg !3521

; <label>:309:                                    ; preds = %292
  %310 = getelementptr inbounds i8, i8* %262, i64 -9, !dbg !3522
  %311 = bitcast i8* %310 to i32*, !dbg !3523
  %312 = load i32, i32* %311, align 1, !dbg !3523, !tbaa !191
  %313 = zext i32 %312 to i64, !dbg !3522
  br label %318, !dbg !3524

; <label>:314:                                    ; preds = %292
  %315 = getelementptr inbounds i8, i8* %262, i64 -17, !dbg !3525
  %316 = bitcast i8* %315 to i64*, !dbg !3526
  %317 = load i64, i64* %316, align 1, !dbg !3526, !tbaa !674
  br label %318, !dbg !3527

; <label>:318:                                    ; preds = %292, %297, %300, %304, %309, %314
  %319 = phi i64 [ %317, %314 ], [ %313, %309 ], [ %308, %304 ], [ %303, %300 ], [ %299, %297 ], [ 0, %292 ], !dbg !3528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3530
  %320 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* nonnull %262, i64 %319) #11, !dbg !3531
  %321 = icmp eq i64 %320, -1, !dbg !3532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3533
  br i1 %321, label %322, label %324, !dbg !3533

; <label>:322:                                    ; preds = %318
  tail call void @dictReleaseIterator(%struct.dictIterator* %242) #9, !dbg !3534
  br label %323, !dbg !3536

; <label>:323:                                    ; preds = %291, %322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3537
  br label %328

; <label>:324:                                    ; preds = %318
  %325 = add nsw i64 %293, %320, !dbg !3538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3539
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %326 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %242) #9, !dbg !3471
  %327 = icmp eq %struct.dictEntry* %326, null, !dbg !3473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3470
  br i1 %327, label %329, label %256, !dbg !3470

; <label>:328:                                    ; preds = %251, %323
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:329:                                    ; preds = %324, %252
  %330 = phi i64 [ %253, %252 ], [ %325, %324 ], !dbg !3540
  tail call void @dictReleaseIterator(%struct.dictIterator* %242) #9, !dbg !3541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3542
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %506

; <label>:331:                                    ; preds = %236
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 892, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !3543
  tail call void @_exit(i32 1) #10, !dbg !3543
  unreachable

; <label>:332:                                    ; preds = %223
  %333 = icmp eq i32 %9, 6, !dbg !3545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3546
  br i1 %333, label %334, label %460, !dbg !3546

; <label>:334:                                    ; preds = %332
  %335 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3547
  %336 = bitcast i8** %335 to %struct.stream**, !dbg !3547
  %337 = load %struct.stream*, %struct.stream** %336, align 8, !dbg !3547, !tbaa !2111
  %338 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 0, !dbg !3549
  %339 = load %struct.rax*, %struct.rax** %338, align 8, !dbg !3549, !tbaa !3550
  %340 = tail call i64 @raxSize(%struct.rax* %339) #9, !dbg !3553
  %341 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %340) #11, !dbg !3555
  %342 = icmp eq i32 %341, -1, !dbg !3556
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3557
  br i1 %342, label %343, label %344, !dbg !3557

; <label>:343:                                    ; preds = %334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3558
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:344:                                    ; preds = %334
  %345 = sext i32 %341 to i64, !dbg !3555
  %346 = bitcast %struct.raxIterator* %5 to i8*, !dbg !3559
  call void @llvm.lifetime.start.p0i8(i64 480, i8* nonnull %346) #4, !dbg !3559
  call void @raxStart(%struct.raxIterator* nonnull %5, %struct.rax* %339) #9, !dbg !3561
  %347 = call i32 @raxSeek(%struct.raxIterator* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !3562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3563
  %348 = call i32 @raxNext(%struct.raxIterator* nonnull %5) #9, !dbg !3564
  %349 = icmp eq i32 %348, 0, !dbg !3563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3563
  br i1 %349, label %372, label %350, !dbg !3563

; <label>:350:                                    ; preds = %344
  %351 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 3
  %352 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 2
  %353 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 4
  br label %354, !dbg !3563

; <label>:354:                                    ; preds = %350, %367
  %355 = phi i64 [ %345, %350 ], [ %369, %367 ]
  %356 = load i8*, i8** %351, align 8, !dbg !3565, !tbaa !2892
  %357 = call i32 @lpBytes(i8* %356) #9, !dbg !3567
  %358 = load i8*, i8** %352, align 8, !dbg !3568, !tbaa !2849
  %359 = load i64, i64* %353, align 8, !dbg !3570, !tbaa !2967
  %360 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %358, i64 %359) #11, !dbg !3571
  %361 = icmp eq i64 %360, -1, !dbg !3572
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3573
  br i1 %361, label %366, label %362, !dbg !3573

; <label>:362:                                    ; preds = %354
  %363 = zext i32 %357 to i64, !dbg !3567
  %364 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %356, i64 %363) #11, !dbg !3575
  %365 = icmp eq i64 %364, -1, !dbg !3577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3578
  br i1 %365, label %366, label %367, !dbg !3578

; <label>:366:                                    ; preds = %362, %354
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3579
  br label %456

; <label>:367:                                    ; preds = %362
  %368 = add nsw i64 %360, %355, !dbg !3580
  %369 = add nsw i64 %368, %364, !dbg !3581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3582
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %370 = call i32 @raxNext(%struct.raxIterator* nonnull %5) #9, !dbg !3564
  %371 = icmp eq i32 %370, 0, !dbg !3563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3563
  br i1 %371, label %372, label %354, !dbg !3563

; <label>:372:                                    ; preds = %367, %344
  %373 = phi i64 [ %345, %344 ], [ %369, %367 ], !dbg !3583
  call void @raxStop(%struct.raxIterator* nonnull %5) #9, !dbg !3584
  %374 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 1, !dbg !3585
  %375 = load i64, i64* %374, align 8, !dbg !3585, !tbaa !3587
  %376 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %375) #11, !dbg !3588
  %377 = icmp eq i32 %376, -1, !dbg !3589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3590
  br i1 %377, label %456, label %378, !dbg !3590

; <label>:378:                                    ; preds = %372
  %379 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 2, i32 0, !dbg !3591
  %380 = load i64, i64* %379, align 8, !dbg !3591, !tbaa !3593
  %381 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %380) #11, !dbg !3594
  %382 = icmp eq i32 %381, -1, !dbg !3595
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3596
  br i1 %382, label %456, label %383, !dbg !3596

; <label>:383:                                    ; preds = %378
  %384 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 2, i32 1, !dbg !3597
  %385 = load i64, i64* %384, align 8, !dbg !3597, !tbaa !3599
  %386 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %385) #11, !dbg !3600
  %387 = icmp eq i32 %386, -1, !dbg !3601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3602
  br i1 %387, label %456, label %388, !dbg !3602

; <label>:388:                                    ; preds = %383
  %389 = sext i32 %376 to i64, !dbg !3588
  %390 = add nsw i64 %373, %389, !dbg !3603
  %391 = sext i32 %381 to i64, !dbg !3594
  %392 = add nsw i64 %390, %391, !dbg !3604
  %393 = sext i32 %386 to i64, !dbg !3600
  %394 = add nsw i64 %392, %393, !dbg !3605
  %395 = getelementptr inbounds %struct.stream, %struct.stream* %337, i64 0, i32 3, !dbg !3606
  %396 = load %struct.rax*, %struct.rax** %395, align 8, !dbg !3606, !tbaa !3607
  %397 = icmp eq %struct.rax* %396, null, !dbg !3608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3608
  br i1 %397, label %400, label %398, !dbg !3608

; <label>:398:                                    ; preds = %388
  %399 = call i64 @raxSize(%struct.rax* nonnull %396) #9, !dbg !3609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3608
  br label %400, !dbg !3608

; <label>:400:                                    ; preds = %388, %398
  %401 = phi i64 [ %399, %398 ], [ 0, %388 ], !dbg !3608
  %402 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %401) #11, !dbg !3611
  %403 = icmp eq i32 %402, -1, !dbg !3613
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3614
  br i1 %403, label %457, label %404, !dbg !3614

; <label>:404:                                    ; preds = %400
  %405 = sext i32 %402 to i64, !dbg !3611
  %406 = add nsw i64 %394, %405, !dbg !3615
  %407 = icmp eq i64 %401, 0, !dbg !3616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3617
  br i1 %407, label %458, label %408, !dbg !3617

; <label>:408:                                    ; preds = %404
  %409 = load %struct.rax*, %struct.rax** %395, align 8, !dbg !3618, !tbaa !3607
  call void @raxStart(%struct.raxIterator* nonnull %5, %struct.rax* %409) #9, !dbg !3619
  %410 = call i32 @raxSeek(%struct.raxIterator* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0) #9, !dbg !3620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3621
  %411 = call i32 @raxNext(%struct.raxIterator* nonnull %5) #9, !dbg !3622
  %412 = icmp eq i32 %411, 0, !dbg !3621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3621
  br i1 %412, label %454, label %413, !dbg !3621

; <label>:413:                                    ; preds = %408
  %414 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 3
  %415 = bitcast i8** %414 to %struct.streamCG**
  %416 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 2
  %417 = getelementptr inbounds %struct.raxIterator, %struct.raxIterator* %5, i64 0, i32 4
  br label %418, !dbg !3621

; <label>:418:                                    ; preds = %413, %444
  %419 = phi i64 [ %406, %413 ], [ %451, %444 ]
  %420 = load %struct.streamCG*, %struct.streamCG** %415, align 8, !dbg !3623, !tbaa !2892
  %421 = load i8*, i8** %416, align 8, !dbg !3625, !tbaa !2849
  %422 = load i64, i64* %417, align 8, !dbg !3627, !tbaa !2967
  %423 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %421, i64 %422) #11, !dbg !3628
  %424 = icmp eq i64 %423, -1, !dbg !3629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3630
  br i1 %424, label %443, label %425, !dbg !3630

; <label>:425:                                    ; preds = %418
  %426 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %420, i64 0, i32 0, i32 0, !dbg !3631
  %427 = load i64, i64* %426, align 8, !dbg !3631, !tbaa !3633
  %428 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %427) #11, !dbg !3634
  %429 = icmp eq i32 %428, -1, !dbg !3635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3636
  br i1 %429, label %443, label %430, !dbg !3636

; <label>:430:                                    ; preds = %425
  %431 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %420, i64 0, i32 0, i32 1, !dbg !3637
  %432 = load i64, i64* %431, align 8, !dbg !3637, !tbaa !3639
  %433 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %432) #11, !dbg !3640
  %434 = icmp eq i32 %433, -1, !dbg !3641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3642
  br i1 %434, label %443, label %435, !dbg !3642

; <label>:435:                                    ; preds = %430
  %436 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %420, i64 0, i32 1, !dbg !3643
  %437 = load %struct.rax*, %struct.rax** %436, align 8, !dbg !3643, !tbaa !3645
  %438 = call i64 @rdbSaveStreamPEL(%struct._rio* %0, %struct.rax* %437, i32 1) #11, !dbg !3646
  %439 = icmp eq i64 %438, -1, !dbg !3647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3648
  br i1 %439, label %443, label %440, !dbg !3648

; <label>:440:                                    ; preds = %435
  %441 = call i64 @rdbSaveStreamConsumers(%struct._rio* %0, %struct.streamCG* nonnull %420) #11, !dbg !3649
  %442 = icmp eq i64 %441, -1, !dbg !3651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3652
  br i1 %442, label %443, label %444, !dbg !3652

; <label>:443:                                    ; preds = %440, %435, %430, %425, %418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3653
  br label %457

; <label>:444:                                    ; preds = %440
  %445 = add nsw i64 %423, %419, !dbg !3654
  %446 = sext i32 %428 to i64, !dbg !3634
  %447 = add nsw i64 %445, %446, !dbg !3655
  %448 = sext i32 %433 to i64, !dbg !3640
  %449 = add nsw i64 %447, %448, !dbg !3656
  %450 = add nsw i64 %449, %438, !dbg !3657
  %451 = add nsw i64 %450, %441, !dbg !3658
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3659
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %452 = call i32 @raxNext(%struct.raxIterator* nonnull %5) #9, !dbg !3622
  %453 = icmp eq i32 %452, 0, !dbg !3621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3621
  br i1 %453, label %454, label %418, !dbg !3621

; <label>:454:                                    ; preds = %444, %408
  %455 = phi i64 [ %406, %408 ], [ %451, %444 ], !dbg !3615
  call void @raxStop(%struct.raxIterator* nonnull %5) #9, !dbg !3660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3661
  br label %458, !dbg !3661

; <label>:456:                                    ; preds = %383, %378, %372, %366
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %346) #4, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:457:                                    ; preds = %400, %443
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %346) #4, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:458:                                    ; preds = %454, %404
  %459 = phi i64 [ %455, %454 ], [ %406, %404 ], !dbg !3615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 480, i8* nonnull %346) #4, !dbg !3662
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %506

; <label>:460:                                    ; preds = %332
  %461 = icmp eq i32 %9, 5, !dbg !3663
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3664
  br i1 %461, label %462, label %505, !dbg !3664

; <label>:462:                                    ; preds = %460
  %463 = bitcast %struct.RedisModuleIO* %6 to i8*, !dbg !3665
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %463) #4, !dbg !3665
  %464 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !3666
  %465 = bitcast i8** %464 to %struct.moduleValue**, !dbg !3666
  %466 = load %struct.moduleValue*, %struct.moduleValue** %465, align 8, !dbg !3666, !tbaa !2111
  %467 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %466, i64 0, i32 0, !dbg !3668
  %468 = load %struct.RedisModuleType*, %struct.RedisModuleType** %467, align 8, !dbg !3668, !tbaa !3669
  %469 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %468, i64 0, i32 0, !dbg !3672
  %470 = load i64, i64* %469, align 8, !dbg !3672, !tbaa !3673
  %471 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %470) #11, !dbg !3675
  %472 = icmp eq i32 %471, -1, !dbg !3677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3679
  br i1 %472, label %503, label %473, !dbg !3679

; <label>:473:                                    ; preds = %462
  %474 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 0, !dbg !3680
  %475 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 1, !dbg !3681
  store %struct._rio* %0, %struct._rio** %475, align 8, !dbg !3681, !tbaa !3683
  %476 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 2, !dbg !3681
  store %struct.RedisModuleType* %468, %struct.RedisModuleType** %476, align 8, !dbg !3681, !tbaa !3685
  store i64 0, i64* %474, align 8, !dbg !3681, !tbaa !3686
  %477 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 3, !dbg !3681
  store i32 0, i32* %477, align 8, !dbg !3681, !tbaa !3687
  %478 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 4, !dbg !3681
  store i32 0, i32* %478, align 4, !dbg !3681, !tbaa !3688
  %479 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 6, !dbg !3681
  store %struct.redisObject* %2, %struct.redisObject** %479, align 8, !dbg !3681, !tbaa !3689
  %480 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %6, i64 0, i32 5, !dbg !3681
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %480, align 8, !dbg !3681, !tbaa !3690
  %481 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %468, i64 0, i32 3, !dbg !3691
  %482 = load void (%struct.RedisModuleIO*, i8*)*, void (%struct.RedisModuleIO*, i8*)** %481, align 8, !dbg !3691, !tbaa !3692
  %483 = getelementptr inbounds %struct.moduleValue, %struct.moduleValue* %466, i64 0, i32 1, !dbg !3693
  %484 = load i8*, i8** %483, align 8, !dbg !3693, !tbaa !3694
  call void %482(%struct.RedisModuleIO* nonnull %6, i8* %484) #9, !dbg !3696
  %485 = call i32 @rdbSaveLen(%struct._rio* %0, i64 0) #11, !dbg !3697
  %486 = icmp eq i32 %485, -1, !dbg !3698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3700
  br i1 %486, label %487, label %488, !dbg !3700

; <label>:487:                                    ; preds = %473
  store i32 1, i32* %477, align 8, !dbg !3701, !tbaa !3687
  br label %492, !dbg !3702

; <label>:488:                                    ; preds = %473
  %489 = sext i32 %485 to i64, !dbg !3703
  %490 = load i64, i64* %474, align 8, !dbg !3704, !tbaa !3686
  %491 = add i64 %490, %489, !dbg !3704
  store i64 %491, i64* %474, align 8, !dbg !3704, !tbaa !3686
  br label %492

; <label>:492:                                    ; preds = %488, %487
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %493 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %480, align 8, !dbg !3705, !tbaa !3690
  %494 = icmp eq %struct.RedisModuleCtx* %493, null, !dbg !3707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3708
  br i1 %494, label %498, label %495, !dbg !3708

; <label>:495:                                    ; preds = %492
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %493) #9, !dbg !3709
  %496 = bitcast %struct.RedisModuleCtx** %480 to i8**, !dbg !3711
  %497 = load i8*, i8** %496, align 8, !dbg !3711, !tbaa !3690
  call void @zfree(i8* %497) #9, !dbg !3712
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3713
  br label %498, !dbg !3713

; <label>:498:                                    ; preds = %492, %495
  %499 = load i32, i32* %477, align 8, !dbg !3714, !tbaa !3687
  %500 = icmp eq i32 %499, 0, !dbg !3715
  %501 = load i64, i64* %474, align 8, !dbg !3716
  %502 = select i1 %500, i64 %501, i64 -1, !dbg !3715
  br label %503, !dbg !3717

; <label>:503:                                    ; preds = %462, %498
  %504 = phi i64 [ %502, %498 ], [ -1, %462 ], !dbg !3718
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3719
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %463) #4, !dbg !3720
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %508

; <label>:505:                                    ; preds = %460
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 991, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !3721
  tail call void @_exit(i32 1) #10, !dbg !3721
  unreachable

; <label>:506:                                    ; preds = %134, %149, %229, %458, %329, %220, %130, %65, %11
  %507 = phi i64 [ %66, %65 ], [ %131, %130 ], [ %140, %134 ], [ %154, %149 ], [ %221, %220 ], [ %234, %229 ], [ %330, %329 ], [ %459, %458 ], [ %12, %11 ], !dbg !3723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3724
  br label %508, !dbg !3724

; <label>:508:                                    ; preds = %134, %149, %229, %457, %456, %343, %328, %219, %168, %129, %64, %11, %506, %503
  %509 = phi i64 [ %507, %506 ], [ -1, %134 ], [ -1, %149 ], [ -1, %229 ], [ %504, %503 ], [ -1, %11 ], [ -1, %64 ], [ -1, %129 ], [ -1, %168 ], [ -1, %219 ], [ -1, %328 ], [ -1, %343 ], [ -1, %456 ], [ -1, %457 ], !dbg !3719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3725
  ret i64 %509, !dbg !3725
}

; Function Attrs: noredzone
declare dso_local i64 @quicklistGetLzf(%struct.quicklistNode*, i8**) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @intsetBlobLen(%struct.intset*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @ziplistBlobLen(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @lpBytes(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @moduleFreeContext(%struct.RedisModuleCtx*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSavedObjectLen(%struct.redisObject*) local_unnamed_addr #6 !dbg !3726 {
  %2 = tail call i64 @rdbSaveObject(%struct._rio* null, %struct.redisObject* %0, %struct.redisObject* null) #11, !dbg !3733
  %3 = icmp eq i64 %2, -1, !dbg !3735
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3735
  br i1 %3, label %4, label %5, !dbg !3735

; <label>:4:                                      ; preds = %1
  tail call void @_serverAssertWithInfo(%struct.client* null, %struct.redisObject* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 1002) #9, !dbg !3735
  tail call void @_exit(i32 1) #10, !dbg !3735
  unreachable

; <label>:5:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3736
  ret i64 %2, !dbg !3736
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveKeyValuePair(%struct._rio*, %struct.redisObject*, %struct.redisObject*, i64) local_unnamed_addr #6 !dbg !3737 {
  %5 = alloca [1 x i8], align 1
  %6 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 228), align 8, !dbg !3758, !tbaa !3759
  %7 = and i32 %6, 1, !dbg !3760
  %8 = and i32 %6, 2, !dbg !3762
  %9 = icmp eq i64 %3, -1, !dbg !3764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3766
  br i1 %9, label %18, label %10, !dbg !3766

; <label>:10:                                     ; preds = %4
  %11 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -4) #11, !dbg !3767
  %12 = icmp eq i32 %11, -1, !dbg !3770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3771
  br i1 %12, label %13, label %14, !dbg !3771

; <label>:13:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3772
  br label %83, !dbg !3772

; <label>:14:                                     ; preds = %10
  %15 = tail call i32 @rdbSaveMillisecondTime(%struct._rio* %0, i64 %3) #11, !dbg !3773
  %16 = icmp eq i32 %15, -1, !dbg !3775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3776
  br i1 %16, label %17, label %18, !dbg !3776

; <label>:17:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3777
  br label %83, !dbg !3777

; <label>:18:                                     ; preds = %4, %14
  %19 = icmp eq i32 %7, 0, !dbg !3778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3779
  br i1 %19, label %29, label %20, !dbg !3779

; <label>:20:                                     ; preds = %18
  %21 = tail call i64 @estimateObjectIdleTime(%struct.redisObject* %2) #9, !dbg !3780
  %22 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -8) #11, !dbg !3782
  %23 = icmp eq i32 %22, -1, !dbg !3784
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3785
  br i1 %23, label %24, label %25, !dbg !3785

; <label>:24:                                     ; preds = %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3786
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %83

; <label>:25:                                     ; preds = %20
  %26 = udiv i64 %21, 1000, !dbg !3787
  %27 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %26) #11, !dbg !3788
  %28 = icmp eq i32 %27, -1, !dbg !3790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3792
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %28, label %83, label %29

; <label>:29:                                     ; preds = %25, %18
  %30 = icmp eq i32 %8, 0, !dbg !3793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3794
  br i1 %30, label %71, label %31, !dbg !3794

; <label>:31:                                     ; preds = %29
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i64 0, !dbg !3795
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #4, !dbg !3795
  %33 = tail call i64 @LFUDecrAndReturn(%struct.redisObject* %2) #9, !dbg !3797
  %34 = trunc i64 %33 to i8, !dbg !3797
  store i8 %34, i8* %32, align 1, !dbg !3798, !tbaa !545
  %35 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -7) #11, !dbg !3799
  %36 = icmp eq i32 %35, -1, !dbg !3801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3802
  br i1 %36, label %37, label %38, !dbg !3802

; <label>:37:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3803
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #4, !dbg !3804
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %83

; <label>:38:                                     ; preds = %31
  %39 = icmp eq %struct._rio* %0, null, !dbg !3810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3811
  br i1 %39, label %69, label %40, !dbg !3811

; <label>:40:                                     ; preds = %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3816
  %41 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %42 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %43 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %44 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %45, !dbg !3816

; <label>:45:                                     ; preds = %62, %40
  %46 = phi i64 [ 1, %40 ], [ %64, %62 ]
  %47 = phi i8* [ %32, %40 ], [ %63, %62 ]
  %48 = load i64, i64* %41, align 8, !dbg !3817, !tbaa !506
  %49 = icmp eq i64 %48, 0, !dbg !3818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3819
  br i1 %49, label %52, label %50, !dbg !3819

; <label>:50:                                     ; preds = %45
  %51 = icmp ult i64 %48, %46, !dbg !3820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3821
  br i1 %51, label %53, label %52, !dbg !3821

; <label>:52:                                     ; preds = %50, %45
  br label %53, !dbg !3821

; <label>:53:                                     ; preds = %50, %52
  %54 = phi i64 [ %46, %52 ], [ %48, %50 ], !dbg !3821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3821
  %55 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %42, align 8, !dbg !3823, !tbaa !521
  %56 = icmp eq void (%struct._rio*, i8*, i64)* %55, null, !dbg !3824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3825
  br i1 %56, label %58, label %57, !dbg !3825

; <label>:57:                                     ; preds = %53
  call void %55(%struct._rio* nonnull %0, i8* %47, i64 %54) #9, !dbg !3826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3826
  br label %58, !dbg !3826

; <label>:58:                                     ; preds = %57, %53
  %59 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %43, align 8, !dbg !3827, !tbaa !590
  %60 = call i64 %59(%struct._rio* nonnull %0, i8* %47, i64 %54) #9, !dbg !3828
  %61 = icmp eq i64 %60, 0, !dbg !3829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3830
  br i1 %61, label %70, label %62, !dbg !3830

; <label>:62:                                     ; preds = %58
  %63 = getelementptr inbounds i8, i8* %47, i64 %54, !dbg !3831
  %64 = sub i64 %46, %54, !dbg !3832
  %65 = load i64, i64* %44, align 8, !dbg !3833, !tbaa !528
  %66 = add i64 %65, %54, !dbg !3833
  store i64 %66, i64* %44, align 8, !dbg !3833, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3834
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %67 = icmp eq i64 %64, 0, !dbg !3816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3816
  br i1 %67, label %68, label %45, !dbg !3816

; <label>:68:                                     ; preds = %62
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3835
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3837
  br label %69, !dbg !3837

; <label>:69:                                     ; preds = %68, %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3840
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3841
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #4, !dbg !3804
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %71

; <label>:70:                                     ; preds = %58
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3842
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3840
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3841
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #4, !dbg !3804
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %83

; <label>:71:                                     ; preds = %69, %29
  %72 = call i32 @rdbSaveObjectType(%struct._rio* %0, %struct.redisObject* %2) #11, !dbg !3844
  %73 = icmp eq i32 %72, -1, !dbg !3846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3847
  br i1 %73, label %74, label %75, !dbg !3847

; <label>:74:                                     ; preds = %71
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3848
  br label %83, !dbg !3848

; <label>:75:                                     ; preds = %71
  %76 = call i64 @rdbSaveStringObject(%struct._rio* %0, %struct.redisObject* %1) #11, !dbg !3849
  %77 = icmp eq i64 %76, -1, !dbg !3851
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3852
  br i1 %77, label %78, label %79, !dbg !3852

; <label>:78:                                     ; preds = %75
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3853
  br label %83, !dbg !3853

; <label>:79:                                     ; preds = %75
  %80 = call i64 @rdbSaveObject(%struct._rio* %0, %struct.redisObject* %2, %struct.redisObject* %1) #11, !dbg !3854
  %81 = icmp eq i64 %80, -1, !dbg !3856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3858
  %82 = select i1 %81, i32 -1, i32 1, !dbg !3859
  br label %83, !dbg !3859

; <label>:83:                                     ; preds = %25, %70, %79, %37, %24, %78, %74, %17, %13
  %84 = phi i32 [ -1, %13 ], [ -1, %17 ], [ -1, %74 ], [ -1, %78 ], [ -1, %70 ], [ -1, %25 ], [ -1, %24 ], [ -1, %37 ], [ %82, %79 ], !dbg !3860
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3861
  ret i32 %84, !dbg !3861
}

; Function Attrs: noredzone
declare dso_local i64 @estimateObjectIdleTime(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @LFUDecrAndReturn(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveAuxField(%struct._rio*, i8*, i64, i8*, i64) local_unnamed_addr #6 !dbg !3862 {
  %6 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -6) #11, !dbg !3879
  %7 = sext i32 %6 to i64, !dbg !3879
  %8 = icmp eq i32 %6, -1, !dbg !3882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3883
  br i1 %8, label %18, label %9, !dbg !3883

; <label>:9:                                      ; preds = %5
  %10 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %1, i64 %2) #11, !dbg !3884
  %11 = icmp eq i64 %10, -1, !dbg !3886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3887
  br i1 %11, label %18, label %12, !dbg !3887

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %3, i64 %4) #11, !dbg !3888
  %14 = icmp eq i64 %13, -1, !dbg !3890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3891
  br i1 %14, label %18, label %15, !dbg !3891

; <label>:15:                                     ; preds = %12
  %16 = add nsw i64 %10, %7, !dbg !3892
  %17 = add nsw i64 %16, %13, !dbg !3893
  br label %18, !dbg !3894

; <label>:18:                                     ; preds = %12, %9, %5, %15
  %19 = phi i64 [ %17, %15 ], [ -1, %5 ], [ -1, %9 ], [ -1, %12 ], !dbg !3895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3896
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3897
  ret i64 %19, !dbg !3897
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveAuxFieldStrStr(%struct._rio*, i8*, i8*) local_unnamed_addr #6 !dbg !3898 {
  %4 = tail call i64 @strlen(i8* %1) #9, !dbg !3908
  %5 = tail call i64 @strlen(i8* %2) #9, !dbg !3909
  %6 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -6) #9, !dbg !3917
  %7 = sext i32 %6 to i64, !dbg !3917
  %8 = icmp eq i32 %6, -1, !dbg !3919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3920
  br i1 %8, label %18, label %9, !dbg !3920

; <label>:9:                                      ; preds = %3
  %10 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %1, i64 %4) #9, !dbg !3921
  %11 = icmp eq i64 %10, -1, !dbg !3922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3923
  br i1 %11, label %18, label %12, !dbg !3923

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 @rdbSaveRawString(%struct._rio* %0, i8* %2, i64 %5) #9, !dbg !3924
  %14 = icmp eq i64 %13, -1, !dbg !3925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3926
  br i1 %14, label %18, label %15, !dbg !3926

; <label>:15:                                     ; preds = %12
  %16 = add nsw i64 %10, %7, !dbg !3927
  %17 = add nsw i64 %16, %13, !dbg !3928
  br label %18, !dbg !3929

; <label>:18:                                     ; preds = %12, %9, %3, %15
  %19 = phi i64 [ %17, %15 ], [ -1, %3 ], [ -1, %9 ], [ -1, %12 ], !dbg !3930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3933
  ret i64 %19, !dbg !3933
}

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveAuxFieldStrInt(%struct._rio*, i8*, i64) local_unnamed_addr #6 !dbg !3934 {
  %4 = alloca [21 x i8], align 16
  %5 = getelementptr inbounds [21 x i8], [21 x i8]* %4, i64 0, i64 0, !dbg !3946
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %5) #4, !dbg !3946
  %6 = call i32 @ll2string(i8* nonnull %5, i64 21, i64 %2) #9, !dbg !3948
  %7 = call i64 @strlen(i8* %1) #9, !dbg !3950
  %8 = sext i32 %6 to i64, !dbg !3951
  %9 = call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -6) #9, !dbg !3959
  %10 = sext i32 %9 to i64, !dbg !3959
  %11 = icmp eq i32 %9, -1, !dbg !3961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3962
  br i1 %11, label %21, label %12, !dbg !3962

; <label>:12:                                     ; preds = %3
  %13 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %1, i64 %7) #9, !dbg !3963
  %14 = icmp eq i64 %13, -1, !dbg !3964
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3965
  br i1 %14, label %21, label %15, !dbg !3965

; <label>:15:                                     ; preds = %12
  %16 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* nonnull %5, i64 %8) #9, !dbg !3966
  %17 = icmp eq i64 %16, -1, !dbg !3967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3968
  br i1 %17, label %21, label %18, !dbg !3968

; <label>:18:                                     ; preds = %15
  %19 = add nsw i64 %13, %10, !dbg !3969
  %20 = add nsw i64 %19, %16, !dbg !3970
  br label %21, !dbg !3971

; <label>:21:                                     ; preds = %15, %12, %3, %18
  %22 = phi i64 [ %20, %18 ], [ -1, %3 ], [ -1, %12 ], [ -1, %15 ], !dbg !3972
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3973
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3974
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %5) #4, !dbg !3975
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3976
  ret i64 %22, !dbg !3976
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveInfoAuxFields(%struct._rio*, i32, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !3977 {
  %4 = and i32 %1, 1, !dbg !4001
  %5 = tail call i64 @rdbSaveAuxFieldStrStr(%struct._rio* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !4003
  %6 = icmp eq i64 %5, -1, !dbg !4005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4006
  br i1 %6, label %7, label %8, !dbg !4006

; <label>:7:                                      ; preds = %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4007
  br label %45, !dbg !4007

; <label>:8:                                      ; preds = %3
  %9 = tail call i64 @rdbSaveAuxFieldStrInt(%struct._rio* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 64) #11, !dbg !4008
  %10 = icmp eq i64 %9, -1, !dbg !4010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4011
  br i1 %10, label %11, label %12, !dbg !4011

; <label>:11:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4012
  br label %45, !dbg !4012

; <label>:12:                                     ; preds = %8
  %13 = tail call i64 @time(i64* null) #9, !dbg !4013
  %14 = tail call i64 @rdbSaveAuxFieldStrInt(%struct._rio* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0), i64 %13) #11, !dbg !4015
  %15 = icmp eq i64 %14, -1, !dbg !4016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4017
  br i1 %15, label %16, label %17, !dbg !4017

; <label>:16:                                     ; preds = %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4018
  br label %45, !dbg !4018

; <label>:17:                                     ; preds = %12
  %18 = tail call i64 @zmalloc_used_memory() #9, !dbg !4019
  %19 = tail call i64 @rdbSaveAuxFieldStrInt(%struct._rio* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i64 %18) #11, !dbg !4021
  %20 = icmp eq i64 %19, -1, !dbg !4022
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4023
  br i1 %20, label %21, label %22, !dbg !4023

; <label>:21:                                     ; preds = %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4024
  br label %45, !dbg !4024

; <label>:22:                                     ; preds = %17
  %23 = icmp eq %struct.rdbSaveInfo* %2, null, !dbg !4025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4027
  br i1 %23, label %40, label %24, !dbg !4027

; <label>:24:                                     ; preds = %22
  %25 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %2, i64 0, i32 0, !dbg !4028
  %26 = load i32, i32* %25, align 8, !dbg !4028, !tbaa !4031
  %27 = sext i32 %26 to i64, !dbg !4033
  %28 = tail call i64 @rdbSaveAuxFieldStrInt(%struct._rio* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i64 %27) #11, !dbg !4034
  %29 = icmp eq i64 %28, -1, !dbg !4035
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4036
  br i1 %29, label %30, label %31, !dbg !4036

; <label>:30:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4037
  br label %45, !dbg !4037

; <label>:31:                                     ; preds = %24
  %32 = tail call i64 @rdbSaveAuxFieldStrStr(%struct._rio* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 177, i64 0)) #11, !dbg !4038
  %33 = icmp eq i64 %32, -1, !dbg !4040
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4041
  br i1 %33, label %34, label %35, !dbg !4041

; <label>:34:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4042
  br label %45, !dbg !4042

; <label>:35:                                     ; preds = %31
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !4043, !tbaa !4045
  %37 = tail call i64 @rdbSaveAuxFieldStrInt(%struct._rio* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i64 %36) #11, !dbg !4046
  %38 = icmp eq i64 %37, -1, !dbg !4047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4048
  br i1 %38, label %39, label %40, !dbg !4048

; <label>:39:                                     ; preds = %35
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4049
  br label %45, !dbg !4049

; <label>:40:                                     ; preds = %22, %35
  %41 = zext i32 %4 to i64, !dbg !4050
  %42 = tail call i64 @rdbSaveAuxFieldStrInt(%struct._rio* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i64 %41) #11, !dbg !4052
  %43 = icmp eq i64 %42, -1, !dbg !4053
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4055
  %44 = select i1 %43, i32 -1, i32 1, !dbg !4056
  br label %45, !dbg !4056

; <label>:45:                                     ; preds = %40, %39, %34, %30, %21, %16, %11, %7
  %46 = phi i32 [ -1, %7 ], [ -1, %11 ], [ -1, %16 ], [ -1, %21 ], [ -1, %30 ], [ -1, %34 ], [ -1, %39 ], [ %44, %40 ], !dbg !4055
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4057
  ret i32 %46, !dbg !4057
}

; Function Attrs: noredzone
declare dso_local i64 @time(i64*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_used_memory() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i64 @rdbSaveSingleModuleAux(%struct._rio*, i32, %struct.RedisModuleType*) local_unnamed_addr #6 !dbg !4058 {
  %4 = alloca %struct.RedisModuleIO, align 8
  %5 = bitcast %struct.RedisModuleIO* %4 to i8*, !dbg !4070
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #4, !dbg !4070
  %6 = tail call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -9) #11, !dbg !4071
  %7 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %2, i64 0, i32 0, !dbg !4073
  %8 = load i64, i64* %7, align 8, !dbg !4073, !tbaa !3673
  %9 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %8) #11, !dbg !4074
  %10 = icmp eq i32 %9, -1, !dbg !4075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4077
  br i1 %10, label %46, label %11, !dbg !4077

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 0, !dbg !4078
  %13 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 2) #11, !dbg !4079
  %14 = icmp eq i32 %13, -1, !dbg !4080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4082
  br i1 %14, label %46, label %15, !dbg !4082

; <label>:15:                                     ; preds = %11
  %16 = sext i32 %1 to i64, !dbg !4083
  %17 = tail call i32 @rdbSaveLen(%struct._rio* %0, i64 %16) #11, !dbg !4084
  %18 = icmp eq i32 %17, -1, !dbg !4085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4087
  br i1 %18, label %46, label %19, !dbg !4087

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 1, !dbg !4088
  store %struct._rio* %0, %struct._rio** %20, align 8, !dbg !4088, !tbaa !3683
  %21 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 2, !dbg !4088
  store %struct.RedisModuleType* %2, %struct.RedisModuleType** %21, align 8, !dbg !4088, !tbaa !3685
  store i64 0, i64* %12, align 8, !dbg !4088, !tbaa !3686
  %22 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 3, !dbg !4088
  store i32 0, i32* %22, align 8, !dbg !4088, !tbaa !3687
  %23 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 4, !dbg !4088
  store i32 0, i32* %23, align 4, !dbg !4088, !tbaa !3688
  %24 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 6, !dbg !4088
  store %struct.redisObject* null, %struct.redisObject** %24, align 8, !dbg !4088, !tbaa !3689
  %25 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %4, i64 0, i32 5, !dbg !4088
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %25, align 8, !dbg !4088, !tbaa !3690
  %26 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %2, i64 0, i32 9, !dbg !4090
  %27 = load void (%struct.RedisModuleIO*, i32)*, void (%struct.RedisModuleIO*, i32)** %26, align 8, !dbg !4090, !tbaa !4091
  call void %27(%struct.RedisModuleIO* nonnull %4, i32 %1) #9, !dbg !4093
  %28 = call i32 @rdbSaveLen(%struct._rio* %0, i64 0) #11, !dbg !4094
  %29 = icmp eq i32 %28, -1, !dbg !4095
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4097
  br i1 %29, label %30, label %31, !dbg !4097

; <label>:30:                                     ; preds = %19
  store i32 1, i32* %22, align 8, !dbg !4098, !tbaa !3687
  br label %35, !dbg !4099

; <label>:31:                                     ; preds = %19
  %32 = sext i32 %28 to i64, !dbg !4100
  %33 = load i64, i64* %12, align 8, !dbg !4101, !tbaa !3686
  %34 = add i64 %33, %32, !dbg !4101
  store i64 %34, i64* %12, align 8, !dbg !4101, !tbaa !3686
  br label %35

; <label>:35:                                     ; preds = %31, %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %36 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %25, align 8, !dbg !4102, !tbaa !3690
  %37 = icmp eq %struct.RedisModuleCtx* %36, null, !dbg !4104
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4105
  br i1 %37, label %41, label %38, !dbg !4105

; <label>:38:                                     ; preds = %35
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %36) #9, !dbg !4106
  %39 = bitcast %struct.RedisModuleCtx** %25 to i8**, !dbg !4108
  %40 = load i8*, i8** %39, align 8, !dbg !4108, !tbaa !3690
  call void @zfree(i8* %40) #9, !dbg !4109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4110
  br label %41, !dbg !4110

; <label>:41:                                     ; preds = %35, %38
  %42 = load i32, i32* %22, align 8, !dbg !4111, !tbaa !3687
  %43 = icmp eq i32 %42, 0, !dbg !4113
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4114
  %44 = load i64, i64* %12, align 8, !dbg !4115
  %45 = select i1 %43, i64 %44, i64 -1, !dbg !4114
  br label %46, !dbg !4114

; <label>:46:                                     ; preds = %41, %15, %11, %3
  %47 = phi i64 [ -1, %3 ], [ -1, %11 ], [ -1, %15 ], [ %45, %41 ], !dbg !4116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4117
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #4, !dbg !4118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4118
  ret i64 %47, !dbg !4118
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveRio(%struct._rio*, i32*, i32, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4119 {
  %5 = alloca [10 x i8], align 1
  %6 = alloca i64, align 8
  %7 = alloca %struct.redisObject, align 8
  %8 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0, !dbg !4191
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %8) #4, !dbg !4191
  %9 = bitcast i64* %6 to i8*, !dbg !4193
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !dbg !4193
  %10 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !4195, !tbaa !4197
  %11 = icmp eq i32 %10, 0, !dbg !4198
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4199
  br i1 %11, label %15, label %12, !dbg !4199

; <label>:12:                                     ; preds = %4
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4, !dbg !4200
  store void (%struct._rio*, i8*, i64)* @rioGenericUpdateChecksum, void (%struct._rio*, i8*, i64)** %13, align 8, !dbg !4201, !tbaa !521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4202
  %14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %8, i64 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i32 9) #9, !dbg !4203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4209
  br label %20, !dbg !4209

; <label>:15:                                     ; preds = %4
  %16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %8, i64 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i32 9) #9, !dbg !4203
  %17 = icmp eq %struct._rio* %0, null, !dbg !4210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4209
  br i1 %17, label %50, label %18, !dbg !4209

; <label>:18:                                     ; preds = %15
  %19 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  br label %20, !dbg !4209

; <label>:20:                                     ; preds = %18, %12
  %21 = phi void (%struct._rio*, i8*, i64)** [ %19, %18 ], [ %13, %12 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4215
  %22 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %23 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %24 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %25, !dbg !4215

; <label>:25:                                     ; preds = %42, %20
  %26 = phi i64 [ 9, %20 ], [ %44, %42 ]
  %27 = phi i8* [ %8, %20 ], [ %43, %42 ]
  %28 = load i64, i64* %22, align 8, !dbg !4216, !tbaa !506
  %29 = icmp eq i64 %28, 0, !dbg !4217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4218
  br i1 %29, label %32, label %30, !dbg !4218

; <label>:30:                                     ; preds = %25
  %31 = icmp ult i64 %28, %26, !dbg !4219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4220
  br i1 %31, label %33, label %32, !dbg !4220

; <label>:32:                                     ; preds = %30, %25
  br label %33, !dbg !4220

; <label>:33:                                     ; preds = %30, %32
  %34 = phi i64 [ %26, %32 ], [ %28, %30 ], !dbg !4220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4220
  %35 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %21, align 8, !dbg !4222, !tbaa !521
  %36 = icmp eq void (%struct._rio*, i8*, i64)* %35, null, !dbg !4223
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4224
  br i1 %36, label %38, label %37, !dbg !4224

; <label>:37:                                     ; preds = %33
  call void %35(%struct._rio* nonnull %0, i8* %27, i64 %34) #9, !dbg !4225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4225
  br label %38, !dbg !4225

; <label>:38:                                     ; preds = %37, %33
  %39 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %23, align 8, !dbg !4226, !tbaa !590
  %40 = call i64 %39(%struct._rio* nonnull %0, i8* %27, i64 %34) #9, !dbg !4227
  %41 = icmp eq i64 %40, 0, !dbg !4228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4229
  br i1 %41, label %49, label %42, !dbg !4229

; <label>:42:                                     ; preds = %38
  %43 = getelementptr inbounds i8, i8* %27, i64 %34, !dbg !4230
  %44 = sub i64 %26, %34, !dbg !4231
  %45 = load i64, i64* %24, align 8, !dbg !4232, !tbaa !528
  %46 = add i64 %45, %34, !dbg !4232
  store i64 %46, i64* %24, align 8, !dbg !4232, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4233
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %47 = icmp eq i64 %44, 0, !dbg !4215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4215
  br i1 %47, label %48, label %25, !dbg !4215

; <label>:48:                                     ; preds = %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4236
  br label %50, !dbg !4236

; <label>:49:                                     ; preds = %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4237
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4235
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4236
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4240
  br label %249, !dbg !4240

; <label>:50:                                     ; preds = %48, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4241
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4239
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4240
  %51 = call i32 @rdbSaveInfoAuxFields(%struct._rio* %0, i32 %2, %struct.rdbSaveInfo* %3) #11, !dbg !4242
  %52 = icmp eq i32 %51, -1, !dbg !4244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4245
  br i1 %52, label %249, label %53, !dbg !4245

; <label>:53:                                     ; preds = %50
  %54 = call i64 @rdbSaveModulesAux(%struct._rio* %0, i32 1) #9, !dbg !4246
  %55 = icmp eq i64 %54, -1, !dbg !4248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4249
  br i1 %55, label %249, label %56, !dbg !4249

; <label>:56:                                     ; preds = %53
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4251
  %57 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4252, !tbaa !4253
  %58 = icmp sgt i32 %57, 0, !dbg !4254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4255
  br i1 %58, label %59, label %149, !dbg !4255

; <label>:59:                                     ; preds = %56
  %60 = bitcast %struct.redisObject* %7 to i8*
  %61 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %7, i64 0, i32 1
  %62 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %7, i64 0, i32 0
  %63 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %7, i64 0, i32 2
  %64 = bitcast i8** %63 to i64*
  %65 = and i32 %2, 1
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %68, !dbg !4255

; <label>:68:                                     ; preds = %59, %143
  %69 = phi i32 [ %57, %59 ], [ %144, %143 ]
  %70 = phi i64 [ 0, %59 ], [ %146, %143 ]
  %71 = phi i64 [ 0, %59 ], [ %145, %143 ]
  %72 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !4256, !tbaa !4257
  %73 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %72, i64 %70, !dbg !4258
  %74 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %73, i64 0, i32 0, !dbg !4260
  %75 = load %struct.dict*, %struct.dict** %74, align 8, !dbg !4260, !tbaa !4261
  %76 = getelementptr inbounds %struct.dict, %struct.dict* %75, i64 0, i32 2, i64 0, i32 3, !dbg !4264
  %77 = load i64, i64* %76, align 8, !dbg !4264, !tbaa !3302
  %78 = getelementptr inbounds %struct.dict, %struct.dict* %75, i64 0, i32 2, i64 1, i32 3, !dbg !4264
  %79 = load i64, i64* %78, align 8, !dbg !4264, !tbaa !3302
  %80 = sub i64 0, %79, !dbg !4266
  %81 = icmp eq i64 %77, %80, !dbg !4266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4267
  br i1 %81, label %82, label %83, !dbg !4267

; <label>:82:                                     ; preds = %68
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4268
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %143

; <label>:83:                                     ; preds = %68
  %84 = call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %75) #9, !dbg !4269
  %85 = call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -2) #11, !dbg !4270
  %86 = icmp eq i32 %85, -1, !dbg !4272
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4273
  br i1 %86, label %138, label %87, !dbg !4273

; <label>:87:                                     ; preds = %83
  %88 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %70) #11, !dbg !4274
  %89 = icmp eq i32 %88, -1, !dbg !4276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4277
  br i1 %89, label %138, label %90, !dbg !4277

; <label>:90:                                     ; preds = %87
  %91 = load %struct.dict*, %struct.dict** %74, align 8, !dbg !4278, !tbaa !4261
  %92 = getelementptr inbounds %struct.dict, %struct.dict* %91, i64 0, i32 2, i64 0, i32 3, !dbg !4278
  %93 = load i64, i64* %92, align 8, !dbg !4278, !tbaa !3302
  %94 = getelementptr inbounds %struct.dict, %struct.dict* %91, i64 0, i32 2, i64 1, i32 3, !dbg !4278
  %95 = load i64, i64* %94, align 8, !dbg !4278, !tbaa !3302
  %96 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %72, i64 %70, i32 1, !dbg !4279
  %97 = load %struct.dict*, %struct.dict** %96, align 8, !dbg !4279, !tbaa !4280
  %98 = getelementptr inbounds %struct.dict, %struct.dict* %97, i64 0, i32 2, i64 0, i32 3, !dbg !4279
  %99 = load i64, i64* %98, align 8, !dbg !4279, !tbaa !3302
  %100 = getelementptr inbounds %struct.dict, %struct.dict* %97, i64 0, i32 2, i64 1, i32 3, !dbg !4279
  %101 = load i64, i64* %100, align 8, !dbg !4279, !tbaa !3302
  %102 = add i64 %101, %99, !dbg !4279
  %103 = call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -5) #11, !dbg !4282
  %104 = icmp eq i32 %103, -1, !dbg !4284
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4285
  br i1 %104, label %139, label %105, !dbg !4285

; <label>:105:                                    ; preds = %90
  %106 = add i64 %95, %93, !dbg !4278
  %107 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %106) #11, !dbg !4287
  %108 = icmp eq i32 %107, -1, !dbg !4289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4290
  br i1 %108, label %139, label %109, !dbg !4290

; <label>:109:                                    ; preds = %105
  %110 = call i32 @rdbSaveLen(%struct._rio* %0, i64 %102) #11, !dbg !4291
  %111 = icmp eq i32 %110, -1, !dbg !4293
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4294
  br i1 %111, label %139, label %112, !dbg !4294

; <label>:112:                                    ; preds = %109
  %113 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %84) #9, !dbg !4295
  %114 = icmp eq %struct.dictEntry* %113, null, !dbg !4297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4298
  br i1 %114, label %140, label %115, !dbg !4298

; <label>:115:                                    ; preds = %112, %134
  %116 = phi %struct.dictEntry* [ %136, %134 ], [ %113, %112 ]
  %117 = phi i64 [ %135, %134 ], [ %71, %112 ]
  %118 = bitcast %struct.dictEntry* %116 to i64*, !dbg !4299
  %119 = load i64, i64* %118, align 8, !dbg !4299, !tbaa !3315
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #4, !dbg !4301
  %120 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %116, i64 0, i32 1, i32 0, !dbg !4302
  %121 = bitcast i8** %120 to %struct.redisObject**, !dbg !4302
  %122 = load %struct.redisObject*, %struct.redisObject** %121, align 8, !dbg !4302, !tbaa !545
  store i32 1, i32* %61, align 4, !dbg !4304, !tbaa !4306
  store i32 0, i32* %62, align 8, !dbg !4304
  store i64 %119, i64* %64, align 8, !dbg !4304, !tbaa !2111
  %123 = call i64 @getExpire(%struct.redisDb* %73, %struct.redisObject* nonnull %7) #9, !dbg !4308
  %124 = call i32 @rdbSaveKeyValuePair(%struct._rio* %0, %struct.redisObject* nonnull %7, %struct.redisObject* %122, i64 %123) #11, !dbg !4310
  %125 = icmp eq i32 %124, -1, !dbg !4312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4314
  br i1 %125, label %126, label %127, !dbg !4313

; <label>:126:                                    ; preds = %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #4, !dbg !4316
  br label %139

; <label>:127:                                    ; preds = %115
  br i1 %66, label %134, label %128, !dbg !4317

; <label>:128:                                    ; preds = %127
  %129 = load i64, i64* %67, align 8, !dbg !4318, !tbaa !528
  %130 = add i64 %117, 10240, !dbg !4319
  %131 = icmp ugt i64 %129, %130, !dbg !4320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4321
  br i1 %131, label %132, label %134, !dbg !4321

; <label>:132:                                    ; preds = %128
  %133 = call i64 @aofReadDiffFromParent() #9, !dbg !4322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4324
  br label %134, !dbg !4324

; <label>:134:                                    ; preds = %128, %132, %127
  %135 = phi i64 [ %129, %132 ], [ %117, %128 ], [ %117, %127 ], !dbg !4325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4316
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #4, !dbg !4316
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %136 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %84) #9, !dbg !4295
  %137 = icmp eq %struct.dictEntry* %136, null, !dbg !4297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4298
  br i1 %137, label %140, label %115, !dbg !4298

; <label>:138:                                    ; preds = %87, %83
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4326
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %249

; <label>:139:                                    ; preds = %109, %105, %90, %126
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %249

; <label>:140:                                    ; preds = %134, %112
  %141 = phi i64 [ %71, %112 ], [ %135, %134 ], !dbg !4194
  call void @dictReleaseIterator(%struct.dictIterator* %84) #9, !dbg !4327
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4328
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %142 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !4252, !tbaa !4253
  br label %143

; <label>:143:                                    ; preds = %140, %82
  %144 = phi i32 [ %69, %82 ], [ %142, %140 ], !dbg !4252
  %145 = phi i64 [ %71, %82 ], [ %141, %140 ]
  %146 = add nuw nsw i64 %70, 1, !dbg !4329
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4330
  %147 = sext i32 %144 to i64, !dbg !4254
  %148 = icmp slt i64 %146, %147, !dbg !4254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4255
  br i1 %148, label %68, label %149, !dbg !4255, !llvm.loop !4331

; <label>:149:                                    ; preds = %143, %56
  %150 = icmp eq %struct.rdbSaveInfo* %3, null, !dbg !4333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4334
  br i1 %150, label %211, label %151, !dbg !4334

; <label>:151:                                    ; preds = %149
  %152 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 273), align 8, !dbg !4335, !tbaa !4336
  %153 = getelementptr inbounds %struct.dict, %struct.dict* %152, i64 0, i32 2, i64 0, i32 3, !dbg !4335
  %154 = load i64, i64* %153, align 8, !dbg !4335, !tbaa !3302
  %155 = getelementptr inbounds %struct.dict, %struct.dict* %152, i64 0, i32 2, i64 1, i32 3, !dbg !4335
  %156 = load i64, i64* %155, align 8, !dbg !4335, !tbaa !3302
  %157 = sub i64 0, %156, !dbg !4335
  %158 = icmp eq i64 %154, %157, !dbg !4335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4337
  br i1 %158, label %211, label %159, !dbg !4337

; <label>:159:                                    ; preds = %151
  %160 = call %struct.dictIterator* @dictGetIterator(%struct.dict* %152) #9, !dbg !4338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4339
  br label %161, !dbg !4339

; <label>:161:                                    ; preds = %206, %159
  %162 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %160) #9, !dbg !4340
  %163 = icmp eq %struct.dictEntry* %162, null, !dbg !4341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4339
  br i1 %163, label %210, label %164, !dbg !4339

; <label>:164:                                    ; preds = %161
  %165 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %162, i64 0, i32 1, i32 0, !dbg !4342
  %166 = bitcast i8** %165 to %struct.redisObject**, !dbg !4342
  %167 = load %struct.redisObject*, %struct.redisObject** %166, align 8, !dbg !4342, !tbaa !545
  %168 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %167, i64 0, i32 2, !dbg !4344
  %169 = load i8*, i8** %168, align 8, !dbg !4344, !tbaa !2111
  %170 = getelementptr inbounds i8, i8* %169, i64 -1, !dbg !4348
  %171 = load i8, i8* %170, align 1, !dbg !4348, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4350
  %172 = trunc i8 %171 to i3, !dbg !4350
  switch i3 %172, label %194 [
    i3 0, label %173
    i3 1, label %176
    i3 2, label %180
    i3 3, label %185
    i3 -4, label %190
  ], !dbg !4350

; <label>:173:                                    ; preds = %164
  %174 = lshr i8 %171, 3, !dbg !4351
  %175 = zext i8 %174 to i64, !dbg !4351
  br label %194, !dbg !4352

; <label>:176:                                    ; preds = %164
  %177 = getelementptr inbounds i8, i8* %169, i64 -3, !dbg !4353
  %178 = load i8, i8* %177, align 1, !dbg !4354, !tbaa !545
  %179 = zext i8 %178 to i64, !dbg !4353
  br label %194, !dbg !4355

; <label>:180:                                    ; preds = %164
  %181 = getelementptr inbounds i8, i8* %169, i64 -5, !dbg !4356
  %182 = bitcast i8* %181 to i16*, !dbg !4357
  %183 = load i16, i16* %182, align 1, !dbg !4357, !tbaa !2138
  %184 = zext i16 %183 to i64, !dbg !4356
  br label %194, !dbg !4358

; <label>:185:                                    ; preds = %164
  %186 = getelementptr inbounds i8, i8* %169, i64 -9, !dbg !4359
  %187 = bitcast i8* %186 to i32*, !dbg !4360
  %188 = load i32, i32* %187, align 1, !dbg !4360, !tbaa !191
  %189 = zext i32 %188 to i64, !dbg !4359
  br label %194, !dbg !4361

; <label>:190:                                    ; preds = %164
  %191 = getelementptr inbounds i8, i8* %169, i64 -17, !dbg !4362
  %192 = bitcast i8* %191 to i64*, !dbg !4363
  %193 = load i64, i64* %192, align 1, !dbg !4363, !tbaa !674
  br label %194, !dbg !4364

; <label>:194:                                    ; preds = %164, %173, %176, %180, %185, %190
  %195 = phi i64 [ %193, %190 ], [ %189, %185 ], [ %184, %180 ], [ %179, %176 ], [ %175, %173 ], [ 0, %164 ], !dbg !4365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4367
  %196 = call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -6) #9, !dbg !4375
  %197 = sext i32 %196 to i64, !dbg !4375
  %198 = icmp eq i32 %196, -1, !dbg !4377
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4378
  br i1 %198, label %205, label %199, !dbg !4378

; <label>:199:                                    ; preds = %194
  %200 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i64 3) #9, !dbg !4379
  %201 = icmp eq i64 %200, -1, !dbg !4380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4381
  br i1 %201, label %205, label %202, !dbg !4381

; <label>:202:                                    ; preds = %199
  %203 = call i64 @rdbSaveRawString(%struct._rio* %0, i8* %169, i64 %195) #9, !dbg !4382
  %204 = icmp eq i64 %203, -1, !dbg !4383
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4384
  br i1 %204, label %205, label %206, !dbg !4384

; <label>:205:                                    ; preds = %202, %199, %194
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4366
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4387
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %249

; <label>:206:                                    ; preds = %202
  %207 = add nsw i64 %200, %197, !dbg !4388
  %208 = add nsw i64 %207, %203, !dbg !4389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4385
  %209 = icmp eq i64 %208, -1, !dbg !4391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4387
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %209, label %249, label %161

; <label>:210:                                    ; preds = %161
  call void @dictReleaseIterator(%struct.dictIterator* %160) #9, !dbg !4392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4393
  br label %211, !dbg !4393

; <label>:211:                                    ; preds = %151, %149, %210
  %212 = call i64 @rdbSaveModulesAux(%struct._rio* %0, i32 2) #9, !dbg !4394
  %213 = icmp eq i64 %212, -1, !dbg !4396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4397
  br i1 %213, label %249, label %214, !dbg !4397

; <label>:214:                                    ; preds = %211
  %215 = call i32 @rdbSaveType(%struct._rio* %0, i8 zeroext -1) #11, !dbg !4398
  %216 = icmp eq i32 %215, -1, !dbg !4400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4401
  br i1 %216, label %249, label %217, !dbg !4401

; <label>:217:                                    ; preds = %214
  %218 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 5, !dbg !4402
  %219 = load i64, i64* %218, align 8, !dbg !4402, !tbaa !4403
  store i64 %219, i64* %6, align 8, !dbg !4405, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4411
  %220 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %221 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %222 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %223 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %224, !dbg !4411

; <label>:224:                                    ; preds = %242, %217
  %225 = phi i64 [ 8, %217 ], [ %244, %242 ]
  %226 = phi i8* [ %9, %217 ], [ %243, %242 ]
  %227 = load i64, i64* %220, align 8, !dbg !4412, !tbaa !506
  %228 = icmp eq i64 %227, 0, !dbg !4413
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4414
  br i1 %228, label %231, label %229, !dbg !4414

; <label>:229:                                    ; preds = %224
  %230 = icmp ult i64 %227, %225, !dbg !4415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4416
  br i1 %230, label %232, label %231, !dbg !4416

; <label>:231:                                    ; preds = %229, %224
  br label %232, !dbg !4416

; <label>:232:                                    ; preds = %229, %231
  %233 = phi i64 [ %225, %231 ], [ %227, %229 ], !dbg !4416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4416
  %234 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %221, align 8, !dbg !4418, !tbaa !521
  %235 = icmp eq void (%struct._rio*, i8*, i64)* %234, null, !dbg !4419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4420
  br i1 %235, label %237, label %236, !dbg !4420

; <label>:236:                                    ; preds = %232
  call void %234(%struct._rio* nonnull %0, i8* %226, i64 %233) #9, !dbg !4421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4421
  br label %237, !dbg !4421

; <label>:237:                                    ; preds = %236, %232
  %238 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %222, align 8, !dbg !4422, !tbaa !590
  %239 = call i64 %238(%struct._rio* nonnull %0, i8* %226, i64 %233) #9, !dbg !4423
  %240 = icmp eq i64 %239, 0, !dbg !4424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4425
  br i1 %240, label %241, label %242, !dbg !4425

; <label>:241:                                    ; preds = %237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4426
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4428
  br label %249, !dbg !4428

; <label>:242:                                    ; preds = %237
  %243 = getelementptr inbounds i8, i8* %226, i64 %233, !dbg !4429
  %244 = sub i64 %225, %233, !dbg !4430
  %245 = load i64, i64* %223, align 8, !dbg !4431, !tbaa !528
  %246 = add i64 %245, %233, !dbg !4431
  store i64 %246, i64* %223, align 8, !dbg !4431, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4432
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %247 = icmp eq i64 %244, 0, !dbg !4411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4411
  br i1 %247, label %248, label %224, !dbg !4411

; <label>:248:                                    ; preds = %242
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4427
  br label %258, !dbg !4434

; <label>:249:                                    ; preds = %206, %241, %205, %139, %138, %49, %214, %211, %53, %50
  %250 = phi %struct.dictIterator* [ null, %50 ], [ null, %53 ], [ null, %211 ], [ null, %214 ], [ null, %49 ], [ %84, %138 ], [ %84, %139 ], [ %160, %205 ], [ null, %241 ], [ %160, %206 ], !dbg !4387
  %251 = icmp eq i32* %1, null, !dbg !4435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4437
  br i1 %251, label %255, label %252, !dbg !4437

; <label>:252:                                    ; preds = %249
  %253 = call i32* @__errno() #9, !dbg !4438
  %254 = load i32, i32* %253, align 4, !dbg !4438, !tbaa !191
  store i32 %254, i32* %1, align 4, !dbg !4439, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4440
  br label %255, !dbg !4440

; <label>:255:                                    ; preds = %249, %252
  %256 = icmp eq %struct.dictIterator* %250, null, !dbg !4441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4443
  br i1 %256, label %260, label %257, !dbg !4443

; <label>:257:                                    ; preds = %255
  call void @dictReleaseIterator(%struct.dictIterator* nonnull %250) #9, !dbg !4444
  br label %258, !dbg !4444

; <label>:258:                                    ; preds = %248, %257
  %259 = phi i32 [ -1, %257 ], [ 0, %248 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4325
  br label %260, !dbg !4325

; <label>:260:                                    ; preds = %258, %255
  %261 = phi i32 [ -1, %255 ], [ %259, %258 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !dbg !4445
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %8) #4, !dbg !4445
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4445
  ret i32 %261, !dbg !4445
}

; Function Attrs: noredzone
declare dso_local void @rioGenericUpdateChecksum(%struct._rio*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveModulesAux(%struct._rio*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @getExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @aofReadDiffFromParent() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveRioWithEOFMark(%struct._rio*, i32*, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4446 {
  %4 = alloca [40 x i8], align 16
  %5 = getelementptr inbounds [40 x i8], [40 x i8]* %4, i64 0, i64 0, !dbg !4460
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #4, !dbg !4460
  call void @getRandomHexChars(i8* nonnull %5, i64 40) #9, !dbg !4462
  %6 = icmp ne i32* %1, null, !dbg !4463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4465
  br i1 %6, label %7, label %8, !dbg !4465

; <label>:7:                                      ; preds = %3
  store i32 0, i32* %1, align 4, !dbg !4466, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4467
  br label %8, !dbg !4467

; <label>:8:                                      ; preds = %7, %3
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4473
  %9 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 1
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %13, !dbg !4473

; <label>:13:                                     ; preds = %30, %8
  %14 = phi i64 [ 5, %8 ], [ %32, %30 ]
  %15 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), %8 ], [ %31, %30 ]
  %16 = load i64, i64* %9, align 8, !dbg !4474, !tbaa !506
  %17 = icmp eq i64 %16, 0, !dbg !4475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4476
  br i1 %17, label %20, label %18, !dbg !4476

; <label>:18:                                     ; preds = %13
  %19 = icmp ult i64 %16, %14, !dbg !4477
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4478
  br i1 %19, label %21, label %20, !dbg !4478

; <label>:20:                                     ; preds = %18, %13
  br label %21, !dbg !4478

; <label>:21:                                     ; preds = %18, %20
  %22 = phi i64 [ %14, %20 ], [ %16, %18 ], !dbg !4478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4478
  %23 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !4480, !tbaa !521
  %24 = icmp eq void (%struct._rio*, i8*, i64)* %23, null, !dbg !4481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4482
  br i1 %24, label %26, label %25, !dbg !4482

; <label>:25:                                     ; preds = %21
  call void %23(%struct._rio* nonnull %0, i8* %15, i64 %22) #9, !dbg !4483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4483
  br label %26, !dbg !4483

; <label>:26:                                     ; preds = %25, %21
  %27 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4484, !tbaa !590
  %28 = call i64 %27(%struct._rio* nonnull %0, i8* %15, i64 %22) #9, !dbg !4485
  %29 = icmp eq i64 %28, 0, !dbg !4486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4487
  br i1 %29, label %112, label %30, !dbg !4487

; <label>:30:                                     ; preds = %26
  %31 = getelementptr inbounds i8, i8* %15, i64 %22, !dbg !4488
  %32 = sub i64 %14, %22, !dbg !4489
  %33 = load i64, i64* %12, align 8, !dbg !4490, !tbaa !528
  %34 = add i64 %33, %22, !dbg !4490
  store i64 %34, i64* %12, align 8, !dbg !4490, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4491
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %35 = icmp eq i64 %32, 0, !dbg !4473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4473
  br i1 %35, label %36, label %13, !dbg !4473

; <label>:36:                                     ; preds = %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4494
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4500
  br label %37, !dbg !4500

; <label>:37:                                     ; preds = %54, %36
  %38 = phi i64 [ 40, %36 ], [ %56, %54 ]
  %39 = phi i8* [ %5, %36 ], [ %55, %54 ]
  %40 = load i64, i64* %9, align 8, !dbg !4501, !tbaa !506
  %41 = icmp eq i64 %40, 0, !dbg !4502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4503
  br i1 %41, label %44, label %42, !dbg !4503

; <label>:42:                                     ; preds = %37
  %43 = icmp ult i64 %40, %38, !dbg !4504
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4505
  br i1 %43, label %45, label %44, !dbg !4505

; <label>:44:                                     ; preds = %42, %37
  br label %45, !dbg !4505

; <label>:45:                                     ; preds = %42, %44
  %46 = phi i64 [ %38, %44 ], [ %40, %42 ], !dbg !4505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4505
  %47 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !4507, !tbaa !521
  %48 = icmp eq void (%struct._rio*, i8*, i64)* %47, null, !dbg !4508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4509
  br i1 %48, label %50, label %49, !dbg !4509

; <label>:49:                                     ; preds = %45
  call void %47(%struct._rio* nonnull %0, i8* %39, i64 %46) #9, !dbg !4510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4510
  br label %50, !dbg !4510

; <label>:50:                                     ; preds = %49, %45
  %51 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4511, !tbaa !590
  %52 = call i64 %51(%struct._rio* nonnull %0, i8* %39, i64 %46) #9, !dbg !4512
  %53 = icmp eq i64 %52, 0, !dbg !4513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4514
  br i1 %53, label %112, label %54, !dbg !4514

; <label>:54:                                     ; preds = %50
  %55 = getelementptr inbounds i8, i8* %39, i64 %46, !dbg !4515
  %56 = sub i64 %38, %46, !dbg !4516
  %57 = load i64, i64* %12, align 8, !dbg !4517, !tbaa !528
  %58 = add i64 %57, %46, !dbg !4517
  store i64 %58, i64* %12, align 8, !dbg !4517, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4518
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %59 = icmp eq i64 %56, 0, !dbg !4500
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4500
  br i1 %59, label %60, label %37, !dbg !4500

; <label>:60:                                     ; preds = %54
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4527
  br label %61, !dbg !4527

; <label>:61:                                     ; preds = %78, %60
  %62 = phi i64 [ 2, %60 ], [ %80, %78 ]
  %63 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), %60 ], [ %79, %78 ]
  %64 = load i64, i64* %9, align 8, !dbg !4528, !tbaa !506
  %65 = icmp eq i64 %64, 0, !dbg !4529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4530
  br i1 %65, label %68, label %66, !dbg !4530

; <label>:66:                                     ; preds = %61
  %67 = icmp ult i64 %64, %62, !dbg !4531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4532
  br i1 %67, label %69, label %68, !dbg !4532

; <label>:68:                                     ; preds = %66, %61
  br label %69, !dbg !4532

; <label>:69:                                     ; preds = %66, %68
  %70 = phi i64 [ %62, %68 ], [ %64, %66 ], !dbg !4532
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4532
  %71 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !4534, !tbaa !521
  %72 = icmp eq void (%struct._rio*, i8*, i64)* %71, null, !dbg !4535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4536
  br i1 %72, label %74, label %73, !dbg !4536

; <label>:73:                                     ; preds = %69
  call void %71(%struct._rio* nonnull %0, i8* %63, i64 %70) #9, !dbg !4537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4537
  br label %74, !dbg !4537

; <label>:74:                                     ; preds = %73, %69
  %75 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4538, !tbaa !590
  %76 = call i64 %75(%struct._rio* nonnull %0, i8* %63, i64 %70) #9, !dbg !4539
  %77 = icmp eq i64 %76, 0, !dbg !4540
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4541
  br i1 %77, label %112, label %78, !dbg !4541

; <label>:78:                                     ; preds = %74
  %79 = getelementptr inbounds i8, i8* %63, i64 %70, !dbg !4542
  %80 = sub i64 %62, %70, !dbg !4543
  %81 = load i64, i64* %12, align 8, !dbg !4544, !tbaa !528
  %82 = add i64 %81, %70, !dbg !4544
  store i64 %82, i64* %12, align 8, !dbg !4544, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4545
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %83 = icmp eq i64 %80, 0, !dbg !4527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4527
  br i1 %83, label %84, label %61, !dbg !4527

; <label>:84:                                     ; preds = %78
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4548
  %85 = call i32 @rdbSaveRio(%struct._rio* nonnull %0, i32* %1, i32 0, %struct.rdbSaveInfo* %2) #11, !dbg !4549
  %86 = icmp eq i32 %85, -1, !dbg !4551
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4552
  br i1 %86, label %113, label %87, !dbg !4552

; <label>:87:                                     ; preds = %84
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4558
  br label %88, !dbg !4558

; <label>:88:                                     ; preds = %105, %87
  %89 = phi i64 [ 40, %87 ], [ %107, %105 ]
  %90 = phi i8* [ %5, %87 ], [ %106, %105 ]
  %91 = load i64, i64* %9, align 8, !dbg !4559, !tbaa !506
  %92 = icmp eq i64 %91, 0, !dbg !4560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4561
  br i1 %92, label %95, label %93, !dbg !4561

; <label>:93:                                     ; preds = %88
  %94 = icmp ult i64 %91, %89, !dbg !4562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4563
  br i1 %94, label %96, label %95, !dbg !4563

; <label>:95:                                     ; preds = %93, %88
  br label %96, !dbg !4563

; <label>:96:                                     ; preds = %93, %95
  %97 = phi i64 [ %89, %95 ], [ %91, %93 ], !dbg !4563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4563
  %98 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %10, align 8, !dbg !4565, !tbaa !521
  %99 = icmp eq void (%struct._rio*, i8*, i64)* %98, null, !dbg !4566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4567
  br i1 %99, label %101, label %100, !dbg !4567

; <label>:100:                                    ; preds = %96
  call void %98(%struct._rio* nonnull %0, i8* %90, i64 %97) #9, !dbg !4568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4568
  br label %101, !dbg !4568

; <label>:101:                                    ; preds = %100, %96
  %102 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4569, !tbaa !590
  %103 = call i64 %102(%struct._rio* nonnull %0, i8* %90, i64 %97) #9, !dbg !4570
  %104 = icmp eq i64 %103, 0, !dbg !4571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4572
  br i1 %104, label %112, label %105, !dbg !4572

; <label>:105:                                    ; preds = %101
  %106 = getelementptr inbounds i8, i8* %90, i64 %97, !dbg !4573
  %107 = sub i64 %89, %97, !dbg !4574
  %108 = load i64, i64* %12, align 8, !dbg !4575, !tbaa !528
  %109 = add i64 %108, %97, !dbg !4575
  store i64 %109, i64* %12, align 8, !dbg !4575, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4576
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %110 = icmp eq i64 %107, 0, !dbg !4558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4558
  br i1 %110, label %111, label %88, !dbg !4558

; <label>:111:                                    ; preds = %105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4579
  br label %120, !dbg !4580

; <label>:112:                                    ; preds = %26, %50, %74, %101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4581
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4582
  br label %113, !dbg !4583

; <label>:113:                                    ; preds = %112, %84
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4583
  br i1 %6, label %114, label %120, !dbg !4583

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* %1, align 4, !dbg !4585, !tbaa !191
  %116 = icmp eq i32 %115, 0, !dbg !4586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4587
  br i1 %116, label %117, label %120, !dbg !4587

; <label>:117:                                    ; preds = %114
  %118 = call i32* @__errno() #9, !dbg !4588
  %119 = load i32, i32* %118, align 4, !dbg !4588, !tbaa !191
  store i32 %119, i32* %1, align 4, !dbg !4589, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4590
  br label %120, !dbg !4590

; <label>:120:                                    ; preds = %113, %114, %117, %111
  %121 = phi i32 [ 0, %111 ], [ -1, %117 ], [ -1, %114 ], [ -1, %113 ], !dbg !4582
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4582
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #4, !dbg !4591
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4591
  ret i32 %121, !dbg !4591
}

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSave(i8*, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4592 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca %struct._rio, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !4611
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #4, !dbg !4611
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0, !dbg !4613
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #4, !dbg !4613
  %9 = bitcast %struct._rio* %5 to i8*, !dbg !4615
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %9) #4, !dbg !4615
  %10 = bitcast i32* %6 to i8*, !dbg !4616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #4, !dbg !4616
  store i32 0, i32* %6, align 4, !dbg !4617, !tbaa !191
  %11 = tail call i32 @getpid() #9, !dbg !4618
  %12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %7, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 %11) #9, !dbg !4619
  %13 = call %struct.__sFILE* @fopen(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !4620
  %14 = icmp eq %struct.__sFILE* %13, null, !dbg !4622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4623
  br i1 %14, label %15, label %22, !dbg !4623

; <label>:15:                                     ; preds = %2
  %16 = call i8* @getcwd(i8* nonnull %8, i64 1024) #9, !dbg !4624
  %17 = icmp eq i8* %16, null, !dbg !4626
  %18 = select i1 %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i8* %16, !dbg !4626
  %19 = call i32* @__errno() #9, !dbg !4627
  %20 = load i32, i32* %19, align 4, !dbg !4627, !tbaa !191
  %21 = call i8* @strerror(i32 %20) #9, !dbg !4628
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.35, i64 0, i64 0), i8* %0, i8* %18, i8* %21) #9, !dbg !4629
  br label %61

; <label>:22:                                     ; preds = %2
  call void @rioInitWithFile(%struct._rio* nonnull %5, %struct.__sFILE* nonnull %13) #9, !dbg !4631
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 139), align 4, !dbg !4632, !tbaa !4634
  %24 = icmp eq i32 %23, 0, !dbg !4635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4636
  br i1 %24, label %26, label %25, !dbg !4636

; <label>:25:                                     ; preds = %22
  call void @rioSetAutoSync(%struct._rio* nonnull %5, i64 33554432) #9, !dbg !4637
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4637
  br label %26, !dbg !4637

; <label>:26:                                     ; preds = %22, %25
  %27 = call i32 @rdbSaveRio(%struct._rio* nonnull %5, i32* nonnull %6, i32 0, %struct.rdbSaveInfo* %1) #11, !dbg !4638
  %28 = icmp eq i32 %27, -1, !dbg !4640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4641
  br i1 %28, label %29, label %32, !dbg !4641

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* %6, align 4, !dbg !4642, !tbaa !191
  %31 = call i32* @__errno() #9, !dbg !4644
  store i32 %30, i32* %31, align 4, !dbg !4645, !tbaa !191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4646
  br label %55, !dbg !4646

; <label>:32:                                     ; preds = %26
  %33 = call i32 @fflush(%struct.__sFILE* nonnull %13) #9, !dbg !4647
  %34 = icmp eq i32 %33, -1, !dbg !4649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4650
  br i1 %34, label %55, label %35, !dbg !4650

; <label>:35:                                     ; preds = %32
  %36 = call i32 @fileno(%struct.__sFILE* nonnull %13) #9, !dbg !4651
  %37 = call i32 @fsync(i32 %36) #9, !dbg !4653
  %38 = icmp eq i32 %37, -1, !dbg !4654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4655
  br i1 %38, label %55, label %39, !dbg !4655

; <label>:39:                                     ; preds = %35
  %40 = call i32 @fclose(%struct.__sFILE* nonnull %13) #9, !dbg !4656
  %41 = icmp eq i32 %40, -1, !dbg !4658
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4659
  br i1 %41, label %55, label %42, !dbg !4659

; <label>:42:                                     ; preds = %39
  %43 = call i32 @rename(i8* nonnull %7, i8* %0) #9, !dbg !4660
  %44 = icmp eq i32 %43, -1, !dbg !4661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4662
  br i1 %44, label %45, label %53, !dbg !4662

; <label>:45:                                     ; preds = %42
  %46 = call i8* @getcwd(i8* nonnull %8, i64 1024) #9, !dbg !4663
  %47 = icmp eq i8* %46, null, !dbg !4665
  %48 = select i1 %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i8* %46, !dbg !4665
  %49 = call i32* @__errno() #9, !dbg !4666
  %50 = load i32, i32* %49, align 4, !dbg !4666, !tbaa !191
  %51 = call i8* @strerror(i32 %50) #9, !dbg !4667
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.37, i64 0, i64 0), i8* nonnull %7, i8* %0, i8* %48, i8* %51) #9, !dbg !4668
  %52 = call i32 @unlink(i8* nonnull %7) #9, !dbg !4669
  br label %61

; <label>:53:                                     ; preds = %42
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0)) #9, !dbg !4670
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !4671, !tbaa !4672
  %54 = call i64 @time(i64* null) #9, !dbg !4673
  store i64 %54, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8, !dbg !4674, !tbaa !4675
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !4676, !tbaa !4677
  br label %61, !dbg !4678

; <label>:55:                                     ; preds = %39, %35, %32, %29
  %56 = call i32* @__errno() #9, !dbg !4679
  %57 = load i32, i32* %56, align 4, !dbg !4679, !tbaa !191
  %58 = call i8* @strerror(i32 %57) #9, !dbg !4680
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0), i8* %58) #9, !dbg !4681
  %59 = call i32 @fclose(%struct.__sFILE* nonnull %13) #9, !dbg !4682
  %60 = call i32 @unlink(i8* nonnull %7) #9, !dbg !4683
  br label %61, !dbg !4684

; <label>:61:                                     ; preds = %55, %53, %45, %15
  %62 = phi i32 [ -1, %55 ], [ -1, %45 ], [ 0, %53 ], [ -1, %15 ], !dbg !4685
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #4, !dbg !4686
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %9) #4, !dbg !4686
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #4, !dbg !4686
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #4, !dbg !4686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4686
  ret i32 %62, !dbg !4686
}

; Function Attrs: noredzone
declare dso_local i32 @getpid() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.__sFILE* @fopen(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @getcwd(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioInitWithFile(%struct._rio*, %struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioSetAutoSync(%struct._rio*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fflush(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fsync(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fileno(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fclose(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @rename(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @unlink(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveBackground(i8*, %struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !4687 {
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !4703, !tbaa !4705
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !4706
  %5 = and i32 %4, %3, !dbg !4707
  %6 = icmp eq i32 %5, -1, !dbg !4707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4707
  br i1 %6, label %7, label %49, !dbg !4707

; <label>:7:                                      ; preds = %2
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !4708, !tbaa !4672
  store i64 %8, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 153), align 8, !dbg !4709, !tbaa !4710
  %9 = tail call i64 @time(i64* null) #9, !dbg !4711
  store i64 %9, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 161), align 8, !dbg !4712, !tbaa !4713
  tail call void @openChildInfoPipe() #9, !dbg !4714
  %10 = tail call i64 @ustime() #9, !dbg !4715
  %11 = tail call i32 @fork() #9, !dbg !4717
  %12 = icmp eq i32 %11, 0, !dbg !4719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4720
  br i1 %12, label %13, label %25, !dbg !4720

; <label>:13:                                     ; preds = %7
  tail call void @closeListeningSockets(i32 0) #9, !dbg !4721
  tail call void @redisSetProcTitle(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #9, !dbg !4722
  %14 = tail call i32 @rdbSave(i8* %0, %struct.rdbSaveInfo* %1) #11, !dbg !4723
  %15 = icmp eq i32 %14, 0, !dbg !4725
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4726
  br i1 %15, label %16, label %22, !dbg !4726

; <label>:16:                                     ; preds = %13
  %17 = tail call i64 @zmalloc_get_private_dirty(i64 -1) #9, !dbg !4727
  %18 = icmp eq i64 %17, 0, !dbg !4729
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4731
  br i1 %18, label %21, label %19, !dbg !4731

; <label>:19:                                     ; preds = %16
  %20 = lshr i64 %17, 20, !dbg !4732
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i64 %20) #9, !dbg !4734
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4735
  br label %21, !dbg !4735

; <label>:21:                                     ; preds = %16, %19
  store i64 %17, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 171, i32 1), align 8, !dbg !4736, !tbaa !4737
  tail call void @sendChildInfo(i32 0) #9, !dbg !4738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4739
  br label %22, !dbg !4739

; <label>:22:                                     ; preds = %21, %13
  %23 = xor i1 %15, true, !dbg !4740
  %24 = zext i1 %23 to i32, !dbg !4740
  tail call void @exitFromChild(i32 %24) #9, !dbg !4741
  br label %49, !dbg !4742

; <label>:25:                                     ; preds = %7
  %26 = tail call i64 @ustime() #9, !dbg !4743
  %27 = sub nsw i64 %26, %10, !dbg !4745
  store i64 %27, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !4746, !tbaa !4747
  %28 = tail call i64 @zmalloc_used_memory() #9, !dbg !4748
  %29 = uitofp i64 %28 to double, !dbg !4749
  %30 = fmul double %29, 1.000000e+06, !dbg !4750
  %31 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !4751, !tbaa !4747
  %32 = sitofp i64 %31 to double, !dbg !4752
  %33 = fdiv double %30, %32, !dbg !4753
  %34 = fmul double %33, 0x3E10000000000000, !dbg !4754
  store double %34, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !4755, !tbaa !4756
  %35 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !4757, !tbaa !4759
  %36 = icmp eq i64 %35, 0, !dbg !4757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4757
  br i1 %36, label %41, label %37, !dbg !4757

; <label>:37:                                     ; preds = %25
  %38 = sdiv i64 %31, 1000, !dbg !4757
  %39 = icmp slt i64 %38, %35, !dbg !4757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4760
  br i1 %39, label %41, label %40, !dbg !4760

; <label>:40:                                     ; preds = %37
  tail call void @latencyAddSample(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i64 %38) #9, !dbg !4757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4757
  br label %41, !dbg !4757

; <label>:41:                                     ; preds = %37, %25, %40
  %42 = icmp eq i32 %11, -1, !dbg !4761
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4763
  br i1 %42, label %43, label %47, !dbg !4763

; <label>:43:                                     ; preds = %41
  tail call void @closeChildInfoPipe() #9, !dbg !4764
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !4766, !tbaa !4677
  %44 = tail call i32* @__errno() #9, !dbg !4767
  %45 = load i32, i32* %44, align 4, !dbg !4767, !tbaa !191
  %46 = tail call i8* @strerror(i32 %45) #9, !dbg !4768
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0), i8* %46) #9, !dbg !4769
  br label %49, !dbg !4770

; <label>:47:                                     ; preds = %41
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.44, i64 0, i64 0), i32 %11) #9, !dbg !4771
  %48 = tail call i64 @time(i64* null) #9, !dbg !4772
  store i64 %48, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !4773, !tbaa !4774
  store i32 %11, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !4775, !tbaa !4776
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !4777, !tbaa !4778
  tail call void @updateDictResizePolicy() #9, !dbg !4779
  br label %49, !dbg !4780

; <label>:49:                                     ; preds = %2, %22, %47, %43
  %50 = phi i32 [ 0, %22 ], [ -1, %43 ], [ 0, %47 ], [ -1, %2 ], !dbg !4781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4783
  ret i32 %50, !dbg !4783
}

; Function Attrs: noredzone
declare dso_local void @openChildInfoPipe() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @ustime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fork() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @closeListeningSockets(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @redisSetProcTitle(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @zmalloc_get_private_dirty(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sendChildInfo(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @exitFromChild(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @latencyAddSample(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @closeChildInfoPipe() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @updateDictResizePolicy() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @rdbRemoveTempFile(i32) local_unnamed_addr #6 !dbg !4784 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0, !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %3) #4, !dbg !4791
  %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %3, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 %0) #9, !dbg !4793
  %5 = call i32 @unlink(i8* nonnull %3) #9, !dbg !4794
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %3) #4, !dbg !4795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4795
  ret void, !dbg !4795
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadCheckModuleValue(%struct._rio*, i8*) local_unnamed_addr #6 !dbg !4796 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca float, align 4
  %6 = alloca double, align 8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4818
  %7 = bitcast i64* %3 to i8*
  %8 = bitcast i64* %4 to i8*
  %9 = bitcast float* %5 to i8*
  %10 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %12 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4
  %13 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  %14 = bitcast double* %6 to i8*
  br label %15, !dbg !4818

; <label>:15:                                     ; preds = %95, %2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4, !dbg !4822
  %16 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %3) #9, !dbg !4824
  %17 = icmp eq i32 %16, -1, !dbg !4825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4826
  br i1 %17, label %18, label %19, !dbg !4826

; <label>:18:                                     ; preds = %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4827
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !4828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4818
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4832
  br label %94, !dbg !4833

; <label>:19:                                     ; preds = %15
  %20 = load i64, i64* %3, align 8, !dbg !4834, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4835
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4, !dbg !4828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4828
  %21 = icmp eq i64 %20, 0, !dbg !4836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4818
  br i1 %21, label %96, label %22, !dbg !4818

; <label>:22:                                     ; preds = %19
  %23 = add i64 %20, -1, !dbg !4830
  %24 = icmp ult i64 %23, 2, !dbg !4830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4830
  br i1 %24, label %25, label %30, !dbg !4830

; <label>:25:                                     ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4, !dbg !4837
  %26 = call i32 @rdbLoadLenByRef(%struct._rio* %0, i32* null, i64* nonnull %4) #11, !dbg !4839
  %27 = icmp eq i32 %26, -1, !dbg !4841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4842
  br i1 %27, label %28, label %29, !dbg !4842

; <label>:28:                                     ; preds = %25
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1399, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45, i64 0, i64 0), i8* %1) #11, !dbg !4843
  unreachable

; <label>:29:                                     ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4, !dbg !4845
  br label %94, !dbg !4846

; <label>:30:                                     ; preds = %22
  %31 = icmp eq i64 %20, 5, !dbg !4847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4831
  br i1 %31, label %32, label %38, !dbg !4831

; <label>:32:                                     ; preds = %30
  %33 = call i8* @rdbGenericLoadStringObject(%struct._rio* %0, i32 0, i64* null) #11, !dbg !4848
  %34 = icmp eq i8* %33, null, !dbg !4849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4851
  br i1 %34, label %35, label %36, !dbg !4851

; <label>:35:                                     ; preds = %32
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1405, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.46, i64 0, i64 0), i8* %1) #11, !dbg !4852
  unreachable

; <label>:36:                                     ; preds = %32
  %37 = bitcast i8* %33 to %struct.redisObject*, !dbg !4848
  call void @decrRefCount(%struct.redisObject* %37) #9, !dbg !4855
  br label %94, !dbg !4856

; <label>:38:                                     ; preds = %30
  %39 = icmp eq i64 %20, 3, !dbg !4857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4832
  br i1 %39, label %40, label %66, !dbg !4832

; <label>:40:                                     ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #4, !dbg !4858
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4868
  br label %41, !dbg !4868

; <label>:41:                                     ; preds = %58, %40
  %42 = phi i64 [ 4, %40 ], [ %60, %58 ]
  %43 = phi i8* [ %9, %40 ], [ %59, %58 ]
  %44 = load i64, i64* %10, align 8, !dbg !4869, !tbaa !506
  %45 = icmp eq i64 %44, 0, !dbg !4870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4871
  br i1 %45, label %48, label %46, !dbg !4871

; <label>:46:                                     ; preds = %41
  %47 = icmp ult i64 %44, %42, !dbg !4872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4873
  br i1 %47, label %49, label %48, !dbg !4873

; <label>:48:                                     ; preds = %46, %41
  br label %49, !dbg !4873

; <label>:49:                                     ; preds = %46, %48
  %50 = phi i64 [ %42, %48 ], [ %44, %46 ], !dbg !4873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4873
  %51 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4875, !tbaa !515
  %52 = call i64 %51(%struct._rio* nonnull %0, i8* %43, i64 %50) #9, !dbg !4876
  %53 = icmp eq i64 %52, 0, !dbg !4877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4878
  br i1 %53, label %64, label %54, !dbg !4878

; <label>:54:                                     ; preds = %49
  %55 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %12, align 8, !dbg !4879, !tbaa !521
  %56 = icmp eq void (%struct._rio*, i8*, i64)* %55, null, !dbg !4880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4881
  br i1 %56, label %58, label %57, !dbg !4881

; <label>:57:                                     ; preds = %54
  call void %55(%struct._rio* nonnull %0, i8* %43, i64 %50) #9, !dbg !4882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4882
  br label %58, !dbg !4882

; <label>:58:                                     ; preds = %57, %54
  %59 = getelementptr inbounds i8, i8* %43, i64 %50, !dbg !4883
  %60 = sub i64 %42, %50, !dbg !4884
  %61 = load i64, i64* %13, align 8, !dbg !4885, !tbaa !528
  %62 = add i64 %61, %50, !dbg !4885
  store i64 %62, i64* %13, align 8, !dbg !4885, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4886
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %63 = icmp eq i64 %60, 0, !dbg !4868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4868
  br i1 %63, label %65, label %41, !dbg !4868

; <label>:64:                                     ; preds = %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4887
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4892
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1412, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.47, i64 0, i64 0), i8* %1) #11, !dbg !4893
  unreachable

; <label>:65:                                     ; preds = %58
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4895
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4890
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4892
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #4, !dbg !4896
  br label %94, !dbg !4897

; <label>:66:                                     ; preds = %38
  %67 = icmp eq i64 %20, 4, !dbg !4898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4833
  br i1 %67, label %68, label %95, !dbg !4833

; <label>:68:                                     ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4, !dbg !4899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4909
  br label %69, !dbg !4909

; <label>:69:                                     ; preds = %86, %68
  %70 = phi i64 [ 8, %68 ], [ %88, %86 ]
  %71 = phi i8* [ %14, %68 ], [ %87, %86 ]
  %72 = load i64, i64* %10, align 8, !dbg !4910, !tbaa !506
  %73 = icmp eq i64 %72, 0, !dbg !4911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4912
  br i1 %73, label %76, label %74, !dbg !4912

; <label>:74:                                     ; preds = %69
  %75 = icmp ult i64 %72, %70, !dbg !4913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4914
  br i1 %75, label %77, label %76, !dbg !4914

; <label>:76:                                     ; preds = %74, %69
  br label %77, !dbg !4914

; <label>:77:                                     ; preds = %74, %76
  %78 = phi i64 [ %70, %76 ], [ %72, %74 ], !dbg !4914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4914
  %79 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %11, align 8, !dbg !4916, !tbaa !515
  %80 = call i64 %79(%struct._rio* nonnull %0, i8* %71, i64 %78) #9, !dbg !4917
  %81 = icmp eq i64 %80, 0, !dbg !4918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4919
  br i1 %81, label %92, label %82, !dbg !4919

; <label>:82:                                     ; preds = %77
  %83 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %12, align 8, !dbg !4920, !tbaa !521
  %84 = icmp eq void (%struct._rio*, i8*, i64)* %83, null, !dbg !4921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4922
  br i1 %84, label %86, label %85, !dbg !4922

; <label>:85:                                     ; preds = %82
  call void %83(%struct._rio* nonnull %0, i8* %71, i64 %78) #9, !dbg !4923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4923
  br label %86, !dbg !4923

; <label>:86:                                     ; preds = %85, %82
  %87 = getelementptr inbounds i8, i8* %71, i64 %78, !dbg !4924
  %88 = sub i64 %70, %78, !dbg !4925
  %89 = load i64, i64* %13, align 8, !dbg !4926, !tbaa !528
  %90 = add i64 %89, %78, !dbg !4926
  store i64 %90, i64* %13, align 8, !dbg !4926, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4927
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %91 = icmp eq i64 %88, 0, !dbg !4909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4909
  br i1 %91, label %93, label %69, !dbg !4909

; <label>:92:                                     ; preds = %77
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4928
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4933
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1418, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.48, i64 0, i64 0), i8* %1) #11, !dbg !4934
  unreachable

; <label>:93:                                     ; preds = %86
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4936
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4933
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4, !dbg !4937
  br label %94, !dbg !4938

; <label>:94:                                     ; preds = %29, %65, %93, %36, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4939
  br label %95, !dbg !4818

; <label>:95:                                     ; preds = %94, %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4818
  br label %15, !dbg !4818, !llvm.loop !4940

; <label>:96:                                     ; preds = %19
  %97 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), i64 18) #9, !dbg !4942
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4943
  ret %struct.redisObject* %97, !dbg !4943
}

; Function Attrs: noredzone nounwind
define dso_local %struct.redisObject* @rdbLoadObject(i32, %struct._rio*, %struct.redisObject*) local_unnamed_addr #6 !dbg !4944 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca double, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %struct.streamID, align 8
  %31 = alloca [16 x i8], align 16
  %32 = alloca [16 x i8], align 16
  %33 = alloca [10 x i8], align 1
  %34 = alloca %struct.RedisModuleIO, align 8
  %35 = icmp eq i32 %0, 0, !dbg !5041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5042
  br i1 %35, label %36, label %42, !dbg !5042

; <label>:36:                                     ; preds = %3
  %37 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 1, i64* null) #9, !dbg !5047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5048
  %38 = icmp eq i8* %37, null, !dbg !5049
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5050
  br i1 %38, label %923, label %39, !dbg !5050

; <label>:39:                                     ; preds = %36
  %40 = bitcast i8* %37 to %struct.redisObject*, !dbg !5047
  %41 = tail call %struct.redisObject* @tryObjectEncoding(%struct.redisObject* nonnull %40) #9, !dbg !5051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5052
  br label %923, !dbg !5052

; <label>:42:                                     ; preds = %3
  %43 = icmp eq i32 %0, 1, !dbg !5053
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5054
  br i1 %43, label %44, label %99, !dbg !5054

; <label>:44:                                     ; preds = %42
  %45 = bitcast i64* %23 to i8*, !dbg !5059
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #4, !dbg !5059
  %46 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %23) #9, !dbg !5061
  %47 = icmp eq i32 %46, -1, !dbg !5062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5063
  br i1 %47, label %48, label %49, !dbg !5063

; <label>:48:                                     ; preds = %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5064
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #4, !dbg !5065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5067
  br label %923, !dbg !5067

; <label>:49:                                     ; preds = %44
  %50 = load i64, i64* %23, align 8, !dbg !5068, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5069
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #4, !dbg !5065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5065
  %51 = icmp eq i64 %50, -1, !dbg !5070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5067
  br i1 %51, label %923, label %52, !dbg !5067

; <label>:52:                                     ; preds = %49
  %53 = tail call %struct.redisObject* @createQuicklistObject() #9, !dbg !5071
  %54 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %53, i64 0, i32 2, !dbg !5072
  %55 = bitcast i8** %54 to %struct.quicklist**, !dbg !5072
  %56 = load %struct.quicklist*, %struct.quicklist** %55, align 8, !dbg !5072, !tbaa !2111
  %57 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !5073, !tbaa !5074
  %58 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !5075, !tbaa !5076
  tail call void @quicklistSetOptions(%struct.quicklist* %56, i32 %57, i32 %58) #9, !dbg !5077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5078
  %59 = icmp eq i64 %50, 0, !dbg !5078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5078
  br i1 %59, label %923, label %60, !dbg !5078

; <label>:60:                                     ; preds = %52, %94
  %61 = phi i64 [ %62, %94 ], [ %50, %52 ]
  %62 = add i64 %61, -1, !dbg !5079
  %63 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 1, i64* null) #9, !dbg !5083
  %64 = bitcast i8* %63 to %struct.redisObject*, !dbg !5083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5084
  %65 = icmp eq i8* %63, null, !dbg !5086
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5087
  br i1 %65, label %923, label %66, !dbg !5087

; <label>:66:                                     ; preds = %60
  %67 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* nonnull %64) #9, !dbg !5088
  %68 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %67, i64 0, i32 2, !dbg !5090
  %69 = load i8*, i8** %68, align 8, !dbg !5090, !tbaa !2111
  %70 = getelementptr inbounds i8, i8* %69, i64 -1, !dbg !5093
  %71 = load i8, i8* %70, align 1, !dbg !5093, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5095
  %72 = trunc i8 %71 to i3, !dbg !5095
  switch i3 %72, label %94 [
    i3 0, label %73
    i3 1, label %76
    i3 2, label %80
    i3 3, label %85
    i3 -4, label %90
  ], !dbg !5095

; <label>:73:                                     ; preds = %66
  %74 = lshr i8 %71, 3, !dbg !5096
  %75 = zext i8 %74 to i64, !dbg !5096
  br label %94, !dbg !5097

; <label>:76:                                     ; preds = %66
  %77 = getelementptr inbounds i8, i8* %69, i64 -3, !dbg !5098
  %78 = load i8, i8* %77, align 1, !dbg !5099, !tbaa !545
  %79 = zext i8 %78 to i64, !dbg !5098
  br label %94, !dbg !5100

; <label>:80:                                     ; preds = %66
  %81 = getelementptr inbounds i8, i8* %69, i64 -5, !dbg !5101
  %82 = bitcast i8* %81 to i16*, !dbg !5102
  %83 = load i16, i16* %82, align 1, !dbg !5102, !tbaa !2138
  %84 = zext i16 %83 to i64, !dbg !5101
  br label %94, !dbg !5103

; <label>:85:                                     ; preds = %66
  %86 = getelementptr inbounds i8, i8* %69, i64 -9, !dbg !5104
  %87 = bitcast i8* %86 to i32*, !dbg !5105
  %88 = load i32, i32* %87, align 1, !dbg !5105, !tbaa !191
  %89 = zext i32 %88 to i64, !dbg !5104
  br label %94, !dbg !5106

; <label>:90:                                     ; preds = %66
  %91 = getelementptr inbounds i8, i8* %69, i64 -17, !dbg !5107
  %92 = bitcast i8* %91 to i64*, !dbg !5108
  %93 = load i64, i64* %92, align 1, !dbg !5108, !tbaa !674
  br label %94, !dbg !5109

; <label>:94:                                     ; preds = %66, %73, %76, %80, %85, %90
  %95 = phi i64 [ %93, %90 ], [ %89, %85 ], [ %84, %80 ], [ %79, %76 ], [ %75, %73 ], [ 0, %66 ], !dbg !5110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5112
  %96 = load %struct.quicklist*, %struct.quicklist** %55, align 8, !dbg !5114, !tbaa !2111
  %97 = tail call i32 @quicklistPushTail(%struct.quicklist* %96, i8* %69, i64 %95) #9, !dbg !5115
  tail call void @decrRefCount(%struct.redisObject* %67) #9, !dbg !5116
  tail call void @decrRefCount(%struct.redisObject* nonnull %64) #9, !dbg !5117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5078
  %98 = icmp eq i64 %62, 0, !dbg !5078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5078
  br i1 %98, label %923, label %60, !dbg !5078, !llvm.loop !5118

; <label>:99:                                     ; preds = %42
  %100 = icmp eq i32 %0, 2, !dbg !5120
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5121
  br i1 %100, label %101, label %163, !dbg !5121

; <label>:101:                                    ; preds = %99
  %102 = bitcast i64* %22 to i8*, !dbg !5126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #4, !dbg !5126
  %103 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %22) #9, !dbg !5128
  %104 = icmp eq i32 %103, -1, !dbg !5129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5130
  br i1 %104, label %105, label %106, !dbg !5130

; <label>:105:                                    ; preds = %101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #4, !dbg !5132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5133
  br label %923, !dbg !5133

; <label>:106:                                    ; preds = %101
  %107 = load i64, i64* %22, align 8, !dbg !5134, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #4, !dbg !5132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5132
  %108 = icmp eq i64 %107, -1, !dbg !5136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5133
  br i1 %108, label %923, label %109, !dbg !5133

; <label>:109:                                    ; preds = %106
  %110 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 243), align 8, !dbg !5137, !tbaa !5139
  %111 = icmp ugt i64 %107, %110, !dbg !5140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5141
  br i1 %111, label %112, label %121, !dbg !5141

; <label>:112:                                    ; preds = %109
  %113 = tail call %struct.redisObject* @createSetObject() #9, !dbg !5142
  %114 = icmp ugt i64 %107, 4, !dbg !5144
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5146
  br i1 %114, label %115, label %120, !dbg !5146

; <label>:115:                                    ; preds = %112
  %116 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %113, i64 0, i32 2, !dbg !5147
  %117 = bitcast i8** %116 to %struct.dict**, !dbg !5147
  %118 = load %struct.dict*, %struct.dict** %117, align 8, !dbg !5147, !tbaa !2111
  %119 = tail call i32 @dictExpand(%struct.dict* %118, i64 %107) #9, !dbg !5148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5148
  br label %120, !dbg !5148

; <label>:120:                                    ; preds = %112, %115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5151
  br label %124, !dbg !5151

; <label>:121:                                    ; preds = %109
  %122 = tail call %struct.redisObject* @createIntsetObject() #9, !dbg !5152
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5150
  %123 = icmp eq i64 %107, 0, !dbg !5154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5151
  br i1 %123, label %923, label %124, !dbg !5151

; <label>:124:                                    ; preds = %120, %121
  %125 = phi %struct.redisObject* [ %113, %120 ], [ %122, %121 ]
  %126 = bitcast i64* %24 to i8*
  %127 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %125, i64 0, i32 0
  %128 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %125, i64 0, i32 2
  %129 = bitcast i8** %128 to %struct.intset**
  %130 = bitcast i8** %128 to %struct.dict**
  br label %131, !dbg !5151

; <label>:131:                                    ; preds = %124, %159
  %132 = phi i32 [ 0, %124 ], [ %160, %159 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #4, !dbg !5155
  %133 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5156
  %134 = icmp eq i8* %133, null, !dbg !5159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5160
  br i1 %134, label %135, label %136, !dbg !5160

; <label>:135:                                    ; preds = %131
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #4, !dbg !5162
  br label %923

; <label>:136:                                    ; preds = %131
  %137 = load i32, i32* %127, align 8, !dbg !5163
  %138 = and i32 %137, 240, !dbg !5163
  %139 = icmp eq i32 %138, 96, !dbg !5165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5166
  br i1 %139, label %140, label %151, !dbg !5166

; <label>:140:                                    ; preds = %136
  %141 = call i32 @isSdsRepresentableAsLongLong(i8* nonnull %133, i64* nonnull %24) #9, !dbg !5168
  %142 = icmp eq i32 %141, 0, !dbg !5171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5172
  br i1 %142, label %143, label %147, !dbg !5172

; <label>:143:                                    ; preds = %140
  %144 = load %struct.intset*, %struct.intset** %129, align 8, !dbg !5173, !tbaa !2111
  %145 = load i64, i64* %24, align 8, !dbg !5175, !tbaa !5176
  %146 = call %struct.intset* @intsetAdd(%struct.intset* %144, i64 %145, i8* null) #9, !dbg !5177
  store %struct.intset* %146, %struct.intset** %129, align 8, !dbg !5178, !tbaa !2111
  br label %150, !dbg !5179

; <label>:147:                                    ; preds = %140
  call void @setTypeConvert(%struct.redisObject* nonnull %125, i32 2) #9, !dbg !5180
  %148 = load %struct.dict*, %struct.dict** %130, align 8, !dbg !5182, !tbaa !2111
  %149 = call i32 @dictExpand(%struct.dict* %148, i64 %107) #9, !dbg !5183
  br label %150

; <label>:150:                                    ; preds = %147, %143
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %151, !dbg !5184

; <label>:151:                                    ; preds = %150, %136
  %152 = load i32, i32* %127, align 8, !dbg !5184
  %153 = and i32 %152, 240, !dbg !5184
  %154 = icmp eq i32 %153, 32, !dbg !5186
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5187
  br i1 %154, label %155, label %158, !dbg !5187

; <label>:155:                                    ; preds = %151
  %156 = load %struct.dict*, %struct.dict** %130, align 8, !dbg !5188, !tbaa !2111
  %157 = call i32 @dictAdd(%struct.dict* %156, i8* nonnull %133, i8* null) #9, !dbg !5190
  br label %159, !dbg !5191

; <label>:158:                                    ; preds = %151
  call void @sdsfree(i8* nonnull %133) #9, !dbg !5192
  br label %159

; <label>:159:                                    ; preds = %158, %155
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #4, !dbg !5162
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %160 = add i32 %132, 1, !dbg !5194
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5195
  %161 = zext i32 %160 to i64, !dbg !5196
  %162 = icmp ugt i64 %107, %161, !dbg !5154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5151
  br i1 %162, label %131, label %923, !dbg !5151, !llvm.loop !5197

; <label>:163:                                    ; preds = %99
  %164 = icmp eq i32 %0, 5, !dbg !5199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5200
  switch i32 %0, label %304 [
    i32 5, label %165
    i32 3, label %165
  ], !dbg !5200

; <label>:165:                                    ; preds = %163, %163
  %166 = bitcast i64* %21 to i8*, !dbg !5206
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #4, !dbg !5206
  %167 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %21) #9, !dbg !5208
  %168 = icmp eq i32 %167, -1, !dbg !5209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5210
  br i1 %168, label %169, label %170, !dbg !5210

; <label>:169:                                    ; preds = %165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5211
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #4, !dbg !5212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5214
  br label %302, !dbg !5214

; <label>:170:                                    ; preds = %165
  %171 = load i64, i64* %21, align 8, !dbg !5215, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #4, !dbg !5212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5212
  %172 = icmp eq i64 %171, -1, !dbg !5217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5214
  br i1 %172, label %302, label %173, !dbg !5214

; <label>:173:                                    ; preds = %170
  %174 = tail call %struct.redisObject* @createZsetObject() #9, !dbg !5218
  %175 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %174, i64 0, i32 2, !dbg !5219
  %176 = bitcast i8** %175 to %struct.zset**, !dbg !5219
  %177 = load %struct.zset*, %struct.zset** %176, align 8, !dbg !5219, !tbaa !2111
  %178 = icmp ugt i64 %171, 4, !dbg !5221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5223
  br i1 %178, label %179, label %183, !dbg !5223

; <label>:179:                                    ; preds = %173
  %180 = getelementptr inbounds %struct.zset, %struct.zset* %177, i64 0, i32 0, !dbg !5224
  %181 = load %struct.dict*, %struct.dict** %180, align 8, !dbg !5224, !tbaa !5225
  %182 = tail call i32 @dictExpand(%struct.dict* %181, i64 %171) #9, !dbg !5226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  br label %185, !dbg !5227

; <label>:183:                                    ; preds = %173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  %184 = icmp eq i64 %171, 0, !dbg !5227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  br i1 %184, label %293, label %185, !dbg !5227

; <label>:185:                                    ; preds = %179, %183
  %186 = bitcast double* %25 to i8*
  %187 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 7
  %188 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 0
  %189 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 4
  %190 = getelementptr inbounds %struct._rio, %struct._rio* %1, i64 0, i32 6
  %191 = getelementptr inbounds %struct.zset, %struct.zset* %177, i64 0, i32 1
  %192 = getelementptr inbounds %struct.zset, %struct.zset* %177, i64 0, i32 0
  br label %193, !dbg !5227

; <label>:193:                                    ; preds = %185, %283
  %194 = phi i64 [ %171, %185 ], [ %196, %283 ]
  %195 = phi i64 [ 0, %185 ], [ %284, %283 ]
  %196 = add i64 %194, -1, !dbg !5228
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #4, !dbg !5229
  %197 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5230
  %198 = icmp eq i8* %197, null, !dbg !5233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5235
  br i1 %198, label %280, label %199, !dbg !5234

; <label>:199:                                    ; preds = %193
  br i1 %164, label %200, label %226, !dbg !5237

; <label>:200:                                    ; preds = %199
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5248
  br label %201, !dbg !5248

; <label>:201:                                    ; preds = %218, %200
  %202 = phi i64 [ 8, %200 ], [ %220, %218 ]
  %203 = phi i8* [ %186, %200 ], [ %219, %218 ]
  %204 = load i64, i64* %187, align 8, !dbg !5249, !tbaa !506
  %205 = icmp eq i64 %204, 0, !dbg !5250
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5251
  br i1 %205, label %208, label %206, !dbg !5251

; <label>:206:                                    ; preds = %201
  %207 = icmp ult i64 %204, %202, !dbg !5252
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5253
  br i1 %207, label %209, label %208, !dbg !5253

; <label>:208:                                    ; preds = %206, %201
  br label %209, !dbg !5253

; <label>:209:                                    ; preds = %206, %208
  %210 = phi i64 [ %202, %208 ], [ %204, %206 ], !dbg !5253
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5253
  %211 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %188, align 8, !dbg !5255, !tbaa !515
  %212 = call i64 %211(%struct._rio* nonnull %1, i8* %203, i64 %210) #9, !dbg !5256
  %213 = icmp eq i64 %212, 0, !dbg !5257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5258
  br i1 %213, label %225, label %214, !dbg !5258

; <label>:214:                                    ; preds = %209
  %215 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %189, align 8, !dbg !5259, !tbaa !521
  %216 = icmp eq void (%struct._rio*, i8*, i64)* %215, null, !dbg !5260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5261
  br i1 %216, label %218, label %217, !dbg !5261

; <label>:217:                                    ; preds = %214
  call void %215(%struct._rio* nonnull %1, i8* %203, i64 %210) #9, !dbg !5262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5262
  br label %218, !dbg !5262

; <label>:218:                                    ; preds = %217, %214
  %219 = getelementptr inbounds i8, i8* %203, i64 %210, !dbg !5263
  %220 = sub i64 %202, %210, !dbg !5264
  %221 = load i64, i64* %190, align 8, !dbg !5265, !tbaa !528
  %222 = add i64 %221, %210, !dbg !5265
  store i64 %222, i64* %190, align 8, !dbg !5265, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5266
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %223 = icmp eq i64 %220, 0, !dbg !5248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5248
  br i1 %223, label %224, label %201, !dbg !5248

; <label>:224:                                    ; preds = %218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5267
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5269
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5272
  br label %229, !dbg !5272

; <label>:225:                                    ; preds = %209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5273
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5269
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5272
  br label %279, !dbg !5274

; <label>:226:                                    ; preds = %199
  %227 = call i32 @rdbLoadDoubleValue(%struct._rio* %1, double* nonnull %25) #11, !dbg !5275
  %228 = icmp eq i32 %227, -1, !dbg !5278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5279
  br i1 %228, label %279, label %229, !dbg !5279

; <label>:229:                                    ; preds = %224, %226
  %230 = getelementptr inbounds i8, i8* %197, i64 -1, !dbg !5283
  %231 = load i8, i8* %230, align 1, !dbg !5283, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5285
  %232 = trunc i8 %231 to i3, !dbg !5285
  switch i3 %232, label %281 [
    i3 0, label %233
    i3 1, label %236
    i3 2, label %240
    i3 3, label %245
    i3 -4, label %250
  ], !dbg !5285

; <label>:233:                                    ; preds = %229
  %234 = lshr i8 %231, 3, !dbg !5286
  %235 = zext i8 %234 to i64, !dbg !5286
  br label %254, !dbg !5287

; <label>:236:                                    ; preds = %229
  %237 = getelementptr inbounds i8, i8* %197, i64 -3, !dbg !5288
  %238 = load i8, i8* %237, align 1, !dbg !5289, !tbaa !545
  %239 = zext i8 %238 to i64, !dbg !5288
  br label %254, !dbg !5290

; <label>:240:                                    ; preds = %229
  %241 = getelementptr inbounds i8, i8* %197, i64 -5, !dbg !5291
  %242 = bitcast i8* %241 to i16*, !dbg !5292
  %243 = load i16, i16* %242, align 1, !dbg !5292, !tbaa !2138
  %244 = zext i16 %243 to i64, !dbg !5291
  br label %254, !dbg !5293

; <label>:245:                                    ; preds = %229
  %246 = getelementptr inbounds i8, i8* %197, i64 -9, !dbg !5294
  %247 = bitcast i8* %246 to i32*, !dbg !5295
  %248 = load i32, i32* %247, align 1, !dbg !5295, !tbaa !191
  %249 = zext i32 %248 to i64, !dbg !5294
  br label %254, !dbg !5296

; <label>:250:                                    ; preds = %229
  %251 = getelementptr inbounds i8, i8* %197, i64 -17, !dbg !5297
  %252 = bitcast i8* %251 to i64*, !dbg !5298
  %253 = load i64, i64* %252, align 1, !dbg !5298, !tbaa !674
  br label %254, !dbg !5299

; <label>:254:                                    ; preds = %233, %236, %240, %245, %250
  %255 = phi i64 [ %253, %250 ], [ %249, %245 ], [ %244, %240 ], [ %239, %236 ], [ %235, %233 ], !dbg !5300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5301
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5302
  %256 = icmp ugt i64 %255, %195, !dbg !5303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5304
  br i1 %256, label %257, label %283, !dbg !5304

; <label>:257:                                    ; preds = %254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5308
  switch i3 %232, label %281 [
    i3 0, label %258
    i3 1, label %261
    i3 2, label %265
    i3 3, label %270
    i3 -4, label %275
  ], !dbg !5308

; <label>:258:                                    ; preds = %257
  %259 = lshr i8 %231, 3, !dbg !5309
  %260 = zext i8 %259 to i64, !dbg !5309
  br label %281, !dbg !5310

; <label>:261:                                    ; preds = %257
  %262 = getelementptr inbounds i8, i8* %197, i64 -3, !dbg !5311
  %263 = load i8, i8* %262, align 1, !dbg !5312, !tbaa !545
  %264 = zext i8 %263 to i64, !dbg !5311
  br label %281, !dbg !5313

; <label>:265:                                    ; preds = %257
  %266 = getelementptr inbounds i8, i8* %197, i64 -5, !dbg !5314
  %267 = bitcast i8* %266 to i16*, !dbg !5315
  %268 = load i16, i16* %267, align 1, !dbg !5315, !tbaa !2138
  %269 = zext i16 %268 to i64, !dbg !5314
  br label %281, !dbg !5316

; <label>:270:                                    ; preds = %257
  %271 = getelementptr inbounds i8, i8* %197, i64 -9, !dbg !5317
  %272 = bitcast i8* %271 to i32*, !dbg !5318
  %273 = load i32, i32* %272, align 1, !dbg !5318, !tbaa !191
  %274 = zext i32 %273 to i64, !dbg !5317
  br label %281, !dbg !5319

; <label>:275:                                    ; preds = %257
  %276 = getelementptr inbounds i8, i8* %197, i64 -17, !dbg !5320
  %277 = bitcast i8* %276 to i64*, !dbg !5321
  %278 = load i64, i64* %277, align 1, !dbg !5321, !tbaa !674
  br label %281, !dbg !5322

; <label>:279:                                    ; preds = %226, %225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5323
  br label %280, !dbg !5324

; <label>:280:                                    ; preds = %193, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #4, !dbg !5324
  br label %302

; <label>:281:                                    ; preds = %275, %270, %265, %261, %258, %257, %229
  %282 = phi i64 [ %195, %229 ], [ %278, %275 ], [ %274, %270 ], [ %269, %265 ], [ %264, %261 ], [ %260, %258 ], [ 0, %257 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5301
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5235
  br label %283, !dbg !5326

; <label>:283:                                    ; preds = %281, %254
  %284 = phi i64 [ %195, %254 ], [ %282, %281 ], !dbg !5327
  %285 = load %struct.zskiplist*, %struct.zskiplist** %191, align 8, !dbg !5326, !tbaa !3384
  %286 = load double, double* %25, align 8, !dbg !5328, !tbaa !2444
  %287 = call %struct.zskiplistNode* @zslInsert(%struct.zskiplist* %285, double %286, i8* nonnull %197) #9, !dbg !5329
  %288 = load %struct.dict*, %struct.dict** %192, align 8, !dbg !5331, !tbaa !5225
  %289 = getelementptr inbounds %struct.zskiplistNode, %struct.zskiplistNode* %287, i64 0, i32 1, !dbg !5332
  %290 = bitcast double* %289 to i8*, !dbg !5333
  %291 = call i32 @dictAdd(%struct.dict* %288, i8* nonnull %197, i8* nonnull %290) #9, !dbg !5334
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5324
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #4, !dbg !5324
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %292 = icmp eq i64 %196, 0, !dbg !5227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5227
  br i1 %292, label %293, label %193, !dbg !5227

; <label>:293:                                    ; preds = %283, %183
  %294 = phi i64 [ 0, %183 ], [ %284, %283 ], !dbg !5201
  %295 = call i64 @zsetLength(%struct.redisObject* %174) #9, !dbg !5335
  %296 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 244), align 8, !dbg !5337, !tbaa !5338
  %297 = icmp ugt i64 %295, %296, !dbg !5339
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5340
  br i1 %297, label %303, label %298, !dbg !5340

; <label>:298:                                    ; preds = %293
  %299 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 245), align 8, !dbg !5341, !tbaa !5342
  %300 = icmp ugt i64 %294, %299, !dbg !5343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5344
  br i1 %300, label %303, label %301, !dbg !5344

; <label>:301:                                    ; preds = %298
  call void @zsetConvert(%struct.redisObject* %174, i32 5) #9, !dbg !5345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5345
  br label %303, !dbg !5345

; <label>:302:                                    ; preds = %170, %169, %280
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:303:                                    ; preds = %301, %293, %298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5346
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:304:                                    ; preds = %163
  %305 = icmp eq i32 %0, 4, !dbg !5347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5348
  br i1 %305, label %306, label %507, !dbg !5348

; <label>:306:                                    ; preds = %304
  %307 = bitcast i64* %19 to i8*, !dbg !5352
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %307) #4, !dbg !5352
  %308 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %19) #9, !dbg !5354
  %309 = icmp eq i32 %308, -1, !dbg !5355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5356
  br i1 %309, label %310, label %311, !dbg !5356

; <label>:310:                                    ; preds = %306
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #4, !dbg !5358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5360
  br label %505, !dbg !5360

; <label>:311:                                    ; preds = %306
  %312 = load i64, i64* %19, align 8, !dbg !5361, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %307) #4, !dbg !5358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5358
  %313 = icmp eq i64 %312, -1, !dbg !5363
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5360
  br i1 %313, label %505, label %314, !dbg !5360

; <label>:314:                                    ; preds = %311
  %315 = tail call %struct.redisObject* @createHashObject() #9, !dbg !5365
  %316 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241), align 8, !dbg !5366, !tbaa !5368
  %317 = icmp ugt i64 %312, %316, !dbg !5369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5370
  br i1 %317, label %318, label %319, !dbg !5370

; <label>:318:                                    ; preds = %314
  tail call void @hashTypeConvert(%struct.redisObject* %315, i32 2) #9, !dbg !5371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5371
  br label %319, !dbg !5371

; <label>:319:                                    ; preds = %318, %314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5372
  %320 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %315, i64 0, i32 0, !dbg !5373
  %321 = load i32, i32* %320, align 8, !dbg !5373
  %322 = and i32 %321, 240, !dbg !5373
  %323 = icmp eq i32 %322, 80, !dbg !5374
  %324 = icmp ne i64 %312, 0, !dbg !5375
  %325 = and i1 %324, %323, !dbg !5376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5372
  br i1 %325, label %326, label %460, !dbg !5372

; <label>:326:                                    ; preds = %319
  %327 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %315, i64 0, i32 2
  br label %328, !dbg !5372

; <label>:328:                                    ; preds = %326, %454
  %329 = phi i64 [ %312, %326 ], [ %330, %454 ]
  %330 = add i64 %329, -1, !dbg !5377
  %331 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5379
  %332 = icmp eq i8* %331, null, !dbg !5382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5383
  br i1 %332, label %505, label %333, !dbg !5383

; <label>:333:                                    ; preds = %328
  %334 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5384
  %335 = icmp eq i8* %334, null, !dbg !5387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5388
  br i1 %335, label %505, label %336, !dbg !5388

; <label>:336:                                    ; preds = %333
  %337 = load i8*, i8** %327, align 8, !dbg !5389, !tbaa !2111
  %338 = getelementptr inbounds i8, i8* %331, i64 -1, !dbg !5392
  %339 = load i8, i8* %338, align 1, !dbg !5392, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5394
  %340 = trunc i8 %339 to i3, !dbg !5394
  switch i3 %340, label %362 [
    i3 0, label %341
    i3 1, label %344
    i3 2, label %348
    i3 3, label %353
    i3 -4, label %358
  ], !dbg !5394

; <label>:341:                                    ; preds = %336
  %342 = lshr i8 %339, 3, !dbg !5395
  %343 = zext i8 %342 to i64, !dbg !5395
  br label %362, !dbg !5396

; <label>:344:                                    ; preds = %336
  %345 = getelementptr inbounds i8, i8* %331, i64 -3, !dbg !5397
  %346 = load i8, i8* %345, align 1, !dbg !5398, !tbaa !545
  %347 = zext i8 %346 to i64, !dbg !5397
  br label %362, !dbg !5399

; <label>:348:                                    ; preds = %336
  %349 = getelementptr inbounds i8, i8* %331, i64 -5, !dbg !5400
  %350 = bitcast i8* %349 to i16*, !dbg !5401
  %351 = load i16, i16* %350, align 1, !dbg !5401, !tbaa !2138
  %352 = zext i16 %351 to i64, !dbg !5400
  br label %362, !dbg !5402

; <label>:353:                                    ; preds = %336
  %354 = getelementptr inbounds i8, i8* %331, i64 -9, !dbg !5403
  %355 = bitcast i8* %354 to i32*, !dbg !5404
  %356 = load i32, i32* %355, align 1, !dbg !5404, !tbaa !191
  %357 = zext i32 %356 to i64, !dbg !5403
  br label %362, !dbg !5405

; <label>:358:                                    ; preds = %336
  %359 = getelementptr inbounds i8, i8* %331, i64 -17, !dbg !5406
  %360 = bitcast i8* %359 to i64*, !dbg !5407
  %361 = load i64, i64* %360, align 1, !dbg !5407, !tbaa !674
  br label %362, !dbg !5408

; <label>:362:                                    ; preds = %336, %341, %344, %348, %353, %358
  %363 = phi i64 [ %361, %358 ], [ %357, %353 ], [ %352, %348 ], [ %347, %344 ], [ %343, %341 ], [ 0, %336 ], !dbg !5409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5411
  %364 = trunc i64 %363 to i32, !dbg !5412
  %365 = tail call i8* @ziplistPush(i8* %337, i8* nonnull %331, i32 %364, i32 1) #9, !dbg !5413
  store i8* %365, i8** %327, align 8, !dbg !5414, !tbaa !2111
  %366 = getelementptr inbounds i8, i8* %334, i64 -1, !dbg !5417
  %367 = load i8, i8* %366, align 1, !dbg !5417, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5419
  %368 = trunc i8 %367 to i3, !dbg !5419
  switch i3 %368, label %390 [
    i3 0, label %369
    i3 1, label %372
    i3 2, label %376
    i3 3, label %381
    i3 -4, label %386
  ], !dbg !5419

; <label>:369:                                    ; preds = %362
  %370 = lshr i8 %367, 3, !dbg !5420
  %371 = zext i8 %370 to i64, !dbg !5420
  br label %390, !dbg !5421

; <label>:372:                                    ; preds = %362
  %373 = getelementptr inbounds i8, i8* %334, i64 -3, !dbg !5422
  %374 = load i8, i8* %373, align 1, !dbg !5423, !tbaa !545
  %375 = zext i8 %374 to i64, !dbg !5422
  br label %390, !dbg !5424

; <label>:376:                                    ; preds = %362
  %377 = getelementptr inbounds i8, i8* %334, i64 -5, !dbg !5425
  %378 = bitcast i8* %377 to i16*, !dbg !5426
  %379 = load i16, i16* %378, align 1, !dbg !5426, !tbaa !2138
  %380 = zext i16 %379 to i64, !dbg !5425
  br label %390, !dbg !5427

; <label>:381:                                    ; preds = %362
  %382 = getelementptr inbounds i8, i8* %334, i64 -9, !dbg !5428
  %383 = bitcast i8* %382 to i32*, !dbg !5429
  %384 = load i32, i32* %383, align 1, !dbg !5429, !tbaa !191
  %385 = zext i32 %384 to i64, !dbg !5428
  br label %390, !dbg !5430

; <label>:386:                                    ; preds = %362
  %387 = getelementptr inbounds i8, i8* %334, i64 -17, !dbg !5431
  %388 = bitcast i8* %387 to i64*, !dbg !5432
  %389 = load i64, i64* %388, align 1, !dbg !5432, !tbaa !674
  br label %390, !dbg !5433

; <label>:390:                                    ; preds = %362, %369, %372, %376, %381, %386
  %391 = phi i64 [ %389, %386 ], [ %385, %381 ], [ %380, %376 ], [ %375, %372 ], [ %371, %369 ], [ 0, %362 ], !dbg !5434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5435
  %392 = trunc i64 %391 to i32, !dbg !5436
  %393 = tail call i8* @ziplistPush(i8* %365, i8* nonnull %334, i32 %392, i32 1) #9, !dbg !5437
  store i8* %393, i8** %327, align 8, !dbg !5438, !tbaa !2111
  %394 = load i8, i8* %338, align 1, !dbg !5442, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5444
  %395 = trunc i8 %394 to i3, !dbg !5444
  switch i3 %395, label %417 [
    i3 0, label %396
    i3 1, label %399
    i3 2, label %403
    i3 3, label %408
    i3 -4, label %413
  ], !dbg !5444

; <label>:396:                                    ; preds = %390
  %397 = lshr i8 %394, 3, !dbg !5445
  %398 = zext i8 %397 to i64, !dbg !5445
  br label %419, !dbg !5446

; <label>:399:                                    ; preds = %390
  %400 = getelementptr inbounds i8, i8* %331, i64 -3, !dbg !5447
  %401 = load i8, i8* %400, align 1, !dbg !5448, !tbaa !545
  %402 = zext i8 %401 to i64, !dbg !5447
  br label %419, !dbg !5449

; <label>:403:                                    ; preds = %390
  %404 = getelementptr inbounds i8, i8* %331, i64 -5, !dbg !5450
  %405 = bitcast i8* %404 to i16*, !dbg !5451
  %406 = load i16, i16* %405, align 1, !dbg !5451, !tbaa !2138
  %407 = zext i16 %406 to i64, !dbg !5450
  br label %419, !dbg !5452

; <label>:408:                                    ; preds = %390
  %409 = getelementptr inbounds i8, i8* %331, i64 -9, !dbg !5453
  %410 = bitcast i8* %409 to i32*, !dbg !5454
  %411 = load i32, i32* %410, align 1, !dbg !5454, !tbaa !191
  %412 = zext i32 %411 to i64, !dbg !5453
  br label %419, !dbg !5455

; <label>:413:                                    ; preds = %390
  %414 = getelementptr inbounds i8, i8* %331, i64 -17, !dbg !5456
  %415 = bitcast i8* %414 to i64*, !dbg !5457
  %416 = load i64, i64* %415, align 1, !dbg !5457, !tbaa !674
  br label %419, !dbg !5458

; <label>:417:                                    ; preds = %390
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5460
  %418 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 242), align 8, !dbg !5461, !tbaa !5462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5463
  br label %423, !dbg !5463

; <label>:419:                                    ; preds = %396, %399, %403, %408, %413
  %420 = phi i64 [ %416, %413 ], [ %412, %408 ], [ %407, %403 ], [ %402, %399 ], [ %398, %396 ], !dbg !5464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5460
  %421 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 242), align 8, !dbg !5461, !tbaa !5462
  %422 = icmp ugt i64 %420, %421, !dbg !5466
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5463
  br i1 %422, label %452, label %423, !dbg !5463

; <label>:423:                                    ; preds = %417, %419
  %424 = phi i64 [ %418, %417 ], [ %421, %419 ]
  %425 = load i8, i8* %366, align 1, !dbg !5469, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5471
  %426 = trunc i8 %425 to i3, !dbg !5471
  switch i3 %426, label %448 [
    i3 0, label %427
    i3 1, label %430
    i3 2, label %434
    i3 3, label %439
    i3 -4, label %444
  ], !dbg !5471

; <label>:427:                                    ; preds = %423
  %428 = lshr i8 %425, 3, !dbg !5472
  %429 = zext i8 %428 to i64, !dbg !5472
  br label %449, !dbg !5473

; <label>:430:                                    ; preds = %423
  %431 = getelementptr inbounds i8, i8* %334, i64 -3, !dbg !5474
  %432 = load i8, i8* %431, align 1, !dbg !5475, !tbaa !545
  %433 = zext i8 %432 to i64, !dbg !5474
  br label %449, !dbg !5476

; <label>:434:                                    ; preds = %423
  %435 = getelementptr inbounds i8, i8* %334, i64 -5, !dbg !5477
  %436 = bitcast i8* %435 to i16*, !dbg !5478
  %437 = load i16, i16* %436, align 1, !dbg !5478, !tbaa !2138
  %438 = zext i16 %437 to i64, !dbg !5477
  br label %449, !dbg !5479

; <label>:439:                                    ; preds = %423
  %440 = getelementptr inbounds i8, i8* %334, i64 -9, !dbg !5480
  %441 = bitcast i8* %440 to i32*, !dbg !5481
  %442 = load i32, i32* %441, align 1, !dbg !5481, !tbaa !191
  %443 = zext i32 %442 to i64, !dbg !5480
  br label %449, !dbg !5482

; <label>:444:                                    ; preds = %423
  %445 = getelementptr inbounds i8, i8* %334, i64 -17, !dbg !5483
  %446 = bitcast i8* %445 to i64*, !dbg !5484
  %447 = load i64, i64* %446, align 1, !dbg !5484, !tbaa !674
  br label %449, !dbg !5485

; <label>:448:                                    ; preds = %423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5488
  br label %454, !dbg !5488

; <label>:449:                                    ; preds = %427, %430, %434, %439, %444
  %450 = phi i64 [ %447, %444 ], [ %443, %439 ], [ %438, %434 ], [ %433, %430 ], [ %429, %427 ], !dbg !5489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5487
  %451 = icmp ugt i64 %450, %424, !dbg !5490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5488
  br i1 %451, label %452, label %454, !dbg !5488

; <label>:452:                                    ; preds = %449, %419
  tail call void @sdsfree(i8* nonnull %331) #9, !dbg !5491
  tail call void @sdsfree(i8* nonnull %334) #9, !dbg !5493
  tail call void @hashTypeConvert(%struct.redisObject* nonnull %315, i32 2) #9, !dbg !5494
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5495
  %453 = load i32, i32* %320, align 8, !dbg !5496
  br label %460, !dbg !5495

; <label>:454:                                    ; preds = %448, %449
  tail call void @sdsfree(i8* nonnull %331) #9, !dbg !5498
  tail call void @sdsfree(i8* nonnull %334) #9, !dbg !5499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5372
  %455 = load i32, i32* %320, align 8, !dbg !5373
  %456 = and i32 %455, 240, !dbg !5373
  %457 = icmp eq i32 %456, 80, !dbg !5374
  %458 = icmp ne i64 %330, 0, !dbg !5375
  %459 = and i1 %458, %457, !dbg !5376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5372
  br i1 %459, label %328, label %460, !dbg !5372, !llvm.loop !5500

; <label>:460:                                    ; preds = %454, %319, %452
  %461 = phi i32 [ %453, %452 ], [ %321, %319 ], [ %455, %454 ], !dbg !5496
  %462 = phi i64 [ %330, %452 ], [ %312, %319 ], [ %330, %454 ], !dbg !5502
  %463 = and i32 %461, 240, !dbg !5496
  %464 = icmp eq i32 %463, 32, !dbg !5503
  %465 = icmp ugt i64 %462, 4, !dbg !5504
  %466 = and i1 %465, %464, !dbg !5505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5505
  br i1 %466, label %467, label %473, !dbg !5505

; <label>:467:                                    ; preds = %460
  %468 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %315, i64 0, i32 2, !dbg !5506
  %469 = bitcast i8** %468 to %struct.dict**, !dbg !5506
  %470 = load %struct.dict*, %struct.dict** %469, align 8, !dbg !5506, !tbaa !2111
  %471 = tail call i32 @dictExpand(%struct.dict* %470, i64 %462) #9, !dbg !5507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5507
  %472 = load i32, i32* %320, align 8, !dbg !5508
  br label %473, !dbg !5507

; <label>:473:                                    ; preds = %467, %460
  %474 = phi i32 [ %472, %467 ], [ %461, %460 ], !dbg !5508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5509
  %475 = and i32 %474, 240, !dbg !5508
  %476 = icmp eq i32 %475, 32, !dbg !5510
  %477 = icmp ne i64 %462, 0, !dbg !5511
  %478 = and i1 %477, %476, !dbg !5512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5509
  br i1 %478, label %479, label %501, !dbg !5509

; <label>:479:                                    ; preds = %473
  %480 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %315, i64 0, i32 2
  %481 = bitcast i8** %480 to %struct.dict**
  br label %482, !dbg !5509

; <label>:482:                                    ; preds = %479, %495
  %483 = phi i64 [ %462, %479 ], [ %484, %495 ]
  %484 = add i64 %483, -1, !dbg !5513
  %485 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5515
  %486 = icmp eq i8* %485, null, !dbg !5517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5518
  br i1 %486, label %505, label %487, !dbg !5518

; <label>:487:                                    ; preds = %482
  %488 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5519
  %489 = icmp eq i8* %488, null, !dbg !5521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5522
  br i1 %489, label %505, label %490, !dbg !5522

; <label>:490:                                    ; preds = %487
  %491 = load %struct.dict*, %struct.dict** %481, align 8, !dbg !5523, !tbaa !2111
  %492 = tail call i32 @dictAdd(%struct.dict* %491, i8* nonnull %485, i8* nonnull %488) #9, !dbg !5524
  %493 = icmp eq i32 %492, 1, !dbg !5526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5528
  br i1 %493, label %494, label %495, !dbg !5528

; <label>:494:                                    ; preds = %490
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1590, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !5529
  unreachable

; <label>:495:                                    ; preds = %490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5509
  %496 = load i32, i32* %320, align 8, !dbg !5508
  %497 = and i32 %496, 240, !dbg !5508
  %498 = icmp eq i32 %497, 32, !dbg !5510
  %499 = icmp ne i64 %484, 0, !dbg !5511
  %500 = and i1 %499, %498, !dbg !5512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5509
  br i1 %500, label %482, label %501, !dbg !5509, !llvm.loop !5531

; <label>:501:                                    ; preds = %495, %473
  %502 = phi i64 [ %462, %473 ], [ %484, %495 ], !dbg !5533
  %503 = icmp eq i64 %502, 0, !dbg !5534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5534
  br i1 %503, label %506, label %504, !dbg !5534

; <label>:504:                                    ; preds = %501
  tail call void @_serverAssert(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 1595) #9, !dbg !5534
  tail call void @_exit(i32 1) #10, !dbg !5534
  unreachable

; <label>:505:                                    ; preds = %333, %328, %487, %482, %311, %310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5535
  br label %923

; <label>:506:                                    ; preds = %501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5536
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:507:                                    ; preds = %304
  %508 = icmp eq i32 %0, 14, !dbg !5537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5538
  br i1 %508, label %509, label %534, !dbg !5538

; <label>:509:                                    ; preds = %507
  %510 = bitcast i64* %17 to i8*, !dbg !5543
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510) #4, !dbg !5543
  %511 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %17) #9, !dbg !5545
  %512 = icmp eq i32 %511, -1, !dbg !5546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5547
  br i1 %512, label %513, label %514, !dbg !5547

; <label>:513:                                    ; preds = %509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5548
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #4, !dbg !5549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5550
  br label %923, !dbg !5550

; <label>:514:                                    ; preds = %509
  %515 = load i64, i64* %17, align 8, !dbg !5551, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5552
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510) #4, !dbg !5549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5549
  %516 = icmp eq i64 %515, -1, !dbg !5553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5550
  br i1 %516, label %923, label %517, !dbg !5550

; <label>:517:                                    ; preds = %514
  %518 = tail call %struct.redisObject* @createQuicklistObject() #9, !dbg !5554
  %519 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %518, i64 0, i32 2, !dbg !5555
  %520 = bitcast i8** %519 to %struct.quicklist**, !dbg !5555
  %521 = load %struct.quicklist*, %struct.quicklist** %520, align 8, !dbg !5555, !tbaa !2111
  %522 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 249), align 8, !dbg !5556, !tbaa !5074
  %523 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 250), align 4, !dbg !5557, !tbaa !5076
  tail call void @quicklistSetOptions(%struct.quicklist* %521, i32 %522, i32 %523) #9, !dbg !5558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5559
  %524 = icmp eq i64 %515, 0, !dbg !5559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5559
  br i1 %524, label %923, label %525, !dbg !5559

; <label>:525:                                    ; preds = %517, %531
  %526 = phi i64 [ %527, %531 ], [ %515, %517 ]
  %527 = add i64 %526, -1, !dbg !5560
  %528 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 2, i64* null) #11, !dbg !5561
  %529 = icmp eq i8* %528, null, !dbg !5563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5565
  br i1 %529, label %530, label %531, !dbg !5565

; <label>:530:                                    ; preds = %525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5566
  br label %923

; <label>:531:                                    ; preds = %525
  %532 = load %struct.quicklist*, %struct.quicklist** %520, align 8, !dbg !5567, !tbaa !2111
  tail call void @quicklistAppendZiplist(%struct.quicklist* %532, i8* nonnull %528) #9, !dbg !5568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5569
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %533 = icmp eq i64 %527, 0, !dbg !5559
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5559
  br i1 %533, label %923, label %525, !dbg !5559

; <label>:534:                                    ; preds = %507
  %535 = add i32 %0, -9, !dbg !5570
  %536 = icmp ult i32 %535, 5, !dbg !5570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5570
  br i1 %536, label %537, label %630, !dbg !5570

; <label>:537:                                    ; preds = %534
  %538 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 2, i64* null) #11, !dbg !5571
  %539 = icmp eq i8* %538, null, !dbg !5573
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5575
  br i1 %539, label %629, label %540, !dbg !5575

; <label>:540:                                    ; preds = %537
  %541 = tail call %struct.redisObject* @createObject(i32 0, i8* nonnull %538) #9, !dbg !5576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5577
  switch i32 %0, label %627 [
    i32 9, label %542
    i32 10, label %591
    i32 11, label %596
    i32 12, label %609
    i32 13, label %618
  ], !dbg !5577

; <label>:542:                                    ; preds = %540
  %543 = tail call i8* @ziplistNew() #9, !dbg !5578
  %544 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 2, !dbg !5580
  %545 = load i8*, i8** %544, align 8, !dbg !5580, !tbaa !2111
  %546 = tail call i8* @zipmapRewind(i8* %545) #9, !dbg !5581
  %547 = bitcast i8** %26 to i8*, !dbg !5583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #4, !dbg !5583
  %548 = bitcast i8** %27 to i8*, !dbg !5583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %548) #4, !dbg !5583
  %549 = bitcast i32* %28 to i8*, !dbg !5584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %549) #4, !dbg !5584
  %550 = bitcast i32* %29 to i8*, !dbg !5584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %550) #4, !dbg !5584
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5586
  %551 = call i8* @zipmapNext(i8* %546, i8** nonnull %26, i32* nonnull %28, i8** nonnull %27, i32* nonnull %29) #9, !dbg !5591
  %552 = icmp eq i8* %551, null, !dbg !5592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5586
  br i1 %552, label %574, label %553, !dbg !5586

; <label>:553:                                    ; preds = %542, %565
  %554 = phi i8* [ %572, %565 ], [ %551, %542 ]
  %555 = phi i8* [ %571, %565 ], [ %543, %542 ]
  %556 = phi i32 [ %566, %565 ], [ 0, %542 ]
  %557 = load i32, i32* %28, align 4, !dbg !5593, !tbaa !191
  %558 = icmp ugt i32 %557, %556, !dbg !5596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5597
  br i1 %558, label %559, label %560, !dbg !5597

; <label>:559:                                    ; preds = %553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5598
  br label %560, !dbg !5598

; <label>:560:                                    ; preds = %559, %553
  %561 = phi i32 [ %557, %559 ], [ %556, %553 ], !dbg !5599
  %562 = load i32, i32* %29, align 4, !dbg !5600, !tbaa !191
  %563 = icmp ugt i32 %562, %561, !dbg !5602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5603
  br i1 %563, label %564, label %565, !dbg !5603

; <label>:564:                                    ; preds = %560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5604
  br label %565, !dbg !5604

; <label>:565:                                    ; preds = %564, %560
  %566 = phi i32 [ %562, %564 ], [ %561, %560 ], !dbg !5605
  %567 = load i8*, i8** %26, align 8, !dbg !5606, !tbaa !200
  %568 = call i8* @ziplistPush(i8* %555, i8* %567, i32 %557, i32 1) #9, !dbg !5607
  %569 = load i8*, i8** %27, align 8, !dbg !5608, !tbaa !200
  %570 = load i32, i32* %29, align 4, !dbg !5609, !tbaa !191
  %571 = call i8* @ziplistPush(i8* %568, i8* %569, i32 %570, i32 1) #9, !dbg !5610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5586
  %572 = call i8* @zipmapNext(i8* nonnull %554, i8** nonnull %26, i32* nonnull %28, i8** nonnull %27, i32* nonnull %29) #9, !dbg !5591
  %573 = icmp eq i8* %572, null, !dbg !5592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5586
  br i1 %573, label %574, label %553, !dbg !5586, !llvm.loop !5611

; <label>:574:                                    ; preds = %565, %542
  %575 = phi i32 [ 0, %542 ], [ %566, %565 ], !dbg !5613
  %576 = phi i8* [ %543, %542 ], [ %571, %565 ], !dbg !5614
  %577 = load i8*, i8** %544, align 8, !dbg !5615, !tbaa !2111
  call void @zfree(i8* %577) #9, !dbg !5616
  store i8* %576, i8** %544, align 8, !dbg !5617, !tbaa !2111
  %578 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 0, !dbg !5618
  %579 = load i32, i32* %578, align 8, !dbg !5619
  %580 = and i32 %579, -256, !dbg !5619
  %581 = or i32 %580, 84, !dbg !5620
  store i32 %581, i32* %578, align 8, !dbg !5620
  %582 = call i64 @hashTypeLength(%struct.redisObject* %541) #9, !dbg !5621
  %583 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241), align 8, !dbg !5623, !tbaa !5368
  %584 = icmp ugt i64 %582, %583, !dbg !5624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5625
  br i1 %584, label %589, label %585, !dbg !5625

; <label>:585:                                    ; preds = %574
  %586 = zext i32 %575 to i64, !dbg !5626
  %587 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 242), align 8, !dbg !5627, !tbaa !5462
  %588 = icmp ult i64 %587, %586, !dbg !5628
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5629
  br i1 %588, label %589, label %590, !dbg !5629

; <label>:589:                                    ; preds = %585, %574
  call void @hashTypeConvert(%struct.redisObject* nonnull %541, i32 2) #9, !dbg !5630
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5632
  br label %590, !dbg !5632

; <label>:590:                                    ; preds = %589, %585
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %550) #4, !dbg !5633
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %549) #4, !dbg !5633
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %548) #4, !dbg !5633
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #4, !dbg !5633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5634
  br label %628, !dbg !5634

; <label>:591:                                    ; preds = %540
  %592 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 0, !dbg !5635
  %593 = load i32, i32* %592, align 8, !dbg !5636
  %594 = and i32 %593, -256, !dbg !5636
  %595 = or i32 %594, 81, !dbg !5637
  store i32 %595, i32* %592, align 8, !dbg !5637
  tail call void @listTypeConvert(%struct.redisObject* %541, i32 9) #9, !dbg !5638
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5639
  br label %628, !dbg !5639

; <label>:596:                                    ; preds = %540
  %597 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 0, !dbg !5640
  %598 = load i32, i32* %597, align 8, !dbg !5641
  %599 = and i32 %598, -256, !dbg !5641
  %600 = or i32 %599, 98, !dbg !5642
  store i32 %600, i32* %597, align 8, !dbg !5642
  %601 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 2, !dbg !5643
  %602 = bitcast i8** %601 to %struct.intset**, !dbg !5643
  %603 = load %struct.intset*, %struct.intset** %602, align 8, !dbg !5643, !tbaa !2111
  %604 = tail call i32 @intsetLen(%struct.intset* %603) #9, !dbg !5645
  %605 = zext i32 %604 to i64, !dbg !5645
  %606 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 243), align 8, !dbg !5646, !tbaa !5139
  %607 = icmp ult i64 %606, %605, !dbg !5647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5648
  br i1 %607, label %608, label %628, !dbg !5648

; <label>:608:                                    ; preds = %596
  tail call void @setTypeConvert(%struct.redisObject* nonnull %541, i32 2) #9, !dbg !5649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5649
  br label %628, !dbg !5649

; <label>:609:                                    ; preds = %540
  %610 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 0, !dbg !5650
  %611 = load i32, i32* %610, align 8, !dbg !5651
  %612 = and i32 %611, -256, !dbg !5651
  %613 = or i32 %612, 83, !dbg !5652
  store i32 %613, i32* %610, align 8, !dbg !5652
  %614 = tail call i64 @zsetLength(%struct.redisObject* %541) #9, !dbg !5653
  %615 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 244), align 8, !dbg !5655, !tbaa !5338
  %616 = icmp ugt i64 %614, %615, !dbg !5656
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5657
  br i1 %616, label %617, label %628, !dbg !5657

; <label>:617:                                    ; preds = %609
  tail call void @zsetConvert(%struct.redisObject* nonnull %541, i32 7) #9, !dbg !5658
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5658
  br label %628, !dbg !5658

; <label>:618:                                    ; preds = %540
  %619 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %541, i64 0, i32 0, !dbg !5659
  %620 = load i32, i32* %619, align 8, !dbg !5660
  %621 = and i32 %620, -256, !dbg !5660
  %622 = or i32 %621, 84, !dbg !5661
  store i32 %622, i32* %619, align 8, !dbg !5661
  %623 = tail call i64 @hashTypeLength(%struct.redisObject* %541) #9, !dbg !5662
  %624 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 241), align 8, !dbg !5664, !tbaa !5368
  %625 = icmp ugt i64 %623, %624, !dbg !5665
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5666
  br i1 %625, label %626, label %628, !dbg !5666

; <label>:626:                                    ; preds = %618
  tail call void @hashTypeConvert(%struct.redisObject* nonnull %541, i32 2) #9, !dbg !5667
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5667
  br label %628, !dbg !5667

; <label>:627:                                    ; preds = %540
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1679, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0), i32 %0) #11, !dbg !5668
  unreachable

; <label>:628:                                    ; preds = %590, %591, %608, %596, %617, %609, %626, %618
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5669
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:629:                                    ; preds = %537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5670
  br label %923

; <label>:630:                                    ; preds = %534
  %631 = icmp eq i32 %0, 15, !dbg !5671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5672
  br i1 %631, label %632, label %863, !dbg !5672

; <label>:632:                                    ; preds = %630
  %633 = tail call %struct.redisObject* @createStreamObject() #9, !dbg !5673
  %634 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %633, i64 0, i32 2, !dbg !5674
  %635 = bitcast i8** %634 to %struct.stream**, !dbg !5674
  %636 = load %struct.stream*, %struct.stream** %635, align 8, !dbg !5674, !tbaa !2111
  %637 = bitcast i64* %16 to i8*, !dbg !5679
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %637) #4, !dbg !5679
  %638 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %16) #9, !dbg !5681
  %639 = icmp eq i32 %638, -1, !dbg !5682
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5683
  br i1 %639, label %640, label %641, !dbg !5683

; <label>:640:                                    ; preds = %632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5684
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637) #4, !dbg !5685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5687
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5687
  br label %644, !dbg !5687

; <label>:641:                                    ; preds = %632
  %642 = load i64, i64* %16, align 8, !dbg !5688, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5689
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %637) #4, !dbg !5685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5687
  %643 = icmp eq i64 %642, 0, !dbg !5687
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5687
  br i1 %643, label %697, label %644, !dbg !5687

; <label>:644:                                    ; preds = %640, %641
  %645 = phi i64 [ -1, %640 ], [ %642, %641 ]
  %646 = getelementptr inbounds %struct.stream, %struct.stream* %636, i64 0, i32 0
  br label %647, !dbg !5687

; <label>:647:                                    ; preds = %644, %695
  %648 = phi i64 [ %645, %644 ], [ %649, %695 ]
  %649 = add i64 %648, -1, !dbg !5690
  %650 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5691
  %651 = icmp eq i8* %650, null, !dbg !5693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5695
  br i1 %651, label %652, label %653, !dbg !5695

; <label>:652:                                    ; preds = %647
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1693, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !5696
  unreachable

; <label>:653:                                    ; preds = %647
  %654 = getelementptr inbounds i8, i8* %650, i64 -1, !dbg !5701
  %655 = load i8, i8* %654, align 1, !dbg !5701, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5703
  %656 = trunc i8 %655 to i3, !dbg !5703
  switch i3 %656, label %678 [
    i3 0, label %657
    i3 1, label %660
    i3 2, label %664
    i3 3, label %669
    i3 -4, label %674
  ], !dbg !5703

; <label>:657:                                    ; preds = %653
  %658 = lshr i8 %655, 3, !dbg !5704
  %659 = zext i8 %658 to i64, !dbg !5704
  br label %679, !dbg !5705

; <label>:660:                                    ; preds = %653
  %661 = getelementptr inbounds i8, i8* %650, i64 -3, !dbg !5706
  %662 = load i8, i8* %661, align 1, !dbg !5707, !tbaa !545
  %663 = zext i8 %662 to i64, !dbg !5706
  br label %679, !dbg !5708

; <label>:664:                                    ; preds = %653
  %665 = getelementptr inbounds i8, i8* %650, i64 -5, !dbg !5709
  %666 = bitcast i8* %665 to i16*, !dbg !5710
  %667 = load i16, i16* %666, align 1, !dbg !5710, !tbaa !2138
  %668 = zext i16 %667 to i64, !dbg !5709
  br label %679, !dbg !5711

; <label>:669:                                    ; preds = %653
  %670 = getelementptr inbounds i8, i8* %650, i64 -9, !dbg !5712
  %671 = bitcast i8* %670 to i32*, !dbg !5713
  %672 = load i32, i32* %671, align 1, !dbg !5713, !tbaa !191
  %673 = zext i32 %672 to i64, !dbg !5712
  br label %679, !dbg !5714

; <label>:674:                                    ; preds = %653
  %675 = getelementptr inbounds i8, i8* %650, i64 -17, !dbg !5715
  %676 = bitcast i8* %675 to i64*, !dbg !5716
  %677 = load i64, i64* %676, align 1, !dbg !5716, !tbaa !674
  br label %679, !dbg !5717

; <label>:678:                                    ; preds = %653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5718
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5719
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5720
  br label %682, !dbg !5720

; <label>:679:                                    ; preds = %657, %660, %664, %669, %674
  %680 = phi i64 [ %677, %674 ], [ %673, %669 ], [ %668, %664 ], [ %663, %660 ], [ %659, %657 ], !dbg !5721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5722
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5719
  %681 = icmp eq i64 %680, 16, !dbg !5723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5720
  br i1 %681, label %683, label %682, !dbg !5720

; <label>:682:                                    ; preds = %679, %678
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1697, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !5724
  unreachable

; <label>:683:                                    ; preds = %679
  %684 = tail call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 2, i64* null) #11, !dbg !5726
  %685 = icmp eq i8* %684, null, !dbg !5728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5730
  br i1 %685, label %862, label %686, !dbg !5730

; <label>:686:                                    ; preds = %683
  %687 = tail call i8* @lpFirst(i8* nonnull %684) #9, !dbg !5731
  %688 = icmp eq i8* %687, null, !dbg !5733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5735
  br i1 %688, label %689, label %690, !dbg !5735

; <label>:689:                                    ; preds = %686
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1709, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !5736
  unreachable

; <label>:690:                                    ; preds = %686
  %691 = load %struct.rax*, %struct.rax** %646, align 8, !dbg !5738, !tbaa !3550
  %692 = tail call i32 @raxInsert(%struct.rax* %691, i8* nonnull %650, i64 16, i8* nonnull %684, i8** null) #9, !dbg !5739
  tail call void @sdsfree(i8* nonnull %650) #9, !dbg !5741
  %693 = icmp eq i32 %692, 0, !dbg !5742
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5744
  br i1 %693, label %694, label %695, !dbg !5744

; <label>:694:                                    ; preds = %690
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1717, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !5745
  unreachable

; <label>:695:                                    ; preds = %690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5746
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %696 = icmp eq i64 %649, 0, !dbg !5687
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5687
  br i1 %696, label %697, label %647, !dbg !5687

; <label>:697:                                    ; preds = %695, %641
  %698 = bitcast i64* %15 to i8*, !dbg !5750
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %698) #4, !dbg !5750
  %699 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %15) #9, !dbg !5752
  %700 = icmp eq i32 %699, -1, !dbg !5753
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5754
  %701 = load i64, i64* %15, align 8, !dbg !5755
  %702 = select i1 %700, i64 -1, i64 %701, !dbg !5754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5756
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %698) #4, !dbg !5757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5757
  %703 = getelementptr inbounds %struct.stream, %struct.stream* %636, i64 0, i32 1, !dbg !5758
  store i64 %702, i64* %703, align 8, !dbg !5759, !tbaa !3587
  %704 = bitcast i64* %14 to i8*, !dbg !5763
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %704) #4, !dbg !5763
  %705 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %14) #9, !dbg !5765
  %706 = icmp eq i32 %705, -1, !dbg !5766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5767
  %707 = load i64, i64* %14, align 8, !dbg !5768
  %708 = select i1 %706, i64 -1, i64 %707, !dbg !5767
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5756
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %704) #4, !dbg !5769
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5769
  %709 = getelementptr inbounds %struct.stream, %struct.stream* %636, i64 0, i32 2, i32 0, !dbg !5770
  store i64 %708, i64* %709, align 8, !dbg !5771, !tbaa !3593
  %710 = bitcast i64* %13 to i8*, !dbg !5775
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %710) #4, !dbg !5775
  %711 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %13) #9, !dbg !5777
  %712 = icmp eq i32 %711, -1, !dbg !5778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5779
  %713 = load i64, i64* %13, align 8, !dbg !5780
  %714 = select i1 %712, i64 -1, i64 %713, !dbg !5779
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5756
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %710) #4, !dbg !5781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5781
  %715 = getelementptr inbounds %struct.stream, %struct.stream* %636, i64 0, i32 2, i32 1, !dbg !5782
  store i64 %714, i64* %715, align 8, !dbg !5783, !tbaa !3599
  %716 = bitcast i64* %12 to i8*, !dbg !5787
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %716) #4, !dbg !5787
  %717 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %12) #9, !dbg !5789
  %718 = icmp eq i32 %717, -1, !dbg !5790
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5791
  br i1 %718, label %719, label %720, !dbg !5791

; <label>:719:                                    ; preds = %697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5792
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %716) #4, !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  br label %723, !dbg !5795

; <label>:720:                                    ; preds = %697
  %721 = load i64, i64* %12, align 8, !dbg !5796, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5797
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %716) #4, !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  %722 = icmp eq i64 %721, 0, !dbg !5795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  br i1 %722, label %861, label %723, !dbg !5795

; <label>:723:                                    ; preds = %719, %720
  %724 = phi i64 [ -1, %719 ], [ %721, %720 ]
  %725 = bitcast %struct.streamID* %30 to i8*
  %726 = bitcast i64* %11 to i8*
  %727 = getelementptr inbounds %struct.streamID, %struct.streamID* %30, i64 0, i32 0
  %728 = bitcast i64* %10 to i8*
  %729 = getelementptr inbounds %struct.streamID, %struct.streamID* %30, i64 0, i32 1
  %730 = bitcast i64* %9 to i8*
  %731 = bitcast i64* %6 to i8*
  %732 = getelementptr inbounds [16 x i8], [16 x i8]* %31, i64 0, i64 0
  %733 = bitcast i64* %8 to i8*
  %734 = bitcast i64* %7 to i8*
  %735 = bitcast i64* %5 to i8*
  %736 = bitcast i64* %4 to i8*
  %737 = getelementptr inbounds [16 x i8], [16 x i8]* %32, i64 0, i64 0
  br label %738, !dbg !5795

; <label>:738:                                    ; preds = %723, %859
  %739 = phi i64 [ %724, %723 ], [ %740, %859 ]
  %740 = add i64 %739, -1, !dbg !5798
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %725) #4, !dbg !5799
  %741 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5800
  %742 = icmp eq i8* %741, null, !dbg !5802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5804
  br i1 %742, label %743, label %744, !dbg !5804

; <label>:743:                                    ; preds = %738
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1735, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.57, i64 0, i64 0)) #11, !dbg !5805
  unreachable

; <label>:744:                                    ; preds = %738
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %726) #4, !dbg !5810
  %745 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %11) #9, !dbg !5812
  %746 = icmp eq i32 %745, -1, !dbg !5813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5814
  %747 = load i64, i64* %11, align 8, !dbg !5815
  %748 = select i1 %746, i64 -1, i64 %747, !dbg !5814
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5816
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %726) #4, !dbg !5817
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5817
  store i64 %748, i64* %727, align 8, !dbg !5818, !tbaa !5819
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %728) #4, !dbg !5823
  %749 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %10) #9, !dbg !5825
  %750 = icmp eq i32 %749, -1, !dbg !5826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5827
  %751 = load i64, i64* %10, align 8, !dbg !5828
  %752 = select i1 %750, i64 -1, i64 %751, !dbg !5827
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5816
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %728) #4, !dbg !5829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5829
  store i64 %752, i64* %729, align 8, !dbg !5830, !tbaa !5831
  %753 = getelementptr inbounds i8, i8* %741, i64 -1, !dbg !5834
  %754 = load i8, i8* %753, align 1, !dbg !5834, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5836
  %755 = trunc i8 %754 to i3, !dbg !5836
  switch i3 %755, label %777 [
    i3 0, label %756
    i3 1, label %759
    i3 2, label %763
    i3 3, label %768
    i3 -4, label %773
  ], !dbg !5836

; <label>:756:                                    ; preds = %744
  %757 = lshr i8 %754, 3, !dbg !5837
  %758 = zext i8 %757 to i64, !dbg !5837
  br label %777, !dbg !5838

; <label>:759:                                    ; preds = %744
  %760 = getelementptr inbounds i8, i8* %741, i64 -3, !dbg !5839
  %761 = load i8, i8* %760, align 1, !dbg !5840, !tbaa !545
  %762 = zext i8 %761 to i64, !dbg !5839
  br label %777, !dbg !5841

; <label>:763:                                    ; preds = %744
  %764 = getelementptr inbounds i8, i8* %741, i64 -5, !dbg !5842
  %765 = bitcast i8* %764 to i16*, !dbg !5843
  %766 = load i16, i16* %765, align 1, !dbg !5843, !tbaa !2138
  %767 = zext i16 %766 to i64, !dbg !5842
  br label %777, !dbg !5844

; <label>:768:                                    ; preds = %744
  %769 = getelementptr inbounds i8, i8* %741, i64 -9, !dbg !5845
  %770 = bitcast i8* %769 to i32*, !dbg !5846
  %771 = load i32, i32* %770, align 1, !dbg !5846, !tbaa !191
  %772 = zext i32 %771 to i64, !dbg !5845
  br label %777, !dbg !5847

; <label>:773:                                    ; preds = %744
  %774 = getelementptr inbounds i8, i8* %741, i64 -17, !dbg !5848
  %775 = bitcast i8* %774 to i64*, !dbg !5849
  %776 = load i64, i64* %775, align 1, !dbg !5849, !tbaa !674
  br label %777, !dbg !5850

; <label>:777:                                    ; preds = %744, %756, %759, %763, %768, %773
  %778 = phi i64 [ %776, %773 ], [ %772, %768 ], [ %767, %763 ], [ %762, %759 ], [ %758, %756 ], [ 0, %744 ], !dbg !5851
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5852
  %779 = call %struct.streamCG* @streamCreateCG(%struct.stream* %636, i8* nonnull %741, i64 %778, %struct.streamID* nonnull %30) #9, !dbg !5854
  %780 = icmp eq %struct.streamCG* %779, null, !dbg !5856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5858
  br i1 %780, label %781, label %782, !dbg !5858

; <label>:781:                                    ; preds = %777
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1742, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), i8* nonnull %741) #11, !dbg !5859
  unreachable

; <label>:782:                                    ; preds = %777
  call void @sdsfree(i8* nonnull %741) #9, !dbg !5860
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %730) #4, !dbg !5864
  %783 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %9) #9, !dbg !5866
  %784 = icmp eq i32 %783, -1, !dbg !5867
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5868
  br i1 %784, label %785, label %786, !dbg !5868

; <label>:785:                                    ; preds = %782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5869
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %730) #4, !dbg !5870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  br label %789, !dbg !5872

; <label>:786:                                    ; preds = %782
  %787 = load i64, i64* %9, align 8, !dbg !5873, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5874
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %730) #4, !dbg !5870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  %788 = icmp eq i64 %787, 0, !dbg !5872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  br i1 %788, label %810, label %789, !dbg !5872

; <label>:789:                                    ; preds = %785, %786
  %790 = phi i64 [ -1, %785 ], [ %787, %786 ]
  %791 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %779, i64 0, i32 1
  br label %792, !dbg !5872

; <label>:792:                                    ; preds = %789, %808
  %793 = phi i64 [ %790, %789 ], [ %794, %808 ]
  %794 = add i64 %793, -1, !dbg !5875
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %732) #4, !dbg !5876
  call void @rdbLoadRaw(%struct._rio* %1, i8* nonnull %732, i64 16) #11, !dbg !5878
  %795 = call %struct.streamNACK* @streamCreateNACK(%struct.streamConsumer* null) #9, !dbg !5879
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %733) #4, !dbg !5884
  call void @rdbLoadRaw(%struct._rio* %1, i8* nonnull %733, i64 8) #9, !dbg !5885
  %796 = load i64, i64* %8, align 8, !dbg !5886, !tbaa !674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %733) #4, !dbg !5888
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5889
  %797 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %795, i64 0, i32 0, !dbg !5890
  store i64 %796, i64* %797, align 8, !dbg !5891, !tbaa !2896
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %734) #4, !dbg !5895
  %798 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %7) #9, !dbg !5897
  %799 = icmp eq i32 %798, -1, !dbg !5898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5899
  %800 = load i64, i64* %7, align 8, !dbg !5900
  %801 = select i1 %799, i64 -1, i64 %800, !dbg !5899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5901
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %734) #4, !dbg !5902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5902
  %802 = getelementptr inbounds %struct.streamNACK, %struct.streamNACK* %795, i64 0, i32 1, !dbg !5903
  store i64 %801, i64* %802, align 8, !dbg !5904, !tbaa !2903
  %803 = load %struct.rax*, %struct.rax** %791, align 8, !dbg !5905, !tbaa !3645
  %804 = bitcast %struct.streamNACK* %795 to i8*, !dbg !5907
  %805 = call i32 @raxInsert(%struct.rax* %803, i8* nonnull %732, i64 16, i8* %804, i8** null) #9, !dbg !5908
  %806 = icmp eq i32 %805, 0, !dbg !5908
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5909
  br i1 %806, label %807, label %808, !dbg !5909

; <label>:807:                                    ; preds = %792
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1759, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.59, i64 0, i64 0)) #11, !dbg !5910
  unreachable

; <label>:808:                                    ; preds = %792
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %732) #4, !dbg !5911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  %809 = icmp eq i64 %794, 0, !dbg !5872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5872
  br i1 %809, label %810, label %792, !dbg !5872, !llvm.loop !5912

; <label>:810:                                    ; preds = %808, %786
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %731) #4, !dbg !5916
  %811 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %6) #9, !dbg !5918
  %812 = icmp eq i32 %811, -1, !dbg !5919
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5920
  br i1 %812, label %813, label %814, !dbg !5920

; <label>:813:                                    ; preds = %810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5921
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %731) #4, !dbg !5922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5924
  br label %817, !dbg !5924

; <label>:814:                                    ; preds = %810
  %815 = load i64, i64* %6, align 8, !dbg !5925, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5926
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %731) #4, !dbg !5922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5924
  %816 = icmp eq i64 %815, 0, !dbg !5924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5924
  br i1 %816, label %859, label %817, !dbg !5924

; <label>:817:                                    ; preds = %813, %814
  %818 = phi i64 [ -1, %813 ], [ %815, %814 ]
  %819 = getelementptr inbounds %struct.streamCG, %struct.streamCG* %779, i64 0, i32 1
  br label %820, !dbg !5924

; <label>:820:                                    ; preds = %817, %857
  %821 = phi i64 [ %818, %817 ], [ %822, %857 ]
  %822 = add i64 %821, -1, !dbg !5927
  %823 = call i8* @rdbGenericLoadStringObject(%struct._rio* %1, i32 4, i64* null) #11, !dbg !5928
  %824 = icmp eq i8* %823, null, !dbg !5930
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5932
  br i1 %824, label %825, label %826, !dbg !5932

; <label>:825:                                    ; preds = %820
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1769, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.60, i64 0, i64 0)) #11, !dbg !5933
  unreachable

; <label>:826:                                    ; preds = %820
  %827 = call %struct.streamConsumer* @streamLookupConsumer(%struct.streamCG* nonnull %779, i8* nonnull %823, i32 1) #9, !dbg !5935
  call void @sdsfree(i8* nonnull %823) #9, !dbg !5937
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %735) #4, !dbg !5941
  call void @rdbLoadRaw(%struct._rio* %1, i8* nonnull %735, i64 8) #9, !dbg !5942
  %828 = load i64, i64* %5, align 8, !dbg !5943, !tbaa !674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735) #4, !dbg !5945
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5946
  %829 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %827, i64 0, i32 0, !dbg !5947
  store i64 %828, i64* %829, align 8, !dbg !5948, !tbaa !2973
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %736) #4, !dbg !5952
  %830 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %4) #9, !dbg !5954
  %831 = icmp eq i32 %830, -1, !dbg !5955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5956
  br i1 %831, label %832, label %833, !dbg !5956

; <label>:832:                                    ; preds = %826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5957
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %736) #4, !dbg !5958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5959
  br label %836, !dbg !5959

; <label>:833:                                    ; preds = %826
  %834 = load i64, i64* %4, align 8, !dbg !5960, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %736) #4, !dbg !5958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5959
  %835 = icmp eq i64 %834, 0, !dbg !5959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5959
  br i1 %835, label %857, label %836, !dbg !5959

; <label>:836:                                    ; preds = %832, %833
  %837 = phi i64 [ -1, %832 ], [ %834, %833 ]
  %838 = getelementptr inbounds %struct.streamConsumer, %struct.streamConsumer* %827, i64 0, i32 2
  br label %839, !dbg !5959

; <label>:839:                                    ; preds = %836, %855
  %840 = phi i64 [ %837, %836 ], [ %841, %855 ]
  %841 = add i64 %840, -1, !dbg !5962
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %737) #4, !dbg !5963
  call void @rdbLoadRaw(%struct._rio* %1, i8* nonnull %737, i64 16) #11, !dbg !5965
  %842 = load %struct.rax*, %struct.rax** %819, align 8, !dbg !5966, !tbaa !3645
  %843 = call i8* @raxFind(%struct.rax* %842, i8* nonnull %737, i64 16) #9, !dbg !5967
  %844 = bitcast i8* %843 to %struct.streamNACK*, !dbg !5967
  %845 = load %struct.streamNACK*, %struct.streamNACK** bitcast (i8** @raxNotFound to %struct.streamNACK**), align 8, !dbg !5969, !tbaa !200
  %846 = icmp eq %struct.streamNACK* %845, %844, !dbg !5971
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5972
  br i1 %846, label %847, label %848, !dbg !5972

; <label>:847:                                    ; preds = %839
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1785, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.61, i64 0, i64 0)) #11, !dbg !5973
  unreachable

; <label>:848:                                    ; preds = %839
  %849 = getelementptr inbounds i8, i8* %843, i64 16, !dbg !5974
  %850 = bitcast i8* %849 to %struct.streamConsumer**, !dbg !5974
  store %struct.streamConsumer* %827, %struct.streamConsumer** %850, align 8, !dbg !5975, !tbaa !5976
  %851 = load %struct.rax*, %struct.rax** %838, align 8, !dbg !5977, !tbaa !2980
  %852 = call i32 @raxInsert(%struct.rax* %851, i8* nonnull %737, i64 16, i8* %843, i8** null) #9, !dbg !5979
  %853 = icmp eq i32 %852, 0, !dbg !5979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5980
  br i1 %853, label %854, label %855, !dbg !5980

; <label>:854:                                    ; preds = %848
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 1794, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.62, i64 0, i64 0)) #11, !dbg !5981
  unreachable

; <label>:855:                                    ; preds = %848
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %737) #4, !dbg !5982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5959
  %856 = icmp eq i64 %841, 0, !dbg !5959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5959
  br i1 %856, label %857, label %839, !dbg !5959, !llvm.loop !5983

; <label>:857:                                    ; preds = %855, %833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5924
  %858 = icmp eq i64 %822, 0, !dbg !5924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5924
  br i1 %858, label %859, label %820, !dbg !5924, !llvm.loop !5984

; <label>:859:                                    ; preds = %857, %814
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %725) #4, !dbg !5986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  %860 = icmp eq i64 %740, 0, !dbg !5795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5795
  br i1 %860, label %861, label %738, !dbg !5795, !llvm.loop !5987

; <label>:861:                                    ; preds = %859, %720
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5988
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:862:                                    ; preds = %683
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5989
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:863:                                    ; preds = %630
  %864 = icmp eq i32 %0, 6, !dbg !5990
  %865 = or i32 %0, 1, !dbg !5991
  %866 = icmp eq i32 %865, 7, !dbg !5991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5991
  br i1 %866, label %867, label %922, !dbg !5991

; <label>:867:                                    ; preds = %863
  %868 = icmp eq i32 %0, 7, !dbg !5992
  %869 = bitcast i64* %18 to i8*, !dbg !5996
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %869) #4, !dbg !5996
  %870 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %18) #9, !dbg !5998
  %871 = icmp eq i32 %870, -1, !dbg !5999
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6000
  %872 = load i64, i64* %18, align 8, !dbg !6001
  %873 = select i1 %871, i64 -1, i64 %872, !dbg !6000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6002
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %869) #4, !dbg !6003
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6003
  %874 = tail call %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64 %873) #9, !dbg !6005
  %875 = getelementptr inbounds [10 x i8], [10 x i8]* %33, i64 0, i64 0, !dbg !6007
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %875) #4, !dbg !6007
  %876 = load i32, i32* @rdbCheckMode, align 4, !dbg !6009, !tbaa !191
  %877 = icmp ne i32 %876, 0, !dbg !6009
  %878 = and i1 %868, %877, !dbg !6011
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6011
  br i1 %878, label %920, label %879, !dbg !6011

; <label>:879:                                    ; preds = %867
  %880 = icmp eq %struct.RedisModuleType* %874, null, !dbg !6012
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6014
  br i1 %880, label %881, label %882, !dbg !6014

; <label>:881:                                    ; preds = %879
  call void @moduleTypeNameByID(i8* nonnull %875, i64 %873) #9, !dbg !6015
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.63, i64 0, i64 0), i8* nonnull %875) #9, !dbg !6017
  call void @exit(i32 1) #10, !dbg !6018
  unreachable

; <label>:882:                                    ; preds = %879
  %883 = bitcast %struct.RedisModuleIO* %34 to i8*, !dbg !6019
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %883) #4, !dbg !6019
  %884 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 1, !dbg !6020
  store %struct._rio* %1, %struct._rio** %884, align 8, !dbg !6020, !tbaa !3683
  %885 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 2, !dbg !6020
  store %struct.RedisModuleType* %874, %struct.RedisModuleType** %885, align 8, !dbg !6020, !tbaa !3685
  %886 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 0, !dbg !6020
  store i64 0, i64* %886, align 8, !dbg !6020, !tbaa !3686
  %887 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 3, !dbg !6020
  store i32 0, i32* %887, align 8, !dbg !6020, !tbaa !3687
  %888 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 4, !dbg !6020
  %889 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 6, !dbg !6020
  store %struct.redisObject* %2, %struct.redisObject** %889, align 8, !dbg !6020, !tbaa !3689
  %890 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %34, i64 0, i32 5, !dbg !6020
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %890, align 8, !dbg !6020, !tbaa !3690
  %891 = select i1 %864, i32 1, i32 2, !dbg !6022
  store i32 %891, i32* %888, align 4, !dbg !6023, !tbaa !3688
  %892 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %874, i64 0, i32 2, !dbg !6024
  %893 = load i8* (%struct.RedisModuleIO*, i32)*, i8* (%struct.RedisModuleIO*, i32)** %892, align 8, !dbg !6024, !tbaa !6025
  %894 = trunc i64 %873 to i32, !dbg !6026
  %895 = and i32 %894, 1023, !dbg !6026
  %896 = call i8* %893(%struct.RedisModuleIO* nonnull %34, i32 %895) #9, !dbg !6028
  %897 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %890, align 8, !dbg !6030, !tbaa !3690
  %898 = icmp eq %struct.RedisModuleCtx* %897, null, !dbg !6032
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6033
  br i1 %898, label %902, label %899, !dbg !6033

; <label>:899:                                    ; preds = %882
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %897) #9, !dbg !6034
  %900 = bitcast %struct.RedisModuleCtx** %890 to i8**, !dbg !6036
  %901 = load i8*, i8** %900, align 8, !dbg !6036, !tbaa !3690
  call void @zfree(i8* %901) #9, !dbg !6037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6038
  br label %902, !dbg !6038

; <label>:902:                                    ; preds = %882, %899
  %903 = load i32, i32* %888, align 4, !dbg !6039, !tbaa !3688
  %904 = icmp eq i32 %903, 2, !dbg !6040
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6041
  br i1 %904, label %905, label %915, !dbg !6041

; <label>:905:                                    ; preds = %902
  %906 = bitcast i64* %20 to i8*, !dbg !6045
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %906) #4, !dbg !6045
  %907 = call i32 @rdbLoadLenByRef(%struct._rio* %1, i32* null, i64* nonnull %20) #9, !dbg !6047
  %908 = icmp eq i32 %907, -1, !dbg !6048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6049
  br i1 %908, label %909, label %910, !dbg !6049

; <label>:909:                                    ; preds = %905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6050
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %906) #4, !dbg !6051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6053
  br label %913, !dbg !6053

; <label>:910:                                    ; preds = %905
  %911 = load i64, i64* %20, align 8, !dbg !6054, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6055
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %906) #4, !dbg !6051
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6051
  %912 = icmp eq i64 %911, 0, !dbg !6056
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6053
  br i1 %912, label %914, label %913, !dbg !6053

; <label>:913:                                    ; preds = %909, %910
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.64, i64 0, i64 0), i8* nonnull %875) #9, !dbg !6058
  call void @exit(i32 1) #10, !dbg !6060
  unreachable

; <label>:914:                                    ; preds = %910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6061
  br label %915, !dbg !6061

; <label>:915:                                    ; preds = %914, %902
  %916 = icmp eq i8* %896, null, !dbg !6062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6064
  br i1 %916, label %917, label %918, !dbg !6064

; <label>:917:                                    ; preds = %915
  call void @moduleTypeNameByID(i8* nonnull %875, i64 %873) #9, !dbg !6065
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @.str.65, i64 0, i64 0), i8* nonnull %875) #9, !dbg !6067
  call void @exit(i32 1) #10, !dbg !6068
  unreachable

; <label>:918:                                    ; preds = %915
  %919 = call %struct.redisObject* @createModuleObject(%struct.RedisModuleType* nonnull %874, i8* nonnull %896) #9, !dbg !6069
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %883) #4, !dbg !6070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6070
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %875) #4, !dbg !6070
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %923

; <label>:920:                                    ; preds = %867
  call void @moduleTypeNameByID(i8* nonnull %875, i64 %873) #9, !dbg !6071
  %921 = call %struct.redisObject* @rdbLoadCheckModuleValue(%struct._rio* %1, i8* nonnull %875) #11, !dbg !6073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6074
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %875) #4, !dbg !6070
  br label %923

; <label>:922:                                    ; preds = %863
  tail call void (i32, i8*, ...) @rdbCheckThenExit(i32 1840, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0), i32 %0) #11, !dbg !6075
  unreachable

; <label>:923:                                    ; preds = %531, %159, %94, %60, %39, %303, %506, %628, %861, %918, %52, %517, %121, %514, %513, %106, %105, %49, %48, %36, %920, %862, %629, %505, %302, %530, %135
  %924 = phi %struct.redisObject* [ null, %629 ], [ null, %862 ], [ %921, %920 ], [ null, %135 ], [ null, %530 ], [ null, %302 ], [ null, %505 ], [ null, %36 ], [ null, %48 ], [ null, %49 ], [ null, %105 ], [ null, %106 ], [ null, %513 ], [ null, %514 ], [ %41, %39 ], [ %174, %303 ], [ %315, %506 ], [ %541, %628 ], [ %633, %861 ], [ %919, %918 ], [ %53, %52 ], [ %122, %121 ], [ %518, %517 ], [ %53, %94 ], [ null, %60 ], [ %125, %159 ], [ %518, %531 ], !dbg !6077
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6078
  ret %struct.redisObject* %924, !dbg !6078
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @tryObjectEncoding(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createQuicklistObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @quicklistSetOptions(%struct.quicklist*, i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @quicklistPushTail(%struct.quicklist*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createSetObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictExpand(%struct.dict*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createIntsetObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @isSdsRepresentableAsLongLong(i8*, i64*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.intset* @intsetAdd(%struct.intset*, i64, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setTypeConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createZsetObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.zskiplistNode* @zslInsert(%struct.zskiplist*, double, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @zsetLength(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @zsetConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createHashObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @hashTypeConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @ziplistPush(i8*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @quicklistAppendZiplist(%struct.quicklist*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @ziplistNew() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zipmapRewind(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zipmapNext(i8*, i8**, i32*, i8**, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @hashTypeLength(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @listTypeConvert(%struct.redisObject*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @intsetLen(%struct.intset*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStreamObject() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @lpFirst(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @raxInsert(%struct.rax*, i8*, i64, i8*, i8**) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.streamCG* @streamCreateCG(%struct.stream*, i8*, i64, %struct.streamID*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.streamNACK* @streamCreateNACK(%struct.streamConsumer*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.streamConsumer* @streamLookupConsumer(%struct.streamCG*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @raxFind(%struct.rax*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @moduleTypeNameByID(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createModuleObject(%struct.RedisModuleType*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @startLoading(%struct.__sFILE*) local_unnamed_addr #6 !dbg !6079 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*, !dbg !6122
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #4, !dbg !6122
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6123, !tbaa !6124
  %4 = tail call i64 @time(i64* null) #9, !dbg !6125
  store i64 %4, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 8, !dbg !6126, !tbaa !6127
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6128, !tbaa !6129
  %5 = tail call i32 @fileno(%struct.__sFILE* %0) #9, !dbg !6130
  %6 = call i32 @fstat(i32 %5, %struct.stat* nonnull %2) #9, !dbg !6133
  %7 = icmp eq i32 %6, -1, !dbg !6134
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6135
  %8 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 7, !dbg !6136
  %9 = load i64, i64* %8, align 8, !dbg !6136
  %10 = select i1 %7, i64 0, i64 %9, !dbg !6135
  store i64 %10, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 8, !dbg !6138, !tbaa !6140
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #4, !dbg !6141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6141
  ret void, !dbg !6141
}

; Function Attrs: noredzone
declare dso_local i32 @fstat(i32, %struct.stat*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @loadingProgress(i64) local_unnamed_addr #6 !dbg !6142 {
  store i64 %0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6148, !tbaa !6129
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6149, !tbaa !6151
  %3 = tail call i64 @zmalloc_used_memory() #9, !dbg !6152
  %4 = icmp ult i64 %2, %3, !dbg !6153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6154
  br i1 %4, label %5, label %7, !dbg !6154

; <label>:5:                                      ; preds = %1
  %6 = tail call i64 @zmalloc_used_memory() #9, !dbg !6155
  store i64 %6, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6156, !tbaa !6151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6157
  br label %7, !dbg !6157

; <label>:7:                                      ; preds = %5, %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6158
  ret void, !dbg !6158
}

; Function Attrs: norecurse noredzone nounwind
define dso_local void @stopLoading() local_unnamed_addr #7 !dbg !6159 {
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6160, !tbaa !6124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6161
  ret void, !dbg !6161
}

; Function Attrs: noredzone nounwind
define dso_local void @rdbLoadProgressCallback(%struct._rio*, i8*, i64) #6 !dbg !6162 {
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !6172, !tbaa !4197
  %5 = icmp eq i32 %4, 0, !dbg !6174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6175
  br i1 %5, label %7, label %6, !dbg !6175

; <label>:6:                                      ; preds = %3
  tail call void @rioGenericUpdateChecksum(%struct._rio* %0, i8* %1, i64 %2) #9, !dbg !6176
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6176
  br label %7, !dbg !6176

; <label>:7:                                      ; preds = %3, %6
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !6177, !tbaa !6179
  %9 = icmp eq i64 %8, 0, !dbg !6180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6181
  br i1 %9, label %33, label %10, !dbg !6181

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6, !dbg !6182
  %12 = load i64, i64* %11, align 8, !dbg !6182, !tbaa !528
  %13 = add i64 %12, %2, !dbg !6183
  %14 = udiv i64 %13, %8, !dbg !6184
  %15 = udiv i64 %12, %8, !dbg !6185
  %16 = icmp ugt i64 %14, %15, !dbg !6186
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6187
  br i1 %16, label %17, label %33, !dbg !6187

; <label>:17:                                     ; preds = %10
  tail call void @updateCachedTime() #9, !dbg !6188
  %18 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !6190, !tbaa !6192
  %19 = icmp ne i8* %18, null, !dbg !6193
  %20 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6194
  %21 = icmp eq i32 %20, 14, !dbg !6195
  %22 = and i1 %19, %21, !dbg !6196
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6196
  br i1 %22, label %23, label %24, !dbg !6196

; <label>:23:                                     ; preds = %17
  tail call void @replicationSendNewlineToMaster() #9, !dbg !6197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6197
  br label %24, !dbg !6197

; <label>:24:                                     ; preds = %23, %17
  %25 = load i64, i64* %11, align 8, !dbg !6198, !tbaa !528
  store i64 %25, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6201, !tbaa !6129
  %26 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6202, !tbaa !6151
  %27 = tail call i64 @zmalloc_used_memory() #9, !dbg !6203
  %28 = icmp ult i64 %26, %27, !dbg !6204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6205
  br i1 %28, label %29, label %31, !dbg !6205

; <label>:29:                                     ; preds = %24
  %30 = tail call i64 @zmalloc_used_memory() #9, !dbg !6206
  store i64 %30, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 83), align 8, !dbg !6207, !tbaa !6151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6208
  br label %31, !dbg !6208

; <label>:31:                                     ; preds = %24, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6209
  %32 = tail call i32 @processEventsWhileBlocked() #9, !dbg !6210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6211
  br label %33, !dbg !6211

; <label>:33:                                     ; preds = %7, %31, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6212
  ret void, !dbg !6212
}

; Function Attrs: noredzone
declare dso_local void @updateCachedTime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @replicationSendNewlineToMaster() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @processEventsWhileBlocked() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoadRio(%struct._rio*, %struct.rdbSaveInfo*, i32) local_unnamed_addr #6 !dbg !6213 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca [1024 x i8], align 16
  %16 = alloca i8, align 1
  %17 = alloca [10 x i8], align 1
  %18 = alloca %struct.RedisModuleIO, align 8
  %19 = alloca i64, align 8
  %20 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !6272, !tbaa !4257
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 0, !dbg !6274
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %21) #4, !dbg !6274
  %22 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 4, !dbg !6276
  store void (%struct._rio*, i8*, i64)* @rdbLoadProgressCallback, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6277, !tbaa !521
  %23 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 55), align 8, !dbg !6278, !tbaa !6179
  %24 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 7, !dbg !6279
  store i64 %23, i64* %24, align 8, !dbg !6280, !tbaa !506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6286
  %25 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 0
  %26 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 6
  br label %30, !dbg !6286

; <label>:27:                                     ; preds = %48
  %28 = getelementptr inbounds i8, i8* %33, i64 %39, !dbg !6287
  %29 = load i64, i64* %24, align 8, !dbg !6288, !tbaa !506
  br label %30, !dbg !6288

; <label>:30:                                     ; preds = %27, %3
  %31 = phi i64 [ %29, %27 ], [ %23, %3 ], !dbg !6288
  %32 = phi i64 [ %49, %27 ], [ 9, %3 ]
  %33 = phi i8* [ %28, %27 ], [ %21, %3 ]
  %34 = icmp eq i64 %31, 0, !dbg !6289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6290
  br i1 %34, label %37, label %35, !dbg !6290

; <label>:35:                                     ; preds = %30
  %36 = icmp ult i64 %31, %32, !dbg !6291
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6292
  br i1 %36, label %38, label %37, !dbg !6292

; <label>:37:                                     ; preds = %35, %30
  br label %38, !dbg !6292

; <label>:38:                                     ; preds = %35, %37
  %39 = phi i64 [ %32, %37 ], [ %31, %35 ], !dbg !6292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6292
  %40 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6294, !tbaa !515
  %41 = call i64 %40(%struct._rio* nonnull %0, i8* %33, i64 %39) #9, !dbg !6295
  %42 = icmp eq i64 %41, 0, !dbg !6296
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6297
  br i1 %42, label %43, label %44, !dbg !6297

; <label>:43:                                     ; preds = %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6298
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6299
  br label %447, !dbg !6300

; <label>:44:                                     ; preds = %38
  %45 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6301, !tbaa !521
  %46 = icmp eq void (%struct._rio*, i8*, i64)* %45, null, !dbg !6302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6303
  br i1 %46, label %48, label %47, !dbg !6303

; <label>:47:                                     ; preds = %44
  call void %45(%struct._rio* nonnull %0, i8* %33, i64 %39) #9, !dbg !6304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6304
  br label %48, !dbg !6304

; <label>:48:                                     ; preds = %47, %44
  %49 = sub i64 %32, %39, !dbg !6305
  %50 = load i64, i64* %26, align 8, !dbg !6306, !tbaa !528
  %51 = add i64 %50, %39, !dbg !6306
  store i64 %51, i64* %26, align 8, !dbg !6306, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6307
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %52 = icmp eq i64 %49, 0, !dbg !6286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6286
  br i1 %52, label %53, label %27, !dbg !6286

; <label>:53:                                     ; preds = %48
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6300
  %54 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 9, !dbg !6309
  store i8 0, i8* %54, align 1, !dbg !6310, !tbaa !545
  %55 = call i32 @memcmp(i8* nonnull %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i64 5) #9, !dbg !6311
  %56 = icmp eq i32 %55, 0, !dbg !6313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6314
  br i1 %56, label %59, label %57, !dbg !6314

; <label>:57:                                     ; preds = %53
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.67, i64 0, i64 0)) #9, !dbg !6315
  %58 = call i32* @__errno() #9, !dbg !6317
  store i32 22, i32* %58, align 4, !dbg !6318, !tbaa !191
  br label %449, !dbg !6319

; <label>:59:                                     ; preds = %53
  %60 = getelementptr inbounds [1024 x i8], [1024 x i8]* %15, i64 0, i64 5, !dbg !6320
  %61 = call i32 @atoi(i8* nonnull %60) #9, !dbg !6321
  %62 = add i32 %61, -1, !dbg !6323
  %63 = icmp ugt i32 %62, 8, !dbg !6323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6323
  br i1 %63, label %64, label %66, !dbg !6323

; <label>:64:                                     ; preds = %59
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68, i64 0, i64 0), i32 %61) #9, !dbg !6325
  %65 = call i32* @__errno() #9, !dbg !6327
  store i32 22, i32* %65, align 4, !dbg !6328, !tbaa !191
  br label %449, !dbg !6329

; <label>:66:                                     ; preds = %59
  %67 = call i64 @mstime() #9, !dbg !6333
  %68 = call i32 @LRU_CLOCK() #9, !dbg !6335
  %69 = zext i32 %68 to i64, !dbg !6335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6337
  %70 = bitcast i32* %13 to i8*
  %71 = bitcast i64* %12 to i8*
  %72 = bitcast i64* %11 to i8*
  %73 = bitcast i64* %10 to i8*
  %74 = bitcast i64* %9 to i8*
  %75 = bitcast i64* %8 to i8*
  %76 = bitcast i64* %7 to i8*
  %77 = bitcast i64* %6 to i8*
  %78 = bitcast i64* %5 to i8*
  %79 = icmp eq i32 %2, 0
  %80 = icmp eq %struct.rdbSaveInfo* %1, null
  %81 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 0
  %82 = getelementptr inbounds [10 x i8], [10 x i8]* %17, i64 0, i64 0
  %83 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 3
  %84 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 2, i64 0
  %85 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %1, i64 0, i32 1
  %86 = bitcast %struct.RedisModuleIO* %18 to i8*
  %87 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 1
  %88 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 2
  %89 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 0
  %90 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 3
  %91 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 4
  %92 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 6
  %93 = getelementptr inbounds %struct.RedisModuleIO, %struct.RedisModuleIO* %18, i64 0, i32 5
  %94 = bitcast i64* %4 to i8*
  %95 = bitcast %struct.RedisModuleCtx** %93 to i8**
  br label %96, !dbg !6337

; <label>:96:                                     ; preds = %398, %66
  %97 = phi i64 [ %399, %398 ], [ -1, %66 ]
  %98 = phi i64 [ %400, %398 ], [ -1, %66 ]
  %99 = phi i64 [ %401, %398 ], [ -1, %66 ]
  %100 = phi %struct.redisDb* [ %402, %398 ], [ %20, %66 ]
  %101 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %100, i64 0, i32 0
  %102 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %100, i64 0, i32 1
  br label %103, !dbg !6338

; <label>:103:                                    ; preds = %407, %96
  %104 = phi i64 [ %98, %96 ], [ %404, %407 ], !dbg !6331
  %105 = phi i64 [ %99, %96 ], [ %405, %407 ], !dbg !6330
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #4, !dbg !6338
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6347
  br label %106, !dbg !6347

; <label>:106:                                    ; preds = %123, %103
  %107 = phi i64 [ 1, %103 ], [ %125, %123 ]
  %108 = phi i8* [ %14, %103 ], [ %124, %123 ]
  %109 = load i64, i64* %24, align 8, !dbg !6348, !tbaa !506
  %110 = icmp eq i64 %109, 0, !dbg !6349
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6350
  br i1 %110, label %113, label %111, !dbg !6350

; <label>:111:                                    ; preds = %106
  %112 = icmp ult i64 %109, %107, !dbg !6351
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6352
  br i1 %112, label %114, label %113, !dbg !6352

; <label>:113:                                    ; preds = %111, %106
  br label %114, !dbg !6352

; <label>:114:                                    ; preds = %111, %113
  %115 = phi i64 [ %107, %113 ], [ %109, %111 ], !dbg !6352
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6352
  %116 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6354, !tbaa !515
  %117 = call i64 %116(%struct._rio* nonnull %0, i8* %108, i64 %115) #9, !dbg !6355
  %118 = icmp eq i64 %117, 0, !dbg !6356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6357
  br i1 %118, label %129, label %119, !dbg !6357

; <label>:119:                                    ; preds = %114
  %120 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6358, !tbaa !521
  %121 = icmp eq void (%struct._rio*, i8*, i64)* %120, null, !dbg !6359
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6360
  br i1 %121, label %123, label %122, !dbg !6360

; <label>:122:                                    ; preds = %119
  call void %120(%struct._rio* nonnull %0, i8* %108, i64 %115) #9, !dbg !6361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6361
  br label %123, !dbg !6361

; <label>:123:                                    ; preds = %122, %119
  %124 = getelementptr inbounds i8, i8* %108, i64 %115, !dbg !6362
  %125 = sub i64 %107, %115, !dbg !6363
  %126 = load i64, i64* %26, align 8, !dbg !6364, !tbaa !528
  %127 = add i64 %126, %115, !dbg !6364
  store i64 %127, i64* %26, align 8, !dbg !6364, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6365
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %128 = icmp eq i64 %125, 0, !dbg !6347
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6347
  br i1 %128, label %130, label %106, !dbg !6347

; <label>:129:                                    ; preds = %114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6366
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6368
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6369
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4, !dbg !6370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6371
  br label %397, !dbg !6372

; <label>:130:                                    ; preds = %123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6373
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6367
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6368
  %131 = load i8, i8* %14, align 1, !dbg !6374, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6375
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4, !dbg !6370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6370
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6371
  %132 = icmp eq i8 %131, -3, !dbg !6376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6377
  br i1 %132, label %133, label %137, !dbg !6377

; <label>:133:                                    ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #4, !dbg !6381
  call void @rdbLoadRaw(%struct._rio* nonnull %0, i8* nonnull %70, i64 4) #9, !dbg !6382
  %134 = load i32, i32* %13, align 4, !dbg !6383, !tbaa !191
  %135 = sext i32 %134 to i64, !dbg !6385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #4, !dbg !6386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6387
  %136 = mul nsw i64 %135, 1000, !dbg !6388
  br label %398, !dbg !6389, !llvm.loop !6390

; <label>:137:                                    ; preds = %130
  %138 = icmp eq i8 %131, -4, !dbg !6392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6393
  br i1 %138, label %139, label %141, !dbg !6393

; <label>:139:                                    ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #4, !dbg !6398
  call void @rdbLoadRaw(%struct._rio* nonnull %0, i8* nonnull %71, i64 8) #9, !dbg !6399
  %140 = load i64, i64* %12, align 8, !dbg !6400, !tbaa !674
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #4, !dbg !6402
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6403
  br label %398, !dbg !6404, !llvm.loop !6390

; <label>:141:                                    ; preds = %137
  %142 = icmp eq i8 %131, -7, !dbg !6405
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6406
  br i1 %142, label %143, label %174, !dbg !6406

; <label>:143:                                    ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #4, !dbg !6408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6414
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6414
  br label %144, !dbg !6414

; <label>:144:                                    ; preds = %161, %143
  %145 = phi i64 [ 1, %143 ], [ %163, %161 ]
  %146 = phi i8* [ %16, %143 ], [ %162, %161 ]
  %147 = load i64, i64* %24, align 8, !dbg !6415, !tbaa !506
  %148 = icmp eq i64 %147, 0, !dbg !6416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6417
  br i1 %148, label %151, label %149, !dbg !6417

; <label>:149:                                    ; preds = %144
  %150 = icmp ult i64 %147, %145, !dbg !6418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6419
  br i1 %150, label %152, label %151, !dbg !6419

; <label>:151:                                    ; preds = %149, %144
  br label %152, !dbg !6419

; <label>:152:                                    ; preds = %149, %151
  %153 = phi i64 [ %145, %151 ], [ %147, %149 ], !dbg !6419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6419
  %154 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6421, !tbaa !515
  %155 = call i64 %154(%struct._rio* nonnull %0, i8* %146, i64 %153) #9, !dbg !6422
  %156 = icmp eq i64 %155, 0, !dbg !6423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6424
  br i1 %156, label %167, label %157, !dbg !6424

; <label>:157:                                    ; preds = %152
  %158 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6425, !tbaa !521
  %159 = icmp eq void (%struct._rio*, i8*, i64)* %158, null, !dbg !6426
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6427
  br i1 %159, label %161, label %160, !dbg !6427

; <label>:160:                                    ; preds = %157
  call void %158(%struct._rio* nonnull %0, i8* %146, i64 %153) #9, !dbg !6428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6428
  br label %161, !dbg !6428

; <label>:161:                                    ; preds = %160, %157
  %162 = getelementptr inbounds i8, i8* %146, i64 %153, !dbg !6429
  %163 = sub i64 %145, %153, !dbg !6430
  %164 = load i64, i64* %26, align 8, !dbg !6431, !tbaa !528
  %165 = add i64 %164, %153, !dbg !6431
  store i64 %165, i64* %26, align 8, !dbg !6431, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6432
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %166 = icmp eq i64 %163, 0, !dbg !6414
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6414
  br i1 %166, label %168, label %144, !dbg !6414

; <label>:167:                                    ; preds = %152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6433
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6435
  br label %171, !dbg !6436

; <label>:168:                                    ; preds = %161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6437
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6435
  %169 = load i8, i8* %16, align 1, !dbg !6438, !tbaa !545
  %170 = zext i8 %169 to i64, !dbg !6438
  br label %171, !dbg !6439, !llvm.loop !6390

; <label>:171:                                    ; preds = %167, %168
  %172 = phi i64 [ %104, %167 ], [ %170, %168 ], !dbg !6440
  %173 = phi i32 [ 2, %167 ], [ 3, %168 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6440
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #4, !dbg !6441
  br label %403

; <label>:174:                                    ; preds = %141
  %175 = icmp eq i8 %131, -8, !dbg !6442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6443
  br i1 %175, label %176, label %184, !dbg !6443

; <label>:176:                                    ; preds = %174
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #4, !dbg !6448
  %177 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %11) #9, !dbg !6450
  %178 = icmp eq i32 %177, -1, !dbg !6451
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6452
  %179 = load i64, i64* %11, align 8, !dbg !6453
  %180 = select i1 %178, i64 -1, i64 %179, !dbg !6452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6454
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #4, !dbg !6455
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6455
  %181 = icmp eq i64 %180, -1, !dbg !6457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6458
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6459
  %182 = select i1 %181, i64 %105, i64 %180, !dbg !6460
  %183 = select i1 %181, i32 2, i32 3, !dbg !6460
  br label %403

; <label>:184:                                    ; preds = %174
  %185 = icmp eq i8 %131, -1, !dbg !6461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6462
  br i1 %185, label %186, label %188, !dbg !6462

; <label>:186:                                    ; preds = %184
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6463
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %187 = icmp sgt i32 %61, 4, !dbg !6465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6466
  br i1 %187, label %408, label %449, !dbg !6466

; <label>:188:                                    ; preds = %184
  %189 = icmp eq i8 %131, -2, !dbg !6467
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6468
  br i1 %189, label %190, label %205, !dbg !6468

; <label>:190:                                    ; preds = %188
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #4, !dbg !6474
  %191 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %10) #9, !dbg !6476
  %192 = icmp eq i32 %191, -1, !dbg !6477
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6478
  br i1 %192, label %193, label %194, !dbg !6478

; <label>:193:                                    ; preds = %190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6479
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #4, !dbg !6480
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6480
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6482
  br label %397, !dbg !6482

; <label>:194:                                    ; preds = %190
  %195 = load i64, i64* %10, align 8, !dbg !6483, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6484
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #4, !dbg !6480
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6480
  %196 = icmp eq i64 %195, -1, !dbg !6485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6482
  br i1 %196, label %397, label %197, !dbg !6482

; <label>:197:                                    ; preds = %194
  %198 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !6486, !tbaa !4253
  %199 = zext i32 %198 to i64, !dbg !6488
  %200 = icmp ult i64 %195, %199, !dbg !6489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6490
  br i1 %200, label %202, label %201, !dbg !6490

; <label>:201:                                    ; preds = %197
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.69, i64 0, i64 0), i32 %198) #9, !dbg !6491
  call void @exit(i32 1) #10, !dbg !6493
  unreachable

; <label>:202:                                    ; preds = %197
  %203 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !6494, !tbaa !4257
  %204 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %203, i64 %195, !dbg !6495
  br label %398, !dbg !6496, !llvm.loop !6390

; <label>:205:                                    ; preds = %188
  %206 = icmp eq i8 %131, -5, !dbg !6497
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6498
  br i1 %206, label %207, label %228, !dbg !6498

; <label>:207:                                    ; preds = %205
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #4, !dbg !6503
  %208 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %9) #9, !dbg !6505
  %209 = icmp eq i32 %208, -1, !dbg !6506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6507
  br i1 %209, label %210, label %211, !dbg !6507

; <label>:210:                                    ; preds = %207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6508
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #4, !dbg !6509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6511
  br label %226, !dbg !6511

; <label>:211:                                    ; preds = %207
  %212 = load i64, i64* %9, align 8, !dbg !6512, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6513
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #4, !dbg !6509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6509
  %213 = icmp eq i64 %212, -1, !dbg !6514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6511
  br i1 %213, label %226, label %214, !dbg !6511

; <label>:214:                                    ; preds = %211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #4, !dbg !6519
  %215 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %8) #9, !dbg !6521
  %216 = icmp eq i32 %215, -1, !dbg !6522
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6523
  br i1 %216, label %217, label %218, !dbg !6523

; <label>:217:                                    ; preds = %214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6524
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #4, !dbg !6525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6527
  br label %226, !dbg !6527

; <label>:218:                                    ; preds = %214
  %219 = load i64, i64* %8, align 8, !dbg !6528, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6529
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #4, !dbg !6525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6525
  %220 = icmp eq i64 %219, -1, !dbg !6530
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6527
  br i1 %220, label %226, label %221, !dbg !6527

; <label>:221:                                    ; preds = %218
  %222 = load %struct.dict*, %struct.dict** %101, align 8, !dbg !6531, !tbaa !4261
  %223 = call i32 @dictExpand(%struct.dict* %222, i64 %212) #9, !dbg !6532
  %224 = load %struct.dict*, %struct.dict** %102, align 8, !dbg !6533, !tbaa !4280
  %225 = call i32 @dictExpand(%struct.dict* %224, i64 %219) #9, !dbg !6534
  br label %226, !dbg !6535, !llvm.loop !6390

; <label>:226:                                    ; preds = %218, %217, %211, %210, %221
  %227 = phi i32 [ 3, %221 ], [ 2, %210 ], [ 2, %211 ], [ 2, %217 ], [ 2, %218 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6536
  br label %403

; <label>:228:                                    ; preds = %205
  %229 = icmp eq i8 %131, -6, !dbg !6537
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6538
  br i1 %229, label %230, label %316, !dbg !6538

; <label>:230:                                    ; preds = %228
  %231 = call i8* @rdbGenericLoadStringObject(%struct._rio* nonnull %0, i32 0, i64* null) #9, !dbg !6542
  %232 = bitcast i8* %231 to %struct.redisObject*, !dbg !6542
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6543
  %233 = icmp eq i8* %231, null, !dbg !6545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6546
  br i1 %233, label %314, label %234, !dbg !6546

; <label>:234:                                    ; preds = %230
  %235 = call i8* @rdbGenericLoadStringObject(%struct._rio* nonnull %0, i32 0, i64* null) #9, !dbg !6550
  %236 = bitcast i8* %235 to %struct.redisObject*, !dbg !6550
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6551
  %237 = icmp eq i8* %235, null, !dbg !6553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6554
  br i1 %237, label %314, label %238, !dbg !6554

; <label>:238:                                    ; preds = %234
  %239 = getelementptr inbounds i8, i8* %231, i64 8, !dbg !6555
  %240 = bitcast i8* %239 to i8**, !dbg !6555
  %241 = load i8*, i8** %240, align 8, !dbg !6555, !tbaa !2111
  %242 = load i8, i8* %241, align 1, !dbg !6557, !tbaa !545
  %243 = icmp eq i8 %242, 37, !dbg !6558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6559
  br i1 %243, label %244, label %248, !dbg !6559

; <label>:244:                                    ; preds = %238
  %245 = getelementptr inbounds i8, i8* %235, i64 8, !dbg !6560
  %246 = bitcast i8* %245 to i8**, !dbg !6560
  %247 = load i8*, i8** %246, align 8, !dbg !6560, !tbaa !2111
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i64 0, i64 0), i8* %241, i8* %247) #9, !dbg !6562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6563
  br label %313, !dbg !6563

; <label>:248:                                    ; preds = %238
  %249 = call i32 @strcasecmp(i8* %241, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !6564
  %250 = icmp eq i32 %249, 0, !dbg !6564
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6566
  br i1 %250, label %251, label %257, !dbg !6566

; <label>:251:                                    ; preds = %248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6567
  br i1 %80, label %313, label %252, !dbg !6567

; <label>:252:                                    ; preds = %251
  %253 = getelementptr inbounds i8, i8* %235, i64 8, !dbg !6569
  %254 = bitcast i8* %253 to i8**, !dbg !6569
  %255 = load i8*, i8** %254, align 8, !dbg !6569, !tbaa !2111
  %256 = call i32 @atoi(i8* %255) #9, !dbg !6571
  store i32 %256, i32* %81, align 8, !dbg !6572, !tbaa !4031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6573
  br label %313, !dbg !6573

; <label>:257:                                    ; preds = %248
  %258 = call i32 @strcasecmp(i8* %241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !6574
  %259 = icmp eq i32 %258, 0, !dbg !6574
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6576
  br i1 %259, label %260, label %292, !dbg !6576

; <label>:260:                                    ; preds = %257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6577
  br i1 %80, label %313, label %261, !dbg !6577

; <label>:261:                                    ; preds = %260
  %262 = getelementptr inbounds i8, i8* %235, i64 8, !dbg !6580
  %263 = bitcast i8* %262 to i8**, !dbg !6580
  %264 = load i8*, i8** %263, align 8, !dbg !6580, !tbaa !2111
  %265 = getelementptr inbounds i8, i8* %264, i64 -1, !dbg !6583
  %266 = load i8, i8* %265, align 1, !dbg !6583, !tbaa !545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6585
  %267 = trunc i8 %266 to i3, !dbg !6585
  switch i3 %267, label %286 [
    i3 -4, label %282
    i3 1, label %268
    i3 2, label %272
    i3 3, label %277
  ], !dbg !6585

; <label>:268:                                    ; preds = %261
  %269 = getelementptr inbounds i8, i8* %264, i64 -3, !dbg !6586
  %270 = load i8, i8* %269, align 1, !dbg !6587, !tbaa !545
  %271 = zext i8 %270 to i64, !dbg !6586
  br label %287, !dbg !6588

; <label>:272:                                    ; preds = %261
  %273 = getelementptr inbounds i8, i8* %264, i64 -5, !dbg !6589
  %274 = bitcast i8* %273 to i16*, !dbg !6590
  %275 = load i16, i16* %274, align 1, !dbg !6590, !tbaa !2138
  %276 = zext i16 %275 to i64, !dbg !6589
  br label %287, !dbg !6591

; <label>:277:                                    ; preds = %261
  %278 = getelementptr inbounds i8, i8* %264, i64 -9, !dbg !6592
  %279 = bitcast i8* %278 to i32*, !dbg !6593
  %280 = load i32, i32* %279, align 1, !dbg !6593, !tbaa !191
  %281 = zext i32 %280 to i64, !dbg !6592
  br label %287, !dbg !6594

; <label>:282:                                    ; preds = %261
  %283 = getelementptr inbounds i8, i8* %264, i64 -17, !dbg !6595
  %284 = bitcast i8* %283 to i64*, !dbg !6596
  %285 = load i64, i64* %284, align 1, !dbg !6596, !tbaa !674
  br label %287, !dbg !6597

; <label>:286:                                    ; preds = %261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6600
  br label %313, !dbg !6600

; <label>:287:                                    ; preds = %268, %272, %277, %282
  %288 = phi i64 [ %285, %282 ], [ %281, %277 ], [ %276, %272 ], [ %271, %268 ], !dbg !6601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6599
  %289 = icmp eq i64 %288, 40, !dbg !6602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6600
  br i1 %289, label %290, label %313, !dbg !6600

; <label>:290:                                    ; preds = %287
  %291 = call i8* @memcpy(i8* nonnull %84, i8* nonnull %264, i64 41) #9, !dbg !6603
  store i32 1, i32* %85, align 4, !dbg !6605, !tbaa !6606
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6607
  br label %313, !dbg !6607

; <label>:292:                                    ; preds = %257
  %293 = call i32 @strcasecmp(i8* %241, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !6608
  %294 = icmp eq i32 %293, 0, !dbg !6608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6610
  br i1 %294, label %295, label %301, !dbg !6610

; <label>:295:                                    ; preds = %292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6611
  br i1 %80, label %313, label %296, !dbg !6611

; <label>:296:                                    ; preds = %295
  %297 = getelementptr inbounds i8, i8* %235, i64 8, !dbg !6613
  %298 = bitcast i8* %297 to i8**, !dbg !6613
  %299 = load i8*, i8** %298, align 8, !dbg !6613, !tbaa !2111
  %300 = call i64 @strtoll(i8* %299, i8** null, i32 10) #9, !dbg !6615
  store i64 %300, i64* %83, align 8, !dbg !6616, !tbaa !6617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6618
  br label %313, !dbg !6618

; <label>:301:                                    ; preds = %292
  %302 = call i32 @strcasecmp(i8* %241, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !6619
  %303 = icmp eq i32 %302, 0, !dbg !6619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6621
  br i1 %303, label %304, label %312, !dbg !6621

; <label>:304:                                    ; preds = %301
  %305 = load %struct.lua_State*, %struct.lua_State** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 270), align 8, !dbg !6622, !tbaa !6625
  %306 = call i8* @luaCreateFunction(%struct.client* null, %struct.lua_State* %305, %struct.redisObject* nonnull %236) #9, !dbg !6626
  %307 = icmp eq i8* %306, null, !dbg !6627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6628
  br i1 %307, label %308, label %313, !dbg !6628

; <label>:308:                                    ; preds = %304
  %309 = getelementptr inbounds i8, i8* %235, i64 8, !dbg !6629
  %310 = bitcast i8* %309 to i8**, !dbg !6629
  %311 = load i8*, i8** %310, align 8, !dbg !6629, !tbaa !2111
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2008, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.71, i64 0, i64 0), i8* %311) #11, !dbg !6629
  unreachable

; <label>:312:                                    ; preds = %301
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i8* %241) #9, !dbg !6631
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %313

; <label>:313:                                    ; preds = %286, %295, %260, %251, %252, %296, %304, %312, %287, %290, %244
  call void @decrRefCount(%struct.redisObject* nonnull %232) #9, !dbg !6633
  call void @decrRefCount(%struct.redisObject* nonnull %236) #9, !dbg !6634
  br label %314, !dbg !6635, !llvm.loop !6390

; <label>:314:                                    ; preds = %234, %230, %313
  %315 = phi i32 [ 3, %313 ], [ 2, %230 ], [ 2, %234 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6636
  br label %403

; <label>:316:                                    ; preds = %228
  %317 = zext i8 %131 to i32, !dbg !6374
  %318 = icmp eq i8 %131, -9, !dbg !6637
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6638
  br i1 %318, label %319, label %377, !dbg !6638

; <label>:319:                                    ; preds = %316
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #4, !dbg !6642
  %320 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %7) #9, !dbg !6644
  %321 = icmp eq i32 %320, -1, !dbg !6645
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6646
  %322 = load i64, i64* %7, align 8, !dbg !6647
  %323 = select i1 %321, i64 -1, i64 %322, !dbg !6646
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6648
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #4, !dbg !6649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #4, !dbg !6654
  %324 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %6) #9, !dbg !6656
  %325 = icmp ne i32 %324, -1, !dbg !6657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6658
  %326 = load i64, i64* %6, align 8, !dbg !6659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6648
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #4, !dbg !6660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6660
  %327 = trunc i64 %326 to i32, !dbg !6661
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #4, !dbg !6665
  %328 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %5) #9, !dbg !6667
  %329 = icmp eq i32 %328, -1, !dbg !6668
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6669
  %330 = load i64, i64* %5, align 8, !dbg !6670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6648
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #4, !dbg !6671
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6671
  %331 = trunc i64 %330 to i32, !dbg !6672
  %332 = select i1 %329, i32 -1, i32 %331, !dbg !6672
  %333 = icmp eq i32 %327, 2, !dbg !6674
  %334 = and i1 %333, %325, !dbg !6674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6676
  br i1 %334, label %336, label %335, !dbg !6676

; <label>:335:                                    ; preds = %319
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2028, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i64 0, i64 0)) #11, !dbg !6677
  unreachable

; <label>:336:                                    ; preds = %319
  %337 = call %struct.RedisModuleType* @moduleTypeLookupModuleByID(i64 %323) #9, !dbg !6678
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %82) #4, !dbg !6680
  call void @moduleTypeNameByID(i8* nonnull %82, i64 %323) #9, !dbg !6682
  %338 = load i32, i32* @rdbCheckMode, align 4, !dbg !6683, !tbaa !191
  %339 = icmp eq i32 %338, 0, !dbg !6683
  %340 = icmp eq %struct.RedisModuleType* %337, null, !dbg !6684
  %341 = and i1 %340, %339, !dbg !6685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6685
  br i1 %341, label %342, label %343, !dbg !6685

; <label>:342:                                    ; preds = %336
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.74, i64 0, i64 0), i8* nonnull %82) #9, !dbg !6686
  call void @exit(i32 1) #10, !dbg !6688
  unreachable

; <label>:343:                                    ; preds = %336
  %344 = icmp ne %struct.RedisModuleType* %337, null, !dbg !6689
  %345 = and i1 %344, %339, !dbg !6690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6690
  br i1 %345, label %346, label %374, !dbg !6690

; <label>:346:                                    ; preds = %343
  %347 = getelementptr inbounds %struct.RedisModuleType, %struct.RedisModuleType* %337, i64 0, i32 8, !dbg !6691
  %348 = load i32 (%struct.RedisModuleIO*, i32, i32)*, i32 (%struct.RedisModuleIO*, i32, i32)** %347, align 8, !dbg !6691, !tbaa !6693
  %349 = icmp eq i32 (%struct.RedisModuleIO*, i32, i32)* %348, null, !dbg !6694
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6695
  br i1 %349, label %350, label %351, !dbg !6695

; <label>:350:                                    ; preds = %346
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.75, i64 0, i64 0), i8* nonnull %82) #9, !dbg !6696
  call void @exit(i32 1) #10, !dbg !6698
  unreachable

; <label>:351:                                    ; preds = %346
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #4, !dbg !6699
  store %struct._rio* %0, %struct._rio** %87, align 8, !dbg !6700, !tbaa !3683
  store %struct.RedisModuleType* %337, %struct.RedisModuleType** %88, align 8, !dbg !6700, !tbaa !3685
  store i64 0, i64* %89, align 8, !dbg !6700, !tbaa !3686
  store i32 0, i32* %90, align 8, !dbg !6700, !tbaa !3687
  store %struct.redisObject* null, %struct.redisObject** %92, align 8, !dbg !6700, !tbaa !3689
  store %struct.RedisModuleCtx* null, %struct.RedisModuleCtx** %93, align 8, !dbg !6700, !tbaa !3690
  store i32 2, i32* %91, align 4, !dbg !6702, !tbaa !3688
  %352 = trunc i64 %323 to i32, !dbg !6703
  %353 = and i32 %352, 1023, !dbg !6703
  %354 = call i32 %348(%struct.RedisModuleIO* nonnull %18, i32 %353, i32 %332) #9, !dbg !6706
  %355 = icmp eq i32 %354, 0, !dbg !6706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6707
  br i1 %355, label %356, label %359, !dbg !6707

; <label>:356:                                    ; preds = %351
  %357 = load i32, i32* %90, align 8, !dbg !6708, !tbaa !3687
  %358 = icmp eq i32 %357, 0, !dbg !6709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6710
  br i1 %358, label %360, label %359, !dbg !6710

; <label>:359:                                    ; preds = %356, %351
  call void @moduleTypeNameByID(i8* nonnull %82, i64 %323) #9, !dbg !6711
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.76, i64 0, i64 0), i8* nonnull %82) #9, !dbg !6713
  call void @exit(i32 1) #10, !dbg !6714
  unreachable

; <label>:360:                                    ; preds = %356
  %361 = load %struct.RedisModuleCtx*, %struct.RedisModuleCtx** %93, align 8, !dbg !6715, !tbaa !3690
  %362 = icmp eq %struct.RedisModuleCtx* %361, null, !dbg !6717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6718
  br i1 %362, label %365, label %363, !dbg !6718

; <label>:363:                                    ; preds = %360
  call void @moduleFreeContext(%struct.RedisModuleCtx* nonnull %361) #9, !dbg !6719
  %364 = load i8*, i8** %95, align 8, !dbg !6721, !tbaa !3690
  call void @zfree(i8* %364) #9, !dbg !6722
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6723
  br label %365, !dbg !6723

; <label>:365:                                    ; preds = %360, %363
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #4, !dbg !6727
  %366 = call i32 @rdbLoadLenByRef(%struct._rio* nonnull %0, i32* null, i64* nonnull %4) #9, !dbg !6729
  %367 = icmp eq i32 %366, -1, !dbg !6730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6731
  br i1 %367, label %368, label %369, !dbg !6731

; <label>:368:                                    ; preds = %365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6732
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4, !dbg !6733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6735
  br label %372, !dbg !6735

; <label>:369:                                    ; preds = %365
  %370 = load i64, i64* %4, align 8, !dbg !6736, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6737
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4, !dbg !6733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6733
  %371 = icmp eq i64 %370, 0, !dbg !6738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6735
  br i1 %371, label %373, label %372, !dbg !6735

; <label>:372:                                    ; preds = %369, %368
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.77, i64 0, i64 0), i8* nonnull %82) #9, !dbg !6740
  call void @exit(i32 1) #10, !dbg !6742
  unreachable

; <label>:373:                                    ; preds = %369
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #4, !dbg !6743
  br label %376

; <label>:374:                                    ; preds = %343
  %375 = call %struct.redisObject* @rdbLoadCheckModuleValue(%struct._rio* nonnull %0, i8* nonnull %82) #11, !dbg !6744
  call void @decrRefCount(%struct.redisObject* %375) #9, !dbg !6746
  br label %376

; <label>:376:                                    ; preds = %374, %373
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %82) #4, !dbg !6747
  br label %398

; <label>:377:                                    ; preds = %316
  %378 = call i8* @rdbGenericLoadStringObject(%struct._rio* nonnull %0, i32 0, i64* null) #9, !dbg !6751
  %379 = bitcast i8* %378 to %struct.redisObject*, !dbg !6751
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6752
  %380 = icmp eq i8* %378, null, !dbg !6754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6755
  br i1 %380, label %397, label %381, !dbg !6755

; <label>:381:                                    ; preds = %377
  %382 = call %struct.redisObject* @rdbLoadObject(i32 %317, %struct._rio* nonnull %0, %struct.redisObject* nonnull %379) #11, !dbg !6756
  %383 = icmp eq %struct.redisObject* %382, null, !dbg !6759
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6760
  br i1 %383, label %397, label %384, !dbg !6760

; <label>:384:                                    ; preds = %381
  %385 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !6761, !tbaa !6192
  %386 = icmp eq i8* %385, null, !dbg !6763
  %387 = and i1 %79, %386, !dbg !6764
  %388 = icmp ne i64 %97, -1, !dbg !6765
  %389 = and i1 %388, %387, !dbg !6764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6764
  br i1 %389, label %390, label %393, !dbg !6764

; <label>:390:                                    ; preds = %384
  %391 = icmp slt i64 %97, %67, !dbg !6766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6767
  br i1 %391, label %392, label %393, !dbg !6767

; <label>:392:                                    ; preds = %390
  call void @decrRefCount(%struct.redisObject* nonnull %379) #9, !dbg !6768
  call void @decrRefCount(%struct.redisObject* nonnull %382) #9, !dbg !6770
  br label %396, !dbg !6771

; <label>:393:                                    ; preds = %384, %390
  call void @dbAdd(%struct.redisDb* %100, %struct.redisObject* nonnull %379, %struct.redisObject* nonnull %382) #9, !dbg !6772
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6774
  br i1 %388, label %394, label %395, !dbg !6774

; <label>:394:                                    ; preds = %393
  call void @setExpire(%struct.client* null, %struct.redisDb* %100, %struct.redisObject* nonnull %379, i64 %97) #9, !dbg !6775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6775
  br label %395, !dbg !6775

; <label>:395:                                    ; preds = %394, %393
  call void @objectSetLRUOrLFU(%struct.redisObject* nonnull %382, i64 %104, i64 %105, i64 %69) #9, !dbg !6777
  call void @decrRefCount(%struct.redisObject* nonnull %379) #9, !dbg !6778
  br label %396

; <label>:396:                                    ; preds = %395, %392
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %398, !dbg !6391

; <label>:397:                                    ; preds = %381, %377, %194, %193, %129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6779
  br label %447

; <label>:398:                                    ; preds = %133, %139, %202, %376, %396
  %399 = phi i64 [ -1, %396 ], [ %97, %376 ], [ %97, %202 ], [ %140, %139 ], [ %136, %133 ]
  %400 = phi i64 [ -1, %396 ], [ %104, %376 ], [ %104, %202 ], [ %104, %139 ], [ %104, %133 ]
  %401 = phi i64 [ -1, %396 ], [ %105, %376 ], [ %105, %202 ], [ %105, %139 ], [ %105, %133 ]
  %402 = phi %struct.redisDb* [ %100, %396 ], [ %100, %376 ], [ %204, %202 ], [ %100, %139 ], [ %100, %133 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %96, !llvm.loop !6390

; <label>:403:                                    ; preds = %314, %226, %176, %171
  %404 = phi i64 [ %172, %171 ], [ %104, %176 ], [ %104, %226 ], [ %104, %314 ], !dbg !6780
  %405 = phi i64 [ %105, %171 ], [ %182, %176 ], [ %105, %226 ], [ %105, %314 ], !dbg !6780
  %406 = phi i32 [ %173, %171 ], [ %183, %176 ], [ %227, %226 ], [ %315, %314 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  switch i32 %406, label %451 [
    i32 0, label %407
    i32 3, label %407
    i32 2, label %448
  ]

; <label>:407:                                    ; preds = %403, %403
  br label %103, !dbg !6273, !llvm.loop !6390

; <label>:408:                                    ; preds = %186
  %409 = bitcast i64* %19 to i8*, !dbg !6781
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %409) #4, !dbg !6781
  %410 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 5, !dbg !6782
  %411 = load i64, i64* %410, align 8, !dbg !6782, !tbaa !4403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  br label %412, !dbg !6789

; <label>:412:                                    ; preds = %429, %408
  %413 = phi i64 [ 8, %408 ], [ %431, %429 ]
  %414 = phi i8* [ %409, %408 ], [ %430, %429 ]
  %415 = load i64, i64* %24, align 8, !dbg !6790, !tbaa !506
  %416 = icmp eq i64 %415, 0, !dbg !6791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6792
  br i1 %416, label %419, label %417, !dbg !6792

; <label>:417:                                    ; preds = %412
  %418 = icmp ult i64 %415, %413, !dbg !6793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6794
  br i1 %418, label %420, label %419, !dbg !6794

; <label>:419:                                    ; preds = %417, %412
  br label %420, !dbg !6794

; <label>:420:                                    ; preds = %417, %419
  %421 = phi i64 [ %413, %419 ], [ %415, %417 ], !dbg !6794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6794
  %422 = load i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)** %25, align 8, !dbg !6796, !tbaa !515
  %423 = call i64 %422(%struct._rio* nonnull %0, i8* %414, i64 %421) #9, !dbg !6797
  %424 = icmp eq i64 %423, 0, !dbg !6798
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6799
  br i1 %424, label %446, label %425, !dbg !6799

; <label>:425:                                    ; preds = %420
  %426 = load void (%struct._rio*, i8*, i64)*, void (%struct._rio*, i8*, i64)** %22, align 8, !dbg !6800, !tbaa !521
  %427 = icmp eq void (%struct._rio*, i8*, i64)* %426, null, !dbg !6801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6802
  br i1 %427, label %429, label %428, !dbg !6802

; <label>:428:                                    ; preds = %425
  call void %426(%struct._rio* nonnull %0, i8* %414, i64 %421) #9, !dbg !6803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6803
  br label %429, !dbg !6803

; <label>:429:                                    ; preds = %428, %425
  %430 = getelementptr inbounds i8, i8* %414, i64 %421, !dbg !6804
  %431 = sub i64 %413, %421, !dbg !6805
  %432 = load i64, i64* %26, align 8, !dbg !6806, !tbaa !528
  %433 = add i64 %432, %421, !dbg !6806
  store i64 %433, i64* %26, align 8, !dbg !6806, !tbaa !528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6807
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %434 = icmp eq i64 %431, 0, !dbg !6789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6789
  br i1 %434, label %435, label %412, !dbg !6789

; <label>:435:                                    ; preds = %429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6810
  %436 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 159), align 4, !dbg !6811, !tbaa !4197
  %437 = icmp eq i32 %436, 0, !dbg !6813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6814
  br i1 %437, label %445, label %438, !dbg !6814

; <label>:438:                                    ; preds = %435
  %439 = load i64, i64* %19, align 8, !dbg !6815, !tbaa !674
  %440 = icmp eq i64 %439, 0, !dbg !6819
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6820
  br i1 %440, label %441, label %442, !dbg !6820

; <label>:441:                                    ; preds = %438
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !6821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6823
  br label %445, !dbg !6823

; <label>:442:                                    ; preds = %438
  %443 = icmp eq i64 %439, %411, !dbg !6824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6826
  br i1 %443, label %445, label %444, !dbg !6826

; <label>:444:                                    ; preds = %442
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !6827
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0)) #11, !dbg !6829
  unreachable

; <label>:445:                                    ; preds = %441, %435, %442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6830
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %409) #4, !dbg !6830
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %449

; <label>:446:                                    ; preds = %420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6831
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6832
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %409) #4, !dbg !6830
  br label %447

; <label>:447:                                    ; preds = %43, %397, %446
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %448, !dbg !6833

; <label>:448:                                    ; preds = %403, %447
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !6833
  call void (i32, i8*, ...) @rdbCheckThenExit(i32 2124, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.82, i64 0, i64 0)) #11, !dbg !6834
  unreachable

; <label>:449:                                    ; preds = %186, %445, %57, %64
  %450 = phi i32 [ -1, %64 ], [ -1, %57 ], [ 0, %445 ], [ 0, %186 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6835
  br label %451, !dbg !6836

; <label>:451:                                    ; preds = %403, %449
  %452 = phi i32 [ %450, %449 ], [ undef, %403 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %21) #4, !dbg !6836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6836
  ret i32 %452, !dbg !6836
}

; Function Attrs: noredzone
declare dso_local i32 @atoi(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @mstime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @LRU_CLOCK() local_unnamed_addr #3

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #8

; Function Attrs: noredzone
declare dso_local i8* @luaCreateFunction(%struct.client*, %struct.lua_State*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @dbAdd(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setExpire(%struct.client*, %struct.redisDb*, %struct.redisObject*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @objectSetLRUOrLFU(%struct.redisObject*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbLoad(i8*, %struct.rdbSaveInfo*) local_unnamed_addr #6 !dbg !6837 {
  %3 = alloca %struct.stat, align 8
  %4 = alloca %struct._rio, align 8
  %5 = bitcast %struct._rio* %4 to i8*, !dbg !6846
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #4, !dbg !6846
  %6 = tail call %struct.__sFILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !6847
  %7 = icmp eq %struct.__sFILE* %6, null, !dbg !6850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6851
  br i1 %7, label %19, label %8, !dbg !6851

; <label>:8:                                      ; preds = %2
  %9 = bitcast %struct.stat* %3 to i8*, !dbg !6854
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #4, !dbg !6854
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6855, !tbaa !6124
  %10 = tail call i64 @time(i64* null) #9, !dbg !6856
  store i64 %10, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 54), align 8, !dbg !6857, !tbaa !6127
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 53), align 8, !dbg !6858, !tbaa !6129
  %11 = tail call i32 @fileno(%struct.__sFILE* nonnull %6) #9, !dbg !6859
  %12 = call i32 @fstat(i32 %11, %struct.stat* nonnull %3) #9, !dbg !6861
  %13 = icmp eq i32 %12, -1, !dbg !6862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6863
  %14 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 7, !dbg !6864
  %15 = load i64, i64* %14, align 8, !dbg !6864
  %16 = select i1 %13, i64 0, i64 %15, !dbg !6863
  store i64 %16, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 52), align 8, !dbg !6865, !tbaa !6140
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #4, !dbg !6866
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6866
  call void @rioInitWithFile(%struct._rio* nonnull %4, %struct.__sFILE* nonnull %6) #9, !dbg !6868
  %17 = call i32 @rdbLoadRio(%struct._rio* nonnull %4, %struct.rdbSaveInfo* %1, i32 0) #11, !dbg !6869
  %18 = call i32 @fclose(%struct.__sFILE* nonnull %6) #9, !dbg !6871
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !6872, !tbaa !6124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6874
  br label %19, !dbg !6875

; <label>:19:                                     ; preds = %2, %8
  %20 = phi i32 [ %17, %8 ], [ -1, %2 ], !dbg !6865
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6876
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #4, !dbg !6877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6877
  ret i32 %20, !dbg !6877
}

; Function Attrs: noredzone nounwind
define dso_local void @backgroundSaveDoneHandlerDisk(i32, i32) local_unnamed_addr #6 !dbg !6878 {
  %3 = alloca [256 x i8], align 16
  %4 = or i32 %1, %0, !dbg !6892
  %5 = icmp eq i32 %4, 0, !dbg !6892
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6892
  br i1 %5, label %6, label %11, !dbg !6892

; <label>:6:                                      ; preds = %2
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !6893
  %7 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !6895, !tbaa !4672
  %8 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 153), align 8, !dbg !6896, !tbaa !4710
  %9 = sub nsw i64 %7, %8, !dbg !6897
  store i64 %9, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !6898, !tbaa !4672
  %10 = tail call i64 @time(i64* null) #9, !dbg !6899
  store i64 %10, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 160), align 8, !dbg !6900, !tbaa !4675
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !6901, !tbaa !4677
  br label %41, !dbg !6902

; <label>:11:                                     ; preds = %2
  %12 = icmp eq i32 %1, 0, !dbg !6903
  %13 = icmp ne i32 %0, 0, !dbg !6904
  %14 = and i1 %13, %12, !dbg !6905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6905
  br i1 %14, label %15, label %16, !dbg !6905

; <label>:15:                                     ; preds = %11
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !6906
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !6908, !tbaa !4677
  br label %41, !dbg !6909

; <label>:16:                                     ; preds = %11
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.86, i64 0, i64 0), i32 %1) #9, !dbg !6910
  %17 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !6911, !tbaa !4759
  %18 = icmp eq i64 %17, 0, !dbg !6911
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6913
  br i1 %18, label %21, label %19, !dbg !6913

; <label>:19:                                     ; preds = %16
  %20 = tail call i64 @mstime() #9, !dbg !6914
  br label %21, !dbg !6914

; <label>:21:                                     ; preds = %16, %19
  %22 = phi i64 [ %20, %19 ], [ 0, %16 ], !dbg !6914
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %23 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !6917, !tbaa !4776
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0, !dbg !6919
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %24) #4, !dbg !6919
  %25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %24, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i32 %23) #9, !dbg !6920
  %26 = call i32 @unlink(i8* nonnull %24) #9, !dbg !6921
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %24) #4, !dbg !6922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6922
  %27 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !6923, !tbaa !4759
  %28 = icmp eq i64 %27, 0, !dbg !6923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6925
  br i1 %28, label %29, label %30, !dbg !6925

; <label>:29:                                     ; preds = %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6926
  br label %38, !dbg !6926

; <label>:30:                                     ; preds = %21
  %31 = call i64 @mstime() #9, !dbg !6928
  %32 = sub nsw i64 %31, %22, !dbg !6928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6928
  %33 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !6926, !tbaa !4759
  %34 = icmp eq i64 %33, 0, !dbg !6926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6926
  br i1 %34, label %38, label %35, !dbg !6926

; <label>:35:                                     ; preds = %30
  %36 = icmp slt i64 %32, %33, !dbg !6926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6930
  br i1 %36, label %38, label %37, !dbg !6930

; <label>:37:                                     ; preds = %35
  call void @latencyAddSample(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0), i64 %32) #9, !dbg !6926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6926
  br label %38, !dbg !6926

; <label>:38:                                     ; preds = %29, %35, %30, %37
  %39 = icmp eq i32 %1, 10, !dbg !6931
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6933
  br i1 %39, label %41, label %40, !dbg !6933

; <label>:40:                                     ; preds = %38
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 166), align 8, !dbg !6934, !tbaa !4677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6935
  br label %41, !dbg !6935

; <label>:41:                                     ; preds = %40, %38, %15, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !6936, !tbaa !4776
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !6937, !tbaa !4778
  %42 = call i64 @time(i64* null) #9, !dbg !6938
  %43 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !6939, !tbaa !4774
  %44 = sub nsw i64 %42, %43, !dbg !6940
  store i64 %44, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 162), align 8, !dbg !6941, !tbaa !6942
  store i64 -1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !6943, !tbaa !4774
  %45 = icmp ne i32 %4, 0, !dbg !6944
  %46 = sext i1 %45 to i32, !dbg !6945
  call void @updateSlavesWaitingBgsave(i32 %46, i32 1) #9, !dbg !6946
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6947
  ret void, !dbg !6947
}

; Function Attrs: noredzone
declare dso_local void @updateSlavesWaitingBgsave(i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @backgroundSaveDoneHandlerSocket(i32, i32) local_unnamed_addr #6 !dbg !6948 {
  %3 = alloca %struct.listIter, align 8
  %4 = or i32 %1, %0, !dbg !7083
  %5 = icmp eq i32 %4, 0, !dbg !7083
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7083
  br i1 %5, label %6, label %7, !dbg !7083

; <label>:6:                                      ; preds = %2
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.88, i64 0, i64 0)) #9, !dbg !7085
  br label %13, !dbg !7087

; <label>:7:                                      ; preds = %2
  %8 = icmp eq i32 %1, 0, !dbg !7088
  %9 = icmp ne i32 %0, 0, !dbg !7089
  %10 = and i1 %9, %8, !dbg !7091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7091
  br i1 %10, label %11, label %12, !dbg !7091

; <label>:11:                                     ; preds = %7
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !7092
  br label %13, !dbg !7094

; <label>:12:                                     ; preds = %7
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.90, i64 0, i64 0), i32 %1) #9, !dbg !7095
  br label %13

; <label>:13:                                     ; preds = %11, %12, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store i32 -1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7097, !tbaa !4776
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7098, !tbaa !4778
  store i64 -1, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !7099, !tbaa !4774
  %14 = tail call i8* @zmalloc(i64 8) #9, !dbg !7100
  %15 = bitcast i8* %14 to i64*, !dbg !7100
  store i64 0, i64* %15, align 8, !dbg !7102, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7103
  br i1 %5, label %16, label %38, !dbg !7103

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7105, !tbaa !7107
  %18 = tail call i64 @read(i32 %17, i8* %14, i64 8) #9, !dbg !7108
  %19 = icmp eq i64 %18, 8, !dbg !7109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7110
  br i1 %19, label %20, label %35, !dbg !7110

; <label>:20:                                     ; preds = %16
  %21 = load i64, i64* %15, align 8, !dbg !7111, !tbaa !674
  %22 = trunc i64 %21 to i32, !dbg !7111
  %23 = shl i32 %22, 4, !dbg !7111
  %24 = sext i32 %23 to i64, !dbg !7113
  %25 = or i64 %24, 8, !dbg !7114
  %26 = tail call i8* @zrealloc(i8* %14, i64 %25) #9, !dbg !7115
  %27 = bitcast i8* %26 to i64*, !dbg !7115
  %28 = icmp eq i32 %23, 0, !dbg !7116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7118
  br i1 %28, label %35, label %29, !dbg !7118

; <label>:29:                                     ; preds = %20
  %30 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7119, !tbaa !7107
  %31 = getelementptr inbounds i8, i8* %26, i64 8, !dbg !7120
  %32 = tail call i64 @read(i32 %30, i8* nonnull %31, i64 %24) #9, !dbg !7121
  %33 = icmp eq i64 %32, %24, !dbg !7122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7123
  br i1 %33, label %35, label %34, !dbg !7123

; <label>:34:                                     ; preds = %29
  store i64 0, i64* %27, align 8, !dbg !7124, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7126
  br label %35, !dbg !7126

; <label>:35:                                     ; preds = %29, %20, %34, %16
  %36 = phi i8* [ %26, %34 ], [ %26, %29 ], [ %26, %20 ], [ %14, %16 ], !dbg !7127
  %37 = phi i64* [ %27, %34 ], [ %27, %29 ], [ %27, %20 ], [ %15, %16 ], !dbg !7127
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7128
  br label %38, !dbg !7128

; <label>:38:                                     ; preds = %13, %35
  %39 = phi i8* [ %36, %35 ], [ %14, %13 ], !dbg !7127
  %40 = phi i64* [ %37, %35 ], [ %15, %13 ], !dbg !7127
  %41 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7129, !tbaa !7107
  %42 = tail call i32 @close(i32 %41) #9, !dbg !7130
  %43 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 168), align 8, !dbg !7131, !tbaa !7132
  %44 = tail call i32 @close(i32 %43) #9, !dbg !7133
  %45 = bitcast %struct.listIter* %3 to i8*, !dbg !7134
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #4, !dbg !7134
  %46 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7135, !tbaa !7136
  call void @listRewind(%struct.list* %46, %struct.listIter* nonnull %3) #9, !dbg !7138
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7139
  %47 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #9, !dbg !7140
  %48 = icmp eq %struct.listNode* %47, null, !dbg !7139
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7139
  br i1 %48, label %101, label %49, !dbg !7139

; <label>:49:                                     ; preds = %38, %98
  %50 = phi %struct.listNode* [ %99, %98 ], [ %47, %38 ]
  %51 = getelementptr inbounds %struct.listNode, %struct.listNode* %50, i64 0, i32 2, !dbg !7142
  %52 = bitcast i8** %51 to %struct.client**, !dbg !7142
  %53 = load %struct.client*, %struct.client** %52, align 8, !dbg !7142, !tbaa !7143
  %54 = getelementptr inbounds %struct.client, %struct.client* %53, i64 0, i32 23, !dbg !7146
  %55 = load i32, i32* %54, align 8, !dbg !7146, !tbaa !7147
  %56 = icmp eq i32 %55, 7, !dbg !7151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7152
  br i1 %56, label %57, label %98, !dbg !7152

; <label>:57:                                     ; preds = %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7155
  %58 = load i64, i64* %40, align 8, !dbg !7157, !tbaa !674
  %59 = icmp eq i64 %58, 0, !dbg !7159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7160
  br i1 %59, label %78, label %60, !dbg !7160

; <label>:60:                                     ; preds = %57
  %61 = getelementptr inbounds %struct.client, %struct.client* %53, i64 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !7161
  br label %63, !dbg !7160

; <label>:63:                                     ; preds = %60, %75
  %64 = phi i64 [ 0, %60 ], [ %76, %75 ]
  %65 = shl i64 %64, 1, !dbg !7162
  %66 = or i64 %65, 1, !dbg !7165
  %67 = getelementptr inbounds i64, i64* %40, i64 %66, !dbg !7166
  %68 = load i64, i64* %67, align 8, !dbg !7166, !tbaa !674
  %69 = icmp eq i64 %62, %68, !dbg !7167
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7168
  br i1 %69, label %70, label %75, !dbg !7168

; <label>:70:                                     ; preds = %63
  %71 = add i64 %65, 2, !dbg !7169
  %72 = getelementptr inbounds i64, i64* %40, i64 %71, !dbg !7171
  %73 = load i64, i64* %72, align 8, !dbg !7171, !tbaa !674
  %74 = trunc i64 %73 to i32, !dbg !7171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7172
  br label %78, !dbg !7172

; <label>:75:                                     ; preds = %63
  %76 = add nuw i64 %64, 1, !dbg !7173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7174
  %77 = icmp ult i64 %76, %58, !dbg !7159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7160
  br i1 %77, label %63, label %78, !dbg !7160, !llvm.loop !7175

; <label>:78:                                     ; preds = %75, %57, %70
  %79 = phi i64 [ %64, %70 ], [ 0, %57 ], [ %76, %75 ]
  %80 = phi i32 [ %74, %70 ], [ 0, %57 ], [ 0, %75 ], !dbg !7177
  %81 = icmp eq i64 %79, %58, !dbg !7178
  %82 = icmp ne i32 %80, 0, !dbg !7180
  %83 = or i1 %81, %82, !dbg !7181
  %84 = call i8* @replicationGetSlaveName(%struct.client* %53) #9, !dbg !7182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7181
  br i1 %83, label %85, label %91, !dbg !7181

; <label>:85:                                     ; preds = %78
  %86 = icmp eq i32 %80, 0, !dbg !7184
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7186
  br i1 %86, label %89, label %87, !dbg !7186

; <label>:87:                                     ; preds = %85
  %88 = call i8* @strerror(i32 %80) #9, !dbg !7187
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7186
  br label %89, !dbg !7186

; <label>:89:                                     ; preds = %85, %87
  %90 = phi i8* [ %88, %87 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92, i64 0, i64 0), %85 ], !dbg !7186
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.91, i64 0, i64 0), i8* %84, i8* %90) #9, !dbg !7188
  call void @freeClient(%struct.client* %53) #9, !dbg !7189
  br label %97, !dbg !7190

; <label>:91:                                     ; preds = %78
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.93, i64 0, i64 0), i8* %84) #9, !dbg !7191
  %92 = getelementptr inbounds %struct.client, %struct.client* %53, i64 0, i32 1, !dbg !7192
  %93 = load i32, i32* %92, align 8, !dbg !7192, !tbaa !7193
  %94 = call i32 @anetNonBlock(i8* null, i32 %93) #9, !dbg !7194
  %95 = load i32, i32* %92, align 8, !dbg !7195, !tbaa !7193
  %96 = call i32 @anetSendTimeout(i8* null, i32 %95, i64 0) #9, !dbg !7196
  br label %97

; <label>:97:                                     ; preds = %91, %89
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7197
  br label %98, !dbg !7197

; <label>:98:                                     ; preds = %97, %49
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7139
  %99 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #9, !dbg !7140
  %100 = icmp eq %struct.listNode* %99, null, !dbg !7139
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7139
  br i1 %100, label %101, label %49, !dbg !7139, !llvm.loop !7198

; <label>:101:                                    ; preds = %98, %38
  call void @zfree(i8* %39) #9, !dbg !7200
  %102 = icmp ne i32 %4, 0, !dbg !7201
  %103 = sext i1 %102 to i32, !dbg !7202
  call void @updateSlavesWaitingBgsave(i32 %103, i32 2) #9, !dbg !7203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #4, !dbg !7204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7204
  ret void, !dbg !7204
}

; Function Attrs: noredzone
declare dso_local i64 @read(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @close(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @replicationGetSlaveName(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @freeClient(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetSendTimeout(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @backgroundSaveDoneHandler(i32, i32) local_unnamed_addr #6 !dbg !7205 {
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7211, !tbaa !4778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7212
  switch i32 %3, label %6 [
    i32 1, label %4
    i32 2, label %5
  ], !dbg !7212

; <label>:4:                                      ; preds = %2
  tail call void @backgroundSaveDoneHandlerDisk(i32 %0, i32 %1) #11, !dbg !7213
  br label %7, !dbg !7215

; <label>:5:                                      ; preds = %2
  tail call void @backgroundSaveDoneHandlerSocket(i32 %0, i32 %1) #11, !dbg !7216
  br label %7, !dbg !7217

; <label>:6:                                      ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0), i32 2289, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0)) #9, !dbg !7218
  tail call void @_exit(i32 1) #10, !dbg !7218
  unreachable

; <label>:7:                                      ; preds = %5, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7220
  ret void, !dbg !7220
}

; Function Attrs: noredzone nounwind
define dso_local i32 @rdbSaveToSlavesSockets(%struct.rdbSaveInfo* readonly) local_unnamed_addr #6 !dbg !7221 {
  %2 = alloca %struct.listIter, align 8
  %3 = alloca [2 x i32], align 4
  %4 = alloca %struct._rio, align 8
  %5 = bitcast %struct.listIter* %2 to i8*, !dbg !7256
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4, !dbg !7256
  %6 = bitcast [2 x i32]* %3 to i8*, !dbg !7257
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4, !dbg !7257
  %7 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !7259, !tbaa !4705
  %8 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7261
  %9 = and i32 %8, %7, !dbg !7262
  %10 = icmp eq i32 %9, -1, !dbg !7262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7262
  br i1 %10, label %11, label %214, !dbg !7262

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0, !dbg !7263
  %13 = call i32 @pipe(i32* nonnull %12) #9, !dbg !7265
  %14 = icmp eq i32 %13, -1, !dbg !7266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7267
  br i1 %14, label %214, label %15, !dbg !7267

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* %12, align 4, !dbg !7268, !tbaa !191
  store i32 %16, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 169), align 4, !dbg !7269, !tbaa !7107
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1, !dbg !7270
  %18 = load i32, i32* %17, align 4, !dbg !7270, !tbaa !191
  store i32 %18, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 168), align 8, !dbg !7271, !tbaa !7132
  %19 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7272, !tbaa !7136
  %20 = getelementptr inbounds %struct.list, %struct.list* %19, i64 0, i32 5, !dbg !7272
  %21 = load i64, i64* %20, align 8, !dbg !7272, !tbaa !7273
  %22 = shl i64 %21, 2, !dbg !7275
  %23 = call i8* @zmalloc(i64 %22) #9, !dbg !7276
  %24 = bitcast i8* %23 to i32*, !dbg !7276
  %25 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7278, !tbaa !7136
  %26 = getelementptr inbounds %struct.list, %struct.list* %25, i64 0, i32 5, !dbg !7278
  %27 = load i64, i64* %26, align 8, !dbg !7278, !tbaa !7273
  %28 = shl i64 %27, 3, !dbg !7279
  %29 = call i8* @zmalloc(i64 %28) #9, !dbg !7280
  %30 = bitcast i8* %29 to i64*, !dbg !7280
  %31 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7283, !tbaa !7136
  call void @listRewind(%struct.list* %31, %struct.listIter* nonnull %2) #9, !dbg !7285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7286
  %32 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7287
  %33 = icmp eq %struct.listNode* %32, null, !dbg !7286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7286
  br i1 %33, label %65, label %34, !dbg !7286

; <label>:34:                                     ; preds = %15, %61
  %35 = phi %struct.listNode* [ %63, %61 ], [ %32, %15 ]
  %36 = phi i32 [ %62, %61 ], [ 0, %15 ]
  %37 = getelementptr inbounds %struct.listNode, %struct.listNode* %35, i64 0, i32 2, !dbg !7289
  %38 = bitcast i8** %37 to %struct.client**, !dbg !7289
  %39 = load %struct.client*, %struct.client** %38, align 8, !dbg !7289, !tbaa !7143
  %40 = getelementptr inbounds %struct.client, %struct.client* %39, i64 0, i32 23, !dbg !7291
  %41 = load i32, i32* %40, align 8, !dbg !7291, !tbaa !7147
  %42 = icmp eq i32 %41, 6, !dbg !7293
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7294
  br i1 %42, label %43, label %61, !dbg !7294

; <label>:43:                                     ; preds = %34
  %44 = getelementptr inbounds %struct.client, %struct.client* %39, i64 0, i32 0, !dbg !7295
  %45 = load i64, i64* %44, align 8, !dbg !7295, !tbaa !7161
  %46 = sext i32 %36 to i64, !dbg !7297
  %47 = getelementptr inbounds i64, i64* %30, i64 %46, !dbg !7297
  store i64 %45, i64* %47, align 8, !dbg !7298, !tbaa !674
  %48 = getelementptr inbounds %struct.client, %struct.client* %39, i64 0, i32 1, !dbg !7299
  %49 = load i32, i32* %48, align 8, !dbg !7299, !tbaa !7193
  %50 = add nsw i32 %36, 1, !dbg !7300
  %51 = getelementptr inbounds i32, i32* %24, i64 %46, !dbg !7301
  store i32 %49, i32* %51, align 4, !dbg !7302, !tbaa !191
  %52 = call i64 @getPsyncInitialOffset() #9, !dbg !7303
  %53 = call i32 @replicationSetupSlaveForFullResync(%struct.client* %39, i64 %52) #9, !dbg !7304
  %54 = load i32, i32* %48, align 8, !dbg !7305, !tbaa !7193
  %55 = call i32 @anetBlock(i8* null, i32 %54) #9, !dbg !7306
  %56 = load i32, i32* %48, align 8, !dbg !7307, !tbaa !7193
  %57 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 198), align 4, !dbg !7308, !tbaa !7309
  %58 = mul nsw i32 %57, 1000, !dbg !7310
  %59 = sext i32 %58 to i64, !dbg !7311
  %60 = call i32 @anetSendTimeout(i8* null, i32 %56, i64 %59) #9, !dbg !7312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7313
  br label %61, !dbg !7313

; <label>:61:                                     ; preds = %43, %34
  %62 = phi i32 [ %50, %43 ], [ %36, %34 ], !dbg !7314
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7286
  %63 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7287
  %64 = icmp eq %struct.listNode* %63, null, !dbg !7286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7286
  br i1 %64, label %65, label %34, !dbg !7286, !llvm.loop !7315

; <label>:65:                                     ; preds = %61, %15
  %66 = phi i32 [ 0, %15 ], [ %62, %61 ], !dbg !7317
  call void @openChildInfoPipe() #9, !dbg !7318
  %67 = call i64 @ustime() #9, !dbg !7319
  %68 = call i32 @fork() #9, !dbg !7321
  %69 = icmp eq i32 %68, 0, !dbg !7323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7324
  br i1 %69, label %70, label %156, !dbg !7324

; <label>:70:                                     ; preds = %65
  %71 = bitcast %struct._rio* %4 to i8*, !dbg !7325
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %71) #4, !dbg !7325
  call void @rioInitWithFdset(%struct._rio* nonnull %4, i32* %24, i32 %66) #9, !dbg !7327
  call void @zfree(i8* %23) #9, !dbg !7328
  call void @closeListeningSockets(i32 0) #9, !dbg !7329
  call void @redisSetProcTitle(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.95, i64 0, i64 0)) #9, !dbg !7330
  %72 = call i32 @rdbSaveRioWithEOFMark(%struct._rio* nonnull %4, i32* null, %struct.rdbSaveInfo* %0) #11, !dbg !7331
  %73 = icmp eq i32 %72, 0, !dbg !7333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7335
  br i1 %73, label %74, label %152, !dbg !7335

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct._rio, %struct._rio* %4, i64 0, i32 3, !dbg !7341
  %76 = load i32 (%struct._rio*)*, i32 (%struct._rio*)** %75, align 8, !dbg !7341, !tbaa !7342
  %77 = call i32 %76(%struct._rio* nonnull %4) #9, !dbg !7343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7344
  %78 = icmp eq i32 %77, 0, !dbg !7345
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7347
  br i1 %78, label %152, label %79, !dbg !7346

; <label>:79:                                     ; preds = %74
  %80 = call i64 @zmalloc_get_private_dirty(i64 -1) #9, !dbg !7348
  %81 = icmp eq i64 %80, 0, !dbg !7350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7352
  br i1 %81, label %84, label %82, !dbg !7352

; <label>:82:                                     ; preds = %79
  %83 = lshr i64 %80, 20, !dbg !7353
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0), i64 %83) #9, !dbg !7355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7356
  br label %84, !dbg !7356

; <label>:84:                                     ; preds = %79, %82
  store i64 %80, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 171, i32 1), align 8, !dbg !7357, !tbaa !4737
  call void @sendChildInfo(i32 0) #9, !dbg !7358
  %85 = shl nsw i32 %66, 1, !dbg !7359
  %86 = or i32 %85, 1, !dbg !7360
  %87 = sext i32 %86 to i64, !dbg !7361
  %88 = shl nsw i64 %87, 3, !dbg !7362
  %89 = call i8* @zmalloc(i64 %88) #9, !dbg !7363
  %90 = bitcast i8* %89 to i64*, !dbg !7365
  %91 = sext i32 %66 to i64, !dbg !7367
  store i64 %91, i64* %90, align 8, !dbg !7368, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7370
  %92 = icmp sgt i32 %66, 0, !dbg !7372
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7374
  br i1 %92, label %93, label %140, !dbg !7374

; <label>:93:                                     ; preds = %84
  %94 = getelementptr inbounds i8, i8* %89, i64 8, !dbg !7375
  %95 = bitcast i8* %94 to i64*, !dbg !7375
  %96 = getelementptr inbounds %struct._rio, %struct._rio* %4, i64 0, i32 8, i32 0, i32 1
  %97 = zext i32 %66 to i64
  %98 = and i64 %97, 1, !dbg !7374
  %99 = icmp eq i32 %66, 1, !dbg !7374
  br i1 %99, label %126, label %100, !dbg !7374

; <label>:100:                                    ; preds = %93
  %101 = sub nsw i64 %97, %98, !dbg !7374
  br label %102, !dbg !7374

; <label>:102:                                    ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %123, %102 ]
  %104 = phi i64* [ %95, %100 ], [ %122, %102 ]
  %105 = phi i64 [ %101, %100 ], [ %124, %102 ]
  %106 = getelementptr inbounds i64, i64* %30, i64 %103, !dbg !7377
  %107 = load i64, i64* %106, align 8, !dbg !7377, !tbaa !674
  %108 = getelementptr inbounds i64, i64* %104, i64 1, !dbg !7379
  store i64 %107, i64* %104, align 8, !dbg !7380, !tbaa !674
  %109 = load i32*, i32** %96, align 8, !dbg !7381, !tbaa !545
  %110 = getelementptr inbounds i32, i32* %109, i64 %103, !dbg !7382
  %111 = load i32, i32* %110, align 4, !dbg !7382, !tbaa !191
  %112 = sext i32 %111 to i64, !dbg !7382
  %113 = getelementptr inbounds i64, i64* %104, i64 2, !dbg !7383
  store i64 %112, i64* %108, align 8, !dbg !7384, !tbaa !674
  %114 = or i64 %103, 1, !dbg !7385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7374
  %115 = getelementptr inbounds i64, i64* %30, i64 %114, !dbg !7377
  %116 = load i64, i64* %115, align 8, !dbg !7377, !tbaa !674
  %117 = getelementptr inbounds i64, i64* %104, i64 3, !dbg !7379
  store i64 %116, i64* %113, align 8, !dbg !7380, !tbaa !674
  %118 = load i32*, i32** %96, align 8, !dbg !7381, !tbaa !545
  %119 = getelementptr inbounds i32, i32* %118, i64 %114, !dbg !7382
  %120 = load i32, i32* %119, align 4, !dbg !7382, !tbaa !191
  %121 = sext i32 %120 to i64, !dbg !7382
  %122 = getelementptr inbounds i64, i64* %104, i64 4, !dbg !7383
  store i64 %121, i64* %117, align 8, !dbg !7384, !tbaa !674
  %123 = add nuw nsw i64 %103, 2, !dbg !7385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7374
  %124 = add i64 %105, -2, !dbg !7374
  %125 = icmp eq i64 %124, 0, !dbg !7374
  br i1 %125, label %126, label %102, !dbg !7374, !llvm.loop !7387

; <label>:126:                                    ; preds = %102, %93
  %127 = phi i64 [ 0, %93 ], [ %123, %102 ]
  %128 = phi i64* [ %95, %93 ], [ %122, %102 ]
  %129 = icmp eq i64 %98, 0, !dbg !7374
  br i1 %129, label %138, label %130, !dbg !7374

; <label>:130:                                    ; preds = %126
  %131 = getelementptr inbounds i64, i64* %30, i64 %127, !dbg !7377
  %132 = load i64, i64* %131, align 8, !dbg !7377, !tbaa !674
  %133 = getelementptr inbounds i64, i64* %128, i64 1, !dbg !7379
  store i64 %132, i64* %128, align 8, !dbg !7380, !tbaa !674
  %134 = load i32*, i32** %96, align 8, !dbg !7381, !tbaa !545
  %135 = getelementptr inbounds i32, i32* %134, i64 %127, !dbg !7382
  %136 = load i32, i32* %135, align 4, !dbg !7382, !tbaa !191
  %137 = sext i32 %136 to i64, !dbg !7382
  store i64 %137, i64* %133, align 8, !dbg !7384, !tbaa !674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7374
  br label %138, !dbg !7389

; <label>:138:                                    ; preds = %126, %130
  %139 = load i64, i64* %90, align 8, !dbg !7389, !tbaa !674
  br label %140, !dbg !7389

; <label>:140:                                    ; preds = %138, %84
  %141 = phi i64 [ %139, %138 ], [ %91, %84 ], !dbg !7389
  %142 = icmp eq i64 %141, 0, !dbg !7391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7392
  br i1 %142, label %149, label %143, !dbg !7392

; <label>:143:                                    ; preds = %140
  %144 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 168), align 8, !dbg !7393, !tbaa !7132
  %145 = shl i64 %87, 35, !dbg !7394
  %146 = ashr exact i64 %145, 32, !dbg !7394
  %147 = call i64 @write(i32 %144, i8* nonnull %89, i64 %146) #9, !dbg !7395
  %148 = icmp eq i64 %147, %146, !dbg !7396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7397
  br i1 %148, label %150, label %149, !dbg !7397

; <label>:149:                                    ; preds = %143, %140
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7398
  br label %150, !dbg !7398

; <label>:150:                                    ; preds = %143, %149
  %151 = phi i32 [ -1, %149 ], [ 0, %143 ], !dbg !7400
  call void @zfree(i8* nonnull %89) #9, !dbg !7401
  br label %152, !dbg !7402

; <label>:152:                                    ; preds = %70, %74, %150
  %153 = phi i32 [ %151, %150 ], [ %72, %70 ], [ -1, %74 ], !dbg !7400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7403
  call void @zfree(i8* %29) #9, !dbg !7404
  call void @rioFreeFdset(%struct._rio* nonnull %4) #9, !dbg !7405
  %154 = icmp ne i32 %153, 0, !dbg !7406
  %155 = zext i1 %154 to i32, !dbg !7407
  call void @exitFromChild(i32 %155) #9, !dbg !7408
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %71) #4, !dbg !7409
  br label %214, !dbg !7410

; <label>:156:                                    ; preds = %65
  %157 = icmp eq i32 %68, -1, !dbg !7411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7412
  br i1 %157, label %158, label %194, !dbg !7412

; <label>:158:                                    ; preds = %156
  %159 = call i32* @__errno() #9, !dbg !7413
  %160 = load i32, i32* %159, align 4, !dbg !7413, !tbaa !191
  %161 = call i8* @strerror(i32 %160) #9, !dbg !7414
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0), i8* %161) #9, !dbg !7415
  %162 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 41), align 8, !dbg !7416, !tbaa !7136
  call void @listRewind(%struct.list* %162, %struct.listIter* nonnull %2) #9, !dbg !7417
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7418
  %163 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7419
  %164 = icmp eq %struct.listNode* %163, null, !dbg !7418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7418
  br i1 %164, label %189, label %165, !dbg !7418

; <label>:165:                                    ; preds = %158
  %166 = icmp sgt i32 %66, 0
  %167 = sext i32 %66 to i64, !dbg !7418
  br label %168, !dbg !7418

; <label>:168:                                    ; preds = %165, %186
  %169 = phi %struct.listNode* [ %163, %165 ], [ %187, %186 ]
  %170 = getelementptr inbounds %struct.listNode, %struct.listNode* %169, i64 0, i32 2, !dbg !7420
  %171 = bitcast i8** %170 to %struct.client**, !dbg !7420
  %172 = load %struct.client*, %struct.client** %171, align 8, !dbg !7420, !tbaa !7143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7425
  br i1 %166, label %173, label %186, !dbg !7425

; <label>:173:                                    ; preds = %168
  %174 = getelementptr inbounds %struct.client, %struct.client* %172, i64 0, i32 0
  %175 = load i64, i64* %174, align 8, !tbaa !7161
  br label %176, !dbg !7425

; <label>:176:                                    ; preds = %173, %183
  %177 = phi i64 [ 0, %173 ], [ %184, %183 ]
  %178 = getelementptr inbounds i64, i64* %30, i64 %177, !dbg !7426
  %179 = load i64, i64* %178, align 8, !dbg !7426, !tbaa !674
  %180 = icmp eq i64 %175, %179, !dbg !7430
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7431
  br i1 %180, label %181, label %183, !dbg !7431

; <label>:181:                                    ; preds = %176
  %182 = getelementptr inbounds %struct.client, %struct.client* %172, i64 0, i32 23, !dbg !7432
  store i32 6, i32* %182, align 8, !dbg !7434, !tbaa !7147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7435
  br label %186, !dbg !7435

; <label>:183:                                    ; preds = %176
  %184 = add nuw nsw i64 %177, 1, !dbg !7436
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7437
  %185 = icmp slt i64 %184, %167, !dbg !7438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7425
  br i1 %185, label %176, label %186, !dbg !7425, !llvm.loop !7439

; <label>:186:                                    ; preds = %183, %168, %181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7418
  %187 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #9, !dbg !7419
  %188 = icmp eq %struct.listNode* %187, null, !dbg !7418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7418
  br i1 %188, label %189, label %168, !dbg !7418, !llvm.loop !7441

; <label>:189:                                    ; preds = %186, %158
  %190 = load i32, i32* %12, align 4, !dbg !7443, !tbaa !191
  %191 = call i32 @close(i32 %190) #9, !dbg !7444
  %192 = load i32, i32* %17, align 4, !dbg !7445, !tbaa !191
  %193 = call i32 @close(i32 %192) #9, !dbg !7446
  call void @closeChildInfoPipe() #9, !dbg !7447
  br label %212, !dbg !7448

; <label>:194:                                    ; preds = %156
  %195 = call i64 @ustime() #9, !dbg !7449
  %196 = sub nsw i64 %195, %67, !dbg !7451
  store i64 %196, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !7452, !tbaa !4747
  %197 = call i64 @zmalloc_used_memory() #9, !dbg !7453
  %198 = uitofp i64 %197 to double, !dbg !7454
  %199 = fmul double %198, 1.000000e+06, !dbg !7455
  %200 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 84), align 8, !dbg !7456, !tbaa !4747
  %201 = sitofp i64 %200 to double, !dbg !7457
  %202 = fdiv double %199, %201, !dbg !7458
  %203 = fmul double %202, 0x3E10000000000000, !dbg !7459
  store double %203, double* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 85), align 8, !dbg !7460, !tbaa !4756
  %204 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 288), align 8, !dbg !7461, !tbaa !4759
  %205 = icmp eq i64 %204, 0, !dbg !7461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7461
  br i1 %205, label %210, label %206, !dbg !7461

; <label>:206:                                    ; preds = %194
  %207 = sdiv i64 %200, 1000, !dbg !7461
  %208 = icmp slt i64 %207, %204, !dbg !7461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7463
  br i1 %208, label %210, label %209, !dbg !7463

; <label>:209:                                    ; preds = %206
  call void @latencyAddSample(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i64 %207) #9, !dbg !7461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7461
  br label %210, !dbg !7461

; <label>:210:                                    ; preds = %206, %194, %209
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.96, i64 0, i64 0), i32 %68) #9, !dbg !7464
  %211 = call i64 @time(i64* null) #9, !dbg !7465
  store i64 %211, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 163), align 8, !dbg !7466, !tbaa !4774
  store i32 %68, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7467, !tbaa !4776
  store i32 2, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 165), align 4, !dbg !7468, !tbaa !4778
  call void @updateDictResizePolicy() #9, !dbg !7469
  br label %212

; <label>:212:                                    ; preds = %210, %189
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @zfree(i8* %29) #9, !dbg !7470
  call void @zfree(i8* %23) #9, !dbg !7471
  %213 = sext i1 %157 to i32, !dbg !7472
  br label %214, !dbg !7473

; <label>:214:                                    ; preds = %11, %1, %152, %212
  %215 = phi i32 [ 0, %152 ], [ %213, %212 ], [ -1, %1 ], [ -1, %11 ], !dbg !7474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4, !dbg !7476
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4, !dbg !7476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7476
  ret i32 %215, !dbg !7476
}

; Function Attrs: noredzone
declare dso_local i32 @pipe(i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @replicationSetupSlaveForFullResync(%struct.client*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @getPsyncInitialOffset() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetBlock(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioInitWithFdset(%struct._rio*, i32*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @rioFreeFdset(%struct._rio*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @saveCommand(%struct.client*) local_unnamed_addr #6 !dbg !7477 {
  %2 = alloca %struct.rdbSaveInfo, align 8
  %3 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7483, !tbaa !4776
  %4 = icmp eq i32 %3, -1, !dbg !7485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7486
  br i1 %4, label %6, label %5, !dbg !7486

; <label>:5:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.97, i64 0, i64 0)) #9, !dbg !7487
  br label %46, !dbg !7489

; <label>:6:                                      ; preds = %1
  %7 = bitcast %struct.rdbSaveInfo* %2 to i8*, !dbg !7490
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #4, !dbg !7490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%struct.rdbSaveInfo* @rdbPopulateSaveInfo.rsi_init to i8*), i64 64, i1 false) #4, !dbg !7500, !tbaa.struct !7501
  %8 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7502, !tbaa !6192
  %9 = icmp eq i8* %8, null, !dbg !7504
  %10 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !7505
  %11 = icmp ne i8* %10, null, !dbg !7506
  %12 = and i1 %9, %11, !dbg !7507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7507
  br i1 %12, label %13, label %17, !dbg !7507

; <label>:13:                                     ; preds = %6
  %14 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !7508, !tbaa !7510
  %15 = icmp eq i32 %14, -1, !dbg !7511
  %16 = select i1 %15, i32 0, i32 %14, !dbg !7512
  br label %33, !dbg !7513

; <label>:17:                                     ; preds = %6
  %18 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !7514, !tbaa !7516
  %19 = icmp eq %struct.client* %18, null, !dbg !7517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7518
  br i1 %19, label %25, label %20, !dbg !7518

; <label>:20:                                     ; preds = %17
  %21 = getelementptr inbounds %struct.client, %struct.client* %18, i64 0, i32 2, !dbg !7519
  %22 = load %struct.redisDb*, %struct.redisDb** %21, align 8, !dbg !7519, !tbaa !7521
  %23 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %22, i64 0, i32 5, !dbg !7522
  %24 = load i32, i32* %23, align 8, !dbg !7522, !tbaa !7523
  br label %33, !dbg !7524

; <label>:25:                                     ; preds = %17
  %26 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !7525, !tbaa !7527
  %27 = icmp eq %struct.client* %26, null, !dbg !7528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7529
  br i1 %27, label %36, label %28, !dbg !7529

; <label>:28:                                     ; preds = %25
  %29 = getelementptr inbounds %struct.client, %struct.client* %26, i64 0, i32 2, !dbg !7530
  %30 = load %struct.redisDb*, %struct.redisDb** %29, align 8, !dbg !7530, !tbaa !7521
  %31 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %30, i64 0, i32 5, !dbg !7532
  %32 = load i32, i32* %31, align 8, !dbg !7532, !tbaa !7523
  br label %33, !dbg !7533

; <label>:33:                                     ; preds = %28, %20, %13
  %34 = phi i32 [ %16, %13 ], [ %24, %20 ], [ %32, %28 ]
  %35 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %2, i64 0, i32 0, !dbg !7534
  store i32 %34, i32* %35, align 8, !dbg !7534, !tbaa !4031
  br label %36, !dbg !7534

; <label>:36:                                     ; preds = %33, %25
  %37 = phi %struct.rdbSaveInfo* [ null, %25 ], [ %2, %33 ], !dbg !7535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7536
  %38 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !7538, !tbaa !203
  %39 = call i32 @rdbSave(i8* %38, %struct.rdbSaveInfo* %37) #11, !dbg !7540
  %40 = icmp eq i32 %39, 0, !dbg !7541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7542
  br i1 %40, label %41, label %43, !dbg !7542

; <label>:41:                                     ; preds = %36
  %42 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !7543, !tbaa !7545
  call void @addReply(%struct.client* %0, %struct.redisObject* %42) #9, !dbg !7547
  br label %45, !dbg !7548

; <label>:43:                                     ; preds = %36
  %44 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !7549, !tbaa !7551
  call void @addReply(%struct.client* %0, %struct.redisObject* %44) #9, !dbg !7552
  br label %45

; <label>:45:                                     ; preds = %43, %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #4, !dbg !7553
  br label %46, !dbg !7553

; <label>:46:                                     ; preds = %45, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7554
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7553
  ret void, !dbg !7553
}

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.rdbSaveInfo* @rdbPopulateSaveInfo(%struct.rdbSaveInfo*) local_unnamed_addr #6 !dbg !7493 {
  %2 = bitcast %struct.rdbSaveInfo* %0 to i8*, !dbg !7556
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%struct.rdbSaveInfo* @rdbPopulateSaveInfo.rsi_init to i8*), i64 64, i1 false), !dbg !7556, !tbaa.struct !7501
  %3 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7557, !tbaa !6192
  %4 = icmp eq i8* %3, null, !dbg !7558
  %5 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !7559
  %6 = icmp ne i8* %5, null, !dbg !7560
  %7 = and i1 %4, %6, !dbg !7561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7561
  br i1 %7, label %8, label %12, !dbg !7561

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !7562, !tbaa !7510
  %10 = icmp eq i32 %9, -1, !dbg !7563
  %11 = select i1 %10, i32 0, i32 %9, !dbg !7564
  br label %28, !dbg !7565

; <label>:12:                                     ; preds = %1
  %13 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !7566, !tbaa !7516
  %14 = icmp eq %struct.client* %13, null, !dbg !7567
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7568
  br i1 %14, label %20, label %15, !dbg !7568

; <label>:15:                                     ; preds = %12
  %16 = getelementptr inbounds %struct.client, %struct.client* %13, i64 0, i32 2, !dbg !7569
  %17 = load %struct.redisDb*, %struct.redisDb** %16, align 8, !dbg !7569, !tbaa !7521
  %18 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %17, i64 0, i32 5, !dbg !7570
  %19 = load i32, i32* %18, align 8, !dbg !7570, !tbaa !7523
  br label %28, !dbg !7571

; <label>:20:                                     ; preds = %12
  %21 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !7572, !tbaa !7527
  %22 = icmp eq %struct.client* %21, null, !dbg !7573
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7574
  br i1 %22, label %31, label %23, !dbg !7574

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds %struct.client, %struct.client* %21, i64 0, i32 2, !dbg !7575
  %25 = load %struct.redisDb*, %struct.redisDb** %24, align 8, !dbg !7575, !tbaa !7521
  %26 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %25, i64 0, i32 5, !dbg !7576
  %27 = load i32, i32* %26, align 8, !dbg !7576, !tbaa !7523
  br label %28, !dbg !7577

; <label>:28:                                     ; preds = %8, %15, %23
  %29 = phi i32 [ %27, %23 ], [ %19, %15 ], [ %11, %8 ]
  %30 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %0, i64 0, i32 0, !dbg !7578
  store i32 %29, i32* %30, align 8, !dbg !7578, !tbaa !4031
  br label %31, !dbg !7578

; <label>:31:                                     ; preds = %28, %20
  %32 = phi %struct.rdbSaveInfo* [ null, %20 ], [ %0, %28 ], !dbg !7579
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7578
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7580
  ret %struct.rdbSaveInfo* %32, !dbg !7580
}

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @bgsaveCommand(%struct.client*) local_unnamed_addr #6 !dbg !7581 {
  %2 = alloca %struct.rdbSaveInfo, align 8
  %3 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !7589
  %4 = load i32, i32* %3, align 8, !dbg !7589, !tbaa !7591
  %5 = icmp sgt i32 %4, 1, !dbg !7592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7593
  br i1 %5, label %6, label %20, !dbg !7593

; <label>:6:                                      ; preds = %1
  %7 = icmp eq i32 %4, 2, !dbg !7594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7597
  br i1 %7, label %8, label %18, !dbg !7597

; <label>:8:                                      ; preds = %6
  %9 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !7598
  %10 = load %struct.redisObject**, %struct.redisObject*** %9, align 8, !dbg !7598, !tbaa !7599
  %11 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %10, i64 1, !dbg !7600
  %12 = load %struct.redisObject*, %struct.redisObject** %11, align 8, !dbg !7600, !tbaa !200
  %13 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %12, i64 0, i32 2, !dbg !7601
  %14 = load i8*, i8** %13, align 8, !dbg !7601, !tbaa !2111
  %15 = tail call i32 @strcasecmp(i8* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !7602
  %16 = icmp eq i32 %15, 0, !dbg !7602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7603
  br i1 %16, label %17, label %18, !dbg !7603

; <label>:17:                                     ; preds = %8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7604
  br label %20, !dbg !7604

; <label>:18:                                     ; preds = %8, %6
  %19 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !7605, !tbaa !7607
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %19) #9, !dbg !7608
  br label %71, !dbg !7609

; <label>:20:                                     ; preds = %17, %1
  %21 = phi i32 [ 1, %17 ], [ 0, %1 ], !dbg !7610
  %22 = bitcast %struct.rdbSaveInfo* %2 to i8*, !dbg !7611
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #4, !dbg !7611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast (%struct.rdbSaveInfo* @rdbPopulateSaveInfo.rsi_init to i8*), i64 64, i1 false) #4, !dbg !7615, !tbaa.struct !7501
  %23 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7616, !tbaa !6192
  %24 = icmp eq i8* %23, null, !dbg !7617
  %25 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 183), align 8, !dbg !7618
  %26 = icmp ne i8* %25, null, !dbg !7619
  %27 = and i1 %24, %26, !dbg !7620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7620
  br i1 %27, label %28, label %32, !dbg !7620

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 181), align 8, !dbg !7621, !tbaa !7510
  %30 = icmp eq i32 %29, -1, !dbg !7622
  %31 = select i1 %30, i32 0, i32 %29, !dbg !7623
  br label %48, !dbg !7624

; <label>:32:                                     ; preds = %20
  %33 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !7625, !tbaa !7516
  %34 = icmp eq %struct.client* %33, null, !dbg !7626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7627
  br i1 %34, label %40, label %35, !dbg !7627

; <label>:35:                                     ; preds = %32
  %36 = getelementptr inbounds %struct.client, %struct.client* %33, i64 0, i32 2, !dbg !7628
  %37 = load %struct.redisDb*, %struct.redisDb** %36, align 8, !dbg !7628, !tbaa !7521
  %38 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %37, i64 0, i32 5, !dbg !7629
  %39 = load i32, i32* %38, align 8, !dbg !7629, !tbaa !7523
  br label %48, !dbg !7630

; <label>:40:                                     ; preds = %32
  %41 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 200), align 8, !dbg !7631, !tbaa !7527
  %42 = icmp eq %struct.client* %41, null, !dbg !7632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7633
  br i1 %42, label %51, label %43, !dbg !7633

; <label>:43:                                     ; preds = %40
  %44 = getelementptr inbounds %struct.client, %struct.client* %41, i64 0, i32 2, !dbg !7634
  %45 = load %struct.redisDb*, %struct.redisDb** %44, align 8, !dbg !7634, !tbaa !7521
  %46 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %45, i64 0, i32 5, !dbg !7635
  %47 = load i32, i32* %46, align 8, !dbg !7635, !tbaa !7523
  br label %48, !dbg !7636

; <label>:48:                                     ; preds = %43, %35, %28
  %49 = phi i32 [ %31, %28 ], [ %39, %35 ], [ %47, %43 ]
  %50 = getelementptr inbounds %struct.rdbSaveInfo, %struct.rdbSaveInfo* %2, i64 0, i32 0, !dbg !7610
  store i32 %49, i32* %50, align 8, !dbg !7610, !tbaa !4031
  br label %51, !dbg !7610

; <label>:51:                                     ; preds = %48, %40
  %52 = phi %struct.rdbSaveInfo* [ null, %40 ], [ %2, %48 ], !dbg !7637
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7638
  %53 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 154), align 8, !dbg !7640, !tbaa !4776
  %54 = icmp eq i32 %53, -1, !dbg !7642
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7643
  br i1 %54, label %56, label %55, !dbg !7643

; <label>:55:                                     ; preds = %51
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.97, i64 0, i64 0)) #9, !dbg !7644
  br label %70, !dbg !7646

; <label>:56:                                     ; preds = %51
  %57 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 127), align 4, !dbg !7647, !tbaa !4705
  %58 = icmp eq i32 %57, -1, !dbg !7649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7650
  br i1 %58, label %63, label %59, !dbg !7650

; <label>:59:                                     ; preds = %56
  %60 = icmp eq i32 %21, 0, !dbg !7651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7654
  br i1 %60, label %62, label %61, !dbg !7654

; <label>:61:                                     ; preds = %59
  store i32 1, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 164), align 8, !dbg !7655, !tbaa !7657
  tail call void @addReplyStatus(%struct.client* nonnull %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i64 0, i64 0)) #9, !dbg !7658
  br label %70, !dbg !7659

; <label>:62:                                     ; preds = %59
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.100, i64 0, i64 0)) #9, !dbg !7660
  br label %70

; <label>:63:                                     ; preds = %56
  %64 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 157), align 8, !dbg !7662, !tbaa !203
  %65 = call i32 @rdbSaveBackground(i8* %64, %struct.rdbSaveInfo* %52) #11, !dbg !7664
  %66 = icmp eq i32 %65, 0, !dbg !7665
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7666
  br i1 %66, label %67, label %68, !dbg !7666

; <label>:67:                                     ; preds = %63
  call void @addReplyStatus(%struct.client* nonnull %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.101, i64 0, i64 0)) #9, !dbg !7667
  br label %70, !dbg !7669

; <label>:68:                                     ; preds = %63
  %69 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 2), align 8, !dbg !7670, !tbaa !7551
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %69) #9, !dbg !7672
  br label %70

; <label>:70:                                     ; preds = %62, %61, %68, %67, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #4, !dbg !7673
  br label %71, !dbg !7673

; <label>:71:                                     ; preds = %70, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7673
  ret void, !dbg !7673
}

; Function Attrs: noredzone
declare dso_local void @addReplyStatus(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin noredzone nounwind }
attributes #10 = { nobuiltin noredzone noreturn nounwind }
attributes #11 = { nobuiltin noredzone }
attributes #12 = { nobuiltin noredzone nounwind readonly }

!llvm.module.flags = !{!143, !144, !145}
!llvm.ident = !{!146}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rdb.c", directory: "/root/.unikraft/apps/redis/build")
!2 = !{}
!3 = !{!4, !5, !8, !12, !13, !14, !15, !18, !21, !7, !23, !25, !41, !104, !20, !94, !33, !108, !119, !129, !136}
!4 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !6, line: 34, baseType: !7)
!6 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!7 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 56, baseType: !10)
!9 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !11, line: 103, baseType: !7)
!11 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!12 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!14 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 32, baseType: !16)
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !11, line: 55, baseType: !17)
!17 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 44, baseType: !19)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !11, line: 77, baseType: !20)
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "intset", file: !27, line: 39, baseType: !28)
!27 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/intset.h", directory: "/root/.unikraft/apps/redis/build")
!28 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "intset", file: !27, line: 35, size: 64, elements: !29)
!29 = !{!30, !34, !35}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !28, file: !27, line: 36, baseType: !31, size: 32)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 48, baseType: !32)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !11, line: 79, baseType: !33)
!33 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !28, file: !27, line: 37, baseType: !31, size: 32, offset: 32)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !28, file: !27, line: 38, baseType: !36, offset: 64)
!36 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !39)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 20, baseType: !38)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !11, line: 41, baseType: !14)
!39 = !{!40}
!40 = !DISubrange(count: -1)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !43, line: 82, baseType: !44)
!43 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!44 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !43, line: 76, size: 768, elements: !45)
!45 = !{!46, !74, !75, !102, !103}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !44, file: !43, line: 77, baseType: !47, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !43, line: 65, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !43, line: 58, size: 384, elements: !50)
!50 = !{!51, !60, !64, !65, !69, !73}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !49, file: !43, line: 59, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DISubroutineType(types: !54)
!54 = !{!55, !58}
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 60, baseType: !56)
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !11, line: 105, baseType: !57)
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !49, file: !43, line: 60, baseType: !61, size: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DISubroutineType(types: !63)
!63 = !{!13, !13, !58}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !49, file: !43, line: 61, baseType: !61, size: 64, offset: 128)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !49, file: !43, line: 62, baseType: !66, size: 64, offset: 192)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!67 = !DISubroutineType(types: !68)
!68 = !{!20, !13, !58, !58}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !49, file: !43, line: 63, baseType: !70, size: 64, offset: 256)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{null, !13, !13}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !49, file: !43, line: 64, baseType: !70, size: 64, offset: 320)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !44, file: !43, line: 78, baseType: !13, size: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !44, file: !43, line: 79, baseType: !76, size: 512, offset: 128)
!76 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 512, elements: !100)
!77 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !43, line: 74, baseType: !78)
!78 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !43, line: 69, size: 256, elements: !79)
!79 = !{!80, !97, !98, !99}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !78, file: !43, line: 70, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !43, line: 56, baseType: !84)
!84 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !43, line: 47, size: 192, elements: !85)
!85 = !{!86, !87, !95}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !84, file: !43, line: 48, baseType: !13, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !84, file: !43, line: 54, baseType: !88, size: 64, offset: 64)
!88 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !84, file: !43, line: 49, size: 64, elements: !89)
!89 = !{!90, !91, !92, !93}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !88, file: !43, line: 50, baseType: !13, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !88, file: !43, line: 51, baseType: !55, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !88, file: !43, line: 52, baseType: !8, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !88, file: !43, line: 53, baseType: !94, size: 64)
!94 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !84, file: !43, line: 55, baseType: !96, size: 64, offset: 128)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !78, file: !43, line: 71, baseType: !57, size: 64, offset: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !78, file: !43, line: 72, baseType: !57, size: 64, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !78, file: !43, line: 73, baseType: !57, size: 64, offset: 192)
!100 = !{!101}
!101 = !DISubrange(count: 2)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !44, file: !43, line: 80, baseType: !7, size: 64, offset: 640)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !44, file: !43, line: 81, baseType: !57, size: 64, offset: 704)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !105, line: 200, baseType: !106)
!105 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !107, line: 145, baseType: !7)
!107 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !110, line: 51, size: 24, elements: !111)
!110 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!111 = !{!112, !115, !116, !117}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !109, file: !110, line: 52, baseType: !113, size: 8)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 24, baseType: !114)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !11, line: 43, baseType: !24)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !109, file: !110, line: 53, baseType: !113, size: 8, offset: 8)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !109, file: !110, line: 54, baseType: !24, size: 8, offset: 16)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !109, file: !110, line: 55, baseType: !118, offset: 24)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, elements: !39)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !110, line: 57, size: 40, elements: !121)
!121 = !{!122, !126, !127, !128}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !120, file: !110, line: 58, baseType: !123, size: 16)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 36, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !11, line: 57, baseType: !125)
!125 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !120, file: !110, line: 59, baseType: !123, size: 16, offset: 16)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !120, file: !110, line: 60, baseType: !24, size: 8, offset: 32)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !120, file: !110, line: 61, baseType: !118, offset: 40)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !110, line: 63, size: 72, elements: !131)
!131 = !{!132, !133, !134, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !130, file: !110, line: 64, baseType: !31, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !130, file: !110, line: 65, baseType: !31, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !130, file: !110, line: 66, baseType: !24, size: 8, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !130, file: !110, line: 67, baseType: !118, offset: 72)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !110, line: 69, size: 136, elements: !138)
!138 = !{!139, !140, !141, !142}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !137, file: !110, line: 70, baseType: !55, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !137, file: !110, line: 71, baseType: !55, size: 64, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !137, file: !110, line: 72, baseType: !24, size: 8, offset: 128)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !137, file: !110, line: 73, baseType: !118, offset: 136)
!143 = !{i32 2, !"Dwarf Version", i32 4}
!144 = !{i32 2, !"Debug Info Version", i32 3}
!145 = !{i32 1, !"wchar_size", i32 4}
!146 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!147 = distinct !DISubprogram(name: "rdbCheckThenExit", scope: !1, file: !1, line: 51, type: !148, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !150)
!148 = !DISubroutineType(types: !149)
!149 = !{null, !20, !21, null}
!150 = !{!151, !152, !153, !168, !172, !173}
!151 = !DILocalVariable(name: "linenum", arg: 1, scope: !147, file: !1, line: 51, type: !20)
!152 = !DILocalVariable(name: "reason", arg: 2, scope: !147, file: !1, line: 51, type: !21)
!153 = !DILocalVariable(name: "ap", scope: !147, file: !1, line: 52, type: !154)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !155, line: 46, baseType: !156)
!155 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !157, line: 51, baseType: !158)
!157 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stdarg.h", directory: "/root/.unikraft/apps/redis/build")
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 52, baseType: !159)
!159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 192, elements: !166)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 52, size: 192, elements: !161)
!161 = !{!162, !163, !164, !165}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !160, file: !1, line: 52, baseType: !33, size: 32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !160, file: !1, line: 52, baseType: !33, size: 32, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !160, file: !1, line: 52, baseType: !13, size: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !160, file: !1, line: 52, baseType: !13, size: 64, offset: 128)
!166 = !{!167}
!167 = !DISubrange(count: 1)
!168 = !DILocalVariable(name: "msg", scope: !147, file: !1, line: 53, type: !169)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 8192, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 1024)
!172 = !DILocalVariable(name: "len", scope: !147, file: !1, line: 54, type: !20)
!173 = !DILocalVariable(name: "argv", scope: !174, file: !1, line: 64, type: !176)
!174 = distinct !DILexicalBlock(scope: !175, file: !1, line: 62, column: 24)
!175 = distinct !DILexicalBlock(scope: !147, file: !1, line: 62, column: 9)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, elements: !100)
!177 = !DILocation(line: 51, column: 27, scope: !147)
!178 = !DILocation(line: 51, column: 42, scope: !147)
!179 = !DILocation(line: 52, column: 5, scope: !147)
!180 = !DILocation(line: 52, column: 13, scope: !147)
!181 = !DILocation(line: 53, column: 5, scope: !147)
!182 = !DILocation(line: 53, column: 10, scope: !147)
!183 = !DILocation(line: 56, column: 11, scope: !147)
!184 = !DILocation(line: 54, column: 9, scope: !147)
!185 = !DILocation(line: 58, column: 5, scope: !147)
!186 = !DILocation(line: 59, column: 18, scope: !147)
!187 = !DILocation(line: 59, column: 34, scope: !147)
!188 = !DILocation(line: 59, column: 5, scope: !147)
!189 = !DILocation(line: 60, column: 5, scope: !147)
!190 = !DILocation(line: 62, column: 10, scope: !175)
!191 = !{!192, !192, i64 0}
!192 = !{!"int", !193, i64 0}
!193 = !{!"omnipotent char", !194, i64 0}
!194 = !{!"Simple C/C++ TBAA"}
!195 = !DILocation(line: 62, column: 9, scope: !147)
!196 = !DILocation(line: 63, column: 9, scope: !174)
!197 = !DILocation(line: 64, column: 9, scope: !174)
!198 = !DILocation(line: 64, column: 15, scope: !174)
!199 = !DILocation(line: 64, column: 25, scope: !174)
!200 = !{!201, !201, i64 0}
!201 = !{!"any pointer", !193, i64 0}
!202 = !DILocation(line: 64, column: 36, scope: !174)
!203 = !{!204, !201, i64 2120}
!204 = !{!"redisServer", !192, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !192, i64 32, !192, i64 36, !192, i64 40, !201, i64 48, !201, i64 56, !201, i64 64, !201, i64 72, !192, i64 80, !192, i64 84, !192, i64 88, !192, i64 92, !201, i64 96, !201, i64 104, !192, i64 112, !192, i64 116, !193, i64 120, !192, i64 164, !205, i64 168, !192, i64 176, !201, i64 184, !201, i64 192, !201, i64 200, !193, i64 208, !192, i64 216, !192, i64 220, !193, i64 224, !192, i64 352, !201, i64 360, !192, i64 368, !193, i64 372, !192, i64 436, !192, i64 440, !193, i64 444, !192, i64 508, !201, i64 512, !201, i64 520, !201, i64 528, !201, i64 536, !201, i64 544, !201, i64 552, !201, i64 560, !192, i64 568, !206, i64 576, !193, i64 584, !201, i64 840, !205, i64 848, !192, i64 856, !192, i64 860, !205, i64 864, !205, i64 872, !205, i64 880, !205, i64 888, !201, i64 896, !201, i64 904, !201, i64 912, !201, i64 920, !201, i64 928, !201, i64 936, !201, i64 944, !201, i64 952, !201, i64 960, !201, i64 968, !201, i64 976, !201, i64 984, !201, i64 992, !205, i64 1000, !206, i64 1008, !206, i64 1016, !206, i64 1024, !207, i64 1032, !206, i64 1040, !206, i64 1048, !206, i64 1056, !206, i64 1064, !206, i64 1072, !206, i64 1080, !206, i64 1088, !206, i64 1096, !206, i64 1104, !205, i64 1112, !206, i64 1120, !207, i64 1128, !206, i64 1136, !206, i64 1144, !206, i64 1152, !206, i64 1160, !201, i64 1168, !206, i64 1176, !206, i64 1184, !205, i64 1192, !208, i64 1200, !206, i64 1240, !206, i64 1248, !205, i64 1256, !205, i64 1264, !193, i64 1272, !192, i64 1728, !192, i64 1732, !192, i64 1736, !192, i64 1740, !192, i64 1744, !205, i64 1752, !192, i64 1760, !192, i64 1764, !192, i64 1768, !192, i64 1772, !205, i64 1776, !205, i64 1784, !192, i64 1792, !192, i64 1796, !192, i64 1800, !192, i64 1804, !193, i64 1808, !192, i64 1880, !192, i64 1884, !201, i64 1888, !192, i64 1896, !192, i64 1900, !205, i64 1904, !205, i64 1912, !205, i64 1920, !205, i64 1928, !192, i64 1936, !192, i64 1940, !201, i64 1944, !201, i64 1952, !192, i64 1960, !192, i64 1964, !205, i64 1968, !205, i64 1976, !205, i64 1984, !205, i64 1992, !192, i64 2000, !205, i64 2008, !192, i64 2016, !192, i64 2020, !192, i64 2024, !192, i64 2028, !192, i64 2032, !192, i64 2036, !192, i64 2040, !192, i64 2044, !192, i64 2048, !192, i64 2052, !192, i64 2056, !192, i64 2060, !192, i64 2064, !201, i64 2072, !206, i64 2080, !206, i64 2088, !192, i64 2096, !201, i64 2104, !192, i64 2112, !201, i64 2120, !192, i64 2128, !192, i64 2132, !205, i64 2136, !205, i64 2144, !205, i64 2152, !205, i64 2160, !192, i64 2168, !192, i64 2172, !192, i64 2176, !192, i64 2180, !192, i64 2184, !192, i64 2188, !193, i64 2192, !209, i64 2200, !210, i64 2224, !201, i64 2240, !192, i64 2248, !201, i64 2256, !192, i64 2264, !193, i64 2268, !193, i64 2309, !206, i64 2352, !206, i64 2360, !192, i64 2368, !192, i64 2372, !201, i64 2376, !206, i64 2384, !206, i64 2392, !206, i64 2400, !206, i64 2408, !205, i64 2416, !205, i64 2424, !192, i64 2432, !192, i64 2436, !192, i64 2440, !192, i64 2444, !192, i64 2448, !201, i64 2456, !201, i64 2464, !192, i64 2472, !192, i64 2476, !201, i64 2480, !201, i64 2488, !192, i64 2496, !192, i64 2500, !205, i64 2504, !205, i64 2512, !205, i64 2520, !192, i64 2528, !192, i64 2532, !201, i64 2536, !205, i64 2544, !192, i64 2552, !192, i64 2556, !192, i64 2560, !205, i64 2568, !192, i64 2576, !192, i64 2580, !192, i64 2584, !201, i64 2592, !193, i64 2600, !206, i64 2648, !192, i64 2656, !201, i64 2664, !201, i64 2672, !192, i64 2680, !201, i64 2688, !192, i64 2696, !192, i64 2700, !206, i64 2704, !192, i64 2712, !192, i64 2716, !192, i64 2720, !192, i64 2724, !206, i64 2728, !192, i64 2736, !193, i64 2740, !201, i64 2768, !201, i64 2776, !192, i64 2784, !192, i64 2788, !192, i64 2792, !192, i64 2796, !205, i64 2800, !205, i64 2808, !205, i64 2816, !205, i64 2824, !205, i64 2832, !205, i64 2840, !205, i64 2848, !205, i64 2856, !192, i64 2864, !192, i64 2868, !205, i64 2872, !205, i64 2880, !192, i64 2888, !206, i64 2896, !201, i64 2904, !201, i64 2912, !192, i64 2920, !192, i64 2924, !206, i64 2928, !201, i64 2936, !201, i64 2944, !192, i64 2952, !192, i64 2956, !192, i64 2960, !192, i64 2964, !201, i64 2968, !192, i64 2976, !192, i64 2980, !192, i64 2984, !201, i64 2992, !201, i64 3000, !201, i64 3008, !201, i64 3016, !206, i64 3024, !206, i64 3032, !206, i64 3040, !192, i64 3048, !192, i64 3052, !192, i64 3056, !192, i64 3060, !192, i64 3064, !192, i64 3068, !192, i64 3072, !192, i64 3076, !192, i64 3080, !192, i64 3084, !192, i64 3088, !206, i64 3096, !201, i64 3104, !201, i64 3112, !201, i64 3120, !192, i64 3128, !192, i64 3132, !192, i64 3136, !205, i64 3144, !201, i64 3152, !201, i64 3160, !201, i64 3168}
!205 = !{!"long", !193, i64 0}
!206 = !{!"long long", !193, i64 0}
!207 = !{!"double", !193, i64 0}
!208 = !{!"malloc_stats", !205, i64 0, !205, i64 8, !205, i64 16, !205, i64 24, !205, i64 32}
!209 = !{!"", !192, i64 0, !205, i64 8, !206, i64 16}
!210 = !{!"redisOpArray", !201, i64 0, !192, i64 8}
!211 = !DILocation(line: 65, column: 9, scope: !174)
!212 = !DILocation(line: 66, column: 5, scope: !175)
!213 = !DILocation(line: 66, column: 5, scope: !174)
!214 = !DILocation(line: 67, column: 9, scope: !215)
!215 = distinct !DILexicalBlock(scope: !175, file: !1, line: 66, column: 12)
!216 = !DILocation(line: 69, column: 5, scope: !147)
!217 = distinct !DISubprogram(name: "rdbLoadRaw", scope: !1, file: !1, line: 81, type: !218, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !483)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !220, !13, !55}
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio", file: !222, line: 87, baseType: !223)
!222 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rio.h", directory: "/root/.unikraft/apps/redis/build")
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rio", file: !222, line: 39, size: 832, elements: !224)
!224 = !{!225, !232, !236, !243, !247, !251, !252, !253, !254}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !223, file: !222, line: 43, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!229, !231, !13, !229}
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !230, line: 58, baseType: !57)
!230 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !223, file: !222, line: 44, baseType: !233, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{!229, !231, !58, !229}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !223, file: !222, line: 45, baseType: !237, size: 64, offset: 128)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DISubroutineType(types: !239)
!239 = !{!240, !231}
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !105, line: 173, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !107, line: 100, baseType: !242)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !107, line: 44, baseType: !7)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !223, file: !222, line: 46, baseType: !244, size: 64, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DISubroutineType(types: !246)
!246 = !{!20, !231}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "update_cksum", scope: !223, file: !222, line: 52, baseType: !248, size: 64, offset: 256)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{null, !231, !58, !229}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !223, file: !222, line: 55, baseType: !55, size: 64, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "processed_bytes", scope: !223, file: !222, line: 58, baseType: !229, size: 64, offset: 384)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "max_processing_chunk", scope: !223, file: !222, line: 61, baseType: !229, size: 64, offset: 448)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !223, file: !222, line: 84, baseType: !255, size: 320, offset: 512)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !223, file: !222, line: 64, size: 320, elements: !256)
!256 = !{!257, !263, !474}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !255, file: !222, line: 69, baseType: !258, size: 128)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !222, line: 66, size: 128, elements: !259)
!259 = !{!260, !262}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !258, file: !222, line: 67, baseType: !261, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !110, line: 43, baseType: !21)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !258, file: !222, line: 68, baseType: !240, size: 64, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !255, file: !222, line: 75, baseType: !264, size: 192)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !222, line: 71, size: 192, elements: !265)
!265 = !{!266, !472, !473}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !264, file: !222, line: 72, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !155, line: 66, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !270, line: 287, baseType: !271)
!270 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !270, line: 181, size: 1408, elements: !272)
!272 = !{!273, !274, !275, !276, !277, !278, !283, !284, !285, !440, !446, !451, !455, !456, !457, !458, !460, !462, !463, !464, !465, !466, !470, !471}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !271, file: !270, line: 182, baseType: !23, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !271, file: !270, line: 183, baseType: !20, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !271, file: !270, line: 184, baseType: !20, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !271, file: !270, line: 185, baseType: !17, size: 16, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !271, file: !270, line: 186, baseType: !17, size: 16, offset: 144)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !271, file: !270, line: 187, baseType: !279, size: 128, offset: 192)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !270, line: 117, size: 128, elements: !280)
!280 = !{!281, !282}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !279, file: !270, line: 118, baseType: !23, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !279, file: !270, line: 119, baseType: !20, size: 32, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !271, file: !270, line: 188, baseType: !20, size: 32, offset: 320)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !271, file: !270, line: 195, baseType: !13, size: 64, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !271, file: !270, line: 197, baseType: !286, size: 64, offset: 448)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DISubroutineType(types: !288)
!288 = !{!106, !289, !13, !21, !20}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !270, line: 569, size: 14912, elements: !291)
!291 = !{!292, !293, !295, !296, !297, !298, !302, !303, !306, !307, !311, !323, !324, !325, !327, !328, !329, !404, !425, !426, !431, !438}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !290, file: !270, line: 571, baseType: !20, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !290, file: !270, line: 576, baseType: !294, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !290, file: !270, line: 576, baseType: !294, size: 64, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !290, file: !270, line: 576, baseType: !294, size: 64, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !290, file: !270, line: 578, baseType: !20, size: 32, offset: 256)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !290, file: !270, line: 579, baseType: !299, size: 200, offset: 288)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 200, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 25)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !290, file: !270, line: 582, baseType: !20, size: 32, offset: 512)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !290, file: !270, line: 583, baseType: !304, size: 64, offset: 576)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !270, line: 40, flags: DIFlagFwdDecl)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !290, file: !270, line: 585, baseType: !20, size: 32, offset: 640)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !290, file: !270, line: 587, baseType: !308, size: 64, offset: 704)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !289}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !290, file: !270, line: 590, baseType: !312, size: 64, offset: 768)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !270, line: 47, size: 256, elements: !314)
!314 = !{!315, !316, !317, !318, !319, !320}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !313, file: !270, line: 49, baseType: !312, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !313, file: !270, line: 50, baseType: !20, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !313, file: !270, line: 51, baseType: !321, size: 32, offset: 192)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 32, elements: !166)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !270, line: 25, baseType: !33)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !290, file: !270, line: 591, baseType: !20, size: 32, offset: 832)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !290, file: !270, line: 592, baseType: !312, size: 64, offset: 896)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !290, file: !270, line: 593, baseType: !326, size: 64, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !290, file: !270, line: 596, baseType: !20, size: 32, offset: 1024)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !290, file: !270, line: 597, baseType: !21, size: 64, offset: 1088)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !290, file: !270, line: 632, baseType: !330, size: 2880, offset: 1152)
!330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !290, file: !270, line: 599, size: 2880, elements: !331)
!331 = !{!332, !395}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !330, file: !270, line: 622, baseType: !333, size: 1728)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !330, file: !270, line: 601, size: 1728, elements: !334)
!334 = !{!335, !336, !337, !341, !353, !354, !355, !364, !378, !379, !380, !384, !388, !389, !390, !391, !392, !393, !394}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !333, file: !270, line: 603, baseType: !33, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !333, file: !270, line: 604, baseType: !21, size: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !333, file: !270, line: 605, baseType: !338, size: 208, offset: 128)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 208, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 26)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !333, file: !270, line: 606, baseType: !342, size: 288, offset: 352)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !270, line: 55, size: 288, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !342, file: !270, line: 57, baseType: !20, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !342, file: !270, line: 58, baseType: !20, size: 32, offset: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !342, file: !270, line: 59, baseType: !20, size: 32, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !342, file: !270, line: 60, baseType: !20, size: 32, offset: 96)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !342, file: !270, line: 61, baseType: !20, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !342, file: !270, line: 62, baseType: !20, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !342, file: !270, line: 63, baseType: !20, size: 32, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !342, file: !270, line: 64, baseType: !20, size: 32, offset: 224)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !342, file: !270, line: 65, baseType: !20, size: 32, offset: 256)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !333, file: !270, line: 607, baseType: !20, size: 32, offset: 640)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !333, file: !270, line: 608, baseType: !4, size: 64, offset: 704)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !333, file: !270, line: 609, baseType: !356, size: 112, offset: 768)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !270, line: 319, size: 112, elements: !357)
!357 = !{!358, !362, !363}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !356, file: !270, line: 320, baseType: !359, size: 48)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 48, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 3)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !356, file: !270, line: 321, baseType: !359, size: 48, offset: 48)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !356, file: !270, line: 322, baseType: !125, size: 16, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !333, file: !270, line: 610, baseType: !365, size: 64, offset: 896)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !107, line: 171, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !107, line: 163, size: 64, elements: !367)
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !366, file: !107, line: 165, baseType: !20, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !366, file: !107, line: 170, baseType: !370, size: 32, offset: 32)
!370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !366, file: !107, line: 166, size: 32, elements: !371)
!371 = !{!372, !374}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !370, file: !107, line: 168, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !230, line: 124, baseType: !33)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !370, file: !107, line: 169, baseType: !375, size: 32)
!375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 32, elements: !376)
!376 = !{!377}
!377 = !DISubrange(count: 4)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !333, file: !270, line: 611, baseType: !365, size: 64, offset: 960)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !333, file: !270, line: 612, baseType: !365, size: 64, offset: 1024)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !333, file: !270, line: 613, baseType: !381, size: 64, offset: 1088)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 64, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 8)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !333, file: !270, line: 614, baseType: !385, size: 192, offset: 1152)
!385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 192, elements: !386)
!386 = !{!387}
!387 = !DISubrange(count: 24)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !333, file: !270, line: 615, baseType: !20, size: 32, offset: 1344)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !333, file: !270, line: 616, baseType: !365, size: 64, offset: 1376)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !333, file: !270, line: 617, baseType: !365, size: 64, offset: 1440)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !333, file: !270, line: 618, baseType: !365, size: 64, offset: 1504)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !333, file: !270, line: 619, baseType: !365, size: 64, offset: 1568)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !333, file: !270, line: 620, baseType: !365, size: 64, offset: 1632)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !333, file: !270, line: 621, baseType: !20, size: 32, offset: 1696)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !330, file: !270, line: 631, baseType: !396, size: 2880)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !330, file: !270, line: 626, size: 2880, elements: !397)
!397 = !{!398, !402}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !396, file: !270, line: 629, baseType: !399, size: 1920)
!399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 1920, elements: !400)
!400 = !{!401}
!401 = !DISubrange(count: 30)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !396, file: !270, line: 630, baseType: !403, size: 960, offset: 1920)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 960, elements: !400)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !290, file: !270, line: 636, baseType: !405, size: 64, offset: 4032)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !270, line: 93, size: 6336, elements: !407)
!407 = !{!408, !409, !410, !417}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !406, file: !270, line: 94, baseType: !405, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !406, file: !270, line: 95, baseType: !20, size: 32, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !406, file: !270, line: 97, baseType: !411, size: 2048, offset: 128)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 2048, elements: !415)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{null}
!415 = !{!416}
!416 = !DISubrange(count: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !406, file: !270, line: 98, baseType: !418, size: 4160, offset: 2176)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !270, line: 74, size: 4160, elements: !419)
!419 = !{!420, !422, !423, !424}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !418, file: !270, line: 75, baseType: !421, size: 2048)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 2048, elements: !415)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !418, file: !270, line: 76, baseType: !421, size: 2048, offset: 2048)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !418, file: !270, line: 78, baseType: !322, size: 32, offset: 4096)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !418, file: !270, line: 81, baseType: !322, size: 32, offset: 4128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !290, file: !270, line: 637, baseType: !406, size: 6336, offset: 4096)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !290, file: !270, line: 641, baseType: !427, size: 64, offset: 10432)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !20}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !290, file: !270, line: 646, baseType: !432, size: 192, offset: 10496)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !270, line: 291, size: 192, elements: !433)
!433 = !{!434, !436, !437}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !432, file: !270, line: 293, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !432, file: !270, line: 294, baseType: !20, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !432, file: !270, line: 295, baseType: !294, size: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !290, file: !270, line: 648, baseType: !439, size: 4224, offset: 10688)
!439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 4224, elements: !360)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !271, file: !270, line: 199, baseType: !441, size: 64, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!106, !289, !13, !444, !20}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !271, file: !270, line: 202, baseType: !447, size: 64, offset: 576)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DISubroutineType(types: !449)
!449 = !{!450, !289, !13, !450, !20}
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !107, line: 114, baseType: !7)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !271, file: !270, line: 203, baseType: !452, size: 64, offset: 640)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{!20, !289, !13}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !271, file: !270, line: 206, baseType: !279, size: 128, offset: 704)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !271, file: !270, line: 207, baseType: !23, size: 64, offset: 832)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !271, file: !270, line: 208, baseType: !20, size: 32, offset: 896)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !271, file: !270, line: 211, baseType: !459, size: 24, offset: 928)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 24, elements: !360)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !271, file: !270, line: 212, baseType: !461, size: 8, offset: 952)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 8, elements: !166)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !271, file: !270, line: 215, baseType: !279, size: 128, offset: 960)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !271, file: !270, line: 218, baseType: !20, size: 32, offset: 1088)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !271, file: !270, line: 219, baseType: !242, size: 64, offset: 1152)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !271, file: !270, line: 222, baseType: !289, size: 64, offset: 1216)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !271, file: !270, line: 226, baseType: !467, size: 32, offset: 1280)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !107, line: 175, baseType: !468)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !469, line: 12, baseType: !20)
!469 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !271, file: !270, line: 228, baseType: !365, size: 64, offset: 1312)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !271, file: !270, line: 229, baseType: !20, size: 32, offset: 1376)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !264, file: !222, line: 73, baseType: !240, size: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "autosync", scope: !264, file: !222, line: 74, baseType: !240, size: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "fdset", scope: !255, file: !222, line: 83, baseType: !475, size: 320)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !255, file: !222, line: 77, size: 320, elements: !476)
!476 = !{!477, !479, !480, !481, !482}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !475, file: !222, line: 78, baseType: !478, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !475, file: !222, line: 79, baseType: !478, size: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "numfds", scope: !475, file: !222, line: 80, baseType: !20, size: 32, offset: 128)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !475, file: !222, line: 81, baseType: !240, size: 64, offset: 192)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !475, file: !222, line: 82, baseType: !261, size: 64, offset: 256)
!483 = !{!484, !485, !486}
!484 = !DILocalVariable(name: "rdb", arg: 1, scope: !217, file: !1, line: 81, type: !220)
!485 = !DILocalVariable(name: "buf", arg: 2, scope: !217, file: !1, line: 81, type: !13)
!486 = !DILocalVariable(name: "len", arg: 3, scope: !217, file: !1, line: 81, type: !55)
!487 = !DILocation(line: 81, column: 22, scope: !217)
!488 = !DILocation(line: 81, column: 33, scope: !217)
!489 = !DILocation(line: 81, column: 47, scope: !217)
!490 = !DILocalVariable(name: "r", arg: 1, scope: !491, file: !222, line: 106, type: !220)
!491 = distinct !DISubprogram(name: "rioRead", scope: !222, file: !222, line: 106, type: !492, isLocal: true, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !494)
!492 = !DISubroutineType(types: !493)
!493 = !{!229, !220, !13, !229}
!494 = !{!490, !495, !496, !497}
!495 = !DILocalVariable(name: "buf", arg: 2, scope: !491, file: !222, line: 106, type: !13)
!496 = !DILocalVariable(name: "len", arg: 3, scope: !491, file: !222, line: 106, type: !229)
!497 = !DILocalVariable(name: "bytes_to_read", scope: !498, file: !222, line: 108, type: !229)
!498 = distinct !DILexicalBlock(scope: !491, file: !222, line: 107, column: 17)
!499 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !500)
!500 = distinct !DILocation(line: 82, column: 9, scope: !501)
!501 = distinct !DILexicalBlock(scope: !217, file: !1, line: 82, column: 9)
!502 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !500)
!503 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !500)
!504 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !500)
!505 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !500)
!506 = !{!507, !205, i64 56}
!507 = !{!"_rio", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !205, i64 40, !205, i64 48, !205, i64 56, !193, i64 64}
!508 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !500)
!509 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !500)
!510 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !500)
!511 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !500)
!512 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !500)
!513 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !500)
!514 = distinct !DILexicalBlock(scope: !498, file: !222, line: 109, column: 13)
!515 = !{!507, !201, i64 0}
!516 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !500)
!517 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !500)
!518 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !500)
!519 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !500)
!520 = distinct !DILexicalBlock(scope: !498, file: !222, line: 111, column: 13)
!521 = !{!507, !201, i64 32}
!522 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !500)
!523 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !500)
!524 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !500)
!525 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !500)
!526 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !500)
!527 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !500)
!528 = !{!507, !205, i64 48}
!529 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !500)
!530 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !500)
!531 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !500)
!532 = !DILocation(line: 82, column: 9, scope: !217)
!533 = !DILocation(line: 83, column: 9, scope: !534)
!534 = distinct !DILexicalBlock(scope: !501, file: !1, line: 82, column: 36)
!535 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !500)
!536 = !DILocation(line: 88, column: 1, scope: !217)
!537 = distinct !DISubprogram(name: "rdbSaveType", scope: !1, file: !1, line: 90, type: !538, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !540)
!538 = !DISubroutineType(types: !539)
!539 = !{!20, !220, !24}
!540 = !{!541, !542}
!541 = !DILocalVariable(name: "rdb", arg: 1, scope: !537, file: !1, line: 90, type: !220)
!542 = !DILocalVariable(name: "type", arg: 2, scope: !537, file: !1, line: 90, type: !24)
!543 = !DILocation(line: 90, column: 22, scope: !537)
!544 = !DILocation(line: 90, column: 41, scope: !537)
!545 = !{!193, !193, i64 0}
!546 = !DILocalVariable(name: "rdb", arg: 1, scope: !547, file: !1, line: 72, type: !220)
!547 = distinct !DISubprogram(name: "rdbWriteRaw", scope: !1, file: !1, line: 72, type: !548, isLocal: true, isDefinition: true, scopeLine: 72, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !553)
!548 = !DISubroutineType(types: !549)
!549 = !{!20, !220, !13, !550}
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !551, line: 40, baseType: !552)
!551 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !107, line: 129, baseType: !57)
!553 = !{!546, !554, !555}
!554 = !DILocalVariable(name: "p", arg: 2, scope: !547, file: !1, line: 72, type: !13)
!555 = !DILocalVariable(name: "len", arg: 3, scope: !547, file: !1, line: 72, type: !550)
!556 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !557)
!557 = distinct !DILocation(line: 91, column: 12, scope: !537)
!558 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !557)
!559 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !557)
!560 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !557)
!561 = distinct !DILexicalBlock(scope: !547, file: !1, line: 73, column: 9)
!562 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !557)
!563 = !DILocalVariable(name: "r", arg: 1, scope: !564, file: !222, line: 93, type: !220)
!564 = distinct !DISubprogram(name: "rioWrite", scope: !222, file: !222, line: 93, type: !565, isLocal: true, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !567)
!565 = !DISubroutineType(types: !566)
!566 = !{!229, !220, !58, !229}
!567 = !{!563, !568, !569, !570}
!568 = !DILocalVariable(name: "buf", arg: 2, scope: !564, file: !222, line: 93, type: !58)
!569 = !DILocalVariable(name: "len", arg: 3, scope: !564, file: !222, line: 93, type: !229)
!570 = !DILocalVariable(name: "bytes_to_write", scope: !571, file: !222, line: 95, type: !229)
!571 = distinct !DILexicalBlock(scope: !564, file: !222, line: 94, column: 17)
!572 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !573)
!573 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !557)
!574 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !573)
!575 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !573)
!576 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !573)
!577 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !573)
!578 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !573)
!579 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !573)
!580 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !573)
!581 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !573)
!582 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !573)
!583 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !573)
!584 = distinct !DILexicalBlock(scope: !571, file: !222, line: 96, column: 13)
!585 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !573)
!586 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !573)
!587 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !573)
!588 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !573)
!589 = distinct !DILexicalBlock(scope: !571, file: !222, line: 97, column: 13)
!590 = !{!507, !201, i64 8}
!591 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !573)
!592 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !573)
!593 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !573)
!594 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !573)
!595 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !573)
!596 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !573)
!597 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !573)
!598 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !573)
!599 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !557)
!600 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !573)
!601 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !557)
!602 = !DILocation(line: 0, scope: !537)
!603 = !DILocation(line: 0, scope: !547, inlinedAt: !557)
!604 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !557)
!605 = !DILocation(line: 91, column: 5, scope: !537)
!606 = distinct !DISubprogram(name: "rdbLoadType", scope: !1, file: !1, line: 97, type: !607, isLocal: false, isDefinition: true, scopeLine: 97, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !609)
!607 = !DISubroutineType(types: !608)
!608 = !{!20, !220}
!609 = !{!610, !611}
!610 = !DILocalVariable(name: "rdb", arg: 1, scope: !606, file: !1, line: 97, type: !220)
!611 = !DILocalVariable(name: "type", scope: !606, file: !1, line: 98, type: !24)
!612 = !DILocation(line: 97, column: 22, scope: !606)
!613 = !DILocation(line: 98, column: 19, scope: !606)
!614 = !DILocation(line: 98, column: 5, scope: !606)
!615 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !616)
!616 = distinct !DILocation(line: 99, column: 9, scope: !617)
!617 = distinct !DILexicalBlock(scope: !606, file: !1, line: 99, column: 9)
!618 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !616)
!619 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !616)
!620 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !616)
!621 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !616)
!622 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !616)
!623 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !616)
!624 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !616)
!625 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !616)
!626 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !616)
!627 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !616)
!628 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !616)
!629 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !616)
!630 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !616)
!631 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !616)
!632 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !616)
!633 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !616)
!634 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !616)
!635 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !616)
!636 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !616)
!637 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !616)
!638 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !616)
!639 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !616)
!640 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !616)
!641 = !DILocation(line: 99, column: 9, scope: !606)
!642 = !DILocation(line: 99, column: 36, scope: !617)
!643 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !616)
!644 = !DILocation(line: 100, column: 12, scope: !606)
!645 = !DILocation(line: 100, column: 5, scope: !606)
!646 = !DILocation(line: 0, scope: !606)
!647 = !DILocation(line: 0, scope: !617)
!648 = !DILocation(line: 101, column: 1, scope: !606)
!649 = distinct !DISubprogram(name: "rdbLoadTime", scope: !1, file: !1, line: 106, type: !650, isLocal: false, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !652)
!650 = !DISubroutineType(types: !651)
!651 = !{!5, !220}
!652 = !{!653, !654}
!653 = !DILocalVariable(name: "rdb", arg: 1, scope: !649, file: !1, line: 106, type: !220)
!654 = !DILocalVariable(name: "t32", scope: !649, file: !1, line: 107, type: !18)
!655 = !DILocation(line: 106, column: 25, scope: !649)
!656 = !DILocation(line: 107, column: 5, scope: !649)
!657 = !DILocation(line: 108, column: 5, scope: !649)
!658 = !DILocation(line: 109, column: 20, scope: !649)
!659 = !DILocation(line: 107, column: 13, scope: !649)
!660 = !DILocation(line: 109, column: 12, scope: !649)
!661 = !DILocation(line: 110, column: 1, scope: !649)
!662 = !DILocation(line: 109, column: 5, scope: !649)
!663 = distinct !DISubprogram(name: "rdbSaveMillisecondTime", scope: !1, file: !1, line: 112, type: !664, isLocal: false, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !666)
!664 = !DISubroutineType(types: !665)
!665 = !{!20, !220, !12}
!666 = !{!667, !668, !669}
!667 = !DILocalVariable(name: "rdb", arg: 1, scope: !663, file: !1, line: 112, type: !220)
!668 = !DILocalVariable(name: "t", arg: 2, scope: !663, file: !1, line: 112, type: !12)
!669 = !DILocalVariable(name: "t64", scope: !663, file: !1, line: 113, type: !8)
!670 = !DILocation(line: 112, column: 33, scope: !663)
!671 = !DILocation(line: 112, column: 48, scope: !663)
!672 = !DILocation(line: 113, column: 5, scope: !663)
!673 = !DILocation(line: 113, column: 13, scope: !663)
!674 = !{!205, !205, i64 0}
!675 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !676)
!676 = distinct !DILocation(line: 115, column: 12, scope: !663)
!677 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !676)
!678 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !676)
!679 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !676)
!680 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !676)
!681 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !682)
!682 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !676)
!683 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !682)
!684 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !682)
!685 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !682)
!686 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !682)
!687 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !682)
!688 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !682)
!689 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !682)
!690 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !682)
!691 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !682)
!692 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !682)
!693 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !682)
!694 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !682)
!695 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !682)
!696 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !682)
!697 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !682)
!698 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !682)
!699 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !682)
!700 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !682)
!701 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !682)
!702 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !682)
!703 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !682)
!704 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !682)
!705 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !676)
!706 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !682)
!707 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !676)
!708 = !DILocation(line: 0, scope: !663)
!709 = !DILocation(line: 0, scope: !547, inlinedAt: !676)
!710 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !676)
!711 = !DILocation(line: 116, column: 1, scope: !663)
!712 = !DILocation(line: 115, column: 5, scope: !663)
!713 = distinct !DISubprogram(name: "rdbLoadMillisecondTime", scope: !1, file: !1, line: 129, type: !714, isLocal: false, isDefinition: true, scopeLine: 129, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !716)
!714 = !DISubroutineType(types: !715)
!715 = !{!12, !220, !20}
!716 = !{!717, !718, !719}
!717 = !DILocalVariable(name: "rdb", arg: 1, scope: !713, file: !1, line: 129, type: !220)
!718 = !DILocalVariable(name: "rdbver", arg: 2, scope: !713, file: !1, line: 129, type: !20)
!719 = !DILocalVariable(name: "t64", scope: !713, file: !1, line: 130, type: !8)
!720 = !DILocation(line: 129, column: 39, scope: !713)
!721 = !DILocation(line: 129, column: 48, scope: !713)
!722 = !DILocation(line: 130, column: 5, scope: !713)
!723 = !DILocation(line: 131, column: 5, scope: !713)
!724 = !DILocation(line: 134, column: 23, scope: !713)
!725 = !DILocation(line: 130, column: 13, scope: !713)
!726 = !DILocation(line: 135, column: 1, scope: !713)
!727 = !DILocation(line: 134, column: 5, scope: !713)
!728 = distinct !DISubprogram(name: "rdbSaveLen", scope: !1, file: !1, line: 140, type: !729, isLocal: false, isDefinition: true, scopeLine: 140, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !731)
!729 = !DISubroutineType(types: !730)
!730 = !{!20, !220, !55}
!731 = !{!732, !733, !734, !736, !737}
!732 = !DILocalVariable(name: "rdb", arg: 1, scope: !728, file: !1, line: 140, type: !220)
!733 = !DILocalVariable(name: "len", arg: 2, scope: !728, file: !1, line: 140, type: !55)
!734 = !DILocalVariable(name: "buf", scope: !728, file: !1, line: 141, type: !735)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 16, elements: !100)
!736 = !DILocalVariable(name: "nwritten", scope: !728, file: !1, line: 142, type: !550)
!737 = !DILocalVariable(name: "len32", scope: !738, file: !1, line: 159, type: !31)
!738 = distinct !DILexicalBlock(scope: !739, file: !1, line: 155, column: 35)
!739 = distinct !DILexicalBlock(scope: !740, file: !1, line: 155, column: 16)
!740 = distinct !DILexicalBlock(scope: !741, file: !1, line: 149, column: 16)
!741 = distinct !DILexicalBlock(scope: !728, file: !1, line: 144, column: 9)
!742 = !DILocation(line: 140, column: 21, scope: !728)
!743 = !DILocation(line: 140, column: 35, scope: !728)
!744 = !DILocation(line: 141, column: 5, scope: !728)
!745 = !DILocation(line: 141, column: 19, scope: !728)
!746 = !DILocation(line: 144, column: 13, scope: !741)
!747 = !DILocation(line: 144, column: 9, scope: !728)
!748 = !DILocation(line: 146, column: 18, scope: !749)
!749 = distinct !DILexicalBlock(scope: !741, file: !1, line: 144, column: 23)
!750 = !DILocation(line: 146, column: 16, scope: !749)
!751 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !752)
!752 = distinct !DILocation(line: 147, column: 13, scope: !753)
!753 = distinct !DILexicalBlock(scope: !749, file: !1, line: 147, column: 13)
!754 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !752)
!755 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !752)
!756 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !752)
!757 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !752)
!758 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !759)
!759 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !752)
!760 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !759)
!761 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !759)
!762 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !759)
!763 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !759)
!764 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !759)
!765 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !759)
!766 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !759)
!767 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !759)
!768 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !759)
!769 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !759)
!770 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !759)
!771 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !759)
!772 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !759)
!773 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !759)
!774 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !759)
!775 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !759)
!776 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !759)
!777 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !759)
!778 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !759)
!779 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !759)
!780 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !759)
!781 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !759)
!782 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !759)
!783 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !752)
!784 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !759)
!785 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !752)
!786 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !752)
!787 = !DILocation(line: 147, column: 13, scope: !749)
!788 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !752)
!789 = !DILocation(line: 149, column: 20, scope: !740)
!790 = !DILocation(line: 149, column: 16, scope: !741)
!791 = !DILocation(line: 151, column: 23, scope: !792)
!792 = distinct !DILexicalBlock(scope: !740, file: !1, line: 149, column: 31)
!793 = !DILocation(line: 151, column: 18, scope: !792)
!794 = !DILocation(line: 151, column: 16, scope: !792)
!795 = !DILocation(line: 152, column: 18, scope: !792)
!796 = !DILocation(line: 152, column: 9, scope: !792)
!797 = !DILocation(line: 152, column: 16, scope: !792)
!798 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !799)
!799 = distinct !DILocation(line: 153, column: 13, scope: !800)
!800 = distinct !DILexicalBlock(scope: !792, file: !1, line: 153, column: 13)
!801 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !799)
!802 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !799)
!803 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !799)
!804 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !799)
!805 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !806)
!806 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !799)
!807 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !806)
!808 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !806)
!809 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !806)
!810 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !806)
!811 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !806)
!812 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !806)
!813 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !806)
!814 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !806)
!815 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !806)
!816 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !806)
!817 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !806)
!818 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !806)
!819 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !806)
!820 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !806)
!821 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !806)
!822 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !806)
!823 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !806)
!824 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !806)
!825 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !806)
!826 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !806)
!827 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !806)
!828 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !806)
!829 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !806)
!830 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !799)
!831 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !806)
!832 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !799)
!833 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !799)
!834 = !DILocation(line: 153, column: 13, scope: !792)
!835 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !799)
!836 = !DILocation(line: 155, column: 20, scope: !739)
!837 = !DILocation(line: 155, column: 16, scope: !740)
!838 = !DILocation(line: 157, column: 16, scope: !738)
!839 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !840)
!840 = distinct !DILocation(line: 158, column: 13, scope: !841)
!841 = distinct !DILexicalBlock(scope: !738, file: !1, line: 158, column: 13)
!842 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !840)
!843 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !840)
!844 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !840)
!845 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !840)
!846 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !847)
!847 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !840)
!848 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !847)
!849 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !847)
!850 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !847)
!851 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !847)
!852 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !847)
!853 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !847)
!854 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !847)
!855 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !847)
!856 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !847)
!857 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !847)
!858 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !847)
!859 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !847)
!860 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !847)
!861 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !847)
!862 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !847)
!863 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !847)
!864 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !847)
!865 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !847)
!866 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !847)
!867 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !847)
!868 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !847)
!869 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !847)
!870 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !847)
!871 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !840)
!872 = !DILocation(line: 159, column: 26, scope: !738)
!873 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !847)
!874 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !840)
!875 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !840)
!876 = !DILocation(line: 158, column: 13, scope: !738)
!877 = !DILocation(line: 158, column: 43, scope: !841)
!878 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !840)
!879 = !DILocation(line: 159, column: 9, scope: !738)
!880 = !DILocation(line: 159, column: 18, scope: !738)
!881 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !882)
!882 = distinct !DILocation(line: 160, column: 13, scope: !883)
!883 = distinct !DILexicalBlock(scope: !738, file: !1, line: 160, column: 13)
!884 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !882)
!885 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !882)
!886 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !882)
!887 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !888)
!888 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !882)
!889 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !888)
!890 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !888)
!891 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !888)
!892 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !888)
!893 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !888)
!894 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !888)
!895 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !888)
!896 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !888)
!897 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !888)
!898 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !888)
!899 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !888)
!900 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !888)
!901 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !888)
!902 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !888)
!903 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !888)
!904 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !888)
!905 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !888)
!906 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !888)
!907 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !888)
!908 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !888)
!909 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !888)
!910 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !888)
!911 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !888)
!912 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !882)
!913 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !882)
!914 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !882)
!915 = !DILocation(line: 160, column: 13, scope: !738)
!916 = !DILocation(line: 0, scope: !739)
!917 = !DILocation(line: 142, column: 12, scope: !728)
!918 = !DILocation(line: 162, column: 5, scope: !739)
!919 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !888)
!920 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !882)
!921 = !DILocation(line: 164, column: 16, scope: !922)
!922 = distinct !DILexicalBlock(scope: !739, file: !1, line: 162, column: 12)
!923 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !924)
!924 = distinct !DILocation(line: 165, column: 13, scope: !925)
!925 = distinct !DILexicalBlock(scope: !922, file: !1, line: 165, column: 13)
!926 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !924)
!927 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !924)
!928 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !924)
!929 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !924)
!930 = !DILocation(line: 0, scope: !925)
!931 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !932)
!932 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !924)
!933 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !932)
!934 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !932)
!935 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !932)
!936 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !932)
!937 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !932)
!938 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !932)
!939 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !932)
!940 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !932)
!941 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !932)
!942 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !932)
!943 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !932)
!944 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !932)
!945 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !932)
!946 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !932)
!947 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !932)
!948 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !932)
!949 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !932)
!950 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !932)
!951 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !932)
!952 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !932)
!953 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !932)
!954 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !932)
!955 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !932)
!956 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !924)
!957 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !924)
!958 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !924)
!959 = !DILocation(line: 165, column: 13, scope: !922)
!960 = !DILocation(line: 165, column: 43, scope: !925)
!961 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !932)
!962 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !924)
!963 = !DILocation(line: 166, column: 15, scope: !922)
!964 = !DILocation(line: 166, column: 13, scope: !922)
!965 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !966)
!966 = distinct !DILocation(line: 167, column: 13, scope: !967)
!967 = distinct !DILexicalBlock(scope: !922, file: !1, line: 167, column: 13)
!968 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !966)
!969 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !966)
!970 = !DILocation(line: 167, column: 29, scope: !967)
!971 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !966)
!972 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !973)
!973 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !966)
!974 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !973)
!975 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !973)
!976 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !973)
!977 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !973)
!978 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !973)
!979 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !973)
!980 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !973)
!981 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !973)
!982 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !973)
!983 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !973)
!984 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !973)
!985 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !973)
!986 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !973)
!987 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !973)
!988 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !973)
!989 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !973)
!990 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !973)
!991 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !973)
!992 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !973)
!993 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !973)
!994 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !973)
!995 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !973)
!996 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !973)
!997 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !966)
!998 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !973)
!999 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !966)
!1000 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !966)
!1001 = !DILocation(line: 167, column: 13, scope: !922)
!1002 = !DILocation(line: 0, scope: !967)
!1003 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !966)
!1004 = !DILocation(line: 170, column: 5, scope: !728)
!1005 = !DILocation(line: 171, column: 1, scope: !728)
!1006 = distinct !DISubprogram(name: "rdbLoadLenByRef", scope: !1, file: !1, line: 183, type: !1007, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1010)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!20, !220, !478, !1009}
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!1010 = !{!1011, !1012, !1013, !1014, !1015, !1016, !1022}
!1011 = !DILocalVariable(name: "rdb", arg: 1, scope: !1006, file: !1, line: 183, type: !220)
!1012 = !DILocalVariable(name: "isencoded", arg: 2, scope: !1006, file: !1, line: 183, type: !478)
!1013 = !DILocalVariable(name: "lenptr", arg: 3, scope: !1006, file: !1, line: 183, type: !1009)
!1014 = !DILocalVariable(name: "buf", scope: !1006, file: !1, line: 184, type: !735)
!1015 = !DILocalVariable(name: "type", scope: !1006, file: !1, line: 185, type: !20)
!1016 = !DILocalVariable(name: "len", scope: !1017, file: !1, line: 203, type: !31)
!1017 = distinct !DILexicalBlock(scope: !1018, file: !1, line: 201, column: 40)
!1018 = distinct !DILexicalBlock(scope: !1019, file: !1, line: 201, column: 16)
!1019 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 197, column: 16)
!1020 = distinct !DILexicalBlock(scope: !1021, file: !1, line: 194, column: 16)
!1021 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 190, column: 9)
!1022 = !DILocalVariable(name: "len", scope: !1023, file: !1, line: 208, type: !55)
!1023 = distinct !DILexicalBlock(scope: !1024, file: !1, line: 206, column: 40)
!1024 = distinct !DILexicalBlock(scope: !1018, file: !1, line: 206, column: 16)
!1025 = !DILocation(line: 183, column: 26, scope: !1006)
!1026 = !DILocation(line: 183, column: 36, scope: !1006)
!1027 = !DILocation(line: 183, column: 57, scope: !1006)
!1028 = !DILocation(line: 184, column: 5, scope: !1006)
!1029 = !DILocation(line: 184, column: 19, scope: !1006)
!1030 = !DILocation(line: 187, column: 9, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 187, column: 9)
!1032 = !DILocation(line: 187, column: 9, scope: !1006)
!1033 = !DILocation(line: 187, column: 31, scope: !1031)
!1034 = !DILocation(line: 187, column: 20, scope: !1031)
!1035 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1036)
!1036 = distinct !DILocation(line: 188, column: 9, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1006, file: !1, line: 188, column: 9)
!1038 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1036)
!1039 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1036)
!1040 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1036)
!1041 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1036)
!1042 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1036)
!1043 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1036)
!1044 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1036)
!1045 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1036)
!1046 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1036)
!1047 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1036)
!1048 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1036)
!1049 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1036)
!1050 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1036)
!1051 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1036)
!1052 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1036)
!1053 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1036)
!1054 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1036)
!1055 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1036)
!1056 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1036)
!1057 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1036)
!1058 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1036)
!1059 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1036)
!1060 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1036)
!1061 = !DILocation(line: 188, column: 9, scope: !1006)
!1062 = !DILocation(line: 188, column: 34, scope: !1037)
!1063 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1036)
!1064 = !DILocation(line: 189, column: 13, scope: !1006)
!1065 = !DILocation(line: 189, column: 25, scope: !1006)
!1066 = !DILocation(line: 185, column: 9, scope: !1006)
!1067 = !DILocation(line: 190, column: 14, scope: !1021)
!1068 = !DILocation(line: 190, column: 9, scope: !1006)
!1069 = !DILocation(line: 192, column: 13, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1021, file: !1, line: 190, column: 29)
!1071 = !DILocation(line: 192, column: 35, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1070, file: !1, line: 192, column: 13)
!1073 = !DILocation(line: 192, column: 24, scope: !1072)
!1074 = !DILocation(line: 193, column: 25, scope: !1070)
!1075 = !DILocation(line: 193, column: 19, scope: !1070)
!1076 = !DILocation(line: 193, column: 17, scope: !1070)
!1077 = !DILocation(line: 194, column: 5, scope: !1070)
!1078 = !DILocation(line: 194, column: 21, scope: !1020)
!1079 = !DILocation(line: 194, column: 16, scope: !1021)
!1080 = !DILocation(line: 196, column: 25, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1020, file: !1, line: 194, column: 37)
!1082 = !DILocation(line: 196, column: 19, scope: !1081)
!1083 = !DILocation(line: 196, column: 17, scope: !1081)
!1084 = !DILocation(line: 197, column: 5, scope: !1081)
!1085 = !DILocation(line: 197, column: 21, scope: !1019)
!1086 = !DILocation(line: 197, column: 16, scope: !1020)
!1087 = !DILocation(line: 199, column: 28, scope: !1088)
!1088 = distinct !DILexicalBlock(scope: !1089, file: !1, line: 199, column: 13)
!1089 = distinct !DILexicalBlock(scope: !1019, file: !1, line: 197, column: 38)
!1090 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1091)
!1091 = distinct !DILocation(line: 199, column: 13, scope: !1088)
!1092 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1091)
!1093 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1091)
!1094 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1091)
!1095 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1091)
!1096 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1091)
!1097 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1091)
!1098 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1091)
!1099 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1091)
!1100 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1091)
!1101 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1091)
!1102 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1091)
!1103 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1091)
!1104 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1091)
!1105 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1091)
!1106 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1091)
!1107 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1091)
!1108 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1091)
!1109 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1091)
!1110 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1091)
!1111 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1091)
!1112 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1091)
!1113 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1091)
!1114 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1091)
!1115 = !DILocation(line: 199, column: 13, scope: !1089)
!1116 = !DILocation(line: 199, column: 40, scope: !1088)
!1117 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1091)
!1118 = !DILocation(line: 200, column: 21, scope: !1089)
!1119 = !DILocation(line: 200, column: 27, scope: !1089)
!1120 = !DILocation(line: 200, column: 33, scope: !1089)
!1121 = !DILocation(line: 200, column: 38, scope: !1089)
!1122 = !DILocation(line: 200, column: 37, scope: !1089)
!1123 = !DILocation(line: 200, column: 17, scope: !1089)
!1124 = !DILocation(line: 201, column: 5, scope: !1089)
!1125 = !DILocation(line: 201, column: 23, scope: !1018)
!1126 = !DILocation(line: 201, column: 16, scope: !1019)
!1127 = !DILocation(line: 203, column: 9, scope: !1017)
!1128 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1129)
!1129 = distinct !DILocation(line: 204, column: 13, scope: !1130)
!1130 = distinct !DILexicalBlock(scope: !1017, file: !1, line: 204, column: 13)
!1131 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1129)
!1132 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1129)
!1133 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1129)
!1134 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1129)
!1135 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1129)
!1136 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1129)
!1137 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1129)
!1138 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1129)
!1139 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1129)
!1140 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1129)
!1141 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1129)
!1142 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1129)
!1143 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1129)
!1144 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1129)
!1145 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1129)
!1146 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1129)
!1147 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1129)
!1148 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1129)
!1149 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1129)
!1150 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1129)
!1151 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1129)
!1152 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1129)
!1153 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1129)
!1154 = !DILocation(line: 204, column: 13, scope: !1017)
!1155 = !DILocation(line: 204, column: 39, scope: !1130)
!1156 = !DILocation(line: 206, column: 5, scope: !1018)
!1157 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1129)
!1158 = !DILocation(line: 205, column: 19, scope: !1017)
!1159 = !DILocation(line: 203, column: 18, scope: !1017)
!1160 = !DILocation(line: 205, column: 17, scope: !1017)
!1161 = !DILocation(line: 206, column: 23, scope: !1024)
!1162 = !DILocation(line: 206, column: 16, scope: !1018)
!1163 = !DILocation(line: 208, column: 9, scope: !1023)
!1164 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1165)
!1165 = distinct !DILocation(line: 209, column: 13, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1023, file: !1, line: 209, column: 13)
!1167 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1165)
!1168 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1165)
!1169 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1165)
!1170 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1165)
!1171 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1165)
!1172 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1165)
!1173 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1165)
!1174 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1165)
!1175 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1165)
!1176 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1165)
!1177 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1165)
!1178 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1165)
!1179 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1165)
!1180 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1165)
!1181 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1165)
!1182 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1165)
!1183 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1165)
!1184 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1165)
!1185 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1165)
!1186 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1165)
!1187 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1165)
!1188 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1165)
!1189 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1165)
!1190 = !DILocation(line: 209, column: 13, scope: !1023)
!1191 = !DILocation(line: 209, column: 39, scope: !1166)
!1192 = !DILocation(line: 211, column: 5, scope: !1024)
!1193 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1165)
!1194 = !DILocation(line: 210, column: 19, scope: !1023)
!1195 = !DILocation(line: 208, column: 18, scope: !1023)
!1196 = !DILocation(line: 210, column: 17, scope: !1023)
!1197 = !DILocation(line: 212, column: 9, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1024, file: !1, line: 211, column: 12)
!1199 = !DILocation(line: 216, column: 5, scope: !1006)
!1200 = !DILocation(line: 0, scope: !1198)
!1201 = !DILocation(line: 217, column: 1, scope: !1006)
!1202 = distinct !DISubprogram(name: "rdbLoadLen", scope: !1, file: !1, line: 223, type: !1203, isLocal: false, isDefinition: true, scopeLine: 223, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1205)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!55, !220, !478}
!1205 = !{!1206, !1207, !1208}
!1206 = !DILocalVariable(name: "rdb", arg: 1, scope: !1202, file: !1, line: 223, type: !220)
!1207 = !DILocalVariable(name: "isencoded", arg: 2, scope: !1202, file: !1, line: 223, type: !478)
!1208 = !DILocalVariable(name: "len", scope: !1202, file: !1, line: 224, type: !55)
!1209 = !DILocation(line: 223, column: 26, scope: !1202)
!1210 = !DILocation(line: 223, column: 36, scope: !1202)
!1211 = !DILocation(line: 224, column: 5, scope: !1202)
!1212 = !DILocation(line: 224, column: 14, scope: !1202)
!1213 = !DILocation(line: 226, column: 9, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !1202, file: !1, line: 226, column: 9)
!1215 = !DILocation(line: 226, column: 45, scope: !1214)
!1216 = !DILocation(line: 226, column: 9, scope: !1202)
!1217 = !DILocation(line: 227, column: 12, scope: !1202)
!1218 = !DILocation(line: 0, scope: !1214)
!1219 = !DILocation(line: 228, column: 1, scope: !1202)
!1220 = distinct !DISubprogram(name: "rdbEncodeInteger", scope: !1, file: !1, line: 234, type: !1221, isLocal: false, isDefinition: true, scopeLine: 234, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1223)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!20, !12, !23}
!1223 = !{!1224, !1225}
!1224 = !DILocalVariable(name: "value", arg: 1, scope: !1220, file: !1, line: 234, type: !12)
!1225 = !DILocalVariable(name: "enc", arg: 2, scope: !1220, file: !1, line: 234, type: !23)
!1226 = !DILocation(line: 234, column: 32, scope: !1220)
!1227 = !DILocation(line: 234, column: 54, scope: !1220)
!1228 = !DILocation(line: 235, column: 26, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1220, file: !1, line: 235, column: 9)
!1230 = !DILocation(line: 236, column: 16, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1229, file: !1, line: 235, column: 48)
!1232 = !DILocation(line: 238, column: 9, scope: !1231)
!1233 = !DILocation(line: 239, column: 34, scope: !1234)
!1234 = distinct !DILexicalBlock(scope: !1229, file: !1, line: 239, column: 16)
!1235 = !DILocation(line: 240, column: 16, scope: !1236)
!1236 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 239, column: 57)
!1237 = !DILocation(line: 241, column: 18, scope: !1236)
!1238 = !DILocation(line: 241, column: 9, scope: !1236)
!1239 = !DILocation(line: 241, column: 16, scope: !1236)
!1240 = !DILocation(line: 242, column: 24, scope: !1236)
!1241 = !DILocation(line: 243, column: 9, scope: !1236)
!1242 = !DILocation(line: 244, column: 45, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1234, file: !1, line: 244, column: 16)
!1244 = !DILocation(line: 245, column: 16, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 244, column: 79)
!1246 = !DILocation(line: 246, column: 18, scope: !1245)
!1247 = !DILocation(line: 246, column: 9, scope: !1245)
!1248 = !DILocation(line: 246, column: 16, scope: !1245)
!1249 = !DILocation(line: 247, column: 24, scope: !1245)
!1250 = !DILocation(line: 247, column: 18, scope: !1245)
!1251 = !DILocation(line: 247, column: 9, scope: !1245)
!1252 = !DILocation(line: 247, column: 16, scope: !1245)
!1253 = !DILocation(line: 248, column: 24, scope: !1245)
!1254 = !DILocation(line: 248, column: 18, scope: !1245)
!1255 = !DILocation(line: 248, column: 9, scope: !1245)
!1256 = !DILocation(line: 248, column: 16, scope: !1245)
!1257 = !DILocation(line: 249, column: 24, scope: !1245)
!1258 = !DILocation(line: 250, column: 9, scope: !1245)
!1259 = !DILocation(line: 0, scope: !1231)
!1260 = !DILocation(line: 0, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 251, column: 12)
!1262 = !DILocation(line: 254, column: 1, scope: !1220)
!1263 = distinct !DISubprogram(name: "rdbLoadIntegerObject", scope: !1, file: !1, line: 259, type: !1264, isLocal: false, isDefinition: true, scopeLine: 259, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1267)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{!13, !220, !20, !20, !1266}
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!1267 = !{!1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1281, !1284, !1290, !1291}
!1268 = !DILocalVariable(name: "rdb", arg: 1, scope: !1263, file: !1, line: 259, type: !220)
!1269 = !DILocalVariable(name: "enctype", arg: 2, scope: !1263, file: !1, line: 259, type: !20)
!1270 = !DILocalVariable(name: "flags", arg: 3, scope: !1263, file: !1, line: 259, type: !20)
!1271 = !DILocalVariable(name: "lenptr", arg: 4, scope: !1263, file: !1, line: 259, type: !1266)
!1272 = !DILocalVariable(name: "plain", scope: !1263, file: !1, line: 260, type: !20)
!1273 = !DILocalVariable(name: "sds", scope: !1263, file: !1, line: 261, type: !20)
!1274 = !DILocalVariable(name: "encode", scope: !1263, file: !1, line: 262, type: !20)
!1275 = !DILocalVariable(name: "enc", scope: !1263, file: !1, line: 263, type: !375)
!1276 = !DILocalVariable(name: "val", scope: !1263, file: !1, line: 264, type: !12)
!1277 = !DILocalVariable(name: "v", scope: !1278, file: !1, line: 270, type: !123)
!1278 = distinct !DILexicalBlock(scope: !1279, file: !1, line: 269, column: 42)
!1279 = distinct !DILexicalBlock(scope: !1280, file: !1, line: 269, column: 16)
!1280 = distinct !DILexicalBlock(scope: !1263, file: !1, line: 266, column: 9)
!1281 = !DILocalVariable(name: "v", scope: !1282, file: !1, line: 275, type: !31)
!1282 = distinct !DILexicalBlock(scope: !1283, file: !1, line: 274, column: 42)
!1283 = distinct !DILexicalBlock(scope: !1279, file: !1, line: 274, column: 16)
!1284 = !DILocalVariable(name: "buf", scope: !1285, file: !1, line: 284, type: !1287)
!1285 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 283, column: 23)
!1286 = distinct !DILexicalBlock(scope: !1263, file: !1, line: 283, column: 9)
!1287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 168, elements: !1288)
!1288 = !{!1289}
!1289 = !DISubrange(count: 21)
!1290 = !DILocalVariable(name: "p", scope: !1285, file: !1, line: 284, type: !21)
!1291 = !DILocalVariable(name: "len", scope: !1285, file: !1, line: 285, type: !20)
!1292 = !DILocation(line: 259, column: 33, scope: !1263)
!1293 = !DILocation(line: 259, column: 42, scope: !1263)
!1294 = !DILocation(line: 259, column: 55, scope: !1263)
!1295 = !DILocation(line: 259, column: 70, scope: !1263)
!1296 = !DILocation(line: 260, column: 23, scope: !1263)
!1297 = !DILocation(line: 260, column: 9, scope: !1263)
!1298 = !DILocation(line: 261, column: 9, scope: !1263)
!1299 = !DILocation(line: 262, column: 24, scope: !1263)
!1300 = !DILocation(line: 262, column: 9, scope: !1263)
!1301 = !DILocation(line: 263, column: 5, scope: !1263)
!1302 = !DILocation(line: 263, column: 19, scope: !1263)
!1303 = !DILocation(line: 266, column: 17, scope: !1280)
!1304 = !DILocation(line: 266, column: 9, scope: !1263)
!1305 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1306)
!1306 = distinct !DILocation(line: 267, column: 13, scope: !1307)
!1307 = distinct !DILexicalBlock(scope: !1308, file: !1, line: 267, column: 13)
!1308 = distinct !DILexicalBlock(scope: !1280, file: !1, line: 266, column: 34)
!1309 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1306)
!1310 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1306)
!1311 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1306)
!1312 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1306)
!1313 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1306)
!1314 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1306)
!1315 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1306)
!1316 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1306)
!1317 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1306)
!1318 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1306)
!1319 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1306)
!1320 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1306)
!1321 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1306)
!1322 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1306)
!1323 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1306)
!1324 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1306)
!1325 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1306)
!1326 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1306)
!1327 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1306)
!1328 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1306)
!1329 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1306)
!1330 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1306)
!1331 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1306)
!1332 = !DILocation(line: 267, column: 13, scope: !1308)
!1333 = !DILocation(line: 267, column: 38, scope: !1307)
!1334 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1306)
!1335 = !DILocation(line: 268, column: 28, scope: !1308)
!1336 = !DILocation(line: 268, column: 15, scope: !1308)
!1337 = !DILocation(line: 264, column: 15, scope: !1263)
!1338 = !DILocation(line: 269, column: 5, scope: !1308)
!1339 = !DILocation(line: 269, column: 24, scope: !1279)
!1340 = !DILocation(line: 269, column: 16, scope: !1280)
!1341 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1342)
!1342 = distinct !DILocation(line: 271, column: 13, scope: !1343)
!1343 = distinct !DILexicalBlock(scope: !1278, file: !1, line: 271, column: 13)
!1344 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1342)
!1345 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1342)
!1346 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1342)
!1347 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1342)
!1348 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1342)
!1349 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1342)
!1350 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1342)
!1351 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1342)
!1352 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1342)
!1353 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1342)
!1354 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1342)
!1355 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1342)
!1356 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1342)
!1357 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1342)
!1358 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1342)
!1359 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1342)
!1360 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1342)
!1361 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1342)
!1362 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1342)
!1363 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1342)
!1364 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1342)
!1365 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1342)
!1366 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1342)
!1367 = !DILocation(line: 271, column: 13, scope: !1278)
!1368 = !DILocation(line: 272, column: 13, scope: !1278)
!1369 = !DILocation(line: 272, column: 21, scope: !1278)
!1370 = !DILocation(line: 272, column: 27, scope: !1278)
!1371 = !DILocation(line: 272, column: 19, scope: !1278)
!1372 = !DILocation(line: 270, column: 18, scope: !1278)
!1373 = !DILocation(line: 273, column: 15, scope: !1278)
!1374 = !DILocation(line: 274, column: 5, scope: !1279)
!1375 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1342)
!1376 = !DILocation(line: 271, column: 38, scope: !1343)
!1377 = !DILocation(line: 274, column: 24, scope: !1283)
!1378 = !DILocation(line: 274, column: 16, scope: !1279)
!1379 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1380)
!1380 = distinct !DILocation(line: 276, column: 13, scope: !1381)
!1381 = distinct !DILexicalBlock(scope: !1282, file: !1, line: 276, column: 13)
!1382 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1380)
!1383 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1380)
!1384 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1380)
!1385 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1380)
!1386 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1380)
!1387 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1380)
!1388 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1380)
!1389 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1380)
!1390 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1380)
!1391 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1380)
!1392 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1380)
!1393 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1380)
!1394 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1380)
!1395 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1380)
!1396 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1380)
!1397 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1380)
!1398 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1380)
!1399 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1380)
!1400 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1380)
!1401 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1380)
!1402 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1380)
!1403 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1380)
!1404 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1380)
!1405 = !DILocation(line: 276, column: 13, scope: !1282)
!1406 = !DILocation(line: 277, column: 13, scope: !1282)
!1407 = !DILocation(line: 277, column: 21, scope: !1282)
!1408 = !DILocation(line: 277, column: 27, scope: !1282)
!1409 = !DILocation(line: 277, column: 19, scope: !1282)
!1410 = !DILocation(line: 277, column: 33, scope: !1282)
!1411 = !DILocation(line: 277, column: 39, scope: !1282)
!1412 = !DILocation(line: 277, column: 31, scope: !1282)
!1413 = !DILocation(line: 277, column: 46, scope: !1282)
!1414 = !DILocation(line: 277, column: 52, scope: !1282)
!1415 = !DILocation(line: 277, column: 44, scope: !1282)
!1416 = !DILocation(line: 275, column: 18, scope: !1282)
!1417 = !DILocation(line: 278, column: 15, scope: !1282)
!1418 = !DILocation(line: 279, column: 5, scope: !1283)
!1419 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1380)
!1420 = !DILocation(line: 276, column: 38, scope: !1381)
!1421 = !DILocation(line: 281, column: 9, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1283, file: !1, line: 279, column: 12)
!1423 = !DILocation(line: 283, column: 9, scope: !1286)
!1424 = !DILocation(line: 283, column: 15, scope: !1286)
!1425 = !DILocation(line: 284, column: 9, scope: !1285)
!1426 = !DILocation(line: 284, column: 14, scope: !1285)
!1427 = !DILocation(line: 285, column: 19, scope: !1285)
!1428 = !DILocation(line: 285, column: 13, scope: !1285)
!1429 = !DILocation(line: 286, column: 13, scope: !1430)
!1430 = distinct !DILexicalBlock(scope: !1285, file: !1, line: 286, column: 13)
!1431 = !DILocation(line: 286, column: 13, scope: !1285)
!1432 = !DILocation(line: 286, column: 31, scope: !1430)
!1433 = !DILocation(line: 286, column: 29, scope: !1430)
!1434 = !DILocation(line: 286, column: 21, scope: !1430)
!1435 = !DILocation(line: 287, column: 13, scope: !1285)
!1436 = !DILocation(line: 287, column: 29, scope: !1285)
!1437 = !DILocation(line: 287, column: 21, scope: !1285)
!1438 = !DILocation(line: 287, column: 46, scope: !1285)
!1439 = !DILocation(line: 287, column: 57, scope: !1285)
!1440 = !DILocation(line: 287, column: 36, scope: !1285)
!1441 = !DILocation(line: 288, column: 22, scope: !1285)
!1442 = !DILocation(line: 284, column: 35, scope: !1285)
!1443 = !DILocation(line: 288, column: 9, scope: !1285)
!1444 = !DILocation(line: 290, column: 5, scope: !1286)
!1445 = !DILocation(line: 290, column: 16, scope: !1446)
!1446 = distinct !DILexicalBlock(scope: !1286, file: !1, line: 290, column: 16)
!1447 = !DILocation(line: 290, column: 16, scope: !1286)
!1448 = !DILocation(line: 291, column: 16, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1446, file: !1, line: 290, column: 24)
!1450 = !DILocation(line: 291, column: 9, scope: !1449)
!1451 = !DILocation(line: 293, column: 40, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1446, file: !1, line: 292, column: 12)
!1453 = !DILocation(line: 293, column: 16, scope: !1452)
!1454 = !DILocation(line: 293, column: 9, scope: !1452)
!1455 = !DILocation(line: 0, scope: !1381)
!1456 = !DILocation(line: 295, column: 1, scope: !1263)
!1457 = distinct !DISubprogram(name: "rdbTryIntegerEncoding", scope: !1, file: !1, line: 300, type: !1458, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1460)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!20, !21, !550, !23}
!1460 = !{!1461, !1462, !1463, !1464, !1465, !1466}
!1461 = !DILocalVariable(name: "s", arg: 1, scope: !1457, file: !1, line: 300, type: !21)
!1462 = !DILocalVariable(name: "len", arg: 2, scope: !1457, file: !1, line: 300, type: !550)
!1463 = !DILocalVariable(name: "enc", arg: 3, scope: !1457, file: !1, line: 300, type: !23)
!1464 = !DILocalVariable(name: "value", scope: !1457, file: !1, line: 301, type: !12)
!1465 = !DILocalVariable(name: "endptr", scope: !1457, file: !1, line: 302, type: !21)
!1466 = !DILocalVariable(name: "buf", scope: !1457, file: !1, line: 302, type: !1467)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 256, elements: !415)
!1468 = !DILocation(line: 300, column: 33, scope: !1457)
!1469 = !DILocation(line: 300, column: 43, scope: !1457)
!1470 = !DILocation(line: 300, column: 63, scope: !1457)
!1471 = !DILocation(line: 302, column: 5, scope: !1457)
!1472 = !DILocation(line: 302, column: 19, scope: !1457)
!1473 = !DILocation(line: 302, column: 11, scope: !1457)
!1474 = !DILocation(line: 305, column: 13, scope: !1457)
!1475 = !DILocation(line: 301, column: 15, scope: !1457)
!1476 = !DILocation(line: 306, column: 9, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1457, file: !1, line: 306, column: 9)
!1478 = !DILocation(line: 306, column: 19, scope: !1477)
!1479 = !DILocation(line: 306, column: 9, scope: !1457)
!1480 = !DILocation(line: 307, column: 5, scope: !1457)
!1481 = !DILocation(line: 311, column: 9, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1457, file: !1, line: 311, column: 9)
!1483 = !DILocation(line: 311, column: 21, scope: !1482)
!1484 = !DILocation(line: 311, column: 28, scope: !1482)
!1485 = !DILocation(line: 311, column: 31, scope: !1482)
!1486 = !DILocation(line: 311, column: 9, scope: !1457)
!1487 = !DILocation(line: 234, column: 32, scope: !1220, inlinedAt: !1488)
!1488 = distinct !DILocation(line: 313, column: 12, scope: !1457)
!1489 = !DILocation(line: 234, column: 54, scope: !1220, inlinedAt: !1488)
!1490 = !DILocation(line: 235, column: 26, scope: !1229, inlinedAt: !1488)
!1491 = !DILocation(line: 236, column: 16, scope: !1231, inlinedAt: !1488)
!1492 = !DILocation(line: 238, column: 9, scope: !1231, inlinedAt: !1488)
!1493 = !DILocation(line: 239, column: 34, scope: !1234, inlinedAt: !1488)
!1494 = !DILocation(line: 240, column: 16, scope: !1236, inlinedAt: !1488)
!1495 = !DILocation(line: 241, column: 18, scope: !1236, inlinedAt: !1488)
!1496 = !DILocation(line: 241, column: 9, scope: !1236, inlinedAt: !1488)
!1497 = !DILocation(line: 241, column: 16, scope: !1236, inlinedAt: !1488)
!1498 = !DILocation(line: 242, column: 24, scope: !1236, inlinedAt: !1488)
!1499 = !DILocation(line: 243, column: 9, scope: !1236, inlinedAt: !1488)
!1500 = !DILocation(line: 244, column: 45, scope: !1243, inlinedAt: !1488)
!1501 = !DILocation(line: 245, column: 16, scope: !1245, inlinedAt: !1488)
!1502 = !DILocation(line: 246, column: 18, scope: !1245, inlinedAt: !1488)
!1503 = !DILocation(line: 246, column: 9, scope: !1245, inlinedAt: !1488)
!1504 = !DILocation(line: 246, column: 16, scope: !1245, inlinedAt: !1488)
!1505 = !DILocation(line: 247, column: 24, scope: !1245, inlinedAt: !1488)
!1506 = !DILocation(line: 247, column: 18, scope: !1245, inlinedAt: !1488)
!1507 = !DILocation(line: 247, column: 9, scope: !1245, inlinedAt: !1488)
!1508 = !DILocation(line: 247, column: 16, scope: !1245, inlinedAt: !1488)
!1509 = !DILocation(line: 248, column: 24, scope: !1245, inlinedAt: !1488)
!1510 = !DILocation(line: 248, column: 18, scope: !1245, inlinedAt: !1488)
!1511 = !DILocation(line: 248, column: 9, scope: !1245, inlinedAt: !1488)
!1512 = !DILocation(line: 248, column: 16, scope: !1245, inlinedAt: !1488)
!1513 = !DILocation(line: 249, column: 24, scope: !1245, inlinedAt: !1488)
!1514 = !DILocation(line: 250, column: 9, scope: !1245, inlinedAt: !1488)
!1515 = !DILocation(line: 0, scope: !1457)
!1516 = !DILocation(line: 0, scope: !1261, inlinedAt: !1488)
!1517 = !DILocation(line: 254, column: 1, scope: !1220, inlinedAt: !1488)
!1518 = !DILocation(line: 313, column: 5, scope: !1457)
!1519 = !DILocation(line: 0, scope: !1477)
!1520 = !DILocation(line: 314, column: 1, scope: !1457)
!1521 = distinct !DISubprogram(name: "rdbSaveLzfBlob", scope: !1, file: !1, line: 316, type: !1522, isLocal: false, isDefinition: true, scopeLine: 317, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1524)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!104, !220, !13, !550, !550}
!1524 = !{!1525, !1526, !1527, !1528, !1529, !1530, !1531}
!1525 = !DILocalVariable(name: "rdb", arg: 1, scope: !1521, file: !1, line: 316, type: !220)
!1526 = !DILocalVariable(name: "data", arg: 2, scope: !1521, file: !1, line: 316, type: !13)
!1527 = !DILocalVariable(name: "compress_len", arg: 3, scope: !1521, file: !1, line: 316, type: !550)
!1528 = !DILocalVariable(name: "original_len", arg: 4, scope: !1521, file: !1, line: 317, type: !550)
!1529 = !DILocalVariable(name: "byte", scope: !1521, file: !1, line: 318, type: !24)
!1530 = !DILocalVariable(name: "n", scope: !1521, file: !1, line: 319, type: !104)
!1531 = !DILocalVariable(name: "nwritten", scope: !1521, file: !1, line: 319, type: !104)
!1532 = !DILocation(line: 316, column: 29, scope: !1521)
!1533 = !DILocation(line: 316, column: 40, scope: !1521)
!1534 = !DILocation(line: 316, column: 53, scope: !1521)
!1535 = !DILocation(line: 317, column: 31, scope: !1521)
!1536 = !DILocation(line: 318, column: 19, scope: !1521)
!1537 = !DILocation(line: 318, column: 5, scope: !1521)
!1538 = !DILocation(line: 319, column: 16, scope: !1521)
!1539 = !DILocation(line: 322, column: 10, scope: !1521)
!1540 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !1541)
!1541 = distinct !DILocation(line: 323, column: 14, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 323, column: 9)
!1543 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !1541)
!1544 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !1541)
!1545 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !1541)
!1546 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !1541)
!1547 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !1548)
!1548 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !1541)
!1549 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !1548)
!1550 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !1548)
!1551 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !1548)
!1552 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !1548)
!1553 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !1548)
!1554 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !1548)
!1555 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !1548)
!1556 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !1548)
!1557 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !1548)
!1558 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !1548)
!1559 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !1548)
!1560 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !1548)
!1561 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !1548)
!1562 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !1548)
!1563 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !1548)
!1564 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !1548)
!1565 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !1548)
!1566 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !1548)
!1567 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !1548)
!1568 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !1548)
!1569 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !1548)
!1570 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !1548)
!1571 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !1548)
!1572 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !1541)
!1573 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !1548)
!1574 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !1541)
!1575 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !1541)
!1576 = !DILocation(line: 319, column: 13, scope: !1521)
!1577 = !DILocation(line: 323, column: 9, scope: !1521)
!1578 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !1541)
!1579 = !DILocation(line: 326, column: 14, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 326, column: 9)
!1581 = !DILocation(line: 326, column: 44, scope: !1580)
!1582 = !DILocation(line: 326, column: 9, scope: !1521)
!1583 = !DILocation(line: 329, column: 14, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 329, column: 9)
!1585 = !DILocation(line: 329, column: 44, scope: !1584)
!1586 = !DILocation(line: 329, column: 9, scope: !1521)
!1587 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !1588)
!1588 = distinct !DILocation(line: 332, column: 14, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1521, file: !1, line: 332, column: 9)
!1590 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !1588)
!1591 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !1588)
!1592 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !1588)
!1593 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !1594)
!1594 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !1588)
!1595 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !1594)
!1596 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !1594)
!1597 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !1594)
!1598 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !1594)
!1599 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !1594)
!1600 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !1594)
!1601 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !1594)
!1602 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !1594)
!1603 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !1594)
!1604 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !1594)
!1605 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !1594)
!1606 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !1594)
!1607 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !1594)
!1608 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !1594)
!1609 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !1594)
!1610 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !1594)
!1611 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !1594)
!1612 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !1594)
!1613 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !1594)
!1614 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !1594)
!1615 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !1594)
!1616 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !1594)
!1617 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !1594)
!1618 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !1588)
!1619 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !1594)
!1620 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !1588)
!1621 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !1588)
!1622 = !DILocation(line: 332, column: 9, scope: !1521)
!1623 = !DILocation(line: 75, column: 12, scope: !547, inlinedAt: !1588)
!1624 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !1588)
!1625 = !DILocation(line: 332, column: 50, scope: !1589)
!1626 = !DILocation(line: 332, column: 14, scope: !1589)
!1627 = !DILocation(line: 327, column: 14, scope: !1521)
!1628 = !DILocation(line: 330, column: 14, scope: !1521)
!1629 = !DILocation(line: 333, column: 14, scope: !1521)
!1630 = !DILocation(line: 335, column: 5, scope: !1521)
!1631 = !DILocation(line: 0, scope: !1521)
!1632 = !DILocation(line: 339, column: 1, scope: !1521)
!1633 = distinct !DISubprogram(name: "rdbSaveLzfStringObject", scope: !1, file: !1, line: 341, type: !1634, isLocal: false, isDefinition: true, scopeLine: 341, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1636)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!104, !220, !23, !550}
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643}
!1637 = !DILocalVariable(name: "rdb", arg: 1, scope: !1633, file: !1, line: 341, type: !220)
!1638 = !DILocalVariable(name: "s", arg: 2, scope: !1633, file: !1, line: 341, type: !23)
!1639 = !DILocalVariable(name: "len", arg: 3, scope: !1633, file: !1, line: 341, type: !550)
!1640 = !DILocalVariable(name: "comprlen", scope: !1633, file: !1, line: 342, type: !550)
!1641 = !DILocalVariable(name: "outlen", scope: !1633, file: !1, line: 342, type: !550)
!1642 = !DILocalVariable(name: "out", scope: !1633, file: !1, line: 343, type: !13)
!1643 = !DILocalVariable(name: "nwritten", scope: !1633, file: !1, line: 354, type: !104)
!1644 = !DILocation(line: 341, column: 37, scope: !1633)
!1645 = !DILocation(line: 341, column: 57, scope: !1633)
!1646 = !DILocation(line: 341, column: 67, scope: !1633)
!1647 = !DILocation(line: 346, column: 13, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 346, column: 9)
!1649 = !DILocation(line: 346, column: 9, scope: !1633)
!1650 = !DILocation(line: 342, column: 22, scope: !1633)
!1651 = !DILocation(line: 348, column: 30, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 348, column: 9)
!1653 = !DILocation(line: 348, column: 16, scope: !1652)
!1654 = !DILocation(line: 343, column: 11, scope: !1633)
!1655 = !DILocation(line: 348, column: 35, scope: !1652)
!1656 = !DILocation(line: 348, column: 9, scope: !1633)
!1657 = !DILocation(line: 349, column: 32, scope: !1633)
!1658 = !DILocation(line: 349, column: 42, scope: !1633)
!1659 = !DILocation(line: 349, column: 16, scope: !1633)
!1660 = !DILocation(line: 350, column: 18, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1633, file: !1, line: 350, column: 9)
!1662 = !DILocation(line: 350, column: 9, scope: !1633)
!1663 = !DILocation(line: 351, column: 9, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1661, file: !1, line: 350, column: 24)
!1665 = !DILocation(line: 352, column: 9, scope: !1664)
!1666 = !DILocation(line: 342, column: 12, scope: !1633)
!1667 = !DILocation(line: 354, column: 24, scope: !1633)
!1668 = !DILocation(line: 354, column: 13, scope: !1633)
!1669 = !DILocation(line: 355, column: 5, scope: !1633)
!1670 = !DILocation(line: 0, scope: !1633)
!1671 = !DILocation(line: 357, column: 1, scope: !1633)
!1672 = distinct !DISubprogram(name: "rdbLoadLzfStringObject", scope: !1, file: !1, line: 362, type: !1673, isLocal: false, isDefinition: true, scopeLine: 362, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1675)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!13, !220, !20, !1266}
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684}
!1676 = !DILocalVariable(name: "rdb", arg: 1, scope: !1672, file: !1, line: 362, type: !220)
!1677 = !DILocalVariable(name: "flags", arg: 2, scope: !1672, file: !1, line: 362, type: !20)
!1678 = !DILocalVariable(name: "lenptr", arg: 3, scope: !1672, file: !1, line: 362, type: !1266)
!1679 = !DILocalVariable(name: "plain", scope: !1672, file: !1, line: 363, type: !20)
!1680 = !DILocalVariable(name: "sds", scope: !1672, file: !1, line: 364, type: !20)
!1681 = !DILocalVariable(name: "len", scope: !1672, file: !1, line: 365, type: !55)
!1682 = !DILocalVariable(name: "clen", scope: !1672, file: !1, line: 365, type: !55)
!1683 = !DILocalVariable(name: "c", scope: !1672, file: !1, line: 366, type: !23)
!1684 = !DILocalVariable(name: "val", scope: !1672, file: !1, line: 367, type: !21)
!1685 = !DILocation(line: 362, column: 35, scope: !1672)
!1686 = !DILocation(line: 362, column: 44, scope: !1672)
!1687 = !DILocation(line: 362, column: 59, scope: !1672)
!1688 = !DILocation(line: 363, column: 23, scope: !1672)
!1689 = !DILocation(line: 363, column: 9, scope: !1672)
!1690 = !DILocation(line: 364, column: 9, scope: !1672)
!1691 = !DILocation(line: 366, column: 20, scope: !1672)
!1692 = !DILocation(line: 367, column: 11, scope: !1672)
!1693 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !1694)
!1694 = distinct !DILocation(line: 369, column: 17, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 369, column: 9)
!1696 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !1694)
!1697 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !1694)
!1698 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !1694)
!1699 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !1694)
!1700 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !1694)
!1701 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !1694)
!1702 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !1694)
!1703 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !1694)
!1704 = !DILocation(line: 365, column: 19, scope: !1672)
!1705 = !DILocation(line: 369, column: 9, scope: !1672)
!1706 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !1694)
!1707 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !1694)
!1708 = !DILocation(line: 369, column: 39, scope: !1695)
!1709 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !1710)
!1710 = distinct !DILocation(line: 370, column: 16, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 370, column: 9)
!1712 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !1710)
!1713 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !1710)
!1714 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !1710)
!1715 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !1710)
!1716 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !1710)
!1717 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !1710)
!1718 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !1710)
!1719 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !1710)
!1720 = !DILocation(line: 365, column: 14, scope: !1672)
!1721 = !DILocation(line: 370, column: 9, scope: !1672)
!1722 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !1710)
!1723 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !1710)
!1724 = !DILocation(line: 370, column: 38, scope: !1711)
!1725 = !DILocation(line: 371, column: 14, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 371, column: 9)
!1727 = !DILocation(line: 371, column: 29, scope: !1726)
!1728 = !DILocation(line: 371, column: 9, scope: !1672)
!1729 = !DILocation(line: 374, column: 9, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 374, column: 9)
!1731 = !DILocation(line: 374, column: 9, scope: !1672)
!1732 = !DILocation(line: 375, column: 15, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1730, file: !1, line: 374, column: 16)
!1734 = !DILocation(line: 376, column: 5, scope: !1733)
!1735 = !DILocation(line: 377, column: 25, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1730, file: !1, line: 376, column: 12)
!1737 = !DILocation(line: 377, column: 15, scope: !1736)
!1738 = !DILocation(line: 0, scope: !1736)
!1739 = !DILocation(line: 379, column: 9, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 379, column: 9)
!1741 = !DILocation(line: 379, column: 9, scope: !1672)
!1742 = !DILocation(line: 379, column: 25, scope: !1740)
!1743 = !DILocation(line: 379, column: 17, scope: !1740)
!1744 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !1745)
!1745 = distinct !DILocation(line: 382, column: 9, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 382, column: 9)
!1747 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !1745)
!1748 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !1745)
!1749 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !1745)
!1750 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !1745)
!1751 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !1745)
!1752 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !1745)
!1753 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !1745)
!1754 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !1745)
!1755 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !1745)
!1756 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !1745)
!1757 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !1745)
!1758 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !1745)
!1759 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !1745)
!1760 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !1745)
!1761 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !1745)
!1762 = !DILocation(line: 382, column: 9, scope: !1672)
!1763 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !1745)
!1764 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !1745)
!1765 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !1745)
!1766 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !1745)
!1767 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !1745)
!1768 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !1745)
!1769 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !1745)
!1770 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !1745)
!1771 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !1745)
!1772 = !DILocation(line: 383, column: 26, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 383, column: 9)
!1774 = !DILocation(line: 383, column: 35, scope: !1773)
!1775 = !DILocation(line: 383, column: 9, scope: !1773)
!1776 = !DILocation(line: 383, column: 40, scope: !1773)
!1777 = !DILocation(line: 383, column: 9, scope: !1672)
!1778 = !DILocation(line: 384, column: 13, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1780, file: !1, line: 384, column: 13)
!1780 = distinct !DILexicalBlock(scope: !1773, file: !1, line: 383, column: 46)
!1781 = !DILocation(line: 384, column: 13, scope: !1780)
!1782 = !DILocation(line: 384, column: 27, scope: !1779)
!1783 = !DILocation(line: 387, column: 5, scope: !1672)
!1784 = !DILocation(line: 389, column: 15, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 389, column: 9)
!1786 = !DILocation(line: 392, column: 16, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1785, file: !1, line: 391, column: 12)
!1788 = !DILocation(line: 392, column: 9, scope: !1787)
!1789 = !DILocation(line: 0, scope: !1733)
!1790 = !DILocation(line: 395, column: 5, scope: !1672)
!1791 = !DILocation(line: 396, column: 9, scope: !1792)
!1792 = distinct !DILexicalBlock(scope: !1672, file: !1, line: 396, column: 9)
!1793 = !DILocation(line: 396, column: 9, scope: !1672)
!1794 = !DILocation(line: 397, column: 9, scope: !1792)
!1795 = !DILocation(line: 399, column: 9, scope: !1792)
!1796 = !DILocation(line: 400, column: 5, scope: !1672)
!1797 = !DILocation(line: 0, scope: !1787)
!1798 = !DILocation(line: 0, scope: !1695)
!1799 = !DILocation(line: 401, column: 1, scope: !1672)
!1800 = distinct !DISubprogram(name: "rdbSaveRawString", scope: !1, file: !1, line: 405, type: !1634, isLocal: false, isDefinition: true, scopeLine: 405, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1801)
!1801 = !{!1802, !1803, !1804, !1805, !1806, !1807, !1808}
!1802 = !DILocalVariable(name: "rdb", arg: 1, scope: !1800, file: !1, line: 405, type: !220)
!1803 = !DILocalVariable(name: "s", arg: 2, scope: !1800, file: !1, line: 405, type: !23)
!1804 = !DILocalVariable(name: "len", arg: 3, scope: !1800, file: !1, line: 405, type: !550)
!1805 = !DILocalVariable(name: "enclen", scope: !1800, file: !1, line: 406, type: !20)
!1806 = !DILocalVariable(name: "n", scope: !1800, file: !1, line: 407, type: !104)
!1807 = !DILocalVariable(name: "nwritten", scope: !1800, file: !1, line: 407, type: !104)
!1808 = !DILocalVariable(name: "buf", scope: !1809, file: !1, line: 411, type: !1811)
!1809 = distinct !DILexicalBlock(scope: !1810, file: !1, line: 410, column: 20)
!1810 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 410, column: 9)
!1811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 40, elements: !1812)
!1812 = !{!1813}
!1813 = !DISubrange(count: 5)
!1814 = !DILocation(line: 405, column: 31, scope: !1800)
!1815 = !DILocation(line: 405, column: 51, scope: !1800)
!1816 = !DILocation(line: 405, column: 61, scope: !1800)
!1817 = !DILocation(line: 407, column: 16, scope: !1800)
!1818 = !DILocation(line: 410, column: 13, scope: !1810)
!1819 = !DILocation(line: 410, column: 9, scope: !1800)
!1820 = !DILocation(line: 411, column: 9, scope: !1809)
!1821 = !DILocation(line: 411, column: 23, scope: !1809)
!1822 = !DILocation(line: 412, column: 23, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1809, file: !1, line: 412, column: 13)
!1824 = !DILocation(line: 406, column: 9, scope: !1800)
!1825 = !DILocation(line: 412, column: 64, scope: !1823)
!1826 = !DILocation(line: 412, column: 13, scope: !1809)
!1827 = !DILocation(line: 413, column: 37, scope: !1828)
!1828 = distinct !DILexicalBlock(scope: !1829, file: !1, line: 413, column: 17)
!1829 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 412, column: 69)
!1830 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !1831)
!1831 = distinct !DILocation(line: 413, column: 17, scope: !1828)
!1832 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !1831)
!1833 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !1831)
!1834 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !1831)
!1835 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !1831)
!1836 = !DILocation(line: 0, scope: !1828)
!1837 = !DILocation(line: 413, column: 17, scope: !1829)
!1838 = !DILocation(line: 0, scope: !1829)
!1839 = !DILocation(line: 413, column: 52, scope: !1828)
!1840 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !1841)
!1841 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !1831)
!1842 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !1841)
!1843 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !1841)
!1844 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !1841)
!1845 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !1841)
!1846 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !1841)
!1847 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !1841)
!1848 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !1841)
!1849 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !1841)
!1850 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !1841)
!1851 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !1841)
!1852 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !1841)
!1853 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !1841)
!1854 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !1841)
!1855 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !1841)
!1856 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !1841)
!1857 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !1841)
!1858 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !1841)
!1859 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !1841)
!1860 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !1841)
!1861 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !1841)
!1862 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !1841)
!1863 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !1841)
!1864 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !1841)
!1865 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !1831)
!1866 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !1831)
!1867 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !1831)
!1868 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !1841)
!1869 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !1831)
!1870 = !DILocation(line: 413, column: 45, scope: !1828)
!1871 = !DILocation(line: 416, column: 5, scope: !1810)
!1872 = !DILocation(line: 420, column: 32, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 420, column: 9)
!1874 = !DILocation(line: 420, column: 16, scope: !1873)
!1875 = !{!204, !192, i64 2128}
!1876 = !DILocation(line: 420, column: 9, scope: !1873)
!1877 = !DILocation(line: 420, column: 39, scope: !1873)
!1878 = !DILocation(line: 421, column: 13, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1873, file: !1, line: 420, column: 45)
!1880 = !DILocation(line: 407, column: 13, scope: !1800)
!1881 = !DILocation(line: 422, column: 15, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1879, file: !1, line: 422, column: 13)
!1883 = !DILocation(line: 422, column: 13, scope: !1879)
!1884 = !DILocation(line: 423, column: 15, scope: !1885)
!1885 = distinct !DILexicalBlock(scope: !1879, file: !1, line: 423, column: 13)
!1886 = !DILocation(line: 423, column: 13, scope: !1879)
!1887 = !DILocation(line: 428, column: 14, scope: !1888)
!1888 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 428, column: 9)
!1889 = !DILocation(line: 428, column: 35, scope: !1888)
!1890 = !DILocation(line: 428, column: 9, scope: !1800)
!1891 = !DILocation(line: 430, column: 13, scope: !1892)
!1892 = distinct !DILexicalBlock(scope: !1800, file: !1, line: 430, column: 9)
!1893 = !DILocation(line: 430, column: 9, scope: !1800)
!1894 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !1895)
!1895 = distinct !DILocation(line: 431, column: 13, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1897, file: !1, line: 431, column: 13)
!1897 = distinct !DILexicalBlock(scope: !1892, file: !1, line: 430, column: 18)
!1898 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !1895)
!1899 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !1895)
!1900 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !1895)
!1901 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !1895)
!1902 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !1903)
!1903 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !1895)
!1904 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !1903)
!1905 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !1903)
!1906 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !1903)
!1907 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !1903)
!1908 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !1903)
!1909 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !1903)
!1910 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !1903)
!1911 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !1903)
!1912 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !1903)
!1913 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !1903)
!1914 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !1903)
!1915 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !1903)
!1916 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !1903)
!1917 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !1903)
!1918 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !1903)
!1919 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !1903)
!1920 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !1903)
!1921 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !1903)
!1922 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !1903)
!1923 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !1903)
!1924 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !1903)
!1925 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !1903)
!1926 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !1903)
!1927 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !1895)
!1928 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !1903)
!1929 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !1895)
!1930 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !1895)
!1931 = !DILocation(line: 431, column: 13, scope: !1897)
!1932 = !DILocation(line: 75, column: 12, scope: !547, inlinedAt: !1895)
!1933 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !1895)
!1934 = !DILocation(line: 431, column: 36, scope: !1896)
!1935 = !DILocation(line: 432, column: 18, scope: !1897)
!1936 = !DILocation(line: 433, column: 5, scope: !1897)
!1937 = !DILocation(line: 435, column: 1, scope: !1800)
!1938 = distinct !DISubprogram(name: "rdbSaveLongLongAsStringObject", scope: !1, file: !1, line: 438, type: !1939, isLocal: false, isDefinition: true, scopeLine: 438, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !1941)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!104, !220, !12}
!1941 = !{!1942, !1943, !1944, !1946, !1947, !1948}
!1942 = !DILocalVariable(name: "rdb", arg: 1, scope: !1938, file: !1, line: 438, type: !220)
!1943 = !DILocalVariable(name: "value", arg: 2, scope: !1938, file: !1, line: 438, type: !12)
!1944 = !DILocalVariable(name: "buf", scope: !1938, file: !1, line: 439, type: !1945)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 256, elements: !415)
!1946 = !DILocalVariable(name: "n", scope: !1938, file: !1, line: 440, type: !104)
!1947 = !DILocalVariable(name: "nwritten", scope: !1938, file: !1, line: 440, type: !104)
!1948 = !DILocalVariable(name: "enclen", scope: !1938, file: !1, line: 441, type: !20)
!1949 = !DILocation(line: 438, column: 44, scope: !1938)
!1950 = !DILocation(line: 438, column: 59, scope: !1938)
!1951 = !DILocation(line: 439, column: 5, scope: !1938)
!1952 = !DILocation(line: 439, column: 19, scope: !1938)
!1953 = !DILocation(line: 440, column: 16, scope: !1938)
!1954 = !DILocation(line: 234, column: 32, scope: !1220, inlinedAt: !1955)
!1955 = distinct !DILocation(line: 441, column: 18, scope: !1938)
!1956 = !DILocation(line: 234, column: 54, scope: !1220, inlinedAt: !1955)
!1957 = !DILocation(line: 235, column: 26, scope: !1229, inlinedAt: !1955)
!1958 = !DILocation(line: 236, column: 16, scope: !1231, inlinedAt: !1955)
!1959 = !DILocation(line: 237, column: 18, scope: !1231, inlinedAt: !1955)
!1960 = !DILocation(line: 237, column: 9, scope: !1231, inlinedAt: !1955)
!1961 = !DILocation(line: 237, column: 16, scope: !1231, inlinedAt: !1955)
!1962 = !DILocation(line: 238, column: 9, scope: !1231, inlinedAt: !1955)
!1963 = !DILocation(line: 239, column: 34, scope: !1234, inlinedAt: !1955)
!1964 = !DILocation(line: 240, column: 16, scope: !1236, inlinedAt: !1955)
!1965 = !DILocation(line: 241, column: 18, scope: !1236, inlinedAt: !1955)
!1966 = !DILocation(line: 241, column: 9, scope: !1236, inlinedAt: !1955)
!1967 = !DILocation(line: 241, column: 16, scope: !1236, inlinedAt: !1955)
!1968 = !DILocation(line: 242, column: 24, scope: !1236, inlinedAt: !1955)
!1969 = !DILocation(line: 242, column: 18, scope: !1236, inlinedAt: !1955)
!1970 = !DILocation(line: 242, column: 9, scope: !1236, inlinedAt: !1955)
!1971 = !DILocation(line: 242, column: 16, scope: !1236, inlinedAt: !1955)
!1972 = !DILocation(line: 243, column: 9, scope: !1236, inlinedAt: !1955)
!1973 = !DILocation(line: 244, column: 45, scope: !1243, inlinedAt: !1955)
!1974 = !DILocation(line: 245, column: 16, scope: !1245, inlinedAt: !1955)
!1975 = !DILocation(line: 246, column: 18, scope: !1245, inlinedAt: !1955)
!1976 = !DILocation(line: 246, column: 9, scope: !1245, inlinedAt: !1955)
!1977 = !DILocation(line: 246, column: 16, scope: !1245, inlinedAt: !1955)
!1978 = !DILocation(line: 247, column: 24, scope: !1245, inlinedAt: !1955)
!1979 = !DILocation(line: 247, column: 18, scope: !1245, inlinedAt: !1955)
!1980 = !DILocation(line: 247, column: 9, scope: !1245, inlinedAt: !1955)
!1981 = !DILocation(line: 247, column: 16, scope: !1245, inlinedAt: !1955)
!1982 = !DILocation(line: 248, column: 24, scope: !1245, inlinedAt: !1955)
!1983 = !DILocation(line: 248, column: 18, scope: !1245, inlinedAt: !1955)
!1984 = !DILocation(line: 248, column: 9, scope: !1245, inlinedAt: !1955)
!1985 = !DILocation(line: 248, column: 16, scope: !1245, inlinedAt: !1955)
!1986 = !DILocation(line: 249, column: 24, scope: !1245, inlinedAt: !1955)
!1987 = !DILocation(line: 249, column: 18, scope: !1245, inlinedAt: !1955)
!1988 = !DILocation(line: 249, column: 9, scope: !1245, inlinedAt: !1955)
!1989 = !DILocation(line: 249, column: 16, scope: !1245, inlinedAt: !1955)
!1990 = !DILocation(line: 250, column: 9, scope: !1245, inlinedAt: !1955)
!1991 = !DILocation(line: 0, scope: !1938)
!1992 = !DILocation(line: 254, column: 1, scope: !1220, inlinedAt: !1955)
!1993 = !DILocation(line: 441, column: 9, scope: !1938)
!1994 = !DILocation(line: 442, column: 9, scope: !1938)
!1995 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !1996)
!1996 = distinct !DILocation(line: 443, column: 16, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 442, column: 21)
!1998 = distinct !DILexicalBlock(scope: !1938, file: !1, line: 442, column: 9)
!1999 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !1996)
!2000 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !1996)
!2001 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !1996)
!2002 = !DILocation(line: 443, column: 36, scope: !1997)
!2003 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !1996)
!2004 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !2005)
!2005 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !1996)
!2006 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !2005)
!2007 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !2005)
!2008 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !2005)
!2009 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !2005)
!2010 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !2005)
!2011 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !2005)
!2012 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !2005)
!2013 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !2005)
!2014 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !2005)
!2015 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !2005)
!2016 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !2005)
!2017 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !2005)
!2018 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !2005)
!2019 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !2005)
!2020 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !2005)
!2021 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !2005)
!2022 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !2005)
!2023 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !2005)
!2024 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !2005)
!2025 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !2005)
!2026 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !2005)
!2027 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !2005)
!2028 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !1996)
!2029 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !2005)
!2030 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !1996)
!2031 = !DILocation(line: 0, scope: !1997)
!2032 = !DILocation(line: 0, scope: !547, inlinedAt: !1996)
!2033 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !1996)
!2034 = !DILocation(line: 443, column: 16, scope: !1997)
!2035 = !DILocation(line: 443, column: 9, scope: !1997)
!2036 = !DILocation(line: 252, column: 9, scope: !1261, inlinedAt: !1955)
!2037 = !DILocation(line: 446, column: 18, scope: !2038)
!2038 = distinct !DILexicalBlock(scope: !1998, file: !1, line: 444, column: 12)
!2039 = !DILocation(line: 447, column: 9, scope: !2038)
!2040 = !DILocation(line: 448, column: 33, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !2038, file: !1, line: 448, column: 13)
!2042 = !DILocation(line: 448, column: 18, scope: !2041)
!2043 = !DILocation(line: 440, column: 13, scope: !1938)
!2044 = !DILocation(line: 448, column: 42, scope: !2041)
!2045 = !DILocation(line: 448, column: 13, scope: !2038)
!2046 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !2047)
!2047 = distinct !DILocation(line: 450, column: 18, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2038, file: !1, line: 450, column: 13)
!2049 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !2047)
!2050 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !2047)
!2051 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !2047)
!2052 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !2047)
!2053 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !2054)
!2054 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !2047)
!2055 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !2054)
!2056 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !2054)
!2057 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !2054)
!2058 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !2054)
!2059 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !2054)
!2060 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !2054)
!2061 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !2054)
!2062 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !2054)
!2063 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !2054)
!2064 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !2054)
!2065 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !2054)
!2066 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !2054)
!2067 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !2054)
!2068 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !2054)
!2069 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !2054)
!2070 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !2054)
!2071 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !2054)
!2072 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !2054)
!2073 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !2054)
!2074 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !2054)
!2075 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !2054)
!2076 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !2054)
!2077 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !2054)
!2078 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !2047)
!2079 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !2054)
!2080 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !2047)
!2081 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !2047)
!2082 = !DILocation(line: 450, column: 13, scope: !2038)
!2083 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !2047)
!2084 = !DILocation(line: 450, column: 47, scope: !2048)
!2085 = !DILocation(line: 451, column: 18, scope: !2038)
!2086 = !DILocation(line: 454, column: 1, scope: !1938)
!2087 = distinct !DISubprogram(name: "rdbSaveStringObject", scope: !1, file: !1, line: 457, type: !2088, isLocal: false, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2100)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!104, !220, !2090}
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !2092, line: 622, baseType: !2093)
!2092 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !2092, line: 614, size: 128, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098, !2099}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2093, file: !2092, line: 615, baseType: !33, size: 4, flags: DIFlagBitField, extraData: i64 0)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !2093, file: !2092, line: 616, baseType: !33, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2093, file: !2092, line: 617, baseType: !33, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2093, file: !2092, line: 620, baseType: !20, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2093, file: !2092, line: 621, baseType: !13, size: 64, offset: 64)
!2100 = !{!2101, !2102}
!2101 = !DILocalVariable(name: "rdb", arg: 1, scope: !2087, file: !1, line: 457, type: !220)
!2102 = !DILocalVariable(name: "obj", arg: 2, scope: !2087, file: !1, line: 457, type: !2090)
!2103 = !DILocation(line: 457, column: 34, scope: !2087)
!2104 = !DILocation(line: 457, column: 45, scope: !2087)
!2105 = !DILocation(line: 460, column: 14, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 460, column: 9)
!2107 = !DILocation(line: 460, column: 23, scope: !2106)
!2108 = !DILocation(line: 460, column: 9, scope: !2087)
!2109 = !DILocation(line: 461, column: 61, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !2106, file: !1, line: 460, column: 44)
!2111 = !{!2112, !201, i64 8}
!2112 = !{!"redisObject", !192, i64 0, !192, i64 0, !192, i64 1, !192, i64 4, !201, i64 8}
!2113 = !DILocation(line: 461, column: 16, scope: !2110)
!2114 = !DILocation(line: 461, column: 9, scope: !2110)
!2115 = !DILocation(line: 463, column: 9, scope: !2116)
!2116 = distinct !DILexicalBlock(scope: !2106, file: !1, line: 462, column: 12)
!2117 = !DILocation(line: 464, column: 42, scope: !2116)
!2118 = !DILocalVariable(name: "s", arg: 1, scope: !2119, file: !110, line: 87, type: !2122)
!2119 = distinct !DISubprogram(name: "sdslen", scope: !110, file: !110, line: 87, type: !2120, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2123)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{!229, !2122}
!2122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!2123 = !{!2118, !2124}
!2124 = !DILocalVariable(name: "flags", scope: !2119, file: !110, line: 88, type: !24)
!2125 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !2126)
!2126 = distinct !DILocation(line: 464, column: 46, scope: !2116)
!2127 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !2126)
!2128 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !2126)
!2129 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !2126)
!2130 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !2126)
!2131 = distinct !DILexicalBlock(scope: !2119, file: !110, line: 89, column: 33)
!2132 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !2126)
!2133 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !2126)
!2134 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !2126)
!2135 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !2126)
!2136 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !2126)
!2137 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !2126)
!2138 = !{!2139, !2139, i64 0}
!2139 = !{!"short", !193, i64 0}
!2140 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !2126)
!2141 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !2126)
!2142 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !2126)
!2143 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !2126)
!2144 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !2126)
!2145 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !2126)
!2146 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !2126)
!2147 = !DILocation(line: 0, scope: !2131, inlinedAt: !2126)
!2148 = !DILocation(line: 0, scope: !2116)
!2149 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !2126)
!2150 = !DILocation(line: 464, column: 16, scope: !2116)
!2151 = !DILocation(line: 464, column: 9, scope: !2116)
!2152 = !DILocation(line: 0, scope: !2110)
!2153 = !DILocation(line: 466, column: 1, scope: !2087)
!2154 = distinct !DISubprogram(name: "rdbGenericLoadStringObject", scope: !1, file: !1, line: 481, type: !1673, isLocal: false, isDefinition: true, scopeLine: 481, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2155)
!2155 = !{!2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2167}
!2156 = !DILocalVariable(name: "rdb", arg: 1, scope: !2154, file: !1, line: 481, type: !220)
!2157 = !DILocalVariable(name: "flags", arg: 2, scope: !2154, file: !1, line: 481, type: !20)
!2158 = !DILocalVariable(name: "lenptr", arg: 3, scope: !2154, file: !1, line: 481, type: !1266)
!2159 = !DILocalVariable(name: "encode", scope: !2154, file: !1, line: 482, type: !20)
!2160 = !DILocalVariable(name: "plain", scope: !2154, file: !1, line: 483, type: !20)
!2161 = !DILocalVariable(name: "sds", scope: !2154, file: !1, line: 484, type: !20)
!2162 = !DILocalVariable(name: "isencoded", scope: !2154, file: !1, line: 485, type: !20)
!2163 = !DILocalVariable(name: "len", scope: !2154, file: !1, line: 486, type: !55)
!2164 = !DILocalVariable(name: "buf", scope: !2165, file: !1, line: 504, type: !13)
!2165 = distinct !DILexicalBlock(scope: !2166, file: !1, line: 503, column: 23)
!2166 = distinct !DILexicalBlock(scope: !2154, file: !1, line: 503, column: 9)
!2167 = !DILocalVariable(name: "o", scope: !2168, file: !1, line: 515, type: !2090)
!2168 = distinct !DILexicalBlock(scope: !2166, file: !1, line: 514, column: 12)
!2169 = !DILocation(line: 481, column: 39, scope: !2154)
!2170 = !DILocation(line: 481, column: 48, scope: !2154)
!2171 = !DILocation(line: 481, column: 63, scope: !2154)
!2172 = !DILocation(line: 482, column: 24, scope: !2154)
!2173 = !DILocation(line: 482, column: 9, scope: !2154)
!2174 = !DILocation(line: 483, column: 23, scope: !2154)
!2175 = !DILocation(line: 483, column: 9, scope: !2154)
!2176 = !DILocation(line: 484, column: 9, scope: !2154)
!2177 = !DILocation(line: 485, column: 5, scope: !2154)
!2178 = !DILocation(line: 485, column: 9, scope: !2154)
!2179 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !2180)
!2180 = distinct !DILocation(line: 488, column: 11, scope: !2154)
!2181 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !2180)
!2182 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !2180)
!2183 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !2180)
!2184 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !2180)
!2185 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !2180)
!2186 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !2180)
!2187 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !2180)
!2188 = !DILocation(line: 0, scope: !2154)
!2189 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !2180)
!2190 = !DILocation(line: 486, column: 14, scope: !2154)
!2191 = !DILocation(line: 489, column: 9, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2154, file: !1, line: 489, column: 9)
!2193 = !DILocation(line: 489, column: 9, scope: !2154)
!2194 = !DILocation(line: 490, column: 9, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2192, file: !1, line: 489, column: 20)
!2196 = !DILocation(line: 494, column: 45, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2195, file: !1, line: 490, column: 21)
!2198 = !DILocation(line: 494, column: 20, scope: !2197)
!2199 = !DILocation(line: 494, column: 13, scope: !2197)
!2200 = !DILocation(line: 496, column: 20, scope: !2197)
!2201 = !DILocation(line: 496, column: 13, scope: !2197)
!2202 = !DILocation(line: 498, column: 13, scope: !2197)
!2203 = !DILocation(line: 502, column: 13, scope: !2204)
!2204 = distinct !DILexicalBlock(scope: !2154, file: !1, line: 502, column: 9)
!2205 = !DILocation(line: 502, column: 9, scope: !2154)
!2206 = !DILocation(line: 503, column: 9, scope: !2166)
!2207 = !DILocation(line: 503, column: 15, scope: !2166)
!2208 = !DILocation(line: 504, column: 21, scope: !2165)
!2209 = !DILocation(line: 504, column: 29, scope: !2165)
!2210 = !DILocation(line: 504, column: 54, scope: !2165)
!2211 = !DILocation(line: 504, column: 44, scope: !2165)
!2212 = !DILocation(line: 504, column: 15, scope: !2165)
!2213 = !DILocation(line: 505, column: 13, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2165, file: !1, line: 505, column: 13)
!2215 = !DILocation(line: 505, column: 13, scope: !2165)
!2216 = !DILocation(line: 505, column: 29, scope: !2214)
!2217 = !DILocation(line: 505, column: 21, scope: !2214)
!2218 = !DILocation(line: 506, column: 13, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2165, file: !1, line: 506, column: 13)
!2220 = !DILocation(line: 506, column: 17, scope: !2219)
!2221 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2222)
!2222 = distinct !DILocation(line: 506, column: 20, scope: !2219)
!2223 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2222)
!2224 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2222)
!2225 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2222)
!2226 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2222)
!2227 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2222)
!2228 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2222)
!2229 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2222)
!2230 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2222)
!2231 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2222)
!2232 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2222)
!2233 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2222)
!2234 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2222)
!2235 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2222)
!2236 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2222)
!2237 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2222)
!2238 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2222)
!2239 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2222)
!2240 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2222)
!2241 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2222)
!2242 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2222)
!2243 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2222)
!2244 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !2222)
!2245 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2222)
!2246 = !DILocation(line: 506, column: 13, scope: !2165)
!2247 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2222)
!2248 = !DILocation(line: 507, column: 17, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2219, file: !1, line: 506, column: 47)
!2250 = !DILocation(line: 508, column: 17, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2249, file: !1, line: 507, column: 17)
!2252 = !DILocation(line: 510, column: 17, scope: !2251)
!2253 = !DILocation(line: 0, scope: !2249)
!2254 = !DILocation(line: 0, scope: !2165)
!2255 = !DILocation(line: 515, column: 19, scope: !2168)
!2256 = !DILocation(line: 0, scope: !2168)
!2257 = !DILocation(line: 515, column: 28, scope: !2168)
!2258 = !DILocation(line: 516, column: 28, scope: !2168)
!2259 = !DILocation(line: 515, column: 15, scope: !2168)
!2260 = !DILocation(line: 517, column: 13, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2168, file: !1, line: 517, column: 13)
!2262 = !DILocation(line: 517, column: 17, scope: !2261)
!2263 = !DILocation(line: 517, column: 35, scope: !2261)
!2264 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2265)
!2265 = distinct !DILocation(line: 517, column: 20, scope: !2261)
!2266 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2265)
!2267 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2265)
!2268 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2265)
!2269 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2265)
!2270 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2265)
!2271 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2265)
!2272 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2265)
!2273 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2265)
!2274 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2265)
!2275 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2265)
!2276 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2265)
!2277 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2265)
!2278 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2265)
!2279 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2265)
!2280 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2265)
!2281 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2265)
!2282 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2265)
!2283 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2265)
!2284 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2265)
!2285 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2265)
!2286 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2265)
!2287 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !2265)
!2288 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2265)
!2289 = !DILocation(line: 517, column: 13, scope: !2168)
!2290 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2265)
!2291 = !DILocation(line: 518, column: 13, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2261, file: !1, line: 517, column: 50)
!2293 = !DILocation(line: 519, column: 13, scope: !2292)
!2294 = !DILocation(line: 521, column: 16, scope: !2168)
!2295 = !DILocation(line: 521, column: 9, scope: !2168)
!2296 = !DILocation(line: 0, scope: !2292)
!2297 = !DILocation(line: 0, scope: !2197)
!2298 = !DILocation(line: 523, column: 1, scope: !2154)
!2299 = distinct !DISubprogram(name: "rdbLoadStringObject", scope: !1, file: !1, line: 525, type: !2300, isLocal: false, isDefinition: true, scopeLine: 525, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2302)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!2090, !220}
!2302 = !{!2303}
!2303 = !DILocalVariable(name: "rdb", arg: 1, scope: !2299, file: !1, line: 525, type: !220)
!2304 = !DILocation(line: 525, column: 32, scope: !2299)
!2305 = !DILocation(line: 526, column: 12, scope: !2299)
!2306 = !DILocation(line: 526, column: 5, scope: !2299)
!2307 = distinct !DISubprogram(name: "rdbLoadEncodedStringObject", scope: !1, file: !1, line: 529, type: !2300, isLocal: false, isDefinition: true, scopeLine: 529, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2308)
!2308 = !{!2309}
!2309 = !DILocalVariable(name: "rdb", arg: 1, scope: !2307, file: !1, line: 529, type: !220)
!2310 = !DILocation(line: 529, column: 39, scope: !2307)
!2311 = !DILocation(line: 530, column: 12, scope: !2307)
!2312 = !DILocation(line: 530, column: 5, scope: !2307)
!2313 = distinct !DISubprogram(name: "rdbSaveDoubleValue", scope: !1, file: !1, line: 541, type: !2314, isLocal: false, isDefinition: true, scopeLine: 541, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2316)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!20, !220, !94}
!2316 = !{!2317, !2318, !2319, !2323, !2324}
!2317 = !DILocalVariable(name: "rdb", arg: 1, scope: !2313, file: !1, line: 541, type: !220)
!2318 = !DILocalVariable(name: "val", arg: 2, scope: !2313, file: !1, line: 541, type: !94)
!2319 = !DILocalVariable(name: "buf", scope: !2313, file: !1, line: 542, type: !2320)
!2320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 1024, elements: !2321)
!2321 = !{!2322}
!2322 = !DISubrange(count: 128)
!2323 = !DILocalVariable(name: "len", scope: !2313, file: !1, line: 543, type: !20)
!2324 = !DILocalVariable(name: "__cy", scope: !2325, file: !1, line: 548, type: !20)
!2325 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 548, column: 17)
!2326 = distinct !DILexicalBlock(scope: !2327, file: !1, line: 548, column: 16)
!2327 = distinct !DILexicalBlock(scope: !2313, file: !1, line: 545, column: 9)
!2328 = !DILocation(line: 541, column: 29, scope: !2313)
!2329 = !DILocation(line: 541, column: 41, scope: !2313)
!2330 = !DILocation(line: 542, column: 5, scope: !2313)
!2331 = !DILocation(line: 542, column: 19, scope: !2313)
!2332 = !DILocation(line: 545, column: 9, scope: !2327)
!2333 = !DILocation(line: 545, column: 9, scope: !2313)
!2334 = !DILocation(line: 546, column: 16, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2327, file: !1, line: 545, column: 21)
!2336 = !DILocation(line: 543, column: 9, scope: !2313)
!2337 = !DILocation(line: 548, column: 5, scope: !2335)
!2338 = !DILocation(line: 548, column: 17, scope: !2325)
!2339 = !DILocation(line: 548, column: 16, scope: !2327)
!2340 = !DILocation(line: 550, column: 23, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 548, column: 32)
!2342 = !DILocation(line: 550, column: 18, scope: !2341)
!2343 = !DILocation(line: 550, column: 16, scope: !2341)
!2344 = !DILocation(line: 551, column: 5, scope: !2341)
!2345 = !DILocation(line: 568, column: 32, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 551, column: 12)
!2347 = !DILocation(line: 568, column: 13, scope: !2346)
!2348 = !DILocation(line: 569, column: 18, scope: !2346)
!2349 = !DILocation(line: 569, column: 16, scope: !2346)
!2350 = !DILocation(line: 570, column: 15, scope: !2346)
!2351 = !DILocation(line: 570, column: 21, scope: !2346)
!2352 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !2353)
!2353 = distinct !DILocation(line: 572, column: 12, scope: !2313)
!2354 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !2353)
!2355 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !2353)
!2356 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !2353)
!2357 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !2353)
!2358 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !2359)
!2359 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !2353)
!2360 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !2359)
!2361 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !2359)
!2362 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !2359)
!2363 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !2359)
!2364 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !2359)
!2365 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !2359)
!2366 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !2359)
!2367 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !2359)
!2368 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !2359)
!2369 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !2359)
!2370 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !2359)
!2371 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !2359)
!2372 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !2359)
!2373 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !2359)
!2374 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !2359)
!2375 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !2359)
!2376 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !2359)
!2377 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !2359)
!2378 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !2359)
!2379 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !2359)
!2380 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !2359)
!2381 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !2359)
!2382 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !2359)
!2383 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !2353)
!2384 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !2359)
!2385 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !2353)
!2386 = !DILocation(line: 75, column: 12, scope: !547, inlinedAt: !2353)
!2387 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !2353)
!2388 = !DILocation(line: 0, scope: !547, inlinedAt: !2353)
!2389 = !DILocation(line: 0, scope: !2313)
!2390 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !2353)
!2391 = !DILocation(line: 573, column: 1, scope: !2313)
!2392 = !DILocation(line: 572, column: 5, scope: !2313)
!2393 = distinct !DISubprogram(name: "rdbLoadDoubleValue", scope: !1, file: !1, line: 576, type: !2394, isLocal: false, isDefinition: true, scopeLine: 576, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2397)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{!20, !220, !2396}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !94, size: 64)
!2397 = !{!2398, !2399, !2400, !2404}
!2398 = !DILocalVariable(name: "rdb", arg: 1, scope: !2393, file: !1, line: 576, type: !220)
!2399 = !DILocalVariable(name: "val", arg: 2, scope: !2393, file: !1, line: 576, type: !2396)
!2400 = !DILocalVariable(name: "buf", scope: !2393, file: !1, line: 577, type: !2401)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2048, elements: !2402)
!2402 = !{!2403}
!2403 = !DISubrange(count: 256)
!2404 = !DILocalVariable(name: "len", scope: !2393, file: !1, line: 578, type: !24)
!2405 = !DILocation(line: 576, column: 29, scope: !2393)
!2406 = !DILocation(line: 576, column: 42, scope: !2393)
!2407 = !DILocation(line: 577, column: 5, scope: !2393)
!2408 = !DILocation(line: 577, column: 10, scope: !2393)
!2409 = !DILocation(line: 578, column: 19, scope: !2393)
!2410 = !DILocation(line: 578, column: 5, scope: !2393)
!2411 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2412)
!2412 = distinct !DILocation(line: 580, column: 9, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2393, file: !1, line: 580, column: 9)
!2414 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2412)
!2415 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2412)
!2416 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2412)
!2417 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2412)
!2418 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2412)
!2419 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2412)
!2420 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2412)
!2421 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2412)
!2422 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2412)
!2423 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2412)
!2424 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2412)
!2425 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2412)
!2426 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2412)
!2427 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2412)
!2428 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2412)
!2429 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2412)
!2430 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2412)
!2431 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2412)
!2432 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2412)
!2433 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2412)
!2434 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2412)
!2435 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2412)
!2436 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2412)
!2437 = !DILocation(line: 580, column: 9, scope: !2393)
!2438 = !DILocation(line: 580, column: 35, scope: !2413)
!2439 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !2412)
!2440 = !DILocation(line: 581, column: 12, scope: !2393)
!2441 = !DILocation(line: 581, column: 5, scope: !2393)
!2442 = !DILocation(line: 582, column: 22, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2393, file: !1, line: 581, column: 17)
!2444 = !{!207, !207, i64 0}
!2445 = !DILocation(line: 582, column: 20, scope: !2443)
!2446 = !DILocation(line: 582, column: 32, scope: !2443)
!2447 = !DILocation(line: 583, column: 22, scope: !2443)
!2448 = !DILocation(line: 583, column: 20, scope: !2443)
!2449 = !DILocation(line: 583, column: 32, scope: !2443)
!2450 = !DILocation(line: 584, column: 22, scope: !2443)
!2451 = !DILocation(line: 584, column: 20, scope: !2443)
!2452 = !DILocation(line: 584, column: 29, scope: !2443)
!2453 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2454)
!2454 = distinct !DILocation(line: 586, column: 13, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2443, file: !1, line: 586, column: 13)
!2456 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2454)
!2457 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2454)
!2458 = !DILocation(line: 586, column: 29, scope: !2455)
!2459 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2454)
!2460 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2454)
!2461 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2454)
!2462 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2454)
!2463 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2454)
!2464 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2454)
!2465 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2454)
!2466 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2454)
!2467 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2454)
!2468 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2454)
!2469 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2454)
!2470 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2454)
!2471 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2454)
!2472 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2454)
!2473 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2454)
!2474 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2454)
!2475 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2454)
!2476 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2454)
!2477 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2454)
!2478 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2454)
!2479 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2454)
!2480 = !DILocation(line: 586, column: 13, scope: !2443)
!2481 = !DILocation(line: 586, column: 40, scope: !2455)
!2482 = !DILocation(line: 587, column: 13, scope: !2443)
!2483 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !2454)
!2484 = !DILocation(line: 587, column: 9, scope: !2443)
!2485 = !DILocation(line: 587, column: 18, scope: !2443)
!2486 = !DILocation(line: 588, column: 9, scope: !2443)
!2487 = !DILocation(line: 589, column: 9, scope: !2443)
!2488 = !DILocation(line: 0, scope: !2443)
!2489 = !DILocation(line: 0, scope: !2413)
!2490 = !DILocation(line: 591, column: 1, scope: !2393)
!2491 = distinct !DISubprogram(name: "rdbSaveBinaryDoubleValue", scope: !1, file: !1, line: 598, type: !2314, isLocal: false, isDefinition: true, scopeLine: 598, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2492)
!2492 = !{!2493, !2494}
!2493 = !DILocalVariable(name: "rdb", arg: 1, scope: !2491, file: !1, line: 598, type: !220)
!2494 = !DILocalVariable(name: "val", arg: 2, scope: !2491, file: !1, line: 598, type: !94)
!2495 = !DILocation(line: 598, column: 35, scope: !2491)
!2496 = !DILocation(line: 598, column: 47, scope: !2491)
!2497 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !2498)
!2498 = distinct !DILocation(line: 600, column: 12, scope: !2491)
!2499 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !2498)
!2500 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !2498)
!2501 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !2498)
!2502 = !DILocation(line: 600, column: 28, scope: !2491)
!2503 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !2498)
!2504 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !2505)
!2505 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !2498)
!2506 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !2505)
!2507 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !2505)
!2508 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !2505)
!2509 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !2505)
!2510 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !2505)
!2511 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !2505)
!2512 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !2505)
!2513 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !2505)
!2514 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !2505)
!2515 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !2505)
!2516 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !2505)
!2517 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !2505)
!2518 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !2505)
!2519 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !2505)
!2520 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !2505)
!2521 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !2505)
!2522 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !2505)
!2523 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !2505)
!2524 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !2505)
!2525 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !2505)
!2526 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !2505)
!2527 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !2505)
!2528 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !2498)
!2529 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !2505)
!2530 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !2498)
!2531 = !DILocation(line: 0, scope: !2491)
!2532 = !DILocation(line: 0, scope: !547, inlinedAt: !2498)
!2533 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !2498)
!2534 = !DILocation(line: 600, column: 5, scope: !2491)
!2535 = distinct !DISubprogram(name: "rdbLoadBinaryDoubleValue", scope: !1, file: !1, line: 605, type: !2394, isLocal: false, isDefinition: true, scopeLine: 605, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2536)
!2536 = !{!2537, !2538}
!2537 = !DILocalVariable(name: "rdb", arg: 1, scope: !2535, file: !1, line: 605, type: !220)
!2538 = !DILocalVariable(name: "val", arg: 2, scope: !2535, file: !1, line: 605, type: !2396)
!2539 = !DILocation(line: 605, column: 35, scope: !2535)
!2540 = !DILocation(line: 605, column: 48, scope: !2535)
!2541 = !DILocation(line: 606, column: 21, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2535, file: !1, line: 606, column: 9)
!2543 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2544)
!2544 = distinct !DILocation(line: 606, column: 9, scope: !2542)
!2545 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2544)
!2546 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2544)
!2547 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2544)
!2548 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2544)
!2549 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2544)
!2550 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2544)
!2551 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2544)
!2552 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2544)
!2553 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2544)
!2554 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2544)
!2555 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2544)
!2556 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2544)
!2557 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2544)
!2558 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2544)
!2559 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2544)
!2560 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2544)
!2561 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2544)
!2562 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2544)
!2563 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2544)
!2564 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2544)
!2565 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2544)
!2566 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2544)
!2567 = !DILocation(line: 606, column: 45, scope: !2542)
!2568 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2544)
!2569 = !DILocation(line: 606, column: 9, scope: !2535)
!2570 = !DILocation(line: 0, scope: !2535)
!2571 = !DILocation(line: 609, column: 1, scope: !2535)
!2572 = distinct !DISubprogram(name: "rdbSaveBinaryFloatValue", scope: !1, file: !1, line: 612, type: !2573, isLocal: false, isDefinition: true, scopeLine: 612, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2576)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!20, !220, !2575}
!2575 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2576 = !{!2577, !2578}
!2577 = !DILocalVariable(name: "rdb", arg: 1, scope: !2572, file: !1, line: 612, type: !220)
!2578 = !DILocalVariable(name: "val", arg: 2, scope: !2572, file: !1, line: 612, type: !2575)
!2579 = !DILocation(line: 612, column: 34, scope: !2572)
!2580 = !DILocation(line: 612, column: 45, scope: !2572)
!2581 = !{!2582, !2582, i64 0}
!2582 = !{!"float", !193, i64 0}
!2583 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !2584)
!2584 = distinct !DILocation(line: 614, column: 12, scope: !2572)
!2585 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !2584)
!2586 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !2584)
!2587 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !2584)
!2588 = !DILocation(line: 614, column: 28, scope: !2572)
!2589 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !2584)
!2590 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !2591)
!2591 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !2584)
!2592 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !2591)
!2593 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !2591)
!2594 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !2591)
!2595 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !2591)
!2596 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !2591)
!2597 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !2591)
!2598 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !2591)
!2599 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !2591)
!2600 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !2591)
!2601 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !2591)
!2602 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !2591)
!2603 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !2591)
!2604 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !2591)
!2605 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !2591)
!2606 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !2591)
!2607 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !2591)
!2608 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !2591)
!2609 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !2591)
!2610 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !2591)
!2611 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !2591)
!2612 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !2591)
!2613 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !2591)
!2614 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !2584)
!2615 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !2591)
!2616 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !2584)
!2617 = !DILocation(line: 0, scope: !2572)
!2618 = !DILocation(line: 0, scope: !547, inlinedAt: !2584)
!2619 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !2584)
!2620 = !DILocation(line: 614, column: 5, scope: !2572)
!2621 = distinct !DISubprogram(name: "rdbLoadBinaryFloatValue", scope: !1, file: !1, line: 618, type: !2622, isLocal: false, isDefinition: true, scopeLine: 618, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2625)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!20, !220, !2624}
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2625 = !{!2626, !2627}
!2626 = !DILocalVariable(name: "rdb", arg: 1, scope: !2621, file: !1, line: 618, type: !220)
!2627 = !DILocalVariable(name: "val", arg: 2, scope: !2621, file: !1, line: 618, type: !2624)
!2628 = !DILocation(line: 618, column: 34, scope: !2621)
!2629 = !DILocation(line: 618, column: 46, scope: !2621)
!2630 = !DILocation(line: 619, column: 21, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2621, file: !1, line: 619, column: 9)
!2632 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2633)
!2633 = distinct !DILocation(line: 619, column: 9, scope: !2631)
!2634 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2633)
!2635 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2633)
!2636 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2633)
!2637 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2633)
!2638 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2633)
!2639 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2633)
!2640 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2633)
!2641 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2633)
!2642 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2633)
!2643 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2633)
!2644 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2633)
!2645 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2633)
!2646 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2633)
!2647 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2633)
!2648 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2633)
!2649 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2633)
!2650 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2633)
!2651 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2633)
!2652 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2633)
!2653 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2633)
!2654 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2633)
!2655 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2633)
!2656 = !DILocation(line: 619, column: 45, scope: !2631)
!2657 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2633)
!2658 = !DILocation(line: 619, column: 9, scope: !2621)
!2659 = !DILocation(line: 0, scope: !2621)
!2660 = !DILocation(line: 622, column: 1, scope: !2621)
!2661 = distinct !DISubprogram(name: "rdbSaveObjectType", scope: !1, file: !1, line: 625, type: !2662, isLocal: false, isDefinition: true, scopeLine: 625, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2664)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!20, !220, !2090}
!2664 = !{!2665, !2666}
!2665 = !DILocalVariable(name: "rdb", arg: 1, scope: !2661, file: !1, line: 625, type: !220)
!2666 = !DILocalVariable(name: "o", arg: 2, scope: !2661, file: !1, line: 625, type: !2090)
!2667 = !DILocation(line: 625, column: 28, scope: !2661)
!2668 = !DILocation(line: 625, column: 39, scope: !2661)
!2669 = !DILocation(line: 626, column: 16, scope: !2661)
!2670 = !DILocation(line: 626, column: 5, scope: !2661)
!2671 = !DILocation(line: 630, column: 16, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 630, column: 13)
!2673 = distinct !DILexicalBlock(scope: !2661, file: !1, line: 626, column: 22)
!2674 = !DILocation(line: 630, column: 25, scope: !2672)
!2675 = !DILocation(line: 630, column: 13, scope: !2673)
!2676 = !DILocation(line: 633, column: 13, scope: !2672)
!2677 = !DILocation(line: 635, column: 16, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 635, column: 13)
!2679 = !DILocation(line: 635, column: 25, scope: !2678)
!2680 = !DILocation(line: 635, column: 13, scope: !2673)
!2681 = !DILocation(line: 637, column: 30, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 637, column: 18)
!2683 = !DILocation(line: 637, column: 18, scope: !2678)
!2684 = !DILocation(line: 640, column: 13, scope: !2682)
!2685 = !DILocation(line: 642, column: 16, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 642, column: 13)
!2687 = !DILocation(line: 642, column: 25, scope: !2686)
!2688 = !DILocation(line: 642, column: 13, scope: !2673)
!2689 = !DILocation(line: 644, column: 30, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !1, line: 644, column: 18)
!2691 = !DILocation(line: 644, column: 18, scope: !2686)
!2692 = !DILocation(line: 647, column: 13, scope: !2690)
!2693 = !DILocation(line: 649, column: 16, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 649, column: 13)
!2695 = !DILocation(line: 649, column: 25, scope: !2694)
!2696 = !DILocation(line: 649, column: 13, scope: !2673)
!2697 = !DILocation(line: 651, column: 30, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2694, file: !1, line: 651, column: 18)
!2699 = !DILocation(line: 651, column: 18, scope: !2694)
!2700 = !DILocation(line: 654, column: 13, scope: !2698)
!2701 = !DILocation(line: 656, column: 9, scope: !2673)
!2702 = !DILocation(line: 658, column: 9, scope: !2673)
!2703 = !DILocation(line: 660, column: 9, scope: !2673)
!2704 = !DILocation(line: 0, scope: !2673)
!2705 = !DILocation(line: 663, column: 1, scope: !2661)
!2706 = distinct !DISubprogram(name: "rdbLoadObjectType", scope: !1, file: !1, line: 667, type: !607, isLocal: false, isDefinition: true, scopeLine: 667, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2707)
!2707 = !{!2708, !2709}
!2708 = !DILocalVariable(name: "rdb", arg: 1, scope: !2706, file: !1, line: 667, type: !220)
!2709 = !DILocalVariable(name: "type", scope: !2706, file: !1, line: 668, type: !20)
!2710 = !DILocation(line: 667, column: 28, scope: !2706)
!2711 = !DILocation(line: 97, column: 22, scope: !606, inlinedAt: !2712)
!2712 = distinct !DILocation(line: 669, column: 17, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2706, file: !1, line: 669, column: 9)
!2714 = !DILocation(line: 98, column: 19, scope: !606, inlinedAt: !2712)
!2715 = !DILocation(line: 98, column: 5, scope: !606, inlinedAt: !2712)
!2716 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !2717)
!2717 = distinct !DILocation(line: 99, column: 9, scope: !617, inlinedAt: !2712)
!2718 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !2717)
!2719 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !2717)
!2720 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !2717)
!2721 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !2717)
!2722 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !2717)
!2723 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !2717)
!2724 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !2717)
!2725 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !2717)
!2726 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !2717)
!2727 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !2717)
!2728 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !2717)
!2729 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !2717)
!2730 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !2717)
!2731 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !2717)
!2732 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !2717)
!2733 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !2717)
!2734 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !2717)
!2735 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !2717)
!2736 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !2717)
!2737 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !2717)
!2738 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !2717)
!2739 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !2717)
!2740 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !2717)
!2741 = !DILocation(line: 99, column: 9, scope: !606, inlinedAt: !2712)
!2742 = !DILocation(line: 99, column: 36, scope: !617, inlinedAt: !2712)
!2743 = !DILocation(line: 101, column: 1, scope: !606, inlinedAt: !2712)
!2744 = !DILocation(line: 668, column: 9, scope: !2706)
!2745 = !DILocation(line: 669, column: 9, scope: !2706)
!2746 = !DILocation(line: 669, column: 42, scope: !2713)
!2747 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !2717)
!2748 = !DILocation(line: 100, column: 12, scope: !606, inlinedAt: !2712)
!2749 = !DILocation(line: 100, column: 5, scope: !606, inlinedAt: !2712)
!2750 = !DILocation(line: 670, column: 10, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2706, file: !1, line: 670, column: 9)
!2752 = !DILocation(line: 671, column: 5, scope: !2706)
!2753 = !DILocation(line: 0, scope: !2751)
!2754 = !DILocation(line: 0, scope: !2713)
!2755 = !DILocation(line: 672, column: 1, scope: !2706)
!2756 = distinct !DISubprogram(name: "rdbSaveStreamPEL", scope: !1, file: !1, line: 681, type: !2757, isLocal: false, isDefinition: true, scopeLine: 681, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2777)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!104, !220, !2759, !20}
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "rax", file: !2761, line: 137, baseType: !2762)
!2761 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rax.h", directory: "/root/.unikraft/apps/redis/build")
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rax", file: !2761, line: 133, size: 192, elements: !2763)
!2763 = !{!2764, !2775, !2776}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2762, file: !2761, line: 134, baseType: !2765, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNode", file: !2761, line: 131, baseType: !2767)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxNode", file: !2761, line: 98, size: 32, elements: !2768)
!2768 = !{!2769, !2770, !2771, !2772, !2773}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "iskey", scope: !2767, file: !2761, line: 99, baseType: !31, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "isnull", scope: !2767, file: !2761, line: 100, baseType: !31, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "iscompr", scope: !2767, file: !2761, line: 101, baseType: !31, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2767, file: !2761, line: 102, baseType: !31, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2767, file: !2761, line: 130, baseType: !2774, offset: 32)
!2774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, elements: !39)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "numele", scope: !2762, file: !2761, line: 135, baseType: !55, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "numnodes", scope: !2762, file: !2761, line: 136, baseType: !55, size: 64, offset: 128)
!2777 = !{!2778, !2779, !2780, !2781, !2782, !2783, !2811}
!2778 = !DILocalVariable(name: "rdb", arg: 1, scope: !2756, file: !1, line: 681, type: !220)
!2779 = !DILocalVariable(name: "pel", arg: 2, scope: !2756, file: !1, line: 681, type: !2759)
!2780 = !DILocalVariable(name: "nacks", arg: 3, scope: !2756, file: !1, line: 681, type: !20)
!2781 = !DILocalVariable(name: "n", scope: !2756, file: !1, line: 682, type: !104)
!2782 = !DILocalVariable(name: "nwritten", scope: !2756, file: !1, line: 682, type: !104)
!2783 = !DILocalVariable(name: "ri", scope: !2756, file: !1, line: 689, type: !2784)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxIterator", file: !2761, line: 186, baseType: !2785)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxIterator", file: !2761, line: 175, size: 3840, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2805}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2785, file: !2761, line: 176, baseType: !20, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2785, file: !2761, line: 177, baseType: !2759, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2785, file: !2761, line: 178, baseType: !23, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2785, file: !2761, line: 179, baseType: !13, size: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2785, file: !2761, line: 180, baseType: !550, size: 64, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "key_max", scope: !2785, file: !2761, line: 181, baseType: !550, size: 64, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "key_static_string", scope: !2785, file: !2761, line: 182, baseType: !2320, size: 1024, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2785, file: !2761, line: 183, baseType: !2765, size: 64, offset: 1408)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2785, file: !2761, line: 184, baseType: !2796, size: 2304, offset: 1472)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxStack", file: !2761, line: 150, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raxStack", file: !2761, line: 143, size: 2304, elements: !2798)
!2798 = !{!2799, !2801, !2802, !2803, !2804}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2797, file: !2761, line: 144, baseType: !2800, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2797, file: !2761, line: 145, baseType: !550, size: 64, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "maxitems", scope: !2797, file: !2761, line: 145, baseType: !550, size: 64, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "static_items", scope: !2797, file: !2761, line: 148, baseType: !421, size: 2048, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "oom", scope: !2797, file: !2761, line: 149, baseType: !20, size: 32, offset: 2240)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "node_cb", scope: !2785, file: !2761, line: 185, baseType: !2806, size: 64, offset: 3776)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "raxNodeCallback", file: !2761, line: 165, baseType: !2807)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!20, !2810}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2811 = !DILocalVariable(name: "nack", scope: !2812, file: !1, line: 699, type: !2815)
!2812 = distinct !DILexicalBlock(scope: !2813, file: !1, line: 698, column: 20)
!2813 = distinct !DILexicalBlock(scope: !2814, file: !1, line: 698, column: 13)
!2814 = distinct !DILexicalBlock(scope: !2756, file: !1, line: 692, column: 25)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamNACK", file: !2817, line: 87, baseType: !2818)
!2817 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/stream.h", directory: "/root/.unikraft/apps/redis/build")
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamNACK", file: !2817, line: 82, size: 192, elements: !2819)
!2819 = !{!2820, !2822, !2823}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_time", scope: !2818, file: !2817, line: 83, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !2092, line: 52, baseType: !12)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_count", scope: !2818, file: !2817, line: 84, baseType: !55, size: 64, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !2818, file: !2817, line: 85, baseType: !2824, size: 64, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamConsumer", file: !2817, line: 79, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamConsumer", file: !2817, line: 67, size: 192, elements: !2827)
!2827 = !{!2828, !2829, !2830}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "seen_time", scope: !2826, file: !2817, line: 68, baseType: !2821, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2826, file: !2817, line: 69, baseType: !261, size: 64, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !2826, file: !2817, line: 72, baseType: !2759, size: 64, offset: 128)
!2831 = !DILocation(line: 681, column: 31, scope: !2756)
!2832 = !DILocation(line: 681, column: 41, scope: !2756)
!2833 = !DILocation(line: 681, column: 50, scope: !2756)
!2834 = !DILocation(line: 682, column: 16, scope: !2756)
!2835 = !DILocation(line: 685, column: 29, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2756, file: !1, line: 685, column: 9)
!2837 = !DILocation(line: 685, column: 14, scope: !2836)
!2838 = !DILocation(line: 685, column: 44, scope: !2836)
!2839 = !DILocation(line: 685, column: 9, scope: !2756)
!2840 = !DILocation(line: 682, column: 13, scope: !2756)
!2841 = !DILocation(line: 689, column: 5, scope: !2756)
!2842 = !DILocation(line: 689, column: 17, scope: !2756)
!2843 = !DILocation(line: 690, column: 5, scope: !2756)
!2844 = !DILocation(line: 691, column: 5, scope: !2756)
!2845 = !DILocation(line: 692, column: 5, scope: !2756)
!2846 = !DILocation(line: 692, column: 11, scope: !2756)
!2847 = !DILocation(line: 695, column: 37, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2814, file: !1, line: 695, column: 13)
!2849 = !{!2850, !201, i64 16}
!2850 = !{!"raxIterator", !192, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !205, i64 32, !205, i64 40, !193, i64 48, !201, i64 176, !2851, i64 184, !201, i64 472}
!2851 = !{!"raxStack", !201, i64 0, !205, i64 8, !205, i64 16, !193, i64 24, !192, i64 280}
!2852 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !2853)
!2853 = distinct !DILocation(line: 695, column: 18, scope: !2848)
!2854 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !2853)
!2855 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !2853)
!2856 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !2853)
!2857 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !2858)
!2858 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !2853)
!2859 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !2858)
!2860 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !2858)
!2861 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !2858)
!2862 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !2858)
!2863 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !2858)
!2864 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !2858)
!2865 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !2858)
!2866 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !2858)
!2867 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !2858)
!2868 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !2858)
!2869 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !2858)
!2870 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !2858)
!2871 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !2858)
!2872 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !2858)
!2873 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !2858)
!2874 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !2858)
!2875 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !2858)
!2876 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !2858)
!2877 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !2858)
!2878 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !2858)
!2879 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !2858)
!2880 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !2858)
!2881 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !2858)
!2882 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !2853)
!2883 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !2858)
!2884 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !2853)
!2885 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !2853)
!2886 = !DILocation(line: 695, column: 13, scope: !2814)
!2887 = !DILocation(line: 695, column: 67, scope: !2848)
!2888 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !2853)
!2889 = !DILocation(line: 696, column: 18, scope: !2814)
!2890 = !DILocation(line: 698, column: 13, scope: !2814)
!2891 = !DILocation(line: 699, column: 35, scope: !2812)
!2892 = !{!2850, !201, i64 24}
!2893 = !DILocation(line: 699, column: 25, scope: !2812)
!2894 = !DILocation(line: 700, column: 55, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2812, file: !1, line: 700, column: 17)
!2896 = !{!2897, !206, i64 0}
!2897 = !{!"streamNACK", !206, i64 0, !205, i64 8, !201, i64 16}
!2898 = !DILocation(line: 700, column: 22, scope: !2895)
!2899 = !DILocation(line: 700, column: 71, scope: !2895)
!2900 = !DILocation(line: 700, column: 17, scope: !2812)
!2901 = !DILocation(line: 703, column: 43, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2812, file: !1, line: 703, column: 17)
!2903 = !{!2897, !205, i64 8}
!2904 = !DILocation(line: 703, column: 22, scope: !2902)
!2905 = !DILocation(line: 703, column: 60, scope: !2902)
!2906 = !DILocation(line: 703, column: 17, scope: !2812)
!2907 = !DILocation(line: 0, scope: !2902)
!2908 = !DILocation(line: 702, column: 22, scope: !2812)
!2909 = !DILocation(line: 704, column: 22, scope: !2812)
!2910 = !DILocation(line: 708, column: 9, scope: !2813)
!2911 = distinct !{!2911, !2845, !2912}
!2912 = !DILocation(line: 709, column: 5, scope: !2756)
!2913 = !DILocation(line: 0, scope: !2814)
!2914 = !DILocation(line: 710, column: 5, scope: !2756)
!2915 = !DILocation(line: 711, column: 5, scope: !2756)
!2916 = !DILocation(line: 0, scope: !2756)
!2917 = !DILocation(line: 712, column: 1, scope: !2756)
!2918 = !DILocation(line: 0, scope: !2848)
!2919 = distinct !DISubprogram(name: "rdbSaveStreamConsumers", scope: !1, file: !1, line: 717, type: !2920, isLocal: false, isDefinition: true, scopeLine: 717, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2934)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!550, !220, !2922}
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamCG", file: !2817, line: 64, baseType: !2924)
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamCG", file: !2817, line: 51, size: 256, elements: !2925)
!2925 = !{!2926, !2932, !2933}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "last_id", scope: !2924, file: !2817, line: 52, baseType: !2927, size: 128)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamID", file: !2817, line: 14, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "streamID", file: !2817, line: 11, size: 128, elements: !2929)
!2929 = !{!2930, !2931}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ms", scope: !2928, file: !2817, line: 12, baseType: !55, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2928, file: !2817, line: 13, baseType: !55, size: 64, offset: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !2924, file: !2817, line: 55, baseType: !2759, size: 64, offset: 128)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2924, file: !2817, line: 61, baseType: !2759, size: 64, offset: 192)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940}
!2935 = !DILocalVariable(name: "rdb", arg: 1, scope: !2919, file: !1, line: 717, type: !220)
!2936 = !DILocalVariable(name: "cg", arg: 2, scope: !2919, file: !1, line: 717, type: !2922)
!2937 = !DILocalVariable(name: "n", scope: !2919, file: !1, line: 718, type: !104)
!2938 = !DILocalVariable(name: "nwritten", scope: !2919, file: !1, line: 718, type: !104)
!2939 = !DILocalVariable(name: "ri", scope: !2919, file: !1, line: 725, type: !2784)
!2940 = !DILocalVariable(name: "consumer", scope: !2941, file: !1, line: 729, type: !2824)
!2941 = distinct !DILexicalBlock(scope: !2919, file: !1, line: 728, column: 25)
!2942 = !DILocation(line: 717, column: 36, scope: !2919)
!2943 = !DILocation(line: 717, column: 51, scope: !2919)
!2944 = !DILocation(line: 718, column: 16, scope: !2919)
!2945 = !DILocation(line: 721, column: 41, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2919, file: !1, line: 721, column: 9)
!2947 = !{!2948, !201, i64 24}
!2948 = !{!"streamCG", !2949, i64 0, !201, i64 16, !201, i64 24}
!2949 = !{!"streamID", !205, i64 0, !205, i64 8}
!2950 = !DILocation(line: 721, column: 29, scope: !2946)
!2951 = !DILocation(line: 721, column: 14, scope: !2946)
!2952 = !DILocation(line: 721, column: 54, scope: !2946)
!2953 = !DILocation(line: 721, column: 9, scope: !2919)
!2954 = !DILocation(line: 718, column: 13, scope: !2919)
!2955 = !DILocation(line: 725, column: 5, scope: !2919)
!2956 = !DILocation(line: 726, column: 22, scope: !2919)
!2957 = !DILocation(line: 725, column: 17, scope: !2919)
!2958 = !DILocation(line: 726, column: 5, scope: !2919)
!2959 = !DILocation(line: 727, column: 5, scope: !2919)
!2960 = !DILocation(line: 728, column: 5, scope: !2919)
!2961 = !DILocation(line: 728, column: 11, scope: !2919)
!2962 = !DILocation(line: 729, column: 39, scope: !2941)
!2963 = !DILocation(line: 729, column: 25, scope: !2941)
!2964 = !DILocation(line: 732, column: 42, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2941, file: !1, line: 732, column: 13)
!2966 = !DILocation(line: 732, column: 49, scope: !2965)
!2967 = !{!2850, !205, i64 32}
!2968 = !DILocation(line: 732, column: 18, scope: !2965)
!2969 = !DILocation(line: 732, column: 59, scope: !2965)
!2970 = !DILocation(line: 732, column: 13, scope: !2941)
!2971 = !DILocation(line: 736, column: 55, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2941, file: !1, line: 736, column: 13)
!2973 = !{!2974, !206, i64 0}
!2974 = !{!"streamConsumer", !206, i64 0, !201, i64 8, !201, i64 16}
!2975 = !DILocation(line: 736, column: 18, scope: !2972)
!2976 = !DILocation(line: 736, column: 67, scope: !2972)
!2977 = !DILocation(line: 736, column: 13, scope: !2941)
!2978 = !DILocation(line: 744, column: 49, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2941, file: !1, line: 744, column: 13)
!2980 = !{!2974, !201, i64 16}
!2981 = !DILocation(line: 744, column: 18, scope: !2979)
!2982 = !DILocation(line: 744, column: 57, scope: !2979)
!2983 = !DILocation(line: 744, column: 13, scope: !2941)
!2984 = !DILocation(line: 0, scope: !2979)
!2985 = !DILocation(line: 733, column: 18, scope: !2941)
!2986 = !DILocation(line: 738, column: 18, scope: !2941)
!2987 = !DILocation(line: 746, column: 18, scope: !2941)
!2988 = !DILocation(line: 747, column: 5, scope: !2919)
!2989 = !DILocation(line: 722, column: 14, scope: !2919)
!2990 = !DILocation(line: 748, column: 5, scope: !2919)
!2991 = !DILocation(line: 749, column: 5, scope: !2919)
!2992 = !DILocation(line: 0, scope: !2919)
!2993 = !DILocation(line: 750, column: 1, scope: !2919)
!2994 = !DILocation(line: 0, scope: !2965)
!2995 = distinct !DISubprogram(name: "rdbSaveObject", scope: !1, file: !1, line: 754, type: !2996, isLocal: false, isDefinition: true, scopeLine: 754, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2998)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!104, !220, !2090, !2090}
!2998 = !{!2999, !3000, !3001, !3002, !3003, !3004, !3036, !3037, !3041, !3042, !3047, !3059, !3060, !3062, !3065, !3070, !3099, !3100, !3103, !3108, !3111, !3112, !3114, !3115, !3126, !3127, !3128, !3130, !3131, !3132, !3136, !3214, !3221, !3222}
!2999 = !DILocalVariable(name: "rdb", arg: 1, scope: !2995, file: !1, line: 754, type: !220)
!3000 = !DILocalVariable(name: "o", arg: 2, scope: !2995, file: !1, line: 754, type: !2090)
!3001 = !DILocalVariable(name: "key", arg: 3, scope: !2995, file: !1, line: 754, type: !2090)
!3002 = !DILocalVariable(name: "n", scope: !2995, file: !1, line: 755, type: !104)
!3003 = !DILocalVariable(name: "nwritten", scope: !2995, file: !1, line: 755, type: !104)
!3004 = !DILocalVariable(name: "ql", scope: !3005, file: !1, line: 764, type: !3010)
!3005 = distinct !DILexicalBlock(scope: !3006, file: !1, line: 763, column: 52)
!3006 = distinct !DILexicalBlock(scope: !3007, file: !1, line: 763, column: 13)
!3007 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 761, column: 37)
!3008 = distinct !DILexicalBlock(scope: !3009, file: !1, line: 761, column: 16)
!3009 = distinct !DILexicalBlock(scope: !2995, file: !1, line: 757, column: 9)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "quicklist", file: !3012, line: 80, baseType: !3013)
!3012 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/quicklist.h", directory: "/root/.unikraft/apps/redis/build")
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quicklist", file: !3012, line: 73, size: 320, elements: !3014)
!3014 = !{!3015, !3031, !3032, !3033, !3034, !3035}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3013, file: !3012, line: 74, baseType: !3016, size: 64)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DIDerivedType(tag: DW_TAG_typedef, name: "quicklistNode", file: !3012, line: 55, baseType: !3018)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quicklistNode", file: !3012, line: 44, size: 256, elements: !3019)
!3019 = !{!3020, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3018, file: !3012, line: 45, baseType: !3021, size: 64)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3018, file: !3012, line: 46, baseType: !3021, size: 64, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "zl", scope: !3018, file: !3012, line: 47, baseType: !23, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !3018, file: !3012, line: 48, baseType: !33, size: 32, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3018, file: !3012, line: 49, baseType: !33, size: 16, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !3018, file: !3012, line: 50, baseType: !33, size: 2, offset: 240, flags: DIFlagBitField, extraData: i64 224)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !3018, file: !3012, line: 51, baseType: !33, size: 2, offset: 242, flags: DIFlagBitField, extraData: i64 224)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "recompress", scope: !3018, file: !3012, line: 52, baseType: !33, size: 1, offset: 244, flags: DIFlagBitField, extraData: i64 224)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "attempted_compress", scope: !3018, file: !3012, line: 53, baseType: !33, size: 1, offset: 245, flags: DIFlagBitField, extraData: i64 224)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !3018, file: !3012, line: 54, baseType: !33, size: 10, offset: 246, flags: DIFlagBitField, extraData: i64 224)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3013, file: !3012, line: 75, baseType: !3016, size: 64, offset: 64)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3013, file: !3012, line: 76, baseType: !57, size: 64, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3013, file: !3012, line: 77, baseType: !57, size: 64, offset: 192)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !3013, file: !3012, line: 78, baseType: !20, size: 16, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !3013, file: !3012, line: 79, baseType: !33, size: 16, offset: 272, flags: DIFlagBitField, extraData: i64 256)
!3036 = !DILocalVariable(name: "node", scope: !3005, file: !1, line: 765, type: !3016)
!3037 = !DILocalVariable(name: "data", scope: !3038, file: !1, line: 772, type: !13)
!3038 = distinct !DILexicalBlock(scope: !3039, file: !1, line: 771, column: 54)
!3039 = distinct !DILexicalBlock(scope: !3040, file: !1, line: 771, column: 21)
!3040 = distinct !DILexicalBlock(scope: !3005, file: !1, line: 770, column: 25)
!3041 = !DILocalVariable(name: "compress_len", scope: !3038, file: !1, line: 773, type: !550)
!3042 = !DILocalVariable(name: "set", scope: !3043, file: !1, line: 788, type: !41)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !1, line: 787, column: 45)
!3044 = distinct !DILexicalBlock(scope: !3045, file: !1, line: 787, column: 13)
!3045 = distinct !DILexicalBlock(scope: !3046, file: !1, line: 785, column: 36)
!3046 = distinct !DILexicalBlock(scope: !3008, file: !1, line: 785, column: 16)
!3047 = !DILocalVariable(name: "di", scope: !3043, file: !1, line: 789, type: !3048)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !43, line: 95, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !43, line: 88, size: 384, elements: !3051)
!3051 = !{!3052, !3053, !3054, !3055, !3056, !3057, !3058}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3050, file: !43, line: 89, baseType: !41, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3050, file: !43, line: 90, baseType: !7, size: 64, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !3050, file: !43, line: 91, baseType: !20, size: 32, offset: 128)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !3050, file: !43, line: 91, baseType: !20, size: 32, offset: 160)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3050, file: !43, line: 92, baseType: !82, size: 64, offset: 192)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !3050, file: !43, line: 92, baseType: !82, size: 64, offset: 256)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !3050, file: !43, line: 94, baseType: !12, size: 64, offset: 320)
!3059 = !DILocalVariable(name: "de", scope: !3043, file: !1, line: 790, type: !82)
!3060 = !DILocalVariable(name: "ele", scope: !3061, file: !1, line: 799, type: !261)
!3061 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 798, column: 48)
!3062 = !DILocalVariable(name: "l", scope: !3063, file: !1, line: 810, type: !550)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !1, line: 809, column: 56)
!3064 = distinct !DILexicalBlock(scope: !3044, file: !1, line: 809, column: 20)
!3065 = !DILocalVariable(name: "l", scope: !3066, file: !1, line: 820, type: !550)
!3066 = distinct !DILexicalBlock(scope: !3067, file: !1, line: 819, column: 50)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !1, line: 819, column: 13)
!3068 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 817, column: 37)
!3069 = distinct !DILexicalBlock(scope: !3046, file: !1, line: 817, column: 16)
!3070 = !DILocalVariable(name: "zs", scope: !3071, file: !1, line: 825, type: !3073)
!3071 = distinct !DILexicalBlock(scope: !3072, file: !1, line: 824, column: 58)
!3072 = distinct !DILexicalBlock(scope: !3067, file: !1, line: 824, column: 20)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_typedef, name: "zset", file: !2092, line: 829, baseType: !3075)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zset", file: !2092, line: 826, size: 128, elements: !3076)
!3076 = !{!3077, !3078}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !3075, file: !2092, line: 827, baseType: !41, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "zsl", scope: !3075, file: !2092, line: 828, baseType: !3079, size: 64, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplist", file: !2092, line: 824, baseType: !3081)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplist", file: !2092, line: 820, size: 256, elements: !3082)
!3082 = !{!3083, !3096, !3097, !3098}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3081, file: !2092, line: 821, baseType: !3084, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistNode", file: !2092, line: 810, size: 192, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ele", scope: !3085, file: !2092, line: 811, baseType: !261, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "score", scope: !3085, file: !2092, line: 812, baseType: !94, size: 64, offset: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "backward", scope: !3085, file: !2092, line: 813, baseType: !3084, size: 64, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3085, file: !2092, line: 817, baseType: !3091, offset: 192)
!3091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3092, elements: !39)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zskiplistLevel", file: !2092, line: 814, size: 128, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !3092, file: !2092, line: 815, baseType: !3084, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !3092, file: !2092, line: 816, baseType: !57, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3081, file: !2092, line: 821, baseType: !3084, size: 64, offset: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3081, file: !2092, line: 822, baseType: !57, size: 64, offset: 128)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3081, file: !2092, line: 823, baseType: !20, size: 32, offset: 192)
!3099 = !DILocalVariable(name: "zsl", scope: !3071, file: !1, line: 826, type: !3079)
!3100 = !DILocalVariable(name: "zn", scope: !3071, file: !1, line: 837, type: !3101)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "zskiplistNode", file: !2092, line: 818, baseType: !3085)
!3103 = !DILocalVariable(name: "l", scope: !3104, file: !1, line: 856, type: !550)
!3104 = distinct !DILexicalBlock(scope: !3105, file: !1, line: 855, column: 50)
!3105 = distinct !DILexicalBlock(scope: !3106, file: !1, line: 855, column: 13)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 853, column: 37)
!3107 = distinct !DILexicalBlock(scope: !3069, file: !1, line: 853, column: 16)
!3108 = !DILocalVariable(name: "di", scope: !3109, file: !1, line: 862, type: !3048)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !1, line: 861, column: 52)
!3110 = distinct !DILexicalBlock(scope: !3105, file: !1, line: 861, column: 20)
!3111 = !DILocalVariable(name: "de", scope: !3109, file: !1, line: 863, type: !82)
!3112 = !DILocalVariable(name: "field", scope: !3113, file: !1, line: 872, type: !261)
!3113 = distinct !DILexicalBlock(scope: !3109, file: !1, line: 871, column: 48)
!3114 = !DILocalVariable(name: "value", scope: !3113, file: !1, line: 873, type: !261)
!3115 = !DILocalVariable(name: "s", scope: !3116, file: !1, line: 896, type: !3118)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 894, column: 39)
!3117 = distinct !DILexicalBlock(scope: !3107, file: !1, line: 894, column: 16)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "stream", file: !2817, line: 21, baseType: !3120)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stream", file: !2817, line: 16, size: 320, elements: !3121)
!3121 = !{!3122, !3123, !3124, !3125}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !3120, file: !2817, line: 17, baseType: !2759, size: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3120, file: !2817, line: 18, baseType: !55, size: 64, offset: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "last_id", scope: !3120, file: !2817, line: 19, baseType: !2927, size: 128, offset: 128)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "cgroups", scope: !3120, file: !2817, line: 20, baseType: !2759, size: 64, offset: 256)
!3126 = !DILocalVariable(name: "rax", scope: !3116, file: !1, line: 897, type: !2759)
!3127 = !DILocalVariable(name: "ri", scope: !3116, file: !1, line: 904, type: !2784)
!3128 = !DILocalVariable(name: "lp", scope: !3129, file: !1, line: 908, type: !23)
!3129 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 907, column: 30)
!3130 = !DILocalVariable(name: "lp_bytes", scope: !3129, file: !1, line: 909, type: !550)
!3131 = !DILocalVariable(name: "num_cgroups", scope: !3116, file: !1, line: 932, type: !550)
!3132 = !DILocalVariable(name: "cg", scope: !3133, file: !1, line: 941, type: !2922)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !1, line: 940, column: 33)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !1, line: 936, column: 26)
!3135 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 936, column: 13)
!3136 = !DILocalVariable(name: "io", scope: !3137, file: !1, line: 966, type: !3139)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !1, line: 964, column: 39)
!3138 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 964, column: 16)
!3139 = !DIDerivedType(tag: DW_TAG_typedef, name: "RedisModuleIO", file: !2092, line: 564, baseType: !3140)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleIO", file: !2092, line: 555, size: 384, elements: !3141)
!3141 = !{!3142, !3143, !3144, !3208, !3209, !3210, !3213}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3140, file: !2092, line: 556, baseType: !550, size: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "rio", scope: !3140, file: !2092, line: 557, baseType: !220, size: 64, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3140, file: !2092, line: 558, baseType: !3145, size: 64, offset: 128)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleType", file: !2092, line: 530, baseType: !3147)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleType", file: !2092, line: 517, size: 768, elements: !3148)
!3148 = !{!3149, !3150, !3153, !3159, !3164, !3170, !3175, !3188, !3193, !3198, !3203, !3204}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3147, file: !2092, line: 518, baseType: !55, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3147, file: !2092, line: 519, baseType: !3151, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModule", file: !2092, line: 496, flags: DIFlagFwdDecl)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_load", scope: !3147, file: !2092, line: 520, baseType: !3154, size: 64, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeLoadFunc", file: !2092, line: 506, baseType: !3155)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!13, !3158, !20}
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "rdb_save", scope: !3147, file: !2092, line: 521, baseType: !3160, size: 64, offset: 192)
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeSaveFunc", file: !2092, line: 507, baseType: !3161)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{null, !3158, !13}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "aof_rewrite", scope: !3147, file: !2092, line: 522, baseType: !3165, size: 64, offset: 256)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeRewriteFunc", file: !2092, line: 510, baseType: !3166)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{null, !3158, !3169, !13}
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !3147, file: !2092, line: 523, baseType: !3171, size: 64, offset: 320)
!3171 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeMemUsageFunc", file: !2092, line: 512, baseType: !3172)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{!550, !58}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !3147, file: !2092, line: 524, baseType: !3176, size: 64, offset: 384)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeDigestFunc", file: !2092, line: 511, baseType: !3177)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{null, !3180, !13}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleDigest", file: !2092, line: 583, size: 320, elements: !3182)
!3182 = !{!3183, !3187}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "o", scope: !3181, file: !2092, line: 584, baseType: !3184, size: 160)
!3184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 160, elements: !3185)
!3185 = !{!3186}
!3186 = !DISubrange(count: 20)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3181, file: !2092, line: 585, baseType: !3184, size: 160, offset: 160)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3147, file: !2092, line: 525, baseType: !3189, size: 64, offset: 448)
!3189 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeFreeFunc", file: !2092, line: 513, baseType: !3190)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{null, !13}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "aux_load", scope: !3147, file: !2092, line: 526, baseType: !3194, size: 64, offset: 512)
!3194 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxLoadFunc", file: !2092, line: 508, baseType: !3195)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{!20, !3158, !20, !20}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save", scope: !3147, file: !2092, line: 527, baseType: !3199, size: 64, offset: 576)
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleTypeAuxSaveFunc", file: !2092, line: 509, baseType: !3200)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{null, !3158, !20}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "aux_save_triggers", scope: !3147, file: !2092, line: 528, baseType: !20, size: 32, offset: 640)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3147, file: !2092, line: 529, baseType: !3205, size: 80, offset: 672)
!3205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 80, elements: !3206)
!3206 = !{!3207}
!3207 = !DISubrange(count: 10)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3140, file: !2092, line: 559, baseType: !20, size: 32, offset: 192)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !3140, file: !2092, line: 560, baseType: !20, size: 32, offset: 224)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !3140, file: !2092, line: 562, baseType: !3211, size: 64, offset: 256)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DICompositeType(tag: DW_TAG_structure_type, name: "RedisModuleCtx", file: !2092, line: 499, flags: DIFlagFwdDecl)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3140, file: !2092, line: 563, baseType: !3169, size: 64, offset: 320)
!3214 = !DILocalVariable(name: "mv", scope: !3137, file: !1, line: 967, type: !3215)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_typedef, name: "moduleValue", file: !2092, line: 550, baseType: !3217)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moduleValue", file: !2092, line: 547, size: 128, elements: !3218)
!3218 = !{!3219, !3220}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3217, file: !2092, line: 548, baseType: !3145, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3217, file: !2092, line: 549, baseType: !13, size: 64, offset: 64)
!3221 = !DILocalVariable(name: "mt", scope: !3137, file: !1, line: 968, type: !3145)
!3222 = !DILocalVariable(name: "retval", scope: !3137, file: !1, line: 972, type: !20)
!3223 = !DILocation(line: 754, column: 28, scope: !2995)
!3224 = !DILocation(line: 754, column: 39, scope: !2995)
!3225 = !DILocation(line: 754, column: 48, scope: !2995)
!3226 = !DILocation(line: 755, column: 13, scope: !2995)
!3227 = !DILocation(line: 755, column: 20, scope: !2995)
!3228 = !DILocation(line: 757, column: 12, scope: !3009)
!3229 = !DILocation(line: 757, column: 17, scope: !3009)
!3230 = !DILocation(line: 757, column: 9, scope: !2995)
!3231 = !DILocation(line: 759, column: 18, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !1, line: 759, column: 13)
!3233 = distinct !DILexicalBlock(scope: !3009, file: !1, line: 757, column: 32)
!3234 = !DILocation(line: 759, column: 46, scope: !3232)
!3235 = !DILocation(line: 759, column: 13, scope: !3233)
!3236 = !DILocation(line: 0, scope: !3233)
!3237 = !DILocation(line: 761, column: 24, scope: !3008)
!3238 = !DILocation(line: 761, column: 16, scope: !3009)
!3239 = !DILocation(line: 763, column: 16, scope: !3006)
!3240 = !DILocation(line: 763, column: 25, scope: !3006)
!3241 = !DILocation(line: 763, column: 13, scope: !3007)
!3242 = !DILocation(line: 764, column: 32, scope: !3005)
!3243 = !DILocation(line: 764, column: 24, scope: !3005)
!3244 = !DILocation(line: 765, column: 39, scope: !3005)
!3245 = !{!3246, !201, i64 0}
!3246 = !{!"quicklist", !201, i64 0, !201, i64 8, !205, i64 16, !205, i64 24, !192, i64 32, !192, i64 34}
!3247 = !DILocation(line: 765, column: 28, scope: !3005)
!3248 = !DILocation(line: 767, column: 41, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3005, file: !1, line: 767, column: 17)
!3250 = !{!3246, !205, i64 24}
!3251 = !DILocation(line: 767, column: 22, scope: !3249)
!3252 = !DILocation(line: 767, column: 47, scope: !3249)
!3253 = !DILocation(line: 767, column: 17, scope: !3005)
!3254 = !DILocation(line: 767, column: 54, scope: !3249)
!3255 = !DILocation(line: 770, column: 13, scope: !3005)
!3256 = !DILocation(line: 771, column: 21, scope: !3039)
!3257 = !DILocation(line: 771, column: 21, scope: !3040)
!3258 = !DILocation(line: 772, column: 21, scope: !3038)
!3259 = !DILocation(line: 772, column: 27, scope: !3038)
!3260 = !DILocation(line: 773, column: 43, scope: !3038)
!3261 = !DILocation(line: 773, column: 28, scope: !3038)
!3262 = !DILocation(line: 774, column: 49, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3038, file: !1, line: 774, column: 25)
!3264 = !DILocation(line: 774, column: 73, scope: !3263)
!3265 = !{!3266, !192, i64 24}
!3266 = !{!"quicklistNode", !201, i64 0, !201, i64 8, !201, i64 16, !192, i64 24, !192, i64 28, !192, i64 30, !192, i64 30, !192, i64 30, !192, i64 30, !192, i64 30}
!3267 = !DILocation(line: 774, column: 67, scope: !3263)
!3268 = !DILocation(line: 774, column: 30, scope: !3263)
!3269 = !DILocation(line: 774, column: 78, scope: !3263)
!3270 = !DILocation(line: 774, column: 25, scope: !3038)
!3271 = !DILocation(line: 0, scope: !3039)
!3272 = !DILocation(line: 776, column: 17, scope: !3039)
!3273 = !DILocation(line: 777, column: 57, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !1, line: 777, column: 25)
!3275 = distinct !DILexicalBlock(scope: !3039, file: !1, line: 776, column: 24)
!3276 = !{!3266, !201, i64 16}
!3277 = !DILocation(line: 777, column: 66, scope: !3274)
!3278 = !DILocation(line: 777, column: 60, scope: !3274)
!3279 = !DILocation(line: 777, column: 30, scope: !3274)
!3280 = !DILocation(line: 777, column: 71, scope: !3274)
!3281 = !DILocation(line: 777, column: 25, scope: !3275)
!3282 = !DILocation(line: 0, scope: !3275)
!3283 = !DILocation(line: 780, column: 30, scope: !3040)
!3284 = !{!3266, !201, i64 8}
!3285 = distinct !{!3285, !3255, !3286}
!3286 = !DILocation(line: 781, column: 13, scope: !3005)
!3287 = !DILocation(line: 768, column: 22, scope: !3005)
!3288 = !DILocation(line: 782, column: 9, scope: !3006)
!3289 = !DILocation(line: 783, column: 13, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3006, file: !1, line: 782, column: 16)
!3291 = !DILocation(line: 785, column: 24, scope: !3046)
!3292 = !DILocation(line: 785, column: 16, scope: !3008)
!3293 = !DILocation(line: 787, column: 16, scope: !3044)
!3294 = !DILocation(line: 787, column: 25, scope: !3044)
!3295 = !DILocation(line: 787, column: 13, scope: !3045)
!3296 = !DILocation(line: 788, column: 28, scope: !3043)
!3297 = !DILocation(line: 788, column: 19, scope: !3043)
!3298 = !DILocation(line: 789, column: 32, scope: !3043)
!3299 = !DILocation(line: 789, column: 27, scope: !3043)
!3300 = !DILocation(line: 792, column: 37, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 792, column: 17)
!3302 = !{!3303, !205, i64 24}
!3303 = !{!"dictht", !201, i64 0, !205, i64 8, !205, i64 16, !205, i64 24}
!3304 = !DILocation(line: 792, column: 22, scope: !3301)
!3305 = !DILocation(line: 792, column: 53, scope: !3301)
!3306 = !DILocation(line: 792, column: 17, scope: !3043)
!3307 = !DILocation(line: 793, column: 17, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3301, file: !1, line: 792, column: 60)
!3309 = !DILocation(line: 794, column: 17, scope: !3308)
!3310 = !DILocation(line: 798, column: 13, scope: !3043)
!3311 = !DILocation(line: 798, column: 25, scope: !3043)
!3312 = !DILocation(line: 790, column: 24, scope: !3043)
!3313 = !DILocation(line: 798, column: 39, scope: !3043)
!3314 = !DILocation(line: 799, column: 27, scope: !3061)
!3315 = !{!3316, !201, i64 0}
!3316 = !{!"dictEntry", !201, i64 0, !193, i64 8, !201, i64 16}
!3317 = !DILocation(line: 799, column: 21, scope: !3061)
!3318 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !3319)
!3319 = distinct !DILocation(line: 800, column: 67, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3061, file: !1, line: 800, column: 21)
!3321 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !3319)
!3322 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !3319)
!3323 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !3319)
!3324 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !3319)
!3325 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !3319)
!3326 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !3319)
!3327 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !3319)
!3328 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !3319)
!3329 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !3319)
!3330 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !3319)
!3331 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !3319)
!3332 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !3319)
!3333 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !3319)
!3334 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !3319)
!3335 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !3319)
!3336 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !3319)
!3337 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !3319)
!3338 = !DILocation(line: 0, scope: !2131, inlinedAt: !3319)
!3339 = !DILocation(line: 0, scope: !3320)
!3340 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !3319)
!3341 = !DILocation(line: 800, column: 26, scope: !3320)
!3342 = !DILocation(line: 801, column: 21, scope: !3320)
!3343 = !DILocation(line: 800, column: 21, scope: !3061)
!3344 = !DILocation(line: 803, column: 21, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3320, file: !1, line: 802, column: 17)
!3346 = !DILocation(line: 804, column: 21, scope: !3345)
!3347 = !DILocation(line: 806, column: 26, scope: !3061)
!3348 = !DILocation(line: 807, column: 13, scope: !3043)
!3349 = !DILocation(line: 796, column: 22, scope: !3043)
!3350 = !DILocation(line: 808, column: 13, scope: !3043)
!3351 = !DILocation(line: 809, column: 9, scope: !3044)
!3352 = !DILocation(line: 809, column: 32, scope: !3064)
!3353 = !DILocation(line: 809, column: 20, scope: !3044)
!3354 = !DILocation(line: 810, column: 50, scope: !3063)
!3355 = !DILocation(line: 810, column: 24, scope: !3063)
!3356 = !DILocation(line: 810, column: 20, scope: !3063)
!3357 = !DILocation(line: 812, column: 46, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3063, file: !1, line: 812, column: 17)
!3359 = !DILocation(line: 812, column: 22, scope: !3358)
!3360 = !DILocation(line: 812, column: 54, scope: !3358)
!3361 = !DILocation(line: 812, column: 17, scope: !3063)
!3362 = !DILocation(line: 0, scope: !3064)
!3363 = !DILocation(line: 815, column: 13, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3064, file: !1, line: 814, column: 16)
!3365 = !DILocation(line: 817, column: 24, scope: !3069)
!3366 = !DILocation(line: 817, column: 16, scope: !3046)
!3367 = !DILocation(line: 819, column: 16, scope: !3067)
!3368 = !DILocation(line: 819, column: 25, scope: !3067)
!3369 = !DILocation(line: 819, column: 13, scope: !3068)
!3370 = !DILocation(line: 820, column: 58, scope: !3066)
!3371 = !DILocation(line: 820, column: 24, scope: !3066)
!3372 = !DILocation(line: 820, column: 20, scope: !3066)
!3373 = !DILocation(line: 822, column: 46, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3066, file: !1, line: 822, column: 17)
!3375 = !DILocation(line: 822, column: 22, scope: !3374)
!3376 = !DILocation(line: 822, column: 54, scope: !3374)
!3377 = !DILocation(line: 822, column: 17, scope: !3066)
!3378 = !DILocation(line: 0, scope: !3067)
!3379 = !DILocation(line: 824, column: 32, scope: !3072)
!3380 = !DILocation(line: 824, column: 20, scope: !3067)
!3381 = !DILocation(line: 825, column: 27, scope: !3071)
!3382 = !DILocation(line: 825, column: 19, scope: !3071)
!3383 = !DILocation(line: 826, column: 34, scope: !3071)
!3384 = !{!3385, !201, i64 8}
!3385 = !{!"zset", !201, i64 0, !201, i64 8}
!3386 = !DILocation(line: 826, column: 24, scope: !3071)
!3387 = !DILocation(line: 828, column: 42, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3071, file: !1, line: 828, column: 17)
!3389 = !{!3390, !205, i64 16}
!3390 = !{!"zskiplist", !201, i64 0, !201, i64 8, !205, i64 16, !192, i64 24}
!3391 = !DILocation(line: 828, column: 22, scope: !3388)
!3392 = !DILocation(line: 828, column: 51, scope: !3388)
!3393 = !DILocation(line: 828, column: 17, scope: !3071)
!3394 = !DILocation(line: 828, column: 58, scope: !3388)
!3395 = !DILocation(line: 837, column: 38, scope: !3071)
!3396 = !{!3390, !201, i64 8}
!3397 = !DILocation(line: 837, column: 28, scope: !3071)
!3398 = !DILocation(line: 838, column: 13, scope: !3071)
!3399 = !DILocation(line: 838, column: 23, scope: !3071)
!3400 = !DILocation(line: 840, column: 41, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3402, file: !1, line: 839, column: 21)
!3402 = distinct !DILexicalBlock(scope: !3071, file: !1, line: 838, column: 32)
!3403 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !3404)
!3404 = distinct !DILocation(line: 840, column: 45, scope: !3401)
!3405 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !3404)
!3406 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !3404)
!3407 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !3404)
!3408 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !3404)
!3409 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !3404)
!3410 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !3404)
!3411 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !3404)
!3412 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !3404)
!3413 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !3404)
!3414 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !3404)
!3415 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !3404)
!3416 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !3404)
!3417 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !3404)
!3418 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !3404)
!3419 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !3404)
!3420 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !3404)
!3421 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !3404)
!3422 = !DILocation(line: 0, scope: !2131, inlinedAt: !3404)
!3423 = !DILocation(line: 0, scope: !3401)
!3424 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !3404)
!3425 = !DILocation(line: 839, column: 26, scope: !3401)
!3426 = !DILocation(line: 840, column: 63, scope: !3401)
!3427 = !DILocation(line: 839, column: 21, scope: !3402)
!3428 = !DILocation(line: 845, column: 59, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3402, file: !1, line: 845, column: 21)
!3430 = !DILocation(line: 845, column: 26, scope: !3429)
!3431 = !DILocation(line: 845, column: 67, scope: !3429)
!3432 = !DILocation(line: 845, column: 21, scope: !3402)
!3433 = !DILocation(line: 844, column: 26, scope: !3402)
!3434 = !DILocation(line: 847, column: 26, scope: !3402)
!3435 = !DILocation(line: 848, column: 26, scope: !3402)
!3436 = distinct !{!3436, !3398, !3437}
!3437 = !DILocation(line: 849, column: 13, scope: !3071)
!3438 = !DILocation(line: 0, scope: !3429)
!3439 = !DILocation(line: 0, scope: !3402)
!3440 = !DILocation(line: 850, column: 9, scope: !3072)
!3441 = !DILocation(line: 851, column: 13, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3072, file: !1, line: 850, column: 16)
!3443 = !DILocation(line: 853, column: 24, scope: !3107)
!3444 = !DILocation(line: 853, column: 16, scope: !3069)
!3445 = !DILocation(line: 855, column: 16, scope: !3105)
!3446 = !DILocation(line: 855, column: 25, scope: !3105)
!3447 = !DILocation(line: 855, column: 13, scope: !3106)
!3448 = !DILocation(line: 856, column: 58, scope: !3104)
!3449 = !DILocation(line: 856, column: 24, scope: !3104)
!3450 = !DILocation(line: 856, column: 20, scope: !3104)
!3451 = !DILocation(line: 858, column: 46, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3104, file: !1, line: 858, column: 17)
!3453 = !DILocation(line: 858, column: 22, scope: !3452)
!3454 = !DILocation(line: 858, column: 54, scope: !3452)
!3455 = !DILocation(line: 858, column: 17, scope: !3104)
!3456 = !DILocation(line: 0, scope: !3105)
!3457 = !DILocation(line: 861, column: 32, scope: !3110)
!3458 = !DILocation(line: 861, column: 20, scope: !3105)
!3459 = !DILocation(line: 862, column: 51, scope: !3109)
!3460 = !DILocation(line: 862, column: 32, scope: !3109)
!3461 = !DILocation(line: 862, column: 27, scope: !3109)
!3462 = !DILocation(line: 865, column: 37, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3109, file: !1, line: 865, column: 17)
!3464 = !DILocation(line: 865, column: 22, scope: !3463)
!3465 = !DILocation(line: 865, column: 63, scope: !3463)
!3466 = !DILocation(line: 865, column: 17, scope: !3109)
!3467 = !DILocation(line: 866, column: 17, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3463, file: !1, line: 865, column: 70)
!3469 = !DILocation(line: 867, column: 17, scope: !3468)
!3470 = !DILocation(line: 871, column: 13, scope: !3109)
!3471 = !DILocation(line: 871, column: 25, scope: !3109)
!3472 = !DILocation(line: 863, column: 24, scope: !3109)
!3473 = !DILocation(line: 871, column: 39, scope: !3109)
!3474 = !DILocation(line: 872, column: 29, scope: !3113)
!3475 = !DILocation(line: 872, column: 21, scope: !3113)
!3476 = !DILocation(line: 873, column: 29, scope: !3113)
!3477 = !DILocation(line: 873, column: 21, scope: !3113)
!3478 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !3479)
!3479 = distinct !DILocation(line: 876, column: 25, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3113, file: !1, line: 875, column: 21)
!3481 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !3479)
!3482 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !3479)
!3483 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !3479)
!3484 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !3479)
!3485 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !3479)
!3486 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !3479)
!3487 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !3479)
!3488 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !3479)
!3489 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !3479)
!3490 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !3479)
!3491 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !3479)
!3492 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !3479)
!3493 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !3479)
!3494 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !3479)
!3495 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !3479)
!3496 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !3479)
!3497 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !3479)
!3498 = !DILocation(line: 0, scope: !2131, inlinedAt: !3479)
!3499 = !DILocation(line: 0, scope: !3480)
!3500 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !3479)
!3501 = !DILocation(line: 875, column: 26, scope: !3480)
!3502 = !DILocation(line: 876, column: 41, scope: !3480)
!3503 = !DILocation(line: 875, column: 21, scope: !3113)
!3504 = !DILocation(line: 878, column: 21, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3480, file: !1, line: 877, column: 17)
!3506 = !DILocation(line: 879, column: 21, scope: !3505)
!3507 = !DILocation(line: 881, column: 26, scope: !3113)
!3508 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !3509)
!3509 = distinct !DILocation(line: 883, column: 25, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3113, file: !1, line: 882, column: 21)
!3511 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !3509)
!3512 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !3509)
!3513 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !3509)
!3514 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !3509)
!3515 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !3509)
!3516 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !3509)
!3517 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !3509)
!3518 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !3509)
!3519 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !3509)
!3520 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !3509)
!3521 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !3509)
!3522 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !3509)
!3523 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !3509)
!3524 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !3509)
!3525 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !3509)
!3526 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !3509)
!3527 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !3509)
!3528 = !DILocation(line: 0, scope: !2131, inlinedAt: !3509)
!3529 = !DILocation(line: 0, scope: !3510)
!3530 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !3509)
!3531 = !DILocation(line: 882, column: 26, scope: !3510)
!3532 = !DILocation(line: 883, column: 41, scope: !3510)
!3533 = !DILocation(line: 882, column: 21, scope: !3113)
!3534 = !DILocation(line: 885, column: 21, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3510, file: !1, line: 884, column: 17)
!3536 = !DILocation(line: 886, column: 21, scope: !3535)
!3537 = !DILocation(line: 0, scope: !3535)
!3538 = !DILocation(line: 888, column: 26, scope: !3113)
!3539 = !DILocation(line: 889, column: 13, scope: !3109)
!3540 = !DILocation(line: 869, column: 22, scope: !3109)
!3541 = !DILocation(line: 890, column: 13, scope: !3109)
!3542 = !DILocation(line: 891, column: 9, scope: !3110)
!3543 = !DILocation(line: 892, column: 13, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3110, file: !1, line: 891, column: 16)
!3545 = !DILocation(line: 894, column: 24, scope: !3117)
!3546 = !DILocation(line: 894, column: 16, scope: !3107)
!3547 = !DILocation(line: 896, column: 24, scope: !3116)
!3548 = !DILocation(line: 896, column: 17, scope: !3116)
!3549 = !DILocation(line: 897, column: 23, scope: !3116)
!3550 = !{!3551, !201, i64 0}
!3551 = !{!"stream", !201, i64 0, !205, i64 8, !2949, i64 16, !201, i64 32}
!3552 = !DILocation(line: 897, column: 14, scope: !3116)
!3553 = !DILocation(line: 898, column: 33, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 898, column: 13)
!3555 = !DILocation(line: 898, column: 18, scope: !3554)
!3556 = !DILocation(line: 898, column: 48, scope: !3554)
!3557 = !DILocation(line: 898, column: 13, scope: !3116)
!3558 = !DILocation(line: 898, column: 55, scope: !3554)
!3559 = !DILocation(line: 904, column: 9, scope: !3116)
!3560 = !DILocation(line: 904, column: 21, scope: !3116)
!3561 = !DILocation(line: 905, column: 9, scope: !3116)
!3562 = !DILocation(line: 906, column: 9, scope: !3116)
!3563 = !DILocation(line: 907, column: 9, scope: !3116)
!3564 = !DILocation(line: 907, column: 16, scope: !3116)
!3565 = !DILocation(line: 908, column: 36, scope: !3129)
!3566 = !DILocation(line: 908, column: 28, scope: !3129)
!3567 = !DILocation(line: 909, column: 31, scope: !3129)
!3568 = !DILocation(line: 910, column: 46, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 910, column: 17)
!3570 = !DILocation(line: 910, column: 53, scope: !3569)
!3571 = !DILocation(line: 910, column: 22, scope: !3569)
!3572 = !DILocation(line: 910, column: 63, scope: !3569)
!3573 = !DILocation(line: 910, column: 17, scope: !3129)
!3574 = !DILocation(line: 909, column: 20, scope: !3129)
!3575 = !DILocation(line: 912, column: 22, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 912, column: 17)
!3577 = !DILocation(line: 912, column: 57, scope: !3576)
!3578 = !DILocation(line: 912, column: 17, scope: !3129)
!3579 = !DILocation(line: 0, scope: !3576)
!3580 = !DILocation(line: 911, column: 22, scope: !3129)
!3581 = !DILocation(line: 913, column: 22, scope: !3129)
!3582 = !DILocation(line: 914, column: 9, scope: !3116)
!3583 = !DILocation(line: 899, column: 18, scope: !3116)
!3584 = !DILocation(line: 915, column: 9, scope: !3116)
!3585 = !DILocation(line: 920, column: 36, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 920, column: 13)
!3587 = !{!3551, !205, i64 8}
!3588 = !DILocation(line: 920, column: 18, scope: !3586)
!3589 = !DILocation(line: 920, column: 45, scope: !3586)
!3590 = !DILocation(line: 920, column: 13, scope: !3116)
!3591 = !DILocation(line: 923, column: 44, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 923, column: 13)
!3593 = !{!3551, !205, i64 16}
!3594 = !DILocation(line: 923, column: 18, scope: !3592)
!3595 = !DILocation(line: 923, column: 49, scope: !3592)
!3596 = !DILocation(line: 923, column: 13, scope: !3116)
!3597 = !DILocation(line: 925, column: 44, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 925, column: 13)
!3599 = !{!3551, !205, i64 24}
!3600 = !DILocation(line: 925, column: 18, scope: !3598)
!3601 = !DILocation(line: 925, column: 50, scope: !3598)
!3602 = !DILocation(line: 925, column: 13, scope: !3116)
!3603 = !DILocation(line: 921, column: 18, scope: !3116)
!3604 = !DILocation(line: 924, column: 18, scope: !3116)
!3605 = !DILocation(line: 926, column: 18, scope: !3116)
!3606 = !DILocation(line: 932, column: 33, scope: !3116)
!3607 = !{!3551, !201, i64 32}
!3608 = !DILocation(line: 932, column: 30, scope: !3116)
!3609 = !DILocation(line: 932, column: 43, scope: !3116)
!3610 = !DILocation(line: 932, column: 16, scope: !3116)
!3611 = !DILocation(line: 933, column: 18, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3116, file: !1, line: 933, column: 13)
!3613 = !DILocation(line: 933, column: 47, scope: !3612)
!3614 = !DILocation(line: 933, column: 13, scope: !3116)
!3615 = !DILocation(line: 934, column: 18, scope: !3116)
!3616 = !DILocation(line: 936, column: 13, scope: !3135)
!3617 = !DILocation(line: 936, column: 13, scope: !3116)
!3618 = !DILocation(line: 938, column: 29, scope: !3134)
!3619 = !DILocation(line: 938, column: 13, scope: !3134)
!3620 = !DILocation(line: 939, column: 13, scope: !3134)
!3621 = !DILocation(line: 940, column: 13, scope: !3134)
!3622 = !DILocation(line: 940, column: 19, scope: !3134)
!3623 = !DILocation(line: 941, column: 35, scope: !3133)
!3624 = !DILocation(line: 941, column: 27, scope: !3133)
!3625 = !DILocation(line: 944, column: 50, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 944, column: 21)
!3627 = !DILocation(line: 944, column: 57, scope: !3626)
!3628 = !DILocation(line: 944, column: 26, scope: !3626)
!3629 = !DILocation(line: 944, column: 67, scope: !3626)
!3630 = !DILocation(line: 944, column: 21, scope: !3133)
!3631 = !DILocation(line: 949, column: 53, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 949, column: 21)
!3633 = !{!2948, !205, i64 0}
!3634 = !DILocation(line: 949, column: 26, scope: !3632)
!3635 = !DILocation(line: 949, column: 58, scope: !3632)
!3636 = !DILocation(line: 949, column: 21, scope: !3133)
!3637 = !DILocation(line: 951, column: 53, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 951, column: 21)
!3639 = !{!2948, !205, i64 8}
!3640 = !DILocation(line: 951, column: 26, scope: !3638)
!3641 = !DILocation(line: 951, column: 59, scope: !3638)
!3642 = !DILocation(line: 951, column: 21, scope: !3133)
!3643 = !DILocation(line: 955, column: 51, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 955, column: 21)
!3645 = !{!2948, !201, i64 16}
!3646 = !DILocation(line: 955, column: 26, scope: !3644)
!3647 = !DILocation(line: 955, column: 59, scope: !3644)
!3648 = !DILocation(line: 955, column: 21, scope: !3133)
!3649 = !DILocation(line: 959, column: 26, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3133, file: !1, line: 959, column: 21)
!3651 = !DILocation(line: 959, column: 58, scope: !3650)
!3652 = !DILocation(line: 959, column: 21, scope: !3133)
!3653 = !DILocation(line: 0, scope: !3650)
!3654 = !DILocation(line: 946, column: 26, scope: !3133)
!3655 = !DILocation(line: 950, column: 26, scope: !3133)
!3656 = !DILocation(line: 952, column: 26, scope: !3133)
!3657 = !DILocation(line: 956, column: 26, scope: !3133)
!3658 = !DILocation(line: 960, column: 26, scope: !3133)
!3659 = !DILocation(line: 961, column: 13, scope: !3134)
!3660 = !DILocation(line: 962, column: 13, scope: !3134)
!3661 = !DILocation(line: 963, column: 9, scope: !3134)
!3662 = !DILocation(line: 964, column: 5, scope: !3117)
!3663 = !DILocation(line: 964, column: 24, scope: !3138)
!3664 = !DILocation(line: 964, column: 16, scope: !3117)
!3665 = !DILocation(line: 966, column: 9, scope: !3137)
!3666 = !DILocation(line: 967, column: 30, scope: !3137)
!3667 = !DILocation(line: 967, column: 22, scope: !3137)
!3668 = !DILocation(line: 968, column: 30, scope: !3137)
!3669 = !{!3670, !201, i64 0}
!3670 = !{!"moduleValue", !201, i64 0, !201, i64 8}
!3671 = !DILocation(line: 968, column: 21, scope: !3137)
!3672 = !DILocation(line: 972, column: 41, scope: !3137)
!3673 = !{!3674, !205, i64 0}
!3674 = !{!"RedisModuleType", !205, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !201, i64 40, !201, i64 48, !201, i64 56, !201, i64 64, !201, i64 72, !192, i64 80, !193, i64 84}
!3675 = !DILocation(line: 972, column: 22, scope: !3137)
!3676 = !DILocation(line: 972, column: 13, scope: !3137)
!3677 = !DILocation(line: 973, column: 20, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 973, column: 13)
!3679 = !DILocation(line: 973, column: 13, scope: !3137)
!3680 = !DILocation(line: 974, column: 12, scope: !3137)
!3681 = !DILocation(line: 977, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 977, column: 9)
!3683 = !{!3684, !201, i64 8}
!3684 = !{!"RedisModuleIO", !205, i64 0, !201, i64 8, !201, i64 16, !192, i64 24, !192, i64 28, !201, i64 32, !201, i64 40}
!3685 = !{!3684, !201, i64 16}
!3686 = !{!3684, !205, i64 0}
!3687 = !{!3684, !192, i64 24}
!3688 = !{!3684, !192, i64 28}
!3689 = !{!3684, !201, i64 40}
!3690 = !{!3684, !201, i64 32}
!3691 = !DILocation(line: 978, column: 13, scope: !3137)
!3692 = !{!3674, !201, i64 24}
!3693 = !DILocation(line: 978, column: 30, scope: !3137)
!3694 = !{!3670, !201, i64 8}
!3695 = !DILocation(line: 966, column: 23, scope: !3137)
!3696 = !DILocation(line: 978, column: 9, scope: !3137)
!3697 = !DILocation(line: 979, column: 18, scope: !3137)
!3698 = !DILocation(line: 980, column: 20, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 980, column: 13)
!3700 = !DILocation(line: 980, column: 13, scope: !3137)
!3701 = !DILocation(line: 981, column: 22, scope: !3699)
!3702 = !DILocation(line: 981, column: 13, scope: !3699)
!3703 = !DILocation(line: 983, column: 25, scope: !3699)
!3704 = !DILocation(line: 983, column: 22, scope: !3699)
!3705 = !DILocation(line: 985, column: 16, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3137, file: !1, line: 985, column: 13)
!3707 = !DILocation(line: 985, column: 13, scope: !3706)
!3708 = !DILocation(line: 985, column: 13, scope: !3137)
!3709 = !DILocation(line: 986, column: 13, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3706, file: !1, line: 985, column: 21)
!3711 = !DILocation(line: 987, column: 22, scope: !3710)
!3712 = !DILocation(line: 987, column: 13, scope: !3710)
!3713 = !DILocation(line: 988, column: 9, scope: !3710)
!3714 = !DILocation(line: 989, column: 19, scope: !3137)
!3715 = !DILocation(line: 989, column: 16, scope: !3137)
!3716 = !DILocation(line: 989, column: 44, scope: !3137)
!3717 = !DILocation(line: 989, column: 9, scope: !3137)
!3718 = !DILocation(line: 0, scope: !3137)
!3719 = !DILocation(line: 0, scope: !3678)
!3720 = !DILocation(line: 990, column: 5, scope: !3138)
!3721 = !DILocation(line: 991, column: 9, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3138, file: !1, line: 990, column: 12)
!3723 = !DILocation(line: 0, scope: !2995)
!3724 = !DILocation(line: 993, column: 5, scope: !2995)
!3725 = !DILocation(line: 994, column: 1, scope: !2995)
!3726 = distinct !DISubprogram(name: "rdbSavedObjectLen", scope: !1, file: !1, line: 1000, type: !3727, isLocal: false, isDefinition: true, scopeLine: 1000, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!550, !2090}
!3729 = !{!3730, !3731}
!3730 = !DILocalVariable(name: "o", arg: 1, scope: !3726, file: !1, line: 1000, type: !2090)
!3731 = !DILocalVariable(name: "len", scope: !3726, file: !1, line: 1001, type: !104)
!3732 = !DILocation(line: 1000, column: 32, scope: !3726)
!3733 = !DILocation(line: 1001, column: 19, scope: !3726)
!3734 = !DILocation(line: 1001, column: 13, scope: !3726)
!3735 = !DILocation(line: 1002, column: 5, scope: !3726)
!3736 = !DILocation(line: 1003, column: 5, scope: !3726)
!3737 = distinct !DISubprogram(name: "rdbSaveKeyValuePair", scope: !1, file: !1, line: 1010, type: !3738, isLocal: false, isDefinition: true, scopeLine: 1010, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3740)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!20, !220, !2090, !2090, !12}
!3740 = !{!3741, !3742, !3743, !3744, !3745, !3746, !3747, !3750}
!3741 = !DILocalVariable(name: "rdb", arg: 1, scope: !3737, file: !1, line: 1010, type: !220)
!3742 = !DILocalVariable(name: "key", arg: 2, scope: !3737, file: !1, line: 1010, type: !2090)
!3743 = !DILocalVariable(name: "val", arg: 3, scope: !3737, file: !1, line: 1010, type: !2090)
!3744 = !DILocalVariable(name: "expiretime", arg: 4, scope: !3737, file: !1, line: 1010, type: !12)
!3745 = !DILocalVariable(name: "savelru", scope: !3737, file: !1, line: 1011, type: !20)
!3746 = !DILocalVariable(name: "savelfu", scope: !3737, file: !1, line: 1012, type: !20)
!3747 = !DILocalVariable(name: "idletime", scope: !3748, file: !1, line: 1022, type: !55)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 1021, column: 18)
!3749 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1021, column: 9)
!3750 = !DILocalVariable(name: "buf", scope: !3751, file: !1, line: 1030, type: !3753)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !1, line: 1029, column: 18)
!3752 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1029, column: 9)
!3753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 8, elements: !166)
!3754 = !DILocation(line: 1010, column: 30, scope: !3737)
!3755 = !DILocation(line: 1010, column: 41, scope: !3737)
!3756 = !DILocation(line: 1010, column: 52, scope: !3737)
!3757 = !DILocation(line: 1010, column: 67, scope: !3737)
!3758 = !DILocation(line: 1011, column: 26, scope: !3737)
!3759 = !{!204, !192, i64 2712}
!3760 = !DILocation(line: 1011, column: 43, scope: !3737)
!3761 = !DILocation(line: 1011, column: 9, scope: !3737)
!3762 = !DILocation(line: 1012, column: 43, scope: !3737)
!3763 = !DILocation(line: 1012, column: 9, scope: !3737)
!3764 = !DILocation(line: 1015, column: 20, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1015, column: 9)
!3766 = !DILocation(line: 1015, column: 9, scope: !3737)
!3767 = !DILocation(line: 1016, column: 13, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !1, line: 1016, column: 13)
!3769 = distinct !DILexicalBlock(scope: !3765, file: !1, line: 1015, column: 27)
!3770 = !DILocation(line: 1016, column: 55, scope: !3768)
!3771 = !DILocation(line: 1016, column: 13, scope: !3769)
!3772 = !DILocation(line: 1016, column: 62, scope: !3768)
!3773 = !DILocation(line: 1017, column: 13, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3769, file: !1, line: 1017, column: 13)
!3775 = !DILocation(line: 1017, column: 52, scope: !3774)
!3776 = !DILocation(line: 1017, column: 13, scope: !3769)
!3777 = !DILocation(line: 1017, column: 59, scope: !3774)
!3778 = !DILocation(line: 1021, column: 9, scope: !3749)
!3779 = !DILocation(line: 1021, column: 9, scope: !3737)
!3780 = !DILocation(line: 1022, column: 29, scope: !3748)
!3781 = !DILocation(line: 1022, column: 18, scope: !3748)
!3782 = !DILocation(line: 1024, column: 13, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 1024, column: 13)
!3784 = !DILocation(line: 1024, column: 46, scope: !3783)
!3785 = !DILocation(line: 1024, column: 13, scope: !3748)
!3786 = !DILocation(line: 1024, column: 53, scope: !3783)
!3787 = !DILocation(line: 1023, column: 18, scope: !3748)
!3788 = !DILocation(line: 1025, column: 13, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3748, file: !1, line: 1025, column: 13)
!3790 = !DILocation(line: 1025, column: 38, scope: !3789)
!3791 = !DILocation(line: 1025, column: 13, scope: !3748)
!3792 = !DILocation(line: 0, scope: !3749)
!3793 = !DILocation(line: 1029, column: 9, scope: !3752)
!3794 = !DILocation(line: 1029, column: 9, scope: !3737)
!3795 = !DILocation(line: 1030, column: 9, scope: !3751)
!3796 = !DILocation(line: 1030, column: 17, scope: !3751)
!3797 = !DILocation(line: 1031, column: 18, scope: !3751)
!3798 = !DILocation(line: 1031, column: 16, scope: !3751)
!3799 = !DILocation(line: 1036, column: 13, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3751, file: !1, line: 1036, column: 13)
!3801 = !DILocation(line: 1036, column: 46, scope: !3800)
!3802 = !DILocation(line: 1036, column: 13, scope: !3751)
!3803 = !DILocation(line: 1036, column: 53, scope: !3800)
!3804 = !DILocation(line: 1038, column: 5, scope: !3752)
!3805 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !3806)
!3806 = distinct !DILocation(line: 1037, column: 13, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3751, file: !1, line: 1037, column: 13)
!3808 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !3806)
!3809 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !3806)
!3810 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !3806)
!3811 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !3806)
!3812 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !3813)
!3813 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !3806)
!3814 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !3813)
!3815 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !3813)
!3816 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !3813)
!3817 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !3813)
!3818 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !3813)
!3819 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !3813)
!3820 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !3813)
!3821 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !3813)
!3822 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !3813)
!3823 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !3813)
!3824 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !3813)
!3825 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !3813)
!3826 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !3813)
!3827 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !3813)
!3828 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !3813)
!3829 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !3813)
!3830 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !3813)
!3831 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !3813)
!3832 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !3813)
!3833 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !3813)
!3834 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !3813)
!3835 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !3813)
!3836 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !3813)
!3837 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !3806)
!3838 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !3806)
!3839 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !3806)
!3840 = !DILocation(line: 1037, column: 13, scope: !3751)
!3841 = !DILocation(line: 0, scope: !3752)
!3842 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !3813)
!3843 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !3806)
!3844 = !DILocation(line: 1041, column: 9, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1041, column: 9)
!3846 = !DILocation(line: 1041, column: 36, scope: !3845)
!3847 = !DILocation(line: 1041, column: 9, scope: !3737)
!3848 = !DILocation(line: 1041, column: 43, scope: !3845)
!3849 = !DILocation(line: 1042, column: 9, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1042, column: 9)
!3851 = !DILocation(line: 1042, column: 38, scope: !3850)
!3852 = !DILocation(line: 1042, column: 9, scope: !3737)
!3853 = !DILocation(line: 1042, column: 45, scope: !3850)
!3854 = !DILocation(line: 1043, column: 9, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3737, file: !1, line: 1043, column: 9)
!3856 = !DILocation(line: 1043, column: 36, scope: !3855)
!3857 = !DILocation(line: 1043, column: 9, scope: !3737)
!3858 = !DILocation(line: 0, scope: !3737)
!3859 = !DILocation(line: 1043, column: 43, scope: !3855)
!3860 = !DILocation(line: 0, scope: !3783)
!3861 = !DILocation(line: 1045, column: 1, scope: !3737)
!3862 = distinct !DISubprogram(name: "rdbSaveAuxField", scope: !1, file: !1, line: 1048, type: !3863, isLocal: false, isDefinition: true, scopeLine: 1048, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3865)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!104, !220, !13, !550, !13, !550}
!3865 = !{!3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3866 = !DILocalVariable(name: "rdb", arg: 1, scope: !3862, file: !1, line: 1048, type: !220)
!3867 = !DILocalVariable(name: "key", arg: 2, scope: !3862, file: !1, line: 1048, type: !13)
!3868 = !DILocalVariable(name: "keylen", arg: 3, scope: !3862, file: !1, line: 1048, type: !550)
!3869 = !DILocalVariable(name: "val", arg: 4, scope: !3862, file: !1, line: 1048, type: !13)
!3870 = !DILocalVariable(name: "vallen", arg: 5, scope: !3862, file: !1, line: 1048, type: !550)
!3871 = !DILocalVariable(name: "ret", scope: !3862, file: !1, line: 1049, type: !104)
!3872 = !DILocalVariable(name: "len", scope: !3862, file: !1, line: 1049, type: !104)
!3873 = !DILocation(line: 1048, column: 30, scope: !3862)
!3874 = !DILocation(line: 1048, column: 41, scope: !3862)
!3875 = !DILocation(line: 1048, column: 53, scope: !3862)
!3876 = !DILocation(line: 1048, column: 67, scope: !3862)
!3877 = !DILocation(line: 1048, column: 79, scope: !3862)
!3878 = !DILocation(line: 1049, column: 18, scope: !3862)
!3879 = !DILocation(line: 1050, column: 16, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3862, file: !1, line: 1050, column: 9)
!3881 = !DILocation(line: 1049, column: 13, scope: !3862)
!3882 = !DILocation(line: 1050, column: 49, scope: !3880)
!3883 = !DILocation(line: 1050, column: 9, scope: !3862)
!3884 = !DILocation(line: 1052, column: 16, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3862, file: !1, line: 1052, column: 9)
!3886 = !DILocation(line: 1052, column: 50, scope: !3885)
!3887 = !DILocation(line: 1052, column: 9, scope: !3862)
!3888 = !DILocation(line: 1054, column: 16, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3862, file: !1, line: 1054, column: 9)
!3890 = !DILocation(line: 1054, column: 50, scope: !3889)
!3891 = !DILocation(line: 1054, column: 9, scope: !3862)
!3892 = !DILocation(line: 1053, column: 9, scope: !3862)
!3893 = !DILocation(line: 1055, column: 9, scope: !3862)
!3894 = !DILocation(line: 1056, column: 5, scope: !3862)
!3895 = !DILocation(line: 0, scope: !3862)
!3896 = !DILocation(line: 0, scope: !3880)
!3897 = !DILocation(line: 1057, column: 1, scope: !3862)
!3898 = distinct !DISubprogram(name: "rdbSaveAuxFieldStrStr", scope: !1, file: !1, line: 1061, type: !3899, isLocal: false, isDefinition: true, scopeLine: 1061, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3901)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!104, !220, !21, !21}
!3901 = !{!3902, !3903, !3904}
!3902 = !DILocalVariable(name: "rdb", arg: 1, scope: !3898, file: !1, line: 1061, type: !220)
!3903 = !DILocalVariable(name: "key", arg: 2, scope: !3898, file: !1, line: 1061, type: !21)
!3904 = !DILocalVariable(name: "val", arg: 3, scope: !3898, file: !1, line: 1061, type: !21)
!3905 = !DILocation(line: 1061, column: 36, scope: !3898)
!3906 = !DILocation(line: 1061, column: 47, scope: !3898)
!3907 = !DILocation(line: 1061, column: 58, scope: !3898)
!3908 = !DILocation(line: 1062, column: 36, scope: !3898)
!3909 = !DILocation(line: 1062, column: 52, scope: !3898)
!3910 = !DILocation(line: 1048, column: 30, scope: !3862, inlinedAt: !3911)
!3911 = distinct !DILocation(line: 1062, column: 12, scope: !3898)
!3912 = !DILocation(line: 1048, column: 41, scope: !3862, inlinedAt: !3911)
!3913 = !DILocation(line: 1048, column: 53, scope: !3862, inlinedAt: !3911)
!3914 = !DILocation(line: 1048, column: 67, scope: !3862, inlinedAt: !3911)
!3915 = !DILocation(line: 1048, column: 79, scope: !3862, inlinedAt: !3911)
!3916 = !DILocation(line: 1049, column: 18, scope: !3862, inlinedAt: !3911)
!3917 = !DILocation(line: 1050, column: 16, scope: !3880, inlinedAt: !3911)
!3918 = !DILocation(line: 1049, column: 13, scope: !3862, inlinedAt: !3911)
!3919 = !DILocation(line: 1050, column: 49, scope: !3880, inlinedAt: !3911)
!3920 = !DILocation(line: 1050, column: 9, scope: !3862, inlinedAt: !3911)
!3921 = !DILocation(line: 1052, column: 16, scope: !3885, inlinedAt: !3911)
!3922 = !DILocation(line: 1052, column: 50, scope: !3885, inlinedAt: !3911)
!3923 = !DILocation(line: 1052, column: 9, scope: !3862, inlinedAt: !3911)
!3924 = !DILocation(line: 1054, column: 16, scope: !3889, inlinedAt: !3911)
!3925 = !DILocation(line: 1054, column: 50, scope: !3889, inlinedAt: !3911)
!3926 = !DILocation(line: 1054, column: 9, scope: !3862, inlinedAt: !3911)
!3927 = !DILocation(line: 1053, column: 9, scope: !3862, inlinedAt: !3911)
!3928 = !DILocation(line: 1055, column: 9, scope: !3862, inlinedAt: !3911)
!3929 = !DILocation(line: 1056, column: 5, scope: !3862, inlinedAt: !3911)
!3930 = !DILocation(line: 0, scope: !3862, inlinedAt: !3911)
!3931 = !DILocation(line: 0, scope: !3898)
!3932 = !DILocation(line: 1057, column: 1, scope: !3862, inlinedAt: !3911)
!3933 = !DILocation(line: 1062, column: 5, scope: !3898)
!3934 = distinct !DISubprogram(name: "rdbSaveAuxFieldStrInt", scope: !1, file: !1, line: 1066, type: !3935, isLocal: false, isDefinition: true, scopeLine: 1066, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!104, !220, !21, !12}
!3937 = !{!3938, !3939, !3940, !3941, !3942}
!3938 = !DILocalVariable(name: "rdb", arg: 1, scope: !3934, file: !1, line: 1066, type: !220)
!3939 = !DILocalVariable(name: "key", arg: 2, scope: !3934, file: !1, line: 1066, type: !21)
!3940 = !DILocalVariable(name: "val", arg: 3, scope: !3934, file: !1, line: 1066, type: !12)
!3941 = !DILocalVariable(name: "buf", scope: !3934, file: !1, line: 1067, type: !1287)
!3942 = !DILocalVariable(name: "vlen", scope: !3934, file: !1, line: 1068, type: !20)
!3943 = !DILocation(line: 1066, column: 36, scope: !3934)
!3944 = !DILocation(line: 1066, column: 47, scope: !3934)
!3945 = !DILocation(line: 1066, column: 62, scope: !3934)
!3946 = !DILocation(line: 1067, column: 5, scope: !3934)
!3947 = !DILocation(line: 1067, column: 10, scope: !3934)
!3948 = !DILocation(line: 1068, column: 16, scope: !3934)
!3949 = !DILocation(line: 1068, column: 9, scope: !3934)
!3950 = !DILocation(line: 1069, column: 36, scope: !3934)
!3951 = !DILocation(line: 1069, column: 52, scope: !3934)
!3952 = !DILocation(line: 1048, column: 30, scope: !3862, inlinedAt: !3953)
!3953 = distinct !DILocation(line: 1069, column: 12, scope: !3934)
!3954 = !DILocation(line: 1048, column: 41, scope: !3862, inlinedAt: !3953)
!3955 = !DILocation(line: 1048, column: 53, scope: !3862, inlinedAt: !3953)
!3956 = !DILocation(line: 1048, column: 67, scope: !3862, inlinedAt: !3953)
!3957 = !DILocation(line: 1048, column: 79, scope: !3862, inlinedAt: !3953)
!3958 = !DILocation(line: 1049, column: 18, scope: !3862, inlinedAt: !3953)
!3959 = !DILocation(line: 1050, column: 16, scope: !3880, inlinedAt: !3953)
!3960 = !DILocation(line: 1049, column: 13, scope: !3862, inlinedAt: !3953)
!3961 = !DILocation(line: 1050, column: 49, scope: !3880, inlinedAt: !3953)
!3962 = !DILocation(line: 1050, column: 9, scope: !3862, inlinedAt: !3953)
!3963 = !DILocation(line: 1052, column: 16, scope: !3885, inlinedAt: !3953)
!3964 = !DILocation(line: 1052, column: 50, scope: !3885, inlinedAt: !3953)
!3965 = !DILocation(line: 1052, column: 9, scope: !3862, inlinedAt: !3953)
!3966 = !DILocation(line: 1054, column: 16, scope: !3889, inlinedAt: !3953)
!3967 = !DILocation(line: 1054, column: 50, scope: !3889, inlinedAt: !3953)
!3968 = !DILocation(line: 1054, column: 9, scope: !3862, inlinedAt: !3953)
!3969 = !DILocation(line: 1053, column: 9, scope: !3862, inlinedAt: !3953)
!3970 = !DILocation(line: 1055, column: 9, scope: !3862, inlinedAt: !3953)
!3971 = !DILocation(line: 1056, column: 5, scope: !3862, inlinedAt: !3953)
!3972 = !DILocation(line: 0, scope: !3862, inlinedAt: !3953)
!3973 = !DILocation(line: 0, scope: !3934)
!3974 = !DILocation(line: 1057, column: 1, scope: !3862, inlinedAt: !3953)
!3975 = !DILocation(line: 1070, column: 1, scope: !3934)
!3976 = !DILocation(line: 1069, column: 5, scope: !3934)
!3977 = distinct !DISubprogram(name: "rdbSaveInfoAuxFields", scope: !1, file: !1, line: 1073, type: !3978, isLocal: false, isDefinition: true, scopeLine: 1073, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !3991)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!20, !220, !20, !3980}
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_typedef, name: "rdbSaveInfo", file: !2092, line: 912, baseType: !3982)
!3982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdbSaveInfo", file: !2092, line: 904, size: 512, elements: !3983)
!3983 = !{!3984, !3985, !3986, !3990}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "repl_stream_db", scope: !3982, file: !2092, line: 906, baseType: !20, size: 32)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "repl_id_is_set", scope: !3982, file: !2092, line: 909, baseType: !20, size: 32, offset: 32)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "repl_id", scope: !3982, file: !2092, line: 910, baseType: !3987, size: 328, offset: 64)
!3987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 328, elements: !3988)
!3988 = !{!3989}
!3989 = !DISubrange(count: 41)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !3982, file: !2092, line: 911, baseType: !12, size: 64, offset: 448)
!3991 = !{!3992, !3993, !3994, !3995, !3996}
!3992 = !DILocalVariable(name: "rdb", arg: 1, scope: !3977, file: !1, line: 1073, type: !220)
!3993 = !DILocalVariable(name: "flags", arg: 2, scope: !3977, file: !1, line: 1073, type: !20)
!3994 = !DILocalVariable(name: "rsi", arg: 3, scope: !3977, file: !1, line: 1073, type: !3980)
!3995 = !DILocalVariable(name: "redis_bits", scope: !3977, file: !1, line: 1074, type: !20)
!3996 = !DILocalVariable(name: "aof_preamble", scope: !3977, file: !1, line: 1075, type: !20)
!3997 = !DILocation(line: 1073, column: 31, scope: !3977)
!3998 = !DILocation(line: 1073, column: 40, scope: !3977)
!3999 = !DILocation(line: 1073, column: 60, scope: !3977)
!4000 = !DILocation(line: 1074, column: 9, scope: !3977)
!4001 = !DILocation(line: 1075, column: 31, scope: !3977)
!4002 = !DILocation(line: 1075, column: 9, scope: !3977)
!4003 = !DILocation(line: 1078, column: 9, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 1078, column: 9)
!4005 = !DILocation(line: 1078, column: 62, scope: !4004)
!4006 = !DILocation(line: 1078, column: 9, scope: !3977)
!4007 = !DILocation(line: 1078, column: 69, scope: !4004)
!4008 = !DILocation(line: 1079, column: 9, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 1079, column: 9)
!4010 = !DILocation(line: 1079, column: 60, scope: !4009)
!4011 = !DILocation(line: 1079, column: 9, scope: !3977)
!4012 = !DILocation(line: 1079, column: 67, scope: !4009)
!4013 = !DILocation(line: 1080, column: 43, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 1080, column: 9)
!4015 = !DILocation(line: 1080, column: 9, scope: !4014)
!4016 = !DILocation(line: 1080, column: 55, scope: !4014)
!4017 = !DILocation(line: 1080, column: 9, scope: !3977)
!4018 = !DILocation(line: 1080, column: 62, scope: !4014)
!4019 = !DILocation(line: 1081, column: 46, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 1081, column: 9)
!4021 = !DILocation(line: 1081, column: 9, scope: !4020)
!4022 = !DILocation(line: 1081, column: 69, scope: !4020)
!4023 = !DILocation(line: 1081, column: 9, scope: !3977)
!4024 = !DILocation(line: 1081, column: 76, scope: !4020)
!4025 = !DILocation(line: 1084, column: 9, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 1084, column: 9)
!4027 = !DILocation(line: 1084, column: 9, scope: !3977)
!4028 = !DILocation(line: 1085, column: 61, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 1085, column: 13)
!4030 = distinct !DILexicalBlock(scope: !4026, file: !1, line: 1084, column: 14)
!4031 = !{!4032, !192, i64 0}
!4032 = !{!"rdbSaveInfo", !192, i64 0, !192, i64 4, !193, i64 8, !206, i64 56}
!4033 = !DILocation(line: 1085, column: 56, scope: !4029)
!4034 = !DILocation(line: 1085, column: 13, scope: !4029)
!4035 = !DILocation(line: 1086, column: 13, scope: !4029)
!4036 = !DILocation(line: 1085, column: 13, scope: !4030)
!4037 = !DILocation(line: 1086, column: 20, scope: !4029)
!4038 = !DILocation(line: 1087, column: 13, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 1087, column: 13)
!4040 = !DILocation(line: 1088, column: 13, scope: !4039)
!4041 = !DILocation(line: 1087, column: 13, scope: !4030)
!4042 = !DILocation(line: 1088, column: 20, scope: !4039)
!4043 = !DILocation(line: 1089, column: 60, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4030, file: !1, line: 1089, column: 13)
!4045 = !{!204, !206, i64 2352}
!4046 = !DILocation(line: 1089, column: 13, scope: !4044)
!4047 = !DILocation(line: 1090, column: 13, scope: !4044)
!4048 = !DILocation(line: 1089, column: 13, scope: !4030)
!4049 = !DILocation(line: 1090, column: 20, scope: !4044)
!4050 = !DILocation(line: 1092, column: 50, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 1092, column: 9)
!4052 = !DILocation(line: 1092, column: 9, scope: !4051)
!4053 = !DILocation(line: 1092, column: 64, scope: !4051)
!4054 = !DILocation(line: 1092, column: 9, scope: !3977)
!4055 = !DILocation(line: 0, scope: !3977)
!4056 = !DILocation(line: 1092, column: 71, scope: !4051)
!4057 = !DILocation(line: 1094, column: 1, scope: !3977)
!4058 = distinct !DISubprogram(name: "rdbSaveSingleModuleAux", scope: !1, file: !1, line: 1096, type: !4059, isLocal: false, isDefinition: true, scopeLine: 1096, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4061)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!104, !220, !20, !3145}
!4061 = !{!4062, !4063, !4064, !4065, !4066}
!4062 = !DILocalVariable(name: "rdb", arg: 1, scope: !4058, file: !1, line: 1096, type: !220)
!4063 = !DILocalVariable(name: "when", arg: 2, scope: !4058, file: !1, line: 1096, type: !20)
!4064 = !DILocalVariable(name: "mt", arg: 3, scope: !4058, file: !1, line: 1096, type: !3145)
!4065 = !DILocalVariable(name: "io", scope: !4058, file: !1, line: 1098, type: !3139)
!4066 = !DILocalVariable(name: "retval", scope: !4058, file: !1, line: 1099, type: !20)
!4067 = !DILocation(line: 1096, column: 37, scope: !4058)
!4068 = !DILocation(line: 1096, column: 46, scope: !4058)
!4069 = !DILocation(line: 1096, column: 64, scope: !4058)
!4070 = !DILocation(line: 1098, column: 5, scope: !4058)
!4071 = !DILocation(line: 1099, column: 18, scope: !4058)
!4072 = !DILocation(line: 1099, column: 9, scope: !4058)
!4073 = !DILocation(line: 1103, column: 33, scope: !4058)
!4074 = !DILocation(line: 1103, column: 14, scope: !4058)
!4075 = !DILocation(line: 1104, column: 16, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1104, column: 9)
!4077 = !DILocation(line: 1104, column: 9, scope: !4058)
!4078 = !DILocation(line: 1105, column: 8, scope: !4058)
!4079 = !DILocation(line: 1110, column: 14, scope: !4058)
!4080 = !DILocation(line: 1111, column: 16, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1111, column: 9)
!4082 = !DILocation(line: 1111, column: 9, scope: !4058)
!4083 = !DILocation(line: 1113, column: 29, scope: !4058)
!4084 = !DILocation(line: 1113, column: 14, scope: !4058)
!4085 = !DILocation(line: 1114, column: 16, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1114, column: 9)
!4087 = !DILocation(line: 1114, column: 9, scope: !4058)
!4088 = !DILocation(line: 1118, column: 5, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1118, column: 5)
!4090 = !DILocation(line: 1119, column: 9, scope: !4058)
!4091 = !{!3674, !201, i64 72}
!4092 = !DILocation(line: 1098, column: 19, scope: !4058)
!4093 = !DILocation(line: 1119, column: 5, scope: !4058)
!4094 = !DILocation(line: 1120, column: 14, scope: !4058)
!4095 = !DILocation(line: 1121, column: 16, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1121, column: 9)
!4097 = !DILocation(line: 1121, column: 9, scope: !4058)
!4098 = !DILocation(line: 1122, column: 18, scope: !4096)
!4099 = !DILocation(line: 1122, column: 9, scope: !4096)
!4100 = !DILocation(line: 1124, column: 21, scope: !4096)
!4101 = !DILocation(line: 1124, column: 18, scope: !4096)
!4102 = !DILocation(line: 1126, column: 12, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1126, column: 9)
!4104 = !DILocation(line: 1126, column: 9, scope: !4103)
!4105 = !DILocation(line: 1126, column: 9, scope: !4058)
!4106 = !DILocation(line: 1127, column: 9, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4103, file: !1, line: 1126, column: 17)
!4108 = !DILocation(line: 1128, column: 18, scope: !4107)
!4109 = !DILocation(line: 1128, column: 9, scope: !4107)
!4110 = !DILocation(line: 1129, column: 5, scope: !4107)
!4111 = !DILocation(line: 1130, column: 12, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 1130, column: 9)
!4113 = !DILocation(line: 1130, column: 9, scope: !4112)
!4114 = !DILocation(line: 1130, column: 9, scope: !4058)
!4115 = !DILocation(line: 1132, column: 15, scope: !4058)
!4116 = !DILocation(line: 0, scope: !4058)
!4117 = !DILocation(line: 0, scope: !4076)
!4118 = !DILocation(line: 1133, column: 1, scope: !4058)
!4119 = distinct !DISubprogram(name: "rdbSaveRio", scope: !1, file: !1, line: 1143, type: !4120, isLocal: false, isDefinition: true, scopeLine: 1143, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4122)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!20, !220, !478, !20, !3980}
!4122 = !{!4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4174, !4175, !4176, !4177, !4179, !4180, !4181, !4182}
!4123 = !DILocalVariable(name: "rdb", arg: 1, scope: !4119, file: !1, line: 1143, type: !220)
!4124 = !DILocalVariable(name: "error", arg: 2, scope: !4119, file: !1, line: 1143, type: !478)
!4125 = !DILocalVariable(name: "flags", arg: 3, scope: !4119, file: !1, line: 1143, type: !20)
!4126 = !DILocalVariable(name: "rsi", arg: 4, scope: !4119, file: !1, line: 1143, type: !3980)
!4127 = !DILocalVariable(name: "di", scope: !4119, file: !1, line: 1144, type: !3048)
!4128 = !DILocalVariable(name: "de", scope: !4119, file: !1, line: 1145, type: !82)
!4129 = !DILocalVariable(name: "magic", scope: !4119, file: !1, line: 1146, type: !3205)
!4130 = !DILocalVariable(name: "j", scope: !4119, file: !1, line: 1147, type: !20)
!4131 = !DILocalVariable(name: "cksum", scope: !4119, file: !1, line: 1148, type: !55)
!4132 = !DILocalVariable(name: "processed", scope: !4119, file: !1, line: 1149, type: !550)
!4133 = !DILocalVariable(name: "db", scope: !4134, file: !1, line: 1159, type: !4137)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !1, line: 1158, column: 40)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !1, line: 1158, column: 5)
!4136 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1158, column: 5)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !2092, line: 656, baseType: !4139)
!4139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !2092, line: 647, size: 512, elements: !4140)
!4140 = !{!4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !4139, file: !2092, line: 648, baseType: !41, size: 64)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4139, file: !2092, line: 649, baseType: !41, size: 64, offset: 64)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !4139, file: !2092, line: 650, baseType: !41, size: 64, offset: 128)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !4139, file: !2092, line: 651, baseType: !41, size: 64, offset: 192)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !4139, file: !2092, line: 652, baseType: !41, size: 64, offset: 256)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4139, file: !2092, line: 653, baseType: !20, size: 32, offset: 320)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !4139, file: !2092, line: 654, baseType: !12, size: 64, offset: 384)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !4139, file: !2092, line: 655, baseType: !4149, size: 64, offset: 448)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !4151, line: 54, baseType: !4152)
!4151 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !4151, line: 47, size: 384, elements: !4153)
!4153 = !{!4154, !4163, !4164, !4168, !4169, !4173}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4152, file: !4151, line: 48, baseType: !4155, size: 64)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !4151, line: 40, baseType: !4157)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !4151, line: 36, size: 192, elements: !4158)
!4158 = !{!4159, !4161, !4162}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4157, file: !4151, line: 37, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4157, file: !4151, line: 38, baseType: !4160, size: 64, offset: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4157, file: !4151, line: 39, baseType: !13, size: 64, offset: 128)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4152, file: !4151, line: 49, baseType: !4155, size: 64, offset: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !4152, file: !4151, line: 50, baseType: !4165, size: 64, offset: 128)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{!13, !13}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4152, file: !4151, line: 51, baseType: !3190, size: 64, offset: 192)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4152, file: !4151, line: 52, baseType: !4170, size: 64, offset: 256)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{!20, !13, !13}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4152, file: !4151, line: 53, baseType: !57, size: 64, offset: 320)
!4174 = !DILocalVariable(name: "d", scope: !4134, file: !1, line: 1160, type: !41)
!4175 = !DILocalVariable(name: "db_size", scope: !4134, file: !1, line: 1172, type: !55)
!4176 = !DILocalVariable(name: "expires_size", scope: !4134, file: !1, line: 1172, type: !55)
!4177 = !DILocalVariable(name: "keystr", scope: !4178, file: !1, line: 1181, type: !261)
!4178 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1180, column: 44)
!4179 = !DILocalVariable(name: "key", scope: !4178, file: !1, line: 1182, type: !2091)
!4180 = !DILocalVariable(name: "o", scope: !4178, file: !1, line: 1182, type: !2090)
!4181 = !DILocalVariable(name: "expire", scope: !4178, file: !1, line: 1183, type: !12)
!4182 = !DILocalVariable(name: "body", scope: !4183, file: !1, line: 1210, type: !2090)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 1209, column: 44)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !1, line: 1207, column: 46)
!4185 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1207, column: 9)
!4186 = !DILocation(line: 1143, column: 21, scope: !4119)
!4187 = !DILocation(line: 1143, column: 31, scope: !4119)
!4188 = !DILocation(line: 1143, column: 42, scope: !4119)
!4189 = !DILocation(line: 1143, column: 62, scope: !4119)
!4190 = !DILocation(line: 1144, column: 19, scope: !4119)
!4191 = !DILocation(line: 1146, column: 5, scope: !4119)
!4192 = !DILocation(line: 1146, column: 10, scope: !4119)
!4193 = !DILocation(line: 1148, column: 5, scope: !4119)
!4194 = !DILocation(line: 1149, column: 12, scope: !4119)
!4195 = !DILocation(line: 1151, column: 16, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1151, column: 9)
!4197 = !{!204, !192, i64 2132}
!4198 = !DILocation(line: 1151, column: 9, scope: !4196)
!4199 = !DILocation(line: 1151, column: 9, scope: !4119)
!4200 = !DILocation(line: 1152, column: 14, scope: !4196)
!4201 = !DILocation(line: 1152, column: 27, scope: !4196)
!4202 = !DILocation(line: 1152, column: 9, scope: !4196)
!4203 = !DILocation(line: 1153, column: 5, scope: !4119)
!4204 = !DILocation(line: 72, column: 29, scope: !547, inlinedAt: !4205)
!4205 = distinct !DILocation(line: 1154, column: 9, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1154, column: 9)
!4207 = !DILocation(line: 72, column: 40, scope: !547, inlinedAt: !4205)
!4208 = !DILocation(line: 72, column: 50, scope: !547, inlinedAt: !4205)
!4209 = !DILocation(line: 73, column: 13, scope: !561, inlinedAt: !4205)
!4210 = !DILocation(line: 73, column: 9, scope: !561, inlinedAt: !4205)
!4211 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !4212)
!4212 = distinct !DILocation(line: 73, column: 16, scope: !561, inlinedAt: !4205)
!4213 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !4212)
!4214 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !4212)
!4215 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !4212)
!4216 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !4212)
!4217 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !4212)
!4218 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !4212)
!4219 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !4212)
!4220 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !4212)
!4221 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !4212)
!4222 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !4212)
!4223 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !4212)
!4224 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !4212)
!4225 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !4212)
!4226 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !4212)
!4227 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !4212)
!4228 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !4212)
!4229 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !4212)
!4230 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !4212)
!4231 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !4212)
!4232 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !4212)
!4233 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !4212)
!4234 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !4212)
!4235 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !4212)
!4236 = !DILocation(line: 73, column: 9, scope: !547, inlinedAt: !4205)
!4237 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !4212)
!4238 = !DILocation(line: 74, column: 9, scope: !561, inlinedAt: !4205)
!4239 = !DILocation(line: 76, column: 1, scope: !547, inlinedAt: !4205)
!4240 = !DILocation(line: 1154, column: 9, scope: !4119)
!4241 = !DILocation(line: 75, column: 5, scope: !547, inlinedAt: !4205)
!4242 = !DILocation(line: 1155, column: 9, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1155, column: 9)
!4244 = !DILocation(line: 1155, column: 45, scope: !4243)
!4245 = !DILocation(line: 1155, column: 9, scope: !4119)
!4246 = !DILocation(line: 1156, column: 9, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1156, column: 9)
!4248 = !DILocation(line: 1156, column: 60, scope: !4247)
!4249 = !DILocation(line: 1156, column: 9, scope: !4119)
!4250 = !DILocation(line: 1147, column: 9, scope: !4119)
!4251 = !DILocation(line: 1158, column: 10, scope: !4136)
!4252 = !DILocation(line: 1158, column: 28, scope: !4135)
!4253 = !{!204, !192, i64 1792}
!4254 = !DILocation(line: 1158, column: 19, scope: !4135)
!4255 = !DILocation(line: 1158, column: 5, scope: !4136)
!4256 = !DILocation(line: 1159, column: 30, scope: !4134)
!4257 = !{!204, !201, i64 48}
!4258 = !DILocation(line: 1159, column: 32, scope: !4134)
!4259 = !DILocation(line: 1159, column: 18, scope: !4134)
!4260 = !DILocation(line: 1160, column: 23, scope: !4134)
!4261 = !{!4262, !201, i64 0}
!4262 = !{!"redisDb", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !192, i64 40, !206, i64 48, !201, i64 56}
!4263 = !DILocation(line: 1160, column: 15, scope: !4134)
!4264 = !DILocation(line: 1161, column: 13, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1161, column: 13)
!4266 = !DILocation(line: 1161, column: 25, scope: !4265)
!4267 = !DILocation(line: 1161, column: 13, scope: !4134)
!4268 = !DILocation(line: 1161, column: 31, scope: !4265)
!4269 = !DILocation(line: 1162, column: 14, scope: !4134)
!4270 = !DILocation(line: 1165, column: 13, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1165, column: 13)
!4272 = !DILocation(line: 1165, column: 50, scope: !4271)
!4273 = !DILocation(line: 1165, column: 13, scope: !4134)
!4274 = !DILocation(line: 1166, column: 13, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1166, column: 13)
!4276 = !DILocation(line: 1166, column: 31, scope: !4275)
!4277 = !DILocation(line: 1166, column: 13, scope: !4134)
!4278 = !DILocation(line: 1173, column: 19, scope: !4134)
!4279 = !DILocation(line: 1174, column: 24, scope: !4134)
!4280 = !{!4262, !201, i64 8}
!4281 = !DILocation(line: 1172, column: 27, scope: !4134)
!4282 = !DILocation(line: 1175, column: 13, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1175, column: 13)
!4284 = !DILocation(line: 1175, column: 50, scope: !4283)
!4285 = !DILocation(line: 1175, column: 13, scope: !4134)
!4286 = !DILocation(line: 1172, column: 18, scope: !4134)
!4287 = !DILocation(line: 1176, column: 13, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1176, column: 13)
!4289 = !DILocation(line: 1176, column: 37, scope: !4288)
!4290 = !DILocation(line: 1176, column: 13, scope: !4134)
!4291 = !DILocation(line: 1177, column: 13, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4134, file: !1, line: 1177, column: 13)
!4293 = !DILocation(line: 1177, column: 42, scope: !4292)
!4294 = !DILocation(line: 1177, column: 13, scope: !4134)
!4295 = !DILocation(line: 1180, column: 21, scope: !4134)
!4296 = !DILocation(line: 1145, column: 16, scope: !4119)
!4297 = !DILocation(line: 1180, column: 35, scope: !4134)
!4298 = !DILocation(line: 1180, column: 9, scope: !4134)
!4299 = !DILocation(line: 1181, column: 26, scope: !4178)
!4300 = !DILocation(line: 1181, column: 17, scope: !4178)
!4301 = !DILocation(line: 1182, column: 13, scope: !4178)
!4302 = !DILocation(line: 1182, column: 28, scope: !4178)
!4303 = !DILocation(line: 1182, column: 24, scope: !4178)
!4304 = !DILocation(line: 1185, column: 13, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1185, column: 13)
!4306 = !{!2112, !192, i64 4}
!4307 = !DILocation(line: 1182, column: 18, scope: !4178)
!4308 = !DILocation(line: 1186, column: 22, scope: !4178)
!4309 = !DILocation(line: 1183, column: 23, scope: !4178)
!4310 = !DILocation(line: 1187, column: 17, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1187, column: 17)
!4312 = !DILocation(line: 1187, column: 56, scope: !4311)
!4313 = !DILocation(line: 1187, column: 17, scope: !4178)
!4314 = !DILocation(line: 0, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4178, file: !1, line: 1192, column: 17)
!4316 = !DILocation(line: 1198, column: 9, scope: !4134)
!4317 = !DILocation(line: 1192, column: 47, scope: !4315)
!4318 = !DILocation(line: 1193, column: 22, scope: !4315)
!4319 = !DILocation(line: 1193, column: 49, scope: !4315)
!4320 = !DILocation(line: 1193, column: 38, scope: !4315)
!4321 = !DILocation(line: 1192, column: 17, scope: !4178)
!4322 = !DILocation(line: 1196, column: 17, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 1194, column: 13)
!4324 = !DILocation(line: 1197, column: 13, scope: !4323)
!4325 = !DILocation(line: 0, scope: !4119)
!4326 = !DILocation(line: 0, scope: !4275)
!4327 = !DILocation(line: 1199, column: 9, scope: !4134)
!4328 = !DILocation(line: 1201, column: 5, scope: !4135)
!4329 = !DILocation(line: 1158, column: 36, scope: !4135)
!4330 = !DILocation(line: 1158, column: 5, scope: !4135)
!4331 = distinct !{!4331, !4255, !4332}
!4332 = !DILocation(line: 1201, column: 5, scope: !4136)
!4333 = !DILocation(line: 1207, column: 9, scope: !4185)
!4334 = !DILocation(line: 1207, column: 13, scope: !4185)
!4335 = !DILocation(line: 1207, column: 16, scope: !4185)
!4336 = !{!204, !201, i64 3016}
!4337 = !DILocation(line: 1207, column: 9, scope: !4119)
!4338 = !DILocation(line: 1208, column: 14, scope: !4184)
!4339 = !DILocation(line: 1209, column: 9, scope: !4184)
!4340 = !DILocation(line: 1209, column: 21, scope: !4184)
!4341 = !DILocation(line: 1209, column: 35, scope: !4184)
!4342 = !DILocation(line: 1210, column: 26, scope: !4183)
!4343 = !DILocation(line: 1210, column: 19, scope: !4183)
!4344 = !DILocation(line: 1211, column: 51, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4183, file: !1, line: 1211, column: 17)
!4346 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !4347)
!4347 = distinct !DILocation(line: 1211, column: 55, scope: !4345)
!4348 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !4347)
!4349 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !4347)
!4350 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !4347)
!4351 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !4347)
!4352 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !4347)
!4353 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !4347)
!4354 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !4347)
!4355 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !4347)
!4356 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !4347)
!4357 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !4347)
!4358 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !4347)
!4359 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !4347)
!4360 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !4347)
!4361 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !4347)
!4362 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !4347)
!4363 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !4347)
!4364 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !4347)
!4365 = !DILocation(line: 0, scope: !2131, inlinedAt: !4347)
!4366 = !DILocation(line: 0, scope: !4345)
!4367 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !4347)
!4368 = !DILocation(line: 1048, column: 30, scope: !3862, inlinedAt: !4369)
!4369 = distinct !DILocation(line: 1211, column: 17, scope: !4345)
!4370 = !DILocation(line: 1048, column: 41, scope: !3862, inlinedAt: !4369)
!4371 = !DILocation(line: 1048, column: 53, scope: !3862, inlinedAt: !4369)
!4372 = !DILocation(line: 1048, column: 67, scope: !3862, inlinedAt: !4369)
!4373 = !DILocation(line: 1048, column: 79, scope: !3862, inlinedAt: !4369)
!4374 = !DILocation(line: 1049, column: 18, scope: !3862, inlinedAt: !4369)
!4375 = !DILocation(line: 1050, column: 16, scope: !3880, inlinedAt: !4369)
!4376 = !DILocation(line: 1049, column: 13, scope: !3862, inlinedAt: !4369)
!4377 = !DILocation(line: 1050, column: 49, scope: !3880, inlinedAt: !4369)
!4378 = !DILocation(line: 1050, column: 9, scope: !3862, inlinedAt: !4369)
!4379 = !DILocation(line: 1052, column: 16, scope: !3885, inlinedAt: !4369)
!4380 = !DILocation(line: 1052, column: 50, scope: !3885, inlinedAt: !4369)
!4381 = !DILocation(line: 1052, column: 9, scope: !3862, inlinedAt: !4369)
!4382 = !DILocation(line: 1054, column: 16, scope: !3889, inlinedAt: !4369)
!4383 = !DILocation(line: 1054, column: 50, scope: !3889, inlinedAt: !4369)
!4384 = !DILocation(line: 1054, column: 9, scope: !3862, inlinedAt: !4369)
!4385 = !DILocation(line: 1057, column: 1, scope: !3862, inlinedAt: !4369)
!4386 = !DILocation(line: 1211, column: 17, scope: !4183)
!4387 = !DILocation(line: 0, scope: !4184)
!4388 = !DILocation(line: 1053, column: 9, scope: !3862, inlinedAt: !4369)
!4389 = !DILocation(line: 1055, column: 9, scope: !3862, inlinedAt: !4369)
!4390 = !DILocation(line: 1056, column: 5, scope: !3862, inlinedAt: !4369)
!4391 = !DILocation(line: 1211, column: 74, scope: !4345)
!4392 = !DILocation(line: 1214, column: 9, scope: !4184)
!4393 = !DILocation(line: 1216, column: 5, scope: !4184)
!4394 = !DILocation(line: 1218, column: 9, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1218, column: 9)
!4396 = !DILocation(line: 1218, column: 59, scope: !4395)
!4397 = !DILocation(line: 1218, column: 9, scope: !4119)
!4398 = !DILocation(line: 1221, column: 9, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1221, column: 9)
!4400 = !DILocation(line: 1221, column: 41, scope: !4399)
!4401 = !DILocation(line: 1221, column: 9, scope: !4119)
!4402 = !DILocation(line: 1225, column: 18, scope: !4119)
!4403 = !{!507, !205, i64 40}
!4404 = !DILocation(line: 1148, column: 14, scope: !4119)
!4405 = !DILocation(line: 1225, column: 11, scope: !4119)
!4406 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !4407)
!4407 = distinct !DILocation(line: 1227, column: 9, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1227, column: 9)
!4409 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !4407)
!4410 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !4407)
!4411 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !4407)
!4412 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !4407)
!4413 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !4407)
!4414 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !4407)
!4415 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !4407)
!4416 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !4407)
!4417 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !4407)
!4418 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !4407)
!4419 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !4407)
!4420 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !4407)
!4421 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !4407)
!4422 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !4407)
!4423 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !4407)
!4424 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !4407)
!4425 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !4407)
!4426 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !4407)
!4427 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !4407)
!4428 = !DILocation(line: 1227, column: 9, scope: !4119)
!4429 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !4407)
!4430 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !4407)
!4431 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !4407)
!4432 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !4407)
!4433 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !4407)
!4434 = !DILocation(line: 1228, column: 5, scope: !4119)
!4435 = !DILocation(line: 1231, column: 9, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1231, column: 9)
!4437 = !DILocation(line: 1231, column: 9, scope: !4119)
!4438 = !DILocation(line: 1231, column: 25, scope: !4436)
!4439 = !DILocation(line: 1231, column: 23, scope: !4436)
!4440 = !DILocation(line: 1231, column: 16, scope: !4436)
!4441 = !DILocation(line: 1232, column: 9, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 1232, column: 9)
!4443 = !DILocation(line: 1232, column: 9, scope: !4119)
!4444 = !DILocation(line: 1232, column: 13, scope: !4442)
!4445 = !DILocation(line: 1234, column: 1, scope: !4119)
!4446 = distinct !DISubprogram(name: "rdbSaveRioWithEOFMark", scope: !1, file: !1, line: 1244, type: !4447, isLocal: false, isDefinition: true, scopeLine: 1244, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4449)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!20, !220, !478, !3980}
!4449 = !{!4450, !4451, !4452, !4453}
!4450 = !DILocalVariable(name: "rdb", arg: 1, scope: !4446, file: !1, line: 1244, type: !220)
!4451 = !DILocalVariable(name: "error", arg: 2, scope: !4446, file: !1, line: 1244, type: !478)
!4452 = !DILocalVariable(name: "rsi", arg: 3, scope: !4446, file: !1, line: 1244, type: !3980)
!4453 = !DILocalVariable(name: "eofmark", scope: !4446, file: !1, line: 1245, type: !4454)
!4454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 320, elements: !4455)
!4455 = !{!4456}
!4456 = !DISubrange(count: 40)
!4457 = !DILocation(line: 1244, column: 32, scope: !4446)
!4458 = !DILocation(line: 1244, column: 42, scope: !4446)
!4459 = !DILocation(line: 1244, column: 62, scope: !4446)
!4460 = !DILocation(line: 1245, column: 5, scope: !4446)
!4461 = !DILocation(line: 1245, column: 10, scope: !4446)
!4462 = !DILocation(line: 1247, column: 5, scope: !4446)
!4463 = !DILocation(line: 1248, column: 9, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1248, column: 9)
!4465 = !DILocation(line: 1248, column: 9, scope: !4446)
!4466 = !DILocation(line: 1248, column: 23, scope: !4464)
!4467 = !DILocation(line: 1248, column: 16, scope: !4464)
!4468 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !4469)
!4469 = distinct !DILocation(line: 1249, column: 9, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1249, column: 9)
!4471 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !4469)
!4472 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !4469)
!4473 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !4469)
!4474 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !4469)
!4475 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !4469)
!4476 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !4469)
!4477 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !4469)
!4478 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !4469)
!4479 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !4469)
!4480 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !4469)
!4481 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !4469)
!4482 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !4469)
!4483 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !4469)
!4484 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !4469)
!4485 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !4469)
!4486 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !4469)
!4487 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !4469)
!4488 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !4469)
!4489 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !4469)
!4490 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !4469)
!4491 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !4469)
!4492 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !4469)
!4493 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !4469)
!4494 = !DILocation(line: 1249, column: 9, scope: !4446)
!4495 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !4496)
!4496 = distinct !DILocation(line: 1250, column: 9, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1250, column: 9)
!4498 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !4496)
!4499 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !4496)
!4500 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !4496)
!4501 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !4496)
!4502 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !4496)
!4503 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !4496)
!4504 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !4496)
!4505 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !4496)
!4506 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !4496)
!4507 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !4496)
!4508 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !4496)
!4509 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !4496)
!4510 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !4496)
!4511 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !4496)
!4512 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !4496)
!4513 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !4496)
!4514 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !4496)
!4515 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !4496)
!4516 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !4496)
!4517 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !4496)
!4518 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !4496)
!4519 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !4496)
!4520 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !4496)
!4521 = !DILocation(line: 1250, column: 9, scope: !4446)
!4522 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !4523)
!4523 = distinct !DILocation(line: 1251, column: 9, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1251, column: 9)
!4525 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !4523)
!4526 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !4523)
!4527 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !4523)
!4528 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !4523)
!4529 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !4523)
!4530 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !4523)
!4531 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !4523)
!4532 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !4523)
!4533 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !4523)
!4534 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !4523)
!4535 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !4523)
!4536 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !4523)
!4537 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !4523)
!4538 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !4523)
!4539 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !4523)
!4540 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !4523)
!4541 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !4523)
!4542 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !4523)
!4543 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !4523)
!4544 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !4523)
!4545 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !4523)
!4546 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !4523)
!4547 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !4523)
!4548 = !DILocation(line: 1251, column: 9, scope: !4446)
!4549 = !DILocation(line: 1252, column: 9, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1252, column: 9)
!4551 = !DILocation(line: 1252, column: 49, scope: !4550)
!4552 = !DILocation(line: 1252, column: 9, scope: !4446)
!4553 = !DILocation(line: 93, column: 36, scope: !564, inlinedAt: !4554)
!4554 = distinct !DILocation(line: 1253, column: 9, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1253, column: 9)
!4556 = !DILocation(line: 93, column: 51, scope: !564, inlinedAt: !4554)
!4557 = !DILocation(line: 93, column: 63, scope: !564, inlinedAt: !4554)
!4558 = !DILocation(line: 94, column: 5, scope: !564, inlinedAt: !4554)
!4559 = !DILocation(line: 95, column: 37, scope: !571, inlinedAt: !4554)
!4560 = !DILocation(line: 95, column: 34, scope: !571, inlinedAt: !4554)
!4561 = !DILocation(line: 95, column: 58, scope: !571, inlinedAt: !4554)
!4562 = !DILocation(line: 95, column: 85, scope: !571, inlinedAt: !4554)
!4563 = !DILocation(line: 95, column: 33, scope: !571, inlinedAt: !4554)
!4564 = !DILocation(line: 95, column: 16, scope: !571, inlinedAt: !4554)
!4565 = !DILocation(line: 96, column: 16, scope: !584, inlinedAt: !4554)
!4566 = !DILocation(line: 96, column: 13, scope: !584, inlinedAt: !4554)
!4567 = !DILocation(line: 96, column: 13, scope: !571, inlinedAt: !4554)
!4568 = !DILocation(line: 96, column: 30, scope: !584, inlinedAt: !4554)
!4569 = !DILocation(line: 97, column: 16, scope: !589, inlinedAt: !4554)
!4570 = !DILocation(line: 97, column: 13, scope: !589, inlinedAt: !4554)
!4571 = !DILocation(line: 97, column: 44, scope: !589, inlinedAt: !4554)
!4572 = !DILocation(line: 97, column: 13, scope: !571, inlinedAt: !4554)
!4573 = !DILocation(line: 99, column: 26, scope: !571, inlinedAt: !4554)
!4574 = !DILocation(line: 100, column: 13, scope: !571, inlinedAt: !4554)
!4575 = !DILocation(line: 101, column: 28, scope: !571, inlinedAt: !4554)
!4576 = !DILocation(line: 102, column: 5, scope: !564, inlinedAt: !4554)
!4577 = !DILocation(line: 103, column: 5, scope: !564, inlinedAt: !4554)
!4578 = !DILocation(line: 104, column: 1, scope: !564, inlinedAt: !4554)
!4579 = !DILocation(line: 1253, column: 9, scope: !4446)
!4580 = !DILocation(line: 1254, column: 5, scope: !4446)
!4581 = !DILocation(line: 98, column: 13, scope: !589, inlinedAt: !4554)
!4582 = !DILocation(line: 0, scope: !4446)
!4583 = !DILocation(line: 1258, column: 15, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4446, file: !1, line: 1258, column: 9)
!4585 = !DILocation(line: 1258, column: 18, scope: !4584)
!4586 = !DILocation(line: 1258, column: 25, scope: !4584)
!4587 = !DILocation(line: 1258, column: 9, scope: !4446)
!4588 = !DILocation(line: 1258, column: 40, scope: !4584)
!4589 = !DILocation(line: 1258, column: 38, scope: !4584)
!4590 = !DILocation(line: 1258, column: 31, scope: !4584)
!4591 = !DILocation(line: 1260, column: 1, scope: !4446)
!4592 = distinct !DISubprogram(name: "rdbSave", scope: !1, file: !1, line: 1263, type: !4593, isLocal: false, isDefinition: true, scopeLine: 1263, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4595)
!4593 = !DISubroutineType(types: !4594)
!4594 = !{!20, !21, !3980}
!4595 = !{!4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4606}
!4596 = !DILocalVariable(name: "filename", arg: 1, scope: !4592, file: !1, line: 1263, type: !21)
!4597 = !DILocalVariable(name: "rsi", arg: 2, scope: !4592, file: !1, line: 1263, type: !3980)
!4598 = !DILocalVariable(name: "tmpfile", scope: !4592, file: !1, line: 1264, type: !2401)
!4599 = !DILocalVariable(name: "cwd", scope: !4592, file: !1, line: 1265, type: !169)
!4600 = !DILocalVariable(name: "fp", scope: !4592, file: !1, line: 1266, type: !267)
!4601 = !DILocalVariable(name: "rdb", scope: !4592, file: !1, line: 1267, type: !221)
!4602 = !DILocalVariable(name: "error", scope: !4592, file: !1, line: 1268, type: !20)
!4603 = !DILocalVariable(name: "cwdp", scope: !4604, file: !1, line: 1273, type: !21)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !1, line: 1272, column: 14)
!4605 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1272, column: 9)
!4606 = !DILocalVariable(name: "cwdp", scope: !4607, file: !1, line: 1301, type: !21)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !1, line: 1300, column: 41)
!4608 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1300, column: 9)
!4609 = !DILocation(line: 1263, column: 19, scope: !4592)
!4610 = !DILocation(line: 1263, column: 42, scope: !4592)
!4611 = !DILocation(line: 1264, column: 5, scope: !4592)
!4612 = !DILocation(line: 1264, column: 10, scope: !4592)
!4613 = !DILocation(line: 1265, column: 5, scope: !4592)
!4614 = !DILocation(line: 1265, column: 10, scope: !4592)
!4615 = !DILocation(line: 1267, column: 5, scope: !4592)
!4616 = !DILocation(line: 1268, column: 5, scope: !4592)
!4617 = !DILocation(line: 1268, column: 9, scope: !4592)
!4618 = !DILocation(line: 1270, column: 47, scope: !4592)
!4619 = !DILocation(line: 1270, column: 5, scope: !4592)
!4620 = !DILocation(line: 1271, column: 10, scope: !4592)
!4621 = !DILocation(line: 1266, column: 11, scope: !4592)
!4622 = !DILocation(line: 1272, column: 10, scope: !4605)
!4623 = !DILocation(line: 1272, column: 9, scope: !4592)
!4624 = !DILocation(line: 1273, column: 22, scope: !4604)
!4625 = !DILocation(line: 1273, column: 15, scope: !4604)
!4626 = !DILocation(line: 1278, column: 13, scope: !4604)
!4627 = !DILocation(line: 1279, column: 22, scope: !4604)
!4628 = !DILocation(line: 1279, column: 13, scope: !4604)
!4629 = !DILocation(line: 1274, column: 9, scope: !4604)
!4630 = !DILocation(line: 1267, column: 9, scope: !4592)
!4631 = !DILocation(line: 1283, column: 5, scope: !4592)
!4632 = !DILocation(line: 1285, column: 16, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1285, column: 9)
!4634 = !{!204, !192, i64 2020}
!4635 = !DILocation(line: 1285, column: 9, scope: !4633)
!4636 = !DILocation(line: 1285, column: 9, scope: !4592)
!4637 = !DILocation(line: 1286, column: 9, scope: !4633)
!4638 = !DILocation(line: 1288, column: 9, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1288, column: 9)
!4640 = !DILocation(line: 1288, column: 51, scope: !4639)
!4641 = !DILocation(line: 1288, column: 9, scope: !4592)
!4642 = !DILocation(line: 1289, column: 17, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4639, file: !1, line: 1288, column: 61)
!4644 = !DILocation(line: 1289, column: 9, scope: !4643)
!4645 = !DILocation(line: 1289, column: 15, scope: !4643)
!4646 = !DILocation(line: 1290, column: 9, scope: !4643)
!4647 = !DILocation(line: 1294, column: 9, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1294, column: 9)
!4649 = !DILocation(line: 1294, column: 20, scope: !4648)
!4650 = !DILocation(line: 1294, column: 9, scope: !4592)
!4651 = !DILocation(line: 1295, column: 15, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1295, column: 9)
!4653 = !DILocation(line: 1295, column: 9, scope: !4652)
!4654 = !DILocation(line: 1295, column: 27, scope: !4652)
!4655 = !DILocation(line: 1295, column: 9, scope: !4592)
!4656 = !DILocation(line: 1296, column: 9, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 1296, column: 9)
!4658 = !DILocation(line: 1296, column: 20, scope: !4657)
!4659 = !DILocation(line: 1296, column: 9, scope: !4592)
!4660 = !DILocation(line: 1300, column: 9, scope: !4608)
!4661 = !DILocation(line: 1300, column: 34, scope: !4608)
!4662 = !DILocation(line: 1300, column: 9, scope: !4592)
!4663 = !DILocation(line: 1301, column: 22, scope: !4607)
!4664 = !DILocation(line: 1301, column: 15, scope: !4607)
!4665 = !DILocation(line: 1307, column: 13, scope: !4607)
!4666 = !DILocation(line: 1308, column: 22, scope: !4607)
!4667 = !DILocation(line: 1308, column: 13, scope: !4607)
!4668 = !DILocation(line: 1302, column: 9, scope: !4607)
!4669 = !DILocation(line: 1309, column: 9, scope: !4607)
!4670 = !DILocation(line: 1313, column: 5, scope: !4592)
!4671 = !DILocation(line: 1314, column: 18, scope: !4592)
!4672 = !{!204, !206, i64 2080}
!4673 = !DILocation(line: 1315, column: 23, scope: !4592)
!4674 = !DILocation(line: 1315, column: 21, scope: !4592)
!4675 = !{!204, !205, i64 2136}
!4676 = !DILocation(line: 1316, column: 30, scope: !4592)
!4677 = !{!204, !192, i64 2176}
!4678 = !DILocation(line: 1317, column: 5, scope: !4592)
!4679 = !DILocation(line: 1320, column: 72, scope: !4592)
!4680 = !DILocation(line: 1320, column: 63, scope: !4592)
!4681 = !DILocation(line: 1320, column: 5, scope: !4592)
!4682 = !DILocation(line: 1321, column: 5, scope: !4592)
!4683 = !DILocation(line: 1322, column: 5, scope: !4592)
!4684 = !DILocation(line: 1323, column: 5, scope: !4592)
!4685 = !DILocation(line: 0, scope: !4604)
!4686 = !DILocation(line: 1324, column: 1, scope: !4592)
!4687 = distinct !DISubprogram(name: "rdbSaveBackground", scope: !1, file: !1, line: 1326, type: !4593, isLocal: false, isDefinition: true, scopeLine: 1326, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4688)
!4688 = !{!4689, !4690, !4691, !4694, !4695, !4698}
!4689 = !DILocalVariable(name: "filename", arg: 1, scope: !4687, file: !1, line: 1326, type: !21)
!4690 = !DILocalVariable(name: "rsi", arg: 2, scope: !4687, file: !1, line: 1326, type: !3980)
!4691 = !DILocalVariable(name: "childpid", scope: !4687, file: !1, line: 1327, type: !4692)
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !4693, line: 61, baseType: !20)
!4693 = !DIFile(filename: "/root/.unikraft/libs/newlib/musl-imported/include/signal.h", directory: "/root/.unikraft/apps/redis/build")
!4694 = !DILocalVariable(name: "start", scope: !4687, file: !1, line: 1328, type: !12)
!4695 = !DILocalVariable(name: "retval", scope: !4696, file: !1, line: 1338, type: !20)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !1, line: 1337, column: 35)
!4697 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 1337, column: 9)
!4698 = !DILocalVariable(name: "private_dirty", scope: !4699, file: !1, line: 1345, type: !550)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !1, line: 1344, column: 29)
!4700 = distinct !DILexicalBlock(scope: !4696, file: !1, line: 1344, column: 13)
!4701 = !DILocation(line: 1326, column: 29, scope: !4687)
!4702 = !DILocation(line: 1326, column: 52, scope: !4687)
!4703 = !DILocation(line: 1330, column: 16, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 1330, column: 9)
!4705 = !{!204, !192, i64 1940}
!4706 = !DILocation(line: 1330, column: 46, scope: !4704)
!4707 = !DILocation(line: 1330, column: 36, scope: !4704)
!4708 = !DILocation(line: 1332, column: 41, scope: !4687)
!4709 = !DILocation(line: 1332, column: 32, scope: !4687)
!4710 = !{!204, !206, i64 2088}
!4711 = !DILocation(line: 1333, column: 29, scope: !4687)
!4712 = !DILocation(line: 1333, column: 27, scope: !4687)
!4713 = !{!204, !205, i64 2144}
!4714 = !DILocation(line: 1334, column: 5, scope: !4687)
!4715 = !DILocation(line: 1336, column: 13, scope: !4687)
!4716 = !DILocation(line: 1328, column: 15, scope: !4687)
!4717 = !DILocation(line: 1337, column: 21, scope: !4697)
!4718 = !DILocation(line: 1327, column: 11, scope: !4687)
!4719 = !DILocation(line: 1337, column: 29, scope: !4697)
!4720 = !DILocation(line: 1337, column: 9, scope: !4687)
!4721 = !DILocation(line: 1341, column: 9, scope: !4696)
!4722 = !DILocation(line: 1342, column: 9, scope: !4696)
!4723 = !DILocation(line: 1343, column: 18, scope: !4696)
!4724 = !DILocation(line: 1338, column: 13, scope: !4696)
!4725 = !DILocation(line: 1344, column: 20, scope: !4700)
!4726 = !DILocation(line: 1344, column: 13, scope: !4696)
!4727 = !DILocation(line: 1345, column: 36, scope: !4699)
!4728 = !DILocation(line: 1345, column: 20, scope: !4699)
!4729 = !DILocation(line: 1347, column: 17, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4699, file: !1, line: 1347, column: 17)
!4731 = !DILocation(line: 1347, column: 17, scope: !4699)
!4732 = !DILocation(line: 1350, column: 34, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 1347, column: 32)
!4734 = !DILocation(line: 1348, column: 17, scope: !4733)
!4735 = !DILocation(line: 1351, column: 13, scope: !4733)
!4736 = !DILocation(line: 1353, column: 45, scope: !4699)
!4737 = !{!204, !205, i64 2208}
!4738 = !DILocation(line: 1354, column: 13, scope: !4699)
!4739 = !DILocation(line: 1355, column: 9, scope: !4699)
!4740 = !DILocation(line: 1356, column: 23, scope: !4696)
!4741 = !DILocation(line: 1356, column: 9, scope: !4696)
!4742 = !DILocation(line: 1376, column: 5, scope: !4687)
!4743 = !DILocation(line: 1359, column: 33, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4697, file: !1, line: 1357, column: 12)
!4745 = !DILocation(line: 1359, column: 41, scope: !4744)
!4746 = !DILocation(line: 1359, column: 31, scope: !4744)
!4747 = !{!204, !206, i64 1120}
!4748 = !DILocation(line: 1360, column: 42, scope: !4744)
!4749 = !DILocation(line: 1360, column: 33, scope: !4744)
!4750 = !DILocation(line: 1360, column: 64, scope: !4744)
!4751 = !DILocation(line: 1360, column: 83, scope: !4744)
!4752 = !DILocation(line: 1360, column: 76, scope: !4744)
!4753 = !DILocation(line: 1360, column: 74, scope: !4744)
!4754 = !DILocation(line: 1360, column: 98, scope: !4744)
!4755 = !DILocation(line: 1360, column: 31, scope: !4744)
!4756 = !{!204, !207, i64 1128}
!4757 = !DILocation(line: 1361, column: 9, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4744, file: !1, line: 1361, column: 9)
!4759 = !{!204, !206, i64 3096}
!4760 = !DILocation(line: 1361, column: 9, scope: !4744)
!4761 = !DILocation(line: 1362, column: 22, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4744, file: !1, line: 1362, column: 13)
!4763 = !DILocation(line: 1362, column: 13, scope: !4744)
!4764 = !DILocation(line: 1363, column: 13, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4762, file: !1, line: 1362, column: 29)
!4766 = !DILocation(line: 1364, column: 38, scope: !4765)
!4767 = !DILocation(line: 1366, column: 26, scope: !4765)
!4768 = !DILocation(line: 1366, column: 17, scope: !4765)
!4769 = !DILocation(line: 1365, column: 13, scope: !4765)
!4770 = !DILocation(line: 1367, column: 13, scope: !4765)
!4771 = !DILocation(line: 1369, column: 9, scope: !4744)
!4772 = !DILocation(line: 1370, column: 38, scope: !4744)
!4773 = !DILocation(line: 1370, column: 36, scope: !4744)
!4774 = !{!204, !205, i64 2160}
!4775 = !DILocation(line: 1371, column: 30, scope: !4744)
!4776 = !{!204, !192, i64 2096}
!4777 = !DILocation(line: 1372, column: 31, scope: !4744)
!4778 = !{!204, !192, i64 2172}
!4779 = !DILocation(line: 1373, column: 9, scope: !4744)
!4780 = !DILocation(line: 1374, column: 9, scope: !4744)
!4781 = !DILocation(line: 0, scope: !4744)
!4782 = !DILocation(line: 0, scope: !4704)
!4783 = !DILocation(line: 1377, column: 1, scope: !4687)
!4784 = distinct !DISubprogram(name: "rdbRemoveTempFile", scope: !1, file: !1, line: 1379, type: !4785, isLocal: false, isDefinition: true, scopeLine: 1379, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4787)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{null, !4692}
!4787 = !{!4788, !4789}
!4788 = !DILocalVariable(name: "childpid", arg: 1, scope: !4784, file: !1, line: 1379, type: !4692)
!4789 = !DILocalVariable(name: "tmpfile", scope: !4784, file: !1, line: 1380, type: !2401)
!4790 = !DILocation(line: 1379, column: 30, scope: !4784)
!4791 = !DILocation(line: 1380, column: 5, scope: !4784)
!4792 = !DILocation(line: 1380, column: 10, scope: !4784)
!4793 = !DILocation(line: 1382, column: 5, scope: !4784)
!4794 = !DILocation(line: 1383, column: 5, scope: !4784)
!4795 = !DILocation(line: 1384, column: 1, scope: !4784)
!4796 = distinct !DISubprogram(name: "rdbLoadCheckModuleValue", scope: !1, file: !1, line: 1390, type: !4797, isLocal: false, isDefinition: true, scopeLine: 1390, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4799)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!2090, !220, !21}
!4799 = !{!4800, !4801, !4802, !4803, !4807, !4810, !4813}
!4800 = !DILocalVariable(name: "rdb", arg: 1, scope: !4796, file: !1, line: 1390, type: !220)
!4801 = !DILocalVariable(name: "modulename", arg: 2, scope: !4796, file: !1, line: 1390, type: !21)
!4802 = !DILocalVariable(name: "opcode", scope: !4796, file: !1, line: 1391, type: !55)
!4803 = !DILocalVariable(name: "len", scope: !4804, file: !1, line: 1396, type: !55)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 1395, column: 9)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !1, line: 1393, column: 13)
!4806 = distinct !DILexicalBlock(scope: !4796, file: !1, line: 1392, column: 69)
!4807 = !DILocalVariable(name: "o", scope: !4808, file: !1, line: 1402, type: !2090)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1401, column: 56)
!4809 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 1401, column: 20)
!4810 = !DILocalVariable(name: "val", scope: !4811, file: !1, line: 1409, type: !2575)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1408, column: 55)
!4812 = distinct !DILexicalBlock(scope: !4809, file: !1, line: 1408, column: 20)
!4813 = !DILocalVariable(name: "val", scope: !4814, file: !1, line: 1415, type: !94)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !1, line: 1414, column: 56)
!4815 = distinct !DILexicalBlock(scope: !4812, file: !1, line: 1414, column: 20)
!4816 = !DILocation(line: 1390, column: 36, scope: !4796)
!4817 = !DILocation(line: 1390, column: 47, scope: !4796)
!4818 = !DILocation(line: 1392, column: 5, scope: !4796)
!4819 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !4820)
!4820 = distinct !DILocation(line: 1392, column: 21, scope: !4796)
!4821 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !4820)
!4822 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !4820)
!4823 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !4820)
!4824 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !4820)
!4825 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !4820)
!4826 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !4820)
!4827 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !4820)
!4828 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !4820)
!4829 = !DILocation(line: 1391, column: 14, scope: !4796)
!4830 = !DILocation(line: 1393, column: 46, scope: !4805)
!4831 = !DILocation(line: 1401, column: 20, scope: !4805)
!4832 = !DILocation(line: 1408, column: 20, scope: !4809)
!4833 = !DILocation(line: 1414, column: 20, scope: !4812)
!4834 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !4820)
!4835 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !4820)
!4836 = !DILocation(line: 1392, column: 43, scope: !4796)
!4837 = !DILocation(line: 1396, column: 13, scope: !4804)
!4838 = !DILocation(line: 1396, column: 22, scope: !4804)
!4839 = !DILocation(line: 1397, column: 17, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4804, file: !1, line: 1397, column: 17)
!4841 = !DILocation(line: 1397, column: 48, scope: !4840)
!4842 = !DILocation(line: 1397, column: 17, scope: !4804)
!4843 = !DILocation(line: 1398, column: 17, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4840, file: !1, line: 1397, column: 55)
!4845 = !DILocation(line: 1401, column: 9, scope: !4805)
!4846 = !DILocation(line: 1401, column: 9, scope: !4804)
!4847 = !DILocation(line: 1401, column: 27, scope: !4809)
!4848 = !DILocation(line: 1402, column: 23, scope: !4808)
!4849 = !DILocation(line: 1403, column: 19, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4808, file: !1, line: 1403, column: 17)
!4851 = !DILocation(line: 1403, column: 17, scope: !4808)
!4852 = !DILocation(line: 1404, column: 17, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4850, file: !1, line: 1403, column: 28)
!4854 = !DILocation(line: 1402, column: 19, scope: !4808)
!4855 = !DILocation(line: 1407, column: 13, scope: !4808)
!4856 = !DILocation(line: 1408, column: 9, scope: !4808)
!4857 = !DILocation(line: 1408, column: 27, scope: !4812)
!4858 = !DILocation(line: 1409, column: 13, scope: !4811)
!4859 = !DILocation(line: 1409, column: 19, scope: !4811)
!4860 = !DILocation(line: 618, column: 34, scope: !2621, inlinedAt: !4861)
!4861 = distinct !DILocation(line: 1410, column: 17, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 1410, column: 17)
!4863 = !DILocation(line: 618, column: 46, scope: !2621, inlinedAt: !4861)
!4864 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !4865)
!4865 = distinct !DILocation(line: 619, column: 9, scope: !2631, inlinedAt: !4861)
!4866 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !4865)
!4867 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !4865)
!4868 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !4865)
!4869 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !4865)
!4870 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !4865)
!4871 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !4865)
!4872 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !4865)
!4873 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !4865)
!4874 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !4865)
!4875 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !4865)
!4876 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !4865)
!4877 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !4865)
!4878 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !4865)
!4879 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !4865)
!4880 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !4865)
!4881 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !4865)
!4882 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !4865)
!4883 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !4865)
!4884 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !4865)
!4885 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !4865)
!4886 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !4865)
!4887 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !4865)
!4888 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !4865)
!4889 = !DILocation(line: 619, column: 9, scope: !2621, inlinedAt: !4861)
!4890 = !DILocation(line: 0, scope: !2621, inlinedAt: !4861)
!4891 = !DILocation(line: 622, column: 1, scope: !2621, inlinedAt: !4861)
!4892 = !DILocation(line: 1410, column: 17, scope: !4811)
!4893 = !DILocation(line: 1411, column: 17, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4862, file: !1, line: 1410, column: 58)
!4895 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !4865)
!4896 = !DILocation(line: 1414, column: 9, scope: !4812)
!4897 = !DILocation(line: 1414, column: 9, scope: !4811)
!4898 = !DILocation(line: 1414, column: 27, scope: !4815)
!4899 = !DILocation(line: 1415, column: 13, scope: !4814)
!4900 = !DILocation(line: 1415, column: 20, scope: !4814)
!4901 = !DILocation(line: 605, column: 35, scope: !2535, inlinedAt: !4902)
!4902 = distinct !DILocation(line: 1416, column: 17, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4814, file: !1, line: 1416, column: 17)
!4904 = !DILocation(line: 605, column: 48, scope: !2535, inlinedAt: !4902)
!4905 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !4906)
!4906 = distinct !DILocation(line: 606, column: 9, scope: !2542, inlinedAt: !4902)
!4907 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !4906)
!4908 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !4906)
!4909 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !4906)
!4910 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !4906)
!4911 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !4906)
!4912 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !4906)
!4913 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !4906)
!4914 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !4906)
!4915 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !4906)
!4916 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !4906)
!4917 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !4906)
!4918 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !4906)
!4919 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !4906)
!4920 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !4906)
!4921 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !4906)
!4922 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !4906)
!4923 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !4906)
!4924 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !4906)
!4925 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !4906)
!4926 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !4906)
!4927 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !4906)
!4928 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !4906)
!4929 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !4906)
!4930 = !DILocation(line: 606, column: 9, scope: !2535, inlinedAt: !4902)
!4931 = !DILocation(line: 0, scope: !2535, inlinedAt: !4902)
!4932 = !DILocation(line: 609, column: 1, scope: !2535, inlinedAt: !4902)
!4933 = !DILocation(line: 1416, column: 17, scope: !4814)
!4934 = !DILocation(line: 1417, column: 17, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4903, file: !1, line: 1416, column: 59)
!4936 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !4906)
!4937 = !DILocation(line: 1420, column: 9, scope: !4815)
!4938 = !DILocation(line: 1420, column: 9, scope: !4814)
!4939 = !DILocation(line: 0, scope: !4804)
!4940 = distinct !{!4940, !4818, !4941}
!4941 = !DILocation(line: 1421, column: 5, scope: !4796)
!4942 = !DILocation(line: 1422, column: 12, scope: !4796)
!4943 = !DILocation(line: 1422, column: 5, scope: !4796)
!4944 = distinct !DISubprogram(name: "rdbLoadObject", scope: !1, file: !1, line: 1427, type: !4945, isLocal: false, isDefinition: true, scopeLine: 1427, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !4947)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!2090, !20, !220, !2090}
!4947 = !{!4948, !4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4961, !4967, !4968, !4971, !4972, !4973, !4975, !4976, !4977, !4980, !4981, !4982, !4983, !4987, !4990, !4993, !4994, !4995, !4996, !4997, !4998, !4999, !5002, !5003, !5005, !5006, !5007, !5008, !5009, !5011, !5012, !5013, !5014, !5019, !5020, !5021, !5023, !5024, !5026, !5027, !5030, !5031, !5032, !5033, !5034}
!4948 = !DILocalVariable(name: "rdbtype", arg: 1, scope: !4944, file: !1, line: 1427, type: !20)
!4949 = !DILocalVariable(name: "rdb", arg: 2, scope: !4944, file: !1, line: 1427, type: !220)
!4950 = !DILocalVariable(name: "key", arg: 3, scope: !4944, file: !1, line: 1427, type: !2090)
!4951 = !DILocalVariable(name: "o", scope: !4944, file: !1, line: 1428, type: !2090)
!4952 = !DILocalVariable(name: "ele", scope: !4944, file: !1, line: 1428, type: !2090)
!4953 = !DILocalVariable(name: "dec", scope: !4944, file: !1, line: 1428, type: !2090)
!4954 = !DILocalVariable(name: "len", scope: !4944, file: !1, line: 1429, type: !55)
!4955 = !DILocalVariable(name: "i", scope: !4944, file: !1, line: 1430, type: !33)
!4956 = !DILocalVariable(name: "len", scope: !4957, file: !1, line: 1448, type: !550)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !1, line: 1445, column: 22)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !1, line: 1436, column: 42)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !1, line: 1436, column: 16)
!4960 = distinct !DILexicalBlock(scope: !4944, file: !1, line: 1432, column: 9)
!4961 = !DILocalVariable(name: "llval", scope: !4962, file: !1, line: 1470, type: !12)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !1, line: 1469, column: 35)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !1, line: 1469, column: 9)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1469, column: 9)
!4965 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 1453, column: 41)
!4966 = distinct !DILexicalBlock(scope: !4959, file: !1, line: 1453, column: 16)
!4967 = !DILocalVariable(name: "sdsele", scope: !4962, file: !1, line: 1471, type: !261)
!4968 = !DILocalVariable(name: "zsetlen", scope: !4969, file: !1, line: 1496, type: !55)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !1, line: 1494, column: 72)
!4970 = distinct !DILexicalBlock(scope: !4966, file: !1, line: 1494, column: 16)
!4971 = !DILocalVariable(name: "maxelelen", scope: !4969, file: !1, line: 1497, type: !550)
!4972 = !DILocalVariable(name: "zs", scope: !4969, file: !1, line: 1498, type: !3073)
!4973 = !DILocalVariable(name: "sdsele", scope: !4974, file: !1, line: 1509, type: !261)
!4974 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1508, column: 26)
!4975 = !DILocalVariable(name: "score", scope: !4974, file: !1, line: 1510, type: !94)
!4976 = !DILocalVariable(name: "znode", scope: !4974, file: !1, line: 1511, type: !3101)
!4977 = !DILocalVariable(name: "len", scope: !4978, file: !1, line: 1534, type: !55)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !1, line: 1533, column: 42)
!4979 = distinct !DILexicalBlock(scope: !4970, file: !1, line: 1533, column: 16)
!4980 = !DILocalVariable(name: "ret", scope: !4978, file: !1, line: 1535, type: !20)
!4981 = !DILocalVariable(name: "field", scope: !4978, file: !1, line: 1536, type: !261)
!4982 = !DILocalVariable(name: "value", scope: !4978, file: !1, line: 1536, type: !261)
!4983 = !DILocalVariable(name: "zl", scope: !4984, file: !1, line: 1603, type: !23)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !1, line: 1602, column: 23)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !1, line: 1596, column: 52)
!4986 = distinct !DILexicalBlock(scope: !4979, file: !1, line: 1596, column: 16)
!4987 = !DILocalVariable(name: "encoded", scope: !4988, file: !1, line: 1614, type: !23)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !1, line: 1613, column: 5)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !1, line: 1608, column: 16)
!4990 = !DILocalVariable(name: "zl", scope: !4991, file: !1, line: 1630, type: !23)
!4991 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1629, column: 17)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !1, line: 1625, column: 25)
!4993 = !DILocalVariable(name: "zi", scope: !4991, file: !1, line: 1631, type: !23)
!4994 = !DILocalVariable(name: "fstr", scope: !4991, file: !1, line: 1632, type: !23)
!4995 = !DILocalVariable(name: "vstr", scope: !4991, file: !1, line: 1632, type: !23)
!4996 = !DILocalVariable(name: "flen", scope: !4991, file: !1, line: 1633, type: !33)
!4997 = !DILocalVariable(name: "vlen", scope: !4991, file: !1, line: 1633, type: !33)
!4998 = !DILocalVariable(name: "maxlen", scope: !4991, file: !1, line: 1634, type: !33)
!4999 = !DILocalVariable(name: "s", scope: !5000, file: !1, line: 1684, type: !3118)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !1, line: 1682, column: 54)
!5001 = distinct !DILexicalBlock(scope: !4989, file: !1, line: 1682, column: 16)
!5002 = !DILocalVariable(name: "listpacks", scope: !5000, file: !1, line: 1685, type: !55)
!5003 = !DILocalVariable(name: "nodekey", scope: !5004, file: !1, line: 1691, type: !261)
!5004 = distinct !DILexicalBlock(scope: !5000, file: !1, line: 1687, column: 28)
!5005 = !DILocalVariable(name: "lp", scope: !5004, file: !1, line: 1701, type: !23)
!5006 = !DILocalVariable(name: "first", scope: !5004, file: !1, line: 1704, type: !23)
!5007 = !DILocalVariable(name: "retval", scope: !5004, file: !1, line: 1713, type: !20)
!5008 = !DILocalVariable(name: "cgroups_count", scope: !5000, file: !1, line: 1726, type: !550)
!5009 = !DILocalVariable(name: "cg_id", scope: !5010, file: !1, line: 1731, type: !2927)
!5010 = distinct !DILexicalBlock(scope: !5000, file: !1, line: 1727, column: 32)
!5011 = !DILocalVariable(name: "cgname", scope: !5010, file: !1, line: 1732, type: !261)
!5012 = !DILocalVariable(name: "cgroup", scope: !5010, file: !1, line: 1739, type: !2922)
!5013 = !DILocalVariable(name: "pel_size", scope: !5010, file: !1, line: 1750, type: !550)
!5014 = !DILocalVariable(name: "rawid", scope: !5015, file: !1, line: 1752, type: !5016)
!5015 = distinct !DILexicalBlock(scope: !5010, file: !1, line: 1751, column: 31)
!5016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !24, size: 128, elements: !5017)
!5017 = !{!5018}
!5018 = !DISubrange(count: 16)
!5019 = !DILocalVariable(name: "nack", scope: !5015, file: !1, line: 1754, type: !2815)
!5020 = !DILocalVariable(name: "consumers_num", scope: !5010, file: !1, line: 1764, type: !550)
!5021 = !DILocalVariable(name: "cname", scope: !5022, file: !1, line: 1766, type: !261)
!5022 = distinct !DILexicalBlock(scope: !5010, file: !1, line: 1765, column: 36)
!5023 = !DILocalVariable(name: "consumer", scope: !5022, file: !1, line: 1771, type: !2824)
!5024 = !DILocalVariable(name: "rawid", scope: !5025, file: !1, line: 1780, type: !5016)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !1, line: 1779, column: 35)
!5026 = !DILocalVariable(name: "nack", scope: !5025, file: !1, line: 1782, type: !2815)
!5027 = !DILocalVariable(name: "moduleid", scope: !5028, file: !1, line: 1799, type: !55)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !1, line: 1798, column: 76)
!5029 = distinct !DILexicalBlock(scope: !5001, file: !1, line: 1798, column: 16)
!5030 = !DILocalVariable(name: "mt", scope: !5028, file: !1, line: 1800, type: !3145)
!5031 = !DILocalVariable(name: "name", scope: !5028, file: !1, line: 1801, type: !3205)
!5032 = !DILocalVariable(name: "io", scope: !5028, file: !1, line: 1813, type: !3139)
!5033 = !DILocalVariable(name: "ptr", scope: !5028, file: !1, line: 1818, type: !13)
!5034 = !DILocalVariable(name: "eof", scope: !5035, file: !1, line: 1826, type: !55)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !1, line: 1825, column: 26)
!5036 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 1825, column: 13)
!5037 = !DILocation(line: 1427, column: 25, scope: !4944)
!5038 = !DILocation(line: 1427, column: 39, scope: !4944)
!5039 = !DILocation(line: 1427, column: 50, scope: !4944)
!5040 = !DILocation(line: 1428, column: 11, scope: !4944)
!5041 = !DILocation(line: 1432, column: 17, scope: !4960)
!5042 = !DILocation(line: 1432, column: 9, scope: !4944)
!5043 = !DILocation(line: 529, column: 39, scope: !2307, inlinedAt: !5044)
!5044 = distinct !DILocation(line: 1434, column: 18, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5046, file: !1, line: 1434, column: 13)
!5046 = distinct !DILexicalBlock(scope: !4960, file: !1, line: 1432, column: 37)
!5047 = !DILocation(line: 530, column: 12, scope: !2307, inlinedAt: !5044)
!5048 = !DILocation(line: 530, column: 5, scope: !2307, inlinedAt: !5044)
!5049 = !DILocation(line: 1434, column: 51, scope: !5045)
!5050 = !DILocation(line: 1434, column: 13, scope: !5046)
!5051 = !DILocation(line: 1435, column: 13, scope: !5046)
!5052 = !DILocation(line: 1436, column: 5, scope: !5046)
!5053 = !DILocation(line: 1436, column: 24, scope: !4959)
!5054 = !DILocation(line: 1436, column: 16, scope: !4960)
!5055 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5056)
!5056 = distinct !DILocation(line: 1438, column: 20, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !4958, file: !1, line: 1438, column: 13)
!5058 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5056)
!5059 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5056)
!5060 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5056)
!5061 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5056)
!5062 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5056)
!5063 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5056)
!5064 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5056)
!5065 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5056)
!5066 = !DILocation(line: 1429, column: 14, scope: !4944)
!5067 = !DILocation(line: 1438, column: 13, scope: !4958)
!5068 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5056)
!5069 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5056)
!5070 = !DILocation(line: 1438, column: 42, scope: !5057)
!5071 = !DILocation(line: 1440, column: 13, scope: !4958)
!5072 = !DILocation(line: 1441, column: 32, scope: !4958)
!5073 = !DILocation(line: 1441, column: 44, scope: !4958)
!5074 = !{!204, !192, i64 2864}
!5075 = !DILocation(line: 1442, column: 36, scope: !4958)
!5076 = !{!204, !192, i64 2868}
!5077 = !DILocation(line: 1441, column: 9, scope: !4958)
!5078 = !DILocation(line: 1445, column: 9, scope: !4958)
!5079 = !DILocation(line: 1445, column: 18, scope: !4958)
!5080 = !DILocation(line: 529, column: 39, scope: !2307, inlinedAt: !5081)
!5081 = distinct !DILocation(line: 1446, column: 24, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !4957, file: !1, line: 1446, column: 17)
!5083 = !DILocation(line: 530, column: 12, scope: !2307, inlinedAt: !5081)
!5084 = !DILocation(line: 530, column: 5, scope: !2307, inlinedAt: !5081)
!5085 = !DILocation(line: 1428, column: 22, scope: !4944)
!5086 = !DILocation(line: 1446, column: 57, scope: !5082)
!5087 = !DILocation(line: 1446, column: 17, scope: !4957)
!5088 = !DILocation(line: 1447, column: 19, scope: !4957)
!5089 = !DILocation(line: 1428, column: 28, scope: !4944)
!5090 = !DILocation(line: 1448, column: 38, scope: !4957)
!5091 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5092)
!5092 = distinct !DILocation(line: 1448, column: 26, scope: !4957)
!5093 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5092)
!5094 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5092)
!5095 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5092)
!5096 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5092)
!5097 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5092)
!5098 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5092)
!5099 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5092)
!5100 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5092)
!5101 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5092)
!5102 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5092)
!5103 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5092)
!5104 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5092)
!5105 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5092)
!5106 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5092)
!5107 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5092)
!5108 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5092)
!5109 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5092)
!5110 = !DILocation(line: 0, scope: !2131, inlinedAt: !5092)
!5111 = !DILocation(line: 0, scope: !4957)
!5112 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5092)
!5113 = !DILocation(line: 1448, column: 20, scope: !4957)
!5114 = !DILocation(line: 1449, column: 34, scope: !4957)
!5115 = !DILocation(line: 1449, column: 13, scope: !4957)
!5116 = !DILocation(line: 1450, column: 13, scope: !4957)
!5117 = !DILocation(line: 1451, column: 13, scope: !4957)
!5118 = distinct !{!5118, !5078, !5119}
!5119 = !DILocation(line: 1452, column: 9, scope: !4958)
!5120 = !DILocation(line: 1453, column: 24, scope: !4966)
!5121 = !DILocation(line: 1453, column: 16, scope: !4959)
!5122 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5123)
!5123 = distinct !DILocation(line: 1455, column: 20, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1455, column: 13)
!5125 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5123)
!5126 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5123)
!5127 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5123)
!5128 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5123)
!5129 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5123)
!5130 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5123)
!5131 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5123)
!5132 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5123)
!5133 = !DILocation(line: 1455, column: 13, scope: !4965)
!5134 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5123)
!5135 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5123)
!5136 = !DILocation(line: 1455, column: 42, scope: !5124)
!5137 = !DILocation(line: 1458, column: 26, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !4965, file: !1, line: 1458, column: 13)
!5139 = !{!204, !205, i64 2816}
!5140 = !DILocation(line: 1458, column: 17, scope: !5138)
!5141 = !DILocation(line: 1458, column: 13, scope: !4965)
!5142 = !DILocation(line: 1459, column: 17, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 1458, column: 50)
!5144 = !DILocation(line: 1462, column: 21, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5143, file: !1, line: 1462, column: 17)
!5146 = !DILocation(line: 1462, column: 17, scope: !5143)
!5147 = !DILocation(line: 1463, column: 31, scope: !5145)
!5148 = !DILocation(line: 1463, column: 17, scope: !5145)
!5149 = !DILocation(line: 1430, column: 18, scope: !4944)
!5150 = !DILocation(line: 1469, column: 14, scope: !4964)
!5151 = !DILocation(line: 1469, column: 9, scope: !4964)
!5152 = !DILocation(line: 1465, column: 17, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5138, file: !1, line: 1464, column: 16)
!5154 = !DILocation(line: 1469, column: 23, scope: !4963)
!5155 = !DILocation(line: 1470, column: 13, scope: !4962)
!5156 = !DILocation(line: 1473, column: 27, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !4962, file: !1, line: 1473, column: 17)
!5158 = !DILocation(line: 1471, column: 17, scope: !4962)
!5159 = !DILocation(line: 1474, column: 17, scope: !5157)
!5160 = !DILocation(line: 1473, column: 17, scope: !4962)
!5161 = !DILocation(line: 1474, column: 26, scope: !5157)
!5162 = !DILocation(line: 1493, column: 9, scope: !4963)
!5163 = !DILocation(line: 1476, column: 20, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !4962, file: !1, line: 1476, column: 17)
!5165 = !DILocation(line: 1476, column: 29, scope: !5164)
!5166 = !DILocation(line: 1476, column: 17, scope: !4962)
!5167 = !DILocation(line: 1470, column: 23, scope: !4962)
!5168 = !DILocation(line: 1478, column: 21, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !1, line: 1478, column: 21)
!5170 = distinct !DILexicalBlock(scope: !5164, file: !1, line: 1476, column: 53)
!5171 = !DILocation(line: 1478, column: 65, scope: !5169)
!5172 = !DILocation(line: 1478, column: 21, scope: !5170)
!5173 = !DILocation(line: 1479, column: 43, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 1478, column: 74)
!5175 = !DILocation(line: 1479, column: 47, scope: !5174)
!5176 = !{!206, !206, i64 0}
!5177 = !DILocation(line: 1479, column: 30, scope: !5174)
!5178 = !DILocation(line: 1479, column: 28, scope: !5174)
!5179 = !DILocation(line: 1480, column: 17, scope: !5174)
!5180 = !DILocation(line: 1481, column: 21, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 1480, column: 24)
!5182 = !DILocation(line: 1482, column: 35, scope: !5181)
!5183 = !DILocation(line: 1482, column: 21, scope: !5181)
!5184 = !DILocation(line: 1488, column: 20, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !4962, file: !1, line: 1488, column: 17)
!5186 = !DILocation(line: 1488, column: 29, scope: !5185)
!5187 = !DILocation(line: 1488, column: 17, scope: !4962)
!5188 = !DILocation(line: 1489, column: 35, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1488, column: 49)
!5190 = !DILocation(line: 1489, column: 17, scope: !5189)
!5191 = !DILocation(line: 1490, column: 13, scope: !5189)
!5192 = !DILocation(line: 1491, column: 17, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1490, column: 20)
!5194 = !DILocation(line: 1469, column: 31, scope: !4963)
!5195 = !DILocation(line: 1469, column: 9, scope: !4963)
!5196 = !DILocation(line: 1469, column: 21, scope: !4963)
!5197 = distinct !{!5197, !5151, !5198}
!5198 = !DILocation(line: 1493, column: 9, scope: !4964)
!5199 = !DILocation(line: 1494, column: 24, scope: !4970)
!5200 = !DILocation(line: 1494, column: 43, scope: !4970)
!5201 = !DILocation(line: 1497, column: 16, scope: !4969)
!5202 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5203)
!5203 = distinct !DILocation(line: 1500, column: 24, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1500, column: 13)
!5205 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5203)
!5206 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5203)
!5207 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5203)
!5208 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5203)
!5209 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5203)
!5210 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5203)
!5211 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5203)
!5212 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5203)
!5213 = !DILocation(line: 1496, column: 18, scope: !4969)
!5214 = !DILocation(line: 1500, column: 13, scope: !4969)
!5215 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5203)
!5216 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5203)
!5217 = !DILocation(line: 1500, column: 46, scope: !5204)
!5218 = !DILocation(line: 1501, column: 13, scope: !4969)
!5219 = !DILocation(line: 1502, column: 17, scope: !4969)
!5220 = !DILocation(line: 1498, column: 15, scope: !4969)
!5221 = !DILocation(line: 1504, column: 21, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1504, column: 13)
!5223 = !DILocation(line: 1504, column: 13, scope: !4969)
!5224 = !DILocation(line: 1505, column: 28, scope: !5222)
!5225 = !{!3385, !201, i64 0}
!5226 = !DILocation(line: 1505, column: 13, scope: !5222)
!5227 = !DILocation(line: 1508, column: 9, scope: !4969)
!5228 = !DILocation(line: 1508, column: 22, scope: !4969)
!5229 = !DILocation(line: 1510, column: 13, scope: !4974)
!5230 = !DILocation(line: 1513, column: 27, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !4974, file: !1, line: 1513, column: 17)
!5232 = !DILocation(line: 1509, column: 17, scope: !4974)
!5233 = !DILocation(line: 1514, column: 17, scope: !5231)
!5234 = !DILocation(line: 1513, column: 17, scope: !4974)
!5235 = !DILocation(line: 0, scope: !4974)
!5236 = !DILocation(line: 1510, column: 20, scope: !4974)
!5237 = !DILocation(line: 1516, column: 17, scope: !4974)
!5238 = !DILocation(line: 605, column: 35, scope: !2535, inlinedAt: !5239)
!5239 = distinct !DILocation(line: 1517, column: 21, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5241, file: !1, line: 1517, column: 21)
!5241 = distinct !DILexicalBlock(scope: !5242, file: !1, line: 1516, column: 45)
!5242 = distinct !DILexicalBlock(scope: !4974, file: !1, line: 1516, column: 17)
!5243 = !DILocation(line: 605, column: 48, scope: !2535, inlinedAt: !5239)
!5244 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !5245)
!5245 = distinct !DILocation(line: 606, column: 9, scope: !2542, inlinedAt: !5239)
!5246 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !5245)
!5247 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !5245)
!5248 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !5245)
!5249 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !5245)
!5250 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !5245)
!5251 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !5245)
!5252 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !5245)
!5253 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !5245)
!5254 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !5245)
!5255 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !5245)
!5256 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !5245)
!5257 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !5245)
!5258 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !5245)
!5259 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !5245)
!5260 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !5245)
!5261 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !5245)
!5262 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !5245)
!5263 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !5245)
!5264 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !5245)
!5265 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !5245)
!5266 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !5245)
!5267 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !5245)
!5268 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !5245)
!5269 = !DILocation(line: 606, column: 9, scope: !2535, inlinedAt: !5239)
!5270 = !DILocation(line: 0, scope: !2535, inlinedAt: !5239)
!5271 = !DILocation(line: 609, column: 1, scope: !2535, inlinedAt: !5239)
!5272 = !DILocation(line: 1517, column: 21, scope: !5241)
!5273 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !5245)
!5274 = !DILocation(line: 1517, column: 65, scope: !5240)
!5275 = !DILocation(line: 1519, column: 21, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5277, file: !1, line: 1519, column: 21)
!5277 = distinct !DILexicalBlock(scope: !5242, file: !1, line: 1518, column: 20)
!5278 = !DILocation(line: 1519, column: 52, scope: !5276)
!5279 = !DILocation(line: 1519, column: 21, scope: !5277)
!5280 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5281)
!5281 = distinct !DILocation(line: 1523, column: 17, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !4974, file: !1, line: 1523, column: 17)
!5283 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5281)
!5284 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5281)
!5285 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5281)
!5286 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5281)
!5287 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5281)
!5288 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5281)
!5289 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5281)
!5290 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5281)
!5291 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5281)
!5292 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5281)
!5293 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5281)
!5294 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5281)
!5295 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5281)
!5296 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5281)
!5297 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5281)
!5298 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5281)
!5299 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5281)
!5300 = !DILocation(line: 0, scope: !2131, inlinedAt: !5281)
!5301 = !DILocation(line: 0, scope: !5282)
!5302 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5281)
!5303 = !DILocation(line: 1523, column: 32, scope: !5282)
!5304 = !DILocation(line: 1523, column: 17, scope: !4974)
!5305 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5306)
!5306 = distinct !DILocation(line: 1523, column: 57, scope: !5282)
!5307 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5306)
!5308 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5306)
!5309 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5306)
!5310 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5306)
!5311 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5306)
!5312 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5306)
!5313 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5306)
!5314 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5306)
!5315 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5306)
!5316 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5306)
!5317 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5306)
!5318 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5306)
!5319 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5306)
!5320 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5306)
!5321 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5306)
!5322 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5306)
!5323 = !DILocation(line: 0, scope: !5276)
!5324 = !DILocation(line: 1527, column: 9, scope: !4969)
!5325 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5306)
!5326 = !DILocation(line: 1525, column: 35, scope: !4974)
!5327 = !DILocation(line: 0, scope: !4969)
!5328 = !DILocation(line: 1525, column: 39, scope: !4974)
!5329 = !DILocation(line: 1525, column: 21, scope: !4974)
!5330 = !DILocation(line: 1511, column: 28, scope: !4974)
!5331 = !DILocation(line: 1526, column: 25, scope: !4974)
!5332 = !DILocation(line: 1526, column: 45, scope: !4974)
!5333 = !DILocation(line: 1526, column: 37, scope: !4974)
!5334 = !DILocation(line: 1526, column: 13, scope: !4974)
!5335 = !DILocation(line: 1530, column: 13, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !4969, file: !1, line: 1530, column: 13)
!5337 = !DILocation(line: 1530, column: 37, scope: !5336)
!5338 = !{!204, !205, i64 2824}
!5339 = !DILocation(line: 1530, column: 27, scope: !5336)
!5340 = !DILocation(line: 1530, column: 62, scope: !5336)
!5341 = !DILocation(line: 1531, column: 33, scope: !5336)
!5342 = !{!204, !205, i64 2832}
!5343 = !DILocation(line: 1531, column: 23, scope: !5336)
!5344 = !DILocation(line: 1530, column: 13, scope: !4969)
!5345 = !DILocation(line: 1532, column: 17, scope: !5336)
!5346 = !DILocation(line: 1533, column: 5, scope: !4970)
!5347 = !DILocation(line: 1533, column: 24, scope: !4979)
!5348 = !DILocation(line: 1533, column: 16, scope: !4970)
!5349 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5350)
!5350 = distinct !DILocation(line: 1538, column: 15, scope: !4978)
!5351 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5350)
!5352 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5350)
!5353 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5350)
!5354 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5350)
!5355 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5350)
!5356 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5350)
!5357 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5350)
!5358 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5350)
!5359 = !DILocation(line: 1534, column: 18, scope: !4978)
!5360 = !DILocation(line: 1539, column: 13, scope: !4978)
!5361 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5350)
!5362 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5350)
!5363 = !DILocation(line: 1539, column: 17, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 1539, column: 13)
!5365 = !DILocation(line: 1541, column: 13, scope: !4978)
!5366 = !DILocation(line: 1544, column: 26, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 1544, column: 13)
!5368 = !{!204, !205, i64 2800}
!5369 = !DILocation(line: 1544, column: 17, scope: !5367)
!5370 = !DILocation(line: 1544, column: 13, scope: !4978)
!5371 = !DILocation(line: 1545, column: 13, scope: !5367)
!5372 = !DILocation(line: 1548, column: 9, scope: !4978)
!5373 = !DILocation(line: 1548, column: 19, scope: !4978)
!5374 = !DILocation(line: 1548, column: 28, scope: !4978)
!5375 = !DILocation(line: 1548, column: 59, scope: !4978)
!5376 = !DILocation(line: 1548, column: 52, scope: !4978)
!5377 = !DILocation(line: 1549, column: 16, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 1548, column: 64)
!5379 = !DILocation(line: 1551, column: 26, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5378, file: !1, line: 1551, column: 17)
!5381 = !DILocation(line: 1536, column: 13, scope: !4978)
!5382 = !DILocation(line: 1552, column: 17, scope: !5380)
!5383 = !DILocation(line: 1551, column: 17, scope: !5378)
!5384 = !DILocation(line: 1553, column: 26, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5378, file: !1, line: 1553, column: 17)
!5386 = !DILocation(line: 1536, column: 20, scope: !4978)
!5387 = !DILocation(line: 1554, column: 17, scope: !5385)
!5388 = !DILocation(line: 1553, column: 17, scope: !5378)
!5389 = !DILocation(line: 1557, column: 37, scope: !5378)
!5390 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5391)
!5391 = distinct !DILocation(line: 1558, column: 21, scope: !5378)
!5392 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5391)
!5393 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5391)
!5394 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5391)
!5395 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5391)
!5396 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5391)
!5397 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5391)
!5398 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5391)
!5399 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5391)
!5400 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5391)
!5401 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5391)
!5402 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5391)
!5403 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5391)
!5404 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5391)
!5405 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5391)
!5406 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5391)
!5407 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5391)
!5408 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5391)
!5409 = !DILocation(line: 0, scope: !2131, inlinedAt: !5391)
!5410 = !DILocation(line: 0, scope: !5378)
!5411 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5391)
!5412 = !DILocation(line: 1558, column: 21, scope: !5378)
!5413 = !DILocation(line: 1557, column: 22, scope: !5378)
!5414 = !DILocation(line: 1557, column: 20, scope: !5378)
!5415 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5416)
!5416 = distinct !DILocation(line: 1560, column: 21, scope: !5378)
!5417 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5416)
!5418 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5416)
!5419 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5416)
!5420 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5416)
!5421 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5416)
!5422 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5416)
!5423 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5416)
!5424 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5416)
!5425 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5416)
!5426 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5416)
!5427 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5416)
!5428 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5416)
!5429 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5416)
!5430 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5416)
!5431 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5416)
!5432 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5416)
!5433 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5416)
!5434 = !DILocation(line: 0, scope: !2131, inlinedAt: !5416)
!5435 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5416)
!5436 = !DILocation(line: 1560, column: 21, scope: !5378)
!5437 = !DILocation(line: 1559, column: 22, scope: !5378)
!5438 = !DILocation(line: 1559, column: 20, scope: !5378)
!5439 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5440)
!5440 = distinct !DILocation(line: 1563, column: 17, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5378, file: !1, line: 1563, column: 17)
!5442 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5440)
!5443 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5440)
!5444 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5440)
!5445 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5440)
!5446 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5440)
!5447 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5440)
!5448 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5440)
!5449 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5440)
!5450 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5440)
!5451 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5440)
!5452 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5440)
!5453 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5440)
!5454 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5440)
!5455 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5440)
!5456 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5440)
!5457 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5440)
!5458 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5440)
!5459 = !DILocation(line: 101, column: 5, scope: !2119, inlinedAt: !5440)
!5460 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5440)
!5461 = !DILocation(line: 1563, column: 40, scope: !5441)
!5462 = !{!204, !205, i64 2808}
!5463 = !DILocation(line: 1563, column: 63, scope: !5441)
!5464 = !DILocation(line: 0, scope: !2131, inlinedAt: !5440)
!5465 = !DILocation(line: 0, scope: !5441)
!5466 = !DILocation(line: 1563, column: 31, scope: !5441)
!5467 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5468)
!5468 = distinct !DILocation(line: 1564, column: 17, scope: !5441)
!5469 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5468)
!5470 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5468)
!5471 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5468)
!5472 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5468)
!5473 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5468)
!5474 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5468)
!5475 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5468)
!5476 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5468)
!5477 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5468)
!5478 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5468)
!5479 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5468)
!5480 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5468)
!5481 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5468)
!5482 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5468)
!5483 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5468)
!5484 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5468)
!5485 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5468)
!5486 = !DILocation(line: 101, column: 5, scope: !2119, inlinedAt: !5468)
!5487 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5468)
!5488 = !DILocation(line: 1563, column: 17, scope: !5378)
!5489 = !DILocation(line: 0, scope: !2131, inlinedAt: !5468)
!5490 = !DILocation(line: 1564, column: 31, scope: !5441)
!5491 = !DILocation(line: 1566, column: 17, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5441, file: !1, line: 1565, column: 13)
!5493 = !DILocation(line: 1567, column: 17, scope: !5492)
!5494 = !DILocation(line: 1568, column: 17, scope: !5492)
!5495 = !DILocation(line: 1569, column: 17, scope: !5492)
!5496 = !DILocation(line: 1575, column: 16, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 1575, column: 13)
!5498 = !DILocation(line: 1571, column: 13, scope: !5378)
!5499 = !DILocation(line: 1572, column: 13, scope: !5378)
!5500 = distinct !{!5500, !5372, !5501}
!5501 = !DILocation(line: 1573, column: 9, scope: !4978)
!5502 = !DILocation(line: 0, scope: !4978)
!5503 = !DILocation(line: 1575, column: 25, scope: !5497)
!5504 = !DILocation(line: 1575, column: 51, scope: !5497)
!5505 = !DILocation(line: 1575, column: 44, scope: !5497)
!5506 = !DILocation(line: 1576, column: 27, scope: !5497)
!5507 = !DILocation(line: 1576, column: 13, scope: !5497)
!5508 = !DILocation(line: 1579, column: 19, scope: !4978)
!5509 = !DILocation(line: 1579, column: 9, scope: !4978)
!5510 = !DILocation(line: 1579, column: 28, scope: !4978)
!5511 = !DILocation(line: 1579, column: 54, scope: !4978)
!5512 = !DILocation(line: 1579, column: 47, scope: !4978)
!5513 = !DILocation(line: 1580, column: 16, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !4978, file: !1, line: 1579, column: 59)
!5515 = !DILocation(line: 1582, column: 26, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5514, file: !1, line: 1582, column: 17)
!5517 = !DILocation(line: 1583, column: 17, scope: !5516)
!5518 = !DILocation(line: 1582, column: 17, scope: !5514)
!5519 = !DILocation(line: 1584, column: 26, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5514, file: !1, line: 1584, column: 17)
!5521 = !DILocation(line: 1585, column: 17, scope: !5520)
!5522 = !DILocation(line: 1584, column: 17, scope: !5514)
!5523 = !DILocation(line: 1588, column: 37, scope: !5514)
!5524 = !DILocation(line: 1588, column: 19, scope: !5514)
!5525 = !DILocation(line: 1535, column: 13, scope: !4978)
!5526 = !DILocation(line: 1589, column: 21, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5514, file: !1, line: 1589, column: 17)
!5528 = !DILocation(line: 1589, column: 17, scope: !5514)
!5529 = !DILocation(line: 1590, column: 17, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5527, file: !1, line: 1589, column: 34)
!5531 = distinct !{!5531, !5509, !5532}
!5532 = !DILocation(line: 1592, column: 9, scope: !4978)
!5533 = !DILocation(line: 0, scope: !5514)
!5534 = !DILocation(line: 1595, column: 9, scope: !4978)
!5535 = !DILocation(line: 0, scope: !5520)
!5536 = !DILocation(line: 1596, column: 5, scope: !4979)
!5537 = !DILocation(line: 1596, column: 24, scope: !4986)
!5538 = !DILocation(line: 1596, column: 16, scope: !4979)
!5539 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5540)
!5540 = distinct !DILocation(line: 1597, column: 20, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !4985, file: !1, line: 1597, column: 13)
!5542 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5540)
!5543 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5540)
!5544 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5540)
!5545 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5540)
!5546 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5540)
!5547 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5540)
!5548 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5540)
!5549 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5540)
!5550 = !DILocation(line: 1597, column: 13, scope: !4985)
!5551 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5540)
!5552 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5540)
!5553 = !DILocation(line: 1597, column: 42, scope: !5541)
!5554 = !DILocation(line: 1598, column: 13, scope: !4985)
!5555 = !DILocation(line: 1599, column: 32, scope: !4985)
!5556 = !DILocation(line: 1599, column: 44, scope: !4985)
!5557 = !DILocation(line: 1600, column: 36, scope: !4985)
!5558 = !DILocation(line: 1599, column: 9, scope: !4985)
!5559 = !DILocation(line: 1602, column: 9, scope: !4985)
!5560 = !DILocation(line: 1602, column: 19, scope: !4985)
!5561 = !DILocation(line: 1604, column: 17, scope: !4984)
!5562 = !DILocation(line: 1603, column: 28, scope: !4984)
!5563 = !DILocation(line: 1605, column: 20, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !4984, file: !1, line: 1605, column: 17)
!5565 = !DILocation(line: 1605, column: 17, scope: !4984)
!5566 = !DILocation(line: 1605, column: 29, scope: !5564)
!5567 = !DILocation(line: 1606, column: 39, scope: !4984)
!5568 = !DILocation(line: 1606, column: 13, scope: !4984)
!5569 = !DILocation(line: 1607, column: 9, scope: !4985)
!5570 = !DILocation(line: 1608, column: 49, scope: !4989)
!5571 = !DILocation(line: 1615, column: 13, scope: !4988)
!5572 = !DILocation(line: 1614, column: 24, scope: !4988)
!5573 = !DILocation(line: 1616, column: 21, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !4988, file: !1, line: 1616, column: 13)
!5575 = !DILocation(line: 1616, column: 13, scope: !4988)
!5576 = !DILocation(line: 1617, column: 13, scope: !4988)
!5577 = !DILocation(line: 1625, column: 9, scope: !4988)
!5578 = !DILocation(line: 1630, column: 41, scope: !4991)
!5579 = !DILocation(line: 1630, column: 36, scope: !4991)
!5580 = !DILocation(line: 1631, column: 57, scope: !4991)
!5581 = !DILocation(line: 1631, column: 41, scope: !4991)
!5582 = !DILocation(line: 1631, column: 36, scope: !4991)
!5583 = !DILocation(line: 1632, column: 21, scope: !4991)
!5584 = !DILocation(line: 1633, column: 21, scope: !4991)
!5585 = !DILocation(line: 1634, column: 34, scope: !4991)
!5586 = !DILocation(line: 1636, column: 21, scope: !4991)
!5587 = !DILocation(line: 1632, column: 36, scope: !4991)
!5588 = !DILocation(line: 1632, column: 43, scope: !4991)
!5589 = !DILocation(line: 1633, column: 34, scope: !4991)
!5590 = !DILocation(line: 1633, column: 40, scope: !4991)
!5591 = !DILocation(line: 1636, column: 34, scope: !4991)
!5592 = !DILocation(line: 1636, column: 78, scope: !4991)
!5593 = !DILocation(line: 1637, column: 29, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !1, line: 1637, column: 29)
!5595 = distinct !DILexicalBlock(scope: !4991, file: !1, line: 1636, column: 87)
!5596 = !DILocation(line: 1637, column: 34, scope: !5594)
!5597 = !DILocation(line: 1637, column: 29, scope: !5595)
!5598 = !DILocation(line: 1637, column: 44, scope: !5594)
!5599 = !DILocation(line: 0, scope: !4991)
!5600 = !DILocation(line: 1638, column: 29, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5595, file: !1, line: 1638, column: 29)
!5602 = !DILocation(line: 1638, column: 34, scope: !5601)
!5603 = !DILocation(line: 1638, column: 29, scope: !5595)
!5604 = !DILocation(line: 1638, column: 44, scope: !5601)
!5605 = !DILocation(line: 0, scope: !5594)
!5606 = !DILocation(line: 1639, column: 46, scope: !5595)
!5607 = !DILocation(line: 1639, column: 30, scope: !5595)
!5608 = !DILocation(line: 1640, column: 46, scope: !5595)
!5609 = !DILocation(line: 1640, column: 52, scope: !5595)
!5610 = !DILocation(line: 1640, column: 30, scope: !5595)
!5611 = distinct !{!5611, !5586, !5612}
!5612 = !DILocation(line: 1641, column: 21, scope: !4991)
!5613 = !DILocation(line: 0, scope: !5601)
!5614 = !DILocation(line: 0, scope: !5595)
!5615 = !DILocation(line: 1643, column: 30, scope: !4991)
!5616 = !DILocation(line: 1643, column: 21, scope: !4991)
!5617 = !DILocation(line: 1644, column: 28, scope: !4991)
!5618 = !DILocation(line: 1645, column: 24, scope: !4991)
!5619 = !DILocation(line: 1645, column: 29, scope: !4991)
!5620 = !DILocation(line: 1646, column: 33, scope: !4991)
!5621 = !DILocation(line: 1648, column: 25, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !4991, file: !1, line: 1648, column: 25)
!5623 = !DILocation(line: 1648, column: 52, scope: !5622)
!5624 = !DILocation(line: 1648, column: 43, scope: !5622)
!5625 = !DILocation(line: 1648, column: 77, scope: !5622)
!5626 = !DILocation(line: 1649, column: 25, scope: !5622)
!5627 = !DILocation(line: 1649, column: 41, scope: !5622)
!5628 = !DILocation(line: 1649, column: 32, scope: !5622)
!5629 = !DILocation(line: 1648, column: 25, scope: !4991)
!5630 = !DILocation(line: 1651, column: 25, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5622, file: !1, line: 1650, column: 21)
!5632 = !DILocation(line: 1652, column: 21, scope: !5631)
!5633 = !DILocation(line: 1653, column: 17, scope: !4992)
!5634 = !DILocation(line: 1654, column: 17, scope: !4992)
!5635 = !DILocation(line: 1656, column: 20, scope: !4992)
!5636 = !DILocation(line: 1656, column: 25, scope: !4992)
!5637 = !DILocation(line: 1657, column: 29, scope: !4992)
!5638 = !DILocation(line: 1658, column: 17, scope: !4992)
!5639 = !DILocation(line: 1659, column: 17, scope: !4992)
!5640 = !DILocation(line: 1661, column: 20, scope: !4992)
!5641 = !DILocation(line: 1661, column: 25, scope: !4992)
!5642 = !DILocation(line: 1662, column: 29, scope: !4992)
!5643 = !DILocation(line: 1663, column: 34, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1663, column: 21)
!5645 = !DILocation(line: 1663, column: 21, scope: !5644)
!5646 = !DILocation(line: 1663, column: 48, scope: !5644)
!5647 = !DILocation(line: 1663, column: 39, scope: !5644)
!5648 = !DILocation(line: 1663, column: 21, scope: !4992)
!5649 = !DILocation(line: 1664, column: 21, scope: !5644)
!5650 = !DILocation(line: 1667, column: 20, scope: !4992)
!5651 = !DILocation(line: 1667, column: 25, scope: !4992)
!5652 = !DILocation(line: 1668, column: 29, scope: !4992)
!5653 = !DILocation(line: 1669, column: 21, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1669, column: 21)
!5655 = !DILocation(line: 1669, column: 44, scope: !5654)
!5656 = !DILocation(line: 1669, column: 35, scope: !5654)
!5657 = !DILocation(line: 1669, column: 21, scope: !4992)
!5658 = !DILocation(line: 1670, column: 21, scope: !5654)
!5659 = !DILocation(line: 1673, column: 20, scope: !4992)
!5660 = !DILocation(line: 1673, column: 25, scope: !4992)
!5661 = !DILocation(line: 1674, column: 29, scope: !4992)
!5662 = !DILocation(line: 1675, column: 21, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1675, column: 21)
!5664 = !DILocation(line: 1675, column: 48, scope: !5663)
!5665 = !DILocation(line: 1675, column: 39, scope: !5663)
!5666 = !DILocation(line: 1675, column: 21, scope: !4992)
!5667 = !DILocation(line: 1676, column: 21, scope: !5663)
!5668 = !DILocation(line: 1679, column: 17, scope: !4992)
!5669 = !DILocation(line: 1682, column: 5, scope: !4989)
!5670 = !DILocation(line: 1616, column: 30, scope: !5574)
!5671 = !DILocation(line: 1682, column: 24, scope: !5001)
!5672 = !DILocation(line: 1682, column: 16, scope: !4989)
!5673 = !DILocation(line: 1683, column: 13, scope: !5000)
!5674 = !DILocation(line: 1684, column: 24, scope: !5000)
!5675 = !DILocation(line: 1684, column: 17, scope: !5000)
!5676 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5677)
!5677 = distinct !DILocation(line: 1685, column: 30, scope: !5000)
!5678 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5677)
!5679 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5677)
!5680 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5677)
!5681 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5677)
!5682 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5677)
!5683 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5677)
!5684 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5677)
!5685 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5677)
!5686 = !DILocation(line: 1685, column: 18, scope: !5000)
!5687 = !DILocation(line: 1687, column: 9, scope: !5000)
!5688 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5677)
!5689 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5677)
!5690 = !DILocation(line: 1687, column: 24, scope: !5000)
!5691 = !DILocation(line: 1691, column: 27, scope: !5004)
!5692 = !DILocation(line: 1691, column: 17, scope: !5004)
!5693 = !DILocation(line: 1692, column: 25, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5004, file: !1, line: 1692, column: 17)
!5695 = !DILocation(line: 1692, column: 17, scope: !5004)
!5696 = !DILocation(line: 1693, column: 17, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5694, file: !1, line: 1692, column: 34)
!5698 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5699)
!5699 = distinct !DILocation(line: 1695, column: 17, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5004, file: !1, line: 1695, column: 17)
!5701 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5699)
!5702 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5699)
!5703 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5699)
!5704 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5699)
!5705 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5699)
!5706 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5699)
!5707 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5699)
!5708 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5699)
!5709 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5699)
!5710 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5699)
!5711 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5699)
!5712 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5699)
!5713 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5699)
!5714 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5699)
!5715 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5699)
!5716 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5699)
!5717 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5699)
!5718 = !DILocation(line: 101, column: 5, scope: !2119, inlinedAt: !5699)
!5719 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5699)
!5720 = !DILocation(line: 1695, column: 17, scope: !5004)
!5721 = !DILocation(line: 0, scope: !2131, inlinedAt: !5699)
!5722 = !DILocation(line: 0, scope: !5700)
!5723 = !DILocation(line: 1695, column: 33, scope: !5700)
!5724 = !DILocation(line: 1696, column: 17, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 1695, column: 54)
!5726 = !DILocation(line: 1702, column: 17, scope: !5004)
!5727 = !DILocation(line: 1701, column: 28, scope: !5004)
!5728 = !DILocation(line: 1703, column: 20, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5004, file: !1, line: 1703, column: 17)
!5730 = !DILocation(line: 1703, column: 17, scope: !5004)
!5731 = !DILocation(line: 1704, column: 36, scope: !5004)
!5732 = !DILocation(line: 1704, column: 28, scope: !5004)
!5733 = !DILocation(line: 1705, column: 23, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5004, file: !1, line: 1705, column: 17)
!5735 = !DILocation(line: 1705, column: 17, scope: !5004)
!5736 = !DILocation(line: 1709, column: 17, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5734, file: !1, line: 1705, column: 32)
!5738 = !DILocation(line: 1713, column: 39, scope: !5004)
!5739 = !DILocation(line: 1713, column: 26, scope: !5004)
!5740 = !DILocation(line: 1713, column: 17, scope: !5004)
!5741 = !DILocation(line: 1715, column: 13, scope: !5004)
!5742 = !DILocation(line: 1716, column: 18, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5004, file: !1, line: 1716, column: 17)
!5744 = !DILocation(line: 1716, column: 17, scope: !5004)
!5745 = !DILocation(line: 1717, column: 17, scope: !5743)
!5746 = !DILocation(line: 1718, column: 9, scope: !5000)
!5747 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5748)
!5748 = distinct !DILocation(line: 1720, column: 21, scope: !5000)
!5749 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5748)
!5750 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5748)
!5751 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5748)
!5752 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5748)
!5753 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5748)
!5754 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5748)
!5755 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5748)
!5756 = !DILocation(line: 0, scope: !5000)
!5757 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5748)
!5758 = !DILocation(line: 1720, column: 12, scope: !5000)
!5759 = !DILocation(line: 1720, column: 19, scope: !5000)
!5760 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5761)
!5761 = distinct !DILocation(line: 1722, column: 25, scope: !5000)
!5762 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5761)
!5763 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5761)
!5764 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5761)
!5765 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5761)
!5766 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5761)
!5767 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5761)
!5768 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5761)
!5769 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5761)
!5770 = !DILocation(line: 1722, column: 20, scope: !5000)
!5771 = !DILocation(line: 1722, column: 23, scope: !5000)
!5772 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5773)
!5773 = distinct !DILocation(line: 1723, column: 26, scope: !5000)
!5774 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5773)
!5775 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5773)
!5776 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5773)
!5777 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5773)
!5778 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5773)
!5779 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5773)
!5780 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5773)
!5781 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5773)
!5782 = !DILocation(line: 1723, column: 20, scope: !5000)
!5783 = !DILocation(line: 1723, column: 24, scope: !5000)
!5784 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5785)
!5785 = distinct !DILocation(line: 1726, column: 32, scope: !5000)
!5786 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5785)
!5787 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5785)
!5788 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5785)
!5789 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5785)
!5790 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5785)
!5791 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5785)
!5792 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5785)
!5793 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5785)
!5794 = !DILocation(line: 1726, column: 16, scope: !5000)
!5795 = !DILocation(line: 1727, column: 9, scope: !5000)
!5796 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5785)
!5797 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5785)
!5798 = !DILocation(line: 1727, column: 28, scope: !5000)
!5799 = !DILocation(line: 1731, column: 13, scope: !5010)
!5800 = !DILocation(line: 1732, column: 26, scope: !5010)
!5801 = !DILocation(line: 1732, column: 17, scope: !5010)
!5802 = !DILocation(line: 1733, column: 24, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5010, file: !1, line: 1733, column: 17)
!5804 = !DILocation(line: 1733, column: 17, scope: !5010)
!5805 = !DILocation(line: 1734, column: 17, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5803, file: !1, line: 1733, column: 33)
!5807 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5808)
!5808 = distinct !DILocation(line: 1737, column: 24, scope: !5010)
!5809 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5808)
!5810 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5808)
!5811 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5808)
!5812 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5808)
!5813 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5808)
!5814 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5808)
!5815 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5808)
!5816 = !DILocation(line: 0, scope: !5010)
!5817 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5808)
!5818 = !DILocation(line: 1737, column: 22, scope: !5010)
!5819 = !{!2949, !205, i64 0}
!5820 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5821)
!5821 = distinct !DILocation(line: 1738, column: 25, scope: !5010)
!5822 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5821)
!5823 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5821)
!5824 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5821)
!5825 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5821)
!5826 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5821)
!5827 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5821)
!5828 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5821)
!5829 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5821)
!5830 = !DILocation(line: 1738, column: 23, scope: !5010)
!5831 = !{!2949, !205, i64 8}
!5832 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !5833)
!5833 = distinct !DILocation(line: 1739, column: 56, scope: !5010)
!5834 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !5833)
!5835 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !5833)
!5836 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !5833)
!5837 = !DILocation(line: 91, column: 20, scope: !2131, inlinedAt: !5833)
!5838 = !DILocation(line: 91, column: 13, scope: !2131, inlinedAt: !5833)
!5839 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !5833)
!5840 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !5833)
!5841 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !5833)
!5842 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !5833)
!5843 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !5833)
!5844 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !5833)
!5845 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !5833)
!5846 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !5833)
!5847 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !5833)
!5848 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !5833)
!5849 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !5833)
!5850 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !5833)
!5851 = !DILocation(line: 0, scope: !2131, inlinedAt: !5833)
!5852 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !5833)
!5853 = !DILocation(line: 1731, column: 22, scope: !5010)
!5854 = !DILocation(line: 1739, column: 32, scope: !5010)
!5855 = !DILocation(line: 1739, column: 23, scope: !5010)
!5856 = !DILocation(line: 1740, column: 24, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5010, file: !1, line: 1740, column: 17)
!5858 = !DILocation(line: 1740, column: 17, scope: !5010)
!5859 = !DILocation(line: 1741, column: 17, scope: !5857)
!5860 = !DILocation(line: 1743, column: 13, scope: !5010)
!5861 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5862)
!5862 = distinct !DILocation(line: 1750, column: 31, scope: !5010)
!5863 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5862)
!5864 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5862)
!5865 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5862)
!5866 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5862)
!5867 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5862)
!5868 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5862)
!5869 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5862)
!5870 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5862)
!5871 = !DILocation(line: 1750, column: 20, scope: !5010)
!5872 = !DILocation(line: 1751, column: 13, scope: !5010)
!5873 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5862)
!5874 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5862)
!5875 = !DILocation(line: 1751, column: 27, scope: !5010)
!5876 = !DILocation(line: 1752, column: 17, scope: !5015)
!5877 = !DILocation(line: 1752, column: 31, scope: !5015)
!5878 = !DILocation(line: 1753, column: 17, scope: !5015)
!5879 = !DILocation(line: 1754, column: 36, scope: !5015)
!5880 = !DILocation(line: 1754, column: 29, scope: !5015)
!5881 = !DILocation(line: 129, column: 39, scope: !713, inlinedAt: !5882)
!5882 = distinct !DILocation(line: 1755, column: 39, scope: !5015)
!5883 = !DILocation(line: 129, column: 48, scope: !713, inlinedAt: !5882)
!5884 = !DILocation(line: 130, column: 5, scope: !713, inlinedAt: !5882)
!5885 = !DILocation(line: 131, column: 5, scope: !713, inlinedAt: !5882)
!5886 = !DILocation(line: 134, column: 23, scope: !713, inlinedAt: !5882)
!5887 = !DILocation(line: 130, column: 13, scope: !713, inlinedAt: !5882)
!5888 = !DILocation(line: 135, column: 1, scope: !713, inlinedAt: !5882)
!5889 = !DILocation(line: 134, column: 5, scope: !713, inlinedAt: !5882)
!5890 = !DILocation(line: 1755, column: 23, scope: !5015)
!5891 = !DILocation(line: 1755, column: 37, scope: !5015)
!5892 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5893)
!5893 = distinct !DILocation(line: 1756, column: 40, scope: !5015)
!5894 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5893)
!5895 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5893)
!5896 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5893)
!5897 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5893)
!5898 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5893)
!5899 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5893)
!5900 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5893)
!5901 = !DILocation(line: 0, scope: !5015)
!5902 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5893)
!5903 = !DILocation(line: 1756, column: 23, scope: !5015)
!5904 = !DILocation(line: 1756, column: 38, scope: !5015)
!5905 = !DILocation(line: 1757, column: 40, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5015, file: !1, line: 1757, column: 21)
!5907 = !DILocation(line: 1757, column: 64, scope: !5906)
!5908 = !DILocation(line: 1757, column: 22, scope: !5906)
!5909 = !DILocation(line: 1757, column: 21, scope: !5015)
!5910 = !DILocation(line: 1758, column: 21, scope: !5906)
!5911 = !DILocation(line: 1760, column: 13, scope: !5010)
!5912 = distinct !{!5912, !5872, !5911}
!5913 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5914)
!5914 = distinct !DILocation(line: 1764, column: 36, scope: !5010)
!5915 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5914)
!5916 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5914)
!5917 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5914)
!5918 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5914)
!5919 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5914)
!5920 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5914)
!5921 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5914)
!5922 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5914)
!5923 = !DILocation(line: 1764, column: 20, scope: !5010)
!5924 = !DILocation(line: 1765, column: 13, scope: !5010)
!5925 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5914)
!5926 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5914)
!5927 = !DILocation(line: 1765, column: 32, scope: !5010)
!5928 = !DILocation(line: 1766, column: 29, scope: !5022)
!5929 = !DILocation(line: 1766, column: 21, scope: !5022)
!5930 = !DILocation(line: 1767, column: 27, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5022, file: !1, line: 1767, column: 21)
!5932 = !DILocation(line: 1767, column: 21, scope: !5022)
!5933 = !DILocation(line: 1768, column: 21, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5931, file: !1, line: 1767, column: 36)
!5935 = !DILocation(line: 1771, column: 44, scope: !5022)
!5936 = !DILocation(line: 1771, column: 33, scope: !5022)
!5937 = !DILocation(line: 1773, column: 17, scope: !5022)
!5938 = !DILocation(line: 129, column: 39, scope: !713, inlinedAt: !5939)
!5939 = distinct !DILocation(line: 1774, column: 39, scope: !5022)
!5940 = !DILocation(line: 129, column: 48, scope: !713, inlinedAt: !5939)
!5941 = !DILocation(line: 130, column: 5, scope: !713, inlinedAt: !5939)
!5942 = !DILocation(line: 131, column: 5, scope: !713, inlinedAt: !5939)
!5943 = !DILocation(line: 134, column: 23, scope: !713, inlinedAt: !5939)
!5944 = !DILocation(line: 130, column: 13, scope: !713, inlinedAt: !5939)
!5945 = !DILocation(line: 135, column: 1, scope: !713, inlinedAt: !5939)
!5946 = !DILocation(line: 134, column: 5, scope: !713, inlinedAt: !5939)
!5947 = !DILocation(line: 1774, column: 27, scope: !5022)
!5948 = !DILocation(line: 1774, column: 37, scope: !5022)
!5949 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5950)
!5950 = distinct !DILocation(line: 1778, column: 28, scope: !5022)
!5951 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5950)
!5952 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5950)
!5953 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5950)
!5954 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5950)
!5955 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5950)
!5956 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5950)
!5957 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !5950)
!5958 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5950)
!5959 = !DILocation(line: 1779, column: 17, scope: !5022)
!5960 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5950)
!5961 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !5950)
!5962 = !DILocation(line: 1779, column: 31, scope: !5022)
!5963 = !DILocation(line: 1780, column: 21, scope: !5025)
!5964 = !DILocation(line: 1780, column: 35, scope: !5025)
!5965 = !DILocation(line: 1781, column: 21, scope: !5025)
!5966 = !DILocation(line: 1782, column: 56, scope: !5025)
!5967 = !DILocation(line: 1782, column: 40, scope: !5025)
!5968 = !DILocation(line: 1782, column: 33, scope: !5025)
!5969 = !DILocation(line: 1783, column: 33, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 1783, column: 25)
!5971 = !DILocation(line: 1783, column: 30, scope: !5970)
!5972 = !DILocation(line: 1783, column: 25, scope: !5025)
!5973 = !DILocation(line: 1784, column: 25, scope: !5970)
!5974 = !DILocation(line: 1790, column: 27, scope: !5025)
!5975 = !DILocation(line: 1790, column: 36, scope: !5025)
!5976 = !{!2897, !201, i64 16}
!5977 = !DILocation(line: 1791, column: 46, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 1791, column: 25)
!5979 = !DILocation(line: 1791, column: 26, scope: !5978)
!5980 = !DILocation(line: 1791, column: 25, scope: !5025)
!5981 = !DILocation(line: 1792, column: 25, scope: !5978)
!5982 = !DILocation(line: 1795, column: 17, scope: !5022)
!5983 = distinct !{!5983, !5959, !5982}
!5984 = distinct !{!5984, !5924, !5985}
!5985 = !DILocation(line: 1796, column: 13, scope: !5010)
!5986 = !DILocation(line: 1797, column: 9, scope: !5000)
!5987 = distinct !{!5987, !5795, !5986}
!5988 = !DILocation(line: 1798, column: 5, scope: !5001)
!5989 = !DILocation(line: 1703, column: 29, scope: !5729)
!5990 = !DILocation(line: 1798, column: 24, scope: !5029)
!5991 = !DILocation(line: 1798, column: 43, scope: !5029)
!5992 = !DILocation(line: 1798, column: 54, scope: !5029)
!5993 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !5994)
!5994 = distinct !DILocation(line: 1799, column: 29, scope: !5028)
!5995 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !5994)
!5996 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !5994)
!5997 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !5994)
!5998 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !5994)
!5999 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !5994)
!6000 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !5994)
!6001 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !5994)
!6002 = !DILocation(line: 0, scope: !5028)
!6003 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !5994)
!6004 = !DILocation(line: 1799, column: 18, scope: !5028)
!6005 = !DILocation(line: 1800, column: 26, scope: !5028)
!6006 = !DILocation(line: 1800, column: 21, scope: !5028)
!6007 = !DILocation(line: 1801, column: 9, scope: !5028)
!6008 = !DILocation(line: 1801, column: 14, scope: !5028)
!6009 = !DILocation(line: 1803, column: 13, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 1803, column: 13)
!6011 = !DILocation(line: 1803, column: 26, scope: !6010)
!6012 = !DILocation(line: 1808, column: 16, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 1808, column: 13)
!6014 = !DILocation(line: 1808, column: 13, scope: !5028)
!6015 = !DILocation(line: 1809, column: 13, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6013, file: !1, line: 1808, column: 25)
!6017 = !DILocation(line: 1810, column: 13, scope: !6016)
!6018 = !DILocation(line: 1811, column: 13, scope: !6016)
!6019 = !DILocation(line: 1813, column: 9, scope: !5028)
!6020 = !DILocation(line: 1814, column: 9, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 1814, column: 9)
!6022 = !DILocation(line: 1815, column: 18, scope: !5028)
!6023 = !DILocation(line: 1815, column: 16, scope: !5028)
!6024 = !DILocation(line: 1818, column: 25, scope: !5028)
!6025 = !{!3674, !201, i64 16}
!6026 = !DILocation(line: 1818, column: 38, scope: !5028)
!6027 = !DILocation(line: 1813, column: 23, scope: !5028)
!6028 = !DILocation(line: 1818, column: 21, scope: !5028)
!6029 = !DILocation(line: 1818, column: 15, scope: !5028)
!6030 = !DILocation(line: 1819, column: 16, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 1819, column: 13)
!6032 = !DILocation(line: 1819, column: 13, scope: !6031)
!6033 = !DILocation(line: 1819, column: 13, scope: !5028)
!6034 = !DILocation(line: 1820, column: 13, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6031, file: !1, line: 1819, column: 21)
!6036 = !DILocation(line: 1821, column: 22, scope: !6035)
!6037 = !DILocation(line: 1821, column: 13, scope: !6035)
!6038 = !DILocation(line: 1822, column: 9, scope: !6035)
!6039 = !DILocation(line: 1825, column: 16, scope: !5036)
!6040 = !DILocation(line: 1825, column: 20, scope: !5036)
!6041 = !DILocation(line: 1825, column: 13, scope: !5028)
!6042 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6043)
!6043 = distinct !DILocation(line: 1826, column: 28, scope: !5035)
!6044 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6043)
!6045 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6043)
!6046 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6043)
!6047 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6043)
!6048 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6043)
!6049 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6043)
!6050 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !6043)
!6051 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6043)
!6052 = !DILocation(line: 1826, column: 22, scope: !5035)
!6053 = !DILocation(line: 1827, column: 17, scope: !5035)
!6054 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6043)
!6055 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !6043)
!6056 = !DILocation(line: 1827, column: 21, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !5035, file: !1, line: 1827, column: 17)
!6058 = !DILocation(line: 1828, column: 17, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6057, file: !1, line: 1827, column: 47)
!6060 = !DILocation(line: 1829, column: 17, scope: !6059)
!6061 = !DILocation(line: 1831, column: 9, scope: !5035)
!6062 = !DILocation(line: 1833, column: 17, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !5028, file: !1, line: 1833, column: 13)
!6064 = !DILocation(line: 1833, column: 13, scope: !5028)
!6065 = !DILocation(line: 1834, column: 13, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6063, file: !1, line: 1833, column: 26)
!6067 = !DILocation(line: 1835, column: 13, scope: !6066)
!6068 = !DILocation(line: 1836, column: 13, scope: !6066)
!6069 = !DILocation(line: 1838, column: 13, scope: !5028)
!6070 = !DILocation(line: 1839, column: 5, scope: !5029)
!6071 = !DILocation(line: 1804, column: 13, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6010, file: !1, line: 1803, column: 59)
!6073 = !DILocation(line: 1805, column: 20, scope: !6072)
!6074 = !DILocation(line: 1805, column: 13, scope: !6072)
!6075 = !DILocation(line: 1840, column: 9, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !5029, file: !1, line: 1839, column: 12)
!6077 = !DILocation(line: 0, scope: !6072)
!6078 = !DILocation(line: 1843, column: 1, scope: !4944)
!6079 = distinct !DISubprogram(name: "startLoading", scope: !1, file: !1, line: 1847, type: !6080, isLocal: false, isDefinition: true, scopeLine: 1847, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6082)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{null, !267}
!6082 = !{!6083, !6084}
!6083 = !DILocalVariable(name: "fp", arg: 1, scope: !6079, file: !1, line: 1847, type: !267)
!6084 = !DILocalVariable(name: "sb", scope: !6079, file: !1, line: 1848, type: !6085)
!6085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !6086, line: 27, size: 704, elements: !6087)
!6086 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/stat.h", directory: "/root/.unikraft/apps/redis/build")
!6087 = !{!6088, !6091, !6094, !6097, !6100, !6103, !6106, !6107, !6108, !6113, !6114, !6115, !6118}
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !6085, file: !6086, line: 29, baseType: !6089, size: 16)
!6089 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !105, line: 177, baseType: !6090)
!6090 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !107, line: 54, baseType: !17)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !6085, file: !6086, line: 30, baseType: !6092, size: 16, offset: 16)
!6092 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !105, line: 155, baseType: !6093)
!6093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !107, line: 73, baseType: !125)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !6085, file: !6086, line: 31, baseType: !6095, size: 32, offset: 32)
!6095 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !105, line: 205, baseType: !6096)
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !107, line: 88, baseType: !32)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !6085, file: !6086, line: 32, baseType: !6098, size: 16, offset: 64)
!6098 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !105, line: 210, baseType: !6099)
!6099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !107, line: 210, baseType: !125)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !6085, file: !6086, line: 33, baseType: !6101, size: 16, offset: 80)
!6101 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !105, line: 181, baseType: !6102)
!6102 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !107, line: 58, baseType: !125)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !6085, file: !6086, line: 34, baseType: !6104, size: 16, offset: 96)
!6104 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !105, line: 185, baseType: !6105)
!6105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !107, line: 61, baseType: !125)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !6085, file: !6086, line: 35, baseType: !6089, size: 16, offset: 112)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !6085, file: !6086, line: 36, baseType: !240, size: 64, offset: 128)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !6085, file: !6086, line: 37, baseType: !6109, size: 128, offset: 192)
!6109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !6, line: 52, size: 128, elements: !6110)
!6110 = !{!6111, !6112}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6109, file: !6, line: 53, baseType: !5, size: 64)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6109, file: !6, line: 54, baseType: !7, size: 64, offset: 64)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !6085, file: !6086, line: 38, baseType: !6109, size: 128, offset: 320)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !6085, file: !6086, line: 39, baseType: !6109, size: 128, offset: 448)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !6085, file: !6086, line: 40, baseType: !6116, size: 64, offset: 576)
!6116 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !105, line: 118, baseType: !6117)
!6117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !107, line: 32, baseType: !7)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !6085, file: !6086, line: 41, baseType: !6119, size: 64, offset: 640)
!6119 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !105, line: 113, baseType: !6120)
!6120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !107, line: 28, baseType: !7)
!6121 = !DILocation(line: 1847, column: 25, scope: !6079)
!6122 = !DILocation(line: 1848, column: 5, scope: !6079)
!6123 = !DILocation(line: 1851, column: 20, scope: !6079)
!6124 = !{!204, !192, i64 860}
!6125 = !DILocation(line: 1852, column: 33, scope: !6079)
!6126 = !DILocation(line: 1852, column: 31, scope: !6079)
!6127 = !{!204, !205, i64 880}
!6128 = !DILocation(line: 1853, column: 33, scope: !6079)
!6129 = !{!204, !205, i64 872}
!6130 = !DILocation(line: 1854, column: 15, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6079, file: !1, line: 1854, column: 9)
!6132 = !DILocation(line: 1848, column: 17, scope: !6079)
!6133 = !DILocation(line: 1854, column: 9, scope: !6131)
!6134 = !DILocation(line: 1854, column: 32, scope: !6131)
!6135 = !DILocation(line: 1854, column: 9, scope: !6079)
!6136 = !DILocation(line: 1857, column: 41, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6131, file: !1, line: 1856, column: 12)
!6138 = !DILocation(line: 0, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6131, file: !1, line: 1854, column: 39)
!6140 = !{!204, !205, i64 864}
!6141 = !DILocation(line: 1859, column: 1, scope: !6079)
!6142 = distinct !DISubprogram(name: "loadingProgress", scope: !1, file: !1, line: 1862, type: !6143, isLocal: false, isDefinition: true, scopeLine: 1862, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6145)
!6143 = !DISubroutineType(types: !6144)
!6144 = !{null, !240}
!6145 = !{!6146}
!6146 = !DILocalVariable(name: "pos", arg: 1, scope: !6142, file: !1, line: 1862, type: !240)
!6147 = !DILocation(line: 1862, column: 28, scope: !6142)
!6148 = !DILocation(line: 1863, column: 33, scope: !6142)
!6149 = !DILocation(line: 1864, column: 16, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6142, file: !1, line: 1864, column: 9)
!6151 = !{!204, !205, i64 1112}
!6152 = !DILocation(line: 1864, column: 35, scope: !6150)
!6153 = !DILocation(line: 1864, column: 33, scope: !6150)
!6154 = !DILocation(line: 1864, column: 9, scope: !6142)
!6155 = !DILocation(line: 1865, column: 35, scope: !6150)
!6156 = !DILocation(line: 1865, column: 33, scope: !6150)
!6157 = !DILocation(line: 1865, column: 9, scope: !6150)
!6158 = !DILocation(line: 1866, column: 1, scope: !6142)
!6159 = distinct !DISubprogram(name: "stopLoading", scope: !1, file: !1, line: 1869, type: !413, isLocal: false, isDefinition: true, scopeLine: 1869, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !2)
!6160 = !DILocation(line: 1870, column: 20, scope: !6159)
!6161 = !DILocation(line: 1871, column: 1, scope: !6159)
!6162 = distinct !DISubprogram(name: "rdbLoadProgressCallback", scope: !1, file: !1, line: 1875, type: !6163, isLocal: false, isDefinition: true, scopeLine: 1875, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6165)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{null, !220, !58, !550}
!6165 = !{!6166, !6167, !6168}
!6166 = !DILocalVariable(name: "r", arg: 1, scope: !6162, file: !1, line: 1875, type: !220)
!6167 = !DILocalVariable(name: "buf", arg: 2, scope: !6162, file: !1, line: 1875, type: !58)
!6168 = !DILocalVariable(name: "len", arg: 3, scope: !6162, file: !1, line: 1875, type: !550)
!6169 = !DILocation(line: 1875, column: 35, scope: !6162)
!6170 = !DILocation(line: 1875, column: 50, scope: !6162)
!6171 = !DILocation(line: 1875, column: 62, scope: !6162)
!6172 = !DILocation(line: 1876, column: 16, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6162, file: !1, line: 1876, column: 9)
!6174 = !DILocation(line: 1876, column: 9, scope: !6173)
!6175 = !DILocation(line: 1876, column: 9, scope: !6162)
!6176 = !DILocation(line: 1877, column: 9, scope: !6173)
!6177 = !DILocation(line: 1878, column: 16, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6162, file: !1, line: 1878, column: 9)
!6179 = !{!204, !205, i64 888}
!6180 = !DILocation(line: 1878, column: 9, scope: !6178)
!6181 = !DILocation(line: 1878, column: 54, scope: !6178)
!6182 = !DILocation(line: 1879, column: 13, scope: !6178)
!6183 = !DILocation(line: 1879, column: 29, scope: !6178)
!6184 = !DILocation(line: 1879, column: 35, scope: !6178)
!6185 = !DILocation(line: 1879, column: 101, scope: !6178)
!6186 = !DILocation(line: 1879, column: 81, scope: !6178)
!6187 = !DILocation(line: 1878, column: 9, scope: !6162)
!6188 = !DILocation(line: 1884, column: 9, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6178, file: !1, line: 1880, column: 5)
!6190 = !DILocation(line: 1885, column: 20, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6189, file: !1, line: 1885, column: 13)
!6192 = !{!204, !201, i64 2464}
!6193 = !DILocation(line: 1885, column: 13, scope: !6191)
!6194 = !DILocation(line: 1885, column: 41, scope: !6191)
!6195 = !DILocation(line: 1885, column: 52, scope: !6191)
!6196 = !DILocation(line: 1885, column: 31, scope: !6191)
!6197 = !DILocation(line: 1886, column: 13, scope: !6191)
!6198 = !DILocation(line: 1887, column: 28, scope: !6189)
!6199 = !DILocation(line: 1862, column: 28, scope: !6142, inlinedAt: !6200)
!6200 = distinct !DILocation(line: 1887, column: 9, scope: !6189)
!6201 = !DILocation(line: 1863, column: 33, scope: !6142, inlinedAt: !6200)
!6202 = !DILocation(line: 1864, column: 16, scope: !6150, inlinedAt: !6200)
!6203 = !DILocation(line: 1864, column: 35, scope: !6150, inlinedAt: !6200)
!6204 = !DILocation(line: 1864, column: 33, scope: !6150, inlinedAt: !6200)
!6205 = !DILocation(line: 1864, column: 9, scope: !6142, inlinedAt: !6200)
!6206 = !DILocation(line: 1865, column: 35, scope: !6150, inlinedAt: !6200)
!6207 = !DILocation(line: 1865, column: 33, scope: !6150, inlinedAt: !6200)
!6208 = !DILocation(line: 1865, column: 9, scope: !6150, inlinedAt: !6200)
!6209 = !DILocation(line: 1866, column: 1, scope: !6142, inlinedAt: !6200)
!6210 = !DILocation(line: 1888, column: 9, scope: !6189)
!6211 = !DILocation(line: 1889, column: 5, scope: !6189)
!6212 = !DILocation(line: 1890, column: 1, scope: !6162)
!6213 = distinct !DISubprogram(name: "rdbLoadRio", scope: !1, file: !1, line: 1894, type: !6214, isLocal: false, isDefinition: true, scopeLine: 1894, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6216)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!20, !220, !3980, !20}
!6216 = !{!6217, !6218, !6219, !6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6232, !6233, !6238, !6241, !6246, !6247, !6250, !6251, !6254, !6255, !6256, !6257, !6258, !6262, !6263, !6265, !6268}
!6217 = !DILocalVariable(name: "rdb", arg: 1, scope: !6213, file: !1, line: 1894, type: !220)
!6218 = !DILocalVariable(name: "rsi", arg: 2, scope: !6213, file: !1, line: 1894, type: !3980)
!6219 = !DILocalVariable(name: "loading_aof", arg: 3, scope: !6213, file: !1, line: 1894, type: !20)
!6220 = !DILocalVariable(name: "dbid", scope: !6213, file: !1, line: 1895, type: !55)
!6221 = !DILocalVariable(name: "type", scope: !6213, file: !1, line: 1896, type: !20)
!6222 = !DILocalVariable(name: "rdbver", scope: !6213, file: !1, line: 1896, type: !20)
!6223 = !DILocalVariable(name: "db", scope: !6213, file: !1, line: 1897, type: !4137)
!6224 = !DILocalVariable(name: "buf", scope: !6213, file: !1, line: 1898, type: !169)
!6225 = !DILocalVariable(name: "lru_idle", scope: !6213, file: !1, line: 1917, type: !12)
!6226 = !DILocalVariable(name: "lfu_freq", scope: !6213, file: !1, line: 1917, type: !12)
!6227 = !DILocalVariable(name: "expiretime", scope: !6213, file: !1, line: 1917, type: !12)
!6228 = !DILocalVariable(name: "now", scope: !6213, file: !1, line: 1917, type: !12)
!6229 = !DILocalVariable(name: "lru_clock", scope: !6213, file: !1, line: 1918, type: !12)
!6230 = !DILocalVariable(name: "key", scope: !6231, file: !1, line: 1921, type: !2090)
!6231 = distinct !DILexicalBlock(scope: !6213, file: !1, line: 1920, column: 14)
!6232 = !DILocalVariable(name: "val", scope: !6231, file: !1, line: 1921, type: !2090)
!6233 = !DILocalVariable(name: "byte", scope: !6234, file: !1, line: 1941, type: !113)
!6234 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 1939, column: 45)
!6235 = distinct !DILexicalBlock(scope: !6236, file: !1, line: 1939, column: 20)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !1, line: 1934, column: 20)
!6237 = distinct !DILexicalBlock(scope: !6231, file: !1, line: 1927, column: 13)
!6238 = !DILocalVariable(name: "qword", scope: !6239, file: !1, line: 1947, type: !55)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !1, line: 1945, column: 45)
!6240 = distinct !DILexicalBlock(scope: !6235, file: !1, line: 1945, column: 20)
!6241 = !DILocalVariable(name: "db_size", scope: !6242, file: !1, line: 1969, type: !55)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !1, line: 1966, column: 49)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !1, line: 1966, column: 20)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !1, line: 1954, column: 20)
!6245 = distinct !DILexicalBlock(scope: !6240, file: !1, line: 1951, column: 20)
!6246 = !DILocalVariable(name: "expires_size", scope: !6242, file: !1, line: 1969, type: !55)
!6247 = !DILocalVariable(name: "auxkey", scope: !6248, file: !1, line: 1983, type: !2090)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !1, line: 1977, column: 44)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !1, line: 1977, column: 20)
!6250 = !DILocalVariable(name: "auxval", scope: !6248, file: !1, line: 1983, type: !2090)
!6251 = !DILocalVariable(name: "moduleid", scope: !6252, file: !1, line: 2024, type: !55)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !1, line: 2020, column: 51)
!6253 = distinct !DILexicalBlock(scope: !6249, file: !1, line: 2020, column: 20)
!6254 = !DILocalVariable(name: "when_opcode", scope: !6252, file: !1, line: 2025, type: !20)
!6255 = !DILocalVariable(name: "when", scope: !6252, file: !1, line: 2026, type: !20)
!6256 = !DILocalVariable(name: "mt", scope: !6252, file: !1, line: 2029, type: !3145)
!6257 = !DILocalVariable(name: "name", scope: !6252, file: !1, line: 2030, type: !3205)
!6258 = !DILocalVariable(name: "io", scope: !6259, file: !1, line: 2044, type: !3139)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !1, line: 2037, column: 53)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !1, line: 2037, column: 24)
!6261 = distinct !DILexicalBlock(scope: !6252, file: !1, line: 2033, column: 17)
!6262 = !DILocalVariable(name: "eof", scope: !6259, file: !1, line: 2058, type: !55)
!6263 = !DILocalVariable(name: "aux", scope: !6264, file: !1, line: 2066, type: !2090)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !1, line: 2064, column: 20)
!6265 = !DILocalVariable(name: "cksum", scope: !6266, file: !1, line: 2107, type: !55)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !1, line: 2106, column: 22)
!6267 = distinct !DILexicalBlock(scope: !6213, file: !1, line: 2106, column: 9)
!6268 = !DILocalVariable(name: "expected", scope: !6266, file: !1, line: 2107, type: !55)
!6269 = !DILocation(line: 1894, column: 21, scope: !6213)
!6270 = !DILocation(line: 1894, column: 39, scope: !6213)
!6271 = !DILocation(line: 1894, column: 48, scope: !6213)
!6272 = !DILocation(line: 1897, column: 26, scope: !6213)
!6273 = !DILocation(line: 1897, column: 14, scope: !6213)
!6274 = !DILocation(line: 1898, column: 5, scope: !6213)
!6275 = !DILocation(line: 1898, column: 10, scope: !6213)
!6276 = !DILocation(line: 1900, column: 10, scope: !6213)
!6277 = !DILocation(line: 1900, column: 23, scope: !6213)
!6278 = !DILocation(line: 1901, column: 40, scope: !6213)
!6279 = !DILocation(line: 1901, column: 10, scope: !6213)
!6280 = !DILocation(line: 1901, column: 31, scope: !6213)
!6281 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6282)
!6282 = distinct !DILocation(line: 1902, column: 9, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6213, file: !1, line: 1902, column: 9)
!6284 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6282)
!6285 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6282)
!6286 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6282)
!6287 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6282)
!6288 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6282)
!6289 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6282)
!6290 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6282)
!6291 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6282)
!6292 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !6282)
!6293 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6282)
!6294 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !6282)
!6295 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !6282)
!6296 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !6282)
!6297 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6282)
!6298 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !6282)
!6299 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6282)
!6300 = !DILocation(line: 1902, column: 9, scope: !6213)
!6301 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !6282)
!6302 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !6282)
!6303 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6282)
!6304 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !6282)
!6305 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6282)
!6306 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6282)
!6307 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !6282)
!6308 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !6282)
!6309 = !DILocation(line: 1903, column: 5, scope: !6213)
!6310 = !DILocation(line: 1903, column: 12, scope: !6213)
!6311 = !DILocation(line: 1904, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6213, file: !1, line: 1904, column: 9)
!6313 = !DILocation(line: 1904, column: 31, scope: !6312)
!6314 = !DILocation(line: 1904, column: 9, scope: !6213)
!6315 = !DILocation(line: 1905, column: 9, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !1, line: 1904, column: 37)
!6317 = !DILocation(line: 1906, column: 9, scope: !6316)
!6318 = !DILocation(line: 1906, column: 15, scope: !6316)
!6319 = !DILocation(line: 1907, column: 9, scope: !6316)
!6320 = !DILocation(line: 1909, column: 22, scope: !6213)
!6321 = !DILocation(line: 1909, column: 14, scope: !6213)
!6322 = !DILocation(line: 1896, column: 15, scope: !6213)
!6323 = !DILocation(line: 1910, column: 20, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6213, file: !1, line: 1910, column: 9)
!6325 = !DILocation(line: 1911, column: 9, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6324, file: !1, line: 1910, column: 45)
!6327 = !DILocation(line: 1912, column: 9, scope: !6326)
!6328 = !DILocation(line: 1912, column: 15, scope: !6326)
!6329 = !DILocation(line: 1913, column: 9, scope: !6326)
!6330 = !DILocation(line: 1917, column: 15, scope: !6213)
!6331 = !DILocation(line: 1917, column: 30, scope: !6213)
!6332 = !DILocation(line: 1917, column: 45, scope: !6213)
!6333 = !DILocation(line: 1917, column: 68, scope: !6213)
!6334 = !DILocation(line: 1917, column: 62, scope: !6213)
!6335 = !DILocation(line: 1918, column: 27, scope: !6213)
!6336 = !DILocation(line: 1918, column: 15, scope: !6213)
!6337 = !DILocation(line: 1920, column: 5, scope: !6213)
!6338 = !DILocation(line: 98, column: 5, scope: !606, inlinedAt: !6339)
!6339 = distinct !DILocation(line: 1924, column: 21, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6231, file: !1, line: 1924, column: 13)
!6341 = !DILocation(line: 97, column: 22, scope: !606, inlinedAt: !6339)
!6342 = !DILocation(line: 98, column: 19, scope: !606, inlinedAt: !6339)
!6343 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6344)
!6344 = distinct !DILocation(line: 99, column: 9, scope: !617, inlinedAt: !6339)
!6345 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6344)
!6346 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6344)
!6347 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6344)
!6348 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6344)
!6349 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6344)
!6350 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6344)
!6351 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6344)
!6352 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !6344)
!6353 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6344)
!6354 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !6344)
!6355 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !6344)
!6356 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !6344)
!6357 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6344)
!6358 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !6344)
!6359 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !6344)
!6360 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6344)
!6361 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !6344)
!6362 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6344)
!6363 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6344)
!6364 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6344)
!6365 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !6344)
!6366 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !6344)
!6367 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6344)
!6368 = !DILocation(line: 99, column: 9, scope: !606, inlinedAt: !6339)
!6369 = !DILocation(line: 99, column: 36, scope: !617, inlinedAt: !6339)
!6370 = !DILocation(line: 101, column: 1, scope: !606, inlinedAt: !6339)
!6371 = !DILocation(line: 1924, column: 13, scope: !6231)
!6372 = !DILocation(line: 1924, column: 46, scope: !6340)
!6373 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !6344)
!6374 = !DILocation(line: 100, column: 12, scope: !606, inlinedAt: !6339)
!6375 = !DILocation(line: 100, column: 5, scope: !606, inlinedAt: !6339)
!6376 = !DILocation(line: 1927, column: 18, scope: !6237)
!6377 = !DILocation(line: 1927, column: 13, scope: !6231)
!6378 = !DILocation(line: 106, column: 25, scope: !649, inlinedAt: !6379)
!6379 = distinct !DILocation(line: 1931, column: 26, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6237, file: !1, line: 1927, column: 44)
!6381 = !DILocation(line: 107, column: 5, scope: !649, inlinedAt: !6379)
!6382 = !DILocation(line: 108, column: 5, scope: !649, inlinedAt: !6379)
!6383 = !DILocation(line: 109, column: 20, scope: !649, inlinedAt: !6379)
!6384 = !DILocation(line: 107, column: 13, scope: !649, inlinedAt: !6379)
!6385 = !DILocation(line: 109, column: 12, scope: !649, inlinedAt: !6379)
!6386 = !DILocation(line: 110, column: 1, scope: !649, inlinedAt: !6379)
!6387 = !DILocation(line: 109, column: 5, scope: !649, inlinedAt: !6379)
!6388 = !DILocation(line: 1932, column: 24, scope: !6380)
!6389 = !DILocation(line: 1933, column: 13, scope: !6380)
!6390 = distinct !{!6390, !6337, !6391}
!6391 = !DILocation(line: 2104, column: 5, scope: !6213)
!6392 = !DILocation(line: 1934, column: 25, scope: !6236)
!6393 = !DILocation(line: 1934, column: 20, scope: !6237)
!6394 = !DILocation(line: 129, column: 39, scope: !713, inlinedAt: !6395)
!6395 = distinct !DILocation(line: 1937, column: 26, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6236, file: !1, line: 1934, column: 54)
!6397 = !DILocation(line: 129, column: 48, scope: !713, inlinedAt: !6395)
!6398 = !DILocation(line: 130, column: 5, scope: !713, inlinedAt: !6395)
!6399 = !DILocation(line: 131, column: 5, scope: !713, inlinedAt: !6395)
!6400 = !DILocation(line: 134, column: 23, scope: !713, inlinedAt: !6395)
!6401 = !DILocation(line: 130, column: 13, scope: !713, inlinedAt: !6395)
!6402 = !DILocation(line: 135, column: 1, scope: !713, inlinedAt: !6395)
!6403 = !DILocation(line: 134, column: 5, scope: !713, inlinedAt: !6395)
!6404 = !DILocation(line: 1938, column: 13, scope: !6396)
!6405 = !DILocation(line: 1939, column: 25, scope: !6235)
!6406 = !DILocation(line: 1939, column: 20, scope: !6236)
!6407 = !DILocation(line: 1941, column: 21, scope: !6234)
!6408 = !DILocation(line: 1941, column: 13, scope: !6234)
!6409 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6410)
!6410 = distinct !DILocation(line: 1942, column: 17, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6234, file: !1, line: 1942, column: 17)
!6412 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6410)
!6413 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6410)
!6414 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6410)
!6415 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6410)
!6416 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6410)
!6417 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6410)
!6418 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6410)
!6419 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !6410)
!6420 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6410)
!6421 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !6410)
!6422 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !6410)
!6423 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !6410)
!6424 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6410)
!6425 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !6410)
!6426 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !6410)
!6427 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6410)
!6428 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !6410)
!6429 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6410)
!6430 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6410)
!6431 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6410)
!6432 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !6410)
!6433 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !6410)
!6434 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6410)
!6435 = !DILocation(line: 1942, column: 17, scope: !6234)
!6436 = !DILocation(line: 1942, column: 44, scope: !6411)
!6437 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !6410)
!6438 = !DILocation(line: 1943, column: 24, scope: !6234)
!6439 = !DILocation(line: 1944, column: 13, scope: !6234)
!6440 = !DILocation(line: 0, scope: !6234)
!6441 = !DILocation(line: 1945, column: 9, scope: !6235)
!6442 = !DILocation(line: 1945, column: 25, scope: !6240)
!6443 = !DILocation(line: 1945, column: 20, scope: !6235)
!6444 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6445)
!6445 = distinct !DILocation(line: 1948, column: 26, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6239, file: !1, line: 1948, column: 17)
!6447 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6445)
!6448 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6445)
!6449 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6445)
!6450 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6445)
!6451 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6445)
!6452 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6445)
!6453 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6445)
!6454 = !DILocation(line: 0, scope: !6446)
!6455 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6445)
!6456 = !DILocation(line: 1947, column: 22, scope: !6239)
!6457 = !DILocation(line: 1948, column: 48, scope: !6446)
!6458 = !DILocation(line: 1948, column: 17, scope: !6239)
!6459 = !DILocation(line: 0, scope: !6239)
!6460 = !DILocation(line: 1948, column: 63, scope: !6446)
!6461 = !DILocation(line: 1951, column: 25, scope: !6245)
!6462 = !DILocation(line: 1951, column: 20, scope: !6240)
!6463 = !DILocation(line: 1953, column: 13, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6245, file: !1, line: 1951, column: 44)
!6465 = !DILocation(line: 2106, column: 16, scope: !6267)
!6466 = !DILocation(line: 2106, column: 9, scope: !6213)
!6467 = !DILocation(line: 1954, column: 25, scope: !6244)
!6468 = !DILocation(line: 1954, column: 20, scope: !6245)
!6469 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6470)
!6470 = distinct !DILocation(line: 1956, column: 25, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 1956, column: 17)
!6472 = distinct !DILexicalBlock(scope: !6244, file: !1, line: 1954, column: 49)
!6473 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6470)
!6474 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6470)
!6475 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6470)
!6476 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6470)
!6477 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6470)
!6478 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6470)
!6479 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !6470)
!6480 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6470)
!6481 = !DILocation(line: 1895, column: 14, scope: !6213)
!6482 = !DILocation(line: 1956, column: 17, scope: !6472)
!6483 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6470)
!6484 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !6470)
!6485 = !DILocation(line: 1956, column: 47, scope: !6471)
!6486 = !DILocation(line: 1957, column: 42, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 1957, column: 17)
!6488 = !DILocation(line: 1957, column: 25, scope: !6487)
!6489 = !DILocation(line: 1957, column: 22, scope: !6487)
!6490 = !DILocation(line: 1957, column: 17, scope: !6472)
!6491 = !DILocation(line: 1958, column: 17, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 1957, column: 49)
!6493 = !DILocation(line: 1962, column: 17, scope: !6492)
!6494 = !DILocation(line: 1964, column: 25, scope: !6472)
!6495 = !DILocation(line: 1964, column: 27, scope: !6472)
!6496 = !DILocation(line: 1965, column: 13, scope: !6472)
!6497 = !DILocation(line: 1966, column: 25, scope: !6243)
!6498 = !DILocation(line: 1966, column: 20, scope: !6244)
!6499 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6500)
!6500 = distinct !DILocation(line: 1970, column: 28, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6242, file: !1, line: 1970, column: 17)
!6502 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6500)
!6503 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6500)
!6504 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6500)
!6505 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6500)
!6506 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6500)
!6507 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6500)
!6508 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !6500)
!6509 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6500)
!6510 = !DILocation(line: 1969, column: 22, scope: !6242)
!6511 = !DILocation(line: 1970, column: 17, scope: !6242)
!6512 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6500)
!6513 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !6500)
!6514 = !DILocation(line: 1970, column: 50, scope: !6501)
!6515 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6516)
!6516 = distinct !DILocation(line: 1972, column: 33, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6242, file: !1, line: 1972, column: 17)
!6518 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6516)
!6519 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6516)
!6520 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6516)
!6521 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6516)
!6522 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6516)
!6523 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6516)
!6524 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !6516)
!6525 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6516)
!6526 = !DILocation(line: 1969, column: 31, scope: !6242)
!6527 = !DILocation(line: 1972, column: 17, scope: !6242)
!6528 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6516)
!6529 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !6516)
!6530 = !DILocation(line: 1972, column: 55, scope: !6517)
!6531 = !DILocation(line: 1974, column: 28, scope: !6242)
!6532 = !DILocation(line: 1974, column: 13, scope: !6242)
!6533 = !DILocation(line: 1975, column: 28, scope: !6242)
!6534 = !DILocation(line: 1975, column: 13, scope: !6242)
!6535 = !DILocation(line: 1976, column: 13, scope: !6242)
!6536 = !DILocation(line: 0, scope: !6242)
!6537 = !DILocation(line: 1977, column: 25, scope: !6249)
!6538 = !DILocation(line: 1977, column: 20, scope: !6243)
!6539 = !DILocation(line: 525, column: 32, scope: !2299, inlinedAt: !6540)
!6540 = distinct !DILocation(line: 1984, column: 27, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 1984, column: 17)
!6542 = !DILocation(line: 526, column: 12, scope: !2299, inlinedAt: !6540)
!6543 = !DILocation(line: 526, column: 5, scope: !2299, inlinedAt: !6540)
!6544 = !DILocation(line: 1983, column: 19, scope: !6248)
!6545 = !DILocation(line: 1984, column: 53, scope: !6541)
!6546 = !DILocation(line: 1984, column: 17, scope: !6248)
!6547 = !DILocation(line: 525, column: 32, scope: !2299, inlinedAt: !6548)
!6548 = distinct !DILocation(line: 1985, column: 27, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 1985, column: 17)
!6550 = !DILocation(line: 526, column: 12, scope: !2299, inlinedAt: !6548)
!6551 = !DILocation(line: 526, column: 5, scope: !2299, inlinedAt: !6548)
!6552 = !DILocation(line: 1983, column: 28, scope: !6248)
!6553 = !DILocation(line: 1985, column: 53, scope: !6549)
!6554 = !DILocation(line: 1985, column: 17, scope: !6248)
!6555 = !DILocation(line: 1987, column: 33, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6248, file: !1, line: 1987, column: 17)
!6557 = !DILocation(line: 1987, column: 17, scope: !6556)
!6558 = !DILocation(line: 1987, column: 41, scope: !6556)
!6559 = !DILocation(line: 1987, column: 17, scope: !6248)
!6560 = !DILocation(line: 1993, column: 36, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6556, file: !1, line: 1987, column: 49)
!6562 = !DILocation(line: 1991, column: 17, scope: !6561)
!6563 = !DILocation(line: 1994, column: 13, scope: !6561)
!6564 = !DILocation(line: 1994, column: 25, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6556, file: !1, line: 1994, column: 24)
!6566 = !DILocation(line: 1994, column: 24, scope: !6556)
!6567 = !DILocation(line: 1995, column: 21, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6565, file: !1, line: 1994, column: 67)
!6569 = !DILocation(line: 1995, column: 61, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6568, file: !1, line: 1995, column: 21)
!6571 = !DILocation(line: 1995, column: 48, scope: !6570)
!6572 = !DILocation(line: 1995, column: 46, scope: !6570)
!6573 = !DILocation(line: 1995, column: 26, scope: !6570)
!6574 = !DILocation(line: 1996, column: 25, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6565, file: !1, line: 1996, column: 24)
!6576 = !DILocation(line: 1996, column: 24, scope: !6565)
!6577 = !DILocation(line: 1997, column: 25, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !1, line: 1997, column: 21)
!6579 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 1996, column: 60)
!6580 = !DILocation(line: 1997, column: 43, scope: !6578)
!6581 = !DILocation(line: 87, column: 39, scope: !2119, inlinedAt: !6582)
!6582 = distinct !DILocation(line: 1997, column: 28, scope: !6578)
!6583 = !DILocation(line: 88, column: 27, scope: !2119, inlinedAt: !6582)
!6584 = !DILocation(line: 88, column: 19, scope: !2119, inlinedAt: !6582)
!6585 = !DILocation(line: 89, column: 5, scope: !2119, inlinedAt: !6582)
!6586 = !DILocation(line: 93, column: 20, scope: !2131, inlinedAt: !6582)
!6587 = !DILocation(line: 93, column: 34, scope: !2131, inlinedAt: !6582)
!6588 = !DILocation(line: 93, column: 13, scope: !2131, inlinedAt: !6582)
!6589 = !DILocation(line: 95, column: 20, scope: !2131, inlinedAt: !6582)
!6590 = !DILocation(line: 95, column: 35, scope: !2131, inlinedAt: !6582)
!6591 = !DILocation(line: 95, column: 13, scope: !2131, inlinedAt: !6582)
!6592 = !DILocation(line: 97, column: 20, scope: !2131, inlinedAt: !6582)
!6593 = !DILocation(line: 97, column: 35, scope: !2131, inlinedAt: !6582)
!6594 = !DILocation(line: 97, column: 13, scope: !2131, inlinedAt: !6582)
!6595 = !DILocation(line: 99, column: 20, scope: !2131, inlinedAt: !6582)
!6596 = !DILocation(line: 99, column: 35, scope: !2131, inlinedAt: !6582)
!6597 = !DILocation(line: 99, column: 13, scope: !2131, inlinedAt: !6582)
!6598 = !DILocation(line: 0, scope: !6578)
!6599 = !DILocation(line: 102, column: 1, scope: !2119, inlinedAt: !6582)
!6600 = !DILocation(line: 1997, column: 21, scope: !6579)
!6601 = !DILocation(line: 0, scope: !2131, inlinedAt: !6582)
!6602 = !DILocation(line: 1997, column: 48, scope: !6578)
!6603 = !DILocation(line: 1998, column: 21, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6578, file: !1, line: 1997, column: 71)
!6605 = !DILocation(line: 1999, column: 41, scope: !6604)
!6606 = !{!4032, !192, i64 4}
!6607 = !DILocation(line: 2000, column: 17, scope: !6604)
!6608 = !DILocation(line: 2001, column: 25, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6575, file: !1, line: 2001, column: 24)
!6610 = !DILocation(line: 2001, column: 24, scope: !6575)
!6611 = !DILocation(line: 2002, column: 21, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6609, file: !1, line: 2001, column: 64)
!6613 = !DILocation(line: 2002, column: 61, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6612, file: !1, line: 2002, column: 21)
!6615 = !DILocation(line: 2002, column: 45, scope: !6614)
!6616 = !DILocation(line: 2002, column: 43, scope: !6614)
!6617 = !{!4032, !206, i64 56}
!6618 = !DILocation(line: 2002, column: 26, scope: !6614)
!6619 = !DILocation(line: 2003, column: 25, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6609, file: !1, line: 2003, column: 24)
!6621 = !DILocation(line: 2003, column: 24, scope: !6609)
!6622 = !DILocation(line: 2005, column: 51, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !1, line: 2005, column: 21)
!6624 = distinct !DILexicalBlock(scope: !6620, file: !1, line: 2003, column: 56)
!6625 = !{!204, !201, i64 2992}
!6626 = !DILocation(line: 2005, column: 21, scope: !6623)
!6627 = !DILocation(line: 2005, column: 63, scope: !6623)
!6628 = !DILocation(line: 2005, column: 21, scope: !6624)
!6629 = !DILocation(line: 2006, column: 21, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6623, file: !1, line: 2005, column: 72)
!6631 = !DILocation(line: 2013, column: 17, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6620, file: !1, line: 2010, column: 20)
!6633 = !DILocation(line: 2017, column: 13, scope: !6248)
!6634 = !DILocation(line: 2018, column: 13, scope: !6248)
!6635 = !DILocation(line: 2019, column: 13, scope: !6248)
!6636 = !DILocation(line: 0, scope: !6248)
!6637 = !DILocation(line: 2020, column: 25, scope: !6253)
!6638 = !DILocation(line: 2020, column: 20, scope: !6249)
!6639 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6640)
!6640 = distinct !DILocation(line: 2024, column: 33, scope: !6252)
!6641 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6640)
!6642 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6640)
!6643 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6640)
!6644 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6640)
!6645 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6640)
!6646 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6640)
!6647 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6640)
!6648 = !DILocation(line: 0, scope: !6252)
!6649 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6640)
!6650 = !DILocation(line: 2024, column: 22, scope: !6252)
!6651 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6652)
!6652 = distinct !DILocation(line: 2025, column: 31, scope: !6252)
!6653 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6652)
!6654 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6652)
!6655 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6652)
!6656 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6652)
!6657 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6652)
!6658 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6652)
!6659 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6652)
!6660 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6652)
!6661 = !DILocation(line: 2025, column: 31, scope: !6252)
!6662 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6663)
!6663 = distinct !DILocation(line: 2026, column: 24, scope: !6252)
!6664 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6663)
!6665 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6663)
!6666 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6663)
!6667 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6663)
!6668 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6663)
!6669 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6663)
!6670 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6663)
!6671 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6663)
!6672 = !DILocation(line: 2026, column: 24, scope: !6252)
!6673 = !DILocation(line: 2026, column: 17, scope: !6252)
!6674 = !DILocation(line: 2027, column: 29, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6252, file: !1, line: 2027, column: 17)
!6676 = !DILocation(line: 2027, column: 17, scope: !6252)
!6677 = !DILocation(line: 2028, column: 17, scope: !6675)
!6678 = !DILocation(line: 2029, column: 30, scope: !6252)
!6679 = !DILocation(line: 2029, column: 25, scope: !6252)
!6680 = !DILocation(line: 2030, column: 13, scope: !6252)
!6681 = !DILocation(line: 2030, column: 18, scope: !6252)
!6682 = !DILocation(line: 2031, column: 13, scope: !6252)
!6683 = !DILocation(line: 2033, column: 18, scope: !6261)
!6684 = !DILocation(line: 2033, column: 37, scope: !6261)
!6685 = !DILocation(line: 2033, column: 31, scope: !6261)
!6686 = !DILocation(line: 2035, column: 17, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6261, file: !1, line: 2033, column: 46)
!6688 = !DILocation(line: 2036, column: 17, scope: !6687)
!6689 = !DILocation(line: 2037, column: 44, scope: !6260)
!6690 = !DILocation(line: 2037, column: 38, scope: !6260)
!6691 = !DILocation(line: 2038, column: 26, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2038, column: 21)
!6693 = !{!3674, !201, i64 64}
!6694 = !DILocation(line: 2038, column: 22, scope: !6692)
!6695 = !DILocation(line: 2038, column: 21, scope: !6259)
!6696 = !DILocation(line: 2040, column: 21, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6692, file: !1, line: 2038, column: 36)
!6698 = !DILocation(line: 2041, column: 21, scope: !6697)
!6699 = !DILocation(line: 2044, column: 17, scope: !6259)
!6700 = !DILocation(line: 2045, column: 17, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2045, column: 17)
!6702 = !DILocation(line: 2046, column: 24, scope: !6259)
!6703 = !DILocation(line: 2049, column: 38, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2049, column: 21)
!6705 = !DILocation(line: 2044, column: 31, scope: !6259)
!6706 = !DILocation(line: 2049, column: 21, scope: !6704)
!6707 = !DILocation(line: 2049, column: 59, scope: !6704)
!6708 = !DILocation(line: 2049, column: 65, scope: !6704)
!6709 = !DILocation(line: 2049, column: 62, scope: !6704)
!6710 = !DILocation(line: 2049, column: 21, scope: !6259)
!6711 = !DILocation(line: 2050, column: 21, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6704, file: !1, line: 2049, column: 72)
!6713 = !DILocation(line: 2051, column: 21, scope: !6712)
!6714 = !DILocation(line: 2052, column: 21, scope: !6712)
!6715 = !DILocation(line: 2054, column: 24, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2054, column: 21)
!6717 = !DILocation(line: 2054, column: 21, scope: !6716)
!6718 = !DILocation(line: 2054, column: 21, scope: !6259)
!6719 = !DILocation(line: 2055, column: 21, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 2054, column: 29)
!6721 = !DILocation(line: 2056, column: 30, scope: !6720)
!6722 = !DILocation(line: 2056, column: 21, scope: !6720)
!6723 = !DILocation(line: 2057, column: 17, scope: !6720)
!6724 = !DILocation(line: 223, column: 26, scope: !1202, inlinedAt: !6725)
!6725 = distinct !DILocation(line: 2058, column: 32, scope: !6259)
!6726 = !DILocation(line: 223, column: 36, scope: !1202, inlinedAt: !6725)
!6727 = !DILocation(line: 224, column: 5, scope: !1202, inlinedAt: !6725)
!6728 = !DILocation(line: 224, column: 14, scope: !1202, inlinedAt: !6725)
!6729 = !DILocation(line: 226, column: 9, scope: !1214, inlinedAt: !6725)
!6730 = !DILocation(line: 226, column: 45, scope: !1214, inlinedAt: !6725)
!6731 = !DILocation(line: 226, column: 9, scope: !1202, inlinedAt: !6725)
!6732 = !DILocation(line: 226, column: 52, scope: !1214, inlinedAt: !6725)
!6733 = !DILocation(line: 228, column: 1, scope: !1202, inlinedAt: !6725)
!6734 = !DILocation(line: 2058, column: 26, scope: !6259)
!6735 = !DILocation(line: 2059, column: 21, scope: !6259)
!6736 = !DILocation(line: 227, column: 12, scope: !1202, inlinedAt: !6725)
!6737 = !DILocation(line: 227, column: 5, scope: !1202, inlinedAt: !6725)
!6738 = !DILocation(line: 2059, column: 25, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6259, file: !1, line: 2059, column: 21)
!6740 = !DILocation(line: 2060, column: 21, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6739, file: !1, line: 2059, column: 51)
!6742 = !DILocation(line: 2061, column: 21, scope: !6741)
!6743 = !DILocation(line: 2064, column: 13, scope: !6260)
!6744 = !DILocation(line: 2066, column: 29, scope: !6264)
!6745 = !DILocation(line: 2066, column: 23, scope: !6264)
!6746 = !DILocation(line: 2067, column: 17, scope: !6264)
!6747 = !DILocation(line: 2070, column: 9, scope: !6253)
!6748 = !DILocation(line: 525, column: 32, scope: !2299, inlinedAt: !6749)
!6749 = distinct !DILocation(line: 2073, column: 20, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6231, file: !1, line: 2073, column: 13)
!6751 = !DILocation(line: 526, column: 12, scope: !2299, inlinedAt: !6749)
!6752 = !DILocation(line: 526, column: 5, scope: !2299, inlinedAt: !6749)
!6753 = !DILocation(line: 1921, column: 15, scope: !6231)
!6754 = !DILocation(line: 2073, column: 46, scope: !6750)
!6755 = !DILocation(line: 2073, column: 13, scope: !6231)
!6756 = !DILocation(line: 2075, column: 20, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6231, file: !1, line: 2075, column: 13)
!6758 = !DILocation(line: 1921, column: 21, scope: !6231)
!6759 = !DILocation(line: 2075, column: 49, scope: !6757)
!6760 = !DILocation(line: 2075, column: 13, scope: !6231)
!6761 = !DILocation(line: 2081, column: 20, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6231, file: !1, line: 2081, column: 13)
!6763 = !DILocation(line: 2081, column: 31, scope: !6762)
!6764 = !DILocation(line: 2081, column: 39, scope: !6762)
!6765 = !DILocation(line: 2081, column: 69, scope: !6762)
!6766 = !DILocation(line: 2081, column: 89, scope: !6762)
!6767 = !DILocation(line: 2081, column: 13, scope: !6231)
!6768 = !DILocation(line: 2082, column: 13, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6762, file: !1, line: 2081, column: 96)
!6770 = !DILocation(line: 2083, column: 13, scope: !6769)
!6771 = !DILocation(line: 2084, column: 9, scope: !6769)
!6772 = !DILocation(line: 2086, column: 13, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6762, file: !1, line: 2084, column: 16)
!6774 = !DILocation(line: 2089, column: 17, scope: !6773)
!6775 = !DILocation(line: 2089, column: 35, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 2089, column: 17)
!6777 = !DILocation(line: 2092, column: 13, scope: !6773)
!6778 = !DILocation(line: 2096, column: 13, scope: !6773)
!6779 = !DILocation(line: 0, scope: !6757)
!6780 = !DILocation(line: 0, scope: !6231)
!6781 = !DILocation(line: 2107, column: 9, scope: !6266)
!6782 = !DILocation(line: 2107, column: 41, scope: !6266)
!6783 = !DILocation(line: 2107, column: 25, scope: !6266)
!6784 = !DILocation(line: 106, column: 35, scope: !491, inlinedAt: !6785)
!6785 = distinct !DILocation(line: 2109, column: 13, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6266, file: !1, line: 2109, column: 13)
!6787 = !DILocation(line: 106, column: 44, scope: !491, inlinedAt: !6785)
!6788 = !DILocation(line: 106, column: 56, scope: !491, inlinedAt: !6785)
!6789 = !DILocation(line: 107, column: 5, scope: !491, inlinedAt: !6785)
!6790 = !DILocation(line: 108, column: 36, scope: !498, inlinedAt: !6785)
!6791 = !DILocation(line: 108, column: 33, scope: !498, inlinedAt: !6785)
!6792 = !DILocation(line: 108, column: 57, scope: !498, inlinedAt: !6785)
!6793 = !DILocation(line: 108, column: 84, scope: !498, inlinedAt: !6785)
!6794 = !DILocation(line: 108, column: 32, scope: !498, inlinedAt: !6785)
!6795 = !DILocation(line: 108, column: 16, scope: !498, inlinedAt: !6785)
!6796 = !DILocation(line: 109, column: 16, scope: !514, inlinedAt: !6785)
!6797 = !DILocation(line: 109, column: 13, scope: !514, inlinedAt: !6785)
!6798 = !DILocation(line: 109, column: 42, scope: !514, inlinedAt: !6785)
!6799 = !DILocation(line: 109, column: 13, scope: !498, inlinedAt: !6785)
!6800 = !DILocation(line: 111, column: 16, scope: !520, inlinedAt: !6785)
!6801 = !DILocation(line: 111, column: 13, scope: !520, inlinedAt: !6785)
!6802 = !DILocation(line: 111, column: 13, scope: !498, inlinedAt: !6785)
!6803 = !DILocation(line: 111, column: 30, scope: !520, inlinedAt: !6785)
!6804 = !DILocation(line: 112, column: 26, scope: !498, inlinedAt: !6785)
!6805 = !DILocation(line: 113, column: 13, scope: !498, inlinedAt: !6785)
!6806 = !DILocation(line: 114, column: 28, scope: !498, inlinedAt: !6785)
!6807 = !DILocation(line: 115, column: 5, scope: !491, inlinedAt: !6785)
!6808 = !DILocation(line: 116, column: 5, scope: !491, inlinedAt: !6785)
!6809 = !DILocation(line: 117, column: 1, scope: !491, inlinedAt: !6785)
!6810 = !DILocation(line: 2109, column: 13, scope: !6266)
!6811 = !DILocation(line: 2110, column: 20, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6266, file: !1, line: 2110, column: 13)
!6813 = !DILocation(line: 2110, column: 13, scope: !6812)
!6814 = !DILocation(line: 2110, column: 13, scope: !6266)
!6815 = !DILocation(line: 2112, column: 17, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !1, line: 2112, column: 17)
!6817 = distinct !DILexicalBlock(scope: !6812, file: !1, line: 2110, column: 34)
!6818 = !DILocation(line: 2107, column: 18, scope: !6266)
!6819 = !DILocation(line: 2112, column: 23, scope: !6816)
!6820 = !DILocation(line: 2112, column: 17, scope: !6817)
!6821 = !DILocation(line: 2113, column: 17, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 2112, column: 29)
!6823 = !DILocation(line: 2114, column: 13, scope: !6822)
!6824 = !DILocation(line: 2114, column: 30, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 2114, column: 24)
!6826 = !DILocation(line: 2114, column: 24, scope: !6816)
!6827 = !DILocation(line: 2115, column: 17, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6825, file: !1, line: 2114, column: 43)
!6829 = !DILocation(line: 2116, column: 17, scope: !6828)
!6830 = !DILocation(line: 2119, column: 5, scope: !6267)
!6831 = !DILocation(line: 110, column: 13, scope: !514, inlinedAt: !6785)
!6832 = !DILocation(line: 2109, column: 41, scope: !6786)
!6833 = !DILocation(line: 2123, column: 5, scope: !6213)
!6834 = !DILocation(line: 2124, column: 5, scope: !6213)
!6835 = !DILocation(line: 0, scope: !6316)
!6836 = !DILocation(line: 2126, column: 1, scope: !6213)
!6837 = distinct !DISubprogram(name: "rdbLoad", scope: !1, file: !1, line: 2135, type: !4593, isLocal: false, isDefinition: true, scopeLine: 2135, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6838)
!6838 = !{!6839, !6840, !6841, !6842, !6843}
!6839 = !DILocalVariable(name: "filename", arg: 1, scope: !6837, file: !1, line: 2135, type: !21)
!6840 = !DILocalVariable(name: "rsi", arg: 2, scope: !6837, file: !1, line: 2135, type: !3980)
!6841 = !DILocalVariable(name: "fp", scope: !6837, file: !1, line: 2136, type: !267)
!6842 = !DILocalVariable(name: "rdb", scope: !6837, file: !1, line: 2137, type: !221)
!6843 = !DILocalVariable(name: "retval", scope: !6837, file: !1, line: 2138, type: !20)
!6844 = !DILocation(line: 2135, column: 19, scope: !6837)
!6845 = !DILocation(line: 2135, column: 42, scope: !6837)
!6846 = !DILocation(line: 2137, column: 5, scope: !6837)
!6847 = !DILocation(line: 2140, column: 15, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6837, file: !1, line: 2140, column: 9)
!6849 = !DILocation(line: 2136, column: 11, scope: !6837)
!6850 = !DILocation(line: 2140, column: 36, scope: !6848)
!6851 = !DILocation(line: 2140, column: 9, scope: !6837)
!6852 = !DILocation(line: 1847, column: 25, scope: !6079, inlinedAt: !6853)
!6853 = distinct !DILocation(line: 2141, column: 5, scope: !6837)
!6854 = !DILocation(line: 1848, column: 5, scope: !6079, inlinedAt: !6853)
!6855 = !DILocation(line: 1851, column: 20, scope: !6079, inlinedAt: !6853)
!6856 = !DILocation(line: 1852, column: 33, scope: !6079, inlinedAt: !6853)
!6857 = !DILocation(line: 1852, column: 31, scope: !6079, inlinedAt: !6853)
!6858 = !DILocation(line: 1853, column: 33, scope: !6079, inlinedAt: !6853)
!6859 = !DILocation(line: 1854, column: 15, scope: !6131, inlinedAt: !6853)
!6860 = !DILocation(line: 1848, column: 17, scope: !6079, inlinedAt: !6853)
!6861 = !DILocation(line: 1854, column: 9, scope: !6131, inlinedAt: !6853)
!6862 = !DILocation(line: 1854, column: 32, scope: !6131, inlinedAt: !6853)
!6863 = !DILocation(line: 1854, column: 9, scope: !6079, inlinedAt: !6853)
!6864 = !DILocation(line: 1857, column: 41, scope: !6137, inlinedAt: !6853)
!6865 = !DILocation(line: 0, scope: !6837)
!6866 = !DILocation(line: 1859, column: 1, scope: !6079, inlinedAt: !6853)
!6867 = !DILocation(line: 2137, column: 9, scope: !6837)
!6868 = !DILocation(line: 2142, column: 5, scope: !6837)
!6869 = !DILocation(line: 2143, column: 14, scope: !6837)
!6870 = !DILocation(line: 2138, column: 9, scope: !6837)
!6871 = !DILocation(line: 2144, column: 5, scope: !6837)
!6872 = !DILocation(line: 1870, column: 20, scope: !6159, inlinedAt: !6873)
!6873 = distinct !DILocation(line: 2145, column: 5, scope: !6837)
!6874 = !DILocation(line: 1871, column: 1, scope: !6159, inlinedAt: !6873)
!6875 = !DILocation(line: 2146, column: 5, scope: !6837)
!6876 = !DILocation(line: 0, scope: !6848)
!6877 = !DILocation(line: 2147, column: 1, scope: !6837)
!6878 = distinct !DISubprogram(name: "backgroundSaveDoneHandlerDisk", scope: !1, file: !1, line: 2151, type: !6879, isLocal: false, isDefinition: true, scopeLine: 2151, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6881)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !20, !20}
!6881 = !{!6882, !6883, !6884}
!6882 = !DILocalVariable(name: "exitcode", arg: 1, scope: !6878, file: !1, line: 2151, type: !20)
!6883 = !DILocalVariable(name: "bysignal", arg: 2, scope: !6878, file: !1, line: 2151, type: !20)
!6884 = !DILocalVariable(name: "latency", scope: !6885, file: !1, line: 2162, type: !2821)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !1, line: 2161, column: 12)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !1, line: 2158, column: 16)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 2152, column: 9)
!6888 = !DILocation(line: 1380, column: 10, scope: !4784, inlinedAt: !6889)
!6889 = distinct !DILocation(line: 2167, column: 9, scope: !6885)
!6890 = !DILocation(line: 2151, column: 40, scope: !6878)
!6891 = !DILocation(line: 2151, column: 54, scope: !6878)
!6892 = !DILocation(line: 2152, column: 19, scope: !6887)
!6893 = !DILocation(line: 2153, column: 9, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6887, file: !1, line: 2152, column: 37)
!6895 = !DILocation(line: 2155, column: 31, scope: !6894)
!6896 = !DILocation(line: 2155, column: 46, scope: !6894)
!6897 = !DILocation(line: 2155, column: 37, scope: !6894)
!6898 = !DILocation(line: 2155, column: 22, scope: !6894)
!6899 = !DILocation(line: 2156, column: 27, scope: !6894)
!6900 = !DILocation(line: 2156, column: 25, scope: !6894)
!6901 = !DILocation(line: 2157, column: 34, scope: !6894)
!6902 = !DILocation(line: 2158, column: 5, scope: !6894)
!6903 = !DILocation(line: 2152, column: 10, scope: !6887)
!6904 = !DILocation(line: 2158, column: 38, scope: !6886)
!6905 = !DILocation(line: 2158, column: 26, scope: !6886)
!6906 = !DILocation(line: 2159, column: 9, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6886, file: !1, line: 2158, column: 44)
!6908 = !DILocation(line: 2160, column: 34, scope: !6907)
!6909 = !DILocation(line: 2161, column: 5, scope: !6907)
!6910 = !DILocation(line: 2164, column: 9, scope: !6885)
!6911 = !DILocation(line: 2166, column: 9, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 2166, column: 9)
!6913 = !DILocation(line: 2166, column: 9, scope: !6885)
!6914 = !DILocation(line: 2166, column: 9, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6912, file: !1, line: 2166, column: 9)
!6916 = !DILocation(line: 2162, column: 18, scope: !6885)
!6917 = !DILocation(line: 2167, column: 34, scope: !6885)
!6918 = !DILocation(line: 1379, column: 30, scope: !4784, inlinedAt: !6889)
!6919 = !DILocation(line: 1380, column: 5, scope: !4784, inlinedAt: !6889)
!6920 = !DILocation(line: 1382, column: 5, scope: !4784, inlinedAt: !6889)
!6921 = !DILocation(line: 1383, column: 5, scope: !4784, inlinedAt: !6889)
!6922 = !DILocation(line: 1384, column: 1, scope: !4784, inlinedAt: !6889)
!6923 = !DILocation(line: 2168, column: 9, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 2168, column: 9)
!6925 = !DILocation(line: 2168, column: 9, scope: !6885)
!6926 = !DILocation(line: 2169, column: 9, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 2169, column: 9)
!6928 = !DILocation(line: 2168, column: 9, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6924, file: !1, line: 2168, column: 9)
!6930 = !DILocation(line: 2169, column: 9, scope: !6885)
!6931 = !DILocation(line: 2172, column: 22, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6885, file: !1, line: 2172, column: 13)
!6933 = !DILocation(line: 2172, column: 13, scope: !6885)
!6934 = !DILocation(line: 2173, column: 38, scope: !6932)
!6935 = !DILocation(line: 2173, column: 13, scope: !6932)
!6936 = !DILocation(line: 2175, column: 26, scope: !6878)
!6937 = !DILocation(line: 2176, column: 27, scope: !6878)
!6938 = !DILocation(line: 2177, column: 33, scope: !6878)
!6939 = !DILocation(line: 2177, column: 51, scope: !6878)
!6940 = !DILocation(line: 2177, column: 43, scope: !6878)
!6941 = !DILocation(line: 2177, column: 31, scope: !6878)
!6942 = !{!204, !205, i64 2152}
!6943 = !DILocation(line: 2178, column: 32, scope: !6878)
!6944 = !DILocation(line: 2181, column: 42, scope: !6878)
!6945 = !DILocation(line: 2181, column: 31, scope: !6878)
!6946 = !DILocation(line: 2181, column: 5, scope: !6878)
!6947 = !DILocation(line: 2182, column: 1, scope: !6878)
!6948 = distinct !DISubprogram(name: "backgroundSaveDoneHandlerSocket", scope: !1, file: !1, line: 2187, type: !6879, isLocal: false, isDefinition: true, scopeLine: 2187, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !6949)
!6949 = !{!6950, !6951, !6952, !6953, !6956, !6957, !6963, !7077, !7080}
!6950 = !DILocalVariable(name: "exitcode", arg: 1, scope: !6948, file: !1, line: 2187, type: !20)
!6951 = !DILocalVariable(name: "bysignal", arg: 2, scope: !6948, file: !1, line: 2187, type: !20)
!6952 = !DILocalVariable(name: "ok_slaves", scope: !6948, file: !1, line: 2188, type: !1009)
!6953 = !DILocalVariable(name: "readlen", scope: !6954, file: !1, line: 2213, type: !20)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !1, line: 2212, column: 37)
!6955 = distinct !DILexicalBlock(scope: !6948, file: !1, line: 2212, column: 9)
!6956 = !DILocalVariable(name: "ln", scope: !6948, file: !1, line: 2237, type: !4155)
!6957 = !DILocalVariable(name: "li", scope: !6948, file: !1, line: 2238, type: !6958)
!6958 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !4151, line: 45, baseType: !6959)
!6959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !4151, line: 42, size: 128, elements: !6960)
!6960 = !{!6961, !6962}
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6959, file: !4151, line: 43, baseType: !4155, size: 64)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !6959, file: !4151, line: 44, baseType: !20, size: 32, offset: 64)
!6963 = !DILocalVariable(name: "slave", scope: !6964, file: !1, line: 2242, type: !6965)
!6964 = distinct !DILexicalBlock(scope: !6948, file: !1, line: 2241, column: 33)
!6965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6966, size: 64)
!6966 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !2092, line: 780, baseType: !6967)
!6967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !2092, line: 723, size: 135360, elements: !6968)
!6968 = !{!6969, !6970, !6971, !6972, !6973, !6974, !6975, !6976, !6977, !6978, !6980, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013, !7014, !7015, !7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024, !7025, !7026, !7027, !7028, !7032, !7033, !7049, !7050, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6967, file: !2092, line: 724, baseType: !55, size: 64)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !6967, file: !2092, line: 725, baseType: !20, size: 32, offset: 64)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !6967, file: !2092, line: 726, baseType: !4137, size: 64, offset: 128)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6967, file: !2092, line: 727, baseType: !2090, size: 64, offset: 192)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !6967, file: !2092, line: 728, baseType: !261, size: 64, offset: 256)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !6967, file: !2092, line: 729, baseType: !550, size: 64, offset: 320)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !6967, file: !2092, line: 730, baseType: !261, size: 64, offset: 384)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !6967, file: !2092, line: 734, baseType: !550, size: 64, offset: 448)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !6967, file: !2092, line: 735, baseType: !20, size: 32, offset: 512)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6967, file: !2092, line: 736, baseType: !6979, size: 64, offset: 576)
!6979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6967, file: !2092, line: 737, baseType: !6981, size: 64, offset: 640)
!6981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6982, size: 64)
!6982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !2092, line: 1307, size: 640, elements: !6983)
!6983 = !{!6984, !6985, !6990, !6991, !6992, !6993, !6998, !6999, !7000, !7001, !7002}
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6982, file: !2092, line: 1308, baseType: !21, size: 64)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !6982, file: !2092, line: 1309, baseType: !6986, size: 64, offset: 64)
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6987, size: 64)
!6987 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !2092, line: 1305, baseType: !6988)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{null, !6965}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !6982, file: !2092, line: 1310, baseType: !20, size: 32, offset: 128)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !6982, file: !2092, line: 1311, baseType: !21, size: 64, offset: 192)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6982, file: !2092, line: 1312, baseType: !20, size: 32, offset: 256)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !6982, file: !2092, line: 1315, baseType: !6994, size: 64, offset: 320)
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !2092, line: 1306, baseType: !6996)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{!478, !6981, !6979, !20, !478}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !6982, file: !2092, line: 1317, baseType: !20, size: 32, offset: 384)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !6982, file: !2092, line: 1318, baseType: !20, size: 32, offset: 416)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !6982, file: !2092, line: 1319, baseType: !20, size: 32, offset: 448)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !6982, file: !2092, line: 1320, baseType: !12, size: 64, offset: 512)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !6982, file: !2092, line: 1320, baseType: !12, size: 64, offset: 576)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !6967, file: !2092, line: 737, baseType: !6981, size: 64, offset: 704)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !6967, file: !2092, line: 738, baseType: !20, size: 32, offset: 768)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !6967, file: !2092, line: 739, baseType: !20, size: 32, offset: 800)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !6967, file: !2092, line: 740, baseType: !7, size: 64, offset: 832)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !6967, file: !2092, line: 741, baseType: !4149, size: 64, offset: 896)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !6967, file: !2092, line: 742, baseType: !4, size: 64, offset: 960)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !6967, file: !2092, line: 743, baseType: !550, size: 64, offset: 1024)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6967, file: !2092, line: 745, baseType: !5, size: 64, offset: 1088)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !6967, file: !2092, line: 746, baseType: !5, size: 64, offset: 1152)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !6967, file: !2092, line: 747, baseType: !5, size: 64, offset: 1216)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6967, file: !2092, line: 748, baseType: !20, size: 32, offset: 1280)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !6967, file: !2092, line: 749, baseType: !20, size: 32, offset: 1312)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !6967, file: !2092, line: 750, baseType: !20, size: 32, offset: 1344)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !6967, file: !2092, line: 751, baseType: !20, size: 32, offset: 1376)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !6967, file: !2092, line: 752, baseType: !20, size: 32, offset: 1408)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !6967, file: !2092, line: 753, baseType: !240, size: 64, offset: 1472)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !6967, file: !2092, line: 754, baseType: !240, size: 64, offset: 1536)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !6967, file: !2092, line: 755, baseType: !261, size: 64, offset: 1600)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !6967, file: !2092, line: 756, baseType: !12, size: 64, offset: 1664)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !6967, file: !2092, line: 757, baseType: !12, size: 64, offset: 1728)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !6967, file: !2092, line: 758, baseType: !12, size: 64, offset: 1792)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !6967, file: !2092, line: 759, baseType: !12, size: 64, offset: 1856)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !6967, file: !2092, line: 760, baseType: !12, size: 64, offset: 1920)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !6967, file: !2092, line: 763, baseType: !3987, size: 328, offset: 1984)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !6967, file: !2092, line: 764, baseType: !20, size: 32, offset: 2336)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !6967, file: !2092, line: 765, baseType: !7029, size: 368, offset: 2368)
!7029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 368, elements: !7030)
!7030 = !{!7031}
!7031 = !DISubrange(count: 46)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !6967, file: !2092, line: 766, baseType: !20, size: 32, offset: 2752)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !6967, file: !2092, line: 767, baseType: !7034, size: 256, offset: 2816)
!7034 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !2092, line: 673, baseType: !7035)
!7035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !2092, line: 665, size: 256, elements: !7036)
!7036 = !{!7037, !7045, !7046, !7047, !7048}
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !7035, file: !2092, line: 666, baseType: !7038, size: 64)
!7038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7039, size: 64)
!7039 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !2092, line: 663, baseType: !7040)
!7040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !2092, line: 659, size: 192, elements: !7041)
!7041 = !{!7042, !7043, !7044}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !7040, file: !2092, line: 660, baseType: !6979, size: 64)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !7040, file: !2092, line: 661, baseType: !20, size: 32, offset: 64)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7040, file: !2092, line: 662, baseType: !6981, size: 64, offset: 128)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7035, file: !2092, line: 667, baseType: !20, size: 32, offset: 64)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !7035, file: !2092, line: 668, baseType: !20, size: 32, offset: 96)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !7035, file: !2092, line: 671, baseType: !20, size: 32, offset: 128)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !7035, file: !2092, line: 672, baseType: !5, size: 64, offset: 192)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !6967, file: !2092, line: 768, baseType: !20, size: 32, offset: 3072)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !6967, file: !2092, line: 769, baseType: !7051, size: 704, offset: 3136)
!7051 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !2092, line: 703, baseType: !7052)
!7052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !2092, line: 677, size: 704, elements: !7053)
!7053 = !{!7054, !7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7052, file: !2092, line: 679, baseType: !2821, size: 64)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !7052, file: !2092, line: 683, baseType: !41, size: 64, offset: 64)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !7052, file: !2092, line: 685, baseType: !2090, size: 64, offset: 128)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !7052, file: !2092, line: 689, baseType: !550, size: 64, offset: 192)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !7052, file: !2092, line: 690, baseType: !2090, size: 64, offset: 256)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !7052, file: !2092, line: 691, baseType: !2090, size: 64, offset: 320)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !7052, file: !2092, line: 692, baseType: !2821, size: 64, offset: 384)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !7052, file: !2092, line: 692, baseType: !2821, size: 64, offset: 448)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !7052, file: !2092, line: 693, baseType: !20, size: 32, offset: 512)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !7052, file: !2092, line: 696, baseType: !20, size: 32, offset: 544)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !7052, file: !2092, line: 697, baseType: !12, size: 64, offset: 576)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !7052, file: !2092, line: 700, baseType: !13, size: 64, offset: 640)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !6967, file: !2092, line: 770, baseType: !12, size: 64, offset: 3840)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !6967, file: !2092, line: 771, baseType: !4149, size: 64, offset: 3904)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !6967, file: !2092, line: 772, baseType: !41, size: 64, offset: 3968)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !6967, file: !2092, line: 773, baseType: !4149, size: 64, offset: 4032)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !6967, file: !2092, line: 774, baseType: !261, size: 64, offset: 4096)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !6967, file: !2092, line: 775, baseType: !4155, size: 64, offset: 4160)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !6967, file: !2092, line: 778, baseType: !20, size: 32, offset: 4224)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6967, file: !2092, line: 779, baseType: !7074, size: 131072, offset: 4256)
!7074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 131072, elements: !7075)
!7075 = !{!7076}
!7076 = !DISubrange(count: 16384)
!7077 = !DILocalVariable(name: "j", scope: !7078, file: !1, line: 2245, type: !55)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !1, line: 2244, column: 62)
!7079 = distinct !DILexicalBlock(scope: !6964, file: !1, line: 2244, column: 13)
!7080 = !DILocalVariable(name: "errorcode", scope: !7078, file: !1, line: 2246, type: !20)
!7081 = !DILocation(line: 2187, column: 42, scope: !6948)
!7082 = !DILocation(line: 2187, column: 56, scope: !6948)
!7083 = !DILocation(line: 2190, column: 19, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !6948, file: !1, line: 2190, column: 9)
!7085 = !DILocation(line: 2191, column: 9, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 2190, column: 37)
!7087 = !DILocation(line: 2193, column: 5, scope: !7086)
!7088 = !DILocation(line: 2190, column: 10, scope: !7084)
!7089 = !DILocation(line: 2193, column: 38, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 2193, column: 16)
!7091 = !DILocation(line: 2193, column: 26, scope: !7090)
!7092 = !DILocation(line: 2194, column: 9, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7090, file: !1, line: 2193, column: 44)
!7094 = !DILocation(line: 2195, column: 5, scope: !7093)
!7095 = !DILocation(line: 2196, column: 9, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7090, file: !1, line: 2195, column: 12)
!7097 = !DILocation(line: 2199, column: 26, scope: !6948)
!7098 = !DILocation(line: 2200, column: 27, scope: !6948)
!7099 = !DILocation(line: 2201, column: 32, scope: !6948)
!7100 = !DILocation(line: 2210, column: 17, scope: !6948)
!7101 = !DILocation(line: 2188, column: 15, scope: !6948)
!7102 = !DILocation(line: 2211, column: 18, scope: !6948)
!7103 = !DILocation(line: 2212, column: 19, scope: !6955)
!7104 = !DILocation(line: 2213, column: 13, scope: !6954)
!7105 = !DILocation(line: 2215, column: 25, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !6954, file: !1, line: 2215, column: 13)
!7107 = !{!204, !192, i64 2188}
!7108 = !DILocation(line: 2215, column: 13, scope: !7106)
!7109 = !DILocation(line: 2215, column: 78, scope: !7106)
!7110 = !DILocation(line: 2215, column: 13, scope: !6954)
!7111 = !DILocation(line: 2218, column: 23, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7106, file: !1, line: 2217, column: 9)
!7113 = !DILocation(line: 2222, column: 61, scope: !7112)
!7114 = !DILocation(line: 2222, column: 60, scope: !7112)
!7115 = !DILocation(line: 2222, column: 25, scope: !7112)
!7116 = !DILocation(line: 2223, column: 17, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7112, file: !1, line: 2223, column: 17)
!7118 = !DILocation(line: 2223, column: 25, scope: !7117)
!7119 = !DILocation(line: 2224, column: 29, scope: !7117)
!7120 = !DILocation(line: 2224, column: 71, scope: !7117)
!7121 = !DILocation(line: 2224, column: 17, scope: !7117)
!7122 = !DILocation(line: 2225, column: 31, scope: !7117)
!7123 = !DILocation(line: 2223, column: 17, scope: !7112)
!7124 = !DILocation(line: 2227, column: 30, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7117, file: !1, line: 2226, column: 13)
!7126 = !DILocation(line: 2228, column: 13, scope: !7125)
!7127 = !DILocation(line: 0, scope: !6948)
!7128 = !DILocation(line: 2230, column: 5, scope: !6954)
!7129 = !DILocation(line: 2232, column: 18, scope: !6948)
!7130 = !DILocation(line: 2232, column: 5, scope: !6948)
!7131 = !DILocation(line: 2233, column: 18, scope: !6948)
!7132 = !{!204, !192, i64 2184}
!7133 = !DILocation(line: 2233, column: 5, scope: !6948)
!7134 = !DILocation(line: 2238, column: 5, scope: !6948)
!7135 = !DILocation(line: 2240, column: 23, scope: !6948)
!7136 = !{!204, !201, i64 536}
!7137 = !DILocation(line: 2238, column: 14, scope: !6948)
!7138 = !DILocation(line: 2240, column: 5, scope: !6948)
!7139 = !DILocation(line: 2241, column: 5, scope: !6948)
!7140 = !DILocation(line: 2241, column: 17, scope: !6948)
!7141 = !DILocation(line: 2237, column: 15, scope: !6948)
!7142 = !DILocation(line: 2242, column: 29, scope: !6964)
!7143 = !{!7144, !201, i64 16}
!7144 = !{!"listNode", !201, i64 0, !201, i64 8, !201, i64 16}
!7145 = !DILocation(line: 2242, column: 17, scope: !6964)
!7146 = !DILocation(line: 2244, column: 20, scope: !7079)
!7147 = !{!7148, !192, i64 168}
!7148 = !{!"client", !205, i64 0, !192, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !205, i64 40, !201, i64 48, !205, i64 56, !192, i64 64, !201, i64 72, !201, i64 80, !201, i64 88, !192, i64 96, !192, i64 100, !205, i64 104, !201, i64 112, !206, i64 120, !205, i64 128, !205, i64 136, !205, i64 144, !205, i64 152, !192, i64 160, !192, i64 164, !192, i64 168, !192, i64 172, !192, i64 176, !205, i64 184, !205, i64 192, !201, i64 200, !206, i64 208, !206, i64 216, !206, i64 224, !206, i64 232, !206, i64 240, !193, i64 248, !192, i64 292, !193, i64 296, !192, i64 344, !7149, i64 352, !192, i64 384, !7150, i64 392, !206, i64 480, !201, i64 488, !201, i64 496, !201, i64 504, !201, i64 512, !201, i64 520, !192, i64 528, !193, i64 532}
!7149 = !{!"multiState", !201, i64 0, !192, i64 8, !192, i64 12, !192, i64 16, !205, i64 24}
!7150 = !{!"blockingState", !206, i64 0, !201, i64 8, !201, i64 16, !205, i64 24, !201, i64 32, !201, i64 40, !206, i64 48, !206, i64 56, !192, i64 64, !192, i64 68, !206, i64 72, !201, i64 80}
!7151 = !DILocation(line: 2244, column: 30, scope: !7079)
!7152 = !DILocation(line: 2244, column: 13, scope: !6964)
!7153 = !DILocation(line: 2246, column: 17, scope: !7078)
!7154 = !DILocation(line: 2245, column: 22, scope: !7078)
!7155 = !DILocation(line: 2251, column: 18, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2251, column: 13)
!7157 = !DILocation(line: 2251, column: 29, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7156, file: !1, line: 2251, column: 13)
!7159 = !DILocation(line: 2251, column: 27, scope: !7158)
!7160 = !DILocation(line: 2251, column: 13, scope: !7156)
!7161 = !{!7148, !205, i64 0}
!7162 = !DILocation(line: 2252, column: 45, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !1, line: 2252, column: 21)
!7164 = distinct !DILexicalBlock(scope: !7158, file: !1, line: 2251, column: 48)
!7165 = !DILocation(line: 2252, column: 47, scope: !7163)
!7166 = !DILocation(line: 2252, column: 34, scope: !7163)
!7167 = !DILocation(line: 2252, column: 31, scope: !7163)
!7168 = !DILocation(line: 2252, column: 21, scope: !7164)
!7169 = !DILocation(line: 2253, column: 46, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7163, file: !1, line: 2252, column: 52)
!7171 = !DILocation(line: 2253, column: 33, scope: !7170)
!7172 = !DILocation(line: 2254, column: 21, scope: !7170)
!7173 = !DILocation(line: 2251, column: 44, scope: !7158)
!7174 = !DILocation(line: 2251, column: 13, scope: !7158)
!7175 = distinct !{!7175, !7160, !7176}
!7176 = !DILocation(line: 2256, column: 13, scope: !7156)
!7177 = !DILocation(line: 0, scope: !7078)
!7178 = !DILocation(line: 2257, column: 19, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2257, column: 17)
!7180 = !DILocation(line: 2257, column: 48, scope: !7179)
!7181 = !DILocation(line: 2257, column: 35, scope: !7179)
!7182 = !DILocation(line: 0, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7179, file: !1, line: 2264, column: 20)
!7184 = !DILocation(line: 2261, column: 32, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7179, file: !1, line: 2257, column: 54)
!7186 = !DILocation(line: 2261, column: 21, scope: !7185)
!7187 = !DILocation(line: 2262, column: 40, scope: !7185)
!7188 = !DILocation(line: 2258, column: 17, scope: !7185)
!7189 = !DILocation(line: 2263, column: 17, scope: !7185)
!7190 = !DILocation(line: 2264, column: 13, scope: !7185)
!7191 = !DILocation(line: 2265, column: 17, scope: !7183)
!7192 = !DILocation(line: 2269, column: 42, scope: !7183)
!7193 = !{!7148, !192, i64 8}
!7194 = !DILocation(line: 2269, column: 17, scope: !7183)
!7195 = !DILocation(line: 2270, column: 45, scope: !7183)
!7196 = !DILocation(line: 2270, column: 17, scope: !7183)
!7197 = !DILocation(line: 2272, column: 9, scope: !7078)
!7198 = distinct !{!7198, !7139, !7199}
!7199 = !DILocation(line: 2273, column: 5, scope: !6948)
!7200 = !DILocation(line: 2274, column: 5, scope: !6948)
!7201 = !DILocation(line: 2276, column: 42, scope: !6948)
!7202 = !DILocation(line: 2276, column: 31, scope: !6948)
!7203 = !DILocation(line: 2276, column: 5, scope: !6948)
!7204 = !DILocation(line: 2277, column: 1, scope: !6948)
!7205 = distinct !DISubprogram(name: "backgroundSaveDoneHandler", scope: !1, file: !1, line: 2280, type: !6879, isLocal: false, isDefinition: true, scopeLine: 2280, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7206)
!7206 = !{!7207, !7208}
!7207 = !DILocalVariable(name: "exitcode", arg: 1, scope: !7205, file: !1, line: 2280, type: !20)
!7208 = !DILocalVariable(name: "bysignal", arg: 2, scope: !7205, file: !1, line: 2280, type: !20)
!7209 = !DILocation(line: 2280, column: 36, scope: !7205)
!7210 = !DILocation(line: 2280, column: 50, scope: !7205)
!7211 = !DILocation(line: 2281, column: 19, scope: !7205)
!7212 = !DILocation(line: 2281, column: 5, scope: !7205)
!7213 = !DILocation(line: 2283, column: 9, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7205, file: !1, line: 2281, column: 35)
!7215 = !DILocation(line: 2284, column: 9, scope: !7214)
!7216 = !DILocation(line: 2286, column: 9, scope: !7214)
!7217 = !DILocation(line: 2287, column: 9, scope: !7214)
!7218 = !DILocation(line: 2289, column: 9, scope: !7214)
!7219 = !DILocation(line: 0, scope: !7214)
!7220 = !DILocation(line: 2292, column: 1, scope: !7205)
!7221 = distinct !DISubprogram(name: "rdbSaveToSlavesSockets", scope: !1, file: !1, line: 2296, type: !7222, isLocal: false, isDefinition: true, scopeLine: 2296, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7224)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{!20, !3980}
!7224 = !{!7225, !7226, !7227, !7228, !7229, !7230, !7231, !7232, !7233, !7235, !7237, !7240, !7241, !7244, !7245, !7246, !7247, !7248, !7249, !7254}
!7225 = !DILocalVariable(name: "rsi", arg: 1, scope: !7221, file: !1, line: 2296, type: !3980)
!7226 = !DILocalVariable(name: "fds", scope: !7221, file: !1, line: 2297, type: !478)
!7227 = !DILocalVariable(name: "clientids", scope: !7221, file: !1, line: 2298, type: !1009)
!7228 = !DILocalVariable(name: "numfds", scope: !7221, file: !1, line: 2299, type: !20)
!7229 = !DILocalVariable(name: "ln", scope: !7221, file: !1, line: 2300, type: !4155)
!7230 = !DILocalVariable(name: "li", scope: !7221, file: !1, line: 2301, type: !6958)
!7231 = !DILocalVariable(name: "childpid", scope: !7221, file: !1, line: 2302, type: !4692)
!7232 = !DILocalVariable(name: "start", scope: !7221, file: !1, line: 2303, type: !12)
!7233 = !DILocalVariable(name: "pipefds", scope: !7221, file: !1, line: 2304, type: !7234)
!7234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 64, elements: !100)
!7235 = !DILocalVariable(name: "slave", scope: !7236, file: !1, line: 2326, type: !6965)
!7236 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 2325, column: 33)
!7237 = !DILocalVariable(name: "retval", scope: !7238, file: !1, line: 2345, type: !20)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 2343, column: 35)
!7239 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 2343, column: 9)
!7240 = !DILocalVariable(name: "slave_sockets", scope: !7238, file: !1, line: 2346, type: !221)
!7241 = !DILocalVariable(name: "private_dirty", scope: !7242, file: !1, line: 2359, type: !550)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !1, line: 2358, column: 29)
!7243 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 2358, column: 13)
!7244 = !DILocalVariable(name: "msg", scope: !7242, file: !1, line: 2385, type: !13)
!7245 = !DILocalVariable(name: "len", scope: !7242, file: !1, line: 2386, type: !1009)
!7246 = !DILocalVariable(name: "ids", scope: !7242, file: !1, line: 2387, type: !1009)
!7247 = !DILocalVariable(name: "j", scope: !7242, file: !1, line: 2388, type: !20)
!7248 = !DILocalVariable(name: "msglen", scope: !7242, file: !1, line: 2388, type: !20)
!7249 = !DILocalVariable(name: "slave", scope: !7250, file: !1, line: 2423, type: !6965)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !1, line: 2422, column: 41)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !1, line: 2414, column: 29)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !1, line: 2414, column: 13)
!7253 = distinct !DILexicalBlock(scope: !7239, file: !1, line: 2412, column: 12)
!7254 = !DILocalVariable(name: "j", scope: !7250, file: !1, line: 2424, type: !20)
!7255 = !DILocation(line: 2296, column: 41, scope: !7221)
!7256 = !DILocation(line: 2301, column: 5, scope: !7221)
!7257 = !DILocation(line: 2304, column: 5, scope: !7221)
!7258 = !DILocation(line: 2304, column: 9, scope: !7221)
!7259 = !DILocation(line: 2306, column: 16, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 2306, column: 9)
!7261 = !DILocation(line: 2306, column: 46, scope: !7260)
!7262 = !DILocation(line: 2306, column: 36, scope: !7260)
!7263 = !DILocation(line: 2311, column: 14, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 2311, column: 9)
!7265 = !DILocation(line: 2311, column: 9, scope: !7264)
!7266 = !DILocation(line: 2311, column: 23, scope: !7264)
!7267 = !DILocation(line: 2311, column: 9, scope: !7221)
!7268 = !DILocation(line: 2312, column: 46, scope: !7221)
!7269 = !DILocation(line: 2312, column: 44, scope: !7221)
!7270 = !DILocation(line: 2313, column: 46, scope: !7221)
!7271 = !DILocation(line: 2313, column: 44, scope: !7221)
!7272 = !DILocation(line: 2317, column: 31, scope: !7221)
!7273 = !{!7274, !205, i64 40}
!7274 = !{!"list", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !205, i64 40}
!7275 = !DILocation(line: 2317, column: 30, scope: !7221)
!7276 = !DILocation(line: 2317, column: 11, scope: !7221)
!7277 = !DILocation(line: 2297, column: 10, scope: !7221)
!7278 = !DILocation(line: 2321, column: 42, scope: !7221)
!7279 = !DILocation(line: 2321, column: 41, scope: !7221)
!7280 = !DILocation(line: 2321, column: 17, scope: !7221)
!7281 = !DILocation(line: 2298, column: 15, scope: !7221)
!7282 = !DILocation(line: 2299, column: 9, scope: !7221)
!7283 = !DILocation(line: 2324, column: 23, scope: !7221)
!7284 = !DILocation(line: 2301, column: 14, scope: !7221)
!7285 = !DILocation(line: 2324, column: 5, scope: !7221)
!7286 = !DILocation(line: 2325, column: 5, scope: !7221)
!7287 = !DILocation(line: 2325, column: 17, scope: !7221)
!7288 = !DILocation(line: 2300, column: 15, scope: !7221)
!7289 = !DILocation(line: 2326, column: 29, scope: !7236)
!7290 = !DILocation(line: 2326, column: 17, scope: !7236)
!7291 = !DILocation(line: 2328, column: 20, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7236, file: !1, line: 2328, column: 13)
!7293 = !DILocation(line: 2328, column: 30, scope: !7292)
!7294 = !DILocation(line: 2328, column: 13, scope: !7236)
!7295 = !DILocation(line: 2329, column: 40, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7292, file: !1, line: 2328, column: 64)
!7297 = !DILocation(line: 2329, column: 13, scope: !7296)
!7298 = !DILocation(line: 2329, column: 31, scope: !7296)
!7299 = !DILocation(line: 2330, column: 36, scope: !7296)
!7300 = !DILocation(line: 2330, column: 23, scope: !7296)
!7301 = !DILocation(line: 2330, column: 13, scope: !7296)
!7302 = !DILocation(line: 2330, column: 27, scope: !7296)
!7303 = !DILocation(line: 2331, column: 54, scope: !7296)
!7304 = !DILocation(line: 2331, column: 13, scope: !7296)
!7305 = !DILocation(line: 2335, column: 35, scope: !7296)
!7306 = !DILocation(line: 2335, column: 13, scope: !7296)
!7307 = !DILocation(line: 2336, column: 41, scope: !7296)
!7308 = !DILocation(line: 2336, column: 51, scope: !7296)
!7309 = !{!204, !192, i64 2476}
!7310 = !DILocation(line: 2336, column: 63, scope: !7296)
!7311 = !DILocation(line: 2336, column: 44, scope: !7296)
!7312 = !DILocation(line: 2336, column: 13, scope: !7296)
!7313 = !DILocation(line: 2337, column: 9, scope: !7296)
!7314 = !DILocation(line: 0, scope: !7221)
!7315 = distinct !{!7315, !7286, !7316}
!7316 = !DILocation(line: 2338, column: 5, scope: !7221)
!7317 = !DILocation(line: 0, scope: !7296)
!7318 = !DILocation(line: 2341, column: 5, scope: !7221)
!7319 = !DILocation(line: 2342, column: 13, scope: !7221)
!7320 = !DILocation(line: 2303, column: 15, scope: !7221)
!7321 = !DILocation(line: 2343, column: 21, scope: !7239)
!7322 = !DILocation(line: 2302, column: 11, scope: !7221)
!7323 = !DILocation(line: 2343, column: 29, scope: !7239)
!7324 = !DILocation(line: 2343, column: 9, scope: !7221)
!7325 = !DILocation(line: 2346, column: 9, scope: !7238)
!7326 = !DILocation(line: 2346, column: 13, scope: !7238)
!7327 = !DILocation(line: 2348, column: 9, scope: !7238)
!7328 = !DILocation(line: 2349, column: 9, scope: !7238)
!7329 = !DILocation(line: 2351, column: 9, scope: !7238)
!7330 = !DILocation(line: 2352, column: 9, scope: !7238)
!7331 = !DILocation(line: 2354, column: 18, scope: !7238)
!7332 = !DILocation(line: 2345, column: 13, scope: !7238)
!7333 = !DILocation(line: 2355, column: 20, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7238, file: !1, line: 2355, column: 13)
!7335 = !DILocation(line: 2355, column: 28, scope: !7334)
!7336 = !DILocalVariable(name: "r", arg: 1, scope: !7337, file: !222, line: 123, type: !220)
!7337 = distinct !DISubprogram(name: "rioFlush", scope: !222, file: !222, line: 123, type: !607, isLocal: true, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7338)
!7338 = !{!7336}
!7339 = !DILocation(line: 123, column: 33, scope: !7337, inlinedAt: !7340)
!7340 = distinct !DILocation(line: 2355, column: 31, scope: !7334)
!7341 = !DILocation(line: 124, column: 15, scope: !7337, inlinedAt: !7340)
!7342 = !{!507, !201, i64 24}
!7343 = !DILocation(line: 124, column: 12, scope: !7337, inlinedAt: !7340)
!7344 = !DILocation(line: 124, column: 5, scope: !7337, inlinedAt: !7340)
!7345 = !DILocation(line: 2355, column: 56, scope: !7334)
!7346 = !DILocation(line: 2355, column: 13, scope: !7238)
!7347 = !DILocation(line: 0, scope: !7238)
!7348 = !DILocation(line: 2359, column: 36, scope: !7242)
!7349 = !DILocation(line: 2359, column: 20, scope: !7242)
!7350 = !DILocation(line: 2361, column: 17, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 2361, column: 17)
!7352 = !DILocation(line: 2361, column: 17, scope: !7242)
!7353 = !DILocation(line: 2364, column: 34, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7351, file: !1, line: 2361, column: 32)
!7355 = !DILocation(line: 2362, column: 17, scope: !7354)
!7356 = !DILocation(line: 2365, column: 13, scope: !7354)
!7357 = !DILocation(line: 2367, column: 45, scope: !7242)
!7358 = !DILocation(line: 2368, column: 13, scope: !7242)
!7359 = !DILocation(line: 2385, column: 54, scope: !7242)
!7360 = !DILocation(line: 2385, column: 52, scope: !7242)
!7361 = !DILocation(line: 2385, column: 50, scope: !7242)
!7362 = !DILocation(line: 2385, column: 49, scope: !7242)
!7363 = !DILocation(line: 2385, column: 25, scope: !7242)
!7364 = !DILocation(line: 2385, column: 19, scope: !7242)
!7365 = !DILocation(line: 2386, column: 29, scope: !7242)
!7366 = !DILocation(line: 2386, column: 23, scope: !7242)
!7367 = !DILocation(line: 2390, column: 20, scope: !7242)
!7368 = !DILocation(line: 2390, column: 18, scope: !7242)
!7369 = !DILocation(line: 2388, column: 17, scope: !7242)
!7370 = !DILocation(line: 2391, column: 18, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 2391, column: 13)
!7372 = !DILocation(line: 2391, column: 27, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7371, file: !1, line: 2391, column: 13)
!7374 = !DILocation(line: 2391, column: 13, scope: !7371)
!7375 = !DILocation(line: 2387, column: 32, scope: !7242)
!7376 = !DILocation(line: 2387, column: 23, scope: !7242)
!7377 = !DILocation(line: 2392, column: 26, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7373, file: !1, line: 2391, column: 42)
!7379 = !DILocation(line: 2392, column: 21, scope: !7378)
!7380 = !DILocation(line: 2392, column: 24, scope: !7378)
!7381 = !DILocation(line: 2393, column: 49, scope: !7378)
!7382 = !DILocation(line: 2393, column: 26, scope: !7378)
!7383 = !DILocation(line: 2393, column: 21, scope: !7378)
!7384 = !DILocation(line: 2393, column: 24, scope: !7378)
!7385 = !DILocation(line: 2391, column: 38, scope: !7373)
!7386 = !DILocation(line: 2391, column: 13, scope: !7373)
!7387 = distinct !{!7387, !7374, !7388}
!7388 = !DILocation(line: 2394, column: 13, scope: !7371)
!7389 = !DILocation(line: 2401, column: 17, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7242, file: !1, line: 2401, column: 17)
!7391 = !DILocation(line: 2401, column: 22, scope: !7390)
!7392 = !DILocation(line: 2401, column: 27, scope: !7390)
!7393 = !DILocation(line: 2402, column: 30, scope: !7390)
!7394 = !DILocation(line: 2402, column: 66, scope: !7390)
!7395 = !DILocation(line: 2402, column: 17, scope: !7390)
!7396 = !DILocation(line: 2403, column: 17, scope: !7390)
!7397 = !DILocation(line: 2401, column: 17, scope: !7242)
!7398 = !DILocation(line: 2406, column: 13, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7390, file: !1, line: 2404, column: 13)
!7400 = !DILocation(line: 0, scope: !7334)
!7401 = !DILocation(line: 2407, column: 13, scope: !7242)
!7402 = !DILocation(line: 2408, column: 9, scope: !7242)
!7403 = !DILocation(line: 0, scope: !7242)
!7404 = !DILocation(line: 2409, column: 9, scope: !7238)
!7405 = !DILocation(line: 2410, column: 9, scope: !7238)
!7406 = !DILocation(line: 2411, column: 31, scope: !7238)
!7407 = !DILocation(line: 2411, column: 23, scope: !7238)
!7408 = !DILocation(line: 2411, column: 9, scope: !7238)
!7409 = !DILocation(line: 2412, column: 5, scope: !7239)
!7410 = !DILocation(line: 2452, column: 5, scope: !7221)
!7411 = !DILocation(line: 2414, column: 22, scope: !7252)
!7412 = !DILocation(line: 2414, column: 13, scope: !7253)
!7413 = !DILocation(line: 2416, column: 26, scope: !7251)
!7414 = !DILocation(line: 2416, column: 17, scope: !7251)
!7415 = !DILocation(line: 2415, column: 13, scope: !7251)
!7416 = !DILocation(line: 2421, column: 31, scope: !7251)
!7417 = !DILocation(line: 2421, column: 13, scope: !7251)
!7418 = !DILocation(line: 2422, column: 13, scope: !7251)
!7419 = !DILocation(line: 2422, column: 25, scope: !7251)
!7420 = !DILocation(line: 2423, column: 37, scope: !7250)
!7421 = !DILocation(line: 2423, column: 25, scope: !7250)
!7422 = !DILocation(line: 2424, column: 21, scope: !7250)
!7423 = !DILocation(line: 2426, column: 22, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7250, file: !1, line: 2426, column: 17)
!7425 = !DILocation(line: 2426, column: 17, scope: !7424)
!7426 = !DILocation(line: 2427, column: 38, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !1, line: 2427, column: 25)
!7428 = distinct !DILexicalBlock(scope: !7429, file: !1, line: 2426, column: 46)
!7429 = distinct !DILexicalBlock(scope: !7424, file: !1, line: 2426, column: 17)
!7430 = !DILocation(line: 2427, column: 35, scope: !7427)
!7431 = !DILocation(line: 2427, column: 25, scope: !7428)
!7432 = !DILocation(line: 2428, column: 32, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7427, file: !1, line: 2427, column: 52)
!7434 = !DILocation(line: 2428, column: 42, scope: !7433)
!7435 = !DILocation(line: 2429, column: 25, scope: !7433)
!7436 = !DILocation(line: 2426, column: 42, scope: !7429)
!7437 = !DILocation(line: 2426, column: 17, scope: !7429)
!7438 = !DILocation(line: 2426, column: 31, scope: !7429)
!7439 = distinct !{!7439, !7425, !7440}
!7440 = !DILocation(line: 2431, column: 17, scope: !7424)
!7441 = distinct !{!7441, !7418, !7442}
!7442 = !DILocation(line: 2432, column: 13, scope: !7251)
!7443 = !DILocation(line: 2433, column: 19, scope: !7251)
!7444 = !DILocation(line: 2433, column: 13, scope: !7251)
!7445 = !DILocation(line: 2434, column: 19, scope: !7251)
!7446 = !DILocation(line: 2434, column: 13, scope: !7251)
!7447 = !DILocation(line: 2435, column: 13, scope: !7251)
!7448 = !DILocation(line: 2436, column: 9, scope: !7251)
!7449 = !DILocation(line: 2437, column: 37, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7252, file: !1, line: 2436, column: 16)
!7451 = !DILocation(line: 2437, column: 45, scope: !7450)
!7452 = !DILocation(line: 2437, column: 35, scope: !7450)
!7453 = !DILocation(line: 2438, column: 46, scope: !7450)
!7454 = !DILocation(line: 2438, column: 37, scope: !7450)
!7455 = !DILocation(line: 2438, column: 68, scope: !7450)
!7456 = !DILocation(line: 2438, column: 87, scope: !7450)
!7457 = !DILocation(line: 2438, column: 80, scope: !7450)
!7458 = !DILocation(line: 2438, column: 78, scope: !7450)
!7459 = !DILocation(line: 2438, column: 102, scope: !7450)
!7460 = !DILocation(line: 2438, column: 35, scope: !7450)
!7461 = !DILocation(line: 2439, column: 13, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7450, file: !1, line: 2439, column: 13)
!7463 = !DILocation(line: 2439, column: 13, scope: !7450)
!7464 = !DILocation(line: 2441, column: 13, scope: !7450)
!7465 = !DILocation(line: 2443, column: 42, scope: !7450)
!7466 = !DILocation(line: 2443, column: 40, scope: !7450)
!7467 = !DILocation(line: 2444, column: 34, scope: !7450)
!7468 = !DILocation(line: 2445, column: 35, scope: !7450)
!7469 = !DILocation(line: 2446, column: 13, scope: !7450)
!7470 = !DILocation(line: 2448, column: 9, scope: !7253)
!7471 = !DILocation(line: 2449, column: 9, scope: !7253)
!7472 = !DILocation(line: 2450, column: 16, scope: !7253)
!7473 = !DILocation(line: 2450, column: 9, scope: !7253)
!7474 = !DILocation(line: 0, scope: !7253)
!7475 = !DILocation(line: 0, scope: !7260)
!7476 = !DILocation(line: 2453, column: 1, scope: !7221)
!7477 = distinct !DISubprogram(name: "saveCommand", scope: !1, file: !1, line: 2455, type: !6988, isLocal: false, isDefinition: true, scopeLine: 2455, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7478)
!7478 = !{!7479, !7480, !7481}
!7479 = !DILocalVariable(name: "c", arg: 1, scope: !7477, file: !1, line: 2455, type: !6965)
!7480 = !DILocalVariable(name: "rsi", scope: !7477, file: !1, line: 2460, type: !3981)
!7481 = !DILocalVariable(name: "rsiptr", scope: !7477, file: !1, line: 2460, type: !3980)
!7482 = !DILocation(line: 2455, column: 26, scope: !7477)
!7483 = !DILocation(line: 2456, column: 16, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7477, file: !1, line: 2456, column: 9)
!7485 = !DILocation(line: 2456, column: 30, scope: !7484)
!7486 = !DILocation(line: 2456, column: 9, scope: !7477)
!7487 = !DILocation(line: 2457, column: 9, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7484, file: !1, line: 2456, column: 37)
!7489 = !DILocation(line: 2458, column: 9, scope: !7488)
!7490 = !DILocation(line: 2460, column: 5, scope: !7477)
!7491 = !DILocation(line: 2460, column: 17, scope: !7477)
!7492 = !DILocalVariable(name: "rsi", arg: 1, scope: !7493, file: !1, line: 2515, type: !3980)
!7493 = distinct !DISubprogram(name: "rdbPopulateSaveInfo", scope: !1, file: !1, line: 2515, type: !7494, isLocal: false, isDefinition: true, scopeLine: 2515, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7496)
!7494 = !DISubroutineType(types: !7495)
!7495 = !{!3980, !3980}
!7496 = !{!7492, !7497}
!7497 = !DILocalVariable(name: "rsi_init", scope: !7493, file: !1, line: 2516, type: !3981)
!7498 = !DILocation(line: 2515, column: 47, scope: !7493, inlinedAt: !7499)
!7499 = distinct !DILocation(line: 2461, column: 14, scope: !7477)
!7500 = !DILocation(line: 2517, column: 12, scope: !7493, inlinedAt: !7499)
!7501 = !{i64 0, i64 4, !191, i64 4, i64 4, !191, i64 8, i64 41, !545, i64 56, i64 8, !5176}
!7502 = !DILocation(line: 2526, column: 17, scope: !7503, inlinedAt: !7499)
!7503 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 2526, column: 9)
!7504 = !DILocation(line: 2526, column: 10, scope: !7503, inlinedAt: !7499)
!7505 = !DILocation(line: 2526, column: 38, scope: !7503, inlinedAt: !7499)
!7506 = !DILocation(line: 2526, column: 31, scope: !7503, inlinedAt: !7499)
!7507 = !DILocation(line: 2526, column: 28, scope: !7503, inlinedAt: !7499)
!7508 = !DILocation(line: 2532, column: 38, scope: !7509, inlinedAt: !7499)
!7509 = distinct !DILexicalBlock(scope: !7503, file: !1, line: 2526, column: 52)
!7510 = !{!204, !192, i64 2368}
!7511 = !DILocation(line: 2532, column: 49, scope: !7509, inlinedAt: !7499)
!7512 = !DILocation(line: 2532, column: 31, scope: !7509, inlinedAt: !7499)
!7513 = !DILocation(line: 2533, column: 9, scope: !7509, inlinedAt: !7499)
!7514 = !DILocation(line: 2538, column: 16, scope: !7515, inlinedAt: !7499)
!7515 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 2538, column: 9)
!7516 = !{!204, !201, i64 2480}
!7517 = !DILocation(line: 2538, column: 9, scope: !7515, inlinedAt: !7499)
!7518 = !DILocation(line: 2538, column: 9, scope: !7493, inlinedAt: !7499)
!7519 = !DILocation(line: 2539, column: 46, scope: !7520, inlinedAt: !7499)
!7520 = distinct !DILexicalBlock(scope: !7515, file: !1, line: 2538, column: 24)
!7521 = !{!7148, !201, i64 16}
!7522 = !DILocation(line: 2539, column: 50, scope: !7520, inlinedAt: !7499)
!7523 = !{!4262, !192, i64 40}
!7524 = !DILocation(line: 2540, column: 9, scope: !7520, inlinedAt: !7499)
!7525 = !DILocation(line: 2548, column: 16, scope: !7526, inlinedAt: !7499)
!7526 = distinct !DILexicalBlock(scope: !7493, file: !1, line: 2548, column: 9)
!7527 = !{!204, !201, i64 2488}
!7528 = !DILocation(line: 2548, column: 9, scope: !7526, inlinedAt: !7499)
!7529 = !DILocation(line: 2548, column: 9, scope: !7493, inlinedAt: !7499)
!7530 = !DILocation(line: 2549, column: 53, scope: !7531, inlinedAt: !7499)
!7531 = distinct !DILexicalBlock(scope: !7526, file: !1, line: 2548, column: 31)
!7532 = !DILocation(line: 2549, column: 57, scope: !7531, inlinedAt: !7499)
!7533 = !DILocation(line: 2550, column: 9, scope: !7531, inlinedAt: !7499)
!7534 = !DILocation(line: 0, scope: !7477)
!7535 = !DILocation(line: 0, scope: !7493, inlinedAt: !7499)
!7536 = !DILocation(line: 2553, column: 1, scope: !7493, inlinedAt: !7499)
!7537 = !DILocation(line: 2460, column: 23, scope: !7477)
!7538 = !DILocation(line: 2462, column: 24, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7477, file: !1, line: 2462, column: 9)
!7540 = !DILocation(line: 2462, column: 9, scope: !7539)
!7541 = !DILocation(line: 2462, column: 45, scope: !7539)
!7542 = !DILocation(line: 2462, column: 9, scope: !7477)
!7543 = !DILocation(line: 2463, column: 27, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7539, file: !1, line: 2462, column: 54)
!7545 = !{!7546, !201, i64 8}
!7546 = !{!"sharedObjectsStruct", !201, i64 0, !201, i64 8, !201, i64 16, !201, i64 24, !201, i64 32, !201, i64 40, !201, i64 48, !201, i64 56, !201, i64 64, !201, i64 72, !201, i64 80, !201, i64 88, !201, i64 96, !201, i64 104, !201, i64 112, !201, i64 120, !201, i64 128, !201, i64 136, !201, i64 144, !201, i64 152, !201, i64 160, !201, i64 168, !201, i64 176, !201, i64 184, !201, i64 192, !201, i64 200, !201, i64 208, !201, i64 216, !201, i64 224, !201, i64 232, !201, i64 240, !201, i64 248, !201, i64 256, !201, i64 264, !201, i64 272, !201, i64 280, !201, i64 288, !201, i64 296, !201, i64 304, !201, i64 312, !201, i64 320, !201, i64 328, !201, i64 336, !201, i64 344, !201, i64 352, !201, i64 360, !193, i64 368, !193, i64 448, !193, i64 80448, !193, i64 80704, !201, i64 80960, !201, i64 80968}
!7547 = !DILocation(line: 2463, column: 9, scope: !7544)
!7548 = !DILocation(line: 2464, column: 5, scope: !7544)
!7549 = !DILocation(line: 2465, column: 27, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7539, file: !1, line: 2464, column: 12)
!7551 = !{!7546, !201, i64 16}
!7552 = !DILocation(line: 2465, column: 9, scope: !7550)
!7553 = !DILocation(line: 2467, column: 1, scope: !7477)
!7554 = !DILocation(line: 0, scope: !7488)
!7555 = !DILocation(line: 2515, column: 47, scope: !7493)
!7556 = !DILocation(line: 2517, column: 12, scope: !7493)
!7557 = !DILocation(line: 2526, column: 17, scope: !7503)
!7558 = !DILocation(line: 2526, column: 10, scope: !7503)
!7559 = !DILocation(line: 2526, column: 38, scope: !7503)
!7560 = !DILocation(line: 2526, column: 31, scope: !7503)
!7561 = !DILocation(line: 2526, column: 28, scope: !7503)
!7562 = !DILocation(line: 2532, column: 38, scope: !7509)
!7563 = !DILocation(line: 2532, column: 49, scope: !7509)
!7564 = !DILocation(line: 2532, column: 31, scope: !7509)
!7565 = !DILocation(line: 2533, column: 9, scope: !7509)
!7566 = !DILocation(line: 2538, column: 16, scope: !7515)
!7567 = !DILocation(line: 2538, column: 9, scope: !7515)
!7568 = !DILocation(line: 2538, column: 9, scope: !7493)
!7569 = !DILocation(line: 2539, column: 46, scope: !7520)
!7570 = !DILocation(line: 2539, column: 50, scope: !7520)
!7571 = !DILocation(line: 2540, column: 9, scope: !7520)
!7572 = !DILocation(line: 2548, column: 16, scope: !7526)
!7573 = !DILocation(line: 2548, column: 9, scope: !7526)
!7574 = !DILocation(line: 2548, column: 9, scope: !7493)
!7575 = !DILocation(line: 2549, column: 53, scope: !7531)
!7576 = !DILocation(line: 2549, column: 57, scope: !7531)
!7577 = !DILocation(line: 2550, column: 9, scope: !7531)
!7578 = !DILocation(line: 0, scope: !7509)
!7579 = !DILocation(line: 0, scope: !7493)
!7580 = !DILocation(line: 2553, column: 1, scope: !7493)
!7581 = distinct !DISubprogram(name: "bgsaveCommand", scope: !1, file: !1, line: 2470, type: !6988, isLocal: false, isDefinition: true, scopeLine: 2470, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !7582)
!7582 = !{!7583, !7584, !7585, !7586}
!7583 = !DILocalVariable(name: "c", arg: 1, scope: !7581, file: !1, line: 2470, type: !6965)
!7584 = !DILocalVariable(name: "schedule", scope: !7581, file: !1, line: 2471, type: !20)
!7585 = !DILocalVariable(name: "rsi", scope: !7581, file: !1, line: 2484, type: !3981)
!7586 = !DILocalVariable(name: "rsiptr", scope: !7581, file: !1, line: 2484, type: !3980)
!7587 = !DILocation(line: 2470, column: 28, scope: !7581)
!7588 = !DILocation(line: 2471, column: 9, scope: !7581)
!7589 = !DILocation(line: 2475, column: 12, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7581, file: !1, line: 2475, column: 9)
!7591 = !{!7148, !192, i64 64}
!7592 = !DILocation(line: 2475, column: 17, scope: !7590)
!7593 = !DILocation(line: 2475, column: 9, scope: !7581)
!7594 = !DILocation(line: 2476, column: 21, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !1, line: 2476, column: 13)
!7596 = distinct !DILexicalBlock(scope: !7590, file: !1, line: 2475, column: 22)
!7597 = !DILocation(line: 2476, column: 26, scope: !7595)
!7598 = !DILocation(line: 2476, column: 44, scope: !7595)
!7599 = !{!7148, !201, i64 72}
!7600 = !DILocation(line: 2476, column: 41, scope: !7595)
!7601 = !DILocation(line: 2476, column: 53, scope: !7595)
!7602 = !DILocation(line: 2476, column: 30, scope: !7595)
!7603 = !DILocation(line: 2476, column: 13, scope: !7596)
!7604 = !DILocation(line: 2482, column: 5, scope: !7596)
!7605 = !DILocation(line: 2479, column: 31, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7595, file: !1, line: 2478, column: 16)
!7607 = !{!7546, !201, i64 128}
!7608 = !DILocation(line: 2479, column: 13, scope: !7606)
!7609 = !DILocation(line: 2480, column: 13, scope: !7606)
!7610 = !DILocation(line: 0, scope: !7581)
!7611 = !DILocation(line: 2484, column: 5, scope: !7581)
!7612 = !DILocation(line: 2484, column: 17, scope: !7581)
!7613 = !DILocation(line: 2515, column: 47, scope: !7493, inlinedAt: !7614)
!7614 = distinct !DILocation(line: 2485, column: 14, scope: !7581)
!7615 = !DILocation(line: 2517, column: 12, scope: !7493, inlinedAt: !7614)
!7616 = !DILocation(line: 2526, column: 17, scope: !7503, inlinedAt: !7614)
!7617 = !DILocation(line: 2526, column: 10, scope: !7503, inlinedAt: !7614)
!7618 = !DILocation(line: 2526, column: 38, scope: !7503, inlinedAt: !7614)
!7619 = !DILocation(line: 2526, column: 31, scope: !7503, inlinedAt: !7614)
!7620 = !DILocation(line: 2526, column: 28, scope: !7503, inlinedAt: !7614)
!7621 = !DILocation(line: 2532, column: 38, scope: !7509, inlinedAt: !7614)
!7622 = !DILocation(line: 2532, column: 49, scope: !7509, inlinedAt: !7614)
!7623 = !DILocation(line: 2532, column: 31, scope: !7509, inlinedAt: !7614)
!7624 = !DILocation(line: 2533, column: 9, scope: !7509, inlinedAt: !7614)
!7625 = !DILocation(line: 2538, column: 16, scope: !7515, inlinedAt: !7614)
!7626 = !DILocation(line: 2538, column: 9, scope: !7515, inlinedAt: !7614)
!7627 = !DILocation(line: 2538, column: 9, scope: !7493, inlinedAt: !7614)
!7628 = !DILocation(line: 2539, column: 46, scope: !7520, inlinedAt: !7614)
!7629 = !DILocation(line: 2539, column: 50, scope: !7520, inlinedAt: !7614)
!7630 = !DILocation(line: 2540, column: 9, scope: !7520, inlinedAt: !7614)
!7631 = !DILocation(line: 2548, column: 16, scope: !7526, inlinedAt: !7614)
!7632 = !DILocation(line: 2548, column: 9, scope: !7526, inlinedAt: !7614)
!7633 = !DILocation(line: 2548, column: 9, scope: !7493, inlinedAt: !7614)
!7634 = !DILocation(line: 2549, column: 53, scope: !7531, inlinedAt: !7614)
!7635 = !DILocation(line: 2549, column: 57, scope: !7531, inlinedAt: !7614)
!7636 = !DILocation(line: 2550, column: 9, scope: !7531, inlinedAt: !7614)
!7637 = !DILocation(line: 0, scope: !7493, inlinedAt: !7614)
!7638 = !DILocation(line: 2553, column: 1, scope: !7493, inlinedAt: !7614)
!7639 = !DILocation(line: 2484, column: 23, scope: !7581)
!7640 = !DILocation(line: 2487, column: 16, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7581, file: !1, line: 2487, column: 9)
!7642 = !DILocation(line: 2487, column: 30, scope: !7641)
!7643 = !DILocation(line: 2487, column: 9, scope: !7581)
!7644 = !DILocation(line: 2488, column: 9, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7641, file: !1, line: 2487, column: 37)
!7646 = !DILocation(line: 2489, column: 5, scope: !7645)
!7647 = !DILocation(line: 2489, column: 23, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7641, file: !1, line: 2489, column: 16)
!7649 = !DILocation(line: 2489, column: 37, scope: !7648)
!7650 = !DILocation(line: 2489, column: 16, scope: !7641)
!7651 = !DILocation(line: 2490, column: 13, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !1, line: 2490, column: 13)
!7653 = distinct !DILexicalBlock(scope: !7648, file: !1, line: 2489, column: 44)
!7654 = !DILocation(line: 2490, column: 13, scope: !7653)
!7655 = !DILocation(line: 2491, column: 41, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7652, file: !1, line: 2490, column: 23)
!7657 = !{!204, !192, i64 2168}
!7658 = !DILocation(line: 2492, column: 13, scope: !7656)
!7659 = !DILocation(line: 2493, column: 9, scope: !7656)
!7660 = !DILocation(line: 2494, column: 13, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7652, file: !1, line: 2493, column: 16)
!7662 = !DILocation(line: 2499, column: 41, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7648, file: !1, line: 2499, column: 16)
!7664 = !DILocation(line: 2499, column: 16, scope: !7663)
!7665 = !DILocation(line: 2499, column: 62, scope: !7663)
!7666 = !DILocation(line: 2499, column: 16, scope: !7648)
!7667 = !DILocation(line: 2500, column: 9, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7663, file: !1, line: 2499, column: 71)
!7669 = !DILocation(line: 2501, column: 5, scope: !7668)
!7670 = !DILocation(line: 2502, column: 27, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7663, file: !1, line: 2501, column: 12)
!7672 = !DILocation(line: 2502, column: 9, scope: !7671)
!7673 = !DILocation(line: 2504, column: 1, scope: !7581)
!7674 = !DILocation(line: 0, scope: !7606)
