; ModuleID = '/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c'
source_filename = "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.clusterNode = type { i64, [40 x i8], i32, i64, [2048 x i8], i32, i32, %struct.clusterNode**, %struct.clusterNode*, i64, i64, i64, i64, i64, i64, i64, [46 x i8], i32, i32, %struct.clusterLink*, %struct.list* }
%struct.clusterLink = type { i64, i32, i8*, i8*, %struct.clusterNode* }
%struct.list = type { %struct.listNode*, %struct.listNode*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%struct.listNode = type { %struct.listNode*, %struct.listNode*, i8* }
%struct.redisServer = type { i32, i8*, i8*, i8**, i32, i32, i32, %struct.redisDb*, %struct.dict*, %struct.dict*, %struct.aeEventLoop*, i32, i32, i32, i32, i8*, i8*, i32, i32, [41 x i8], i32, i64, i32, %struct.dict*, %struct.dict*, %struct.list*, [2 x i32], i32, i32, [16 x i8*], i32, i8*, i32, [16 x i32], i32, i32, [16 x i32], i32, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.list*, %struct.client*, %struct.rax*, i32, i64, [256 x i8], %struct.dict*, i64, i32, i32, i64, i64, i64, i64, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, %struct.redisCommand*, i64, i64, i64, i64, double, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, i64, i64, i64, i64, %struct.list*, i64, i64, i64, %struct.malloc_stats, i64, i64, i64, i64, [3 x %struct.anon.3], i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, [3 x %struct.clientBufferLimitsConfig], i32, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, %struct.list*, i8*, i32, i32, i64, i64, i64, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, i32, %struct.saveparam*, i32, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, [2 x i32], %struct.anon.4, %struct.redisOpArray, i8*, i32, i8*, i32, [41 x i8], [41 x i8], i64, i64, i32, i32, i8*, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, %struct.client*, %struct.client*, i32, i32, i64, i64, i64, i32, i32, i8*, i64, i32, i32, i32, i64, i32, i32, i32, i8*, [41 x i8], i64, i32, %struct.dict*, %struct.list*, i32, %struct.list*, i32, i32, i64, i32, i32, i32, i32, i64, i32, [6 x i32], %struct.list*, %struct.list*, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i32, i64, %struct.dict*, %struct.list*, i32, i32, i64, i8*, %struct.clusterState*, i32, i32, i32, i32, i8*, i32, i32, i32, %struct.lua_State*, %struct.client*, %struct.client*, %struct.dict*, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.dict*, i8*, i8*, i32, i32, i32, i64, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_*, %struct.pthread_mutex_t_* }
%struct.redisDb = type { %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, %struct.dict*, i32, i64, %struct.list* }
%struct.aeEventLoop = type { i32, i32, i64, i64, %struct.aeFileEvent*, %struct.aeFiredEvent*, %struct.aeTimeEvent*, i32, i8*, void (%struct.aeEventLoop*)*, void (%struct.aeEventLoop*)* }
%struct.aeFileEvent = type { i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8* }
%struct.aeFiredEvent = type { i32, i32 }
%struct.aeTimeEvent = type { i64, i64, i64, i32 (%struct.aeEventLoop*, i64, i8*)*, void (%struct.aeEventLoop*, i8*)*, i8*, %struct.aeTimeEvent*, %struct.aeTimeEvent* }
%struct.rax = type { %struct.raxNode*, i64, i64 }
%struct.raxNode = type { i32, [0 x i8] }
%struct.redisCommand = type { i8*, void (%struct.client*)*, i32, i8*, i32, i32* (%struct.redisCommand*, %struct.redisObject**, i32, i32*)*, i32, i32, i32, i64, i64 }
%struct.redisObject = type { i32, i32, i8* }
%struct.malloc_stats = type { i64, i64, i64, i64, i64 }
%struct.anon.3 = type { i64, i64, [16 x i64], i32 }
%struct.clientBufferLimitsConfig = type { i64, i64, i64 }
%struct.saveparam = type { i64, i32 }
%struct.anon.4 = type { i32, i64, i64 }
%struct.redisOpArray = type { %struct.redisOp*, i32 }
%struct.redisOp = type { %struct.redisObject**, i32, i32, i32, %struct.redisCommand* }
%struct.clusterState = type { %struct.clusterNode*, i64, i32, i32, %struct.dict*, %struct.dict*, [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x %struct.clusterNode*], [16384 x i64], %struct.rax*, i64, i32, i32, i32, i64, i32, i64, %struct.clusterNode*, i64, i32, i64, i32, [10 x i64], [10 x i64], i64 }
%struct.lua_State = type opaque
%struct.client = type { i64, i32, %struct.redisDb*, %struct.redisObject*, i8*, i64, i8*, i64, i32, %struct.redisObject**, %struct.redisCommand*, %struct.redisCommand*, i32, i32, i64, %struct.list*, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i8*, i64, i64, i64, i64, i64, [41 x i8], i32, [46 x i8], i32, %struct.multiState, i32, %struct.blockingState, i64, %struct.list*, %struct.dict*, %struct.list*, i8*, %struct.listNode*, i32, [16384 x i8] }
%struct.multiState = type { %struct.multiCmd*, i32, i32, i32, i64 }
%struct.multiCmd = type { %struct.redisObject**, i32, %struct.redisCommand* }
%struct.blockingState = type { i64, %struct.dict*, %struct.redisObject*, i64, %struct.redisObject*, %struct.redisObject*, i64, i64, i32, i32, i64, i8* }
%struct.dict = type { %struct.dictType*, i8*, [2 x %struct.dictht], i64, i64 }
%struct.dictType = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%struct.dictht = type { %struct.dictEntry**, i64, i64, i64 }
%struct.dictEntry = type { i8*, %union.anon.2, %struct.dictEntry* }
%union.anon.2 = type { i8* }
%struct.pthread_mutex_t_ = type opaque
%struct.sharedObjectsStruct = type { %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, %struct.redisObject*, [10 x %struct.redisObject*], [10000 x %struct.redisObject*], [32 x %struct.redisObject*], [32 x %struct.redisObject*], i8*, i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i64, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i8*, i32)*, i64 (%struct._reent*, i8*, i64, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64, %struct._reent*, i32, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, [25 x i8], i32, %struct.__locale_t*, i32, void (%struct._reent*)*, %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint**, i32, i8*, %union.anon.0, %struct._atexit*, %struct._atexit, void (i32)**, %struct._glue, [3 x %struct.__sFILE] }
%struct.__locale_t = type opaque
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { [30 x i8*], [30 x i32] }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct._mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.dictIterator = type { %struct.dict*, i64, i32, i32, %struct.dictEntry*, %struct.dictEntry*, i64 }
%struct.listIter = type { %struct.listNode*, i32 }
%struct.clusterNodeFailReport = type { %struct.clusterNode*, i64 }
%struct.clusterMsg = type { [4 x i8], i32, i16, i16, i16, i16, i64, i64, i64, [40 x i8], [2048 x i8], [40 x i8], [46 x i8], [34 x i8], i16, i16, i8, [3 x i8], %union.clusterMsgData }
%union.clusterMsgData = type { %struct.anon.9 }
%struct.anon.9 = type { %struct.clusterMsgDataUpdate }
%struct.clusterMsgDataUpdate = type { i64, [40 x i8], [2048 x i8] }
%struct.sockaddr_storage = type { i8, i8, [2 x i8], [3 x i32], [3 x i32] }
%struct.clusterMsgDataGossip = type { [40 x i8], i32, i32, [46 x i8], i16, i16, i16, i32 }
%struct.clusterMsgDataPublish = type { i32, i32, [8 x i8] }
%struct._rio = type { i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*, i8*, i64)*, i64 (%struct._rio*)*, i32 (%struct._rio*)*, void (%struct._rio*, i8*, i64)*, i64, i64, i64, %union.anon.11 }
%union.anon.11 = type { %struct.anon.14 }
%struct.anon.14 = type { i32*, i32*, i32, i64, i8* }
%struct.migrateCachedSocket = type { i32, i64, i64 }

@myself = dso_local local_unnamed_addr global %struct.clusterNode* null, align 8, !dbg !0
@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"Loading the cluster node config from %s: %s\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"vars\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"currentEpoch\00", align 1
@server = external dso_local global %struct.redisServer, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"lastVoteEpoch\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"Skipping unknown cluster config variable '%s'\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"myself\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"server.cluster->myself == NULL\00", align 1
@.str.8 = private unnamed_addr constant [75 x i8] c"/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"master\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"fail?\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"handshake\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"noaddr\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"nofailover\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"noflags\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"Unknown flag in redis cluster config file\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"p != NULL\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"Node configuration loaded, I'm %.40s\00", align 1
@.str.20 = private unnamed_addr constant [52 x i8] c"Unrecoverable error: corrupted cluster config file.\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"vars currentEpoch %llu lastVoteEpoch %llu\0A\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"Fatal: can't update cluster config file.\00", align 1
@.str.23 = private unnamed_addr constant [45 x i8] c"Can't open %s in order to acquire a lock: %s\00", align 1
@.str.24 = private unnamed_addr constant [173 x i8] c"Sorry, the cluster configuration file %s is already used by a different Redis Cluster node. Please make sure that different nodes use different cluster configuration files.\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Impossible to lock %s: %s\00", align 1
@clusterNodesDictType = external dso_local global %struct.dictType, align 8
@clusterNodesBlackListDictType = external dso_local global %struct.dictType, align 8
@.str.26 = private unnamed_addr constant [42 x i8] c"No cluster configuration found, I'm %.40s\00", align 1
@.str.27 = private unnamed_addr constant [156 x i8] c"Redis port number too high. Cluster communication port is 10,000 port numbers higher than your Redis port. Your Redis port number must be lower than 55535.\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"Unrecoverable error creating Redis Cluster file event.\00", align 1
@.str.29 = private unnamed_addr constant [44 x i8] c"configEpoch set to 0 via CLUSTER RESET HARD\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"Node hard reset, now I'm %.40s\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"Error accepting cluster node: %s\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"Accepted cluster node %s:%d\00", align 1
@.str.33 = private unnamed_addr constant [54 x i8] c"dictDelete(server.cluster->nodes,nodename) == DICT_OK\00", align 1
@.str.34 = private unnamed_addr constant [31 x i8] c"Renaming node %.40s into %.40s\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"retval == DICT_OK\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"New configEpoch set to %llu\00", align 1
@.str.37 = private unnamed_addr constant [72 x i8] c"WARNING: configEpoch collision with node %.40s. configEpoch set to %llu\00", align 1
@.str.38 = private unnamed_addr constant [48 x i8] c"Marking node %.40s as failing (quorum reached).\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"nodeFailed(node)\00", align 1
@.str.40 = private unnamed_addr constant [56 x i8] c"Clear FAIL state for node %.40s: %s is reachable again.\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"replica\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"master without slots\00", align 1
@.str.43 = private unnamed_addr constant [101 x i8] c"Clear FAIL state for node %.40s: is reachable again and nobody is serving its slots after some time.\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"GOSSIP %.40s %s:%d@%d %s\00", align 1
@.str.45 = private unnamed_addr constant [49 x i8] c"Node %.40s reported node %.40s as not reachable.\00", align 1
@.str.46 = private unnamed_addr constant [47 x i8] c"Node %.40s reported node %.40s is back online.\00", align 1
@.str.47 = private unnamed_addr constant [42 x i8] c"Address updated for node %.40s, now %s:%d\00", align 1
@.str.48 = private unnamed_addr constant [40 x i8] c"Discarding UPDATE message about myself.\00", align 1
@.str.49 = private unnamed_addr constant [74 x i8] c"Configuration change detected. Reconfiguring myself as a replica of %.40s\00", align 1
@.str.50 = private unnamed_addr constant [44 x i8] c"--- Processing packet of type %d, %lu bytes\00", align 1
@.str.51 = private unnamed_addr constant [68 x i8] c"Received replication offset for paused master manual failover: %lld\00", align 1
@.str.52 = private unnamed_addr constant [25 x i8] c"Ping packet received: %p\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"IP address for this node updated to %s\00", align 1
@.str.54 = private unnamed_addr constant [23 x i8] c"%s packet received: %p\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"ping\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"pong\00", align 1
@.str.57 = private unnamed_addr constant [71 x i8] c"Handshake: we already know node %.40s, updating the address if needed.\00", align 1
@.str.58 = private unnamed_addr constant [37 x i8] c"Handshake with node %.40s completed.\00", align 1
@.str.59 = private unnamed_addr constant [87 x i8] c"PONG contains mismatching sender ID. About node %.40s added %d ms ago, having flags %d\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] zeroinitializer, align 1
@.str.61 = private unnamed_addr constant [78 x i8] c"Node %.40s has old slots configuration, sending an UPDATE message about %.40s\00", align 1
@.str.62 = private unnamed_addr constant [45 x i8] c"FAIL message received from %.40s about %.40s\00", align 1
@.str.63 = private unnamed_addr constant [58 x i8] c"Ignoring FAIL message from unknown node %.40s about %.40s\00", align 1
@.str.64 = private unnamed_addr constant [44 x i8] c"Manual failover requested by replica %.40s.\00", align 1
@.str.65 = private unnamed_addr constant [33 x i8] c"Received unknown packet type: %d\00", align 1
@.str.66 = private unnamed_addr constant [35 x i8] c"I/O error writing to node link: %s\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"short write\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"RCmb\00", align 1
@.str.69 = private unnamed_addr constant [59 x i8] c"Bad message length or signature received from Cluster bus.\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"I/O error reading from node link: %s\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"connection closed\00", align 1
@.str.72 = private unnamed_addr constant [64 x i8] c"Failover auth denied to %.40s: reqEpoch (%llu) < curEpoch(%llu)\00", align 1
@.str.73 = private unnamed_addr constant [60 x i8] c"Failover auth denied to %.40s: already voted for epoch %llu\00", align 1
@.str.74 = private unnamed_addr constant [51 x i8] c"Failover auth denied to %.40s: it is a master node\00", align 1
@.str.75 = private unnamed_addr constant [55 x i8] c"Failover auth denied to %.40s: I don't know its master\00", align 1
@.str.76 = private unnamed_addr constant [48 x i8] c"Failover auth denied to %.40s: its master is up\00", align 1
@.str.77 = private unnamed_addr constant [85 x i8] c"Failover auth denied to %.40s: can't vote about this master before %lld milliseconds\00", align 1
@.str.78 = private unnamed_addr constant [70 x i8] c"Failover auth denied to %.40s: slot %d epoch (%llu) > reqEpoch (%llu)\00", align 1
@.str.79 = private unnamed_addr constant [46 x i8] c"Failover auth granted to %.40s for epoch %llu\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"nodeIsSlave(myself)\00", align 1
@clusterLogCantFailover.lastlog_time = internal unnamed_addr global i64 0, align 8, !dbg !279
@.str.81 = private unnamed_addr constant [123 x i8] c"Disconnected from master for longer than allowed. Please check the 'cluster-replica-validity-factor' configuration option.\00", align 1
@.str.82 = private unnamed_addr constant [53 x i8] c"Waiting the delay before I can start a new failover.\00", align 1
@.str.83 = private unnamed_addr constant [26 x i8] c"Failover attempt expired.\00", align 1
@.str.84 = private unnamed_addr constant [51 x i8] c"Waiting for votes, but majority still not reached.\00", align 1
@.str.85 = private unnamed_addr constant [21 x i8] c"Unknown reason code.\00", align 1
@.str.86 = private unnamed_addr constant [33 x i8] c"Currently unable to failover: %s\00", align 1
@.str.87 = private unnamed_addr constant [73 x i8] c"Start of election delayed for %lld milliseconds (rank #%d, offset %lld).\00", align 1
@.str.88 = private unnamed_addr constant [63 x i8] c"Replica rank updated to #%d, added %lld milliseconds of delay.\00", align 1
@.str.89 = private unnamed_addr constant [45 x i8] c"Starting a failover election for epoch %llu.\00", align 1
@.str.90 = private unnamed_addr constant [43 x i8] c"Failover election won: I'm the new master.\00", align 1
@.str.91 = private unnamed_addr constant [50 x i8] c"configEpoch set to %llu after successful failover\00", align 1
@.str.92 = private unnamed_addr constant [35 x i8] c"Migrating to orphaned master %.40s\00", align 1
@.str.93 = private unnamed_addr constant [27 x i8] c"Manual failover timed out.\00", align 1
@.str.94 = private unnamed_addr constant [68 x i8] c"All master replication stream processed, manual failover can start.\00", align 1
@clusterCron.iteration = internal unnamed_addr global i64 0, align 8, !dbg !290
@clusterCron.prev_ip = internal unnamed_addr global i8* null, align 8, !dbg !404
@.str.95 = private unnamed_addr constant [48 x i8] c"Unable to connect to Cluster Node [%s]:%d -> %s\00", align 1
@.str.96 = private unnamed_addr constant [36 x i8] c"Connecting with Node %.40s at %s:%d\00", align 1
@.str.97 = private unnamed_addr constant [19 x i8] c"Pinging node %.40s\00", align 1
@.str.98 = private unnamed_addr constant [32 x i8] c"*** NODE %.40s possibly failing\00", align 1
@.str.99 = private unnamed_addr constant [37 x i8] c"clusterNodeClearSlotBit(n,slot) == 1\00", align 1
@clusterUpdateState.among_minority_time = internal unnamed_addr global i64 0, align 8, !dbg !406
@clusterUpdateState.first_call_time = internal unnamed_addr global i64 0, align 8, !dbg !423
@.str.100 = private unnamed_addr constant [26 x i8] c"Cluster state changed: %s\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.102 = private unnamed_addr constant [66 x i8] c"I have keys for unassigned slot %d. Taking responsibility for it.\00", align 1
@.str.103 = private unnamed_addr constant [98 x i8] c"I have keys for slot %d, but the slot is assigned to another node. Setting it to importing state.\00", align 1
@.str.104 = private unnamed_addr constant [12 x i8] c"n != myself\00", align 1
@.str.105 = private unnamed_addr constant [22 x i8] c"myself->numslots == 0\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c"noflags,\00", align 1
@.str.107 = private unnamed_addr constant [16 x i8] c"%.40s %s:%d@%d \00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c" %.40s \00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c" - \00", align 1
@.str.110 = private unnamed_addr constant [18 x i8] c"%lld %lld %llu %s\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"connected\00", align 1
@.str.112 = private unnamed_addr constant [13 x i8] c"disconnected\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c" %d-%d\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c" [%d->-%.40s]\00", align 1
@.str.116 = private unnamed_addr constant [14 x i8] c" [%d-<-%.40s]\00", align 1
@.str.117 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"meet\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"publish\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"auth-req\00", align 1
@.str.121 = private unnamed_addr constant [9 x i8] c"auth-ack\00", align 1
@.str.122 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"mfstart\00", align 1
@.str.124 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.125 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"Invalid or out of range slot\00", align 1
@.str.127 = private unnamed_addr constant [43 x i8] c"This instance has cluster support disabled\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.129 = private unnamed_addr constant [60 x i8] c"ADDSLOTS <slot> [slot ...] -- Assign slots to current node.\00", align 1
@.str.130 = private unnamed_addr constant [47 x i8] c"BUMPEPOCH -- Advance the cluster config epoch.\00", align 1
@.str.131 = private unnamed_addr constant [83 x i8] c"COUNT-failure-reports <node-id> -- Return number of failure reports for <node-id>.\00", align 1
@.str.132 = private unnamed_addr constant [62 x i8] c"COUNTKEYSINSLOT <slot> - Return the number of keys in <slot>.\00", align 1
@.str.133 = private unnamed_addr constant [74 x i8] c"DELSLOTS <slot> [slot ...] -- Delete slots information from current node.\00", align 1
@.str.134 = private unnamed_addr constant [77 x i8] c"FAILOVER [force|takeover] -- Promote current replica node to being a master.\00", align 1
@.str.135 = private unnamed_addr constant [52 x i8] c"FORGET <node-id> -- Remove a node from the cluster.\00", align 1
@.str.136 = private unnamed_addr constant [83 x i8] c"GETKEYSINSLOT <slot> <count> -- Return key names stored by current node in a slot.\00", align 1
@.str.137 = private unnamed_addr constant [57 x i8] c"FLUSHSLOTS -- Delete current node own slots information.\00", align 1
@.str.138 = private unnamed_addr constant [45 x i8] c"INFO - Return onformation about the cluster.\00", align 1
@.str.139 = private unnamed_addr constant [49 x i8] c"KEYSLOT <key> -- Return the hash slot for <key>.\00", align 1
@.str.140 = private unnamed_addr constant [69 x i8] c"MEET <ip> <port> [bus-port] -- Connect nodes into a working cluster.\00", align 1
@.str.141 = private unnamed_addr constant [28 x i8] c"MYID -- Return the node id.\00", align 1
@.str.142 = private unnamed_addr constant [67 x i8] c"NODES -- Return cluster configuration seen by node. Output format:\00", align 1
@.str.143 = private unnamed_addr constant [85 x i8] c"    <id> <ip:port> <flags> <master> <pings> <pongs> <epoch> <link> <slot> ... <slot>\00", align 1
@.str.144 = private unnamed_addr constant [71 x i8] c"REPLICATE <node-id> -- Configure current node as replica to <node-id>.\00", align 1
@.str.145 = private unnamed_addr constant [57 x i8] c"RESET [hard|soft] -- Reset current node (default: soft).\00", align 1
@.str.146 = private unnamed_addr constant [61 x i8] c"SET-config-epoch <epoch> - Set config epoch of current node.\00", align 1
@.str.147 = private unnamed_addr constant [78 x i8] c"SETSLOT <slot> (importing|migrating|stable|node <node-id>) -- Set slot state.\00", align 1
@.str.148 = private unnamed_addr constant [49 x i8] c"REPLICAS <node-id> -- Return <node-id> replicas.\00", align 1
@.str.149 = private unnamed_addr constant [79 x i8] c"SLOTS -- Return information about slots range mappings. Each range is made of:\00", align 1
@.str.150 = private unnamed_addr constant [64 x i8] c"    start, end, master and replicas IP addresses, ports and ids\00", align 1
@clusterCommand.help = private unnamed_addr constant [23 x i8*] [i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.150, i32 0, i32 0), i8* null], align 16
@.str.151 = private unnamed_addr constant [36 x i8] c"Invalid TCP base port specified: %s\00", align 1
@.str.152 = private unnamed_addr constant [35 x i8] c"Invalid TCP bus port specified: %s\00", align 1
@.str.153 = private unnamed_addr constant [38 x i8] c"Invalid node address specified: %s:%s\00", align 1
@shared = external dso_local local_unnamed_addr global %struct.sharedObjectsStruct, align 8
@.str.154 = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"myid\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"slots\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"flushslots\00", align 1
@.str.158 = private unnamed_addr constant [48 x i8] c"DB must be empty to perform CLUSTER FLUSHSLOTS.\00", align 1
@.str.159 = private unnamed_addr constant [9 x i8] c"addslots\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"delslots\00", align 1
@.str.161 = private unnamed_addr constant [30 x i8] c"Slot %d is already unassigned\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"Slot %d is already busy\00", align 1
@.str.163 = private unnamed_addr constant [33 x i8] c"Slot %d specified multiple times\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"retval == C_OK\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"setslot\00", align 1
@.str.166 = private unnamed_addr constant [38 x i8] c"Please use SETSLOT only with masters.\00", align 1
@.str.167 = private unnamed_addr constant [10 x i8] c"migrating\00", align 1
@.str.168 = private unnamed_addr constant [34 x i8] c"I'm not the owner of hash slot %u\00", align 1
@.str.169 = private unnamed_addr constant [27 x i8] c"I don't know about node %s\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"importing\00", align 1
@.str.171 = private unnamed_addr constant [38 x i8] c"I'm already the owner of hash slot %u\00", align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"stable\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.174 = private unnamed_addr constant [16 x i8] c"Unknown node %s\00", align 1
@.str.175 = private unnamed_addr constant [89 x i8] c"Can't assign hashslot %d to a different node while I still hold keys for this hash slot.\00", align 1
@.str.176 = private unnamed_addr constant [44 x i8] c"configEpoch updated after importing slot %d\00", align 1
@.str.177 = private unnamed_addr constant [72 x i8] c"Invalid CLUSTER SETSLOT action or number of arguments. Try CLUSTER HELP\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"bumpepoch\00", align 1
@.str.179 = private unnamed_addr constant [11 x i8] c"+%s %llu\0D\0A\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"BUMPED\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"STILL\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.183 = private unnamed_addr constant [9 x i8] c"needhelp\00", align 1
@clusterCommand.statestr = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.183, i32 0, i32 0)], align 16
@.str.184 = private unnamed_addr constant [207 x i8] c"cluster_state:%s\0D\0Acluster_slots_assigned:%d\0D\0Acluster_slots_ok:%d\0D\0Acluster_slots_pfail:%d\0D\0Acluster_slots_fail:%d\0D\0Acluster_known_nodes:%lu\0D\0Acluster_size:%d\0D\0Acluster_current_epoch:%llu\0D\0Acluster_my_epoch:%llu\0D\0A\00", align 1
@.str.185 = private unnamed_addr constant [38 x i8] c"cluster_stats_messages_%s_sent:%lld\0D\0A\00", align 1
@.str.186 = private unnamed_addr constant [35 x i8] c"cluster_stats_messages_sent:%lld\0D\0A\00", align 1
@.str.187 = private unnamed_addr constant [42 x i8] c"cluster_stats_messages_%s_received:%lld\0D\0A\00", align 1
@.str.188 = private unnamed_addr constant [39 x i8] c"cluster_stats_messages_received:%lld\0D\0A\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"$%lu\0D\0A\00", align 1
@.str.190 = private unnamed_addr constant [11 x i8] c"saveconfig\00", align 1
@.str.191 = private unnamed_addr constant [41 x i8] c"error saving the cluster node config: %s\00", align 1
@.str.192 = private unnamed_addr constant [8 x i8] c"keyslot\00", align 1
@.str.193 = private unnamed_addr constant [16 x i8] c"countkeysinslot\00", align 1
@.str.194 = private unnamed_addr constant [13 x i8] c"Invalid slot\00", align 1
@.str.195 = private unnamed_addr constant [14 x i8] c"getkeysinslot\00", align 1
@.str.196 = private unnamed_addr constant [31 x i8] c"Invalid slot or number of keys\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"forget\00", align 1
@.str.198 = private unnamed_addr constant [42 x i8] c"I tried hard but I can't forget myself...\00", align 1
@.str.199 = private unnamed_addr constant [24 x i8] c"Can't forget my master!\00", align 1
@.str.200 = private unnamed_addr constant [10 x i8] c"replicate\00", align 1
@.str.201 = private unnamed_addr constant [23 x i8] c"Can't replicate myself\00", align 1
@.str.202 = private unnamed_addr constant [46 x i8] c"I can only replicate a master, not a replica.\00", align 1
@.str.203 = private unnamed_addr constant [67 x i8] c"To set a master the node must be empty and without assigned slots.\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"slaves\00", align 1
@.str.205 = private unnamed_addr constant [9 x i8] c"replicas\00", align 1
@.str.206 = private unnamed_addr constant [35 x i8] c"The specified node is not a master\00", align 1
@.str.207 = private unnamed_addr constant [22 x i8] c"count-failure-reports\00", align 1
@.str.208 = private unnamed_addr constant [9 x i8] c"failover\00", align 1
@.str.209 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.210 = private unnamed_addr constant [9 x i8] c"takeover\00", align 1
@.str.211 = private unnamed_addr constant [46 x i8] c"You should send CLUSTER FAILOVER to a replica\00", align 1
@.str.212 = private unnamed_addr constant [45 x i8] c"I'm a replica but my master is unknown to me\00", align 1
@.str.213 = private unnamed_addr constant [60 x i8] c"Master is down or failed, please use CLUSTER FAILOVER FORCE\00", align 1
@.str.214 = private unnamed_addr constant [39 x i8] c"Taking over the master (user request).\00", align 1
@.str.215 = private unnamed_addr constant [39 x i8] c"Forced failover user request accepted.\00", align 1
@.str.216 = private unnamed_addr constant [39 x i8] c"Manual failover user request accepted.\00", align 1
@.str.217 = private unnamed_addr constant [17 x i8] c"set-config-epoch\00", align 1
@.str.218 = private unnamed_addr constant [37 x i8] c"Invalid config epoch specified: %lld\00", align 1
@.str.219 = private unnamed_addr constant [84 x i8] c"The user can assign a config epoch only when the node does not know any other node.\00", align 1
@.str.220 = private unnamed_addr constant [38 x i8] c"Node config epoch is already non-zero\00", align 1
@.str.221 = private unnamed_addr constant [53 x i8] c"configEpoch set to %llu via CLUSTER SET-CONFIG-EPOCH\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"hard\00", align 1
@.str.224 = private unnamed_addr constant [5 x i8] c"soft\00", align 1
@.str.225 = private unnamed_addr constant [64 x i8] c"CLUSTER RESET can't be called with master nodes containing keys\00", align 1
@.str.226 = private unnamed_addr constant [29 x i8] c"rdbSaveObjectType(payload,o)\00", align 1
@.str.227 = private unnamed_addr constant [29 x i8] c"rdbSaveObject(payload,o,key)\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.229 = private unnamed_addr constant [7 x i8] c"absttl\00", align 1
@.str.230 = private unnamed_addr constant [9 x i8] c"idletime\00", align 1
@.str.231 = private unnamed_addr constant [37 x i8] c"Invalid IDLETIME value, must be >= 0\00", align 1
@.str.232 = private unnamed_addr constant [5 x i8] c"freq\00", align 1
@.str.233 = private unnamed_addr constant [44 x i8] c"Invalid FREQ value, must be >= 0 and <= 255\00", align 1
@.str.234 = private unnamed_addr constant [32 x i8] c"Invalid TTL value, must be >= 0\00", align 1
@.str.235 = private unnamed_addr constant [43 x i8] c"DUMP payload version or checksum are wrong\00", align 1
@.str.236 = private unnamed_addr constant [16 x i8] c"Bad data format\00", align 1
@.str.237 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.238 = private unnamed_addr constant [33 x i8] c"Can't connect to target node: %s\00", align 1
@.str.239 = private unnamed_addr constant [51 x i8] c"-IOERR error or timeout connecting to the client\0D\0A\00", align 1
@.str.240 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.241 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@.str.242 = private unnamed_addr constant [5 x i8] c"keys\00", align 1
@.str.243 = private unnamed_addr constant [81 x i8] c"When using MIGRATE KEYS option, the key argument must be set to the empty string\00", align 1
@.str.244 = private unnamed_addr constant [9 x i8] c"+NOKEY\0D\0A\00", align 1
@.str.245 = private unnamed_addr constant [30 x i8] c"rioWriteBulkCount(&cmd,'*',2)\00", align 1
@.str.246 = private unnamed_addr constant [5 x i8] c"AUTH\00", align 1
@.str.247 = private unnamed_addr constant [34 x i8] c"rioWriteBulkString(&cmd,\22AUTH\22,4)\00", align 1
@.str.248 = private unnamed_addr constant [52 x i8] c"rioWriteBulkString(&cmd,password, sdslen(password))\00", align 1
@.str.249 = private unnamed_addr constant [7 x i8] c"SELECT\00", align 1
@.str.250 = private unnamed_addr constant [36 x i8] c"rioWriteBulkString(&cmd,\22SELECT\22,6)\00", align 1
@.str.251 = private unnamed_addr constant [32 x i8] c"rioWriteBulkLongLong(&cmd,dbid)\00", align 1
@.str.252 = private unnamed_addr constant [44 x i8] c"rioWriteBulkCount(&cmd,'*',replace ? 5 : 4)\00", align 1
@.str.253 = private unnamed_addr constant [15 x i8] c"RESTORE-ASKING\00", align 1
@.str.254 = private unnamed_addr constant [45 x i8] c"rioWriteBulkString(&cmd,\22RESTORE-ASKING\22,14)\00", align 1
@.str.255 = private unnamed_addr constant [8 x i8] c"RESTORE\00", align 1
@.str.256 = private unnamed_addr constant [37 x i8] c"rioWriteBulkString(&cmd,\22RESTORE\22,7)\00", align 1
@.str.257 = private unnamed_addr constant [24 x i8] c"sdsEncodedObject(kv[j])\00", align 1
@.str.258 = private unnamed_addr constant [56 x i8] c"rioWriteBulkString(&cmd,kv[j]->ptr, sdslen(kv[j]->ptr))\00", align 1
@.str.259 = private unnamed_addr constant [31 x i8] c"rioWriteBulkLongLong(&cmd,ttl)\00", align 1
@.str.260 = private unnamed_addr constant [78 x i8] c"rioWriteBulkString(&cmd,payload.io.buffer.ptr, sdslen(payload.io.buffer.ptr))\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@.str.262 = private unnamed_addr constant [37 x i8] c"rioWriteBulkString(&cmd,\22REPLACE\22,7)\00", align 1
@.str.263 = private unnamed_addr constant [39 x i8] c"Target instance replied with error: %s\00", align 1
@.str.264 = private unnamed_addr constant [4 x i8] c"DEL\00", align 1
@.str.265 = private unnamed_addr constant [48 x i8] c"-IOERR error or timeout %s to target instance\0D\0A\00", align 1
@.str.266 = private unnamed_addr constant [8 x i8] c"writing\00", align 1
@.str.267 = private unnamed_addr constant [8 x i8] c"reading\00", align 1
@.str.268 = private unnamed_addr constant [57 x i8] c"-CROSSSLOT Keys in request don't hash to the same slot\0D\0A\00", align 1
@.str.269 = private unnamed_addr constant [59 x i8] c"-TRYAGAIN Multiple keys request during rehashing of slot\0D\0A\00", align 1
@.str.270 = private unnamed_addr constant [35 x i8] c"-CLUSTERDOWN The cluster is down\0D\0A\00", align 1
@.str.271 = private unnamed_addr constant [36 x i8] c"-CLUSTERDOWN Hash slot not served\0D\0A\00", align 1
@.str.272 = private unnamed_addr constant [15 x i8] c"-%s %d %s:%d\0D\0A\00", align 1
@.str.273 = private unnamed_addr constant [4 x i8] c"ASK\00", align 1
@.str.274 = private unnamed_addr constant [6 x i8] c"MOVED\00", align 1
@.str.275 = private unnamed_addr constant [32 x i8] c"getNodeByQuery() unknown error.\00", align 1
@.str.276 = private unnamed_addr constant [8 x i8] c"myself,\00", align 1
@.str.277 = private unnamed_addr constant [8 x i8] c"master,\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"slave,\00", align 1
@.str.279 = private unnamed_addr constant [7 x i8] c"fail?,\00", align 1
@.str.280 = private unnamed_addr constant [6 x i8] c"fail,\00", align 1
@.str.281 = private unnamed_addr constant [11 x i8] c"handshake,\00", align 1
@.str.282 = private unnamed_addr constant [8 x i8] c"noaddr,\00", align 1
@.str.283 = private unnamed_addr constant [12 x i8] c"nofailover,\00", align 1
@__A_VARIABLE = internal global i32 0
@switch.table.clusterLogCantFailover = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([123 x i8], [123 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.84, i64 0, i64 0)]
@switch.table.clusterCommand.284 = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.124, i64 0, i64 0)]

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterLoadConfig(i8*) local_unnamed_addr #0 !dbg !436 {
  %2 = alloca %struct.stat, align 8
  %3 = alloca i32, align 4
  %4 = tail call %struct.__sFILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #6, !dbg !699
  %5 = bitcast %struct.stat* %2 to i8*, !dbg !701
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #7, !dbg !701
  %6 = icmp eq %struct.__sFILE* %4, null, !dbg !702
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !704
  br i1 %6, label %7, label %15, !dbg !704

; <label>:7:                                      ; preds = %1
  %8 = tail call i32* @__errno() #6, !dbg !705
  %9 = load i32, i32* %8, align 4, !dbg !705, !tbaa !708
  %10 = icmp eq i32 %9, 2, !dbg !712
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !713
  br i1 %10, label %453, label %11, !dbg !713

; <label>:11:                                     ; preds = %7
  %12 = tail call i32* @__errno() #6, !dbg !714
  %13 = load i32, i32* %12, align 4, !dbg !714, !tbaa !708
  %14 = tail call i8* @strerror(i32 %13) #6, !dbg !716
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %0, i8* %14) #6, !dbg !717
  tail call void @exit(i32 1) #8, !dbg !718
  unreachable

; <label>:15:                                     ; preds = %1
  %16 = tail call i32 @fileno(%struct.__sFILE* nonnull %4) #6, !dbg !719
  %17 = call i32 @fstat(i32 %16, %struct.stat* nonnull %2) #6, !dbg !722
  %18 = icmp eq i32 %17, -1, !dbg !723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !724
  br i1 %18, label %25, label %19, !dbg !724

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 7, !dbg !725
  %21 = load i64, i64* %20, align 8, !dbg !725, !tbaa !726
  %22 = icmp eq i64 %21, 0, !dbg !731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !732
  br i1 %22, label %23, label %25, !dbg !732

; <label>:23:                                     ; preds = %19
  %24 = call i32 @fclose(%struct.__sFILE* nonnull %4) #6, !dbg !733
  br label %453, !dbg !735

; <label>:25:                                     ; preds = %15, %19
  %26 = call i8* @zmalloc(i64 2098176) #6, !dbg !737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !739
  %27 = call i8* @fgets(i8* %26, i32 2098176, %struct.__sFILE* nonnull %4) #6, !dbg !740
  %28 = icmp eq i8* %27, null, !dbg !741
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !739
  br i1 %28, label %431, label %29, !dbg !739

; <label>:29:                                     ; preds = %25
  %30 = bitcast i32* %3 to i8*
  br label %31, !dbg !739

; <label>:31:                                     ; preds = %29, %428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #7, !dbg !742
  %32 = load i8, i8* %26, align 1, !dbg !743, !tbaa !745
  %33 = icmp eq i8 %32, 10, !dbg !746
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !747
  br i1 %33, label %425, label %34, !dbg !747, !llvm.loop !748

; <label>:34:                                     ; preds = %31
  %35 = icmp eq i8 %32, 0, !dbg !750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !751
  br i1 %35, label %425, label %36, !dbg !751, !llvm.loop !748

; <label>:36:                                     ; preds = %34
  %37 = call i8** @sdssplitargs(i8* nonnull %26, i32* nonnull %3) #6, !dbg !753
  %38 = icmp eq i8** %37, null, !dbg !755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !757
  br i1 %38, label %423, label %39, !dbg !757

; <label>:39:                                     ; preds = %36
  %40 = load i8*, i8** %37, align 8, !dbg !758, !tbaa !760
  %41 = call i32 @strcasecmp(i8* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !762
  %42 = icmp eq i32 %41, 0, !dbg !763
  %43 = load i32, i32* %3, align 4, !dbg !764, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !766
  br i1 %42, label %44, label %80, !dbg !766

; <label>:44:                                     ; preds = %39
  %45 = and i32 %43, 1, !dbg !767
  %46 = icmp eq i32 %45, 0, !dbg !767
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !771
  br i1 %46, label %424, label %47, !dbg !770

; <label>:47:                                     ; preds = %44
  %48 = icmp sgt i32 %43, 1, !dbg !774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !776
  br i1 %48, label %49, label %78, !dbg !776

; <label>:49:                                     ; preds = %47, %73
  %50 = phi i64 [ %74, %73 ], [ 1, %47 ]
  %51 = getelementptr inbounds i8*, i8** %37, i64 %50, !dbg !777
  %52 = load i8*, i8** %51, align 8, !dbg !777, !tbaa !760
  %53 = call i32 @strcasecmp(i8* %52, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !780
  %54 = icmp eq i32 %53, 0, !dbg !781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !782
  br i1 %54, label %55, label %62, !dbg !782

; <label>:55:                                     ; preds = %49
  %56 = add nuw nsw i64 %50, 1, !dbg !783
  %57 = getelementptr inbounds i8*, i8** %37, i64 %56, !dbg !785
  %58 = load i8*, i8** %57, align 8, !dbg !785, !tbaa !760
  %59 = call i64 @strtoull(i8* %58, i8** null, i32 10) #6, !dbg !786
  %60 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !787, !tbaa !788
  %61 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %60, i64 0, i32 1, !dbg !795
  store i64 %59, i64* %61, align 8, !dbg !796, !tbaa !797
  br label %73, !dbg !799

; <label>:62:                                     ; preds = %49
  %63 = call i32 @strcasecmp(i8* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !800
  %64 = icmp eq i32 %63, 0, !dbg !802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !803
  br i1 %64, label %65, label %72, !dbg !803

; <label>:65:                                     ; preds = %62
  %66 = add nuw nsw i64 %50, 1, !dbg !804
  %67 = getelementptr inbounds i8*, i8** %37, i64 %66, !dbg !806
  %68 = load i8*, i8** %67, align 8, !dbg !806, !tbaa !760
  %69 = call i64 @strtoull(i8* %68, i8** null, i32 10) #6, !dbg !807
  %70 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !808, !tbaa !788
  %71 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %70, i64 0, i32 21, !dbg !809
  store i64 %69, i64* %71, align 8, !dbg !810, !tbaa !811
  br label %73, !dbg !812

; <label>:72:                                     ; preds = %62
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i8* %52) #6, !dbg !813
  br label %73

; <label>:73:                                     ; preds = %55, %72, %65
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %74 = add nuw i64 %50, 2, !dbg !815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !816
  %75 = load i32, i32* %3, align 4, !dbg !817, !tbaa !708
  %76 = trunc i64 %74 to i32, !dbg !774
  %77 = icmp sgt i32 %75, %76, !dbg !774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !776
  br i1 %77, label %49, label %78, !dbg !776, !llvm.loop !818

; <label>:78:                                     ; preds = %73, %47
  %79 = phi i32 [ %43, %47 ], [ %75, %73 ], !dbg !817
  call void @sdsfreesplitres(i8** nonnull %37, i32 %79) #6, !dbg !820
  br label %425, !dbg !821, !llvm.loop !748

; <label>:80:                                     ; preds = %39
  %81 = icmp slt i32 %43, 8, !dbg !822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !823
  br i1 %81, label %423, label %82, !dbg !823

; <label>:82:                                     ; preds = %80
  %83 = call i8* @sdsnewlen(i8* %40, i64 40) #6, !dbg !833
  %84 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !835, !tbaa !788
  %85 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %84, i64 0, i32 4, !dbg !836
  %86 = load %struct.dict*, %struct.dict** %85, align 8, !dbg !836, !tbaa !837
  %87 = call %struct.dictEntry* @dictFind(%struct.dict* %86, i8* %83) #6, !dbg !838
  call void @sdsfree(i8* %83) #6, !dbg !840
  %88 = icmp eq %struct.dictEntry* %87, null, !dbg !841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !843
  br i1 %88, label %89, label %90, !dbg !843

; <label>:89:                                     ; preds = %82
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !847
  br label %95, !dbg !847

; <label>:90:                                     ; preds = %82
  %91 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %87, i64 0, i32 1, i32 0, !dbg !848
  %92 = bitcast i8** %91 to %struct.clusterNode**, !dbg !848
  %93 = load %struct.clusterNode*, %struct.clusterNode** %92, align 8, !dbg !848, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !845
  %94 = icmp eq %struct.clusterNode* %93, null, !dbg !850
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !847
  br i1 %94, label %95, label %105, !dbg !847

; <label>:95:                                     ; preds = %89, %90
  %96 = load i8*, i8** %37, align 8, !dbg !852, !tbaa !760
  %97 = call %struct.clusterNode* @createClusterNode(i8* %96, i32 0) #10, !dbg !854
  %98 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !863, !tbaa !788
  %99 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %98, i64 0, i32 4, !dbg !864
  %100 = load %struct.dict*, %struct.dict** %99, align 8, !dbg !864, !tbaa !837
  %101 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %97, i64 0, i32 1, i64 0, !dbg !865
  %102 = call i8* @sdsnewlen(i8* nonnull %101, i64 40) #6, !dbg !866
  %103 = bitcast %struct.clusterNode* %97 to i8*, !dbg !867
  %104 = call i32 @dictAdd(%struct.dict* %100, i8* %102, i8* %103) #6, !dbg !868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !871
  br label %105, !dbg !871

; <label>:105:                                    ; preds = %90, %95
  %106 = phi %struct.clusterNode* [ %93, %90 ], [ %97, %95 ], !dbg !872
  %107 = getelementptr inbounds i8*, i8** %37, i64 1, !dbg !873
  %108 = load i8*, i8** %107, align 8, !dbg !873, !tbaa !760
  %109 = call i8* @strrchr(i8* %108, i32 58) #6, !dbg !875
  %110 = icmp eq i8* %109, null, !dbg !877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !878
  br i1 %110, label %423, label %111, !dbg !878

; <label>:111:                                    ; preds = %105
  store i8 0, i8* %109, align 1, !dbg !879, !tbaa !745
  %112 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 16, i64 0, !dbg !880
  %113 = load i8*, i8** %107, align 8, !dbg !881, !tbaa !760
  %114 = call i64 @strlen(i8* %113) #6, !dbg !882
  %115 = add i64 %114, 1, !dbg !883
  %116 = call i8* @memcpy(i8* nonnull %112, i8* %113, i64 %115) #6, !dbg !884
  %117 = getelementptr inbounds i8, i8* %109, i64 1, !dbg !885
  %118 = call i8* @strchr(i8* nonnull %117, i32 64) #6, !dbg !887
  %119 = icmp eq i8* %118, null, !dbg !889
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !891
  br i1 %119, label %122, label %120, !dbg !891

; <label>:120:                                    ; preds = %111
  store i8 0, i8* %118, align 1, !dbg !892, !tbaa !745
  %121 = getelementptr inbounds i8, i8* %118, i64 1, !dbg !894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !895
  br label %122, !dbg !895

; <label>:122:                                    ; preds = %111, %120
  %123 = phi i8* [ %121, %120 ], [ null, %111 ], !dbg !896
  %124 = call i32 @atoi(i8* nonnull %117) #6, !dbg !897
  %125 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 17, !dbg !898
  store i32 %124, i32* %125, align 8, !dbg !899, !tbaa !900
  %126 = icmp eq i8* %123, null, !dbg !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !902
  br i1 %126, label %129, label %127, !dbg !902

; <label>:127:                                    ; preds = %122
  %128 = call i32 @atoi(i8* nonnull %123) #6, !dbg !903
  br label %131, !dbg !902

; <label>:129:                                    ; preds = %122
  %130 = add nsw i32 %124, 10000, !dbg !904
  br label %131, !dbg !902

; <label>:131:                                    ; preds = %129, %127
  %132 = phi i32 [ %128, %127 ], [ %130, %129 ], !dbg !902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !902
  %133 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 18, !dbg !905
  store i32 %132, i32* %133, align 4, !dbg !906, !tbaa !907
  %134 = getelementptr inbounds i8*, i8** %37, i64 2, !dbg !908
  %135 = load i8*, i8** %134, align 8, !dbg !908, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  %136 = icmp eq i8* %135, null, !dbg !910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  br i1 %136, label %209, label %137, !dbg !910

; <label>:137:                                    ; preds = %131
  %138 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 2
  %139 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 11
  br label %140, !dbg !910

; <label>:140:                                    ; preds = %206, %137
  %141 = phi i8* [ %135, %137 ], [ %207, %206 ]
  %142 = call i8* @strchr(i8* nonnull %141, i32 44) #6, !dbg !911
  %143 = icmp ne i8* %142, null, !dbg !913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !915
  br i1 %143, label %144, label %145, !dbg !915

; <label>:144:                                    ; preds = %140
  store i8 0, i8* %142, align 1, !dbg !916, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !917
  br label %145, !dbg !917

; <label>:145:                                    ; preds = %144, %140
  %146 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !918
  %147 = icmp eq i32 %146, 0, !dbg !918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !920
  br i1 %147, label %148, label %157, !dbg !920

; <label>:148:                                    ; preds = %145
  %149 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !921, !tbaa !788
  %150 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %149, i64 0, i32 0, !dbg !921
  %151 = load %struct.clusterNode*, %struct.clusterNode** %150, align 8, !dbg !921, !tbaa !923
  %152 = icmp eq %struct.clusterNode* %151, null, !dbg !921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !921
  br i1 %152, label %154, label %153, !dbg !921

; <label>:153:                                    ; preds = %148
  call void @_serverAssert(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 190) #6, !dbg !921
  call void @_exit(i32 1) #8, !dbg !921
  unreachable

; <label>:154:                                    ; preds = %148
  store %struct.clusterNode* %106, %struct.clusterNode** %150, align 8, !dbg !924, !tbaa !923
  store %struct.clusterNode* %106, %struct.clusterNode** @myself, align 8, !dbg !925, !tbaa !760
  %155 = load i32, i32* %138, align 8, !dbg !926, !tbaa !927
  %156 = or i32 %155, 16, !dbg !926
  store i32 %156, i32* %138, align 8, !dbg !926, !tbaa !927
  br label %204, !dbg !928

; <label>:157:                                    ; preds = %145
  %158 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0)) #9, !dbg !929
  %159 = icmp eq i32 %158, 0, !dbg !929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !931
  br i1 %159, label %160, label %163, !dbg !931

; <label>:160:                                    ; preds = %157
  %161 = load i32, i32* %138, align 8, !dbg !932, !tbaa !927
  %162 = or i32 %161, 1, !dbg !932
  store i32 %162, i32* %138, align 8, !dbg !932, !tbaa !927
  br label %204, !dbg !934

; <label>:163:                                    ; preds = %157
  %164 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !935
  %165 = icmp eq i32 %164, 0, !dbg !935
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !937
  br i1 %165, label %166, label %169, !dbg !937

; <label>:166:                                    ; preds = %163
  %167 = load i32, i32* %138, align 8, !dbg !938, !tbaa !927
  %168 = or i32 %167, 2, !dbg !938
  store i32 %168, i32* %138, align 8, !dbg !938, !tbaa !927
  br label %204, !dbg !940

; <label>:169:                                    ; preds = %163
  %170 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !941
  %171 = icmp eq i32 %170, 0, !dbg !941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !943
  br i1 %171, label %172, label %175, !dbg !943

; <label>:172:                                    ; preds = %169
  %173 = load i32, i32* %138, align 8, !dbg !944, !tbaa !927
  %174 = or i32 %173, 4, !dbg !944
  store i32 %174, i32* %138, align 8, !dbg !944, !tbaa !927
  br label %204, !dbg !946

; <label>:175:                                    ; preds = %169
  %176 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !947
  %177 = icmp eq i32 %176, 0, !dbg !947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !949
  br i1 %177, label %178, label %182, !dbg !949

; <label>:178:                                    ; preds = %175
  %179 = load i32, i32* %138, align 8, !dbg !950, !tbaa !927
  %180 = or i32 %179, 8, !dbg !950
  store i32 %180, i32* %138, align 8, !dbg !950, !tbaa !927
  %181 = call i64 @mstime() #6, !dbg !952
  store i64 %181, i64* %139, align 8, !dbg !953, !tbaa !954
  br label %204, !dbg !955

; <label>:182:                                    ; preds = %175
  %183 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !956
  %184 = icmp eq i32 %183, 0, !dbg !956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !958
  br i1 %184, label %185, label %188, !dbg !958

; <label>:185:                                    ; preds = %182
  %186 = load i32, i32* %138, align 8, !dbg !959, !tbaa !927
  %187 = or i32 %186, 32, !dbg !959
  store i32 %187, i32* %138, align 8, !dbg !959, !tbaa !927
  br label %204, !dbg !961

; <label>:188:                                    ; preds = %182
  %189 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !962
  %190 = icmp eq i32 %189, 0, !dbg !962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !964
  br i1 %190, label %191, label %194, !dbg !964

; <label>:191:                                    ; preds = %188
  %192 = load i32, i32* %138, align 8, !dbg !965, !tbaa !927
  %193 = or i32 %192, 64, !dbg !965
  store i32 %193, i32* %138, align 8, !dbg !965, !tbaa !927
  br label %204, !dbg !967

; <label>:194:                                    ; preds = %188
  %195 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !968
  %196 = icmp eq i32 %195, 0, !dbg !968
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !970
  br i1 %196, label %197, label %200, !dbg !970

; <label>:197:                                    ; preds = %194
  %198 = load i32, i32* %138, align 8, !dbg !971, !tbaa !927
  %199 = or i32 %198, 512, !dbg !971
  store i32 %199, i32* %138, align 8, !dbg !971, !tbaa !927
  br label %204, !dbg !973

; <label>:200:                                    ; preds = %194
  %201 = call i32 @strcasecmp(i8* nonnull %141, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !974
  %202 = icmp eq i32 %201, 0, !dbg !974
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !976
  br i1 %202, label %205, label %203, !dbg !976

; <label>:203:                                    ; preds = %200
  call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !977
  call void @_exit(i32 1) #8, !dbg !977
  unreachable

; <label>:204:                                    ; preds = %154, %166, %178, %191, %197, %185, %172, %160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !979
  br label %205, !dbg !980

; <label>:205:                                    ; preds = %204, %200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !980
  br i1 %143, label %206, label %208, !dbg !980

; <label>:206:                                    ; preds = %205
  %207 = getelementptr inbounds i8, i8* %142, i64 1, !dbg !981
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !983
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  br label %140

; <label>:208:                                    ; preds = %205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !910
  br label %209, !dbg !984

; <label>:209:                                    ; preds = %208, %131
  %210 = getelementptr inbounds i8*, i8** %37, i64 3, !dbg !984
  %211 = load i8*, i8** %210, align 8, !dbg !984, !tbaa !760
  %212 = load i8, i8* %211, align 1, !dbg !984, !tbaa !745
  %213 = icmp eq i8 %212, 45, !dbg !986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !987
  br i1 %213, label %271, label %214, !dbg !987

; <label>:214:                                    ; preds = %209
  %215 = call i8* @sdsnewlen(i8* %211, i64 40) #6, !dbg !991
  %216 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !993, !tbaa !788
  %217 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %216, i64 0, i32 4, !dbg !994
  %218 = load %struct.dict*, %struct.dict** %217, align 8, !dbg !994, !tbaa !837
  %219 = call %struct.dictEntry* @dictFind(%struct.dict* %218, i8* %215) #6, !dbg !995
  call void @sdsfree(i8* %215) #6, !dbg !997
  %220 = icmp eq %struct.dictEntry* %219, null, !dbg !998
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !999
  br i1 %220, label %221, label %222, !dbg !999

; <label>:221:                                    ; preds = %214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1003
  br label %227, !dbg !1003

; <label>:222:                                    ; preds = %214
  %223 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %219, i64 0, i32 1, i32 0, !dbg !1004
  %224 = bitcast i8** %223 to %struct.clusterNode**, !dbg !1004
  %225 = load %struct.clusterNode*, %struct.clusterNode** %224, align 8, !dbg !1004, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1001
  %226 = icmp eq %struct.clusterNode* %225, null, !dbg !1006
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1003
  br i1 %226, label %227, label %237, !dbg !1003

; <label>:227:                                    ; preds = %221, %222
  %228 = load i8*, i8** %210, align 8, !dbg !1008, !tbaa !760
  %229 = call %struct.clusterNode* @createClusterNode(i8* %228, i32 0) #10, !dbg !1010
  %230 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1013, !tbaa !788
  %231 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %230, i64 0, i32 4, !dbg !1014
  %232 = load %struct.dict*, %struct.dict** %231, align 8, !dbg !1014, !tbaa !837
  %233 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %229, i64 0, i32 1, i64 0, !dbg !1015
  %234 = call i8* @sdsnewlen(i8* nonnull %233, i64 40) #6, !dbg !1016
  %235 = bitcast %struct.clusterNode* %229 to i8*, !dbg !1017
  %236 = call i32 @dictAdd(%struct.dict* %232, i8* %234, i8* %235) #6, !dbg !1018
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1020
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1021
  br label %237, !dbg !1021

; <label>:237:                                    ; preds = %222, %227
  %238 = phi %struct.clusterNode* [ %225, %222 ], [ %229, %227 ], !dbg !1022
  %239 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 8, !dbg !1023
  store %struct.clusterNode* %238, %struct.clusterNode** %239, align 8, !dbg !1024, !tbaa !1025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1037
  %240 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %238, i64 0, i32 6, !dbg !1039
  %241 = load i32, i32* %240, align 4, !dbg !1039, !tbaa !1041
  %242 = icmp sgt i32 %241, 0, !dbg !1042
  %243 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %238, i64 0, i32 7, !dbg !1043
  %244 = load %struct.clusterNode**, %struct.clusterNode*** %243, align 8, !dbg !1043, !tbaa !1044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1045
  br i1 %242, label %245, label %255, !dbg !1045

; <label>:245:                                    ; preds = %237
  %246 = sext i32 %241 to i64
  br label %247, !dbg !1046

; <label>:247:                                    ; preds = %252, %245
  %248 = phi i64 [ 0, %245 ], [ %253, %252 ]
  %249 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %244, i64 %248, !dbg !1046
  %250 = load %struct.clusterNode*, %struct.clusterNode** %249, align 8, !dbg !1046, !tbaa !760
  %251 = icmp eq %struct.clusterNode* %250, %106, !dbg !1048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1049
  br i1 %251, label %270, label %252, !dbg !1049

; <label>:252:                                    ; preds = %247
  %253 = add nuw nsw i64 %248, 1, !dbg !1050
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1051
  %254 = icmp slt i64 %253, %246, !dbg !1042
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1045
  br i1 %254, label %247, label %255, !dbg !1045, !llvm.loop !1052

; <label>:255:                                    ; preds = %252, %237
  %256 = bitcast %struct.clusterNode** %244 to i8*, !dbg !1055
  %257 = add nsw i32 %241, 1, !dbg !1056
  %258 = sext i32 %257 to i64, !dbg !1057
  %259 = shl nsw i64 %258, 3, !dbg !1058
  %260 = call i8* @zrealloc(i8* %256, i64 %259) #6, !dbg !1059
  %261 = bitcast i8* %260 to %struct.clusterNode**, !dbg !1059
  %262 = bitcast %struct.clusterNode*** %243 to i8**, !dbg !1060
  store i8* %260, i8** %262, align 8, !dbg !1060, !tbaa !1044
  %263 = load i32, i32* %240, align 4, !dbg !1061, !tbaa !1041
  %264 = sext i32 %263 to i64, !dbg !1062
  %265 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %261, i64 %264, !dbg !1062
  store %struct.clusterNode* %106, %struct.clusterNode** %265, align 8, !dbg !1063, !tbaa !760
  %266 = add nsw i32 %263, 1, !dbg !1064
  store i32 %266, i32* %240, align 4, !dbg !1064, !tbaa !1041
  %267 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %238, i64 0, i32 2, !dbg !1065
  %268 = load i32, i32* %267, align 8, !dbg !1066, !tbaa !927
  %269 = or i32 %268, 256, !dbg !1066
  store i32 %269, i32* %267, align 8, !dbg !1066, !tbaa !927
  br label %270, !dbg !1067

; <label>:270:                                    ; preds = %247, %255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1068
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1070
  br label %271, !dbg !1070

; <label>:271:                                    ; preds = %209, %270
  %272 = getelementptr inbounds i8*, i8** %37, i64 4, !dbg !1071
  %273 = load i8*, i8** %272, align 8, !dbg !1071, !tbaa !760
  %274 = call i32 @atoi(i8* %273) #6, !dbg !1073
  %275 = icmp eq i32 %274, 0, !dbg !1073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1074
  br i1 %275, label %279, label %276, !dbg !1074

; <label>:276:                                    ; preds = %271
  %277 = call i64 @mstime() #6, !dbg !1075
  %278 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 9, !dbg !1076
  store i64 %277, i64* %278, align 8, !dbg !1077, !tbaa !1078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1079
  br label %279, !dbg !1079

; <label>:279:                                    ; preds = %271, %276
  %280 = getelementptr inbounds i8*, i8** %37, i64 5, !dbg !1080
  %281 = load i8*, i8** %280, align 8, !dbg !1080, !tbaa !760
  %282 = call i32 @atoi(i8* %281) #6, !dbg !1082
  %283 = icmp eq i32 %282, 0, !dbg !1082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1083
  br i1 %283, label %287, label %284, !dbg !1083

; <label>:284:                                    ; preds = %279
  %285 = call i64 @mstime() #6, !dbg !1084
  %286 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 10, !dbg !1085
  store i64 %285, i64* %286, align 8, !dbg !1086, !tbaa !1087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1088
  br label %287, !dbg !1088

; <label>:287:                                    ; preds = %279, %284
  %288 = getelementptr inbounds i8*, i8** %37, i64 6, !dbg !1089
  %289 = load i8*, i8** %288, align 8, !dbg !1089, !tbaa !760
  %290 = call i64 @strtoull(i8* %289, i8** null, i32 10) #6, !dbg !1090
  %291 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %106, i64 0, i32 3, !dbg !1091
  store i64 %290, i64* %291, align 8, !dbg !1092, !tbaa !1093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1094
  %292 = load i32, i32* %3, align 4, !dbg !1095, !tbaa !708
  %293 = icmp sgt i32 %292, 8, !dbg !1096
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %293, label %294, label %426, !dbg !1097

; <label>:294:                                    ; preds = %287, %418
  %295 = phi i64 [ %419, %418 ], [ 8, %287 ]
  %296 = getelementptr inbounds i8*, i8** %37, i64 %295, !dbg !1098
  %297 = load i8*, i8** %296, align 8, !dbg !1098, !tbaa !760
  %298 = load i8, i8* %297, align 1, !dbg !1098, !tbaa !745
  %299 = icmp eq i8 %298, 91, !dbg !1099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1100
  %300 = call i8* @strchr(i8* %297, i32 45) #6, !dbg !1101
  %301 = icmp eq i8* %300, null, !dbg !1101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1103
  br i1 %299, label %302, label %384, !dbg !1100

; <label>:302:                                    ; preds = %294
  br i1 %301, label %303, label %304, !dbg !1104

; <label>:303:                                    ; preds = %302
  call void @_serverAssert(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 246) #6, !dbg !1104
  call void @_exit(i32 1) #8, !dbg !1104
  unreachable

; <label>:304:                                    ; preds = %302
  store i8 0, i8* %300, align 1, !dbg !1105, !tbaa !745
  %305 = getelementptr inbounds i8, i8* %300, i64 1, !dbg !1106
  %306 = load i8, i8* %305, align 1, !dbg !1106, !tbaa !745
  %307 = load i8*, i8** %296, align 8, !dbg !1108, !tbaa !760
  %308 = getelementptr inbounds i8, i8* %307, i64 1, !dbg !1109
  %309 = call i32 @atoi(i8* nonnull %308) #6, !dbg !1110
  %310 = icmp ugt i32 %309, 16383, !dbg !1112
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1112
  br i1 %310, label %311, label %312, !dbg !1112

; <label>:311:                                    ; preds = %304
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1114
  br label %449

; <label>:312:                                    ; preds = %304
  %313 = getelementptr inbounds i8, i8* %300, i64 3, !dbg !1115
  %314 = call i8* @sdsnewlen(i8* nonnull %313, i64 40) #6, !dbg !1118
  %315 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1120, !tbaa !788
  %316 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %315, i64 0, i32 4, !dbg !1121
  %317 = load %struct.dict*, %struct.dict** %316, align 8, !dbg !1121, !tbaa !837
  %318 = call %struct.dictEntry* @dictFind(%struct.dict* %317, i8* %314) #6, !dbg !1122
  call void @sdsfree(i8* %314) #6, !dbg !1124
  %319 = icmp eq %struct.dictEntry* %318, null, !dbg !1125
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1126
  br i1 %319, label %320, label %321, !dbg !1126

; <label>:320:                                    ; preds = %312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1127
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1130
  br label %326, !dbg !1130

; <label>:321:                                    ; preds = %312
  %322 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %318, i64 0, i32 1, i32 0, !dbg !1131
  %323 = bitcast i8** %322 to %struct.clusterNode**, !dbg !1131
  %324 = load %struct.clusterNode*, %struct.clusterNode** %323, align 8, !dbg !1131, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1128
  %325 = icmp eq %struct.clusterNode* %324, null, !dbg !1133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1130
  br i1 %325, label %326, label %376, !dbg !1130

; <label>:326:                                    ; preds = %320, %321
  %327 = call i8* @zmalloc(i64 2264) #6, !dbg !1146
  %328 = bitcast i8* %327 to %struct.clusterNode*, !dbg !1146
  %329 = getelementptr inbounds i8, i8* %327, i64 8, !dbg !1148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1150
  %330 = call i8* @memcpy(i8* nonnull %329, i8* nonnull %313, i64 40) #6, !dbg !1151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1151
  %331 = call i64 @mstime() #6, !dbg !1152
  %332 = bitcast i8* %327 to i64*, !dbg !1153
  store i64 %331, i64* %332, align 8, !dbg !1154, !tbaa !1155
  %333 = getelementptr inbounds i8, i8* %327, i64 56, !dbg !1156
  %334 = bitcast i8* %333 to i64*, !dbg !1156
  store i64 0, i64* %334, align 8, !dbg !1157, !tbaa !1093
  %335 = getelementptr inbounds i8, i8* %327, i64 48, !dbg !1158
  %336 = bitcast i8* %335 to i32*, !dbg !1158
  store i32 0, i32* %336, align 8, !dbg !1159, !tbaa !927
  %337 = getelementptr inbounds i8, i8* %327, i64 64, !dbg !1160
  %338 = call i8* @memset(i8* nonnull %337, i32 0, i64 2048) #6, !dbg !1161
  %339 = getelementptr inbounds i8, i8* %327, i64 2112, !dbg !1162
  %340 = bitcast i8* %339 to i32*, !dbg !1162
  store i32 0, i32* %340, align 8, !dbg !1163, !tbaa !1164
  %341 = getelementptr inbounds i8, i8* %327, i64 2116, !dbg !1165
  %342 = bitcast i8* %341 to i32*, !dbg !1165
  store i32 0, i32* %342, align 4, !dbg !1166, !tbaa !1041
  %343 = getelementptr inbounds i8, i8* %327, i64 2120, !dbg !1167
  %344 = bitcast i8* %343 to %struct.clusterNode***, !dbg !1167
  store %struct.clusterNode** null, %struct.clusterNode*** %344, align 8, !dbg !1168, !tbaa !1044
  %345 = getelementptr inbounds i8, i8* %327, i64 2128, !dbg !1169
  %346 = bitcast i8* %345 to %struct.clusterNode**, !dbg !1169
  store %struct.clusterNode* null, %struct.clusterNode** %346, align 8, !dbg !1170, !tbaa !1025
  %347 = getelementptr inbounds i8, i8* %327, i64 2136, !dbg !1171
  %348 = bitcast i8* %347 to <2 x i64>*, !dbg !1172
  store <2 x i64> zeroinitializer, <2 x i64>* %348, align 8, !dbg !1172, !tbaa !1173
  %349 = getelementptr inbounds i8, i8* %327, i64 2152, !dbg !1174
  %350 = bitcast i8* %349 to i64*, !dbg !1174
  store i64 0, i64* %350, align 8, !dbg !1175, !tbaa !954
  %351 = getelementptr inbounds i8, i8* %327, i64 2248, !dbg !1176
  %352 = bitcast i8* %351 to %struct.clusterLink**, !dbg !1176
  store %struct.clusterLink* null, %struct.clusterLink** %352, align 8, !dbg !1177, !tbaa !1178
  %353 = getelementptr inbounds i8, i8* %327, i64 2192, !dbg !1179
  %354 = call i8* @memset(i8* nonnull %353, i32 0, i64 46) #6, !dbg !1180
  %355 = getelementptr inbounds i8, i8* %327, i64 2240, !dbg !1181
  %356 = bitcast i8* %355 to i32*, !dbg !1181
  store i32 0, i32* %356, align 8, !dbg !1182, !tbaa !900
  %357 = getelementptr inbounds i8, i8* %327, i64 2244, !dbg !1183
  %358 = bitcast i8* %357 to i32*, !dbg !1183
  store i32 0, i32* %358, align 4, !dbg !1184, !tbaa !907
  %359 = call %struct.list* @listCreate() #6, !dbg !1185
  %360 = getelementptr inbounds i8, i8* %327, i64 2256, !dbg !1186
  %361 = bitcast i8* %360 to %struct.list**, !dbg !1186
  store %struct.list* %359, %struct.list** %361, align 8, !dbg !1187, !tbaa !1188
  %362 = getelementptr inbounds i8, i8* %327, i64 2160, !dbg !1189
  %363 = bitcast i8* %362 to i64*, !dbg !1189
  store i64 0, i64* %363, align 8, !dbg !1190, !tbaa !1191
  %364 = getelementptr inbounds i8, i8* %327, i64 2176, !dbg !1192
  %365 = bitcast i8* %364 to i64*, !dbg !1192
  store i64 0, i64* %365, align 8, !dbg !1193, !tbaa !1194
  %366 = getelementptr inbounds i8, i8* %327, i64 2168, !dbg !1195
  %367 = bitcast i8* %366 to i64*, !dbg !1195
  store i64 0, i64* %367, align 8, !dbg !1196, !tbaa !1197
  %368 = getelementptr inbounds i8, i8* %327, i64 2184, !dbg !1198
  %369 = bitcast i8* %368 to i64*, !dbg !1198
  store i64 0, i64* %369, align 8, !dbg !1199, !tbaa !1200
  %370 = getelementptr inbounds %struct.list, %struct.list* %359, i64 0, i32 3, !dbg !1201
  store void (i8*)* @zfree, void (i8*)** %370, align 8, !dbg !1201, !tbaa !1202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1204
  %371 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1207, !tbaa !788
  %372 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %371, i64 0, i32 4, !dbg !1208
  %373 = load %struct.dict*, %struct.dict** %372, align 8, !dbg !1208, !tbaa !837
  %374 = call i8* @sdsnewlen(i8* nonnull %329, i64 40) #6, !dbg !1209
  %375 = call i32 @dictAdd(%struct.dict* %373, i8* %374, i8* %327) #6, !dbg !1210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1213
  br label %376, !dbg !1213

; <label>:376:                                    ; preds = %321, %326
  %377 = phi %struct.clusterNode* [ %324, %321 ], [ %328, %326 ], !dbg !1214
  %378 = icmp eq i8 %306, 62, !dbg !1215
  %379 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1217, !tbaa !788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1219
  %380 = sext i32 %309 to i64, !dbg !1217
  %381 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %379, i64 0, i32 6, i64 %380, !dbg !1220
  %382 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %379, i64 0, i32 7, i64 %380, !dbg !1222
  %383 = select i1 %378, %struct.clusterNode** %381, %struct.clusterNode** %382, !dbg !1219
  store %struct.clusterNode* %377, %struct.clusterNode** %383, align 8, !dbg !1217, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1223
  br label %418

; <label>:384:                                    ; preds = %294
  br i1 %301, label %390, label %385, !dbg !1224

; <label>:385:                                    ; preds = %384
  store i8 0, i8* %300, align 1, !dbg !1225, !tbaa !745
  %386 = load i8*, i8** %296, align 8, !dbg !1227, !tbaa !760
  %387 = call i32 @atoi(i8* %386) #6, !dbg !1228
  %388 = getelementptr inbounds i8, i8* %300, i64 1, !dbg !1230
  %389 = call i32 @atoi(i8* nonnull %388) #6, !dbg !1231
  br label %393, !dbg !1233

; <label>:390:                                    ; preds = %384
  %391 = load i8*, i8** %296, align 8, !dbg !1234, !tbaa !760
  %392 = call i32 @atoi(i8* %391) #6, !dbg !1236
  br label %393

; <label>:393:                                    ; preds = %385, %390
  %394 = phi i32 [ %387, %385 ], [ %392, %390 ], !dbg !1237
  %395 = phi i32 [ %389, %385 ], [ %392, %390 ], !dbg !1237
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %396 = icmp ugt i32 %394, 16383, !dbg !1238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1238
  br i1 %396, label %449, label %397, !dbg !1238

; <label>:397:                                    ; preds = %393
  %398 = icmp ugt i32 %395, 16383, !dbg !1240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1240
  br i1 %398, label %449, label %399, !dbg !1240

; <label>:399:                                    ; preds = %397
  %400 = icmp sgt i32 %394, %395, !dbg !1242
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1243
  br i1 %400, label %418, label %401, !dbg !1243

; <label>:401:                                    ; preds = %399
  %402 = sext i32 %394 to i64, !dbg !1244
  %403 = sext i32 %395 to i64, !dbg !1244
  br label %404, !dbg !1244

; <label>:404:                                    ; preds = %401, %416
  %405 = phi i64 [ %402, %401 ], [ %406, %416 ]
  %406 = add nsw i64 %405, 1, !dbg !1244
  %407 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1254, !tbaa !788
  %408 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %407, i64 0, i32 8, i64 %405, !dbg !1256
  %409 = load %struct.clusterNode*, %struct.clusterNode** %408, align 8, !dbg !1256, !tbaa !760
  %410 = icmp eq %struct.clusterNode* %409, null, !dbg !1256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1257
  br i1 %410, label %411, label %416, !dbg !1257

; <label>:411:                                    ; preds = %404
  %412 = trunc i64 %405 to i32, !dbg !1258
  %413 = call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %106, i32 %412) #6, !dbg !1258
  %414 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1259, !tbaa !788
  %415 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %414, i64 0, i32 8, i64 %405, !dbg !1260
  store %struct.clusterNode* %106, %struct.clusterNode** %415, align 8, !dbg !1261, !tbaa !760
  br label %416, !dbg !1262

; <label>:416:                                    ; preds = %404, %411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1243
  %417 = icmp slt i64 %405, %403, !dbg !1242
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1243
  br i1 %417, label %404, label %418, !dbg !1243, !llvm.loop !1265

; <label>:418:                                    ; preds = %416, %399, %376
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %419 = add nuw nsw i64 %295, 1, !dbg !1267
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1268
  %420 = load i32, i32* %3, align 4, !dbg !1095, !tbaa !708
  %421 = sext i32 %420 to i64, !dbg !1096
  %422 = icmp slt i64 %419, %421, !dbg !1096
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1097
  br i1 %422, label %294, label %426, !dbg !1097, !llvm.loop !1269

; <label>:423:                                    ; preds = %105, %80, %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1271
  br label %424, !dbg !749

; <label>:424:                                    ; preds = %44, %423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7, !dbg !749
  br label %450

; <label>:425:                                    ; preds = %31, %34, %78
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1272
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7, !dbg !749
  br label %428

; <label>:426:                                    ; preds = %418, %287
  %427 = phi i32 [ %292, %287 ], [ %420, %418 ], !dbg !1095
  call void @sdsfreesplitres(i8** nonnull %37, i32 %427) #6, !dbg !1273
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !749
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7, !dbg !749
  br label %428

; <label>:428:                                    ; preds = %426, %425
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %429 = call i8* @fgets(i8* %26, i32 2098176, %struct.__sFILE* nonnull %4) #6, !dbg !740
  %430 = icmp eq i8* %429, null, !dbg !741
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !739
  br i1 %430, label %431, label %31, !dbg !739, !llvm.loop !748

; <label>:431:                                    ; preds = %428, %25
  %432 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1274, !tbaa !788
  %433 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %432, i64 0, i32 0, !dbg !1276
  %434 = load %struct.clusterNode*, %struct.clusterNode** %433, align 8, !dbg !1276, !tbaa !923
  %435 = icmp eq %struct.clusterNode* %434, null, !dbg !1277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1278
  br i1 %435, label %451, label %436, !dbg !1278

; <label>:436:                                    ; preds = %431
  call void @zfree(i8* %26) #6, !dbg !1279
  %437 = call i32 @fclose(%struct.__sFILE* nonnull %4) #6, !dbg !1280
  %438 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1281, !tbaa !760
  %439 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %438, i64 0, i32 1, i64 0, !dbg !1281
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i8* nonnull %439) #6, !dbg !1282
  %440 = call i64 @clusterGetMaxEpoch() #10, !dbg !1283
  %441 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1285, !tbaa !788
  %442 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %441, i64 0, i32 1, !dbg !1286
  %443 = load i64, i64* %442, align 8, !dbg !1286, !tbaa !797
  %444 = icmp ugt i64 %440, %443, !dbg !1287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1288
  br i1 %444, label %445, label %453, !dbg !1288

; <label>:445:                                    ; preds = %436
  %446 = call i64 @clusterGetMaxEpoch() #10, !dbg !1289
  %447 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1291, !tbaa !788
  %448 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %447, i64 0, i32 1, !dbg !1292
  store i64 %446, i64* %448, align 8, !dbg !1293, !tbaa !797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1294
  br label %453, !dbg !1294

; <label>:449:                                    ; preds = %393, %397, %311
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7, !dbg !749
  br label %450, !dbg !1295

; <label>:450:                                    ; preds = %424, %449
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %451, !dbg !1295

; <label>:451:                                    ; preds = %450, %431
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !1295
  call void @zfree(i8* %26) #6, !dbg !1296
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1297
  %452 = call i32 @fclose(%struct.__sFILE* nonnull %4) #6, !dbg !1298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1298
  call void @exit(i32 1) #8, !dbg !1300
  unreachable

; <label>:453:                                    ; preds = %436, %445, %7, %23
  %454 = phi i32 [ -1, %23 ], [ -1, %7 ], [ 0, %445 ], [ 0, %436 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1301
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #7, !dbg !1303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1303
  ret i32 %454, !dbg !1303
}

; Function Attrs: nounwind readnone speculatable

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone
declare dso_local %struct.__sFILE* @fopen(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32* @__errno() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @serverLog(i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @strerror(i32) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @exit(i32) local_unnamed_addr #4

; Function Attrs: noredzone
declare dso_local i32 @fstat(i32, %struct.stat*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fileno(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fclose(%struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zmalloc(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @fgets(i8*, i32, %struct.__sFILE*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8** @sdssplitargs(i8*, i32*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) local_unnamed_addr #5

; Function Attrs: noredzone
declare dso_local i64 @strtoull(i8*, i8**, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsfreesplitres(i8**, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterNode* @clusterLookupNode(i8*) local_unnamed_addr #0 !dbg !825 {
  %2 = tail call i8* @sdsnewlen(i8* %0, i64 40) #6, !dbg !1305
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1307, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !1308
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !1308, !tbaa !837
  %6 = tail call %struct.dictEntry* @dictFind(%struct.dict* %5, i8* %2) #6, !dbg !1309
  tail call void @sdsfree(i8* %2) #6, !dbg !1311
  %7 = icmp eq %struct.dictEntry* %6, null, !dbg !1312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1313
  br i1 %7, label %12, label %8, !dbg !1313

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 1, i32 0, !dbg !1314
  %10 = bitcast i8** %9 to %struct.clusterNode**, !dbg !1314
  %11 = load %struct.clusterNode*, %struct.clusterNode** %10, align 8, !dbg !1314, !tbaa !745
  br label %12, !dbg !1315

; <label>:12:                                     ; preds = %1, %8
  %13 = phi %struct.clusterNode* [ %11, %8 ], [ null, %1 ], !dbg !1316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1318
  ret %struct.clusterNode* %13, !dbg !1318
}

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterNode* @createClusterNode(i8*, i32) local_unnamed_addr #0 !dbg !1136 {
  %3 = tail call i8* @zmalloc(i64 2264) #6, !dbg !1321
  %4 = bitcast i8* %3 to %struct.clusterNode*, !dbg !1321
  %5 = icmp eq i8* %0, null, !dbg !1323
  %6 = getelementptr inbounds i8, i8* %3, i64 8, !dbg !1324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1325
  br i1 %5, label %9, label %7, !dbg !1325

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @memcpy(i8* nonnull %6, i8* nonnull %0, i64 40) #6, !dbg !1326
  br label %10, !dbg !1326

; <label>:9:                                      ; preds = %2
  tail call void @getRandomHexChars(i8* nonnull %6, i64 40) #6, !dbg !1327
  br label %10

; <label>:10:                                     ; preds = %9, %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %11 = tail call i64 @mstime() #6, !dbg !1328
  %12 = bitcast i8* %3 to i64*, !dbg !1329
  store i64 %11, i64* %12, align 8, !dbg !1330, !tbaa !1155
  %13 = getelementptr inbounds i8, i8* %3, i64 56, !dbg !1331
  %14 = bitcast i8* %13 to i64*, !dbg !1331
  store i64 0, i64* %14, align 8, !dbg !1332, !tbaa !1093
  %15 = getelementptr inbounds i8, i8* %3, i64 48, !dbg !1333
  %16 = bitcast i8* %15 to i32*, !dbg !1333
  store i32 %1, i32* %16, align 8, !dbg !1334, !tbaa !927
  %17 = getelementptr inbounds i8, i8* %3, i64 64, !dbg !1335
  %18 = tail call i8* @memset(i8* nonnull %17, i32 0, i64 2048) #6, !dbg !1336
  %19 = getelementptr inbounds i8, i8* %3, i64 2112, !dbg !1337
  %20 = bitcast i8* %19 to i32*, !dbg !1337
  store i32 0, i32* %20, align 8, !dbg !1338, !tbaa !1164
  %21 = getelementptr inbounds i8, i8* %3, i64 2116, !dbg !1339
  %22 = bitcast i8* %21 to i32*, !dbg !1339
  store i32 0, i32* %22, align 4, !dbg !1340, !tbaa !1041
  %23 = getelementptr inbounds i8, i8* %3, i64 2120, !dbg !1341
  %24 = bitcast i8* %23 to %struct.clusterNode***, !dbg !1341
  store %struct.clusterNode** null, %struct.clusterNode*** %24, align 8, !dbg !1342, !tbaa !1044
  %25 = getelementptr inbounds i8, i8* %3, i64 2128, !dbg !1343
  %26 = bitcast i8* %25 to %struct.clusterNode**, !dbg !1343
  store %struct.clusterNode* null, %struct.clusterNode** %26, align 8, !dbg !1344, !tbaa !1025
  %27 = getelementptr inbounds i8, i8* %3, i64 2136, !dbg !1345
  %28 = bitcast i8* %27 to <2 x i64>*, !dbg !1346
  store <2 x i64> zeroinitializer, <2 x i64>* %28, align 8, !dbg !1346, !tbaa !1173
  %29 = getelementptr inbounds i8, i8* %3, i64 2152, !dbg !1347
  %30 = bitcast i8* %29 to i64*, !dbg !1347
  store i64 0, i64* %30, align 8, !dbg !1348, !tbaa !954
  %31 = getelementptr inbounds i8, i8* %3, i64 2248, !dbg !1349
  %32 = bitcast i8* %31 to %struct.clusterLink**, !dbg !1349
  store %struct.clusterLink* null, %struct.clusterLink** %32, align 8, !dbg !1350, !tbaa !1178
  %33 = getelementptr inbounds i8, i8* %3, i64 2192, !dbg !1351
  %34 = tail call i8* @memset(i8* nonnull %33, i32 0, i64 46) #6, !dbg !1352
  %35 = getelementptr inbounds i8, i8* %3, i64 2240, !dbg !1353
  %36 = bitcast i8* %35 to i32*, !dbg !1353
  store i32 0, i32* %36, align 8, !dbg !1354, !tbaa !900
  %37 = getelementptr inbounds i8, i8* %3, i64 2244, !dbg !1355
  %38 = bitcast i8* %37 to i32*, !dbg !1355
  store i32 0, i32* %38, align 4, !dbg !1356, !tbaa !907
  %39 = tail call %struct.list* @listCreate() #6, !dbg !1357
  %40 = getelementptr inbounds i8, i8* %3, i64 2256, !dbg !1358
  %41 = bitcast i8* %40 to %struct.list**, !dbg !1358
  store %struct.list* %39, %struct.list** %41, align 8, !dbg !1359, !tbaa !1188
  %42 = getelementptr inbounds i8, i8* %3, i64 2160, !dbg !1360
  %43 = bitcast i8* %42 to i64*, !dbg !1360
  store i64 0, i64* %43, align 8, !dbg !1361, !tbaa !1191
  %44 = getelementptr inbounds i8, i8* %3, i64 2176, !dbg !1362
  %45 = bitcast i8* %44 to i64*, !dbg !1362
  store i64 0, i64* %45, align 8, !dbg !1363, !tbaa !1194
  %46 = getelementptr inbounds i8, i8* %3, i64 2168, !dbg !1364
  %47 = bitcast i8* %46 to i64*, !dbg !1364
  store i64 0, i64* %47, align 8, !dbg !1365, !tbaa !1197
  %48 = getelementptr inbounds i8, i8* %3, i64 2184, !dbg !1366
  %49 = bitcast i8* %48 to i64*, !dbg !1366
  store i64 0, i64* %49, align 8, !dbg !1367, !tbaa !1200
  %50 = getelementptr inbounds %struct.list, %struct.list* %39, i64 0, i32 3, !dbg !1368
  store void (i8*)* @zfree, void (i8*)** %50, align 8, !dbg !1368, !tbaa !1202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1369
  ret %struct.clusterNode* %4, !dbg !1369
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterAddNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !856 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1371, !tbaa !788
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 4, !dbg !1372
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !1372, !tbaa !837
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !1373
  %6 = tail call i8* @sdsnewlen(i8* nonnull %5, i64 40) #6, !dbg !1374
  %7 = bitcast %struct.clusterNode* %0 to i8*, !dbg !1375
  %8 = tail call i32 @dictAdd(%struct.dict* %4, i8* %6, i8* %7) #6, !dbg !1376
  %9 = icmp ne i32 %8, 0, !dbg !1378
  %10 = sext i1 %9 to i32, !dbg !1379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1380
  ret i32 %10, !dbg !1380
}

; Function Attrs: noredzone
declare dso_local i8* @strrchr(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @atoi(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @_serverAssert(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone noreturn
declare dso_local void @_exit(i32) local_unnamed_addr #4

; Function Attrs: noredzone
declare dso_local i64 @mstime() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @_serverPanic(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeAddSlave(%struct.clusterNode* nocapture, %struct.clusterNode*) local_unnamed_addr #0 !dbg !1027 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1384
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !1385
  %4 = load i32, i32* %3, align 4, !dbg !1385, !tbaa !1041
  %5 = icmp sgt i32 %4, 0, !dbg !1386
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7, !dbg !1387
  %7 = load %struct.clusterNode**, %struct.clusterNode*** %6, align 8, !dbg !1387, !tbaa !1044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1053
  br i1 %5, label %8, label %18, !dbg !1053

; <label>:8:                                      ; preds = %2
  %9 = sext i32 %4 to i64
  br label %10, !dbg !1388

; <label>:10:                                     ; preds = %8, %15
  %11 = phi i64 [ 0, %8 ], [ %16, %15 ]
  %12 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %11, !dbg !1388
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !1388, !tbaa !760
  %14 = icmp eq %struct.clusterNode* %13, %1, !dbg !1389
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1390
  br i1 %14, label %33, label %15, !dbg !1390

; <label>:15:                                     ; preds = %10
  %16 = add nuw nsw i64 %11, 1, !dbg !1391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1392
  %17 = icmp slt i64 %16, %9, !dbg !1386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1053
  br i1 %17, label %10, label %18, !dbg !1053, !llvm.loop !1052

; <label>:18:                                     ; preds = %15, %2
  %19 = bitcast %struct.clusterNode** %7 to i8*, !dbg !1393
  %20 = add nsw i32 %4, 1, !dbg !1394
  %21 = sext i32 %20 to i64, !dbg !1395
  %22 = shl nsw i64 %21, 3, !dbg !1396
  %23 = tail call i8* @zrealloc(i8* %19, i64 %22) #6, !dbg !1397
  %24 = bitcast i8* %23 to %struct.clusterNode**, !dbg !1397
  %25 = bitcast %struct.clusterNode*** %6 to i8**, !dbg !1398
  store i8* %23, i8** %25, align 8, !dbg !1398, !tbaa !1044
  %26 = load i32, i32* %3, align 4, !dbg !1399, !tbaa !1041
  %27 = sext i32 %26 to i64, !dbg !1400
  %28 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %24, i64 %27, !dbg !1400
  store %struct.clusterNode* %1, %struct.clusterNode** %28, align 8, !dbg !1401, !tbaa !760
  %29 = add nsw i32 %26, 1, !dbg !1402
  store i32 %29, i32* %3, align 4, !dbg !1402, !tbaa !1041
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !1403
  %31 = load i32, i32* %30, align 8, !dbg !1404, !tbaa !927
  %32 = or i32 %31, 256, !dbg !1404
  store i32 %32, i32* %30, align 8, !dbg !1404, !tbaa !927
  br label %33, !dbg !1405

; <label>:33:                                     ; preds = %10, %18
  %34 = phi i32 [ 0, %18 ], [ -1, %10 ], !dbg !1387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1407
  ret i32 %34, !dbg !1407
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterAddSlot(%struct.clusterNode*, i32) local_unnamed_addr #0 !dbg !1246 {
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1410, !tbaa !788
  %4 = sext i32 %1 to i64, !dbg !1411
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 8, i64 %4, !dbg !1411
  %6 = load %struct.clusterNode*, %struct.clusterNode** %5, align 8, !dbg !1411, !tbaa !760
  %7 = icmp eq %struct.clusterNode* %6, null, !dbg !1411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1412
  br i1 %7, label %8, label %12, !dbg !1412

; <label>:8:                                      ; preds = %2
  %9 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %0, i32 %1) #10, !dbg !1413
  %10 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1414, !tbaa !788
  %11 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %10, i64 0, i32 8, i64 %4, !dbg !1415
  store %struct.clusterNode* %0, %struct.clusterNode** %11, align 8, !dbg !1416, !tbaa !760
  br label %12, !dbg !1417

; <label>:12:                                     ; preds = %2, %8
  %13 = phi i32 [ 0, %8 ], [ -1, %2 ], !dbg !1418
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1420
  ret i32 %13, !dbg !1420
}

; Function Attrs: noredzone
declare dso_local void @zfree(i8*) #3

; Function Attrs: noredzone nounwind
define dso_local i64 @clusterGetMaxEpoch() local_unnamed_addr #0 !dbg !1421 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1431, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 4, !dbg !1432
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !1432, !tbaa !837
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #6, !dbg !1433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1435
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #6, !dbg !1436
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !1438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1435
  br i1 %6, label %21, label %7, !dbg !1435

; <label>:7:                                      ; preds = %0, %17
  %8 = phi %struct.dictEntry* [ %19, %17 ], [ %5, %0 ]
  %9 = phi i64 [ %18, %17 ], [ 0, %0 ]
  %10 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, i32 0, !dbg !1439
  %11 = bitcast i8** %10 to %struct.clusterNode**, !dbg !1439
  %12 = load %struct.clusterNode*, %struct.clusterNode** %11, align 8, !dbg !1439, !tbaa !745
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 3, !dbg !1441
  %14 = load i64, i64* %13, align 8, !dbg !1441, !tbaa !1093
  %15 = icmp ugt i64 %14, %9, !dbg !1443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1444
  br i1 %15, label %16, label %17, !dbg !1444

; <label>:16:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1445
  br label %17, !dbg !1445

; <label>:17:                                     ; preds = %16, %7
  %18 = phi i64 [ %14, %16 ], [ %9, %7 ], !dbg !1446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1435
  %19 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #6, !dbg !1436
  %20 = icmp eq %struct.dictEntry* %19, null, !dbg !1438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1435
  br i1 %20, label %21, label %7, !dbg !1435, !llvm.loop !1447

; <label>:21:                                     ; preds = %17, %0
  %22 = phi i64 [ 0, %0 ], [ %18, %17 ], !dbg !1449
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #6, !dbg !1450
  %23 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1451, !tbaa !788
  %24 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %23, i64 0, i32 1, !dbg !1453
  %25 = load i64, i64* %24, align 8, !dbg !1453, !tbaa !797
  %26 = icmp ult i64 %22, %25, !dbg !1454
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1455
  br i1 %26, label %27, label %28, !dbg !1455

; <label>:27:                                     ; preds = %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1456
  br label %28, !dbg !1456

; <label>:28:                                     ; preds = %27, %21
  %29 = phi i64 [ %25, %27 ], [ %22, %21 ], !dbg !1446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1457
  ret i64 %29, !dbg !1457
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterSaveConfig(i32) local_unnamed_addr #0 !dbg !1458 {
  %2 = alloca %struct.stat, align 8
  %3 = bitcast %struct.stat* %2 to i8*, !dbg !1471
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %3) #7, !dbg !1471
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1472, !tbaa !788
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 22, !dbg !1473
  %6 = load i32, i32* %5, align 8, !dbg !1474, !tbaa !1475
  %7 = and i32 %6, -5, !dbg !1474
  store i32 %7, i32* %5, align 8, !dbg !1474, !tbaa !1475
  %8 = tail call i8* @clusterGenNodesDescription(i32 32) #10, !dbg !1476
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1478, !tbaa !788
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 1, !dbg !1479
  %11 = load i64, i64* %10, align 8, !dbg !1479, !tbaa !797
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 21, !dbg !1480
  %13 = load i64, i64* %12, align 8, !dbg !1480, !tbaa !811
  %14 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i64 %11, i64 %13) #6, !dbg !1481
  %15 = getelementptr inbounds i8, i8* %14, i64 -1, !dbg !1492
  %16 = load i8, i8* %15, align 1, !dbg !1492, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1494
  %17 = trunc i8 %16 to i3, !dbg !1494
  switch i3 %17, label %39 [
    i3 0, label %18
    i3 1, label %21
    i3 2, label %25
    i3 3, label %30
    i3 -4, label %35
  ], !dbg !1494

; <label>:18:                                     ; preds = %1
  %19 = lshr i8 %16, 3, !dbg !1495
  %20 = zext i8 %19 to i64, !dbg !1495
  br label %39, !dbg !1497

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds i8, i8* %14, i64 -3, !dbg !1498
  %23 = load i8, i8* %22, align 1, !dbg !1499, !tbaa !745
  %24 = zext i8 %23 to i64, !dbg !1498
  br label %39, !dbg !1500

; <label>:25:                                     ; preds = %1
  %26 = getelementptr inbounds i8, i8* %14, i64 -5, !dbg !1501
  %27 = bitcast i8* %26 to i16*, !dbg !1502
  %28 = load i16, i16* %27, align 1, !dbg !1502, !tbaa !1503
  %29 = zext i16 %28 to i64, !dbg !1501
  br label %39, !dbg !1504

; <label>:30:                                     ; preds = %1
  %31 = getelementptr inbounds i8, i8* %14, i64 -9, !dbg !1505
  %32 = bitcast i8* %31 to i32*, !dbg !1506
  %33 = load i32, i32* %32, align 1, !dbg !1506, !tbaa !708
  %34 = zext i32 %33 to i64, !dbg !1505
  br label %39, !dbg !1507

; <label>:35:                                     ; preds = %1
  %36 = getelementptr inbounds i8, i8* %14, i64 -17, !dbg !1508
  %37 = bitcast i8* %36 to i64*, !dbg !1509
  %38 = load i64, i64* %37, align 1, !dbg !1509, !tbaa !1510
  br label %39, !dbg !1511

; <label>:39:                                     ; preds = %1, %18, %21, %25, %30, %35
  %40 = phi i64 [ %38, %35 ], [ %34, %30 ], [ %29, %25 ], [ %24, %21 ], [ %20, %18 ], [ 0, %1 ], !dbg !1512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1514
  %41 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !1516, !tbaa !1518
  %42 = tail call i32 (i8*, i32, ...) @open(i8* %41, i32 513, i32 420) #6, !dbg !1519
  %43 = icmp eq i32 %42, -1, !dbg !1521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1522
  br i1 %43, label %155, label %44, !dbg !1522

; <label>:44:                                     ; preds = %39
  %45 = call i32 @fstat(i32 %42, %struct.stat* nonnull %2) #6, !dbg !1524
  %46 = icmp eq i32 %45, -1, !dbg !1526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1527
  br i1 %46, label %58, label %47, !dbg !1527

; <label>:47:                                     ; preds = %44
  %48 = getelementptr inbounds %struct.stat, %struct.stat* %2, i64 0, i32 7, !dbg !1528
  %49 = load i64, i64* %48, align 8, !dbg !1528, !tbaa !726
  %50 = icmp sgt i64 %49, %40, !dbg !1531
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1532
  br i1 %50, label %51, label %58, !dbg !1532

; <label>:51:                                     ; preds = %47
  %52 = call i8* @sdsgrowzero(i8* %14, i64 %49) #6, !dbg !1533
  %53 = getelementptr inbounds i8, i8* %52, i64 %40, !dbg !1535
  %54 = load i64, i64* %48, align 8, !dbg !1536, !tbaa !726
  %55 = sub i64 %54, %40, !dbg !1537
  %56 = call i8* @memset(i8* %53, i32 10, i64 %55) #6, !dbg !1538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1539
  %57 = getelementptr inbounds i8, i8* %52, i64 -1, !dbg !1540
  br label %58, !dbg !1539

; <label>:58:                                     ; preds = %44, %47, %51
  %59 = phi i8* [ %15, %44 ], [ %15, %47 ], [ %57, %51 ], !dbg !1540
  %60 = phi i8* [ %14, %44 ], [ %14, %47 ], [ %52, %51 ], !dbg !1513
  %61 = load i8, i8* %59, align 1, !dbg !1540, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1545
  %62 = trunc i8 %61 to i3, !dbg !1545
  switch i3 %62, label %84 [
    i3 0, label %63
    i3 1, label %66
    i3 2, label %70
    i3 3, label %75
    i3 -4, label %80
  ], !dbg !1545

; <label>:63:                                     ; preds = %58
  %64 = lshr i8 %61, 3, !dbg !1546
  %65 = zext i8 %64 to i64, !dbg !1546
  br label %84, !dbg !1547

; <label>:66:                                     ; preds = %58
  %67 = getelementptr inbounds i8, i8* %60, i64 -3, !dbg !1548
  %68 = load i8, i8* %67, align 1, !dbg !1549, !tbaa !745
  %69 = zext i8 %68 to i64, !dbg !1548
  br label %84, !dbg !1550

; <label>:70:                                     ; preds = %58
  %71 = getelementptr inbounds i8, i8* %60, i64 -5, !dbg !1551
  %72 = bitcast i8* %71 to i16*, !dbg !1552
  %73 = load i16, i16* %72, align 1, !dbg !1552, !tbaa !1503
  %74 = zext i16 %73 to i64, !dbg !1551
  br label %84, !dbg !1553

; <label>:75:                                     ; preds = %58
  %76 = getelementptr inbounds i8, i8* %60, i64 -9, !dbg !1554
  %77 = bitcast i8* %76 to i32*, !dbg !1555
  %78 = load i32, i32* %77, align 1, !dbg !1555, !tbaa !708
  %79 = zext i32 %78 to i64, !dbg !1554
  br label %84, !dbg !1556

; <label>:80:                                     ; preds = %58
  %81 = getelementptr inbounds i8, i8* %60, i64 -17, !dbg !1557
  %82 = bitcast i8* %81 to i64*, !dbg !1558
  %83 = load i64, i64* %82, align 1, !dbg !1558, !tbaa !1510
  br label %84, !dbg !1559

; <label>:84:                                     ; preds = %58, %63, %66, %70, %75, %80
  %85 = phi i64 [ %83, %80 ], [ %79, %75 ], [ %74, %70 ], [ %69, %66 ], [ %65, %63 ], [ 0, %58 ], !dbg !1560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1562
  %86 = call i64 @write(i32 %42, i8* %60, i64 %85) #6, !dbg !1563
  %87 = load i8, i8* %59, align 1, !dbg !1566, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1568
  %88 = trunc i8 %87 to i3, !dbg !1568
  switch i3 %88, label %110 [
    i3 0, label %89
    i3 1, label %92
    i3 2, label %96
    i3 3, label %101
    i3 -4, label %106
  ], !dbg !1568

; <label>:89:                                     ; preds = %84
  %90 = lshr i8 %87, 3, !dbg !1569
  %91 = zext i8 %90 to i64, !dbg !1569
  br label %110, !dbg !1570

; <label>:92:                                     ; preds = %84
  %93 = getelementptr inbounds i8, i8* %60, i64 -3, !dbg !1571
  %94 = load i8, i8* %93, align 1, !dbg !1572, !tbaa !745
  %95 = zext i8 %94 to i64, !dbg !1571
  br label %110, !dbg !1573

; <label>:96:                                     ; preds = %84
  %97 = getelementptr inbounds i8, i8* %60, i64 -5, !dbg !1574
  %98 = bitcast i8* %97 to i16*, !dbg !1575
  %99 = load i16, i16* %98, align 1, !dbg !1575, !tbaa !1503
  %100 = zext i16 %99 to i64, !dbg !1574
  br label %110, !dbg !1576

; <label>:101:                                    ; preds = %84
  %102 = getelementptr inbounds i8, i8* %60, i64 -9, !dbg !1577
  %103 = bitcast i8* %102 to i32*, !dbg !1578
  %104 = load i32, i32* %103, align 1, !dbg !1578, !tbaa !708
  %105 = zext i32 %104 to i64, !dbg !1577
  br label %110, !dbg !1579

; <label>:106:                                    ; preds = %84
  %107 = getelementptr inbounds i8, i8* %60, i64 -17, !dbg !1580
  %108 = bitcast i8* %107 to i64*, !dbg !1581
  %109 = load i64, i64* %108, align 1, !dbg !1581, !tbaa !1510
  br label %110, !dbg !1582

; <label>:110:                                    ; preds = %84, %89, %92, %96, %101, %106
  %111 = phi i64 [ %109, %106 ], [ %105, %101 ], [ %100, %96 ], [ %95, %92 ], [ %91, %89 ], [ 0, %84 ], !dbg !1583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1584
  %112 = icmp eq i64 %86, %111, !dbg !1585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1586
  br i1 %112, label %113, label %153, !dbg !1586

; <label>:113:                                    ; preds = %110
  %114 = icmp eq i32 %0, 0, !dbg !1587
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1589
  br i1 %114, label %122, label %115, !dbg !1589

; <label>:115:                                    ; preds = %113
  %116 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1590, !tbaa !788
  %117 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 22, !dbg !1592
  %118 = load i32, i32* %117, align 8, !dbg !1593, !tbaa !1475
  %119 = and i32 %118, -9, !dbg !1593
  store i32 %119, i32* %117, align 8, !dbg !1593, !tbaa !1475
  %120 = call i32 @fsync(i32 %42) #6, !dbg !1594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1595
  %121 = load i8, i8* %59, align 1, !dbg !1596, !tbaa !745
  br label %122, !dbg !1595

; <label>:122:                                    ; preds = %113, %115
  %123 = phi i8 [ %87, %113 ], [ %121, %115 ], !dbg !1596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1601
  %124 = trunc i8 %123 to i3, !dbg !1601
  switch i3 %124, label %146 [
    i3 0, label %125
    i3 1, label %128
    i3 2, label %132
    i3 3, label %137
    i3 -4, label %142
  ], !dbg !1601

; <label>:125:                                    ; preds = %122
  %126 = lshr i8 %123, 3, !dbg !1602
  %127 = zext i8 %126 to i64, !dbg !1602
  br label %146, !dbg !1603

; <label>:128:                                    ; preds = %122
  %129 = getelementptr inbounds i8, i8* %60, i64 -3, !dbg !1604
  %130 = load i8, i8* %129, align 1, !dbg !1605, !tbaa !745
  %131 = zext i8 %130 to i64, !dbg !1604
  br label %146, !dbg !1606

; <label>:132:                                    ; preds = %122
  %133 = getelementptr inbounds i8, i8* %60, i64 -5, !dbg !1607
  %134 = bitcast i8* %133 to i16*, !dbg !1608
  %135 = load i16, i16* %134, align 1, !dbg !1608, !tbaa !1503
  %136 = zext i16 %135 to i64, !dbg !1607
  br label %146, !dbg !1609

; <label>:137:                                    ; preds = %122
  %138 = getelementptr inbounds i8, i8* %60, i64 -9, !dbg !1610
  %139 = bitcast i8* %138 to i32*, !dbg !1611
  %140 = load i32, i32* %139, align 1, !dbg !1611, !tbaa !708
  %141 = zext i32 %140 to i64, !dbg !1610
  br label %146, !dbg !1612

; <label>:142:                                    ; preds = %122
  %143 = getelementptr inbounds i8, i8* %60, i64 -17, !dbg !1613
  %144 = bitcast i8* %143 to i64*, !dbg !1614
  %145 = load i64, i64* %144, align 1, !dbg !1614, !tbaa !1510
  br label %146, !dbg !1615

; <label>:146:                                    ; preds = %122, %125, %128, %132, %137, %142
  %147 = phi i64 [ %145, %142 ], [ %141, %137 ], [ %136, %132 ], [ %131, %128 ], [ %127, %125 ], [ 0, %122 ], !dbg !1616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1618
  %148 = icmp eq i64 %40, %147, !dbg !1619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1620
  br i1 %148, label %151, label %149, !dbg !1620

; <label>:149:                                    ; preds = %146
  %150 = call i32 @ftruncate(i32 %42, i64 %40) #6, !dbg !1621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1622
  br label %151, !dbg !1622

; <label>:151:                                    ; preds = %146, %149
  %152 = call i32 @close(i32 %42) #6, !dbg !1623
  call void @sdsfree(i8* nonnull %60) #6, !dbg !1624
  br label %157, !dbg !1625

; <label>:153:                                    ; preds = %110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1626
  %154 = call i32 @close(i32 %42) #6, !dbg !1627
  br label %155, !dbg !1627

; <label>:155:                                    ; preds = %39, %153
  %156 = phi i8* [ %60, %153 ], [ %14, %39 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1629
  call void @sdsfree(i8* %156) #6, !dbg !1630
  br label %157, !dbg !1631

; <label>:157:                                    ; preds = %155, %151
  %158 = phi i32 [ -1, %155 ], [ 0, %151 ], !dbg !1513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1513
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %3) #7, !dbg !1632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1632
  ret i32 %158, !dbg !1632
}

; Function Attrs: noredzone nounwind
define dso_local i8* @clusterGenNodesDescription(i32) local_unnamed_addr #0 !dbg !1633 {
  %2 = tail call i8* @sdsempty() #6, !dbg !1645
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1647, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !1648
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !1648, !tbaa !837
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #6, !dbg !1649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1651
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #6, !dbg !1652
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !1654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1651
  br i1 %8, label %27, label %9, !dbg !1651

; <label>:9:                                      ; preds = %1, %23
  %10 = phi %struct.dictEntry* [ %25, %23 ], [ %7, %1 ]
  %11 = phi i8* [ %24, %23 ], [ %2, %1 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !1655
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !1655
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !1655, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !1657
  %16 = load i32, i32* %15, align 8, !dbg !1657, !tbaa !927
  %17 = and i32 %16, %0, !dbg !1659
  %18 = icmp eq i32 %17, 0, !dbg !1659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1660
  br i1 %18, label %19, label %23, !dbg !1660, !llvm.loop !1661

; <label>:19:                                     ; preds = %9
  %20 = tail call i8* @clusterGenNodeDescription(%struct.clusterNode* %14) #10, !dbg !1663
  %21 = tail call i8* @sdscatsds(i8* %11, i8* %20) #6, !dbg !1665
  tail call void @sdsfree(i8* %20) #6, !dbg !1666
  %22 = tail call i8* @sdscatlen(i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.117, i64 0, i64 0), i64 1) #6, !dbg !1667
  br label %23, !dbg !1662

; <label>:23:                                     ; preds = %9, %19
  %24 = phi i8* [ %22, %19 ], [ %11, %9 ], !dbg !1668
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1669
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %25 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #6, !dbg !1652
  %26 = icmp eq %struct.dictEntry* %25, null, !dbg !1654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1651
  br i1 %26, label %27, label %9, !dbg !1651

; <label>:27:                                     ; preds = %23, %1
  %28 = phi i8* [ %2, %1 ], [ %24, %23 ], !dbg !1646
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #6, !dbg !1670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1671
  ret i8* %28, !dbg !1671
}

; Function Attrs: noredzone
declare dso_local i8* @sdscatprintf(i8*, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @open(i8*, i32, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsgrowzero(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @write(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @fsync(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @ftruncate(i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @close(i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsfree(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSaveConfigOrDie(i32) local_unnamed_addr #0 !dbg !1672 {
  %2 = tail call i32 @clusterSaveConfig(i32 %0) #10, !dbg !1676
  %3 = icmp eq i32 %2, -1, !dbg !1678
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1679
  br i1 %3, label %4, label %5, !dbg !1679

; <label>:4:                                      ; preds = %1
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !1680
  tail call void @exit(i32 1) #8, !dbg !1682
  unreachable

; <label>:5:                                      ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1683
  ret void, !dbg !1683
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterLockConfig(i8*) local_unnamed_addr #0 !dbg !1684 {
  %2 = tail call i32 (i8*, i32, ...) @open(i8* %0, i32 513, i32 420) #6, !dbg !1689
  %3 = icmp eq i32 %2, -1, !dbg !1691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1693
  br i1 %3, label %4, label %8, !dbg !1693

; <label>:4:                                      ; preds = %1
  %5 = tail call i32* @__errno() #6, !dbg !1694
  %6 = load i32, i32* %5, align 4, !dbg !1694, !tbaa !708
  %7 = tail call i8* @strerror(i32 %6) #6, !dbg !1696
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0), i8* %0, i8* %7) #6, !dbg !1697
  br label %22, !dbg !1698

; <label>:8:                                      ; preds = %1
  %9 = tail call i32 @flock(i32 %2, i32 6) #6, !dbg !1699
  %10 = icmp eq i32 %9, -1, !dbg !1701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1702
  br i1 %10, label %11, label %22, !dbg !1702

; <label>:11:                                     ; preds = %8
  %12 = tail call i32* @__errno() #6, !dbg !1703
  %13 = load i32, i32* %12, align 4, !dbg !1703, !tbaa !708
  %14 = icmp eq i32 %13, 11, !dbg !1706
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1707
  br i1 %14, label %15, label %16, !dbg !1707

; <label>:15:                                     ; preds = %11
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.24, i64 0, i64 0), i8* %0) #6, !dbg !1708
  br label %20, !dbg !1710

; <label>:16:                                     ; preds = %11
  %17 = tail call i32* @__errno() #6, !dbg !1711
  %18 = load i32, i32* %17, align 4, !dbg !1711, !tbaa !708
  %19 = tail call i8* @strerror(i32 %18) #6, !dbg !1713
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* %0, i8* %19) #6, !dbg !1714
  br label %20

; <label>:20:                                     ; preds = %16, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %21 = tail call i32 @close(i32 %2) #6, !dbg !1715
  br label %22, !dbg !1716

; <label>:22:                                     ; preds = %8, %20, %4
  %23 = phi i32 [ -1, %4 ], [ -1, %20 ], [ 0, %8 ], !dbg !1717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1718
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1719
  ret i32 %23, !dbg !1719
}

; Function Attrs: noredzone
declare dso_local i32 @flock(i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterUpdateMyselfFlags() local_unnamed_addr #0 !dbg !1720 {
  %1 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1724, !tbaa !760
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 2, !dbg !1725
  %3 = load i32, i32* %2, align 8, !dbg !1725, !tbaa !927
  %4 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !1727, !tbaa !1728
  %5 = icmp eq i32 %4, 0, !dbg !1729
  %6 = select i1 %5, i32 0, i32 512, !dbg !1729
  %7 = and i32 %3, -513, !dbg !1731
  %8 = or i32 %6, %7, !dbg !1732
  store i32 %8, i32* %2, align 8, !dbg !1732, !tbaa !927
  %9 = icmp eq i32 %8, %3, !dbg !1733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1735
  br i1 %9, label %15, label %10, !dbg !1735

; <label>:10:                                     ; preds = %0
  %11 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1742, !tbaa !788
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 22, !dbg !1743
  %13 = load i32, i32* %12, align 8, !dbg !1744, !tbaa !1475
  %14 = or i32 %13, 6, !dbg !1744
  store i32 %14, i32* %12, align 8, !dbg !1744, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1746
  br label %15, !dbg !1746

; <label>:15:                                     ; preds = %0, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1747
  ret void, !dbg !1747
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterDoBeforeSleep(i32) local_unnamed_addr #0 !dbg !1737 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1749, !tbaa !788
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 22, !dbg !1750
  %4 = load i32, i32* %3, align 8, !dbg !1751, !tbaa !1475
  %5 = or i32 %4, %0, !dbg !1751
  store i32 %5, i32* %3, align 8, !dbg !1751, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1752
  ret void, !dbg !1752
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterInit() local_unnamed_addr #0 !dbg !1753 {
  %1 = tail call i8* @zmalloc(i64 524592) #6, !dbg !1762
  store i8* %1, i8** bitcast (%struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261) to i8**), align 8, !dbg !1763, !tbaa !788
  %2 = bitcast i8* %1 to %struct.clusterNode**, !dbg !1764
  store %struct.clusterNode* null, %struct.clusterNode** %2, align 8, !dbg !1765, !tbaa !923
  %3 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !1766
  %4 = bitcast i8* %3 to i64*, !dbg !1766
  store i64 0, i64* %4, align 8, !dbg !1767, !tbaa !797
  %5 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !1768
  %6 = bitcast i8* %5 to i32*, !dbg !1768
  store i32 1, i32* %6, align 8, !dbg !1769, !tbaa !1770
  %7 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !1771
  %8 = bitcast i8* %7 to i32*, !dbg !1771
  store i32 1, i32* %8, align 4, !dbg !1772, !tbaa !1773
  %9 = getelementptr inbounds i8, i8* %1, i64 524416, !dbg !1774
  %10 = bitcast i8* %9 to i32*, !dbg !1774
  store i32 0, i32* %10, align 8, !dbg !1775, !tbaa !1475
  %11 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @clusterNodesDictType, i8* null) #6, !dbg !1776
  %12 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1777, !tbaa !788
  %13 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %12, i64 0, i32 4, !dbg !1778
  store %struct.dict* %11, %struct.dict** %13, align 8, !dbg !1779, !tbaa !837
  %14 = tail call %struct.dict* @dictCreate(%struct.dictType* nonnull @clusterNodesBlackListDictType, i8* null) #6, !dbg !1780
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1781, !tbaa !788
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 5, !dbg !1782
  store %struct.dict* %14, %struct.dict** %16, align 8, !dbg !1783, !tbaa !1784
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 11, !dbg !1785
  store i64 0, i64* %17, align 8, !dbg !1786, !tbaa !1787
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 12, !dbg !1788
  store i32 0, i32* %18, align 8, !dbg !1789, !tbaa !1790
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 14, !dbg !1791
  store i32 0, i32* %19, align 8, !dbg !1792, !tbaa !1793
  %20 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 15, !dbg !1794
  store i64 0, i64* %20, align 8, !dbg !1795, !tbaa !1796
  %21 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 16, !dbg !1797
  store i32 0, i32* %21, align 8, !dbg !1798, !tbaa !1799
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 21, !dbg !1800
  store i64 0, i64* %22, align 8, !dbg !1801, !tbaa !811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %23 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 0, !dbg !1805
  store i64 0, i64* %23, align 8, !dbg !1808, !tbaa !1173
  %24 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 0, !dbg !1809
  store i64 0, i64* %24, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %25 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 1, !dbg !1805
  store i64 0, i64* %25, align 8, !dbg !1808, !tbaa !1173
  %26 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 1, !dbg !1809
  store i64 0, i64* %26, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %27 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 2, !dbg !1805
  store i64 0, i64* %27, align 8, !dbg !1808, !tbaa !1173
  %28 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 2, !dbg !1809
  store i64 0, i64* %28, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %29 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 3, !dbg !1805
  store i64 0, i64* %29, align 8, !dbg !1808, !tbaa !1173
  %30 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 3, !dbg !1809
  store i64 0, i64* %30, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %31 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 4, !dbg !1805
  store i64 0, i64* %31, align 8, !dbg !1808, !tbaa !1173
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 4, !dbg !1809
  store i64 0, i64* %32, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %33 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 5, !dbg !1805
  store i64 0, i64* %33, align 8, !dbg !1808, !tbaa !1173
  %34 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 5, !dbg !1809
  store i64 0, i64* %34, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %35 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 6, !dbg !1805
  store i64 0, i64* %35, align 8, !dbg !1808, !tbaa !1173
  %36 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 6, !dbg !1809
  store i64 0, i64* %36, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %37 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 7, !dbg !1805
  store i64 0, i64* %37, align 8, !dbg !1808, !tbaa !1173
  %38 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 7, !dbg !1809
  store i64 0, i64* %38, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %39 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 8, !dbg !1805
  store i64 0, i64* %39, align 8, !dbg !1808, !tbaa !1173
  %40 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 8, !dbg !1809
  store i64 0, i64* %40, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %41 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 23, i64 9, !dbg !1805
  store i64 0, i64* %41, align 8, !dbg !1808, !tbaa !1173
  %42 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 9, !dbg !1809
  store i64 0, i64* %42, align 8, !dbg !1810, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1811
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1804
  %43 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 25, !dbg !1812
  store i64 0, i64* %43, align 8, !dbg !1813, !tbaa !1814
  %44 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 8, i64 0, !dbg !1815
  %45 = bitcast %struct.clusterNode** %44 to i8*, !dbg !1815
  %46 = tail call i8* @memset(i8* nonnull %45, i32 0, i64 131072) #6, !dbg !1816
  %47 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1817, !tbaa !788
  %48 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %47, i64 0, i32 6, i64 0, !dbg !1820
  %49 = bitcast %struct.clusterNode** %48 to i8*, !dbg !1820
  %50 = tail call i8* @memset(i8* nonnull %49, i32 0, i64 131072) #6, !dbg !1821
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1822, !tbaa !788
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 7, i64 0, !dbg !1823
  %53 = bitcast %struct.clusterNode** %52 to i8*, !dbg !1823
  %54 = tail call i8* @memset(i8* nonnull %53, i32 0, i64 131072) #6, !dbg !1824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1825
  %55 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !1826, !tbaa !1518
  %56 = tail call i32 @clusterLockConfig(i8* %55) #10, !dbg !1828
  %57 = icmp eq i32 %56, -1, !dbg !1829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1830
  br i1 %57, label %58, label %59, !dbg !1830

; <label>:58:                                     ; preds = %0
  tail call void @exit(i32 1) #8, !dbg !1831
  unreachable

; <label>:59:                                     ; preds = %0
  %60 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 260), align 8, !dbg !1832, !tbaa !1518
  %61 = tail call i32 @clusterLoadConfig(i8* %60) #10, !dbg !1834
  %62 = icmp eq i32 %61, -1, !dbg !1835
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1836
  br i1 %62, label %63, label %119, !dbg !1836

; <label>:63:                                     ; preds = %59
  %64 = tail call i8* @zmalloc(i64 2264) #6, !dbg !1841
  %65 = getelementptr inbounds i8, i8* %64, i64 8, !dbg !1843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1844
  tail call void @getRandomHexChars(i8* nonnull %65, i64 40) #6, !dbg !1845
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %66 = tail call i64 @mstime() #6, !dbg !1846
  %67 = bitcast i8* %64 to i64*, !dbg !1847
  store i64 %66, i64* %67, align 8, !dbg !1848, !tbaa !1155
  %68 = getelementptr inbounds i8, i8* %64, i64 56, !dbg !1849
  %69 = bitcast i8* %68 to i64*, !dbg !1849
  store i64 0, i64* %69, align 8, !dbg !1850, !tbaa !1093
  %70 = getelementptr inbounds i8, i8* %64, i64 48, !dbg !1851
  %71 = bitcast i8* %70 to i32*, !dbg !1851
  store i32 17, i32* %71, align 8, !dbg !1852, !tbaa !927
  %72 = getelementptr inbounds i8, i8* %64, i64 64, !dbg !1853
  %73 = tail call i8* @memset(i8* nonnull %72, i32 0, i64 2048) #6, !dbg !1854
  %74 = getelementptr inbounds i8, i8* %64, i64 2112, !dbg !1855
  %75 = bitcast i8* %74 to i32*, !dbg !1855
  store i32 0, i32* %75, align 8, !dbg !1856, !tbaa !1164
  %76 = getelementptr inbounds i8, i8* %64, i64 2116, !dbg !1857
  %77 = bitcast i8* %76 to i32*, !dbg !1857
  store i32 0, i32* %77, align 4, !dbg !1858, !tbaa !1041
  %78 = getelementptr inbounds i8, i8* %64, i64 2120, !dbg !1859
  %79 = bitcast i8* %78 to %struct.clusterNode***, !dbg !1859
  store %struct.clusterNode** null, %struct.clusterNode*** %79, align 8, !dbg !1860, !tbaa !1044
  %80 = getelementptr inbounds i8, i8* %64, i64 2128, !dbg !1861
  %81 = bitcast i8* %80 to %struct.clusterNode**, !dbg !1861
  store %struct.clusterNode* null, %struct.clusterNode** %81, align 8, !dbg !1862, !tbaa !1025
  %82 = getelementptr inbounds i8, i8* %64, i64 2136, !dbg !1863
  %83 = bitcast i8* %82 to <2 x i64>*, !dbg !1864
  store <2 x i64> zeroinitializer, <2 x i64>* %83, align 8, !dbg !1864, !tbaa !1173
  %84 = getelementptr inbounds i8, i8* %64, i64 2152, !dbg !1865
  %85 = bitcast i8* %84 to i64*, !dbg !1865
  store i64 0, i64* %85, align 8, !dbg !1866, !tbaa !954
  %86 = getelementptr inbounds i8, i8* %64, i64 2248, !dbg !1867
  %87 = bitcast i8* %86 to %struct.clusterLink**, !dbg !1867
  store %struct.clusterLink* null, %struct.clusterLink** %87, align 8, !dbg !1868, !tbaa !1178
  %88 = getelementptr inbounds i8, i8* %64, i64 2192, !dbg !1869
  %89 = tail call i8* @memset(i8* nonnull %88, i32 0, i64 46) #6, !dbg !1870
  %90 = getelementptr inbounds i8, i8* %64, i64 2240, !dbg !1871
  %91 = bitcast i8* %90 to i32*, !dbg !1871
  store i32 0, i32* %91, align 8, !dbg !1872, !tbaa !900
  %92 = getelementptr inbounds i8, i8* %64, i64 2244, !dbg !1873
  %93 = bitcast i8* %92 to i32*, !dbg !1873
  store i32 0, i32* %93, align 4, !dbg !1874, !tbaa !907
  %94 = tail call %struct.list* @listCreate() #6, !dbg !1875
  %95 = getelementptr inbounds i8, i8* %64, i64 2256, !dbg !1876
  %96 = bitcast i8* %95 to %struct.list**, !dbg !1876
  store %struct.list* %94, %struct.list** %96, align 8, !dbg !1877, !tbaa !1188
  %97 = getelementptr inbounds i8, i8* %64, i64 2160, !dbg !1878
  %98 = bitcast i8* %97 to i64*, !dbg !1878
  store i64 0, i64* %98, align 8, !dbg !1879, !tbaa !1191
  %99 = getelementptr inbounds i8, i8* %64, i64 2176, !dbg !1880
  %100 = bitcast i8* %99 to i64*, !dbg !1880
  store i64 0, i64* %100, align 8, !dbg !1881, !tbaa !1194
  %101 = getelementptr inbounds i8, i8* %64, i64 2168, !dbg !1882
  %102 = bitcast i8* %101 to i64*, !dbg !1882
  store i64 0, i64* %102, align 8, !dbg !1883, !tbaa !1197
  %103 = getelementptr inbounds i8, i8* %64, i64 2184, !dbg !1884
  %104 = bitcast i8* %103 to i64*, !dbg !1884
  store i64 0, i64* %104, align 8, !dbg !1885, !tbaa !1200
  %105 = getelementptr inbounds %struct.list, %struct.list* %94, i64 0, i32 3, !dbg !1886
  store void (i8*)* @zfree, void (i8*)** %105, align 8, !dbg !1886, !tbaa !1202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1887
  %106 = load i8**, i8*** bitcast (%struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261) to i8***), align 8, !dbg !1888, !tbaa !788
  store i8* %64, i8** %106, align 8, !dbg !1889, !tbaa !923
  store i8* %64, i8** bitcast (%struct.clusterNode** @myself to i8**), align 8, !dbg !1890, !tbaa !760
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %65) #6, !dbg !1891
  %107 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1892, !tbaa !760
  %108 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1895, !tbaa !788
  %109 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %108, i64 0, i32 4, !dbg !1896
  %110 = load %struct.dict*, %struct.dict** %109, align 8, !dbg !1896, !tbaa !837
  %111 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %107, i64 0, i32 1, i64 0, !dbg !1897
  %112 = tail call i8* @sdsnewlen(i8* nonnull %111, i64 40) #6, !dbg !1898
  %113 = bitcast %struct.clusterNode* %107 to i8*, !dbg !1899
  %114 = tail call i32 @dictAdd(%struct.dict* %110, i8* %112, i8* %113) #6, !dbg !1900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1903
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1904
  %115 = tail call i32 @clusterSaveConfig(i32 1) #6, !dbg !1908
  %116 = icmp eq i32 %115, -1, !dbg !1909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1910
  br i1 %116, label %117, label %118, !dbg !1910

; <label>:117:                                    ; preds = %63
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !1911
  tail call void @exit(i32 1) #8, !dbg !1912
  unreachable

; <label>:118:                                    ; preds = %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1913
  br label %119, !dbg !1914

; <label>:119:                                    ; preds = %59, %118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1915
  store i32 0, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !1916, !tbaa !1917
  %120 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !1918, !tbaa !1920
  %121 = icmp sgt i32 %120, 55535, !dbg !1921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1922
  br i1 %121, label %122, label %123, !dbg !1922

; <label>:122:                                    ; preds = %119
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !1923
  tail call void @exit(i32 1) #8, !dbg !1925
  unreachable

; <label>:123:                                    ; preds = %119
  %124 = add nsw i32 %120, 10000, !dbg !1926
  %125 = tail call i32 @listenToPort(i32 %124, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 36, i64 0), i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37)) #6, !dbg !1927
  %126 = icmp eq i32 %125, -1, !dbg !1928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1929
  br i1 %126, label %127, label %128, !dbg !1929

; <label>:127:                                    ; preds = %123
  tail call void @exit(i32 1) #8, !dbg !1930
  unreachable

; <label>:128:                                    ; preds = %123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1933
  %129 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !1935, !tbaa !1917
  %130 = icmp sgt i32 %129, 0, !dbg !1937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1938
  br i1 %130, label %131, label %144, !dbg !1938

; <label>:131:                                    ; preds = %128, %139
  %132 = phi i64 [ %140, %139 ], [ 0, %128 ]
  %133 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !1939, !tbaa !1942
  %134 = getelementptr inbounds %struct.redisServer, %struct.redisServer* @server, i64 0, i32 36, i64 %132, !dbg !1943
  %135 = load i32, i32* %134, align 4, !dbg !1943, !tbaa !708
  %136 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* %133, i32 %135, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterAcceptHandler, i8* null) #6, !dbg !1944
  %137 = icmp eq i32 %136, -1, !dbg !1945
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1946
  br i1 %137, label %138, label %139, !dbg !1946

; <label>:138:                                    ; preds = %131
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 500, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !1947
  tail call void @_exit(i32 1) #8, !dbg !1947
  unreachable

; <label>:139:                                    ; preds = %131
  %140 = add nuw nsw i64 %132, 1, !dbg !1948
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1949
  %141 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 37), align 4, !dbg !1935, !tbaa !1917
  %142 = sext i32 %141 to i64, !dbg !1937
  %143 = icmp slt i64 %140, %142, !dbg !1937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1938
  br i1 %143, label %131, label %144, !dbg !1938, !llvm.loop !1950

; <label>:144:                                    ; preds = %139, %128
  %145 = tail call %struct.rax* @raxNew() #6, !dbg !1952
  %146 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1953, !tbaa !788
  %147 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %146, i64 0, i32 10, !dbg !1954
  store %struct.rax* %145, %struct.rax** %147, align 8, !dbg !1955, !tbaa !1956
  %148 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %146, i64 0, i32 9, i64 0, !dbg !1957
  %149 = bitcast i64* %148 to i8*, !dbg !1957
  %150 = tail call i8* @memset(i8* nonnull %149, i32 0, i64 131072) #6, !dbg !1958
  %151 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !1959, !tbaa !1920
  %152 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !1960, !tbaa !760
  %153 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %152, i64 0, i32 17, !dbg !1961
  store i32 %151, i32* %153, align 8, !dbg !1962, !tbaa !900
  %154 = add nsw i32 %151, 10000, !dbg !1963
  %155 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %152, i64 0, i32 18, !dbg !1964
  store i32 %154, i32* %155, align 4, !dbg !1965, !tbaa !907
  %156 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 267), align 8, !dbg !1966, !tbaa !1968
  %157 = icmp eq i32 %156, 0, !dbg !1969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1970
  br i1 %157, label %159, label %158, !dbg !1970

; <label>:158:                                    ; preds = %144
  store i32 %156, i32* %153, align 8, !dbg !1971, !tbaa !900
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1972
  br label %159, !dbg !1972

; <label>:159:                                    ; preds = %144, %158
  %160 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 268), align 4, !dbg !1973, !tbaa !1975
  %161 = icmp eq i32 %160, 0, !dbg !1976
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1977
  br i1 %161, label %163, label %162, !dbg !1977

; <label>:162:                                    ; preds = %159
  store i32 %160, i32* %155, align 4, !dbg !1978, !tbaa !907
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1979
  br label %163, !dbg !1979

; <label>:163:                                    ; preds = %162, %159
  %164 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !1980, !tbaa !788
  %165 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %164, i64 0, i32 17, !dbg !1981
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1982
  store i64 0, i64* %165, align 8, !dbg !1986, !tbaa !1987
  %166 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %164, i64 0, i32 20, !dbg !1988
  store i32 0, i32* %166, align 8, !dbg !1989, !tbaa !1990
  %167 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %164, i64 0, i32 18, !dbg !1991
  store %struct.clusterNode* null, %struct.clusterNode** %167, align 8, !dbg !1992, !tbaa !1993
  %168 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %164, i64 0, i32 19, !dbg !1994
  store i64 0, i64* %168, align 8, !dbg !1995, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !1997
  %169 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %152, i64 0, i32 2, !dbg !1998
  %170 = load i32, i32* %169, align 8, !dbg !1998, !tbaa !927
  %171 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !2001, !tbaa !1728
  %172 = icmp eq i32 %171, 0, !dbg !2002
  %173 = select i1 %172, i32 0, i32 512, !dbg !2002
  %174 = and i32 %170, -513, !dbg !2004
  %175 = or i32 %173, %174, !dbg !2005
  store i32 %175, i32* %169, align 8, !dbg !2005, !tbaa !927
  %176 = icmp eq i32 %175, %170, !dbg !2006
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2007
  br i1 %176, label %181, label %177, !dbg !2007

; <label>:177:                                    ; preds = %163
  %178 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %164, i64 0, i32 22, !dbg !2010
  %179 = load i32, i32* %178, align 8, !dbg !2011, !tbaa !1475
  %180 = or i32 %179, 6, !dbg !2011
  store i32 %180, i32* %178, align 8, !dbg !2011, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2012
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2013
  br label %181, !dbg !2013

; <label>:181:                                    ; preds = %163, %177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2014
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2015
  ret void, !dbg !2015
}

; Function Attrs: noredzone
declare dso_local %struct.dict* @dictCreate(%struct.dictType*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterCloseAllSlots() local_unnamed_addr #0 !dbg !1818 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2016, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 6, i64 0, !dbg !2017
  %3 = bitcast %struct.clusterNode** %2 to i8*, !dbg !2017
  %4 = tail call i8* @memset(i8* nonnull %3, i32 0, i64 131072) #6, !dbg !2018
  %5 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2019, !tbaa !788
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 7, i64 0, !dbg !2020
  %7 = bitcast %struct.clusterNode** %6 to i8*, !dbg !2020
  %8 = tail call i8* @memset(i8* nonnull %7, i32 0, i64 131072) #6, !dbg !2021
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2022
  ret void, !dbg !2022
}

; Function Attrs: noredzone
declare dso_local i32 @listenToPort(i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @aeCreateFileEvent(%struct.aeEventLoop*, i32, i32, void (%struct.aeEventLoop*, i32, i8*, i32)*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterAcceptHandler(%struct.aeEventLoop* nocapture readnone, i32, i8* nocapture readnone, i32) #0 !dbg !2023 {
  %5 = alloca i32, align 4
  %6 = alloca [46 x i8], align 16
  %7 = bitcast i32* %5 to i8*, !dbg !2100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7, !dbg !2100
  %8 = getelementptr inbounds [46 x i8], [46 x i8]* %6, i64 0, i64 0, !dbg !2102
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %8) #7, !dbg !2102
  %9 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !2104, !tbaa !2106
  %10 = icmp eq i8* %9, null, !dbg !2107
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 51), align 4, !dbg !2108
  %12 = icmp ne i32 %11, 0, !dbg !2109
  %13 = and i1 %10, %12, !dbg !2110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2111
  br i1 %13, label %45, label %14, !dbg !2110

; <label>:14:                                     ; preds = %4, %23
  %15 = phi i32 [ %42, %23 ], [ 999, %4 ]
  %16 = call i32 @anetTcpAccept(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %1, i8* nonnull %8, i64 46, i32* nonnull %5) #6, !dbg !2113
  %17 = icmp eq i32 %16, -1, !dbg !2116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2118
  br i1 %17, label %18, label %23, !dbg !2118

; <label>:18:                                     ; preds = %14
  %19 = call i32* @__errno() #6, !dbg !2119
  %20 = load i32, i32* %19, align 4, !dbg !2119, !tbaa !708
  %21 = icmp eq i32 %20, 11, !dbg !2122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2123
  br i1 %21, label %44, label %22, !dbg !2123

; <label>:22:                                     ; preds = %18
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #6, !dbg !2124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2124
  br label %44, !dbg !2124

; <label>:23:                                     ; preds = %14
  %24 = call i32 @anetNonBlock(i8* null, i32 %16) #6, !dbg !2125
  %25 = call i32 @anetEnableTcpNoDelay(i8* null, i32 %16) #6, !dbg !2126
  %26 = load i32, i32* %5, align 4, !dbg !2127, !tbaa !708
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i64 0, i64 0), i8* nonnull %8, i32 %26) #6, !dbg !2128
  %27 = call i8* @zmalloc(i64 40) #6, !dbg !2137
  %28 = call i64 @mstime() #6, !dbg !2139
  %29 = bitcast i8* %27 to i64*, !dbg !2140
  store i64 %28, i64* %29, align 8, !dbg !2141, !tbaa !2142
  %30 = call i8* @sdsempty() #6, !dbg !2144
  %31 = getelementptr inbounds i8, i8* %27, i64 16, !dbg !2145
  %32 = bitcast i8* %31 to i8**, !dbg !2145
  store i8* %30, i8** %32, align 8, !dbg !2146, !tbaa !2147
  %33 = call i8* @sdsempty() #6, !dbg !2148
  %34 = getelementptr inbounds i8, i8* %27, i64 24, !dbg !2149
  %35 = bitcast i8* %34 to i8**, !dbg !2149
  store i8* %33, i8** %35, align 8, !dbg !2150, !tbaa !2151
  %36 = getelementptr inbounds i8, i8* %27, i64 32, !dbg !2152
  %37 = bitcast i8* %36 to %struct.clusterNode**, !dbg !2152
  store %struct.clusterNode* null, %struct.clusterNode** %37, align 8, !dbg !2153, !tbaa !2154
  %38 = getelementptr inbounds i8, i8* %27, i64 8, !dbg !2155
  %39 = bitcast i8* %38 to i32*, !dbg !2155
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2156
  store i32 %16, i32* %39, align 8, !dbg !2158, !tbaa !2159
  %40 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2160, !tbaa !1942
  %41 = call i32 @aeCreateFileEvent(%struct.aeEventLoop* %40, i32 %16, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterReadHandler, i8* %27) #6, !dbg !2161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2162
  %42 = add nsw i32 %15, -1, !dbg !2163
  %43 = icmp eq i32 %15, 0, !dbg !2162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2162
  br i1 %43, label %44, label %14, !dbg !2162, !llvm.loop !2164

; <label>:44:                                     ; preds = %23, %22, %18
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2166
  br label %45, !dbg !2167

; <label>:45:                                     ; preds = %44, %4
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %8) #7, !dbg !2167
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7, !dbg !2167
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2167
  ret void, !dbg !2167
}

; Function Attrs: noredzone
declare dso_local %struct.rax* @raxNew() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @resetManualFailover() local_unnamed_addr #0 !dbg !1984 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2168, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 17, !dbg !2169
  %3 = load i64, i64* %2, align 8, !dbg !2169, !tbaa !1987
  %4 = icmp eq i64 %3, 0, !dbg !2170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2171
  br i1 %4, label %10, label %5, !dbg !2171

; <label>:5:                                      ; preds = %0
  %6 = tail call i32 @clientsArePaused() #6, !dbg !2172
  %7 = icmp eq i32 %6, 0, !dbg !2172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2173
  br i1 %7, label %10, label %8, !dbg !2173

; <label>:8:                                      ; preds = %5
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !2174, !tbaa !2176
  %9 = tail call i32 @clientsArePaused() #6, !dbg !2177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2178
  br label %10, !dbg !2178

; <label>:10:                                     ; preds = %5, %0, %8
  %11 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2179, !tbaa !788
  %12 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 17, !dbg !2180
  store i64 0, i64* %12, align 8, !dbg !2181, !tbaa !1987
  %13 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 20, !dbg !2182
  store i32 0, i32* %13, align 8, !dbg !2183, !tbaa !1990
  %14 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 18, !dbg !2184
  store %struct.clusterNode* null, %struct.clusterNode** %14, align 8, !dbg !2185, !tbaa !1993
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %11, i64 0, i32 19, !dbg !2186
  store i64 0, i64* %15, align 8, !dbg !2187, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2188
  ret void, !dbg !2188
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterReset(i32) local_unnamed_addr #0 !dbg !2189 {
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2201, !tbaa !760
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 2, !dbg !2201
  %4 = load i32, i32* %3, align 8, !dbg !2201, !tbaa !927
  %5 = and i32 %4, 2, !dbg !2201
  %6 = icmp eq i32 %5, 0, !dbg !2201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2203
  br i1 %6, label %9, label %7, !dbg !2203

; <label>:7:                                      ; preds = %1
  tail call void @clusterSetNodeAsMaster(%struct.clusterNode* %2) #10, !dbg !2204
  tail call void @replicationUnsetMaster() #6, !dbg !2206
  %8 = tail call i64 @emptyDb(i32 -1, i32 0, void (i8*)* null) #6, !dbg !2207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2208
  br label %9, !dbg !2208

; <label>:9:                                      ; preds = %1, %7
  %10 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2209, !tbaa !788
  %11 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %10, i64 0, i32 6, i64 0, !dbg !2211
  %12 = bitcast %struct.clusterNode** %11 to i8*, !dbg !2211
  %13 = tail call i8* @memset(i8* nonnull %12, i32 0, i64 131072) #6, !dbg !2212
  %14 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2213, !tbaa !788
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %14, i64 0, i32 7, i64 0, !dbg !2214
  %16 = bitcast %struct.clusterNode** %15 to i8*, !dbg !2214
  %17 = tail call i8* @memset(i8* nonnull %16, i32 0, i64 131072) #6, !dbg !2215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2216
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2217, !tbaa !788
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 17, !dbg !2219
  %20 = load i64, i64* %19, align 8, !dbg !2219, !tbaa !1987
  %21 = icmp eq i64 %20, 0, !dbg !2220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2221
  br i1 %21, label %27, label %22, !dbg !2221

; <label>:22:                                     ; preds = %9
  %23 = tail call i32 @clientsArePaused() #6, !dbg !2222
  %24 = icmp eq i32 %23, 0, !dbg !2222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2223
  br i1 %24, label %27, label %25, !dbg !2223

; <label>:25:                                     ; preds = %22
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !2224, !tbaa !2176
  %26 = tail call i32 @clientsArePaused() #6, !dbg !2225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2226
  br label %27, !dbg !2226

; <label>:27:                                     ; preds = %9, %22, %25
  %28 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2227, !tbaa !788
  %29 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 17, !dbg !2228
  store i64 0, i64* %29, align 8, !dbg !2229, !tbaa !1987
  %30 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 20, !dbg !2230
  store i32 0, i32* %30, align 8, !dbg !2231, !tbaa !1990
  %31 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 18, !dbg !2232
  store %struct.clusterNode* null, %struct.clusterNode** %31, align 8, !dbg !2233, !tbaa !1993
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %28, i64 0, i32 19, !dbg !2234
  store i64 0, i64* %32, align 8, !dbg !2235, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2236
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2240
  br label %33, !dbg !2240

; <label>:33:                                     ; preds = %27, %62
  %34 = phi %struct.clusterState* [ %28, %27 ], [ %63, %62 ]
  %35 = phi i64 [ 0, %27 ], [ %64, %62 ]
  %36 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %34, i64 0, i32 8, i64 %35, !dbg !2248
  %37 = load %struct.clusterNode*, %struct.clusterNode** %36, align 8, !dbg !2248, !tbaa !760
  %38 = icmp eq %struct.clusterNode* %37, null, !dbg !2250
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2252
  br i1 %38, label %39, label %40, !dbg !2252

; <label>:39:                                     ; preds = %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2253
  br label %62, !dbg !2253

; <label>:40:                                     ; preds = %33
  %41 = trunc i64 %35 to i32
  %42 = lshr i64 %35, 3
  %43 = and i64 %42, 8191
  %44 = and i32 %41, 7, !dbg !2274
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 4, i64 %43, !dbg !2276
  %46 = load i8, i8* %45, align 1, !dbg !2276, !tbaa !745
  %47 = zext i8 %46 to i32, !dbg !2276
  %48 = shl i32 1, %44, !dbg !2277
  %49 = and i32 %48, %47, !dbg !2278
  %50 = icmp eq i32 %49, 0, !dbg !2279
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2280
  %51 = trunc i32 %48 to i8, !dbg !2294
  %52 = xor i8 %51, -1, !dbg !2294
  %53 = and i8 %46, %52, !dbg !2294
  store i8 %53, i8* %45, align 1, !dbg !2294, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2296
  br i1 %50, label %54, label %55, !dbg !2296

; <label>:54:                                     ; preds = %40
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2298
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !2298
  tail call void @_exit(i32 1) #8, !dbg !2298
  unreachable

; <label>:55:                                     ; preds = %40
  %56 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 5, !dbg !2299
  %57 = load i32, i32* %56, align 8, !dbg !2301, !tbaa !1164
  %58 = add nsw i32 %57, -1, !dbg !2301
  store i32 %58, i32* %56, align 8, !dbg !2301, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2297
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2298
  %59 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2303, !tbaa !788
  %60 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %59, i64 0, i32 8, i64 %35, !dbg !2304
  store %struct.clusterNode* null, %struct.clusterNode** %60, align 8, !dbg !2305, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2306
  %61 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2307, !tbaa !788
  br label %62, !dbg !2306

; <label>:62:                                     ; preds = %39, %55
  %63 = phi %struct.clusterState* [ %34, %39 ], [ %61, %55 ], !dbg !2307
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2308
  %64 = add nuw nsw i64 %35, 1, !dbg !2309
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2310
  %65 = icmp ult i64 %64, 16384, !dbg !2311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2240
  br i1 %65, label %33, label %66, !dbg !2240, !llvm.loop !2312

; <label>:66:                                     ; preds = %62
  %67 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %63, i64 0, i32 4, !dbg !2314
  %68 = load %struct.dict*, %struct.dict** %67, align 8, !dbg !2314, !tbaa !837
  %69 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %68) #6, !dbg !2315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2317
  %70 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %69) #6, !dbg !2318
  %71 = icmp eq %struct.dictEntry* %70, null, !dbg !2320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2317
  br i1 %71, label %83, label %72, !dbg !2317

; <label>:72:                                     ; preds = %66, %80
  %73 = phi %struct.dictEntry* [ %81, %80 ], [ %70, %66 ]
  %74 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %73, i64 0, i32 1, i32 0, !dbg !2321
  %75 = bitcast i8** %74 to %struct.clusterNode**, !dbg !2321
  %76 = load %struct.clusterNode*, %struct.clusterNode** %75, align 8, !dbg !2321, !tbaa !745
  %77 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2323, !tbaa !760
  %78 = icmp eq %struct.clusterNode* %76, %77, !dbg !2325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2326
  br i1 %78, label %80, label %79, !dbg !2326, !llvm.loop !2327

; <label>:79:                                     ; preds = %72
  tail call void @clusterDelNode(%struct.clusterNode* %76) #10, !dbg !2329
  br label %80, !dbg !2328

; <label>:80:                                     ; preds = %72, %79
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2330
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %81 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %69) #6, !dbg !2318
  %82 = icmp eq %struct.dictEntry* %81, null, !dbg !2320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2317
  br i1 %82, label %83, label %72, !dbg !2317

; <label>:83:                                     ; preds = %80, %66
  tail call void @dictReleaseIterator(%struct.dictIterator* %69) #6, !dbg !2331
  %84 = icmp eq i32 %0, 0, !dbg !2332
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2333
  br i1 %84, label %110, label %85, !dbg !2333

; <label>:85:                                     ; preds = %83
  %86 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2334, !tbaa !788
  %87 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %86, i64 0, i32 1, !dbg !2335
  store i64 0, i64* %87, align 8, !dbg !2336, !tbaa !797
  %88 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %86, i64 0, i32 21, !dbg !2337
  store i64 0, i64* %88, align 8, !dbg !2338, !tbaa !811
  %89 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2339, !tbaa !760
  %90 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %89, i64 0, i32 3, !dbg !2340
  store i64 0, i64* %90, align 8, !dbg !2341, !tbaa !1093
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !2342
  %91 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2343, !tbaa !760
  %92 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %91, i64 0, i32 1, i64 0, !dbg !2343
  %93 = tail call i8* @sdsnewlen(i8* nonnull %92, i64 40) #6, !dbg !2344
  %94 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2346, !tbaa !788
  %95 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %94, i64 0, i32 4, !dbg !2347
  %96 = load %struct.dict*, %struct.dict** %95, align 8, !dbg !2347, !tbaa !837
  %97 = tail call i32 @dictDelete(%struct.dict* %96, i8* %93) #6, !dbg !2348
  tail call void @sdsfree(i8* %93) #6, !dbg !2349
  %98 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2350, !tbaa !760
  %99 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %98, i64 0, i32 1, i64 0, !dbg !2350
  tail call void @getRandomHexChars(i8* nonnull %99, i64 40) #6, !dbg !2351
  %100 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2352, !tbaa !760
  %101 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2355, !tbaa !788
  %102 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %101, i64 0, i32 4, !dbg !2356
  %103 = load %struct.dict*, %struct.dict** %102, align 8, !dbg !2356, !tbaa !837
  %104 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %100, i64 0, i32 1, i64 0, !dbg !2357
  %105 = tail call i8* @sdsnewlen(i8* nonnull %104, i64 40) #6, !dbg !2358
  %106 = bitcast %struct.clusterNode* %100 to i8*, !dbg !2359
  %107 = tail call i32 @dictAdd(%struct.dict* %103, i8* %105, i8* %106) #6, !dbg !2360
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2362
  %108 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2363, !tbaa !760
  %109 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %108, i64 0, i32 1, i64 0, !dbg !2363
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i64 0, i64 0), i8* nonnull %109) #6, !dbg !2364
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2365
  br label %110, !dbg !2365

; <label>:110:                                    ; preds = %83, %85
  %111 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2368, !tbaa !788
  %112 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %111, i64 0, i32 22, !dbg !2369
  %113 = load i32, i32* %112, align 8, !dbg !2370, !tbaa !1475
  %114 = or i32 %113, 14, !dbg !2370
  store i32 %114, i32* %112, align 8, !dbg !2370, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2372
  ret void, !dbg !2372
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSetNodeAsMaster(%struct.clusterNode*) local_unnamed_addr #0 !dbg !2373 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !2379
  %3 = load i32, i32* %2, align 8, !dbg !2379, !tbaa !927
  %4 = and i32 %3, 1, !dbg !2379
  %5 = icmp eq i32 %4, 0, !dbg !2379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2381
  br i1 %5, label %6, label %65, !dbg !2381

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !2382
  %8 = load %struct.clusterNode*, %struct.clusterNode** %7, align 8, !dbg !2382, !tbaa !1025
  %9 = icmp eq %struct.clusterNode* %8, null, !dbg !2384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2385
  br i1 %9, label %57, label %10, !dbg !2385

; <label>:10:                                     ; preds = %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2404
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %8, i64 0, i32 6, !dbg !2405
  %12 = load i32, i32* %11, align 4, !dbg !2405, !tbaa !1041
  %13 = icmp sgt i32 %12, 0, !dbg !2406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2407
  br i1 %13, label %14, label %51, !dbg !2407

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %8, i64 0, i32 7
  %16 = load %struct.clusterNode**, %struct.clusterNode*** %15, align 8, !tbaa !1044
  br label %17, !dbg !2407

; <label>:17:                                     ; preds = %48, %14
  %18 = phi i64 [ 0, %14 ], [ %22, %48 ]
  %19 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %16, i64 %18, !dbg !2408
  %20 = load %struct.clusterNode*, %struct.clusterNode** %19, align 8, !dbg !2408, !tbaa !760
  %21 = icmp eq %struct.clusterNode* %20, %0, !dbg !2409
  %22 = add nuw nsw i64 %18, 1, !dbg !2410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2411
  br i1 %21, label %23, label %48, !dbg !2411

; <label>:23:                                     ; preds = %17
  %24 = trunc i64 %22 to i32, !dbg !2403
  %25 = icmp sgt i32 %12, %24, !dbg !2412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2413
  br i1 %25, label %26, label %40, !dbg !2413

; <label>:26:                                     ; preds = %23
  %27 = trunc i64 %18 to i32, !dbg !2403
  %28 = and i64 %18, 4294967295, !dbg !2408
  %29 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %16, i64 %28, !dbg !2408
  %30 = xor i32 %27, -1, !dbg !2414
  %31 = add i32 %12, %30, !dbg !2414
  %32 = bitcast %struct.clusterNode** %29 to i8*, !dbg !2416
  %33 = and i64 %22, 4294967295, !dbg !2417
  %34 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %16, i64 %33, !dbg !2417
  %35 = bitcast %struct.clusterNode** %34 to i8*, !dbg !2418
  %36 = sext i32 %31 to i64, !dbg !2419
  %37 = shl nsw i64 %36, 3, !dbg !2420
  %38 = tail call i8* @memmove(i8* %32, i8* nonnull %35, i64 %37) #6, !dbg !2421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2422
  %39 = load i32, i32* %11, align 4, !dbg !2423, !tbaa !1041
  br label %40, !dbg !2422

; <label>:40:                                     ; preds = %26, %23
  %41 = phi i32 [ %39, %26 ], [ %12, %23 ], !dbg !2423
  %42 = add nsw i32 %41, -1, !dbg !2423
  store i32 %42, i32* %11, align 4, !dbg !2423, !tbaa !1041
  %43 = icmp eq i32 %42, 0, !dbg !2424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2426
  br i1 %43, label %44, label %51, !dbg !2426

; <label>:44:                                     ; preds = %40
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %8, i64 0, i32 2, !dbg !2427
  %46 = load i32, i32* %45, align 8, !dbg !2428, !tbaa !927
  %47 = and i32 %46, -257, !dbg !2428
  store i32 %47, i32* %45, align 8, !dbg !2428, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2429
  br label %51, !dbg !2429

; <label>:48:                                     ; preds = %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2430
  %49 = trunc i64 %22 to i32, !dbg !2406
  %50 = icmp sgt i32 %12, %49, !dbg !2406
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2407
  br i1 %50, label %17, label %51, !dbg !2407, !llvm.loop !2431

; <label>:51:                                     ; preds = %48, %10, %40, %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2435
  %52 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !2436, !tbaa !760
  %53 = icmp eq %struct.clusterNode* %52, %0, !dbg !2438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2439
  %54 = load i32, i32* %2, align 8, !dbg !2440, !tbaa !927
  br i1 %53, label %57, label %55, !dbg !2439

; <label>:55:                                     ; preds = %51
  %56 = or i32 %54, 256, !dbg !2441
  store i32 %56, i32* %2, align 8, !dbg !2441, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2442
  br label %57, !dbg !2442

; <label>:57:                                     ; preds = %51, %6, %55
  %58 = phi i32 [ %3, %6 ], [ %56, %55 ], [ %54, %51 ], !dbg !2443
  %59 = and i32 %58, -4, !dbg !2443
  %60 = or i32 %59, 1, !dbg !2444
  store i32 %60, i32* %2, align 8, !dbg !2444, !tbaa !927
  store %struct.clusterNode* null, %struct.clusterNode** %7, align 8, !dbg !2445, !tbaa !1025
  %61 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2448, !tbaa !788
  %62 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %61, i64 0, i32 22, !dbg !2449
  %63 = load i32, i32* %62, align 8, !dbg !2450, !tbaa !1475
  %64 = or i32 %63, 6, !dbg !2450
  store i32 %64, i32* %62, align 8, !dbg !2450, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2451
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2452
  br label %65, !dbg !2452

; <label>:65:                                     ; preds = %1, %57
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2452
  ret void, !dbg !2452
}

; Function Attrs: noredzone
declare dso_local void @replicationUnsetMaster() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @emptyDb(i32, i32, void (i8*)*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterDelSlot(i32) local_unnamed_addr #0 !dbg !2242 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2454, !tbaa !788
  %3 = sext i32 %0 to i64, !dbg !2455
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 8, i64 %3, !dbg !2455
  %5 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !2455, !tbaa !760
  %6 = icmp eq %struct.clusterNode* %5, null, !dbg !2457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2458
  br i1 %6, label %27, label %7, !dbg !2458

; <label>:7:                                      ; preds = %1
  %8 = sdiv i32 %0, 8, !dbg !2465
  %9 = sext i32 %8 to i64, !dbg !2466
  %10 = and i32 %0, 7, !dbg !2468
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 4, i64 %9, !dbg !2470
  %12 = load i8, i8* %11, align 1, !dbg !2470, !tbaa !745
  %13 = zext i8 %12 to i32, !dbg !2470
  %14 = shl i32 1, %10, !dbg !2471
  %15 = and i32 %14, %13, !dbg !2472
  %16 = icmp eq i32 %15, 0, !dbg !2473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2474
  %17 = trunc i32 %14 to i8, !dbg !2480
  %18 = xor i8 %17, -1, !dbg !2480
  %19 = and i8 %12, %18, !dbg !2480
  store i8 %19, i8* %11, align 1, !dbg !2480, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2482
  br i1 %16, label %20, label %21, !dbg !2482

; <label>:20:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2484
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !2484
  tail call void @_exit(i32 1) #8, !dbg !2484
  unreachable

; <label>:21:                                     ; preds = %7
  %22 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 5, !dbg !2485
  %23 = load i32, i32* %22, align 8, !dbg !2486, !tbaa !1164
  %24 = add nsw i32 %23, -1, !dbg !2486
  store i32 %24, i32* %22, align 8, !dbg !2486, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2484
  %25 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2488, !tbaa !788
  %26 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 8, i64 %3, !dbg !2489
  store %struct.clusterNode* null, %struct.clusterNode** %26, align 8, !dbg !2490, !tbaa !760
  br label %27, !dbg !2491

; <label>:27:                                     ; preds = %1, %21
  %28 = phi i32 [ 0, %21 ], [ -1, %1 ], !dbg !2492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2493
  ret i32 %28, !dbg !2493
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetSafeIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictNext(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterDelNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !2494 {
  %2 = alloca %struct.listIter, align 8
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2504
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2506, !tbaa !788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2507
  %4 = icmp eq %struct.clusterNode* %0, null
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5
  br label %6, !dbg !2507

; <label>:6:                                      ; preds = %1, %54
  %7 = phi %struct.clusterState* [ %3, %1 ], [ %55, %54 ]
  %8 = phi %struct.clusterState* [ %3, %1 ], [ %56, %54 ]
  %9 = phi i64 [ 0, %1 ], [ %57, %54 ]
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %8, i64 0, i32 7, i64 %9, !dbg !2508
  %11 = load %struct.clusterNode*, %struct.clusterNode** %10, align 8, !dbg !2508, !tbaa !760
  %12 = icmp eq %struct.clusterNode* %11, %0, !dbg !2512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2513
  br i1 %12, label %13, label %15, !dbg !2513

; <label>:13:                                     ; preds = %6
  store %struct.clusterNode* null, %struct.clusterNode** %10, align 8, !dbg !2514, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2515
  %14 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2516, !tbaa !788
  br label %15, !dbg !2515

; <label>:15:                                     ; preds = %13, %6
  %16 = phi %struct.clusterState* [ %14, %13 ], [ %7, %6 ]
  %17 = phi %struct.clusterState* [ %14, %13 ], [ %8, %6 ]
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %17, i64 0, i32 6, i64 %9, !dbg !2518
  %19 = load %struct.clusterNode*, %struct.clusterNode** %18, align 8, !dbg !2518, !tbaa !760
  %20 = icmp eq %struct.clusterNode* %19, %0, !dbg !2519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2520
  br i1 %20, label %21, label %23, !dbg !2520

; <label>:21:                                     ; preds = %15
  store %struct.clusterNode* null, %struct.clusterNode** %18, align 8, !dbg !2521, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2522
  %22 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2523, !tbaa !788
  br label %23, !dbg !2522

; <label>:23:                                     ; preds = %21, %15
  %24 = phi %struct.clusterState* [ %22, %21 ], [ %16, %15 ]
  %25 = phi %struct.clusterState* [ %22, %21 ], [ %17, %15 ]
  %26 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 8, i64 %9, !dbg !2525
  %27 = load %struct.clusterNode*, %struct.clusterNode** %26, align 8, !dbg !2525, !tbaa !760
  %28 = icmp eq %struct.clusterNode* %27, %0, !dbg !2526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2527
  br i1 %28, label %29, label %54, !dbg !2527

; <label>:29:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2531
  br i1 %4, label %30, label %31, !dbg !2531

; <label>:30:                                     ; preds = %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2532
  br label %52, !dbg !2532

; <label>:31:                                     ; preds = %29
  %32 = trunc i64 %9 to i32
  %33 = lshr i64 %9, 3
  %34 = and i64 %33, 8191
  %35 = and i32 %32, 7, !dbg !2540
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %34, !dbg !2542
  %37 = load i8, i8* %36, align 1, !dbg !2542, !tbaa !745
  %38 = zext i8 %37 to i32, !dbg !2542
  %39 = shl i32 1, %35, !dbg !2543
  %40 = and i32 %39, %38, !dbg !2544
  %41 = icmp eq i32 %40, 0, !dbg !2545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2546
  %42 = trunc i32 %39 to i8, !dbg !2552
  %43 = xor i8 %42, -1, !dbg !2552
  %44 = and i8 %37, %43, !dbg !2552
  store i8 %44, i8* %36, align 1, !dbg !2552, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2554
  br i1 %41, label %45, label %46, !dbg !2554

; <label>:45:                                     ; preds = %31
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2555
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2556
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !2556
  tail call void @_exit(i32 1) #8, !dbg !2556
  unreachable

; <label>:46:                                     ; preds = %31
  %47 = load i32, i32* %5, align 8, !dbg !2557, !tbaa !1164
  %48 = add nsw i32 %47, -1, !dbg !2557
  store i32 %48, i32* %5, align 8, !dbg !2557, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2558
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2555
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2556
  %49 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2559, !tbaa !788
  %50 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %49, i64 0, i32 8, i64 %9, !dbg !2560
  store %struct.clusterNode* null, %struct.clusterNode** %50, align 8, !dbg !2561, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2562
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !2506, !tbaa !788
  br label %52, !dbg !2562

; <label>:52:                                     ; preds = %30, %46
  %53 = phi %struct.clusterState* [ %24, %30 ], [ %51, %46 ], !dbg !2506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2564
  br label %54, !dbg !2564

; <label>:54:                                     ; preds = %23, %52
  %55 = phi %struct.clusterState* [ %24, %23 ], [ %53, %52 ]
  %56 = phi %struct.clusterState* [ %25, %23 ], [ %53, %52 ], !dbg !2506
  %57 = add nuw nsw i64 %9, 1, !dbg !2565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2566
  %58 = icmp ult i64 %57, 16384, !dbg !2567
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2507
  br i1 %58, label %6, label %59, !dbg !2507, !llvm.loop !2568

; <label>:59:                                     ; preds = %54
  %60 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %56, i64 0, i32 4, !dbg !2570
  %61 = load %struct.dict*, %struct.dict** %60, align 8, !dbg !2570, !tbaa !837
  %62 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %61) #6, !dbg !2571
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2573
  %63 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %62) #6, !dbg !2574
  %64 = icmp eq %struct.dictEntry* %63, null, !dbg !2576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2573
  br i1 %64, label %92, label %65, !dbg !2573

; <label>:65:                                     ; preds = %59
  %66 = bitcast %struct.listIter* %2 to i8*
  br label %67, !dbg !2573

; <label>:67:                                     ; preds = %65, %89
  %68 = phi %struct.dictEntry* [ %63, %65 ], [ %90, %89 ]
  %69 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %68, i64 0, i32 1, i32 0, !dbg !2577
  %70 = bitcast i8** %69 to %struct.clusterNode**, !dbg !2577
  %71 = load %struct.clusterNode*, %struct.clusterNode** %70, align 8, !dbg !2577, !tbaa !745
  %72 = icmp eq %struct.clusterNode* %71, %0, !dbg !2579
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2581
  br i1 %72, label %89, label %73, !dbg !2581, !llvm.loop !2582

; <label>:73:                                     ; preds = %67
  %74 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 20, !dbg !2606
  %75 = load %struct.list*, %struct.list** %74, align 8, !dbg !2606, !tbaa !1188
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #7, !dbg !2608
  call void @listRewind(%struct.list* %75, %struct.listIter* nonnull %2) #6, !dbg !2610
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2611
  br label %76, !dbg !2611

; <label>:76:                                     ; preds = %79, %73
  %77 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #6, !dbg !2612
  %78 = icmp eq %struct.listNode* %77, null, !dbg !2614
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2611
  br i1 %78, label %86, label %79, !dbg !2611

; <label>:79:                                     ; preds = %76
  %80 = getelementptr inbounds %struct.listNode, %struct.listNode* %77, i64 0, i32 2, !dbg !2615
  %81 = bitcast i8** %80 to %struct.clusterNodeFailReport**, !dbg !2615
  %82 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %81, align 8, !dbg !2615, !tbaa !2617
  %83 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %82, i64 0, i32 0, !dbg !2620
  %84 = load %struct.clusterNode*, %struct.clusterNode** %83, align 8, !dbg !2620, !tbaa !2622
  %85 = icmp eq %struct.clusterNode* %84, %0, !dbg !2624
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2625
  br i1 %85, label %87, label %76, !dbg !2625, !llvm.loop !2626

; <label>:86:                                     ; preds = %76
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2629
  br label %88, !dbg !2630

; <label>:87:                                     ; preds = %79
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2629
  call void @listDelNode(%struct.list* %75, %struct.listNode* nonnull %77) #6, !dbg !2632
  call void @clusterNodeCleanupFailureReports(%struct.clusterNode* %71) #6, !dbg !2633
  br label %88, !dbg !2634

; <label>:88:                                     ; preds = %86, %87
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2635
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #7, !dbg !2636
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2636
  br label %89, !dbg !2583

; <label>:89:                                     ; preds = %67, %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2637
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %90 = call %struct.dictEntry* @dictNext(%struct.dictIterator* %62) #6, !dbg !2574
  %91 = icmp eq %struct.dictEntry* %90, null, !dbg !2576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2573
  br i1 %91, label %92, label %67, !dbg !2573

; <label>:92:                                     ; preds = %89, %59
  call void @dictReleaseIterator(%struct.dictIterator* %62) #6, !dbg !2638
  call void @freeClusterNode(%struct.clusterNode* %0) #10, !dbg !2639
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2640
  ret void, !dbg !2640
}

; Function Attrs: noredzone
declare dso_local void @dictReleaseIterator(%struct.dictIterator*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsnewlen(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictDelete(%struct.dict*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @getRandomHexChars(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterLink* @createClusterLink(%struct.clusterNode*) local_unnamed_addr #0 !dbg !2130 {
  %2 = tail call i8* @zmalloc(i64 40) #6, !dbg !2642
  %3 = bitcast i8* %2 to %struct.clusterLink*, !dbg !2642
  %4 = tail call i64 @mstime() #6, !dbg !2644
  %5 = bitcast i8* %2 to i64*, !dbg !2645
  store i64 %4, i64* %5, align 8, !dbg !2646, !tbaa !2142
  %6 = tail call i8* @sdsempty() #6, !dbg !2647
  %7 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !2648
  %8 = bitcast i8* %7 to i8**, !dbg !2648
  store i8* %6, i8** %8, align 8, !dbg !2649, !tbaa !2147
  %9 = tail call i8* @sdsempty() #6, !dbg !2650
  %10 = getelementptr inbounds i8, i8* %2, i64 24, !dbg !2651
  %11 = bitcast i8* %10 to i8**, !dbg !2651
  store i8* %9, i8** %11, align 8, !dbg !2652, !tbaa !2151
  %12 = getelementptr inbounds i8, i8* %2, i64 32, !dbg !2653
  %13 = bitcast i8* %12 to %struct.clusterNode**, !dbg !2653
  store %struct.clusterNode* %0, %struct.clusterNode** %13, align 8, !dbg !2654, !tbaa !2154
  %14 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !2655
  %15 = bitcast i8* %14 to i32*, !dbg !2655
  store i32 -1, i32* %15, align 8, !dbg !2656, !tbaa !2159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2657
  ret %struct.clusterLink* %3, !dbg !2657
}

; Function Attrs: noredzone
declare dso_local i8* @sdsempty() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @freeClusterLink(%struct.clusterLink*) local_unnamed_addr #0 !dbg !2658 {
  %2 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !2664
  %3 = load i32, i32* %2, align 8, !dbg !2664, !tbaa !2159
  %4 = icmp eq i32 %3, -1, !dbg !2666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2667
  br i1 %4, label %7, label %5, !dbg !2667

; <label>:5:                                      ; preds = %1
  %6 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !2668, !tbaa !1942
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %6, i32 %3, i32 3) #6, !dbg !2670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2671
  br label %7, !dbg !2671

; <label>:7:                                      ; preds = %1, %5
  %8 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 2, !dbg !2672
  %9 = load i8*, i8** %8, align 8, !dbg !2672, !tbaa !2147
  tail call void @sdsfree(i8* %9) #6, !dbg !2673
  %10 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 3, !dbg !2674
  %11 = load i8*, i8** %10, align 8, !dbg !2674, !tbaa !2151
  tail call void @sdsfree(i8* %11) #6, !dbg !2675
  %12 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !2676
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !2676, !tbaa !2154
  %14 = icmp eq %struct.clusterNode* %13, null, !dbg !2678
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2679
  br i1 %14, label %17, label %15, !dbg !2679

; <label>:15:                                     ; preds = %7
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 19, !dbg !2680
  store %struct.clusterLink* null, %struct.clusterLink** %16, align 8, !dbg !2681, !tbaa !1178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2682
  br label %17, !dbg !2682

; <label>:17:                                     ; preds = %7, %15
  %18 = load i32, i32* %2, align 8, !dbg !2683, !tbaa !2159
  %19 = tail call i32 @close(i32 %18) #6, !dbg !2684
  %20 = bitcast %struct.clusterLink* %0 to i8*, !dbg !2685
  tail call void @zfree(i8* %20) #6, !dbg !2686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2687
  ret void, !dbg !2687
}

; Function Attrs: noredzone
declare dso_local void @aeDeleteFileEvent(%struct.aeEventLoop*, i32, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetTcpAccept(i8*, i32, i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetNonBlock(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetEnableTcpNoDelay(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterReadHandler(%struct.aeEventLoop* nocapture readnone, i32, i8*, i32) #0 !dbg !2688 {
  %5 = alloca [4352 x i8], align 16
  %6 = getelementptr inbounds [4352 x i8], [4352 x i8]* %5, i64 0, i64 0, !dbg !2707
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %6) #7, !dbg !2707
  %7 = bitcast i8* %2 to %struct.clusterLink*, !dbg !2709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2711
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to i8**
  br label %10, !dbg !2711

; <label>:10:                                     ; preds = %106, %4
  %11 = load i8*, i8** %9, align 8, !dbg !2712, !tbaa !2151
  %12 = getelementptr inbounds i8, i8* %11, i64 -1, !dbg !2716
  %13 = load i8, i8* %12, align 1, !dbg !2716, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2718
  %14 = trunc i8 %13 to i3, !dbg !2718
  switch i3 %14, label %36 [
    i3 0, label %15
    i3 1, label %18
    i3 2, label %22
    i3 3, label %27
    i3 -4, label %32
  ], !dbg !2718

; <label>:15:                                     ; preds = %10
  %16 = lshr i8 %13, 3, !dbg !2719
  %17 = zext i8 %16 to i64, !dbg !2719
  br label %37, !dbg !2720

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds i8, i8* %11, i64 -3, !dbg !2721
  %20 = load i8, i8* %19, align 1, !dbg !2722, !tbaa !745
  %21 = zext i8 %20 to i64, !dbg !2721
  br label %37, !dbg !2723

; <label>:22:                                     ; preds = %10
  %23 = getelementptr inbounds i8, i8* %11, i64 -5, !dbg !2724
  %24 = bitcast i8* %23 to i16*, !dbg !2725
  %25 = load i16, i16* %24, align 1, !dbg !2725, !tbaa !1503
  %26 = zext i16 %25 to i64, !dbg !2724
  br label %37, !dbg !2726

; <label>:27:                                     ; preds = %10
  %28 = getelementptr inbounds i8, i8* %11, i64 -9, !dbg !2727
  %29 = bitcast i8* %28 to i32*, !dbg !2728
  %30 = load i32, i32* %29, align 1, !dbg !2728, !tbaa !708
  %31 = zext i32 %30 to i64, !dbg !2727
  br label %37, !dbg !2729

; <label>:32:                                     ; preds = %10
  %33 = getelementptr inbounds i8, i8* %11, i64 -17, !dbg !2730
  %34 = bitcast i8* %33 to i64*, !dbg !2731
  %35 = load i64, i64* %34, align 1, !dbg !2731, !tbaa !1510
  br label %37, !dbg !2732

; <label>:36:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2734
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2736
  br label %41, !dbg !2736

; <label>:37:                                     ; preds = %15, %18, %22, %27, %32
  %38 = phi i64 [ %35, %32 ], [ %31, %27 ], [ %26, %22 ], [ %21, %18 ], [ %17, %15 ], !dbg !2737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2734
  %39 = trunc i64 %38 to i32, !dbg !2739
  %40 = icmp ult i32 %39, 8, !dbg !2740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2736
  br i1 %40, label %41, label %45, !dbg !2736

; <label>:41:                                     ; preds = %36, %37
  %42 = phi i32 [ 0, %36 ], [ %39, %37 ]
  %43 = phi i64 [ 0, %36 ], [ %38, %37 ]
  %44 = sub i32 8, %42, !dbg !2742
  br label %67, !dbg !2745

; <label>:45:                                     ; preds = %37
  %46 = icmp eq i32 %39, 8, !dbg !2747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2750
  br i1 %46, label %50, label %47, !dbg !2750

; <label>:47:                                     ; preds = %45
  %48 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !2751
  %49 = bitcast i8* %48 to i32*, !dbg !2751
  br label %60, !dbg !2750

; <label>:50:                                     ; preds = %45
  %51 = call i32 @memcmp(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i64 4) #6, !dbg !2752
  %52 = icmp eq i32 %51, 0, !dbg !2755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2756
  br i1 %52, label %53, label %59, !dbg !2756

; <label>:53:                                     ; preds = %50
  %54 = getelementptr inbounds i8, i8* %11, i64 4, !dbg !2757
  %55 = bitcast i8* %54 to i32*, !dbg !2757
  %56 = load i32, i32* %55, align 4, !dbg !2757, !tbaa !2758
  %57 = call i32 @lwip_htonl(i32 %56) #6, !dbg !2757
  %58 = icmp ult i32 %57, 2256, !dbg !2760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2761
  br i1 %58, label %59, label %60, !dbg !2761

; <label>:59:                                     ; preds = %50, %53
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.69, i64 0, i64 0)) #6, !dbg !2762
  call void @freeClusterLink(%struct.clusterLink* nonnull %7) #6, !dbg !2769
  br label %107, !dbg !2770

; <label>:60:                                     ; preds = %47, %53
  %61 = phi i32* [ %49, %47 ], [ %55, %53 ], !dbg !2751
  %62 = load i32, i32* %61, align 4, !dbg !2751, !tbaa !2758
  %63 = call i32 @lwip_htonl(i32 %62) #6, !dbg !2751
  %64 = sub i32 %63, %39, !dbg !2771
  %65 = icmp ult i32 %64, 4352, !dbg !2772
  %66 = select i1 %65, i32 %64, i32 4352, !dbg !2772
  br label %67

; <label>:67:                                     ; preds = %60, %41
  %68 = phi i64 [ %43, %41 ], [ %38, %60 ]
  %69 = phi i32 [ %44, %41 ], [ %66, %60 ], !dbg !2773
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %70 = zext i32 %69 to i64, !dbg !2775
  %71 = call i64 @read(i32 %1, i8* nonnull %6, i64 %70) #6, !dbg !2776
  %72 = icmp eq i64 %71, -1, !dbg !2778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2780
  br i1 %72, label %73, label %78, !dbg !2780

; <label>:73:                                     ; preds = %67
  %74 = call i32* @__errno() #6, !dbg !2781
  %75 = load i32, i32* %74, align 4, !dbg !2781, !tbaa !708
  %76 = icmp eq i32 %75, 11, !dbg !2782
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2738
  br i1 %76, label %109, label %77, !dbg !2783

; <label>:77:                                     ; preds = %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2784
  br label %82, !dbg !2784

; <label>:78:                                     ; preds = %67
  %79 = icmp slt i64 %71, 1, !dbg !2787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2788
  br i1 %79, label %80, label %88, !dbg !2788

; <label>:80:                                     ; preds = %78
  %81 = icmp eq i64 %71, 0, !dbg !2789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2784
  br i1 %81, label %86, label %82, !dbg !2784

; <label>:82:                                     ; preds = %77, %80
  %83 = call i32* @__errno() #6, !dbg !2790
  %84 = load i32, i32* %83, align 4, !dbg !2790, !tbaa !708
  %85 = call i8* @strerror(i32 %84) #6, !dbg !2791
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2784
  br label %86, !dbg !2784

; <label>:86:                                     ; preds = %80, %82
  %87 = phi i8* [ %85, %82 ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i64 0, i64 0), %80 ], !dbg !2784
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i8* %87) #6, !dbg !2792
  call void @freeClusterLink(%struct.clusterLink* nonnull %7) #6, !dbg !2795
  br label %107, !dbg !2796

; <label>:88:                                     ; preds = %78
  %89 = load i8*, i8** %9, align 8, !dbg !2797, !tbaa !2151
  %90 = call i8* @sdscatlen(i8* %89, i8* nonnull %6, i64 %71) #6, !dbg !2799
  store i8* %90, i8** %9, align 8, !dbg !2800, !tbaa !2151
  %91 = add i64 %71, %68, !dbg !2801
  %92 = trunc i64 %91 to i32, !dbg !2801
  %93 = icmp ugt i32 %92, 7, !dbg !2802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2804
  br i1 %93, label %94, label %106, !dbg !2804

; <label>:94:                                     ; preds = %88
  %95 = getelementptr inbounds i8, i8* %90, i64 4, !dbg !2805
  %96 = bitcast i8* %95 to i32*, !dbg !2805
  %97 = load i32, i32* %96, align 4, !dbg !2805, !tbaa !2758
  %98 = call i32 @lwip_htonl(i32 %97) #6, !dbg !2805
  %99 = icmp eq i32 %98, %92, !dbg !2806
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2807
  br i1 %99, label %100, label %106, !dbg !2807

; <label>:100:                                    ; preds = %94
  %101 = call i32 @clusterProcessPacket(%struct.clusterLink* nonnull %7) #10, !dbg !2808
  %102 = icmp eq i32 %101, 0, !dbg !2808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2811
  br i1 %102, label %108, label %103, !dbg !2811

; <label>:103:                                    ; preds = %100
  %104 = load i8*, i8** %9, align 8, !dbg !2812, !tbaa !2151
  call void @sdsfree(i8* %104) #6, !dbg !2814
  %105 = call i8* @sdsempty() #6, !dbg !2815
  store i8* %105, i8** %9, align 8, !dbg !2816, !tbaa !2151
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2817
  br label %106, !dbg !2817

; <label>:106:                                    ; preds = %103, %94, %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2711
  br label %10, !dbg !2711, !llvm.loop !2818

; <label>:107:                                    ; preds = %86, %59
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2820
  br label %108, !dbg !2821

; <label>:108:                                    ; preds = %100, %107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2821
  br label %109, !dbg !2822

; <label>:109:                                    ; preds = %108, %73
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %6) #7, !dbg !2822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2822
  ret void, !dbg !2822
}

; Function Attrs: noredzone nounwind
define dso_local i32 @keyHashSlot(i8*, i32) local_unnamed_addr #0 !dbg !2823 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2834
  %3 = icmp sgt i32 %1, 0, !dbg !2836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2838
  br i1 %3, label %4, label %18, !dbg !2838

; <label>:4:                                      ; preds = %2
  %5 = sext i32 %1 to i64, !dbg !2839
  br label %6, !dbg !2839

; <label>:6:                                      ; preds = %4, %12
  %7 = phi i64 [ 0, %4 ], [ %13, %12 ]
  %8 = phi i32 [ 0, %4 ], [ %14, %12 ]
  %9 = getelementptr inbounds i8, i8* %0, i64 %7, !dbg !2839
  %10 = load i8, i8* %9, align 1, !dbg !2839, !tbaa !745
  %11 = icmp eq i8 %10, 123, !dbg !2841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2842
  br i1 %11, label %16, label %12, !dbg !2842

; <label>:12:                                     ; preds = %6
  %13 = add nuw nsw i64 %7, 1, !dbg !2843
  %14 = add nuw nsw i32 %8, 1, !dbg !2843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2844
  %15 = icmp slt i64 %13, %5, !dbg !2836
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2838
  br i1 %15, label %6, label %18, !dbg !2838, !llvm.loop !2845

; <label>:16:                                     ; preds = %6
  %17 = trunc i64 %7 to i32, !dbg !2842
  br label %18, !dbg !2847

; <label>:18:                                     ; preds = %12, %16, %2
  %19 = phi i32 [ 0, %2 ], [ %17, %16 ], [ %14, %12 ], !dbg !2849
  %20 = icmp eq i32 %19, %1, !dbg !2847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2850
  br i1 %20, label %21, label %23, !dbg !2850

; <label>:21:                                     ; preds = %18
  %22 = tail call zeroext i16 @crc16(i8* %0, i32 %1) #6, !dbg !2851
  br label %55, !dbg !2852

; <label>:23:                                     ; preds = %18
  %24 = add i32 %19, 1, !dbg !2853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2856
  %25 = icmp slt i32 %24, %1, !dbg !2857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2859
  br i1 %25, label %26, label %41, !dbg !2859

; <label>:26:                                     ; preds = %23
  %27 = sext i32 %24 to i64, !dbg !2860
  %28 = sext i32 %1 to i64, !dbg !2860
  br label %29, !dbg !2860

; <label>:29:                                     ; preds = %26, %35
  %30 = phi i64 [ %27, %26 ], [ %36, %35 ]
  %31 = phi i32 [ %24, %26 ], [ %37, %35 ]
  %32 = getelementptr inbounds i8, i8* %0, i64 %30, !dbg !2860
  %33 = load i8, i8* %32, align 1, !dbg !2860, !tbaa !745
  %34 = icmp eq i8 %33, 125, !dbg !2862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2863
  br i1 %34, label %39, label %35, !dbg !2863

; <label>:35:                                     ; preds = %29
  %36 = add nsw i64 %30, 1, !dbg !2864
  %37 = add nsw i32 %31, 1, !dbg !2864
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2865
  %38 = icmp slt i64 %36, %28, !dbg !2857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2859
  br i1 %38, label %29, label %41, !dbg !2859, !llvm.loop !2866

; <label>:39:                                     ; preds = %29
  %40 = trunc i64 %30 to i32, !dbg !2863
  br label %41, !dbg !2868

; <label>:41:                                     ; preds = %35, %39, %23
  %42 = phi i32 [ %24, %23 ], [ %40, %39 ], [ %37, %35 ], !dbg !2870
  %43 = icmp eq i32 %42, %1, !dbg !2868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2871
  br i1 %43, label %46, label %44, !dbg !2871

; <label>:44:                                     ; preds = %41
  %45 = icmp eq i32 %42, %24, !dbg !2872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2873
  br i1 %45, label %46, label %48, !dbg !2873

; <label>:46:                                     ; preds = %44, %41
  %47 = tail call zeroext i16 @crc16(i8* %0, i32 %1) #6, !dbg !2874
  br label %55, !dbg !2875

; <label>:48:                                     ; preds = %44
  %49 = zext i32 %19 to i64, !dbg !2876
  %50 = getelementptr inbounds i8, i8* %0, i64 %49, !dbg !2876
  %51 = getelementptr inbounds i8, i8* %50, i64 1, !dbg !2877
  %52 = xor i32 %19, -1, !dbg !2878
  %53 = add i32 %42, %52, !dbg !2878
  %54 = tail call zeroext i16 @crc16(i8* nonnull %51, i32 %53) #6, !dbg !2879
  br label %55, !dbg !2880

; <label>:55:                                     ; preds = %48, %46, %21
  %56 = phi i16 [ %22, %21 ], [ %47, %46 ], [ %54, %48 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2881
  %57 = and i16 %56, 16383, !dbg !2882
  %58 = zext i16 %57 to i32, !dbg !2882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2883
  ret i32 %58, !dbg !2883
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @crc16(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.list* @listCreate() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeAddFailureReport(%struct.clusterNode* nocapture readonly, %struct.clusterNode*) local_unnamed_addr #0 !dbg !2884 {
  %3 = alloca %struct.listIter, align 8
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2894
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !2894, !tbaa !1188
  %6 = bitcast %struct.listIter* %3 to i8*, !dbg !2896
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7, !dbg !2896
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %3) #6, !dbg !2898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2899
  br label %7, !dbg !2899

; <label>:7:                                      ; preds = %10, %2
  %8 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #6, !dbg !2900
  %9 = icmp eq %struct.listNode* %8, null, !dbg !2902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2899
  br i1 %9, label %20, label %10, !dbg !2899

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.listNode, %struct.listNode* %8, i64 0, i32 2, !dbg !2903
  %12 = bitcast i8** %11 to %struct.clusterNodeFailReport**, !dbg !2903
  %13 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %12, align 8, !dbg !2903, !tbaa !2617
  %14 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %13, i64 0, i32 0, !dbg !2906
  %15 = load %struct.clusterNode*, %struct.clusterNode** %14, align 8, !dbg !2906, !tbaa !2622
  %16 = icmp eq %struct.clusterNode* %15, %1, !dbg !2908
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2909
  br i1 %16, label %17, label %7, !dbg !2909, !llvm.loop !2910

; <label>:17:                                     ; preds = %10
  %18 = call i64 @mstime() #6, !dbg !2912
  %19 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %13, i64 0, i32 1, !dbg !2914
  store i64 %18, i64* %19, align 8, !dbg !2915, !tbaa !2916
  br label %27, !dbg !2917

; <label>:20:                                     ; preds = %7
  %21 = call i8* @zmalloc(i64 16) #6, !dbg !2918
  %22 = bitcast i8* %21 to %struct.clusterNode**, !dbg !2919
  store %struct.clusterNode* %1, %struct.clusterNode** %22, align 8, !dbg !2920, !tbaa !2622
  %23 = call i64 @mstime() #6, !dbg !2921
  %24 = getelementptr inbounds i8, i8* %21, i64 8, !dbg !2922
  %25 = bitcast i8* %24 to i64*, !dbg !2922
  store i64 %23, i64* %25, align 8, !dbg !2923, !tbaa !2916
  %26 = call %struct.list* @listAddNodeTail(%struct.list* %5, i8* %21) #6, !dbg !2924
  br label %27, !dbg !2925

; <label>:27:                                     ; preds = %20, %17
  %28 = phi i32 [ 0, %17 ], [ 1, %20 ], !dbg !2926
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2927
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7, !dbg !2928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2928
  ret i32 %28, !dbg !2928
}

; Function Attrs: noredzone
declare dso_local void @listRewind(%struct.list*, %struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.listNode* @listNext(%struct.listIter*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.list* @listAddNodeTail(%struct.list*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterNodeCleanupFailureReports(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !2929 {
  %2 = alloca %struct.listIter, align 8
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2939
  %4 = load %struct.list*, %struct.list** %3, align 8, !dbg !2939, !tbaa !1188
  %5 = bitcast %struct.listIter* %2 to i8*, !dbg !2941
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7, !dbg !2941
  %6 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !2942, !tbaa !2943
  %7 = shl nsw i64 %6, 1, !dbg !2944
  %8 = tail call i64 @mstime() #6, !dbg !2946
  call void @listRewind(%struct.list* %4, %struct.listIter* nonnull %2) #6, !dbg !2949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2950
  %9 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #6, !dbg !2951
  %10 = icmp eq %struct.listNode* %9, null, !dbg !2953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2950
  br i1 %10, label %24, label %11, !dbg !2950

; <label>:11:                                     ; preds = %1, %21
  %12 = phi %struct.listNode* [ %22, %21 ], [ %9, %1 ]
  %13 = getelementptr inbounds %struct.listNode, %struct.listNode* %12, i64 0, i32 2, !dbg !2954
  %14 = bitcast i8** %13 to %struct.clusterNodeFailReport**, !dbg !2954
  %15 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %14, align 8, !dbg !2954, !tbaa !2617
  %16 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %15, i64 0, i32 1, !dbg !2957
  %17 = load i64, i64* %16, align 8, !dbg !2957, !tbaa !2916
  %18 = sub nsw i64 %8, %17, !dbg !2959
  %19 = icmp sgt i64 %18, %7, !dbg !2960
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2961
  br i1 %19, label %20, label %21, !dbg !2961

; <label>:20:                                     ; preds = %11
  call void @listDelNode(%struct.list* %4, %struct.listNode* nonnull %12) #6, !dbg !2962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2962
  br label %21, !dbg !2962

; <label>:21:                                     ; preds = %20, %11
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2950
  %22 = call %struct.listNode* @listNext(%struct.listIter* nonnull %2) #6, !dbg !2951
  %23 = icmp eq %struct.listNode* %22, null, !dbg !2953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2950
  br i1 %23, label %24, label %11, !dbg !2950, !llvm.loop !2963

; <label>:24:                                     ; preds = %21, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7, !dbg !2965
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2965
  ret void, !dbg !2965
}

; Function Attrs: noredzone
declare dso_local void @listDelNode(%struct.list*, %struct.listNode*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeDelFailureReport(%struct.clusterNode* nocapture readonly, %struct.clusterNode* readnone) local_unnamed_addr #0 !dbg !2585 {
  %3 = alloca %struct.listIter, align 8
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2968
  %5 = load %struct.list*, %struct.list** %4, align 8, !dbg !2968, !tbaa !1188
  %6 = bitcast %struct.listIter* %3 to i8*, !dbg !2970
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7, !dbg !2970
  call void @listRewind(%struct.list* %5, %struct.listIter* nonnull %3) #6, !dbg !2972
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2627
  br label %7, !dbg !2627

; <label>:7:                                      ; preds = %10, %2
  %8 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #6, !dbg !2973
  %9 = icmp eq %struct.listNode* %8, null, !dbg !2975
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2627
  br i1 %9, label %17, label %10, !dbg !2627

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.listNode, %struct.listNode* %8, i64 0, i32 2, !dbg !2976
  %12 = bitcast i8** %11 to %struct.clusterNodeFailReport**, !dbg !2976
  %13 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %12, align 8, !dbg !2976, !tbaa !2617
  %14 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %13, i64 0, i32 0, !dbg !2978
  %15 = load %struct.clusterNode*, %struct.clusterNode** %14, align 8, !dbg !2978, !tbaa !2622
  %16 = icmp eq %struct.clusterNode* %15, %1, !dbg !2979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2980
  br i1 %16, label %18, label %7, !dbg !2980, !llvm.loop !2626

; <label>:17:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2981
  br label %19, !dbg !2982

; <label>:18:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2981
  call void @listDelNode(%struct.list* %5, %struct.listNode* nonnull %8) #6, !dbg !2983
  call void @clusterNodeCleanupFailureReports(%struct.clusterNode* %0) #10, !dbg !2984
  br label %19, !dbg !2985

; <label>:19:                                     ; preds = %18, %17
  %20 = phi i32 [ 1, %18 ], [ 0, %17 ], !dbg !2986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2986
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7, !dbg !2987
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2987
  ret i32 %20, !dbg !2987
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeFailureReportsCount(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !2988 {
  tail call void @clusterNodeCleanupFailureReports(%struct.clusterNode* %0) #10, !dbg !2992
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !2993
  %3 = load %struct.list*, %struct.list** %2, align 8, !dbg !2993, !tbaa !1188
  %4 = getelementptr inbounds %struct.list, %struct.list* %3, i64 0, i32 5, !dbg !2993
  %5 = load i64, i64* %4, align 8, !dbg !2993, !tbaa !2994
  %6 = trunc i64 %5 to i32, !dbg !2993
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2995
  ret i32 %6, !dbg !2995
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeRemoveSlave(%struct.clusterNode* nocapture, %struct.clusterNode* readnone) local_unnamed_addr #0 !dbg !2387 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2999
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !3000
  %4 = load i32, i32* %3, align 4, !dbg !3000, !tbaa !1041
  %5 = icmp sgt i32 %4, 0, !dbg !3001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2432
  br i1 %5, label %6, label %43, !dbg !2432

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7
  %8 = load %struct.clusterNode**, %struct.clusterNode*** %7, align 8, !tbaa !1044
  br label %9, !dbg !2432

; <label>:9:                                      ; preds = %6, %40
  %10 = phi i64 [ 0, %6 ], [ %14, %40 ]
  %11 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %10, !dbg !3002
  %12 = load %struct.clusterNode*, %struct.clusterNode** %11, align 8, !dbg !3002, !tbaa !760
  %13 = icmp eq %struct.clusterNode* %12, %1, !dbg !3003
  %14 = add nuw i64 %10, 1, !dbg !3004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3005
  br i1 %13, label %15, label %40, !dbg !3005

; <label>:15:                                     ; preds = %9
  %16 = trunc i64 %14 to i32, !dbg !2998
  %17 = icmp sgt i32 %4, %16, !dbg !3006
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3007
  br i1 %17, label %18, label %32, !dbg !3007

; <label>:18:                                     ; preds = %15
  %19 = trunc i64 %10 to i32, !dbg !2998
  %20 = and i64 %10, 4294967295, !dbg !3002
  %21 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %20, !dbg !3002
  %22 = xor i32 %19, -1, !dbg !3008
  %23 = add i32 %4, %22, !dbg !3008
  %24 = bitcast %struct.clusterNode** %21 to i8*, !dbg !3010
  %25 = and i64 %14, 4294967295, !dbg !3011
  %26 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %8, i64 %25, !dbg !3011
  %27 = bitcast %struct.clusterNode** %26 to i8*, !dbg !3012
  %28 = sext i32 %23 to i64, !dbg !3013
  %29 = shl nsw i64 %28, 3, !dbg !3014
  %30 = tail call i8* @memmove(i8* %24, i8* nonnull %27, i64 %29) #6, !dbg !3015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3016
  %31 = load i32, i32* %3, align 4, !dbg !3017, !tbaa !1041
  br label %32, !dbg !3016

; <label>:32:                                     ; preds = %18, %15
  %33 = phi i32 [ %31, %18 ], [ %4, %15 ], !dbg !3017
  %34 = add nsw i32 %33, -1, !dbg !3017
  store i32 %34, i32* %3, align 4, !dbg !3017, !tbaa !1041
  %35 = icmp eq i32 %34, 0, !dbg !3018
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3019
  br i1 %35, label %36, label %43, !dbg !3019

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3020
  %38 = load i32, i32* %37, align 8, !dbg !3021, !tbaa !927
  %39 = and i32 %38, -257, !dbg !3021
  store i32 %39, i32* %37, align 8, !dbg !3021, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3022
  br label %43, !dbg !3022

; <label>:40:                                     ; preds = %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3023
  %41 = trunc i64 %14 to i32, !dbg !3001
  %42 = icmp sgt i32 %4, %41, !dbg !3001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !2432
  br i1 %42, label %9, label %43, !dbg !2432, !llvm.loop !2431

; <label>:43:                                     ; preds = %40, %2, %32, %36
  %44 = phi i32 [ 0, %36 ], [ 0, %32 ], [ -1, %2 ], [ -1, %40 ], !dbg !3024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3026
  ret i32 %44, !dbg !3026
}

; Function Attrs: noredzone
declare dso_local i8* @memmove(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zrealloc(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterCountNonFailingSlaves(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !3027 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3035
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !3037
  %3 = load i32, i32* %2, align 4, !dbg !3037, !tbaa !1041
  %4 = icmp sgt i32 %3, 0, !dbg !3039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3040
  br i1 %4, label %5, label %50, !dbg !3040

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7
  %7 = load %struct.clusterNode**, %struct.clusterNode*** %6, align 8, !tbaa !1044
  %8 = sext i32 %3 to i64
  %9 = and i64 %8, 1, !dbg !3040
  %10 = icmp eq i32 %3, 1, !dbg !3040
  br i1 %10, label %34, label %11, !dbg !3040

; <label>:11:                                     ; preds = %5
  %12 = sub nsw i64 %8, %9, !dbg !3040
  br label %13, !dbg !3040

; <label>:13:                                     ; preds = %54, %11
  %14 = phi i64 [ 0, %11 ], [ %56, %54 ]
  %15 = phi i32 [ 0, %11 ], [ %55, %54 ]
  %16 = phi i64 [ %12, %11 ], [ %57, %54 ]
  %17 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %14, !dbg !3041
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !3041, !tbaa !760
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 2, !dbg !3041
  %20 = load i32, i32* %19, align 8, !dbg !3041, !tbaa !927
  %21 = and i32 %20, 8, !dbg !3041
  %22 = icmp eq i32 %21, 0, !dbg !3041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3043
  br i1 %22, label %23, label %25, !dbg !3043

; <label>:23:                                     ; preds = %13
  %24 = add nsw i32 %15, 1, !dbg !3044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3045
  br label %25, !dbg !3045

; <label>:25:                                     ; preds = %13, %23
  %26 = phi i32 [ %15, %13 ], [ %24, %23 ], !dbg !3046
  %27 = or i64 %14, 1, !dbg !3047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3040
  %28 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %27, !dbg !3041
  %29 = load %struct.clusterNode*, %struct.clusterNode** %28, align 8, !dbg !3041, !tbaa !760
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 2, !dbg !3041
  %31 = load i32, i32* %30, align 8, !dbg !3041, !tbaa !927
  %32 = and i32 %31, 8, !dbg !3041
  %33 = icmp eq i32 %32, 0, !dbg !3041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3043
  br i1 %33, label %52, label %54, !dbg !3043

; <label>:34:                                     ; preds = %54, %5
  %35 = phi i32 [ undef, %5 ], [ %55, %54 ]
  %36 = phi i64 [ 0, %5 ], [ %56, %54 ]
  %37 = phi i32 [ 0, %5 ], [ %55, %54 ]
  %38 = icmp eq i64 %9, 0, !dbg !3043
  br i1 %38, label %50, label %39, !dbg !3043

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %36, !dbg !3041
  %41 = load %struct.clusterNode*, %struct.clusterNode** %40, align 8, !dbg !3041, !tbaa !760
  %42 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %41, i64 0, i32 2, !dbg !3041
  %43 = load i32, i32* %42, align 8, !dbg !3041, !tbaa !927
  %44 = and i32 %43, 8, !dbg !3041
  %45 = icmp eq i32 %44, 0, !dbg !3041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3043
  br i1 %45, label %46, label %48, !dbg !3043

; <label>:46:                                     ; preds = %39
  %47 = add nsw i32 %37, 1, !dbg !3044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3045
  br label %48, !dbg !3045

; <label>:48:                                     ; preds = %46, %39
  %49 = phi i32 [ %37, %39 ], [ %47, %46 ], !dbg !3046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3040
  br label %50, !dbg !3049

; <label>:50:                                     ; preds = %48, %34, %1
  %51 = phi i32 [ 0, %1 ], [ %35, %34 ], [ %49, %48 ], !dbg !3033
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3049
  ret i32 %51, !dbg !3049

; <label>:52:                                     ; preds = %25
  %53 = add nsw i32 %26, 1, !dbg !3044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3045
  br label %54, !dbg !3045

; <label>:54:                                     ; preds = %52, %25
  %55 = phi i32 [ %26, %25 ], [ %53, %52 ], !dbg !3046
  %56 = add nuw nsw i64 %14, 2, !dbg !3047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3040
  %57 = add i64 %16, -2, !dbg !3040
  %58 = icmp eq i64 %57, 0, !dbg !3040
  br i1 %58, label %34, label %13, !dbg !3040, !llvm.loop !3050
}

; Function Attrs: noredzone nounwind
define dso_local void @freeClusterNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3052 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3059
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !3061
  %3 = load i32, i32* %2, align 4, !dbg !3061, !tbaa !1041
  %4 = icmp sgt i32 %3, 0, !dbg !3063
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3064
  br i1 %4, label %5, label %47, !dbg !3064

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7
  %7 = load %struct.clusterNode**, %struct.clusterNode*** %6, align 8, !dbg !3065, !tbaa !1044
  %8 = sext i32 %3 to i64
  %9 = add nsw i64 %8, -1, !dbg !3064
  %10 = and i64 %8, 3, !dbg !3064
  %11 = icmp ult i64 %9, 3, !dbg !3064
  br i1 %11, label %35, label %12, !dbg !3064

; <label>:12:                                     ; preds = %5
  %13 = sub nsw i64 %8, %10, !dbg !3064
  br label %14, !dbg !3064

; <label>:14:                                     ; preds = %14, %12
  %15 = phi i64 [ 0, %12 ], [ %32, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %33, %14 ]
  %17 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %15, !dbg !3066
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !3066, !tbaa !760
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 8, !dbg !3067
  store %struct.clusterNode* null, %struct.clusterNode** %19, align 8, !dbg !3068, !tbaa !1025
  %20 = or i64 %15, 1, !dbg !3069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3064
  %21 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %20, !dbg !3066
  %22 = load %struct.clusterNode*, %struct.clusterNode** %21, align 8, !dbg !3066, !tbaa !760
  %23 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %22, i64 0, i32 8, !dbg !3067
  store %struct.clusterNode* null, %struct.clusterNode** %23, align 8, !dbg !3068, !tbaa !1025
  %24 = or i64 %15, 2, !dbg !3069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3064
  %25 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %24, !dbg !3066
  %26 = load %struct.clusterNode*, %struct.clusterNode** %25, align 8, !dbg !3066, !tbaa !760
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 8, !dbg !3067
  store %struct.clusterNode* null, %struct.clusterNode** %27, align 8, !dbg !3068, !tbaa !1025
  %28 = or i64 %15, 3, !dbg !3069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3064
  %29 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %28, !dbg !3066
  %30 = load %struct.clusterNode*, %struct.clusterNode** %29, align 8, !dbg !3066, !tbaa !760
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %30, i64 0, i32 8, !dbg !3067
  store %struct.clusterNode* null, %struct.clusterNode** %31, align 8, !dbg !3068, !tbaa !1025
  %32 = add nuw nsw i64 %15, 4, !dbg !3069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3064
  %33 = add i64 %16, -4, !dbg !3064
  %34 = icmp eq i64 %33, 0, !dbg !3064
  br i1 %34, label %35, label %14, !dbg !3064, !llvm.loop !3071

; <label>:35:                                     ; preds = %14, %5
  %36 = phi i64 [ 0, %5 ], [ %32, %14 ]
  %37 = icmp eq i64 %10, 0, !dbg !3064
  br i1 %37, label %47, label %38, !dbg !3064

; <label>:38:                                     ; preds = %35, %38
  %39 = phi i64 [ %44, %38 ], [ %36, %35 ]
  %40 = phi i64 [ %45, %38 ], [ %10, %35 ]
  %41 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %7, i64 %39, !dbg !3066
  %42 = load %struct.clusterNode*, %struct.clusterNode** %41, align 8, !dbg !3066, !tbaa !760
  %43 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %42, i64 0, i32 8, !dbg !3067
  store %struct.clusterNode* null, %struct.clusterNode** %43, align 8, !dbg !3068, !tbaa !1025
  %44 = add nuw nsw i64 %39, 1, !dbg !3069
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3064
  %45 = add i64 %40, -1, !dbg !3064
  %46 = icmp eq i64 %45, 0, !dbg !3064
  br i1 %46, label %47, label %38, !dbg !3064, !llvm.loop !3073

; <label>:47:                                     ; preds = %35, %38, %1
  %48 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3075
  %49 = load i32, i32* %48, align 8, !dbg !3075, !tbaa !927
  %50 = and i32 %49, 2, !dbg !3075
  %51 = icmp eq i32 %50, 0, !dbg !3075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3077
  br i1 %51, label %98, label %52, !dbg !3077

; <label>:52:                                     ; preds = %47
  %53 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !3078
  %54 = load %struct.clusterNode*, %struct.clusterNode** %53, align 8, !dbg !3078, !tbaa !1025
  %55 = icmp eq %struct.clusterNode* %54, null, !dbg !3079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3080
  br i1 %55, label %98, label %56, !dbg !3080

; <label>:56:                                     ; preds = %52
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3085
  %57 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 6, !dbg !3086
  %58 = load i32, i32* %57, align 4, !dbg !3086, !tbaa !1041
  %59 = icmp sgt i32 %58, 0, !dbg !3087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3088
  br i1 %59, label %60, label %97, !dbg !3088

; <label>:60:                                     ; preds = %56
  %61 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 7
  %62 = load %struct.clusterNode**, %struct.clusterNode*** %61, align 8, !tbaa !1044
  br label %63, !dbg !3088

; <label>:63:                                     ; preds = %94, %60
  %64 = phi i64 [ 0, %60 ], [ %68, %94 ]
  %65 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %62, i64 %64, !dbg !3089
  %66 = load %struct.clusterNode*, %struct.clusterNode** %65, align 8, !dbg !3089, !tbaa !760
  %67 = icmp eq %struct.clusterNode* %66, %0, !dbg !3090
  %68 = add nuw nsw i64 %64, 1, !dbg !3091
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3092
  br i1 %67, label %69, label %94, !dbg !3092

; <label>:69:                                     ; preds = %63
  %70 = trunc i64 %68 to i32, !dbg !3084
  %71 = icmp sgt i32 %58, %70, !dbg !3093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3094
  br i1 %71, label %72, label %86, !dbg !3094

; <label>:72:                                     ; preds = %69
  %73 = trunc i64 %64 to i32, !dbg !3084
  %74 = and i64 %64, 4294967295, !dbg !3089
  %75 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %62, i64 %74, !dbg !3089
  %76 = xor i32 %73, -1, !dbg !3095
  %77 = add i32 %58, %76, !dbg !3095
  %78 = bitcast %struct.clusterNode** %75 to i8*, !dbg !3097
  %79 = and i64 %68, 4294967295, !dbg !3098
  %80 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %62, i64 %79, !dbg !3098
  %81 = bitcast %struct.clusterNode** %80 to i8*, !dbg !3099
  %82 = sext i32 %77 to i64, !dbg !3100
  %83 = shl nsw i64 %82, 3, !dbg !3101
  %84 = tail call i8* @memmove(i8* %78, i8* nonnull %81, i64 %83) #6, !dbg !3102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3103
  %85 = load i32, i32* %57, align 4, !dbg !3104, !tbaa !1041
  br label %86, !dbg !3103

; <label>:86:                                     ; preds = %72, %69
  %87 = phi i32 [ %85, %72 ], [ %58, %69 ], !dbg !3104
  %88 = add nsw i32 %87, -1, !dbg !3104
  store i32 %88, i32* %57, align 4, !dbg !3104, !tbaa !1041
  %89 = icmp eq i32 %88, 0, !dbg !3105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3106
  br i1 %89, label %90, label %97, !dbg !3106

; <label>:90:                                     ; preds = %86
  %91 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 2, !dbg !3107
  %92 = load i32, i32* %91, align 8, !dbg !3108, !tbaa !927
  %93 = and i32 %92, -257, !dbg !3108
  store i32 %93, i32* %91, align 8, !dbg !3108, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3109
  br label %97, !dbg !3109

; <label>:94:                                     ; preds = %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3110
  %95 = trunc i64 %68 to i32, !dbg !3087
  %96 = icmp sgt i32 %58, %95, !dbg !3087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3088
  br i1 %96, label %63, label %97, !dbg !3088, !llvm.loop !2431

; <label>:97:                                     ; preds = %94, %56, %86, %90
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3111
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3112
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3113
  br label %98, !dbg !3113

; <label>:98:                                     ; preds = %52, %47, %97
  %99 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3114
  %100 = tail call i8* @sdsnewlen(i8* nonnull %99, i64 40) #6, !dbg !3115
  %101 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3117, !tbaa !788
  %102 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %101, i64 0, i32 4, !dbg !3117
  %103 = load %struct.dict*, %struct.dict** %102, align 8, !dbg !3117, !tbaa !837
  %104 = tail call i32 @dictDelete(%struct.dict* %103, i8* %100) #6, !dbg !3117
  %105 = icmp eq i32 %104, 0, !dbg !3117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3117
  br i1 %105, label %107, label %106, !dbg !3117

; <label>:106:                                    ; preds = %98
  tail call void @_serverAssert(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 876) #6, !dbg !3117
  tail call void @_exit(i32 1) #8, !dbg !3117
  unreachable

; <label>:107:                                    ; preds = %98
  tail call void @sdsfree(i8* %100) #6, !dbg !3118
  %108 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !3119
  %109 = load %struct.clusterLink*, %struct.clusterLink** %108, align 8, !dbg !3119, !tbaa !1178
  %110 = icmp eq %struct.clusterLink* %109, null, !dbg !3121
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3122
  br i1 %110, label %112, label %111, !dbg !3122

; <label>:111:                                    ; preds = %107
  tail call void @freeClusterLink(%struct.clusterLink* nonnull %109) #10, !dbg !3123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3123
  br label %112, !dbg !3123

; <label>:112:                                    ; preds = %107, %111
  %113 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !3124
  %114 = load %struct.list*, %struct.list** %113, align 8, !dbg !3124, !tbaa !1188
  tail call void @listRelease(%struct.list* %114) #6, !dbg !3125
  %115 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7, !dbg !3126
  %116 = bitcast %struct.clusterNode*** %115 to i8**, !dbg !3126
  %117 = load i8*, i8** %116, align 8, !dbg !3126, !tbaa !1044
  tail call void @zfree(i8* %117) #6, !dbg !3127
  %118 = bitcast %struct.clusterNode* %0 to i8*, !dbg !3128
  tail call void @zfree(i8* %118) #6, !dbg !3129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3130
  ret void, !dbg !3130
}

; Function Attrs: noredzone
declare dso_local void @listRelease(%struct.list*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dictAdd(%struct.dict*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictFind(%struct.dict*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterRenameNode(%struct.clusterNode*, i8*) local_unnamed_addr #0 !dbg !3131 {
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3141
  %4 = tail call i8* @sdsnewlen(i8* nonnull %3, i64 40) #6, !dbg !3142
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i64 0, i64 0), i8* nonnull %3, i8* %1) #6, !dbg !3144
  %5 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3145, !tbaa !788
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 4, !dbg !3146
  %7 = load %struct.dict*, %struct.dict** %6, align 8, !dbg !3146, !tbaa !837
  %8 = tail call i32 @dictDelete(%struct.dict* %7, i8* %4) #6, !dbg !3147
  tail call void @sdsfree(i8* %4) #6, !dbg !3149
  %9 = icmp eq i32 %8, 0, !dbg !3150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3150
  br i1 %9, label %11, label %10, !dbg !3150

; <label>:10:                                     ; preds = %2
  tail call void @_serverAssert(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 958) #6, !dbg !3150
  tail call void @_exit(i32 1) #8, !dbg !3150
  unreachable

; <label>:11:                                     ; preds = %2
  %12 = tail call i8* @memcpy(i8* nonnull %3, i8* %1, i64 40) #6, !dbg !3151
  %13 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3154, !tbaa !788
  %14 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %13, i64 0, i32 4, !dbg !3155
  %15 = load %struct.dict*, %struct.dict** %14, align 8, !dbg !3155, !tbaa !837
  %16 = tail call i8* @sdsnewlen(i8* nonnull %3, i64 40) #6, !dbg !3156
  %17 = bitcast %struct.clusterNode* %0 to i8*, !dbg !3157
  %18 = tail call i32 @dictAdd(%struct.dict* %15, i8* %16, i8* %17) #6, !dbg !3158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3161
  ret void, !dbg !3161
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterBumpConfigEpochWithoutConsensus() local_unnamed_addr #0 !dbg !3162 {
  %1 = tail call i64 @clusterGetMaxEpoch() #10, !dbg !3167
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3169, !tbaa !760
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 3, !dbg !3171
  %4 = load i64, i64* %3, align 8, !dbg !3171, !tbaa !1093
  %5 = icmp eq i64 %4, 0, !dbg !3172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3173
  br i1 %5, label %8, label %6, !dbg !3173

; <label>:6:                                      ; preds = %0
  %7 = icmp eq i64 %4, %1, !dbg !3174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3175
  br i1 %7, label %16, label %8, !dbg !3175

; <label>:8:                                      ; preds = %6, %0
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3176, !tbaa !788
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 1, !dbg !3178
  %11 = load i64, i64* %10, align 8, !dbg !3179, !tbaa !797
  %12 = add i64 %11, 1, !dbg !3179
  store i64 %12, i64* %10, align 8, !dbg !3179, !tbaa !797
  store i64 %12, i64* %3, align 8, !dbg !3180, !tbaa !1093
  %13 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 22, !dbg !3183
  %14 = load i32, i32* %13, align 8, !dbg !3184, !tbaa !1475
  %15 = or i32 %14, 12, !dbg !3184
  store i32 %15, i32* %13, align 8, !dbg !3184, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3185
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0), i64 %12) #6, !dbg !3186
  br label %16, !dbg !3187

; <label>:16:                                     ; preds = %6, %8
  %17 = phi i32 [ 0, %8 ], [ -1, %6 ], !dbg !3188
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3191
  ret i32 %17, !dbg !3191
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleConfigEpochCollision(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3192 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 3, !dbg !3196
  %3 = load i64, i64* %2, align 8, !dbg !3196, !tbaa !1093
  %4 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3198, !tbaa !760
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 3, !dbg !3199
  %6 = load i64, i64* %5, align 8, !dbg !3199, !tbaa !1093
  %7 = icmp eq i64 %3, %6, !dbg !3200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3201
  br i1 %7, label %8, label %37, !dbg !3201

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3202
  %10 = load i32, i32* %9, align 8, !dbg !3202, !tbaa !927
  %11 = and i32 %10, 1, !dbg !3202
  %12 = icmp eq i32 %11, 0, !dbg !3202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3203
  br i1 %12, label %37, label %13, !dbg !3203

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 2, !dbg !3204
  %15 = load i32, i32* %14, align 8, !dbg !3204, !tbaa !927
  %16 = and i32 %15, 1, !dbg !3204
  %17 = icmp eq i32 %16, 0, !dbg !3204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3205
  br i1 %17, label %37, label %18, !dbg !3205

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3206
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 1, i64 0, !dbg !3208
  %21 = tail call i32 @memcmp(i8* nonnull %19, i8* nonnull %20, i64 40) #6, !dbg !3209
  %22 = icmp slt i32 %21, 1, !dbg !3210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3211
  br i1 %22, label %37, label %23, !dbg !3211

; <label>:23:                                     ; preds = %18
  %24 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3212, !tbaa !788
  %25 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %24, i64 0, i32 1, !dbg !3213
  %26 = load i64, i64* %25, align 8, !dbg !3214, !tbaa !797
  %27 = add i64 %26, 1, !dbg !3214
  store i64 %27, i64* %25, align 8, !dbg !3214, !tbaa !797
  %28 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3215, !tbaa !760
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 3, !dbg !3216
  store i64 %27, i64* %29, align 8, !dbg !3217, !tbaa !1093
  %30 = tail call i32 @clusterSaveConfig(i32 1) #6, !dbg !3220
  %31 = icmp eq i32 %30, -1, !dbg !3221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3222
  br i1 %31, label %32, label %33, !dbg !3222

; <label>:32:                                     ; preds = %23
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !3223
  tail call void @exit(i32 1) #8, !dbg !3224
  unreachable

; <label>:33:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3225
  %34 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3226, !tbaa !760
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %34, i64 0, i32 3, !dbg !3227
  %36 = load i64, i64* %35, align 8, !dbg !3227, !tbaa !1093
  tail call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.37, i64 0, i64 0), i8* nonnull %19, i64 %36) #6, !dbg !3228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3229
  br label %37, !dbg !3229

; <label>:37:                                     ; preds = %13, %8, %1, %18, %33
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3229
  ret void, !dbg !3229
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterBlacklistCleanup() local_unnamed_addr #0 !dbg !3230 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3236, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 5, !dbg !3237
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !3237, !tbaa !1784
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #6, !dbg !3238
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3240
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #6, !dbg !3241
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !3243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3240
  br i1 %6, label %24, label %7, !dbg !3240

; <label>:7:                                      ; preds = %0, %21
  %8 = phi %struct.dictEntry* [ %22, %21 ], [ %5, %0 ]
  %9 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, !dbg !3244
  %10 = bitcast %union.anon.2* %9 to i64*, !dbg !3244
  %11 = load i64, i64* %10, align 8, !dbg !3244, !tbaa !745
  %12 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !3246, !tbaa !3248
  %13 = icmp slt i64 %11, %12, !dbg !3249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3250
  br i1 %13, label %14, label %21, !dbg !3250

; <label>:14:                                     ; preds = %7
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3251, !tbaa !788
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 5, !dbg !3252
  %17 = load %struct.dict*, %struct.dict** %16, align 8, !dbg !3252, !tbaa !1784
  %18 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 0, !dbg !3253
  %19 = load i8*, i8** %18, align 8, !dbg !3253, !tbaa !3254
  %20 = tail call i32 @dictDelete(%struct.dict* %17, i8* %19) #6, !dbg !3256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3256
  br label %21, !dbg !3256

; <label>:21:                                     ; preds = %14, %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3240
  %22 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #6, !dbg !3241
  %23 = icmp eq %struct.dictEntry* %22, null, !dbg !3243
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3240
  br i1 %23, label %24, label %7, !dbg !3240, !llvm.loop !3257

; <label>:24:                                     ; preds = %21, %0
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #6, !dbg !3259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3260
  ret void, !dbg !3260
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterBlacklistAddNode(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3261 {
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3267
  %3 = tail call i8* @sdsnewlen(i8* nonnull %2, i64 40) #6, !dbg !3268
  tail call void @clusterBlacklistCleanup() #10, !dbg !3270
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3271, !tbaa !788
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 5, !dbg !3273
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !3273, !tbaa !1784
  %7 = tail call i32 @dictAdd(%struct.dict* %6, i8* %3, i8* null) #6, !dbg !3274
  %8 = icmp eq i32 %7, 0, !dbg !3275
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3276
  br i1 %8, label %9, label %11, !dbg !3276

; <label>:9:                                      ; preds = %1
  %10 = tail call i8* @sdsdup(i8* %3) #6, !dbg !3277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3279
  br label %11, !dbg !3279

; <label>:11:                                     ; preds = %9, %1
  %12 = phi i8* [ %10, %9 ], [ %3, %1 ], !dbg !3280
  %13 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3281, !tbaa !788
  %14 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %13, i64 0, i32 5, !dbg !3282
  %15 = load %struct.dict*, %struct.dict** %14, align 8, !dbg !3282, !tbaa !1784
  %16 = tail call %struct.dictEntry* @dictFind(%struct.dict* %15, i8* %12) #6, !dbg !3283
  %17 = tail call i64 @time(i64* null) #6, !dbg !3285
  %18 = add nsw i64 %17, 60, !dbg !3285
  %19 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %16, i64 0, i32 1, !dbg !3285
  %20 = bitcast %union.anon.2* %19 to i64*, !dbg !3285
  store i64 %18, i64* %20, align 8, !dbg !3285, !tbaa !745
  tail call void @sdsfree(i8* %12) #6, !dbg !3287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3288
  ret void, !dbg !3288
}

; Function Attrs: noredzone
declare dso_local i8* @sdsdup(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @time(i64*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterBlacklistExists(i8*) local_unnamed_addr #0 !dbg !3289 {
  %2 = tail call i8* @sdsnewlen(i8* %0, i64 40) #6, !dbg !3295
  tail call void @clusterBlacklistCleanup() #10, !dbg !3297
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3298, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 5, !dbg !3299
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !3299, !tbaa !1784
  %6 = tail call %struct.dictEntry* @dictFind(%struct.dict* %5, i8* %2) #6, !dbg !3300
  %7 = icmp ne %struct.dictEntry* %6, null, !dbg !3301
  %8 = zext i1 %7 to i32, !dbg !3301
  tail call void @sdsfree(i8* %2) #6, !dbg !3303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3304
  ret i32 %8, !dbg !3304
}

; Function Attrs: noredzone nounwind
define dso_local void @markNodeAsFailingIfNeeded(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3305 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3311, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 3, !dbg !3312
  %5 = load i32, i32* %4, align 4, !dbg !3312, !tbaa !1773
  %6 = sdiv i32 %5, 2, !dbg !3313
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3315
  %8 = load i32, i32* %7, align 8, !dbg !3315, !tbaa !927
  %9 = and i32 %8, 4, !dbg !3315
  %10 = icmp eq i32 %9, 0, !dbg !3315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3317
  br i1 %10, label %56, label %11, !dbg !3317

; <label>:11:                                     ; preds = %1
  %12 = and i32 %8, 8, !dbg !3318
  %13 = icmp eq i32 %12, 0, !dbg !3318
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3320
  br i1 %13, label %14, label %56, !dbg !3320

; <label>:14:                                     ; preds = %11
  tail call void @clusterNodeCleanupFailureReports(%struct.clusterNode* nonnull %0) #6, !dbg !3323
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 20, !dbg !3324
  %16 = load %struct.list*, %struct.list** %15, align 8, !dbg !3324, !tbaa !1188
  %17 = getelementptr inbounds %struct.list, %struct.list* %16, i64 0, i32 5, !dbg !3324
  %18 = load i64, i64* %17, align 8, !dbg !3324, !tbaa !2994
  %19 = trunc i64 %18 to i32, !dbg !3324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3325
  %20 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3327, !tbaa !760
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %20, i64 0, i32 2, !dbg !3327
  %22 = load i32, i32* %21, align 8, !dbg !3327, !tbaa !927
  %23 = and i32 %22, 1, !dbg !3327
  %24 = icmp eq i32 %23, 0, !dbg !3327
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3329
  br i1 %24, label %27, label %25, !dbg !3329

; <label>:25:                                     ; preds = %14
  %26 = add nsw i32 %19, 1, !dbg !3330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3331
  br label %27, !dbg !3331

; <label>:27:                                     ; preds = %14, %25
  %28 = phi i32 [ %26, %25 ], [ %19, %14 ], !dbg !3332
  %29 = icmp sgt i32 %28, %6, !dbg !3333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3335
  br i1 %29, label %30, label %56, !dbg !3335

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3336
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i64 0, i64 0), i8* nonnull %31) #6, !dbg !3337
  %32 = load i32, i32* %7, align 8, !dbg !3338, !tbaa !927
  %33 = and i32 %32, -13, !dbg !3338
  %34 = or i32 %33, 8, !dbg !3339
  store i32 %34, i32* %7, align 8, !dbg !3339, !tbaa !927
  %35 = tail call i64 @mstime() #6, !dbg !3340
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 11, !dbg !3341
  store i64 %35, i64* %36, align 8, !dbg !3342, !tbaa !954
  %37 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3343, !tbaa !760
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 2, !dbg !3343
  %39 = load i32, i32* %38, align 8, !dbg !3343, !tbaa !927
  %40 = and i32 %39, 1, !dbg !3343
  %41 = icmp eq i32 %40, 0, !dbg !3343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3345
  br i1 %41, label %51, label %42, !dbg !3345

; <label>:42:                                     ; preds = %30
  %43 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !3356
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %43) #7, !dbg !3356
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 3) #6, !dbg !3359
  %44 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 18, !dbg !3360
  %45 = bitcast %union.clusterMsgData* %44 to i8*, !dbg !3361
  %46 = call i8* @memcpy(i8* nonnull %45, i8* nonnull %31, i64 40) #6, !dbg !3362
  %47 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !3363
  %48 = load i32, i32* %47, align 4, !dbg !3363, !tbaa !2758
  %49 = call i32 @lwip_htonl(i32 %48) #6, !dbg !3363
  %50 = zext i32 %49 to i64, !dbg !3363
  call void @clusterBroadcastMessage(i8* nonnull %43, i64 %50) #6, !dbg !3364
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %43) #7, !dbg !3365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3366
  br label %51, !dbg !3366

; <label>:51:                                     ; preds = %30, %42
  %52 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3369, !tbaa !788
  %53 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %52, i64 0, i32 22, !dbg !3370
  %54 = load i32, i32* %53, align 8, !dbg !3371, !tbaa !1475
  %55 = or i32 %54, 6, !dbg !3371
  store i32 %55, i32* %53, align 8, !dbg !3371, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3372
  br label %56, !dbg !3373

; <label>:56:                                     ; preds = %27, %11, %1, %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3374
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3373
  ret void, !dbg !3373
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendFail(i8*) local_unnamed_addr #0 !dbg !3347 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !3376
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %3) #7, !dbg !3376
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 3) #10, !dbg !3379
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 18, !dbg !3380
  %5 = bitcast %union.clusterMsgData* %4 to i8*, !dbg !3381
  %6 = call i8* @memcpy(i8* nonnull %5, i8* %0, i64 40) #6, !dbg !3382
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !3383
  %8 = load i32, i32* %7, align 4, !dbg !3383, !tbaa !2758
  %9 = call i32 @lwip_htonl(i32 %8) #6, !dbg !3383
  %10 = zext i32 %9 to i64, !dbg !3383
  call void @clusterBroadcastMessage(i8* nonnull %3, i64 %10) #10, !dbg !3384
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %3) #7, !dbg !3385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3385
  ret void, !dbg !3385
}

; Function Attrs: noredzone nounwind
define dso_local void @clearNodeFailureIfNeeded(%struct.clusterNode*) local_unnamed_addr #0 !dbg !3386 {
  %2 = tail call i64 @mstime() #6, !dbg !3391
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !3393
  %4 = load i32, i32* %3, align 8, !dbg !3393, !tbaa !927
  %5 = and i32 %4, 8, !dbg !3393
  %6 = icmp eq i32 %5, 0, !dbg !3393
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3393
  br i1 %6, label %7, label %8, !dbg !3393

; <label>:7:                                      ; preds = %1
  tail call void @_serverAssert(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 1226) #6, !dbg !3393
  tail call void @_exit(i32 1) #8, !dbg !3393
  unreachable

; <label>:8:                                      ; preds = %1
  %9 = and i32 %4, 2, !dbg !3394
  %10 = icmp eq i32 %9, 0, !dbg !3394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3396
  br i1 %10, label %11, label %15, !dbg !3396

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !3397
  %13 = load i32, i32* %12, align 8, !dbg !3397, !tbaa !1164
  %14 = icmp eq i32 %13, 0, !dbg !3398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3399
  br i1 %14, label %15, label %24, !dbg !3399

; <label>:15:                                     ; preds = %8, %11
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3400
  %17 = select i1 %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), !dbg !3402
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.40, i64 0, i64 0), i8* nonnull %16, i8* %17) #6, !dbg !3403
  %18 = load i32, i32* %3, align 8, !dbg !3404, !tbaa !927
  %19 = and i32 %18, -9, !dbg !3404
  store i32 %19, i32* %3, align 8, !dbg !3404, !tbaa !927
  %20 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3407, !tbaa !788
  %21 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %20, i64 0, i32 22, !dbg !3408
  %22 = load i32, i32* %21, align 8, !dbg !3409, !tbaa !1475
  %23 = or i32 %22, 6, !dbg !3409
  store i32 %23, i32* %21, align 8, !dbg !3409, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3411
  br label %24, !dbg !3411

; <label>:24:                                     ; preds = %15, %11
  %25 = phi i32 [ %19, %15 ], [ %4, %11 ], !dbg !3412
  %26 = and i32 %25, 1, !dbg !3412
  %27 = icmp eq i32 %26, 0, !dbg !3412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3414
  br i1 %27, label %47, label %28, !dbg !3414

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !3415
  %30 = load i32, i32* %29, align 8, !dbg !3415, !tbaa !1164
  %31 = icmp sgt i32 %30, 0, !dbg !3416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3417
  br i1 %31, label %32, label %47, !dbg !3417

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 11, !dbg !3418
  %34 = load i64, i64* %33, align 8, !dbg !3418, !tbaa !954
  %35 = sub nsw i64 %2, %34, !dbg !3419
  %36 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !3420, !tbaa !2943
  %37 = shl nsw i64 %36, 1, !dbg !3421
  %38 = icmp sgt i64 %35, %37, !dbg !3422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3423
  br i1 %38, label %39, label %47, !dbg !3423

; <label>:39:                                     ; preds = %32
  %40 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !3424
  tail call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.43, i64 0, i64 0), i8* nonnull %40) #6, !dbg !3426
  %41 = load i32, i32* %3, align 8, !dbg !3427, !tbaa !927
  %42 = and i32 %41, -9, !dbg !3427
  store i32 %42, i32* %3, align 8, !dbg !3427, !tbaa !927
  %43 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3430, !tbaa !788
  %44 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %43, i64 0, i32 22, !dbg !3431
  %45 = load i32, i32* %44, align 8, !dbg !3432, !tbaa !1475
  %46 = or i32 %45, 6, !dbg !3432
  store i32 %46, i32* %44, align 8, !dbg !3432, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3434
  br label %47, !dbg !3434

; <label>:47:                                     ; preds = %24, %39, %32, %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3435
  ret void, !dbg !3435
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterHandshakeInProgress(i8* readonly, i32, i32) local_unnamed_addr #0 !dbg !3436 {
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3450, !tbaa !788
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 4, !dbg !3451
  %6 = load %struct.dict*, %struct.dict** %5, align 8, !dbg !3451, !tbaa !837
  %7 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %6) #6, !dbg !3452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3454
  %8 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %7) #6, !dbg !3455
  %9 = icmp eq %struct.dictEntry* %8, null, !dbg !3457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3454
  br i1 %9, label %35, label %10, !dbg !3454

; <label>:10:                                     ; preds = %3, %32
  %11 = phi %struct.dictEntry* [ %33, %32 ], [ %8, %3 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 1, i32 0, !dbg !3458
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !3458
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !3458, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !3460
  %16 = load i32, i32* %15, align 8, !dbg !3460, !tbaa !927
  %17 = and i32 %16, 32, !dbg !3460
  %18 = icmp eq i32 %17, 0, !dbg !3460
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3462
  br i1 %18, label %32, label %19, !dbg !3462

; <label>:19:                                     ; preds = %10
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 16, i64 0, !dbg !3463
  %21 = tail call i32 @strcasecmp(i8* nonnull %20, i8* %0) #9, !dbg !3465
  %22 = icmp eq i32 %21, 0, !dbg !3465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3466
  br i1 %22, label %23, label %32, !dbg !3466

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 17, !dbg !3467
  %25 = load i32, i32* %24, align 8, !dbg !3467, !tbaa !900
  %26 = icmp eq i32 %25, %1, !dbg !3468
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3469
  br i1 %26, label %27, label %32, !dbg !3469

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 18, !dbg !3470
  %29 = load i32, i32* %28, align 4, !dbg !3470, !tbaa !907
  %30 = icmp eq i32 %29, %2, !dbg !3471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3472
  br i1 %30, label %31, label %32, !dbg !3472

; <label>:31:                                     ; preds = %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3473
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %35

; <label>:32:                                     ; preds = %23, %27, %19, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3474
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %33 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %7) #6, !dbg !3455
  %34 = icmp eq %struct.dictEntry* %33, null, !dbg !3457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3454
  br i1 %34, label %35, label %10, !dbg !3454

; <label>:35:                                     ; preds = %32, %3, %31
  %36 = phi i32 [ 1, %31 ], [ 0, %3 ], [ 0, %32 ]
  tail call void @dictReleaseIterator(%struct.dictIterator* %7) #6, !dbg !3475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3476
  ret i32 %36, !dbg !3476
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterStartHandshake(i8*, i32, i32) local_unnamed_addr #0 !dbg !3477 {
  %4 = alloca [46 x i8], align 16
  %5 = alloca %struct.sockaddr_storage, align 4
  %6 = getelementptr inbounds [46 x i8], [46 x i8]* %4, i64 0, i64 0, !dbg !3497
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %6) #7, !dbg !3497
  %7 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 0, !dbg !3499
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %7) #7, !dbg !3499
  %8 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 3, !dbg !3500
  %9 = bitcast [3 x i32]* %8 to i8*, !dbg !3502
  %10 = call i32 @inet_pton(i32 2, i8* %0, i8* nonnull %9) #6, !dbg !3503
  %11 = icmp eq i32 %10, 0, !dbg !3503
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3504
  br i1 %11, label %12, label %19, !dbg !3504

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 3, i64 1, !dbg !3505
  %14 = bitcast i32* %13 to i8*, !dbg !3507
  %15 = call i32 @inet_pton(i32 10, i8* %0, i8* nonnull %14) #6, !dbg !3508
  %16 = icmp eq i32 %15, 0, !dbg !3508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3509
  br i1 %16, label %17, label %19, !dbg !3509

; <label>:17:                                     ; preds = %12
  %18 = call i32* @__errno() #6, !dbg !3510
  store i32 22, i32* %18, align 4, !dbg !3512, !tbaa !708
  br label %94, !dbg !3513

; <label>:19:                                     ; preds = %12, %3
  %20 = phi i8 [ 2, %3 ], [ 10, %12 ]
  %21 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 1, !dbg !3514
  store i8 %20, i8* %21, align 1, !dbg !3514, !tbaa !3516
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %22 = add i32 %1, -1, !dbg !3518
  %23 = icmp ugt i32 %22, 65534, !dbg !3518
  %24 = add i32 %2, -1, !dbg !3518
  %25 = icmp ugt i32 %24, 65534, !dbg !3518
  %26 = or i1 %23, %25, !dbg !3518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3518
  br i1 %26, label %27, label %29, !dbg !3518

; <label>:27:                                     ; preds = %19
  %28 = call i32* @__errno() #6, !dbg !3520
  store i32 22, i32* %28, align 4, !dbg !3522, !tbaa !708
  br label %94, !dbg !3523

; <label>:29:                                     ; preds = %19
  %30 = call i8* @memset(i8* nonnull %6, i32 0, i64 46) #6, !dbg !3524
  %31 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 1, !dbg !3525
  %32 = load i8, i8* %31, align 1, !dbg !3525, !tbaa !3516
  %33 = icmp eq i8 %32, 2, !dbg !3527
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3528
  br i1 %33, label %34, label %36, !dbg !3528

; <label>:34:                                     ; preds = %29
  %35 = call i8* @inet_ntop(i32 2, i8* nonnull %9, i8* nonnull %6, i32 46) #6, !dbg !3529
  br label %40, !dbg !3529

; <label>:36:                                     ; preds = %29
  %37 = getelementptr inbounds %struct.sockaddr_storage, %struct.sockaddr_storage* %5, i64 0, i32 3, i64 1, !dbg !3530
  %38 = bitcast i32* %37 to i8*, !dbg !3531
  %39 = call i8* @inet_ntop(i32 10, i8* nonnull %38, i8* nonnull %6, i32 46) #6, !dbg !3532
  br label %40

; <label>:40:                                     ; preds = %36, %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %41 = call i32 @clusterHandshakeInProgress(i8* nonnull %6, i32 %1, i32 %2) #10, !dbg !3533
  %42 = icmp eq i32 %41, 0, !dbg !3533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3535
  br i1 %42, label %45, label %43, !dbg !3535

; <label>:43:                                     ; preds = %40
  %44 = call i32* @__errno() #6, !dbg !3536
  store i32 11, i32* %44, align 4, !dbg !3538, !tbaa !708
  br label %94, !dbg !3539

; <label>:45:                                     ; preds = %40
  %46 = call i8* @zmalloc(i64 2264) #6, !dbg !3543
  %47 = getelementptr inbounds i8, i8* %46, i64 8, !dbg !3545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3546
  call void @getRandomHexChars(i8* nonnull %47, i64 40) #6, !dbg !3547
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %48 = call i64 @mstime() #6, !dbg !3548
  %49 = bitcast i8* %46 to i64*, !dbg !3549
  store i64 %48, i64* %49, align 8, !dbg !3550, !tbaa !1155
  %50 = getelementptr inbounds i8, i8* %46, i64 56, !dbg !3551
  %51 = bitcast i8* %50 to i64*, !dbg !3551
  store i64 0, i64* %51, align 8, !dbg !3552, !tbaa !1093
  %52 = getelementptr inbounds i8, i8* %46, i64 48, !dbg !3553
  %53 = bitcast i8* %52 to i32*, !dbg !3553
  store i32 160, i32* %53, align 8, !dbg !3554, !tbaa !927
  %54 = getelementptr inbounds i8, i8* %46, i64 64, !dbg !3555
  %55 = call i8* @memset(i8* nonnull %54, i32 0, i64 2048) #6, !dbg !3556
  %56 = getelementptr inbounds i8, i8* %46, i64 2112, !dbg !3557
  %57 = bitcast i8* %56 to i32*, !dbg !3557
  store i32 0, i32* %57, align 8, !dbg !3558, !tbaa !1164
  %58 = getelementptr inbounds i8, i8* %46, i64 2116, !dbg !3559
  %59 = bitcast i8* %58 to i32*, !dbg !3559
  store i32 0, i32* %59, align 4, !dbg !3560, !tbaa !1041
  %60 = getelementptr inbounds i8, i8* %46, i64 2120, !dbg !3561
  %61 = bitcast i8* %60 to %struct.clusterNode***, !dbg !3561
  store %struct.clusterNode** null, %struct.clusterNode*** %61, align 8, !dbg !3562, !tbaa !1044
  %62 = getelementptr inbounds i8, i8* %46, i64 2128, !dbg !3563
  %63 = bitcast i8* %62 to %struct.clusterNode**, !dbg !3563
  store %struct.clusterNode* null, %struct.clusterNode** %63, align 8, !dbg !3564, !tbaa !1025
  %64 = getelementptr inbounds i8, i8* %46, i64 2136, !dbg !3565
  %65 = bitcast i8* %64 to <2 x i64>*, !dbg !3566
  store <2 x i64> zeroinitializer, <2 x i64>* %65, align 8, !dbg !3566, !tbaa !1173
  %66 = getelementptr inbounds i8, i8* %46, i64 2152, !dbg !3567
  %67 = bitcast i8* %66 to i64*, !dbg !3567
  store i64 0, i64* %67, align 8, !dbg !3568, !tbaa !954
  %68 = getelementptr inbounds i8, i8* %46, i64 2248, !dbg !3569
  %69 = bitcast i8* %68 to %struct.clusterLink**, !dbg !3569
  store %struct.clusterLink* null, %struct.clusterLink** %69, align 8, !dbg !3570, !tbaa !1178
  %70 = getelementptr inbounds i8, i8* %46, i64 2192, !dbg !3571
  %71 = call i8* @memset(i8* nonnull %70, i32 0, i64 46) #6, !dbg !3572
  %72 = getelementptr inbounds i8, i8* %46, i64 2240, !dbg !3573
  %73 = bitcast i8* %72 to i32*, !dbg !3573
  store i32 0, i32* %73, align 8, !dbg !3574, !tbaa !900
  %74 = getelementptr inbounds i8, i8* %46, i64 2244, !dbg !3575
  %75 = bitcast i8* %74 to i32*, !dbg !3575
  store i32 0, i32* %75, align 4, !dbg !3576, !tbaa !907
  %76 = call %struct.list* @listCreate() #6, !dbg !3577
  %77 = getelementptr inbounds i8, i8* %46, i64 2256, !dbg !3578
  %78 = bitcast i8* %77 to %struct.list**, !dbg !3578
  store %struct.list* %76, %struct.list** %78, align 8, !dbg !3579, !tbaa !1188
  %79 = getelementptr inbounds i8, i8* %46, i64 2160, !dbg !3580
  %80 = bitcast i8* %79 to i64*, !dbg !3580
  store i64 0, i64* %80, align 8, !dbg !3581, !tbaa !1191
  %81 = getelementptr inbounds i8, i8* %46, i64 2176, !dbg !3582
  %82 = bitcast i8* %81 to i64*, !dbg !3582
  store i64 0, i64* %82, align 8, !dbg !3583, !tbaa !1194
  %83 = getelementptr inbounds i8, i8* %46, i64 2168, !dbg !3584
  %84 = bitcast i8* %83 to i64*, !dbg !3584
  store i64 0, i64* %84, align 8, !dbg !3585, !tbaa !1197
  %85 = getelementptr inbounds i8, i8* %46, i64 2184, !dbg !3586
  %86 = bitcast i8* %85 to i64*, !dbg !3586
  store i64 0, i64* %86, align 8, !dbg !3587, !tbaa !1200
  %87 = getelementptr inbounds %struct.list, %struct.list* %76, i64 0, i32 3, !dbg !3588
  store void (i8*)* @zfree, void (i8*)** %87, align 8, !dbg !3588, !tbaa !1202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3589
  %88 = call i8* @memcpy(i8* nonnull %70, i8* nonnull %6, i64 46) #6, !dbg !3591
  store i32 %1, i32* %73, align 8, !dbg !3592, !tbaa !900
  store i32 %2, i32* %75, align 4, !dbg !3593, !tbaa !907
  %89 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3596, !tbaa !788
  %90 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %89, i64 0, i32 4, !dbg !3597
  %91 = load %struct.dict*, %struct.dict** %90, align 8, !dbg !3597, !tbaa !837
  %92 = call i8* @sdsnewlen(i8* nonnull %47, i64 40) #6, !dbg !3598
  %93 = call i32 @dictAdd(%struct.dict* %91, i8* %92, i8* %46) #6, !dbg !3599
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3601
  br label %94, !dbg !3602

; <label>:94:                                     ; preds = %45, %43, %27, %17
  %95 = phi i32 [ 0, %27 ], [ 0, %43 ], [ 1, %45 ], [ 0, %17 ], !dbg !3603
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3603
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %7) #7, !dbg !3604
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %6) #7, !dbg !3604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3604
  ret i32 %95, !dbg !3604
}

; Function Attrs: noredzone
declare dso_local i32 @inet_pton(i32, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @inet_ntop(i32, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterProcessGossipSection(%struct.clusterMsg*, %struct.clusterLink* nocapture readonly) local_unnamed_addr #0 !dbg !3605 {
  %3 = alloca %struct.listIter, align 8
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 5, !dbg !3625
  %5 = load i16, i16* %4, align 2, !dbg !3625, !tbaa !3626
  %6 = tail call zeroext i16 @lwip_htons(i16 zeroext %5) #6, !dbg !3625
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 18, !dbg !3628
  %8 = bitcast %union.clusterMsgData* %7 to %struct.clusterMsgDataGossip*, !dbg !3629
  %9 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %1, i64 0, i32 4, !dbg !3631
  %10 = load %struct.clusterNode*, %struct.clusterNode** %9, align 8, !dbg !3631, !tbaa !2154
  %11 = icmp eq %struct.clusterNode* %10, null, !dbg !3632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3632
  br i1 %11, label %12, label %26, !dbg !3632

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 9, i64 0, !dbg !3633
  %14 = tail call i8* @sdsnewlen(i8* nonnull %13, i64 40) #6, !dbg !3636
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3638, !tbaa !788
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 4, !dbg !3639
  %17 = load %struct.dict*, %struct.dict** %16, align 8, !dbg !3639, !tbaa !837
  %18 = tail call %struct.dictEntry* @dictFind(%struct.dict* %17, i8* %14) #6, !dbg !3640
  tail call void @sdsfree(i8* %14) #6, !dbg !3642
  %19 = icmp eq %struct.dictEntry* %18, null, !dbg !3643
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3644
  br i1 %19, label %24, label %20, !dbg !3644

; <label>:20:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %18, i64 0, i32 1, i32 0, !dbg !3645
  %22 = bitcast i8** %21 to %struct.clusterNode**, !dbg !3645
  %23 = load %struct.clusterNode*, %struct.clusterNode** %22, align 8, !dbg !3645, !tbaa !745
  br label %24, !dbg !3646

; <label>:24:                                     ; preds = %12, %20
  %25 = phi %struct.clusterNode* [ %23, %20 ], [ null, %12 ], !dbg !3647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3649
  br label %26, !dbg !3632

; <label>:26:                                     ; preds = %2, %24
  %27 = phi %struct.clusterNode* [ %25, %24 ], [ %10, %2 ], !dbg !3632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3632
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3651
  %28 = icmp eq i16 %6, 0, !dbg !3651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3651
  br i1 %28, label %210, label %29, !dbg !3651

; <label>:29:                                     ; preds = %26
  %30 = icmp eq %struct.clusterNode* %27, null
  %31 = icmp ne %struct.clusterNode* %27, null
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %27, i64 0, i32 2
  %33 = bitcast %struct.listIter* %3 to i8*
  %34 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %27, i64 0, i32 1, i64 0
  br label %35, !dbg !3651

; <label>:35:                                     ; preds = %29, %207
  %36 = phi i16 [ %6, %29 ], [ %38, %207 ]
  %37 = phi %struct.clusterMsgDataGossip* [ %8, %29 ], [ %208, %207 ]
  %38 = add i16 %36, -1, !dbg !3652
  %39 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 6, !dbg !3653
  %40 = load i16, i16* %39, align 2, !dbg !3653, !tbaa !3654
  %41 = call zeroext i16 @lwip_htons(i16 zeroext %40) #6, !dbg !3653
  %42 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 100), align 8, !dbg !3657, !tbaa !3659
  %43 = icmp eq i32 %42, 0, !dbg !3660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3661
  br i1 %43, label %46, label %44, !dbg !3661

; <label>:44:                                     ; preds = %35
  %45 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 0, i64 0, !dbg !3662
  br label %59, !dbg !3661

; <label>:46:                                     ; preds = %35
  %47 = call i8* @sdsempty() #6, !dbg !3663
  %48 = call i8* @representClusterNodeFlags(i8* %47, i16 zeroext %41) #10, !dbg !3665
  %49 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 0, i64 0, !dbg !3667
  %50 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 3, i64 0, !dbg !3668
  %51 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 4, !dbg !3669
  %52 = load i16, i16* %51, align 2, !dbg !3669, !tbaa !3670
  %53 = call zeroext i16 @lwip_htons(i16 zeroext %52) #6, !dbg !3669
  %54 = zext i16 %53 to i32, !dbg !3669
  %55 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 5, !dbg !3671
  %56 = load i16, i16* %55, align 4, !dbg !3671, !tbaa !3672
  %57 = call zeroext i16 @lwip_htons(i16 zeroext %56) #6, !dbg !3671
  %58 = zext i16 %57 to i32, !dbg !3671
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0), i8* %49, i8* nonnull %50, i32 %54, i32 %58, i8* %48) #6, !dbg !3673
  call void @sdsfree(i8* %48) #6, !dbg !3674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3675
  br label %59, !dbg !3675

; <label>:59:                                     ; preds = %44, %46
  %60 = phi i8* [ %45, %44 ], [ %49, %46 ], !dbg !3662
  %61 = call i8* @sdsnewlen(i8* %60, i64 40) #6, !dbg !3678
  %62 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3680, !tbaa !788
  %63 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %62, i64 0, i32 4, !dbg !3681
  %64 = load %struct.dict*, %struct.dict** %63, align 8, !dbg !3681, !tbaa !837
  %65 = call %struct.dictEntry* @dictFind(%struct.dict* %64, i8* %61) #6, !dbg !3682
  call void @sdsfree(i8* %61) #6, !dbg !3684
  %66 = icmp eq %struct.dictEntry* %65, null, !dbg !3685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3686
  br i1 %66, label %67, label %68, !dbg !3686

; <label>:67:                                     ; preds = %59
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3687
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3688
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3691
  br i1 %30, label %207, label %186, !dbg !3693

; <label>:68:                                     ; preds = %59
  %69 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %65, i64 0, i32 1, i32 0, !dbg !3696
  %70 = bitcast i8** %69 to %struct.clusterNode**, !dbg !3696
  %71 = load %struct.clusterNode*, %struct.clusterNode** %70, align 8, !dbg !3696, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3697
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3688
  %72 = icmp eq %struct.clusterNode* %71, null, !dbg !3698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3690
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3691
  br i1 %72, label %185, label %73, !dbg !3690

; <label>:73:                                     ; preds = %68
  br i1 %31, label %74, label %106, !dbg !3699

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* %32, align 8, !dbg !3700, !tbaa !927
  %76 = and i32 %75, 1, !dbg !3700
  %77 = icmp eq i32 %76, 0, !dbg !3700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3701
  br i1 %77, label %106, label %78, !dbg !3701

; <label>:78:                                     ; preds = %74
  %79 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !3702, !tbaa !760
  %80 = icmp eq %struct.clusterNode* %71, %79, !dbg !3703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3704
  br i1 %80, label %106, label %81, !dbg !3704

; <label>:81:                                     ; preds = %78
  %82 = and i16 %41, 12, !dbg !3705
  %83 = icmp eq i16 %82, 0, !dbg !3705
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3708
  br i1 %83, label %90, label %84, !dbg !3708

; <label>:84:                                     ; preds = %81
  %85 = call i32 @clusterNodeAddFailureReport(%struct.clusterNode* nonnull %71, %struct.clusterNode* nonnull %27) #10, !dbg !3709
  %86 = icmp eq i32 %85, 0, !dbg !3709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3712
  br i1 %86, label %89, label %87, !dbg !3712

; <label>:87:                                     ; preds = %84
  %88 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 1, i64 0, !dbg !3713
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.45, i64 0, i64 0), i8* nonnull %34, i8* nonnull %88) #6, !dbg !3715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3716
  br label %89, !dbg !3716

; <label>:89:                                     ; preds = %84, %87
  call void @markNodeAsFailingIfNeeded(%struct.clusterNode* nonnull %71) #10, !dbg !3717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3718
  br label %106, !dbg !3718

; <label>:90:                                     ; preds = %81
  %91 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 20, !dbg !3724
  %92 = load %struct.list*, %struct.list** %91, align 8, !dbg !3724, !tbaa !1188
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7, !dbg !3726
  call void @listRewind(%struct.list* %92, %struct.listIter* nonnull %3) #6, !dbg !3728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3729
  br label %93, !dbg !3729

; <label>:93:                                     ; preds = %96, %90
  %94 = call %struct.listNode* @listNext(%struct.listIter* nonnull %3) #6, !dbg !3730
  %95 = icmp eq %struct.listNode* %94, null, !dbg !3732
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3729
  br i1 %95, label %103, label %96, !dbg !3729

; <label>:96:                                     ; preds = %93
  %97 = getelementptr inbounds %struct.listNode, %struct.listNode* %94, i64 0, i32 2, !dbg !3733
  %98 = bitcast i8** %97 to %struct.clusterNodeFailReport**, !dbg !3733
  %99 = load %struct.clusterNodeFailReport*, %struct.clusterNodeFailReport** %98, align 8, !dbg !3733, !tbaa !2617
  %100 = getelementptr inbounds %struct.clusterNodeFailReport, %struct.clusterNodeFailReport* %99, i64 0, i32 0, !dbg !3735
  %101 = load %struct.clusterNode*, %struct.clusterNode** %100, align 8, !dbg !3735, !tbaa !2622
  %102 = icmp eq %struct.clusterNode* %101, %27, !dbg !3736
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3737
  br i1 %102, label %104, label %93, !dbg !3737, !llvm.loop !2626

; <label>:103:                                    ; preds = %93
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3739
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7, !dbg !3740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3741
  br label %106, !dbg !3741

; <label>:104:                                    ; preds = %96
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3738
  call void @listDelNode(%struct.list* %92, %struct.listNode* nonnull %94) #6, !dbg !3742
  call void @clusterNodeCleanupFailureReports(%struct.clusterNode* nonnull %71) #6, !dbg !3743
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3744
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7, !dbg !3740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3741
  %105 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 1, i64 0, !dbg !3745
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.46, i64 0, i64 0), i8* nonnull %34, i8* nonnull %105) #6, !dbg !3747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3748
  br label %106, !dbg !3748

; <label>:106:                                    ; preds = %103, %78, %74, %89, %104, %73
  %107 = zext i16 %41 to i32, !dbg !3749
  %108 = and i32 %107, 12, !dbg !3750
  %109 = icmp ne i32 %108, 0, !dbg !3750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3751
  br i1 %109, label %136, label %110, !dbg !3751

; <label>:110:                                    ; preds = %106
  %111 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 9, !dbg !3752
  %112 = load i64, i64* %111, align 8, !dbg !3752, !tbaa !1078
  %113 = icmp eq i64 %112, 0, !dbg !3753
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3754
  br i1 %113, label %114, label %136, !dbg !3754

; <label>:114:                                    ; preds = %110
  call void @clusterNodeCleanupFailureReports(%struct.clusterNode* nonnull %71) #6, !dbg !3757
  %115 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 20, !dbg !3758
  %116 = load %struct.list*, %struct.list** %115, align 8, !dbg !3758, !tbaa !1188
  %117 = getelementptr inbounds %struct.list, %struct.list* %116, i64 0, i32 5, !dbg !3758
  %118 = load i64, i64* %117, align 8, !dbg !3758, !tbaa !2994
  %119 = trunc i64 %118 to i32, !dbg !3758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3759
  %120 = icmp eq i32 %119, 0, !dbg !3760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3761
  br i1 %120, label %121, label %136, !dbg !3761

; <label>:121:                                    ; preds = %114
  %122 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 2, !dbg !3762
  %123 = load i32, i32* %122, align 4, !dbg !3762, !tbaa !3763
  %124 = call i32 @lwip_htonl(i32 %123) #6, !dbg !3762
  %125 = zext i32 %124 to i64, !dbg !3762
  %126 = mul nuw nsw i64 %125, 1000, !dbg !3765
  %127 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 254), align 8, !dbg !3766, !tbaa !3768
  %128 = add nsw i64 %127, 500, !dbg !3769
  %129 = icmp sgt i64 %126, %128, !dbg !3770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3771
  br i1 %129, label %135, label %130, !dbg !3771

; <label>:130:                                    ; preds = %121
  %131 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 10, !dbg !3772
  %132 = load i64, i64* %131, align 8, !dbg !3772, !tbaa !1087
  %133 = icmp sgt i64 %126, %132, !dbg !3773
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3774
  br i1 %133, label %134, label %135, !dbg !3774

; <label>:134:                                    ; preds = %130
  store i64 %126, i64* %131, align 8, !dbg !3775, !tbaa !1087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3777
  br label %135, !dbg !3777

; <label>:135:                                    ; preds = %121, %134, %130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3778
  br label %136, !dbg !3778

; <label>:136:                                    ; preds = %135, %114, %110, %106
  %137 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 2, !dbg !3779
  %138 = load i32, i32* %137, align 8, !dbg !3779, !tbaa !927
  %139 = and i32 %138, 12, !dbg !3781
  %140 = icmp eq i32 %139, 0, !dbg !3781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3782
  br i1 %140, label %207, label %141, !dbg !3782

; <label>:141:                                    ; preds = %136
  %142 = and i32 %107, 64, !dbg !3783
  %143 = icmp eq i32 %142, 0, !dbg !3783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3784
  br i1 %143, label %144, label %207, !dbg !3784

; <label>:144:                                    ; preds = %141
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3785
  br i1 %109, label %207, label %145, !dbg !3785

; <label>:145:                                    ; preds = %144
  %146 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 16, i64 0, !dbg !3786
  %147 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 3, i64 0, !dbg !3787
  %148 = call i32 @strcasecmp(i8* nonnull %146, i8* nonnull %147) #9, !dbg !3788
  %149 = icmp eq i32 %148, 0, !dbg !3788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3789
  br i1 %149, label %150, label %166, !dbg !3789

; <label>:150:                                    ; preds = %145
  %151 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 17, !dbg !3790
  %152 = load i32, i32* %151, align 8, !dbg !3790, !tbaa !900
  %153 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 4, !dbg !3791
  %154 = load i16, i16* %153, align 2, !dbg !3791, !tbaa !3670
  %155 = call zeroext i16 @lwip_htons(i16 zeroext %154) #6, !dbg !3791
  %156 = zext i16 %155 to i32, !dbg !3791
  %157 = icmp eq i32 %152, %156, !dbg !3792
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3793
  br i1 %157, label %158, label %166, !dbg !3793

; <label>:158:                                    ; preds = %150
  %159 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 18, !dbg !3794
  %160 = load i32, i32* %159, align 4, !dbg !3794, !tbaa !907
  %161 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 5, !dbg !3795
  %162 = load i16, i16* %161, align 4, !dbg !3795, !tbaa !3672
  %163 = call zeroext i16 @lwip_htons(i16 zeroext %162) #6, !dbg !3795
  %164 = zext i16 %163 to i32, !dbg !3795
  %165 = icmp eq i32 %160, %164, !dbg !3796
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3797
  br i1 %165, label %207, label %166, !dbg !3797

; <label>:166:                                    ; preds = %158, %150, %145
  %167 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 19, !dbg !3798
  %168 = load %struct.clusterLink*, %struct.clusterLink** %167, align 8, !dbg !3798, !tbaa !1178
  %169 = icmp eq %struct.clusterLink* %168, null, !dbg !3801
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3802
  br i1 %169, label %171, label %170, !dbg !3802

; <label>:170:                                    ; preds = %166
  call void @freeClusterLink(%struct.clusterLink* nonnull %168) #10, !dbg !3803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3803
  br label %171, !dbg !3803

; <label>:171:                                    ; preds = %166, %170
  %172 = call i8* @memcpy(i8* nonnull %146, i8* nonnull %147, i64 46) #6, !dbg !3804
  %173 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 4, !dbg !3805
  %174 = load i16, i16* %173, align 2, !dbg !3805, !tbaa !3670
  %175 = call zeroext i16 @lwip_htons(i16 zeroext %174) #6, !dbg !3805
  %176 = zext i16 %175 to i32, !dbg !3805
  %177 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 17, !dbg !3806
  store i32 %176, i32* %177, align 8, !dbg !3807, !tbaa !900
  %178 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 5, !dbg !3808
  %179 = load i16, i16* %178, align 4, !dbg !3808, !tbaa !3672
  %180 = call zeroext i16 @lwip_htons(i16 zeroext %179) #6, !dbg !3808
  %181 = zext i16 %180 to i32, !dbg !3808
  %182 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %71, i64 0, i32 18, !dbg !3809
  store i32 %181, i32* %182, align 4, !dbg !3810, !tbaa !907
  %183 = load i32, i32* %137, align 8, !dbg !3811, !tbaa !927
  %184 = and i32 %183, -65, !dbg !3811
  store i32 %184, i32* %137, align 8, !dbg !3811, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3812
  br label %207, !dbg !3812

; <label>:185:                                    ; preds = %68
  br i1 %31, label %186, label %207, !dbg !3693

; <label>:186:                                    ; preds = %67, %185
  %187 = and i16 %41, 64, !dbg !3813
  %188 = icmp eq i16 %187, 0, !dbg !3813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3814
  br i1 %188, label %189, label %207, !dbg !3814

; <label>:189:                                    ; preds = %186
  %190 = call i8* @sdsnewlen(i8* %60, i64 40) #6, !dbg !3817
  call void @clusterBlacklistCleanup() #6, !dbg !3819
  %191 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !3820, !tbaa !788
  %192 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %191, i64 0, i32 5, !dbg !3821
  %193 = load %struct.dict*, %struct.dict** %192, align 8, !dbg !3821, !tbaa !1784
  %194 = call %struct.dictEntry* @dictFind(%struct.dict* %193, i8* %190) #6, !dbg !3822
  %195 = icmp eq %struct.dictEntry* %194, null, !dbg !3823
  call void @sdsfree(i8* %190) #6, !dbg !3824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3825
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3826
  br i1 %195, label %196, label %207, !dbg !3826

; <label>:196:                                    ; preds = %189
  %197 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 3, i64 0, !dbg !3827
  %198 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 4, !dbg !3829
  %199 = load i16, i16* %198, align 2, !dbg !3829, !tbaa !3670
  %200 = call zeroext i16 @lwip_htons(i16 zeroext %199) #6, !dbg !3829
  %201 = zext i16 %200 to i32, !dbg !3829
  %202 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 0, i32 5, !dbg !3830
  %203 = load i16, i16* %202, align 4, !dbg !3830, !tbaa !3672
  %204 = call zeroext i16 @lwip_htons(i16 zeroext %203) #6, !dbg !3830
  %205 = zext i16 %204 to i32, !dbg !3830
  %206 = call i32 @clusterStartHandshake(i8* nonnull %197, i32 %201, i32 %205) #10, !dbg !3831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3832
  br label %207, !dbg !3832

; <label>:207:                                    ; preds = %67, %158, %141, %136, %189, %186, %185, %196, %144, %171
  %208 = getelementptr inbounds %struct.clusterMsgDataGossip, %struct.clusterMsgDataGossip* %37, i64 1, !dbg !3833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3651
  %209 = icmp eq i16 %38, 0, !dbg !3651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3651
  br i1 %209, label %210, label %35, !dbg !3651, !llvm.loop !3834

; <label>:210:                                    ; preds = %207, %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3836
  ret void, !dbg !3836
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @lwip_htons(i16 zeroext) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @representClusterNodeFlags(i8*, i16 zeroext) local_unnamed_addr #0 !dbg !3837 {
  %3 = getelementptr inbounds i8, i8* %0, i64 -1, !dbg !3855
  %4 = load i8, i8* %3, align 1, !dbg !3855, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3857
  %5 = trunc i8 %4 to i3, !dbg !3857
  switch i3 %5, label %27 [
    i3 0, label %6
    i3 1, label %9
    i3 2, label %13
    i3 3, label %18
    i3 -4, label %23
  ], !dbg !3857

; <label>:6:                                      ; preds = %2
  %7 = lshr i8 %4, 3, !dbg !3858
  %8 = zext i8 %7 to i64, !dbg !3858
  br label %27, !dbg !3859

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds i8, i8* %0, i64 -3, !dbg !3860
  %11 = load i8, i8* %10, align 1, !dbg !3861, !tbaa !745
  %12 = zext i8 %11 to i64, !dbg !3860
  br label %27, !dbg !3862

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i64 -5, !dbg !3863
  %15 = bitcast i8* %14 to i16*, !dbg !3864
  %16 = load i16, i16* %15, align 1, !dbg !3864, !tbaa !1503
  %17 = zext i16 %16 to i64, !dbg !3863
  br label %27, !dbg !3865

; <label>:18:                                     ; preds = %2
  %19 = getelementptr inbounds i8, i8* %0, i64 -9, !dbg !3866
  %20 = bitcast i8* %19 to i32*, !dbg !3867
  %21 = load i32, i32* %20, align 1, !dbg !3867, !tbaa !708
  %22 = zext i32 %21 to i64, !dbg !3866
  br label %27, !dbg !3868

; <label>:23:                                     ; preds = %2
  %24 = getelementptr inbounds i8, i8* %0, i64 -17, !dbg !3869
  %25 = bitcast i8* %24 to i64*, !dbg !3870
  %26 = load i64, i64* %25, align 1, !dbg !3870, !tbaa !1510
  br label %27, !dbg !3871

; <label>:27:                                     ; preds = %2, %6, %9, %13, %18, %23
  %28 = phi i64 [ %26, %23 ], [ %22, %18 ], [ %17, %13 ], [ %12, %9 ], [ %8, %6 ], [ 0, %2 ], !dbg !3872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %29 = and i16 %1, 16, !dbg !3880
  %30 = icmp eq i16 %29, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %30, label %33, label %31, !dbg !3882

; <label>:31:                                     ; preds = %27
  %32 = tail call i8* @sdscat(i8* nonnull %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.276, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %33, !dbg !3884

; <label>:33:                                     ; preds = %27, %31
  %34 = phi i8* [ %32, %31 ], [ %0, %27 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %35 = and i16 %1, 1, !dbg !3880
  %36 = icmp eq i16 %35, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %36, label %67, label %65, !dbg !3882

; <label>:37:                                     ; preds = %103
  %38 = lshr i8 %106, 3, !dbg !3886
  %39 = zext i8 %38 to i64, !dbg !3886
  br label %58, !dbg !3889

; <label>:40:                                     ; preds = %103
  %41 = getelementptr inbounds i8, i8* %104, i64 -3, !dbg !3890
  %42 = load i8, i8* %41, align 1, !dbg !3891, !tbaa !745
  %43 = zext i8 %42 to i64, !dbg !3890
  br label %58, !dbg !3892

; <label>:44:                                     ; preds = %103
  %45 = getelementptr inbounds i8, i8* %104, i64 -5, !dbg !3893
  %46 = bitcast i8* %45 to i16*, !dbg !3894
  %47 = load i16, i16* %46, align 1, !dbg !3894, !tbaa !1503
  %48 = zext i16 %47 to i64, !dbg !3893
  br label %58, !dbg !3895

; <label>:49:                                     ; preds = %103
  %50 = getelementptr inbounds i8, i8* %104, i64 -9, !dbg !3896
  %51 = bitcast i8* %50 to i32*, !dbg !3897
  %52 = load i32, i32* %51, align 1, !dbg !3897, !tbaa !708
  %53 = zext i32 %52 to i64, !dbg !3896
  br label %58, !dbg !3898

; <label>:54:                                     ; preds = %103
  %55 = getelementptr inbounds i8, i8* %104, i64 -17, !dbg !3899
  %56 = bitcast i8* %55 to i64*, !dbg !3900
  %57 = load i64, i64* %56, align 1, !dbg !3900, !tbaa !1510
  br label %58, !dbg !3901

; <label>:58:                                     ; preds = %103, %37, %40, %44, %49, %54
  %59 = phi i64 [ %57, %54 ], [ %53, %49 ], [ %48, %44 ], [ %43, %40 ], [ %39, %37 ], [ 0, %103 ], !dbg !3902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3903
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3904
  %60 = icmp eq i64 %59, %28, !dbg !3905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3906
  br i1 %60, label %61, label %63, !dbg !3906

; <label>:61:                                     ; preds = %58
  %62 = tail call i8* @sdscat(i8* nonnull %104, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0)) #6, !dbg !3907
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3908
  br label %63, !dbg !3908

; <label>:63:                                     ; preds = %61, %58
  %64 = phi i8* [ %62, %61 ], [ %104, %58 ]
  tail call void @sdsIncrLen(i8* %64, i64 -1) #6, !dbg !3909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3910
  ret i8* %64, !dbg !3910

; <label>:65:                                     ; preds = %33
  %66 = tail call i8* @sdscat(i8* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.277, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %67, !dbg !3884

; <label>:67:                                     ; preds = %65, %33
  %68 = phi i8* [ %66, %65 ], [ %34, %33 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %69 = and i16 %1, 2, !dbg !3880
  %70 = icmp eq i16 %69, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %70, label %73, label %71, !dbg !3882

; <label>:71:                                     ; preds = %67
  %72 = tail call i8* @sdscat(i8* %68, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %73, !dbg !3884

; <label>:73:                                     ; preds = %71, %67
  %74 = phi i8* [ %72, %71 ], [ %68, %67 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %75 = and i16 %1, 4, !dbg !3880
  %76 = icmp eq i16 %75, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %76, label %79, label %77, !dbg !3882

; <label>:77:                                     ; preds = %73
  %78 = tail call i8* @sdscat(i8* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.279, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %79, !dbg !3884

; <label>:79:                                     ; preds = %77, %73
  %80 = phi i8* [ %78, %77 ], [ %74, %73 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %81 = and i16 %1, 8, !dbg !3880
  %82 = icmp eq i16 %81, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %82, label %85, label %83, !dbg !3882

; <label>:83:                                     ; preds = %79
  %84 = tail call i8* @sdscat(i8* %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.280, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %85, !dbg !3884

; <label>:85:                                     ; preds = %83, %79
  %86 = phi i8* [ %84, %83 ], [ %80, %79 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %87 = and i16 %1, 32, !dbg !3880
  %88 = icmp eq i16 %87, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %88, label %91, label %89, !dbg !3882

; <label>:89:                                     ; preds = %85
  %90 = tail call i8* @sdscat(i8* %86, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.281, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %91, !dbg !3884

; <label>:91:                                     ; preds = %89, %85
  %92 = phi i8* [ %90, %89 ], [ %86, %85 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %93 = and i16 %1, 64, !dbg !3880
  %94 = icmp eq i16 %93, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %94, label %97, label %95, !dbg !3882

; <label>:95:                                     ; preds = %91
  %96 = tail call i8* @sdscat(i8* %92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.282, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %97, !dbg !3884

; <label>:97:                                     ; preds = %95, %91
  %98 = phi i8* [ %96, %95 ], [ %92, %91 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %99 = and i16 %1, 512, !dbg !3880
  %100 = icmp eq i16 %99, 0, !dbg !3880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3882
  br i1 %100, label %103, label %101, !dbg !3882

; <label>:101:                                    ; preds = %97
  %102 = tail call i8* @sdscat(i8* %98, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.283, i64 0, i64 0)) #6, !dbg !3883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3884
  br label %103, !dbg !3884

; <label>:103:                                    ; preds = %101, %97
  %104 = phi i8* [ %102, %101 ], [ %98, %97 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3879
  %105 = getelementptr inbounds i8, i8* %104, i64 -1, !dbg !3912
  %106 = load i8, i8* %105, align 1, !dbg !3912, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3914
  %107 = trunc i8 %106 to i3, !dbg !3914
  switch i3 %107, label %58 [
    i3 0, label %37
    i3 1, label %40
    i3 2, label %44
    i3 3, label %49
    i3 -4, label %54
  ], !dbg !3914
}

; Function Attrs: noredzone
declare dso_local i32 @lwip_htonl(i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @nodeIp2String(i8*, %struct.clusterLink* nocapture readonly, i8*) local_unnamed_addr #0 !dbg !3915 {
  %4 = load i8, i8* %2, align 1, !dbg !3925, !tbaa !745
  %5 = icmp eq i8 %4, 0, !dbg !3927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3928
  br i1 %5, label %9, label %6, !dbg !3928

; <label>:6:                                      ; preds = %3
  %7 = tail call i8* @memcpy(i8* %0, i8* nonnull %2, i64 46) #6, !dbg !3929
  %8 = getelementptr inbounds i8, i8* %0, i64 45, !dbg !3931
  store i8 0, i8* %8, align 1, !dbg !3932, !tbaa !745
  br label %13, !dbg !3933

; <label>:9:                                      ; preds = %3
  %10 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %1, i64 0, i32 1, !dbg !3934
  %11 = load i32, i32* %10, align 8, !dbg !3934, !tbaa !2159
  %12 = tail call i32 @anetPeerToString(i32 %11, i8* %0, i64 46, i32* null) #6, !dbg !3936
  br label %13

; <label>:13:                                     ; preds = %9, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3937
  ret void, !dbg !3937
}

; Function Attrs: noredzone
declare dso_local i32 @anetPeerToString(i32, i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @nodeUpdateAddressIfNeeded(%struct.clusterNode*, %struct.clusterLink* readonly, %struct.clusterMsg*) local_unnamed_addr #0 !dbg !3938 {
  %4 = alloca [46 x i8], align 16
  %5 = getelementptr inbounds [46 x i8], [46 x i8]* %4, i64 0, i64 0, !dbg !3951
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %5) #7, !dbg !3951
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 46, i1 false), !dbg !3952
  %6 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 3, !dbg !3953
  %7 = load i16, i16* %6, align 2, !dbg !3953, !tbaa !3954
  %8 = tail call zeroext i16 @lwip_htons(i16 zeroext %7) #6, !dbg !3953
  %9 = zext i16 %8 to i32, !dbg !3953
  %10 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 14, !dbg !3956
  %11 = load i16, i16* %10, align 8, !dbg !3956, !tbaa !3957
  %12 = tail call zeroext i16 @lwip_htons(i16 zeroext %11) #6, !dbg !3956
  %13 = zext i16 %12 to i32, !dbg !3956
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !3959
  %15 = load %struct.clusterLink*, %struct.clusterLink** %14, align 8, !dbg !3959, !tbaa !1178
  %16 = icmp eq %struct.clusterLink* %15, %1, !dbg !3961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3962
  br i1 %16, label %64, label %17, !dbg !3962

; <label>:17:                                     ; preds = %3
  %18 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 12, i64 0, !dbg !3963
  %19 = load i8, i8* %18, align 1, !dbg !3968, !tbaa !745
  %20 = icmp eq i8 %19, 0, !dbg !3969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3970
  br i1 %20, label %24, label %21, !dbg !3970

; <label>:21:                                     ; preds = %17
  %22 = call i8* @memcpy(i8* nonnull %5, i8* nonnull %18, i64 46) #6, !dbg !3971
  %23 = getelementptr inbounds [46 x i8], [46 x i8]* %4, i64 0, i64 45, !dbg !3972
  store i8 0, i8* %23, align 1, !dbg !3973, !tbaa !745
  br label %28, !dbg !3974

; <label>:24:                                     ; preds = %17
  %25 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %1, i64 0, i32 1, !dbg !3975
  %26 = load i32, i32* %25, align 8, !dbg !3975, !tbaa !2159
  %27 = call i32 @anetPeerToString(i32 %26, i8* nonnull %5, i64 46, i32* null) #6, !dbg !3976
  br label %28

; <label>:28:                                     ; preds = %21, %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3977
  %29 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 17, !dbg !3978
  %30 = load i32, i32* %29, align 8, !dbg !3978, !tbaa !900
  %31 = icmp eq i32 %30, %9, !dbg !3980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3981
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 18, !dbg !3982
  br i1 %31, label %33, label %40, !dbg !3981

; <label>:33:                                     ; preds = %28
  %34 = load i32, i32* %32, align 4, !dbg !3983, !tbaa !907
  %35 = icmp eq i32 %34, %13, !dbg !3984
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3985
  br i1 %35, label %36, label %40, !dbg !3985

; <label>:36:                                     ; preds = %33
  %37 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !3986
  %38 = call i32 @strcmp(i8* nonnull %5, i8* nonnull %37) #6, !dbg !3987
  %39 = icmp eq i32 %38, 0, !dbg !3988
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3989
  br i1 %39, label %64, label %40, !dbg !3989

; <label>:40:                                     ; preds = %28, %36, %33
  %41 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !3990
  %42 = call i8* @memcpy(i8* nonnull %41, i8* nonnull %5, i64 46) #6, !dbg !3991
  store i32 %9, i32* %29, align 8, !dbg !3992, !tbaa !900
  store i32 %13, i32* %32, align 4, !dbg !3993, !tbaa !907
  %43 = load %struct.clusterLink*, %struct.clusterLink** %14, align 8, !dbg !3994, !tbaa !1178
  %44 = icmp eq %struct.clusterLink* %43, null, !dbg !3996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3997
  br i1 %44, label %47, label %45, !dbg !3997

; <label>:45:                                     ; preds = %40
  call void @freeClusterLink(%struct.clusterLink* nonnull %43) #10, !dbg !3998
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !3998
  %46 = load i32, i32* %29, align 8, !dbg !3999, !tbaa !900
  br label %47, !dbg !3998

; <label>:47:                                     ; preds = %40, %45
  %48 = phi i32 [ %9, %40 ], [ %46, %45 ], !dbg !3999
  %49 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !4000
  %50 = load i32, i32* %49, align 8, !dbg !4001, !tbaa !927
  %51 = and i32 %50, -65, !dbg !4001
  store i32 %51, i32* %49, align 8, !dbg !4001, !tbaa !927
  %52 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !4002
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %52, i8* nonnull %41, i32 %48) #6, !dbg !4003
  %53 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4004, !tbaa !760
  %54 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %53, i64 0, i32 2, !dbg !4004
  %55 = load i32, i32* %54, align 8, !dbg !4004, !tbaa !927
  %56 = and i32 %55, 2, !dbg !4004
  %57 = icmp eq i32 %56, 0, !dbg !4004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4006
  br i1 %57, label %64, label %58, !dbg !4006

; <label>:58:                                     ; preds = %47
  %59 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %53, i64 0, i32 8, !dbg !4007
  %60 = load %struct.clusterNode*, %struct.clusterNode** %59, align 8, !dbg !4007, !tbaa !1025
  %61 = icmp eq %struct.clusterNode* %60, %0, !dbg !4008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4009
  br i1 %61, label %62, label %64, !dbg !4009

; <label>:62:                                     ; preds = %58
  %63 = load i32, i32* %29, align 8, !dbg !4010, !tbaa !900
  call void @replicationSetMaster(i8* nonnull %41, i32 %63) #6, !dbg !4011
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4011
  br label %64, !dbg !4011

; <label>:64:                                     ; preds = %58, %62, %47, %36, %3
  %65 = phi i32 [ 0, %3 ], [ 0, %36 ], [ 1, %47 ], [ 1, %62 ], [ 1, %58 ], !dbg !3982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4012
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %5) #7, !dbg !4013
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4013
  ret i32 %65, !dbg !4013
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @replicationSetMaster(i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterUpdateSlotsConfigWith(%struct.clusterNode*, i64, i8* nocapture readonly) local_unnamed_addr #0 !dbg !4014 {
  %4 = alloca [16384 x i16], align 16
  %5 = bitcast [16384 x i16]* %4 to i8*, !dbg !4033
  call void @llvm.lifetime.start.p0i8(i64 32768, i8* nonnull %5) #7, !dbg !4033
  %6 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4036, !tbaa !760
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %6, i64 0, i32 2, !dbg !4036
  %8 = load i32, i32* %7, align 8, !dbg !4036, !tbaa !927
  %9 = and i32 %8, 1, !dbg !4036
  %10 = icmp eq i32 %9, 0, !dbg !4036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4036
  br i1 %10, label %11, label %14, !dbg !4036

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %6, i64 0, i32 8, !dbg !4037
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !4037, !tbaa !1025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4036
  br label %14, !dbg !4036

; <label>:14:                                     ; preds = %3, %11
  %15 = phi %struct.clusterNode* [ %13, %11 ], [ %6, %3 ], !dbg !4036
  %16 = icmp eq %struct.clusterNode* %6, %0, !dbg !4039
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4041
  br i1 %16, label %17, label %18, !dbg !4041

; <label>:17:                                     ; preds = %14
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !4042
  br label %141, !dbg !4044

; <label>:18:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4048
  br label %19, !dbg !4048

; <label>:19:                                     ; preds = %18, %105
  %20 = phi i64 [ 0, %18 ], [ %108, %105 ]
  %21 = phi i32 [ 0, %18 ], [ %107, %105 ]
  %22 = phi %struct.clusterNode* [ null, %18 ], [ %106, %105 ]
  %23 = phi i32 [ 0, %18 ], [ %109, %105 ]
  %24 = trunc i64 %20 to i32
  %25 = lshr i64 %20, 3
  %26 = and i64 %25, 8191
  %27 = and i32 %24, 7, !dbg !4056
  %28 = getelementptr inbounds i8, i8* %2, i64 %26, !dbg !4058
  %29 = load i8, i8* %28, align 1, !dbg !4058, !tbaa !745
  %30 = zext i8 %29 to i32, !dbg !4058
  %31 = shl i32 1, %27, !dbg !4059
  %32 = and i32 %31, %30, !dbg !4060
  %33 = icmp eq i32 %32, 0, !dbg !4061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4062
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4063
  br i1 %33, label %105, label %34, !dbg !4063

; <label>:34:                                     ; preds = %19
  %35 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4064, !tbaa !788
  %36 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %35, i64 0, i32 8, i64 %20, !dbg !4067
  %37 = load %struct.clusterNode*, %struct.clusterNode** %36, align 8, !dbg !4067, !tbaa !760
  %38 = icmp eq %struct.clusterNode* %37, %0, !dbg !4068
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4069
  br i1 %38, label %105, label %39, !dbg !4069

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %35, i64 0, i32 7, i64 %20, !dbg !4070
  %41 = load %struct.clusterNode*, %struct.clusterNode** %40, align 8, !dbg !4070, !tbaa !760
  %42 = icmp eq %struct.clusterNode* %41, null, !dbg !4070
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4072
  br i1 %42, label %43, label %105, !dbg !4072

; <label>:43:                                     ; preds = %39
  %44 = icmp eq %struct.clusterNode* %37, null, !dbg !4073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4075
  br i1 %44, label %49, label %45, !dbg !4075

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %37, i64 0, i32 3, !dbg !4076
  %47 = load i64, i64* %46, align 8, !dbg !4076, !tbaa !1093
  %48 = icmp ult i64 %47, %1, !dbg !4077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4078
  br i1 %48, label %49, label %105, !dbg !4078

; <label>:49:                                     ; preds = %45, %43
  %50 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4079, !tbaa !760
  %51 = icmp eq %struct.clusterNode* %37, %50, !dbg !4082
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4083
  br i1 %51, label %52, label %63, !dbg !4083

; <label>:52:                                     ; preds = %49
  %53 = tail call i32 @countKeysInSlot(i32 %24) #6, !dbg !4084
  %54 = icmp eq i32 %53, 0, !dbg !4084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4085
  br i1 %54, label %63, label %55, !dbg !4085

; <label>:55:                                     ; preds = %52
  %56 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4086, !tbaa !760
  %57 = icmp eq %struct.clusterNode* %56, %0, !dbg !4087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4088
  br i1 %57, label %63, label %58, !dbg !4088

; <label>:58:                                     ; preds = %55
  %59 = trunc i32 %23 to i16, !dbg !4089
  %60 = sext i32 %21 to i64, !dbg !4091
  %61 = getelementptr inbounds [16384 x i16], [16384 x i16]* %4, i64 0, i64 %60, !dbg !4091
  store i16 %59, i16* %61, align 2, !dbg !4092, !tbaa !1503
  %62 = add nsw i32 %21, 1, !dbg !4093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4094
  br label %63, !dbg !4094

; <label>:63:                                     ; preds = %55, %52, %58, %49
  %64 = phi i32 [ %62, %58 ], [ %21, %55 ], [ %21, %52 ], [ %21, %49 ], !dbg !4095
  %65 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4096, !tbaa !788
  %66 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %65, i64 0, i32 8, i64 %20, !dbg !4098
  %67 = load %struct.clusterNode*, %struct.clusterNode** %66, align 8, !dbg !4098, !tbaa !760
  %68 = icmp eq %struct.clusterNode* %67, %15, !dbg !4099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4100
  br i1 %68, label %69, label %70, !dbg !4100

; <label>:69:                                     ; preds = %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4101
  br label %70, !dbg !4101

; <label>:70:                                     ; preds = %69, %63
  %71 = phi %struct.clusterNode* [ %0, %69 ], [ %22, %63 ], !dbg !4095
  %72 = icmp eq %struct.clusterNode* %67, null, !dbg !4105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4106
  br i1 %72, label %73, label %74, !dbg !4106

; <label>:73:                                     ; preds = %70
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4112
  br label %95, !dbg !4112

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 4, i64 %26, !dbg !4121
  %76 = load i8, i8* %75, align 1, !dbg !4121, !tbaa !745
  %77 = zext i8 %76 to i32, !dbg !4121
  %78 = and i32 %31, %77, !dbg !4122
  %79 = icmp eq i32 %78, 0, !dbg !4123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4124
  %80 = trunc i32 %31 to i8, !dbg !4130
  %81 = xor i8 %80, -1, !dbg !4130
  %82 = and i8 %76, %81, !dbg !4130
  store i8 %82, i8* %75, align 1, !dbg !4130, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4131
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4132
  br i1 %79, label %83, label %84, !dbg !4132

; <label>:83:                                     ; preds = %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4134
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !4134
  tail call void @_exit(i32 1) #8, !dbg !4134
  unreachable

; <label>:84:                                     ; preds = %74
  %85 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %67, i64 0, i32 5, !dbg !4135
  %86 = load i32, i32* %85, align 8, !dbg !4136, !tbaa !1164
  %87 = add nsw i32 %86, -1, !dbg !4136
  store i32 %87, i32* %85, align 8, !dbg !4136, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4134
  %88 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4138, !tbaa !788
  %89 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %88, i64 0, i32 8, i64 %20, !dbg !4139
  store %struct.clusterNode* null, %struct.clusterNode** %89, align 8, !dbg !4140, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4141
  %90 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4142, !tbaa !788
  %91 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %90, i64 0, i32 8, i64 %20
  %92 = load %struct.clusterNode*, %struct.clusterNode** %91, align 8, !dbg !4143, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4108
  %93 = icmp eq %struct.clusterNode* %92, null, !dbg !4143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4112
  br i1 %93, label %95, label %94, !dbg !4112

; <label>:94:                                     ; preds = %84
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4144
  br label %100, !dbg !4144

; <label>:95:                                     ; preds = %73, %84
  %96 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %0, i32 %24) #6, !dbg !4145
  %97 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4146, !tbaa !788
  %98 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %97, i64 0, i32 8, i64 %20, !dbg !4147
  store %struct.clusterNode* %0, %struct.clusterNode** %98, align 8, !dbg !4148, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4149
  %99 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4150, !tbaa !788
  br label %100, !dbg !4149

; <label>:100:                                    ; preds = %94, %95
  %101 = phi %struct.clusterState* [ %90, %94 ], [ %99, %95 ], !dbg !4150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4152
  %102 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %101, i64 0, i32 22, !dbg !4154
  %103 = load i32, i32* %102, align 8, !dbg !4155, !tbaa !1475
  %104 = or i32 %103, 14, !dbg !4155
  store i32 %104, i32* %102, align 8, !dbg !4155, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4157
  br label %105, !dbg !4157

; <label>:105:                                    ; preds = %39, %19, %100, %45, %34
  %106 = phi %struct.clusterNode* [ %22, %34 ], [ %22, %39 ], [ %71, %100 ], [ %22, %45 ], [ %22, %19 ], !dbg !4095
  %107 = phi i32 [ %21, %34 ], [ %21, %39 ], [ %64, %100 ], [ %21, %45 ], [ %21, %19 ], !dbg !4095
  %108 = add nuw nsw i64 %20, 1, !dbg !4158
  %109 = add nuw nsw i32 %23, 1, !dbg !4158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4159
  %110 = icmp ult i64 %108, 16384, !dbg !4160
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4048
  br i1 %110, label %19, label %111, !dbg !4048, !llvm.loop !4161

; <label>:111:                                    ; preds = %105
  %112 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !4163, !tbaa !4165
  %113 = and i32 %112, 4, !dbg !4166
  %114 = icmp eq i32 %113, 0, !dbg !4166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4167
  br i1 %114, label %115, label %141, !dbg !4167

; <label>:115:                                    ; preds = %111
  %116 = icmp eq %struct.clusterNode* %106, null, !dbg !4168
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4170
  br i1 %116, label %127, label %117, !dbg !4170

; <label>:117:                                    ; preds = %115
  %118 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 5, !dbg !4171
  %119 = load i32, i32* %118, align 8, !dbg !4171, !tbaa !1164
  %120 = icmp eq i32 %119, 0, !dbg !4172
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4173
  br i1 %120, label %121, label %127, !dbg !4173

; <label>:121:                                    ; preds = %117
  %122 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !4174
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %122) #6, !dbg !4176
  tail call void @clusterSetMaster(%struct.clusterNode* %0) #10, !dbg !4177
  %123 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4180, !tbaa !788
  %124 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %123, i64 0, i32 22, !dbg !4181
  %125 = load i32, i32* %124, align 8, !dbg !4182, !tbaa !1475
  %126 = or i32 %125, 14, !dbg !4182
  store i32 %126, i32* %124, align 8, !dbg !4182, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4183
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4184
  br label %141, !dbg !4184

; <label>:127:                                    ; preds = %115, %117
  %128 = icmp eq i32 %107, 0, !dbg !4185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4187
  br i1 %128, label %141, label %129, !dbg !4187

; <label>:129:                                    ; preds = %127
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4188
  %130 = icmp sgt i32 %107, 0, !dbg !4191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4193
  br i1 %130, label %131, label %141, !dbg !4193

; <label>:131:                                    ; preds = %129
  %132 = zext i32 %107 to i64
  br label %133, !dbg !4194

; <label>:133:                                    ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %139, %133 ]
  %135 = getelementptr inbounds [16384 x i16], [16384 x i16]* %4, i64 0, i64 %134, !dbg !4194
  %136 = load i16, i16* %135, align 2, !dbg !4194, !tbaa !1503
  %137 = zext i16 %136 to i32, !dbg !4194
  %138 = tail call i32 @delKeysInSlot(i32 %137) #6, !dbg !4195
  %139 = add nuw nsw i64 %134, 1, !dbg !4196
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4193
  %140 = icmp eq i64 %139, %132, !dbg !4191
  br i1 %140, label %141, label %133, !dbg !4193, !llvm.loop !4198

; <label>:141:                                    ; preds = %133, %121, %127, %129, %111, %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4200
  call void @llvm.lifetime.end.p0i8(i64 32768, i8* nonnull %5) #7, !dbg !4201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4201
  ret void, !dbg !4201
}

; Function Attrs: noredzone nounwind
define dso_local i32 @bitmapTestBit(i8* nocapture readonly, i32) local_unnamed_addr #0 !dbg !2263 {
  %3 = sdiv i32 %1, 8, !dbg !4204
  %4 = sext i32 %3 to i64, !dbg !4205
  %5 = and i32 %1, 7, !dbg !4207
  %6 = getelementptr inbounds i8, i8* %0, i64 %4, !dbg !4209
  %7 = load i8, i8* %6, align 1, !dbg !4209, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !4209
  %9 = shl i32 1, %5, !dbg !4210
  %10 = and i32 %9, %8, !dbg !4211
  %11 = icmp ne i32 %10, 0, !dbg !4212
  %12 = zext i1 %11 to i32, !dbg !4212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4213
  ret i32 %12, !dbg !4213
}

; Function Attrs: noredzone
declare dso_local i32 @countKeysInSlot(i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSetMaster(%struct.clusterNode*) local_unnamed_addr #0 !dbg !4214 {
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4218, !tbaa !760
  %3 = icmp eq %struct.clusterNode* %2, %0, !dbg !4218
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4218
  br i1 %3, label %4, label %5, !dbg !4218

; <label>:4:                                      ; preds = %1
  tail call void @_serverAssert(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3934) #6, !dbg !4218
  tail call void @_exit(i32 1) #8, !dbg !4218
  unreachable

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 5, !dbg !4219
  %7 = load i32, i32* %6, align 8, !dbg !4219, !tbaa !1164
  %8 = icmp eq i32 %7, 0, !dbg !4219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4219
  br i1 %8, label %10, label %9, !dbg !4219

; <label>:9:                                      ; preds = %5
  tail call void @_serverAssert(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3935) #6, !dbg !4219
  tail call void @_exit(i32 1) #8, !dbg !4219
  unreachable

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 2, !dbg !4220
  %12 = load i32, i32* %11, align 8, !dbg !4220, !tbaa !927
  %13 = and i32 %12, 1, !dbg !4220
  %14 = icmp eq i32 %13, 0, !dbg !4220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4222
  br i1 %14, label %26, label %15, !dbg !4222

; <label>:15:                                     ; preds = %10
  %16 = and i32 %12, -260, !dbg !4223
  %17 = or i32 %16, 2, !dbg !4225
  store i32 %17, i32* %11, align 8, !dbg !4225, !tbaa !927
  %18 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4226, !tbaa !788
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %18, i64 0, i32 6, i64 0, !dbg !4228
  %20 = bitcast %struct.clusterNode** %19 to i8*, !dbg !4228
  %21 = tail call i8* @memset(i8* nonnull %20, i32 0, i64 131072) #6, !dbg !4229
  %22 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4230, !tbaa !788
  %23 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %22, i64 0, i32 7, i64 0, !dbg !4231
  %24 = bitcast %struct.clusterNode** %23 to i8*, !dbg !4231
  %25 = tail call i8* @memset(i8* nonnull %24, i32 0, i64 131072) #6, !dbg !4232
  br label %72, !dbg !4233

; <label>:26:                                     ; preds = %10
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 8, !dbg !4234
  %28 = load %struct.clusterNode*, %struct.clusterNode** %27, align 8, !dbg !4234, !tbaa !1025
  %29 = icmp eq %struct.clusterNode* %28, null, !dbg !4237
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4238
  br i1 %29, label %73, label %30, !dbg !4238

; <label>:30:                                     ; preds = %26
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4243
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 6, !dbg !4244
  %32 = load i32, i32* %31, align 4, !dbg !4244, !tbaa !1041
  %33 = icmp sgt i32 %32, 0, !dbg !4245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4246
  br i1 %33, label %34, label %71, !dbg !4246

; <label>:34:                                     ; preds = %30
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 7
  %36 = load %struct.clusterNode**, %struct.clusterNode*** %35, align 8, !tbaa !1044
  br label %37, !dbg !4246

; <label>:37:                                     ; preds = %68, %34
  %38 = phi i64 [ 0, %34 ], [ %42, %68 ]
  %39 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %36, i64 %38, !dbg !4247
  %40 = load %struct.clusterNode*, %struct.clusterNode** %39, align 8, !dbg !4247, !tbaa !760
  %41 = icmp eq %struct.clusterNode* %40, %2, !dbg !4248
  %42 = add nuw nsw i64 %38, 1, !dbg !4249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4250
  br i1 %41, label %43, label %68, !dbg !4250

; <label>:43:                                     ; preds = %37
  %44 = trunc i64 %42 to i32, !dbg !4242
  %45 = icmp sgt i32 %32, %44, !dbg !4251
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4252
  br i1 %45, label %46, label %60, !dbg !4252

; <label>:46:                                     ; preds = %43
  %47 = trunc i64 %38 to i32, !dbg !4242
  %48 = and i64 %38, 4294967295, !dbg !4247
  %49 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %36, i64 %48, !dbg !4247
  %50 = xor i32 %47, -1, !dbg !4253
  %51 = add i32 %32, %50, !dbg !4253
  %52 = bitcast %struct.clusterNode** %49 to i8*, !dbg !4255
  %53 = and i64 %42, 4294967295, !dbg !4256
  %54 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %36, i64 %53, !dbg !4256
  %55 = bitcast %struct.clusterNode** %54 to i8*, !dbg !4257
  %56 = sext i32 %51 to i64, !dbg !4258
  %57 = shl nsw i64 %56, 3, !dbg !4259
  %58 = tail call i8* @memmove(i8* %52, i8* nonnull %55, i64 %57) #6, !dbg !4260
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4261
  %59 = load i32, i32* %31, align 4, !dbg !4262, !tbaa !1041
  br label %60, !dbg !4261

; <label>:60:                                     ; preds = %46, %43
  %61 = phi i32 [ %59, %46 ], [ %32, %43 ], !dbg !4262
  %62 = add nsw i32 %61, -1, !dbg !4262
  store i32 %62, i32* %31, align 4, !dbg !4262, !tbaa !1041
  %63 = icmp eq i32 %62, 0, !dbg !4263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4264
  br i1 %63, label %64, label %71, !dbg !4264

; <label>:64:                                     ; preds = %60
  %65 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %28, i64 0, i32 2, !dbg !4265
  %66 = load i32, i32* %65, align 8, !dbg !4266, !tbaa !927
  %67 = and i32 %66, -257, !dbg !4266
  store i32 %67, i32* %65, align 8, !dbg !4266, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4267
  br label %71, !dbg !4267

; <label>:68:                                     ; preds = %37
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4268
  %69 = trunc i64 %42 to i32, !dbg !4245
  %70 = icmp sgt i32 %32, %69, !dbg !4245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4246
  br i1 %70, label %37, label %71, !dbg !4246, !llvm.loop !2431

; <label>:71:                                     ; preds = %68, %30, %60, %64
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4269
  br label %72, !dbg !4270

; <label>:72:                                     ; preds = %15, %71
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4271
  br label %73, !dbg !4272

; <label>:73:                                     ; preds = %72, %26
  %74 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4272, !tbaa !760
  %75 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %74, i64 0, i32 8, !dbg !4273
  store %struct.clusterNode* %0, %struct.clusterNode** %75, align 8, !dbg !4274, !tbaa !1025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4279
  %76 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 6, !dbg !4280
  %77 = load i32, i32* %76, align 4, !dbg !4280, !tbaa !1041
  %78 = icmp sgt i32 %77, 0, !dbg !4281
  %79 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 7, !dbg !4282
  %80 = load %struct.clusterNode**, %struct.clusterNode*** %79, align 8, !dbg !4282, !tbaa !1044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4283
  br i1 %78, label %81, label %91, !dbg !4283

; <label>:81:                                     ; preds = %73
  %82 = sext i32 %77 to i64
  br label %83, !dbg !4284

; <label>:83:                                     ; preds = %88, %81
  %84 = phi i64 [ 0, %81 ], [ %89, %88 ]
  %85 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %80, i64 %84, !dbg !4284
  %86 = load %struct.clusterNode*, %struct.clusterNode** %85, align 8, !dbg !4284, !tbaa !760
  %87 = icmp eq %struct.clusterNode* %86, %74, !dbg !4285
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4286
  br i1 %87, label %106, label %88, !dbg !4286

; <label>:88:                                     ; preds = %83
  %89 = add nuw nsw i64 %84, 1, !dbg !4287
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4288
  %90 = icmp slt i64 %89, %82, !dbg !4281
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4283
  br i1 %90, label %83, label %91, !dbg !4283, !llvm.loop !1052

; <label>:91:                                     ; preds = %88, %73
  %92 = bitcast %struct.clusterNode** %80 to i8*, !dbg !4289
  %93 = add nsw i32 %77, 1, !dbg !4290
  %94 = sext i32 %93 to i64, !dbg !4291
  %95 = shl nsw i64 %94, 3, !dbg !4292
  %96 = tail call i8* @zrealloc(i8* %92, i64 %95) #6, !dbg !4293
  %97 = bitcast i8* %96 to %struct.clusterNode**, !dbg !4293
  %98 = bitcast %struct.clusterNode*** %79 to i8**, !dbg !4294
  store i8* %96, i8** %98, align 8, !dbg !4294, !tbaa !1044
  %99 = load i32, i32* %76, align 4, !dbg !4295, !tbaa !1041
  %100 = sext i32 %99 to i64, !dbg !4296
  %101 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %97, i64 %100, !dbg !4296
  store %struct.clusterNode* %74, %struct.clusterNode** %101, align 8, !dbg !4297, !tbaa !760
  %102 = add nsw i32 %99, 1, !dbg !4298
  store i32 %102, i32* %76, align 4, !dbg !4298, !tbaa !1041
  %103 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !4299
  %104 = load i32, i32* %103, align 8, !dbg !4300, !tbaa !927
  %105 = or i32 %104, 256, !dbg !4300
  store i32 %105, i32* %103, align 8, !dbg !4300, !tbaa !927
  br label %106, !dbg !4301

; <label>:106:                                    ; preds = %83, %91
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4303
  %107 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !4304
  %108 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 17, !dbg !4305
  %109 = load i32, i32* %108, align 8, !dbg !4305, !tbaa !900
  tail call void @replicationSetMaster(i8* nonnull %107, i32 %109) #6, !dbg !4306
  %110 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4307, !tbaa !788
  %111 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %110, i64 0, i32 17, !dbg !4309
  %112 = load i64, i64* %111, align 8, !dbg !4309, !tbaa !1987
  %113 = icmp eq i64 %112, 0, !dbg !4310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4311
  br i1 %113, label %119, label %114, !dbg !4311

; <label>:114:                                    ; preds = %106
  %115 = tail call i32 @clientsArePaused() #6, !dbg !4312
  %116 = icmp eq i32 %115, 0, !dbg !4312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4313
  br i1 %116, label %119, label %117, !dbg !4313

; <label>:117:                                    ; preds = %114
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !4314, !tbaa !2176
  %118 = tail call i32 @clientsArePaused() #6, !dbg !4315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4316
  br label %119, !dbg !4316

; <label>:119:                                    ; preds = %106, %114, %117
  %120 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4317, !tbaa !788
  %121 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %120, i64 0, i32 17, !dbg !4318
  store i64 0, i64* %121, align 8, !dbg !4319, !tbaa !1987
  %122 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %120, i64 0, i32 20, !dbg !4320
  store i32 0, i32* %122, align 8, !dbg !4321, !tbaa !1990
  %123 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %120, i64 0, i32 18, !dbg !4322
  store %struct.clusterNode* null, %struct.clusterNode** %123, align 8, !dbg !4323, !tbaa !1993
  %124 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %120, i64 0, i32 19, !dbg !4324
  store i64 0, i64* %124, align 8, !dbg !4325, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4326
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4327
  ret void, !dbg !4327
}

; Function Attrs: noredzone
declare dso_local i32 @delKeysInSlot(i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterProcessPacket(%struct.clusterLink*) local_unnamed_addr #0 !dbg !4328 {
  %2 = alloca [46 x i8], align 16
  %3 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 3, !dbg !4414
  %4 = bitcast i8** %3 to %struct.clusterMsg**, !dbg !4414
  %5 = load %struct.clusterMsg*, %struct.clusterMsg** %4, align 8, !dbg !4414, !tbaa !2151
  %6 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 1, !dbg !4416
  %7 = load i32, i32* %6, align 4, !dbg !4416, !tbaa !2758
  %8 = tail call i32 @lwip_htonl(i32 %7) #6, !dbg !4416
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 4, !dbg !4418
  %10 = load i16, i16* %9, align 4, !dbg !4418, !tbaa !4419
  %11 = tail call zeroext i16 @lwip_htons(i16 zeroext %10) #6, !dbg !4418
  %12 = zext i16 %11 to i32, !dbg !4421
  %13 = icmp ult i16 %11, 10, !dbg !4423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4424
  br i1 %13, label %14, label %20, !dbg !4424

; <label>:14:                                     ; preds = %1
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4425, !tbaa !788
  %16 = zext i16 %11 to i64, !dbg !4426
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 24, i64 %16, !dbg !4426
  %18 = load i64, i64* %17, align 8, !dbg !4427, !tbaa !1173
  %19 = add nsw i64 %18, 1, !dbg !4427
  store i64 %19, i64* %17, align 8, !dbg !4427, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4426
  br label %20, !dbg !4426

; <label>:20:                                     ; preds = %14, %1
  %21 = zext i32 %8 to i64, !dbg !4428
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.50, i64 0, i64 0), i32 %12, i64 %21) #6, !dbg !4429
  %22 = icmp ult i32 %8, 16, !dbg !4430
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4432
  br i1 %22, label %809, label %23, !dbg !4432

; <label>:23:                                     ; preds = %20
  %24 = load i8*, i8** %3, align 8, !dbg !4433, !tbaa !2151
  %25 = getelementptr inbounds i8, i8* %24, i64 -1, !dbg !4437
  %26 = load i8, i8* %25, align 1, !dbg !4437, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4439
  %27 = trunc i8 %26 to i3, !dbg !4439
  switch i3 %27, label %49 [
    i3 0, label %28
    i3 1, label %31
    i3 2, label %35
    i3 3, label %40
    i3 -4, label %45
  ], !dbg !4439

; <label>:28:                                     ; preds = %23
  %29 = lshr i8 %26, 3, !dbg !4440
  %30 = zext i8 %29 to i64, !dbg !4440
  br label %49, !dbg !4441

; <label>:31:                                     ; preds = %23
  %32 = getelementptr inbounds i8, i8* %24, i64 -3, !dbg !4442
  %33 = load i8, i8* %32, align 1, !dbg !4443, !tbaa !745
  %34 = zext i8 %33 to i64, !dbg !4442
  br label %49, !dbg !4444

; <label>:35:                                     ; preds = %23
  %36 = getelementptr inbounds i8, i8* %24, i64 -5, !dbg !4445
  %37 = bitcast i8* %36 to i16*, !dbg !4446
  %38 = load i16, i16* %37, align 1, !dbg !4446, !tbaa !1503
  %39 = zext i16 %38 to i64, !dbg !4445
  br label %49, !dbg !4447

; <label>:40:                                     ; preds = %23
  %41 = getelementptr inbounds i8, i8* %24, i64 -9, !dbg !4448
  %42 = bitcast i8* %41 to i32*, !dbg !4449
  %43 = load i32, i32* %42, align 1, !dbg !4449, !tbaa !708
  %44 = zext i32 %43 to i64, !dbg !4448
  br label %49, !dbg !4450

; <label>:45:                                     ; preds = %23
  %46 = getelementptr inbounds i8, i8* %24, i64 -17, !dbg !4451
  %47 = bitcast i8* %46 to i64*, !dbg !4452
  %48 = load i64, i64* %47, align 1, !dbg !4452, !tbaa !1510
  br label %49, !dbg !4453

; <label>:49:                                     ; preds = %23, %28, %31, %35, %40, %45
  %50 = phi i64 [ %48, %45 ], [ %44, %40 ], [ %39, %35 ], [ %34, %31 ], [ %30, %28 ], [ 0, %23 ], !dbg !4454
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4455
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4456
  %51 = icmp ult i64 %50, %21, !dbg !4457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4458
  br i1 %51, label %809, label %52, !dbg !4458

; <label>:52:                                     ; preds = %49
  %53 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 2, !dbg !4459
  %54 = load i16, i16* %53, align 8, !dbg !4459, !tbaa !4461
  %55 = tail call zeroext i16 @lwip_htons(i16 zeroext %54) #6, !dbg !4459
  %56 = icmp eq i16 %55, 1, !dbg !4462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4463
  br i1 %56, label %57, label %809, !dbg !4463

; <label>:57:                                     ; preds = %52
  %58 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 15, !dbg !4464
  %59 = load i16, i16* %58, align 2, !dbg !4464, !tbaa !4465
  %60 = tail call zeroext i16 @lwip_htons(i16 zeroext %59) #6, !dbg !4464
  %61 = icmp eq i16 %11, 0, !dbg !4469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4470
  br i1 %61, label %66, label %62, !dbg !4470

; <label>:62:                                     ; preds = %57
  %63 = icmp eq i16 %11, 1, !dbg !4471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4472
  br i1 %63, label %66, label %64, !dbg !4472

; <label>:64:                                     ; preds = %62
  %65 = icmp eq i16 %11, 2, !dbg !4473
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4474
  br i1 %65, label %66, label %74, !dbg !4474

; <label>:66:                                     ; preds = %64, %62, %57
  %67 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 5, !dbg !4475
  %68 = load i16, i16* %67, align 2, !dbg !4475, !tbaa !3626
  %69 = tail call zeroext i16 @lwip_htons(i16 zeroext %68) #6, !dbg !4475
  %70 = zext i16 %69 to i32, !dbg !4478
  %71 = mul nuw nsw i32 %70, 104, !dbg !4479
  %72 = add nuw nsw i32 %71, 2256, !dbg !4480
  %73 = icmp eq i32 %8, %72, !dbg !4481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4484
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %73, label %113, label %809

; <label>:74:                                     ; preds = %64
  %75 = icmp eq i16 %11, 3, !dbg !4485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4486
  br i1 %75, label %76, label %78, !dbg !4486

; <label>:76:                                     ; preds = %74
  %77 = icmp eq i32 %8, 2296, !dbg !4488
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4490
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4491
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %77, label %113, label %809

; <label>:78:                                     ; preds = %74
  %79 = icmp eq i16 %11, 4, !dbg !4492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4493
  br i1 %79, label %80, label %92, !dbg !4493

; <label>:80:                                     ; preds = %78
  %81 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, !dbg !4495
  %82 = bitcast %union.clusterMsgData* %81 to %struct.clusterMsgDataPublish*, !dbg !4495
  %83 = bitcast %union.clusterMsgData* %81 to i32*, !dbg !4495
  %84 = load i32, i32* %83, align 8, !dbg !4495, !tbaa !745
  %85 = tail call i32 @lwip_htonl(i32 %84) #6, !dbg !4495
  %86 = getelementptr inbounds %struct.clusterMsgDataPublish, %struct.clusterMsgDataPublish* %82, i64 0, i32 1, !dbg !4496
  %87 = load i32, i32* %86, align 4, !dbg !4496, !tbaa !745
  %88 = tail call i32 @lwip_htonl(i32 %87) #6, !dbg !4496
  %89 = add i32 %85, 2264, !dbg !4497
  %90 = add i32 %89, %88, !dbg !4498
  %91 = icmp eq i32 %8, %90, !dbg !4499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4502
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %91, label %113, label %809

; <label>:92:                                     ; preds = %78
  %93 = icmp eq i16 %11, 5, !dbg !4503
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4504
  br i1 %93, label %98, label %94, !dbg !4504

; <label>:94:                                     ; preds = %92
  %95 = icmp eq i16 %11, 6, !dbg !4505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4506
  br i1 %95, label %98, label %96, !dbg !4506

; <label>:96:                                     ; preds = %94
  %97 = icmp eq i16 %11, 8, !dbg !4507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4508
  br i1 %97, label %98, label %100, !dbg !4508

; <label>:98:                                     ; preds = %96, %94, %92
  %99 = icmp eq i32 %8, 2256, !dbg !4510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4512
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4513
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %99, label %113, label %809

; <label>:100:                                    ; preds = %96
  %101 = icmp eq i16 %11, 7, !dbg !4514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4515
  br i1 %101, label %102, label %104, !dbg !4515

; <label>:102:                                    ; preds = %100
  %103 = icmp eq i32 %8, 4352, !dbg !4517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4520
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %103, label %113, label %809

; <label>:104:                                    ; preds = %100
  %105 = icmp eq i16 %11, 9, !dbg !4521
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4522
  br i1 %105, label %106, label %113, !dbg !4522

; <label>:106:                                    ; preds = %104
  %107 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, !dbg !4524
  %108 = bitcast [40 x i8]* %107 to i32*, !dbg !4524
  %109 = load i32, i32* %108, align 8, !dbg !4524, !tbaa !745
  %110 = tail call i32 @lwip_htonl(i32 %109) #6, !dbg !4524
  %111 = add i32 %110, 2269, !dbg !4525
  %112 = icmp eq i32 %8, %111, !dbg !4526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4528
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4529
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br i1 %112, label %113, label %809

; <label>:113:                                    ; preds = %76, %98, %104, %106, %102, %80, %66
  %114 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 9, i64 0, !dbg !4530
  %115 = tail call i8* @sdsnewlen(i8* nonnull %114, i64 40) #6, !dbg !4533
  %116 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4535, !tbaa !788
  %117 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %116, i64 0, i32 4, !dbg !4536
  %118 = load %struct.dict*, %struct.dict** %117, align 8, !dbg !4536, !tbaa !837
  %119 = tail call %struct.dictEntry* @dictFind(%struct.dict* %118, i8* %115) #6, !dbg !4537
  tail call void @sdsfree(i8* %115) #6, !dbg !4539
  %120 = icmp eq %struct.dictEntry* %119, null, !dbg !4540
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4541
  br i1 %120, label %121, label %122, !dbg !4541

; <label>:121:                                    ; preds = %113
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4542
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4545
  br label %184, !dbg !4545

; <label>:122:                                    ; preds = %113
  %123 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %119, i64 0, i32 1, i32 0, !dbg !4547
  %124 = bitcast i8** %123 to %struct.clusterNode**, !dbg !4547
  %125 = load %struct.clusterNode*, %struct.clusterNode** %124, align 8, !dbg !4547, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4543
  %126 = icmp eq %struct.clusterNode* %125, null, !dbg !4549
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4545
  br i1 %126, label %184, label %127, !dbg !4545

; <label>:127:                                    ; preds = %122
  %128 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %125, i64 0, i32 2, !dbg !4550
  %129 = load i32, i32* %128, align 8, !dbg !4550, !tbaa !927
  %130 = and i32 %129, 32, !dbg !4550
  %131 = icmp eq i32 %130, 0, !dbg !4550
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4551
  br i1 %131, label %132, label %184, !dbg !4551

; <label>:132:                                    ; preds = %127
  %133 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 6, !dbg !4552
  %134 = load i64, i64* %133, align 8, !dbg !4552, !tbaa !4554
  %135 = tail call i64 @intrev64(i64 %134) #6, !dbg !4552
  %136 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 7, !dbg !4555
  %137 = load i64, i64* %136, align 8, !dbg !4555, !tbaa !4556
  %138 = tail call i64 @intrev64(i64 %137) #6, !dbg !4555
  %139 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4557, !tbaa !788
  %140 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 1, !dbg !4559
  %141 = load i64, i64* %140, align 8, !dbg !4559, !tbaa !797
  %142 = icmp ugt i64 %135, %141, !dbg !4560
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4561
  br i1 %142, label %143, label %144, !dbg !4561

; <label>:143:                                    ; preds = %132
  store i64 %135, i64* %140, align 8, !dbg !4562, !tbaa !797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4563
  br label %144, !dbg !4563

; <label>:144:                                    ; preds = %143, %132
  %145 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %125, i64 0, i32 3, !dbg !4564
  %146 = load i64, i64* %145, align 8, !dbg !4564, !tbaa !1093
  %147 = icmp ugt i64 %138, %146, !dbg !4566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4567
  br i1 %147, label %148, label %152, !dbg !4567

; <label>:148:                                    ; preds = %144
  store i64 %138, i64* %145, align 8, !dbg !4568, !tbaa !1093
  %149 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 22, !dbg !4572
  %150 = load i32, i32* %149, align 8, !dbg !4573, !tbaa !1475
  %151 = or i32 %150, 12, !dbg !4573
  store i32 %151, i32* %149, align 8, !dbg !4573, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4574
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4575
  br label %152, !dbg !4575

; <label>:152:                                    ; preds = %148, %144
  %153 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 8, !dbg !4576
  %154 = load i64, i64* %153, align 8, !dbg !4576, !tbaa !4577
  %155 = tail call i64 @intrev64(i64 %154) #6, !dbg !4576
  %156 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %125, i64 0, i32 15, !dbg !4578
  store i64 %155, i64* %156, align 8, !dbg !4579, !tbaa !1200
  %157 = tail call i64 @mstime() #6, !dbg !4580
  %158 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %125, i64 0, i32 13, !dbg !4581
  store i64 %157, i64* %158, align 8, !dbg !4582, !tbaa !1197
  %159 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4583, !tbaa !788
  %160 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %159, i64 0, i32 17, !dbg !4585
  %161 = load i64, i64* %160, align 8, !dbg !4585, !tbaa !1987
  %162 = icmp eq i64 %161, 0, !dbg !4586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4587
  br i1 %162, label %184, label %163, !dbg !4587

; <label>:163:                                    ; preds = %152
  %164 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4588, !tbaa !760
  %165 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %164, i64 0, i32 2, !dbg !4588
  %166 = load i32, i32* %165, align 8, !dbg !4588, !tbaa !927
  %167 = and i32 %166, 2, !dbg !4588
  %168 = icmp eq i32 %167, 0, !dbg !4588
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4589
  br i1 %168, label %184, label %169, !dbg !4589

; <label>:169:                                    ; preds = %163
  %170 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %164, i64 0, i32 8, !dbg !4590
  %171 = load %struct.clusterNode*, %struct.clusterNode** %170, align 8, !dbg !4590, !tbaa !1025
  %172 = icmp eq %struct.clusterNode* %171, %125, !dbg !4591
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4592
  br i1 %172, label %173, label %184, !dbg !4592

; <label>:173:                                    ; preds = %169
  %174 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 17, i64 0, !dbg !4593
  %175 = load i8, i8* %174, align 1, !dbg !4593, !tbaa !745
  %176 = and i8 %175, 1, !dbg !4594
  %177 = icmp eq i8 %176, 0, !dbg !4594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4595
  br i1 %177, label %184, label %178, !dbg !4595

; <label>:178:                                    ; preds = %173
  %179 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %159, i64 0, i32 19, !dbg !4596
  %180 = load i64, i64* %179, align 8, !dbg !4596, !tbaa !1996
  %181 = icmp eq i64 %180, 0, !dbg !4597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4598
  br i1 %181, label %182, label %184, !dbg !4598

; <label>:182:                                    ; preds = %178
  %183 = load i64, i64* %156, align 8, !dbg !4599, !tbaa !1200
  store i64 %183, i64* %179, align 8, !dbg !4601, !tbaa !1996
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.51, i64 0, i64 0), i64 %183) #6, !dbg !4602
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4603
  br label %184, !dbg !4603

; <label>:184:                                    ; preds = %122, %121, %173, %163, %152, %127, %169, %178, %182
  %185 = phi i1 [ true, %127 ], [ true, %182 ], [ true, %178 ], [ true, %173 ], [ true, %169 ], [ true, %163 ], [ true, %152 ], [ false, %122 ], [ false, %121 ]
  %186 = phi %struct.clusterNode* [ %125, %127 ], [ %125, %182 ], [ %125, %178 ], [ %125, %173 ], [ %125, %169 ], [ %125, %163 ], [ %125, %152 ], [ null, %122 ], [ null, %121 ]
  %187 = phi i64 [ 0, %127 ], [ %138, %182 ], [ %138, %178 ], [ %138, %173 ], [ %138, %169 ], [ %138, %163 ], [ %138, %152 ], [ 0, %122 ], [ 0, %121 ], !dbg !4604
  %188 = phi i64 [ 0, %127 ], [ %135, %182 ], [ %135, %178 ], [ %135, %173 ], [ %135, %169 ], [ %135, %163 ], [ %135, %152 ], [ 0, %122 ], [ 0, %121 ], !dbg !4604
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4605
  br i1 %61, label %192, label %189, !dbg !4605

; <label>:189:                                    ; preds = %184
  %190 = icmp eq i16 %11, 2, !dbg !4606
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4607
  br i1 %190, label %192, label %191, !dbg !4607

; <label>:191:                                    ; preds = %189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4608
  br label %306, !dbg !4608

; <label>:192:                                    ; preds = %189, %184
  %193 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !4609
  %194 = bitcast %struct.clusterNode** %193 to i8**, !dbg !4609
  %195 = load i8*, i8** %194, align 8, !dbg !4609, !tbaa !2154
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52, i64 0, i64 0), i8* %195) #6, !dbg !4610
  %196 = icmp eq i16 %11, 2, !dbg !4611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4612
  br i1 %196, label %205, label %197, !dbg !4612

; <label>:197:                                    ; preds = %192
  %198 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4613, !tbaa !760
  %199 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %198, i64 0, i32 16, i64 0, !dbg !4613
  %200 = load i8, i8* %199, align 8, !dbg !4613, !tbaa !745
  %201 = icmp eq i8 %200, 0, !dbg !4614
  %202 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !4615
  %203 = icmp eq i8* %202, null, !dbg !4616
  %204 = and i1 %201, %203, !dbg !4617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4617
  br i1 %204, label %208, label %230, !dbg !4617

; <label>:205:                                    ; preds = %192
  %206 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !4615, !tbaa !4618
  %207 = icmp eq i8* %206, null, !dbg !4616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4619
  br i1 %207, label %208, label %230, !dbg !4619

; <label>:208:                                    ; preds = %197, %205
  %209 = getelementptr inbounds [46 x i8], [46 x i8]* %2, i64 0, i64 0, !dbg !4620
  call void @llvm.lifetime.start.p0i8(i64 46, i8* nonnull %209) #7, !dbg !4620
  %210 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !4622
  %211 = load i32, i32* %210, align 8, !dbg !4622, !tbaa !2159
  %212 = call i32 @anetSockName(i32 %211, i8* nonnull %209, i64 46, i32* null) #6, !dbg !4624
  %213 = icmp eq i32 %212, -1, !dbg !4625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4626
  br i1 %213, label %229, label %214, !dbg !4626

; <label>:214:                                    ; preds = %208
  %215 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4627, !tbaa !760
  %216 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %215, i64 0, i32 16, i64 0, !dbg !4627
  %217 = call i32 @strcmp(i8* nonnull %209, i8* nonnull %216) #6, !dbg !4628
  %218 = icmp eq i32 %217, 0, !dbg !4628
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4629
  br i1 %218, label %229, label %219, !dbg !4629

; <label>:219:                                    ; preds = %214
  %220 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4630, !tbaa !760
  %221 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %220, i64 0, i32 16, i64 0, !dbg !4630
  %222 = call i8* @memcpy(i8* nonnull %221, i8* nonnull %209, i64 46) #6, !dbg !4632
  %223 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !4633, !tbaa !760
  %224 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %223, i64 0, i32 16, i64 0, !dbg !4633
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %224) #6, !dbg !4634
  %225 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4637, !tbaa !788
  %226 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %225, i64 0, i32 22, !dbg !4638
  %227 = load i32, i32* %226, align 8, !dbg !4639, !tbaa !1475
  %228 = or i32 %227, 4, !dbg !4639
  store i32 %228, i32* %226, align 8, !dbg !4639, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4641
  br label %229, !dbg !4641

; <label>:229:                                    ; preds = %214, %208, %219
  call void @llvm.lifetime.end.p0i8(i64 46, i8* nonnull %209) #7, !dbg !4642
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4643
  br label %230, !dbg !4643

; <label>:230:                                    ; preds = %229, %205, %197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4644
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4645
  br i1 %185, label %305, label %231, !dbg !4644

; <label>:231:                                    ; preds = %230
  br i1 %196, label %232, label %285, !dbg !4646

; <label>:232:                                    ; preds = %231
  %233 = call i8* @zmalloc(i64 2264) #6, !dbg !4650
  %234 = getelementptr inbounds i8, i8* %233, i64 8, !dbg !4652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4653
  call void @getRandomHexChars(i8* nonnull %234, i64 40) #6, !dbg !4654
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %235 = call i64 @mstime() #6, !dbg !4655
  %236 = bitcast i8* %233 to i64*, !dbg !4656
  store i64 %235, i64* %236, align 8, !dbg !4657, !tbaa !1155
  %237 = getelementptr inbounds i8, i8* %233, i64 56, !dbg !4658
  %238 = bitcast i8* %237 to i64*, !dbg !4658
  store i64 0, i64* %238, align 8, !dbg !4659, !tbaa !1093
  %239 = getelementptr inbounds i8, i8* %233, i64 48, !dbg !4660
  %240 = bitcast i8* %239 to i32*, !dbg !4660
  store i32 32, i32* %240, align 8, !dbg !4661, !tbaa !927
  %241 = getelementptr inbounds i8, i8* %233, i64 64, !dbg !4662
  %242 = call i8* @memset(i8* nonnull %241, i32 0, i64 2048) #6, !dbg !4663
  %243 = getelementptr inbounds i8, i8* %233, i64 2112, !dbg !4664
  %244 = bitcast i8* %243 to i32*, !dbg !4664
  store i32 0, i32* %244, align 8, !dbg !4665, !tbaa !1164
  %245 = getelementptr inbounds i8, i8* %233, i64 2116, !dbg !4666
  %246 = bitcast i8* %245 to i32*, !dbg !4666
  store i32 0, i32* %246, align 4, !dbg !4667, !tbaa !1041
  %247 = getelementptr inbounds i8, i8* %233, i64 2120, !dbg !4668
  %248 = bitcast i8* %247 to %struct.clusterNode***, !dbg !4668
  store %struct.clusterNode** null, %struct.clusterNode*** %248, align 8, !dbg !4669, !tbaa !1044
  %249 = getelementptr inbounds i8, i8* %233, i64 2128, !dbg !4670
  %250 = bitcast i8* %249 to %struct.clusterNode**, !dbg !4670
  store %struct.clusterNode* null, %struct.clusterNode** %250, align 8, !dbg !4671, !tbaa !1025
  %251 = getelementptr inbounds i8, i8* %233, i64 2136, !dbg !4672
  %252 = bitcast i8* %251 to <2 x i64>*, !dbg !4673
  store <2 x i64> zeroinitializer, <2 x i64>* %252, align 8, !dbg !4673, !tbaa !1173
  %253 = getelementptr inbounds i8, i8* %233, i64 2152, !dbg !4674
  %254 = bitcast i8* %253 to i64*, !dbg !4674
  store i64 0, i64* %254, align 8, !dbg !4675, !tbaa !954
  %255 = getelementptr inbounds i8, i8* %233, i64 2248, !dbg !4676
  %256 = bitcast i8* %255 to %struct.clusterLink**, !dbg !4676
  store %struct.clusterLink* null, %struct.clusterLink** %256, align 8, !dbg !4677, !tbaa !1178
  %257 = getelementptr inbounds i8, i8* %233, i64 2192, !dbg !4678
  %258 = call i8* @memset(i8* nonnull %257, i32 0, i64 46) #6, !dbg !4679
  %259 = getelementptr inbounds i8, i8* %233, i64 2240, !dbg !4680
  %260 = bitcast i8* %259 to i32*, !dbg !4680
  store i32 0, i32* %260, align 8, !dbg !4681, !tbaa !900
  %261 = getelementptr inbounds i8, i8* %233, i64 2244, !dbg !4682
  %262 = bitcast i8* %261 to i32*, !dbg !4682
  store i32 0, i32* %262, align 4, !dbg !4683, !tbaa !907
  %263 = call %struct.list* @listCreate() #6, !dbg !4684
  %264 = getelementptr inbounds i8, i8* %233, i64 2256, !dbg !4685
  %265 = bitcast i8* %264 to %struct.list**, !dbg !4685
  store %struct.list* %263, %struct.list** %265, align 8, !dbg !4686, !tbaa !1188
  %266 = getelementptr inbounds i8, i8* %233, i64 2160, !dbg !4687
  %267 = bitcast i8* %266 to i64*, !dbg !4687
  store i64 0, i64* %267, align 8, !dbg !4688, !tbaa !1191
  %268 = getelementptr inbounds i8, i8* %233, i64 2176, !dbg !4689
  %269 = bitcast i8* %268 to i64*, !dbg !4689
  store i64 0, i64* %269, align 8, !dbg !4690, !tbaa !1194
  %270 = getelementptr inbounds i8, i8* %233, i64 2168, !dbg !4691
  %271 = bitcast i8* %270 to i64*, !dbg !4691
  store i64 0, i64* %271, align 8, !dbg !4692, !tbaa !1197
  %272 = getelementptr inbounds i8, i8* %233, i64 2184, !dbg !4693
  %273 = bitcast i8* %272 to i64*, !dbg !4693
  store i64 0, i64* %273, align 8, !dbg !4694, !tbaa !1200
  %274 = getelementptr inbounds %struct.list, %struct.list* %263, i64 0, i32 3, !dbg !4695
  store void (i8*)* @zfree, void (i8*)** %274, align 8, !dbg !4695, !tbaa !1202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4696
  %275 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 12, i64 0, !dbg !4698
  %276 = load i8, i8* %275, align 1, !dbg !4703, !tbaa !745
  %277 = icmp eq i8 %276, 0, !dbg !4704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4705
  br i1 %277, label %281, label %278, !dbg !4705

; <label>:278:                                    ; preds = %232
  %279 = call i8* @memcpy(i8* nonnull %257, i8* nonnull %275, i64 46) #6, !dbg !4706
  %280 = getelementptr inbounds i8, i8* %233, i64 2237, !dbg !4707
  store i8 0, i8* %280, align 1, !dbg !4708, !tbaa !745
  br label %286, !dbg !4709

; <label>:281:                                    ; preds = %232
  %282 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !4710
  %283 = load i32, i32* %282, align 8, !dbg !4710, !tbaa !2159
  %284 = call i32 @anetPeerToString(i32 %283, i8* nonnull %257, i64 46, i32* null) #6, !dbg !4711
  br label %286

; <label>:285:                                    ; preds = %231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4712
  br label %304

; <label>:286:                                    ; preds = %281, %278
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4714
  %287 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 3, !dbg !4715
  %288 = load i16, i16* %287, align 2, !dbg !4715, !tbaa !3954
  %289 = call zeroext i16 @lwip_htons(i16 zeroext %288) #6, !dbg !4715
  %290 = zext i16 %289 to i32, !dbg !4715
  store i32 %290, i32* %260, align 8, !dbg !4716, !tbaa !900
  %291 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 14, !dbg !4717
  %292 = load i16, i16* %291, align 8, !dbg !4717, !tbaa !3957
  %293 = call zeroext i16 @lwip_htons(i16 zeroext %292) #6, !dbg !4717
  %294 = zext i16 %293 to i32, !dbg !4717
  store i32 %294, i32* %262, align 4, !dbg !4718, !tbaa !907
  %295 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4721, !tbaa !788
  %296 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %295, i64 0, i32 4, !dbg !4722
  %297 = load %struct.dict*, %struct.dict** %296, align 8, !dbg !4722, !tbaa !837
  %298 = call i8* @sdsnewlen(i8* nonnull %234, i64 40) #6, !dbg !4723
  %299 = call i32 @dictAdd(%struct.dict* %297, i8* %298, i8* %233) #6, !dbg !4724
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4726
  %300 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4729, !tbaa !788
  %301 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %300, i64 0, i32 22, !dbg !4730
  %302 = load i32, i32* %301, align 8, !dbg !4731, !tbaa !1475
  %303 = or i32 %302, 4, !dbg !4731
  store i32 %303, i32* %301, align 8, !dbg !4731, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4732
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4733
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4712
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4734
  call void @clusterProcessGossipSection(%struct.clusterMsg* nonnull %5, %struct.clusterLink* nonnull %0) #10, !dbg !4735
  br label %304, !dbg !4735

; <label>:304:                                    ; preds = %285, %286
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4645
  br label %305, !dbg !4736

; <label>:305:                                    ; preds = %304, %230
  call void @clusterSendPing(%struct.clusterLink* nonnull %0, i32 1) #10, !dbg !4736
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4737
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4608
  br i1 %61, label %310, label %306, !dbg !4608

; <label>:306:                                    ; preds = %191, %305
  %307 = icmp eq i16 %11, 1, !dbg !4738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4739
  br i1 %307, label %310, label %308, !dbg !4739

; <label>:308:                                    ; preds = %306
  %309 = icmp eq i16 %11, 2, !dbg !4740
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4741
  br i1 %309, label %310, label %623, !dbg !4741

; <label>:310:                                    ; preds = %308, %306, %305
  %311 = select i1 %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), !dbg !4742
  %312 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !4743
  %313 = bitcast %struct.clusterNode** %312 to i8**, !dbg !4743
  %314 = load i8*, i8** %313, align 8, !dbg !4743, !tbaa !2154
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.54, i64 0, i64 0), i8* %311, i8* %314) #6, !dbg !4744
  %315 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4745, !tbaa !2154
  %316 = icmp eq %struct.clusterNode* %315, null, !dbg !4747
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4748
  br i1 %316, label %375, label %317, !dbg !4748

; <label>:317:                                    ; preds = %310
  %318 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %315, i64 0, i32 2, !dbg !4749
  %319 = load i32, i32* %318, align 8, !dbg !4749, !tbaa !927
  %320 = and i32 %319, 32, !dbg !4749
  %321 = icmp eq i32 %320, 0, !dbg !4749
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4752
  br i1 %321, label %348, label %322, !dbg !4752

; <label>:322:                                    ; preds = %317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4753
  br i1 %185, label %323, label %334, !dbg !4753

; <label>:323:                                    ; preds = %322
  %324 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 1, i64 0, !dbg !4755
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.57, i64 0, i64 0), i8* nonnull %324) #6, !dbg !4758
  %325 = call i32 @nodeUpdateAddressIfNeeded(%struct.clusterNode* nonnull %186, %struct.clusterLink* nonnull %0, %struct.clusterMsg* nonnull %5) #10, !dbg !4759
  %326 = icmp eq i32 %325, 0, !dbg !4759
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4761
  br i1 %326, label %332, label %327, !dbg !4761

; <label>:327:                                    ; preds = %323
  %328 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4765, !tbaa !788
  %329 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %328, i64 0, i32 22, !dbg !4766
  %330 = load i32, i32* %329, align 8, !dbg !4767, !tbaa !1475
  %331 = or i32 %330, 6, !dbg !4767
  store i32 %331, i32* %329, align 8, !dbg !4767, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4768
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4769
  br label %332, !dbg !4769

; <label>:332:                                    ; preds = %323, %327
  %333 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4770, !tbaa !2154
  call void @clusterDelNode(%struct.clusterNode* %333) #10, !dbg !4771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4772
  br label %809, !dbg !4772

; <label>:334:                                    ; preds = %322
  call void @clusterRenameNode(%struct.clusterNode* nonnull %315, i8* nonnull %114) #10, !dbg !4773
  %335 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4774, !tbaa !2154
  %336 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %335, i64 0, i32 1, i64 0, !dbg !4775
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.58, i64 0, i64 0), i8* nonnull %336) #6, !dbg !4776
  %337 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4777, !tbaa !2154
  %338 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %337, i64 0, i32 2, !dbg !4778
  %339 = load i32, i32* %338, align 8, !dbg !4779, !tbaa !927
  %340 = and i32 %339, -33, !dbg !4779
  %341 = and i16 %60, 3, !dbg !4780
  %342 = zext i16 %341 to i32, !dbg !4780
  %343 = or i32 %340, %342, !dbg !4781
  store i32 %343, i32* %338, align 8, !dbg !4781, !tbaa !927
  %344 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4784, !tbaa !788
  %345 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %344, i64 0, i32 22, !dbg !4785
  %346 = load i32, i32* %345, align 8, !dbg !4786, !tbaa !1475
  %347 = or i32 %346, 4, !dbg !4786
  store i32 %347, i32* %345, align 8, !dbg !4786, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4787
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4789
  br label %394, !dbg !4789

; <label>:348:                                    ; preds = %317
  %349 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %315, i64 0, i32 1, i64 0, !dbg !4790
  %350 = call i32 @memcmp(i8* nonnull %349, i8* nonnull %114, i64 40) #6, !dbg !4792
  %351 = icmp eq i32 %350, 0, !dbg !4793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4794
  br i1 %351, label %375, label %352, !dbg !4794

; <label>:352:                                    ; preds = %348
  %353 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4795, !tbaa !2154
  %354 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %353, i64 0, i32 1, i64 0, !dbg !4797
  %355 = call i64 @mstime() #6, !dbg !4798
  %356 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4799, !tbaa !2154
  %357 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %356, i64 0, i32 0, !dbg !4800
  %358 = load i64, i64* %357, align 8, !dbg !4800, !tbaa !1155
  %359 = sub nsw i64 %355, %358, !dbg !4801
  %360 = trunc i64 %359 to i32, !dbg !4802
  %361 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %356, i64 0, i32 2, !dbg !4803
  %362 = load i32, i32* %361, align 8, !dbg !4803, !tbaa !927
  call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.59, i64 0, i64 0), i8* nonnull %354, i32 %360, i32 %362) #6, !dbg !4804
  %363 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4805, !tbaa !2154
  %364 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %363, i64 0, i32 2, !dbg !4806
  %365 = load i32, i32* %364, align 8, !dbg !4807, !tbaa !927
  %366 = or i32 %365, 64, !dbg !4807
  store i32 %366, i32* %364, align 8, !dbg !4807, !tbaa !927
  %367 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %363, i64 0, i32 16, i64 0, !dbg !4808
  store i8 0, i8* %367, align 8, !dbg !4809, !tbaa !745
  %368 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4810, !tbaa !2154
  %369 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %368, i64 0, i32 17, !dbg !4811
  store i32 0, i32* %369, align 8, !dbg !4812, !tbaa !900
  %370 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %368, i64 0, i32 18, !dbg !4813
  store i32 0, i32* %370, align 4, !dbg !4814, !tbaa !907
  call void @freeClusterLink(%struct.clusterLink* nonnull %0) #10, !dbg !4815
  %371 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4818, !tbaa !788
  %372 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %371, i64 0, i32 22, !dbg !4819
  %373 = load i32, i32* %372, align 8, !dbg !4820, !tbaa !1475
  %374 = or i32 %373, 4, !dbg !4820
  store i32 %374, i32* %372, align 8, !dbg !4820, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4822
  br label %809, !dbg !4822

; <label>:375:                                    ; preds = %348, %310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4789
  br i1 %185, label %376, label %394, !dbg !4789

; <label>:376:                                    ; preds = %375
  %377 = and i16 %60, 512, !dbg !4823
  %378 = zext i16 %377 to i32, !dbg !4823
  %379 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 2, !dbg !4825
  %380 = load i32, i32* %379, align 8, !dbg !4826, !tbaa !927
  %381 = and i32 %380, -513, !dbg !4826
  %382 = or i32 %381, %378, !dbg !4827
  store i32 %382, i32* %379, align 8, !dbg !4827, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4829
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4831
  br i1 %61, label %383, label %395, !dbg !4831

; <label>:383:                                    ; preds = %376
  %384 = and i32 %380, 32, !dbg !4832
  %385 = icmp eq i32 %384, 0, !dbg !4832
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4833
  br i1 %385, label %386, label %395, !dbg !4833

; <label>:386:                                    ; preds = %383
  %387 = call i32 @nodeUpdateAddressIfNeeded(%struct.clusterNode* nonnull %186, %struct.clusterLink* nonnull %0, %struct.clusterMsg* nonnull %5) #10, !dbg !4834
  %388 = icmp eq i32 %387, 0, !dbg !4834
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4835
  br i1 %388, label %395, label %389, !dbg !4835

; <label>:389:                                    ; preds = %386
  %390 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4839, !tbaa !788
  %391 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %390, i64 0, i32 22, !dbg !4840
  %392 = load i32, i32* %391, align 8, !dbg !4841, !tbaa !1475
  %393 = or i32 %392, 6, !dbg !4841
  store i32 %393, i32* %391, align 8, !dbg !4841, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4843
  br label %395, !dbg !4843

; <label>:394:                                    ; preds = %334, %375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4829
  br label %395

; <label>:395:                                    ; preds = %394, %386, %383, %389, %376
  %396 = phi i1 [ false, %394 ], [ true, %386 ], [ true, %383 ], [ true, %389 ], [ true, %376 ]
  %397 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4844, !tbaa !2154
  %398 = icmp eq %struct.clusterNode* %397, null, !dbg !4846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4847
  br i1 %398, label %420, label %399, !dbg !4847

; <label>:399:                                    ; preds = %395
  %400 = icmp eq i16 %11, 1, !dbg !4848
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4849
  br i1 %400, label %401, label %420, !dbg !4849

; <label>:401:                                    ; preds = %399
  %402 = call i64 @mstime() #6, !dbg !4850
  %403 = load %struct.clusterNode*, %struct.clusterNode** %312, align 8, !dbg !4852, !tbaa !2154
  %404 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %403, i64 0, i32 10, !dbg !4853
  store i64 %402, i64* %404, align 8, !dbg !4854, !tbaa !1087
  %405 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %403, i64 0, i32 9, !dbg !4855
  store i64 0, i64* %405, align 8, !dbg !4856, !tbaa !1078
  %406 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %403, i64 0, i32 2, !dbg !4857
  %407 = load i32, i32* %406, align 8, !dbg !4857, !tbaa !927
  %408 = and i32 %407, 4, !dbg !4857
  %409 = icmp eq i32 %408, 0, !dbg !4857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4859
  br i1 %409, label %416, label %410, !dbg !4859

; <label>:410:                                    ; preds = %401
  %411 = and i32 %407, -5, !dbg !4860
  store i32 %411, i32* %406, align 8, !dbg !4860, !tbaa !927
  %412 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4864, !tbaa !788
  %413 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %412, i64 0, i32 22, !dbg !4865
  %414 = load i32, i32* %413, align 8, !dbg !4866, !tbaa !1475
  %415 = or i32 %414, 6, !dbg !4866
  store i32 %415, i32* %413, align 8, !dbg !4866, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4867
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4868
  br label %420, !dbg !4868

; <label>:416:                                    ; preds = %401
  %417 = and i32 %407, 8, !dbg !4869
  %418 = icmp eq i32 %417, 0, !dbg !4869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4871
  br i1 %418, label %420, label %419, !dbg !4871

; <label>:419:                                    ; preds = %416
  call void @clearNodeFailureIfNeeded(%struct.clusterNode* %403) #10, !dbg !4872
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4874
  br label %420, !dbg !4874

; <label>:420:                                    ; preds = %416, %395, %410, %419, %399
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4875
  br i1 %396, label %421, label %621, !dbg !4875

; <label>:421:                                    ; preds = %420
  %422 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 11, i64 0, !dbg !4876
  %423 = call i32 @memcmp(i8* nonnull %422, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.60, i64 0, i64 0), i64 40) #6, !dbg !4877
  %424 = icmp eq i32 %423, 0, !dbg !4877
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4878
  br i1 %424, label %425, label %427, !dbg !4878

; <label>:425:                                    ; preds = %421
  call void @clusterSetNodeAsMaster(%struct.clusterNode* nonnull %186) #10, !dbg !4879
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4881
  %426 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 2, !dbg !4882
  br label %540, !dbg !4881

; <label>:427:                                    ; preds = %421
  %428 = call i8* @sdsnewlen(i8* nonnull %422, i64 40) #6, !dbg !4887
  %429 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4889, !tbaa !788
  %430 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %429, i64 0, i32 4, !dbg !4890
  %431 = load %struct.dict*, %struct.dict** %430, align 8, !dbg !4890, !tbaa !837
  %432 = call %struct.dictEntry* @dictFind(%struct.dict* %431, i8* %428) #6, !dbg !4891
  call void @sdsfree(i8* %428) #6, !dbg !4893
  %433 = icmp eq %struct.dictEntry* %432, null, !dbg !4894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4895
  br i1 %433, label %438, label %434, !dbg !4895

; <label>:434:                                    ; preds = %427
  %435 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %432, i64 0, i32 1, i32 0, !dbg !4896
  %436 = bitcast i8** %435 to %struct.clusterNode**, !dbg !4896
  %437 = load %struct.clusterNode*, %struct.clusterNode** %436, align 8, !dbg !4896, !tbaa !745
  br label %438, !dbg !4897

; <label>:438:                                    ; preds = %427, %434
  %439 = phi %struct.clusterNode* [ %437, %434 ], [ null, %427 ], !dbg !4898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4900
  %440 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 2, !dbg !4902
  %441 = load i32, i32* %440, align 8, !dbg !4902, !tbaa !927
  %442 = and i32 %441, 1, !dbg !4902
  %443 = icmp eq i32 %442, 0, !dbg !4902
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4904
  br i1 %443, label %453, label %444, !dbg !4904

; <label>:444:                                    ; preds = %438
  %445 = call i32 @clusterDelNodeSlots(%struct.clusterNode* nonnull %186) #10, !dbg !4905
  %446 = load i32, i32* %440, align 8, !dbg !4907, !tbaa !927
  %447 = and i32 %446, -260, !dbg !4907
  %448 = or i32 %447, 2, !dbg !4908
  store i32 %448, i32* %440, align 8, !dbg !4908, !tbaa !927
  %449 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4911, !tbaa !788
  %450 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %449, i64 0, i32 22, !dbg !4912
  %451 = load i32, i32* %450, align 8, !dbg !4913, !tbaa !1475
  %452 = or i32 %451, 6, !dbg !4913
  store i32 %452, i32* %450, align 8, !dbg !4913, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4915
  br label %453, !dbg !4915

; <label>:453:                                    ; preds = %438, %444
  %454 = icmp eq %struct.clusterNode* %439, null, !dbg !4916
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4918
  br i1 %454, label %539, label %455, !dbg !4918

; <label>:455:                                    ; preds = %453
  %456 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 8, !dbg !4919
  %457 = load %struct.clusterNode*, %struct.clusterNode** %456, align 8, !dbg !4919, !tbaa !1025
  %458 = icmp eq %struct.clusterNode* %457, %439, !dbg !4920
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4921
  br i1 %458, label %539, label %459, !dbg !4921

; <label>:459:                                    ; preds = %455
  %460 = icmp eq %struct.clusterNode* %457, null, !dbg !4922
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4925
  br i1 %460, label %503, label %461, !dbg !4925

; <label>:461:                                    ; preds = %459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4930
  %462 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %457, i64 0, i32 6, !dbg !4931
  %463 = load i32, i32* %462, align 4, !dbg !4931, !tbaa !1041
  %464 = icmp sgt i32 %463, 0, !dbg !4932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4933
  br i1 %464, label %465, label %502, !dbg !4933

; <label>:465:                                    ; preds = %461
  %466 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %457, i64 0, i32 7
  %467 = load %struct.clusterNode**, %struct.clusterNode*** %466, align 8, !tbaa !1044
  br label %468, !dbg !4933

; <label>:468:                                    ; preds = %499, %465
  %469 = phi i64 [ 0, %465 ], [ %473, %499 ]
  %470 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %467, i64 %469, !dbg !4934
  %471 = load %struct.clusterNode*, %struct.clusterNode** %470, align 8, !dbg !4934, !tbaa !760
  %472 = icmp eq %struct.clusterNode* %471, %186, !dbg !4935
  %473 = add nuw nsw i64 %469, 1, !dbg !4936
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4937
  br i1 %472, label %474, label %499, !dbg !4937

; <label>:474:                                    ; preds = %468
  %475 = trunc i64 %473 to i32, !dbg !4929
  %476 = icmp sgt i32 %463, %475, !dbg !4938
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4939
  br i1 %476, label %477, label %491, !dbg !4939

; <label>:477:                                    ; preds = %474
  %478 = trunc i64 %469 to i32, !dbg !4929
  %479 = and i64 %469, 4294967295, !dbg !4934
  %480 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %467, i64 %479, !dbg !4934
  %481 = xor i32 %478, -1, !dbg !4940
  %482 = add i32 %463, %481, !dbg !4940
  %483 = bitcast %struct.clusterNode** %480 to i8*, !dbg !4942
  %484 = and i64 %473, 4294967295, !dbg !4943
  %485 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %467, i64 %484, !dbg !4943
  %486 = bitcast %struct.clusterNode** %485 to i8*, !dbg !4944
  %487 = sext i32 %482 to i64, !dbg !4945
  %488 = shl nsw i64 %487, 3, !dbg !4946
  %489 = call i8* @memmove(i8* %483, i8* nonnull %486, i64 %488) #6, !dbg !4947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4948
  %490 = load i32, i32* %462, align 4, !dbg !4949, !tbaa !1041
  br label %491, !dbg !4948

; <label>:491:                                    ; preds = %477, %474
  %492 = phi i32 [ %490, %477 ], [ %463, %474 ], !dbg !4949
  %493 = add nsw i32 %492, -1, !dbg !4949
  store i32 %493, i32* %462, align 4, !dbg !4949, !tbaa !1041
  %494 = icmp eq i32 %493, 0, !dbg !4950
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4951
  br i1 %494, label %495, label %502, !dbg !4951

; <label>:495:                                    ; preds = %491
  %496 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %457, i64 0, i32 2, !dbg !4952
  %497 = load i32, i32* %496, align 8, !dbg !4953, !tbaa !927
  %498 = and i32 %497, -257, !dbg !4953
  store i32 %498, i32* %496, align 8, !dbg !4953, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4954
  br label %502, !dbg !4954

; <label>:499:                                    ; preds = %468
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4955
  %500 = trunc i64 %473 to i32, !dbg !4932
  %501 = icmp sgt i32 %463, %500, !dbg !4932
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4933
  br i1 %501, label %468, label %502, !dbg !4933, !llvm.loop !2431

; <label>:502:                                    ; preds = %499, %461, %491, %495
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4957
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4958
  br label %503, !dbg !4958

; <label>:503:                                    ; preds = %459, %502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4963
  %504 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %439, i64 0, i32 6, !dbg !4964
  %505 = load i32, i32* %504, align 4, !dbg !4964, !tbaa !1041
  %506 = icmp sgt i32 %505, 0, !dbg !4965
  %507 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %439, i64 0, i32 7, !dbg !4966
  %508 = load %struct.clusterNode**, %struct.clusterNode*** %507, align 8, !dbg !4966, !tbaa !1044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4967
  br i1 %506, label %509, label %519, !dbg !4967

; <label>:509:                                    ; preds = %503
  %510 = sext i32 %505 to i64
  br label %511, !dbg !4968

; <label>:511:                                    ; preds = %516, %509
  %512 = phi i64 [ 0, %509 ], [ %517, %516 ]
  %513 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %508, i64 %512, !dbg !4968
  %514 = load %struct.clusterNode*, %struct.clusterNode** %513, align 8, !dbg !4968, !tbaa !760
  %515 = icmp eq %struct.clusterNode* %514, %186, !dbg !4969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4970
  br i1 %515, label %534, label %516, !dbg !4970

; <label>:516:                                    ; preds = %511
  %517 = add nuw nsw i64 %512, 1, !dbg !4971
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4972
  %518 = icmp slt i64 %517, %510, !dbg !4965
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4967
  br i1 %518, label %511, label %519, !dbg !4967, !llvm.loop !1052

; <label>:519:                                    ; preds = %516, %503
  %520 = bitcast %struct.clusterNode** %508 to i8*, !dbg !4973
  %521 = add nsw i32 %505, 1, !dbg !4974
  %522 = sext i32 %521 to i64, !dbg !4975
  %523 = shl nsw i64 %522, 3, !dbg !4976
  %524 = call i8* @zrealloc(i8* %520, i64 %523) #6, !dbg !4977
  %525 = bitcast i8* %524 to %struct.clusterNode**, !dbg !4977
  %526 = bitcast %struct.clusterNode*** %507 to i8**, !dbg !4978
  store i8* %524, i8** %526, align 8, !dbg !4978, !tbaa !1044
  %527 = load i32, i32* %504, align 4, !dbg !4979, !tbaa !1041
  %528 = sext i32 %527 to i64, !dbg !4980
  %529 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %525, i64 %528, !dbg !4980
  store %struct.clusterNode* %186, %struct.clusterNode** %529, align 8, !dbg !4981, !tbaa !760
  %530 = add nsw i32 %527, 1, !dbg !4982
  store i32 %530, i32* %504, align 4, !dbg !4982, !tbaa !1041
  %531 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %439, i64 0, i32 2, !dbg !4983
  %532 = load i32, i32* %531, align 8, !dbg !4984, !tbaa !927
  %533 = or i32 %532, 256, !dbg !4984
  store i32 %533, i32* %531, align 8, !dbg !4984, !tbaa !927
  br label %534, !dbg !4985

; <label>:534:                                    ; preds = %511, %519
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4986
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4987
  store %struct.clusterNode* %439, %struct.clusterNode** %456, align 8, !dbg !4988, !tbaa !1025
  %535 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !4991, !tbaa !788
  %536 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %535, i64 0, i32 22, !dbg !4992
  %537 = load i32, i32* %536, align 8, !dbg !4993, !tbaa !1475
  %538 = or i32 %537, 4, !dbg !4993
  store i32 %538, i32* %536, align 8, !dbg !4993, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4994
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4995
  br label %539, !dbg !4995

; <label>:539:                                    ; preds = %455, %453, %534
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %540

; <label>:540:                                    ; preds = %539, %425
  %541 = phi i32* [ %440, %539 ], [ %426, %425 ], !dbg !4882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4998
  %542 = load i32, i32* %541, align 8, !dbg !4882, !tbaa !927
  %543 = and i32 %542, 1, !dbg !4882
  %544 = icmp eq i32 %543, 0, !dbg !4882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4882
  br i1 %544, label %546, label %545, !dbg !4882

; <label>:545:                                    ; preds = %540
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4999
  br label %550, !dbg !4999

; <label>:546:                                    ; preds = %540
  %547 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 8, !dbg !5000
  %548 = load %struct.clusterNode*, %struct.clusterNode** %547, align 8, !dbg !5000, !tbaa !1025
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4882
  %549 = icmp eq %struct.clusterNode* %548, null, !dbg !5001
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4999
  br i1 %549, label %557, label %550, !dbg !4999

; <label>:550:                                    ; preds = %545, %546
  %551 = phi %struct.clusterNode* [ %186, %545 ], [ %548, %546 ]
  %552 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %551, i64 0, i32 4, i64 0, !dbg !5003
  %553 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 10, i64 0, !dbg !5005
  %554 = call i32 @memcmp(i8* nonnull %552, i8* nonnull %553, i64 2048) #6, !dbg !5006
  %555 = icmp ne i32 %554, 0, !dbg !5007
  %556 = zext i1 %555 to i32, !dbg !5007
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5008
  br label %557, !dbg !5008

; <label>:557:                                    ; preds = %550, %546
  %558 = phi i32 [ %556, %550 ], [ 0, %546 ], !dbg !5009
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5010
  %559 = load i32, i32* %541, align 8, !dbg !5012, !tbaa !927
  %560 = and i32 %559, 1, !dbg !5012
  %561 = icmp ne i32 %560, 0, !dbg !5012
  %562 = icmp ne i32 %558, 0, !dbg !5013
  %563 = and i1 %562, %561, !dbg !5014
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5014
  br i1 %563, label %564, label %566, !dbg !5014

; <label>:564:                                    ; preds = %557
  %565 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 10, i64 0, !dbg !5015
  call void @clusterUpdateSlotsConfigWith(%struct.clusterNode* nonnull %186, i64 %187, i8* nonnull %565) #10, !dbg !5016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5016
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5017
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5018
  br label %568, !dbg !5017

; <label>:566:                                    ; preds = %557
  %567 = icmp eq i32 %558, 0, !dbg !5020
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5017
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5018
  br i1 %567, label %605, label %568, !dbg !5017

; <label>:568:                                    ; preds = %564, %566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5022
  %569 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8
  br label %570, !dbg !5022

; <label>:570:                                    ; preds = %568, %601
  %571 = phi i64 [ 0, %568 ], [ %602, %601 ]
  %572 = trunc i64 %571 to i32
  %573 = lshr i64 %571, 3
  %574 = and i64 %573, 8191
  %575 = and i32 %572, 7, !dbg !5031
  %576 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 10, i64 %574, !dbg !5033
  %577 = load i8, i8* %576, align 1, !dbg !5033, !tbaa !745
  %578 = zext i8 %577 to i32, !dbg !5033
  %579 = shl i32 1, %575, !dbg !5034
  %580 = and i32 %579, %578, !dbg !5035
  %581 = icmp eq i32 %580, 0, !dbg !5036
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5037
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5038
  br i1 %581, label %601, label %582, !dbg !5038

; <label>:582:                                    ; preds = %570
  %583 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %569, i64 0, i32 8, i64 %571, !dbg !5039
  %584 = load %struct.clusterNode*, %struct.clusterNode** %583, align 8, !dbg !5039, !tbaa !760
  %585 = icmp eq %struct.clusterNode* %584, %186, !dbg !5042
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5043
  br i1 %585, label %601, label %586, !dbg !5043

; <label>:586:                                    ; preds = %582
  %587 = icmp eq %struct.clusterNode* %584, null, !dbg !5044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5045
  br i1 %587, label %601, label %588, !dbg !5045

; <label>:588:                                    ; preds = %586
  %589 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %584, i64 0, i32 3, !dbg !5046
  %590 = load i64, i64* %589, align 8, !dbg !5046, !tbaa !1093
  %591 = icmp ugt i64 %590, %187, !dbg !5048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5049
  br i1 %591, label %592, label %601, !dbg !5049

; <label>:592:                                    ; preds = %588
  %593 = and i64 %571, 4294967295, !dbg !5039
  %594 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 1, i64 0, !dbg !5050
  %595 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %584, i64 0, i32 1, i64 0, !dbg !5052
  call void (i32, i8*, ...) @serverLog(i32 1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.61, i64 0, i64 0), i8* nonnull %594, i8* nonnull %595) #6, !dbg !5053
  %596 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 19, !dbg !5054
  %597 = load %struct.clusterLink*, %struct.clusterLink** %596, align 8, !dbg !5054, !tbaa !1178
  %598 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5055, !tbaa !788
  %599 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %598, i64 0, i32 8, i64 %593, !dbg !5056
  %600 = load %struct.clusterNode*, %struct.clusterNode** %599, align 8, !dbg !5056, !tbaa !760
  call void @clusterSendUpdate(%struct.clusterLink* %597, %struct.clusterNode* %600) #10, !dbg !5057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5058
  br label %604, !dbg !5058

; <label>:601:                                    ; preds = %570, %588, %582, %586
  %602 = add nuw nsw i64 %571, 1, !dbg !5059
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5060
  %603 = icmp ult i64 %602, 16384, !dbg !5061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5022
  br i1 %603, label %570, label %604, !dbg !5022, !llvm.loop !5062

; <label>:604:                                    ; preds = %601, %592
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5065
  br label %605, !dbg !5065

; <label>:605:                                    ; preds = %604, %566
  %606 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5066, !tbaa !760
  %607 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %606, i64 0, i32 2, !dbg !5066
  %608 = load i32, i32* %607, align 8, !dbg !5066, !tbaa !927
  %609 = and i32 %608, 1, !dbg !5066
  %610 = icmp eq i32 %609, 0, !dbg !5066
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5067
  br i1 %610, label %620, label %611, !dbg !5067

; <label>:611:                                    ; preds = %605
  %612 = load i32, i32* %541, align 8, !dbg !5068, !tbaa !927
  %613 = and i32 %612, 1, !dbg !5068
  %614 = icmp eq i32 %613, 0, !dbg !5068
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5069
  br i1 %614, label %620, label %615, !dbg !5069

; <label>:615:                                    ; preds = %611
  %616 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %606, i64 0, i32 3, !dbg !5070
  %617 = load i64, i64* %616, align 8, !dbg !5070, !tbaa !1093
  %618 = icmp eq i64 %187, %617, !dbg !5071
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5072
  br i1 %618, label %619, label %620, !dbg !5072

; <label>:619:                                    ; preds = %615
  call void @clusterHandleConfigEpochCollision(%struct.clusterNode* nonnull %186) #10, !dbg !5073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5075
  br label %620, !dbg !5075

; <label>:620:                                    ; preds = %615, %619, %605, %611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5076
  call void @clusterProcessGossipSection(%struct.clusterMsg* %5, %struct.clusterLink* %0) #10, !dbg !5077
  br label %622, !dbg !5077

; <label>:621:                                    ; preds = %420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !4998
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5017
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5065
  br label %622

; <label>:622:                                    ; preds = %621, %620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5080
  br label %808, !dbg !5080

; <label>:623:                                    ; preds = %308
  %624 = icmp eq i16 %11, 3, !dbg !5081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5082
  br i1 %624, label %625, label %659, !dbg !5082

; <label>:625:                                    ; preds = %623
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5083
  %626 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, !dbg !5084
  br i1 %185, label %627, label %657, !dbg !5083

; <label>:627:                                    ; preds = %625
  %628 = bitcast %union.clusterMsgData* %626 to i8*, !dbg !5087
  %629 = call i8* @sdsnewlen(i8* nonnull %628, i64 40) #6, !dbg !5091
  %630 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5093, !tbaa !788
  %631 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %630, i64 0, i32 4, !dbg !5094
  %632 = load %struct.dict*, %struct.dict** %631, align 8, !dbg !5094, !tbaa !837
  %633 = call %struct.dictEntry* @dictFind(%struct.dict* %632, i8* %629) #6, !dbg !5095
  call void @sdsfree(i8* %629) #6, !dbg !5097
  %634 = icmp eq %struct.dictEntry* %633, null, !dbg !5098
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5099
  br i1 %634, label %635, label %636, !dbg !5099

; <label>:635:                                    ; preds = %627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5103
  br label %658, !dbg !5103

; <label>:636:                                    ; preds = %627
  %637 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %633, i64 0, i32 1, i32 0, !dbg !5105
  %638 = bitcast i8** %637 to %struct.clusterNode**, !dbg !5105
  %639 = load %struct.clusterNode*, %struct.clusterNode** %638, align 8, !dbg !5105, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5106
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5101
  %640 = icmp eq %struct.clusterNode* %639, null, !dbg !5107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5103
  br i1 %640, label %658, label %641, !dbg !5103

; <label>:641:                                    ; preds = %636
  %642 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %639, i64 0, i32 2, !dbg !5108
  %643 = load i32, i32* %642, align 8, !dbg !5108, !tbaa !927
  %644 = and i32 %643, 24, !dbg !5109
  %645 = icmp eq i32 %644, 0, !dbg !5109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5110
  br i1 %645, label %646, label %658, !dbg !5110

; <label>:646:                                    ; preds = %641
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.62, i64 0, i64 0), i8* nonnull %114, %union.clusterMsgData* nonnull %626) #6, !dbg !5111
  %647 = load i32, i32* %642, align 8, !dbg !5113, !tbaa !927
  %648 = or i32 %647, 8, !dbg !5113
  store i32 %648, i32* %642, align 8, !dbg !5113, !tbaa !927
  %649 = call i64 @mstime() #6, !dbg !5114
  %650 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %639, i64 0, i32 11, !dbg !5115
  store i64 %649, i64* %650, align 8, !dbg !5116, !tbaa !954
  %651 = load i32, i32* %642, align 8, !dbg !5117, !tbaa !927
  %652 = and i32 %651, -5, !dbg !5117
  store i32 %652, i32* %642, align 8, !dbg !5117, !tbaa !927
  %653 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5120, !tbaa !788
  %654 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %653, i64 0, i32 22, !dbg !5121
  %655 = load i32, i32* %654, align 8, !dbg !5122, !tbaa !1475
  %656 = or i32 %655, 6, !dbg !5122
  store i32 %656, i32* %654, align 8, !dbg !5122, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5124
  br label %658, !dbg !5124

; <label>:657:                                    ; preds = %625
  call void (i32, i8*, ...) @serverLog(i32 2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.63, i64 0, i64 0), i8* nonnull %114, %union.clusterMsgData* nonnull %626) #6, !dbg !5125
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %658

; <label>:658:                                    ; preds = %635, %641, %636, %646, %657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5126
  br label %808, !dbg !5126

; <label>:659:                                    ; preds = %623
  %660 = icmp eq i16 %11, 4, !dbg !5127
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5128
  br i1 %660, label %661, label %691, !dbg !5128

; <label>:661:                                    ; preds = %659
  %662 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 255), align 8, !dbg !5129, !tbaa !5131
  %663 = getelementptr inbounds %struct.dict, %struct.dict* %662, i64 0, i32 2, i64 0, i32 3, !dbg !5129
  %664 = load i64, i64* %663, align 8, !dbg !5129, !tbaa !5132
  %665 = getelementptr inbounds %struct.dict, %struct.dict* %662, i64 0, i32 2, i64 1, i32 3, !dbg !5129
  %666 = load i64, i64* %665, align 8, !dbg !5129, !tbaa !5132
  %667 = sub i64 0, %666, !dbg !5129
  %668 = icmp eq i64 %664, %667, !dbg !5129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5134
  br i1 %668, label %669, label %674, !dbg !5134

; <label>:669:                                    ; preds = %661
  %670 = load %struct.list*, %struct.list** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 256), align 8, !dbg !5135, !tbaa !5136
  %671 = getelementptr inbounds %struct.list, %struct.list* %670, i64 0, i32 5, !dbg !5135
  %672 = load i64, i64* %671, align 8, !dbg !5135, !tbaa !2994
  %673 = icmp eq i64 %672, 0, !dbg !5135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5137
  br i1 %673, label %690, label %674, !dbg !5137

; <label>:674:                                    ; preds = %669, %661
  %675 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, !dbg !5138
  %676 = bitcast %union.clusterMsgData* %675 to %struct.clusterMsgDataPublish*, !dbg !5138
  %677 = bitcast %union.clusterMsgData* %675 to i32*, !dbg !5138
  %678 = load i32, i32* %677, align 8, !dbg !5138, !tbaa !745
  %679 = call i32 @lwip_htonl(i32 %678) #6, !dbg !5138
  %680 = getelementptr inbounds %struct.clusterMsgDataPublish, %struct.clusterMsgDataPublish* %676, i64 0, i32 1, !dbg !5141
  %681 = load i32, i32* %680, align 4, !dbg !5141, !tbaa !745
  %682 = call i32 @lwip_htonl(i32 %681) #6, !dbg !5141
  %683 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !5143
  %684 = zext i32 %679 to i64, !dbg !5144
  %685 = call %struct.redisObject* @createStringObject(i8* nonnull %683, i64 %684) #6, !dbg !5145
  %686 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 %684, !dbg !5147
  %687 = zext i32 %682 to i64, !dbg !5148
  %688 = call %struct.redisObject* @createStringObject(i8* nonnull %686, i64 %687) #6, !dbg !5149
  %689 = call i32 @pubsubPublishMessage(%struct.redisObject* %685, %struct.redisObject* %688) #6, !dbg !5151
  call void @decrRefCount(%struct.redisObject* %685) #6, !dbg !5152
  call void @decrRefCount(%struct.redisObject* %688) #6, !dbg !5153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5154
  br label %690, !dbg !5154

; <label>:690:                                    ; preds = %669, %674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5155
  br label %808, !dbg !5155

; <label>:691:                                    ; preds = %659
  %692 = icmp eq i16 %11, 5, !dbg !5156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5157
  br i1 %692, label %693, label %696, !dbg !5157

; <label>:693:                                    ; preds = %691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5158
  br i1 %185, label %695, label %694, !dbg !5158

; <label>:694:                                    ; preds = %693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5160
  br label %809, !dbg !5160

; <label>:695:                                    ; preds = %693
  call void @clusterSendFailoverAuthIfNeeded(%struct.clusterNode* nonnull %186, %struct.clusterMsg* nonnull %5) #10, !dbg !5162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5163
  br label %808, !dbg !5163

; <label>:696:                                    ; preds = %691
  %697 = icmp eq i16 %11, 6, !dbg !5164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5165
  br i1 %697, label %698, label %721, !dbg !5165

; <label>:698:                                    ; preds = %696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5166
  br i1 %185, label %700, label %699, !dbg !5166

; <label>:699:                                    ; preds = %698
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5168
  br label %809, !dbg !5168

; <label>:700:                                    ; preds = %698
  %701 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 2, !dbg !5170
  %702 = load i32, i32* %701, align 8, !dbg !5170, !tbaa !927
  %703 = and i32 %702, 1, !dbg !5170
  %704 = icmp eq i32 %703, 0, !dbg !5170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5172
  br i1 %704, label %808, label %705, !dbg !5172

; <label>:705:                                    ; preds = %700
  %706 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 5, !dbg !5173
  %707 = load i32, i32* %706, align 8, !dbg !5173, !tbaa !1164
  %708 = icmp sgt i32 %707, 0, !dbg !5174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5175
  br i1 %708, label %709, label %808, !dbg !5175

; <label>:709:                                    ; preds = %705
  %710 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5176, !tbaa !788
  %711 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %710, i64 0, i32 15, !dbg !5177
  %712 = load i64, i64* %711, align 8, !dbg !5177, !tbaa !1796
  %713 = icmp ult i64 %188, %712, !dbg !5178
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5179
  br i1 %713, label %808, label %714, !dbg !5179

; <label>:714:                                    ; preds = %709
  %715 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %710, i64 0, i32 12, !dbg !5180
  %716 = load i32, i32* %715, align 8, !dbg !5182, !tbaa !1790
  %717 = add nsw i32 %716, 1, !dbg !5182
  store i32 %717, i32* %715, align 8, !dbg !5182, !tbaa !1790
  %718 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %710, i64 0, i32 22, !dbg !5185
  %719 = load i32, i32* %718, align 8, !dbg !5186, !tbaa !1475
  %720 = or i32 %719, 1, !dbg !5186
  store i32 %720, i32* %718, align 8, !dbg !5186, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5187
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5188
  br label %808, !dbg !5188

; <label>:721:                                    ; preds = %696
  %722 = icmp eq i16 %11, 8, !dbg !5189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5190
  br i1 %722, label %723, label %754, !dbg !5190

; <label>:723:                                    ; preds = %721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5191
  br i1 %185, label %724, label %729, !dbg !5191

; <label>:724:                                    ; preds = %723
  %725 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 8, !dbg !5194
  %726 = load %struct.clusterNode*, %struct.clusterNode** %725, align 8, !dbg !5194, !tbaa !1025
  %727 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5195, !tbaa !760
  %728 = icmp eq %struct.clusterNode* %726, %727, !dbg !5196
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5197
  br i1 %728, label %730, label %729, !dbg !5197

; <label>:729:                                    ; preds = %724, %723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5198
  br label %809, !dbg !5198

; <label>:730:                                    ; preds = %724
  %731 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5199, !tbaa !788
  %732 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %731, i64 0, i32 17, !dbg !5201
  %733 = load i64, i64* %732, align 8, !dbg !5201, !tbaa !1987
  %734 = icmp eq i64 %733, 0, !dbg !5202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5203
  br i1 %734, label %740, label %735, !dbg !5203

; <label>:735:                                    ; preds = %730
  %736 = call i32 @clientsArePaused() #6, !dbg !5204
  %737 = icmp eq i32 %736, 0, !dbg !5204
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5205
  br i1 %737, label %740, label %738, !dbg !5205

; <label>:738:                                    ; preds = %735
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !5206, !tbaa !2176
  %739 = call i32 @clientsArePaused() #6, !dbg !5207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5208
  br label %740, !dbg !5208

; <label>:740:                                    ; preds = %730, %735, %738
  %741 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5209, !tbaa !788
  %742 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %741, i64 0, i32 17, !dbg !5210
  store i64 0, i64* %742, align 8, !dbg !5211, !tbaa !1987
  %743 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %741, i64 0, i32 20, !dbg !5212
  store i32 0, i32* %743, align 8, !dbg !5213, !tbaa !1990
  %744 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %741, i64 0, i32 18, !dbg !5214
  store %struct.clusterNode* null, %struct.clusterNode** %744, align 8, !dbg !5215, !tbaa !1993
  %745 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %741, i64 0, i32 19, !dbg !5216
  store i64 0, i64* %745, align 8, !dbg !5217, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5218
  %746 = call i64 @mstime() #6, !dbg !5219
  %747 = add nsw i64 %746, 5000, !dbg !5220
  %748 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5221, !tbaa !788
  %749 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %748, i64 0, i32 17, !dbg !5222
  store i64 %747, i64* %749, align 8, !dbg !5223, !tbaa !1987
  %750 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %748, i64 0, i32 18, !dbg !5224
  store %struct.clusterNode* %186, %struct.clusterNode** %750, align 8, !dbg !5225, !tbaa !1993
  %751 = call i64 @mstime() #6, !dbg !5226
  %752 = add nsw i64 %751, 10000, !dbg !5227
  call void @pauseClients(i64 %752) #6, !dbg !5228
  %753 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 1, i64 0, !dbg !5229
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.64, i64 0, i64 0), i8* nonnull %753) #6, !dbg !5230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5231
  br label %808, !dbg !5231

; <label>:754:                                    ; preds = %721
  %755 = icmp eq i16 %11, 7, !dbg !5232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5233
  br i1 %755, label %756, label %792, !dbg !5233

; <label>:756:                                    ; preds = %754
  %757 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !5234
  %758 = load i64, i64* %757, align 8, !dbg !5234, !tbaa !745
  %759 = call i64 @intrev64(i64 %758) #6, !dbg !5234
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5236
  br i1 %185, label %760, label %791, !dbg !5236

; <label>:760:                                    ; preds = %756
  %761 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !5237
  %762 = call i8* @sdsnewlen(i8* nonnull %761, i64 40) #6, !dbg !5240
  %763 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5242, !tbaa !788
  %764 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %763, i64 0, i32 4, !dbg !5243
  %765 = load %struct.dict*, %struct.dict** %764, align 8, !dbg !5243, !tbaa !837
  %766 = call %struct.dictEntry* @dictFind(%struct.dict* %765, i8* %762) #6, !dbg !5244
  call void @sdsfree(i8* %762) #6, !dbg !5246
  %767 = icmp eq %struct.dictEntry* %766, null, !dbg !5247
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5248
  br i1 %767, label %768, label %769, !dbg !5248

; <label>:768:                                    ; preds = %760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5250
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5252
  br label %791, !dbg !5252

; <label>:769:                                    ; preds = %760
  %770 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %766, i64 0, i32 1, i32 0, !dbg !5253
  %771 = bitcast i8** %770 to %struct.clusterNode**, !dbg !5253
  %772 = load %struct.clusterNode*, %struct.clusterNode** %771, align 8, !dbg !5253, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5250
  %773 = icmp eq %struct.clusterNode* %772, null, !dbg !5255
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5252
  br i1 %773, label %791, label %774, !dbg !5252

; <label>:774:                                    ; preds = %769
  %775 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %772, i64 0, i32 3, !dbg !5257
  %776 = load i64, i64* %775, align 8, !dbg !5257, !tbaa !1093
  %777 = icmp ult i64 %776, %759, !dbg !5259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5260
  br i1 %777, label %779, label %778, !dbg !5260

; <label>:778:                                    ; preds = %774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5261
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %809

; <label>:779:                                    ; preds = %774
  %780 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %772, i64 0, i32 2, !dbg !5262
  %781 = load i32, i32* %780, align 8, !dbg !5262, !tbaa !927
  %782 = and i32 %781, 2, !dbg !5262
  %783 = icmp eq i32 %782, 0, !dbg !5262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5264
  br i1 %783, label %785, label %784, !dbg !5264

; <label>:784:                                    ; preds = %779
  call void @clusterSetNodeAsMaster(%struct.clusterNode* nonnull %772) #10, !dbg !5265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5265
  br label %785, !dbg !5265

; <label>:785:                                    ; preds = %779, %784
  store i64 %759, i64* %775, align 8, !dbg !5266, !tbaa !1093
  %786 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5269, !tbaa !788
  %787 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %786, i64 0, i32 22, !dbg !5270
  %788 = load i32, i32* %787, align 8, !dbg !5271, !tbaa !1475
  %789 = or i32 %788, 12, !dbg !5271
  store i32 %789, i32* %787, align 8, !dbg !5271, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5272
  %790 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 2, i64 0, !dbg !5273
  call void @clusterUpdateSlotsConfigWith(%struct.clusterNode* nonnull %772, i64 %759, i8* nonnull %790) #10, !dbg !5274
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5275
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %808

; <label>:791:                                    ; preds = %769, %768, %756
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5276
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %809

; <label>:792:                                    ; preds = %754
  %793 = icmp eq i16 %11, 9, !dbg !5278
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5279
  br i1 %793, label %794, label %807, !dbg !5279

; <label>:794:                                    ; preds = %792
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5280
  br i1 %185, label %796, label %795, !dbg !5280

; <label>:795:                                    ; preds = %794
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5281
  br label %809, !dbg !5281

; <label>:796:                                    ; preds = %794
  %797 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !5283
  %798 = load i64, i64* %797, align 8, !dbg !5283, !tbaa !745
  %799 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, !dbg !5285
  %800 = bitcast [40 x i8]* %799 to i32*, !dbg !5285
  %801 = load i32, i32* %800, align 8, !dbg !5285, !tbaa !745
  %802 = call i32 @lwip_htonl(i32 %801) #6, !dbg !5285
  %803 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 4, !dbg !5287
  %804 = load i8, i8* %803, align 4, !dbg !5287, !tbaa !745
  %805 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %5, i64 0, i32 18, i32 0, i32 0, i32 1, i64 5, !dbg !5289
  %806 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %186, i64 0, i32 1, i64 0, !dbg !5291
  call void @moduleCallClusterReceivers(i8* nonnull %806, i64 %798, i8 zeroext %804, i8* nonnull %805, i32 %802) #6, !dbg !5292
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5293
  br label %808, !dbg !5293

; <label>:807:                                    ; preds = %792
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.65, i64 0, i64 0), i32 %12) #6, !dbg !5294
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %808

; <label>:808:                                    ; preds = %785, %709, %700, %658, %695, %740, %796, %807, %705, %714, %690, %622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5296
  br label %809, !dbg !5296

; <label>:809:                                    ; preds = %332, %352, %694, %699, %729, %795, %808, %106, %102, %98, %80, %76, %66, %778, %791, %52, %49, %20
  %810 = phi i32 [ 1, %20 ], [ 1, %49 ], [ 1, %52 ], [ 0, %332 ], [ 1, %808 ], [ 0, %352 ], [ 1, %694 ], [ 1, %699 ], [ 1, %729 ], [ 1, %791 ], [ 1, %795 ], [ 1, %66 ], [ 1, %76 ], [ 1, %80 ], [ 1, %98 ], [ 1, %102 ], [ 1, %106 ], [ 1, %778 ], !dbg !5297
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5298
  ret i32 %810, !dbg !5298
}

; Function Attrs: noredzone
declare dso_local i64 @intrev64(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetSockName(i32, i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendPing(%struct.clusterLink*, i32) local_unnamed_addr #0 !dbg !5299 {
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5325, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !5325
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !5325, !tbaa !837
  %6 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 0, i32 3, !dbg !5325
  %7 = load i64, i64* %6, align 8, !dbg !5325, !tbaa !5132
  %8 = getelementptr inbounds %struct.dict, %struct.dict* %5, i64 0, i32 2, i64 1, i32 3, !dbg !5325
  %9 = load i64, i64* %8, align 8, !dbg !5325, !tbaa !5132
  %10 = add i64 %9, %7, !dbg !5325
  %11 = trunc i64 %10 to i32, !dbg !5325
  %12 = add i32 %11, -2, !dbg !5325
  %13 = udiv i64 %10, 10, !dbg !5327
  %14 = uitofp i64 %13 to double, !dbg !5328
  %15 = tail call double @floor(double %14) #6, !dbg !5329
  %16 = fptosi double %15 to i32, !dbg !5329
  %17 = icmp sgt i32 %16, 3, !dbg !5331
  %18 = select i1 %17, i32 %16, i32 3, !dbg !5331
  %19 = icmp sgt i32 %18, %12, !dbg !5332
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5334
  br i1 %19, label %20, label %21, !dbg !5334

; <label>:20:                                     ; preds = %2
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5335
  br label %21, !dbg !5335

; <label>:21:                                     ; preds = %20, %2
  %22 = phi i32 [ %12, %20 ], [ %18, %2 ], !dbg !5336
  %23 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5338, !tbaa !788
  %24 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %23, i64 0, i32 25, !dbg !5339
  %25 = load i64, i64* %24, align 8, !dbg !5339, !tbaa !1814
  %26 = trunc i64 %25 to i32, !dbg !5340
  %27 = add nsw i32 %22, %26, !dbg !5343
  %28 = mul i32 %27, 104, !dbg !5344
  %29 = add i32 %28, 2256, !dbg !5345
  %30 = icmp sgt i32 %29, 4352, !dbg !5346
  %31 = select i1 %30, i32 %29, i32 4352, !dbg !5346
  %32 = zext i32 %31 to i64, !dbg !5347
  %33 = tail call i8* @zcalloc(i64 %32) #6, !dbg !5348
  %34 = bitcast i8* %33 to %struct.clusterMsg*, !dbg !5350
  %35 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 4, !dbg !5352
  %36 = load %struct.clusterNode*, %struct.clusterNode** %35, align 8, !dbg !5352, !tbaa !2154
  %37 = icmp ne %struct.clusterNode* %36, null, !dbg !5354
  %38 = icmp eq i32 %1, 0, !dbg !5355
  %39 = and i1 %38, %37, !dbg !5356
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5356
  br i1 %39, label %40, label %44, !dbg !5356

; <label>:40:                                     ; preds = %21
  %41 = tail call i64 @mstime() #6, !dbg !5357
  %42 = load %struct.clusterNode*, %struct.clusterNode** %35, align 8, !dbg !5358, !tbaa !2154
  %43 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %42, i64 0, i32 9, !dbg !5359
  store i64 %41, i64* %43, align 8, !dbg !5360, !tbaa !1078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5361
  br label %44, !dbg !5361

; <label>:44:                                     ; preds = %40, %21
  tail call void @clusterBuildMessageHdr(%struct.clusterMsg* %34, i32 %1) #10, !dbg !5362
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5363
  %45 = icmp sgt i32 %12, 0, !dbg !5364
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5365
  br i1 %45, label %46, label %147, !dbg !5365

; <label>:46:                                     ; preds = %44
  %47 = mul nsw i32 %22, 3, !dbg !5366
  %48 = getelementptr inbounds i8, i8* %33, i64 2256
  %49 = bitcast i8* %48 to [1 x %struct.clusterMsgDataGossip]*
  br label %50, !dbg !5365

; <label>:50:                                     ; preds = %46, %143
  %51 = phi i32 [ 0, %46 ], [ %145, %143 ]
  %52 = phi i32 [ %12, %46 ], [ %144, %143 ]
  %53 = phi i32 [ %47, %46 ], [ %56, %143 ]
  %54 = icmp slt i32 %51, %22, !dbg !5368
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5369
  br i1 %54, label %55, label %147, !dbg !5369

; <label>:55:                                     ; preds = %50
  %56 = add nsw i32 %53, -1, !dbg !5370
  %57 = icmp eq i32 %53, 0, !dbg !5369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5363
  br i1 %57, label %147, label %58, !dbg !5363

; <label>:58:                                     ; preds = %55
  %59 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5371, !tbaa !788
  %60 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %59, i64 0, i32 4, !dbg !5372
  %61 = load %struct.dict*, %struct.dict** %60, align 8, !dbg !5372, !tbaa !837
  %62 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %61) #6, !dbg !5373
  %63 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %62, i64 0, i32 1, i32 0, !dbg !5375
  %64 = bitcast i8** %63 to %struct.clusterNode**, !dbg !5375
  %65 = load %struct.clusterNode*, %struct.clusterNode** %64, align 8, !dbg !5375, !tbaa !745
  %66 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5377, !tbaa !760
  %67 = icmp eq %struct.clusterNode* %65, %66, !dbg !5379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5380
  br i1 %67, label %143, label %68, !dbg !5380, !llvm.loop !5381

; <label>:68:                                     ; preds = %58
  %69 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 2, !dbg !5383
  %70 = load i32, i32* %69, align 8, !dbg !5383, !tbaa !927
  %71 = and i32 %70, 4, !dbg !5385
  %72 = icmp eq i32 %71, 0, !dbg !5385
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5386
  br i1 %72, label %73, label %143, !dbg !5386, !llvm.loop !5381

; <label>:73:                                     ; preds = %68
  %74 = and i32 %70, 96, !dbg !5387
  %75 = icmp eq i32 %74, 0, !dbg !5387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5389
  br i1 %75, label %76, label %84, !dbg !5389

; <label>:76:                                     ; preds = %73
  %77 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 19, !dbg !5390
  %78 = load %struct.clusterLink*, %struct.clusterLink** %77, align 8, !dbg !5390, !tbaa !1178
  %79 = icmp eq %struct.clusterLink* %78, null, !dbg !5391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5392
  br i1 %79, label %80, label %86, !dbg !5392

; <label>:80:                                     ; preds = %76
  %81 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 5, !dbg !5393
  %82 = load i32, i32* %81, align 8, !dbg !5393, !tbaa !1164
  %83 = icmp eq i32 %82, 0, !dbg !5394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5395
  br i1 %83, label %84, label %86, !dbg !5395

; <label>:84:                                     ; preds = %73, %80
  %85 = add nsw i32 %52, -1, !dbg !5396
  br label %143, !dbg !5398, !llvm.loop !5381

; <label>:86:                                     ; preds = %80, %76
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5413
  %87 = icmp sgt i32 %51, 0, !dbg !5415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5417
  br i1 %87, label %88, label %103, !dbg !5417

; <label>:88:                                     ; preds = %86
  %89 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 1, i64 0
  %90 = sext i32 %51 to i64, !dbg !5417
  br label %91, !dbg !5417

; <label>:91:                                     ; preds = %97, %88
  %92 = phi i64 [ 0, %88 ], [ %98, %97 ]
  %93 = phi i32 [ 0, %88 ], [ %99, %97 ]
  %94 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %92, i32 0, i64 0, !dbg !5418
  %95 = tail call i32 @memcmp(i8* %94, i8* nonnull %89, i64 40) #6, !dbg !5421
  %96 = icmp eq i32 %95, 0, !dbg !5422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5423
  br i1 %96, label %101, label %97, !dbg !5423

; <label>:97:                                     ; preds = %91
  %98 = add nuw nsw i64 %92, 1, !dbg !5424
  %99 = add nuw nsw i32 %93, 1, !dbg !5424
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5425
  %100 = icmp slt i64 %98, %90, !dbg !5415
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5417
  br i1 %100, label %91, label %103, !dbg !5417, !llvm.loop !5426

; <label>:101:                                    ; preds = %91
  %102 = trunc i64 %92 to i32, !dbg !5423
  br label %103, !dbg !5429

; <label>:103:                                    ; preds = %97, %86, %101
  %104 = phi i32 [ 0, %86 ], [ %102, %101 ], [ %99, %97 ], !dbg !5430
  %105 = icmp eq i32 %104, %51, !dbg !5429
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5432
  br i1 %105, label %106, label %143, !dbg !5432, !llvm.loop !5381

; <label>:106:                                    ; preds = %103
  %107 = sext i32 %51 to i64, !dbg !5445
  %108 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 0, i64 0, !dbg !5446
  %109 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 1, i64 0, !dbg !5447
  %110 = tail call i8* @memcpy(i8* %108, i8* nonnull %109, i64 40) #6, !dbg !5448
  %111 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 9, !dbg !5449
  %112 = load i64, i64* %111, align 8, !dbg !5449, !tbaa !1078
  %113 = sdiv i64 %112, 1000, !dbg !5449
  %114 = trunc i64 %113 to i32, !dbg !5449
  %115 = tail call i32 @lwip_htonl(i32 %114) #6, !dbg !5449
  %116 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 1, !dbg !5450
  store i32 %115, i32* %116, align 4, !dbg !5451, !tbaa !5452
  %117 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 10, !dbg !5453
  %118 = load i64, i64* %117, align 8, !dbg !5453, !tbaa !1087
  %119 = sdiv i64 %118, 1000, !dbg !5453
  %120 = trunc i64 %119 to i32, !dbg !5453
  %121 = tail call i32 @lwip_htonl(i32 %120) #6, !dbg !5453
  %122 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 2, !dbg !5454
  store i32 %121, i32* %122, align 4, !dbg !5455, !tbaa !3763
  %123 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 3, i64 0, !dbg !5456
  %124 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 16, i64 0, !dbg !5457
  %125 = tail call i8* @memcpy(i8* nonnull %123, i8* nonnull %124, i64 46) #6, !dbg !5458
  %126 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 17, !dbg !5459
  %127 = load i32, i32* %126, align 8, !dbg !5459, !tbaa !900
  %128 = trunc i32 %127 to i16, !dbg !5459
  %129 = tail call zeroext i16 @lwip_htons(i16 zeroext %128) #6, !dbg !5459
  %130 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 4, !dbg !5460
  store i16 %129, i16* %130, align 2, !dbg !5461, !tbaa !3670
  %131 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %65, i64 0, i32 18, !dbg !5462
  %132 = load i32, i32* %131, align 4, !dbg !5462, !tbaa !907
  %133 = trunc i32 %132 to i16, !dbg !5462
  %134 = tail call zeroext i16 @lwip_htons(i16 zeroext %133) #6, !dbg !5462
  %135 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 5, !dbg !5463
  store i16 %134, i16* %135, align 4, !dbg !5464, !tbaa !3672
  %136 = load i32, i32* %69, align 8, !dbg !5465, !tbaa !927
  %137 = trunc i32 %136 to i16, !dbg !5465
  %138 = tail call zeroext i16 @lwip_htons(i16 zeroext %137) #6, !dbg !5465
  %139 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 6, !dbg !5466
  store i16 %138, i16* %139, align 2, !dbg !5467, !tbaa !3654
  %140 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %49, i64 0, i64 %107, i32 7, !dbg !5468
  store i32 0, i32* %140, align 4, !dbg !5469, !tbaa !5470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5471
  %141 = add nsw i32 %52, -1, !dbg !5472
  %142 = add nsw i32 %51, 1, !dbg !5473
  br label %143, !dbg !5382

; <label>:143:                                    ; preds = %103, %68, %58, %106, %84
  %144 = phi i32 [ %85, %84 ], [ %141, %106 ], [ %52, %58 ], [ %52, %68 ], [ %52, %103 ], !dbg !5474
  %145 = phi i32 [ %51, %84 ], [ %142, %106 ], [ %51, %58 ], [ %51, %68 ], [ %51, %103 ], !dbg !5474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5475
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %146 = icmp sgt i32 %144, 0, !dbg !5364
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5365
  br i1 %146, label %50, label %147, !dbg !5365

; <label>:147:                                    ; preds = %50, %143, %55, %44
  %148 = phi i32 [ 0, %44 ], [ %51, %55 ], [ %145, %143 ], [ %51, %50 ], !dbg !5324
  %149 = icmp eq i32 %26, 0, !dbg !5476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5477
  br i1 %149, label %225, label %150, !dbg !5477

; <label>:150:                                    ; preds = %147
  %151 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5478, !tbaa !788
  %152 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %151, i64 0, i32 4, !dbg !5479
  %153 = load %struct.dict*, %struct.dict** %152, align 8, !dbg !5479, !tbaa !837
  %154 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %153) #6, !dbg !5480
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5482
  %155 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %154) #6, !dbg !5483
  %156 = icmp ne %struct.dictEntry* %155, null, !dbg !5485
  %157 = icmp sgt i32 %26, 0, !dbg !5486
  %158 = and i1 %157, %156, !dbg !5487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5482
  br i1 %158, label %159, label %223, !dbg !5482

; <label>:159:                                    ; preds = %150
  %160 = getelementptr inbounds i8, i8* %33, i64 2256
  %161 = bitcast i8* %160 to [1 x %struct.clusterMsgDataGossip]*
  br label %162, !dbg !5482

; <label>:162:                                    ; preds = %159, %216
  %163 = phi %struct.dictEntry* [ %155, %159 ], [ %219, %216 ]
  %164 = phi i32 [ %148, %159 ], [ %218, %216 ]
  %165 = phi i32 [ %26, %159 ], [ %217, %216 ]
  %166 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %163, i64 0, i32 1, i32 0, !dbg !5488
  %167 = bitcast i8** %166 to %struct.clusterNode**, !dbg !5488
  %168 = load %struct.clusterNode*, %struct.clusterNode** %167, align 8, !dbg !5488, !tbaa !745
  %169 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 2, !dbg !5490
  %170 = load i32, i32* %169, align 8, !dbg !5490, !tbaa !927
  %171 = and i32 %170, 32, !dbg !5492
  %172 = icmp eq i32 %171, 0, !dbg !5492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5493
  br i1 %172, label %173, label %216, !dbg !5493, !llvm.loop !5494

; <label>:173:                                    ; preds = %162
  %174 = and i32 %170, 64, !dbg !5496
  %175 = icmp eq i32 %174, 0, !dbg !5496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5498
  br i1 %175, label %176, label %216, !dbg !5498, !llvm.loop !5494

; <label>:176:                                    ; preds = %173
  %177 = and i32 %170, 4, !dbg !5499
  %178 = icmp eq i32 %177, 0, !dbg !5499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5501
  br i1 %178, label %216, label %179, !dbg !5501, !llvm.loop !5494

; <label>:179:                                    ; preds = %176
  %180 = sext i32 %164 to i64, !dbg !5506
  %181 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 0, i64 0, !dbg !5507
  %182 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 1, i64 0, !dbg !5508
  %183 = tail call i8* @memcpy(i8* %181, i8* nonnull %182, i64 40) #6, !dbg !5509
  %184 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 9, !dbg !5510
  %185 = load i64, i64* %184, align 8, !dbg !5510, !tbaa !1078
  %186 = sdiv i64 %185, 1000, !dbg !5510
  %187 = trunc i64 %186 to i32, !dbg !5510
  %188 = tail call i32 @lwip_htonl(i32 %187) #6, !dbg !5510
  %189 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 1, !dbg !5511
  store i32 %188, i32* %189, align 4, !dbg !5512, !tbaa !5452
  %190 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 10, !dbg !5513
  %191 = load i64, i64* %190, align 8, !dbg !5513, !tbaa !1087
  %192 = sdiv i64 %191, 1000, !dbg !5513
  %193 = trunc i64 %192 to i32, !dbg !5513
  %194 = tail call i32 @lwip_htonl(i32 %193) #6, !dbg !5513
  %195 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 2, !dbg !5514
  store i32 %194, i32* %195, align 4, !dbg !5515, !tbaa !3763
  %196 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 3, i64 0, !dbg !5516
  %197 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 16, i64 0, !dbg !5517
  %198 = tail call i8* @memcpy(i8* nonnull %196, i8* nonnull %197, i64 46) #6, !dbg !5518
  %199 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 17, !dbg !5519
  %200 = load i32, i32* %199, align 8, !dbg !5519, !tbaa !900
  %201 = trunc i32 %200 to i16, !dbg !5519
  %202 = tail call zeroext i16 @lwip_htons(i16 zeroext %201) #6, !dbg !5519
  %203 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 4, !dbg !5520
  store i16 %202, i16* %203, align 2, !dbg !5521, !tbaa !3670
  %204 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %168, i64 0, i32 18, !dbg !5522
  %205 = load i32, i32* %204, align 4, !dbg !5522, !tbaa !907
  %206 = trunc i32 %205 to i16, !dbg !5522
  %207 = tail call zeroext i16 @lwip_htons(i16 zeroext %206) #6, !dbg !5522
  %208 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 5, !dbg !5523
  store i16 %207, i16* %208, align 4, !dbg !5524, !tbaa !3672
  %209 = load i32, i32* %169, align 8, !dbg !5525, !tbaa !927
  %210 = trunc i32 %209 to i16, !dbg !5525
  %211 = tail call zeroext i16 @lwip_htons(i16 zeroext %210) #6, !dbg !5525
  %212 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 6, !dbg !5526
  store i16 %211, i16* %212, align 2, !dbg !5527, !tbaa !3654
  %213 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %161, i64 0, i64 %180, i32 7, !dbg !5528
  store i32 0, i32* %213, align 4, !dbg !5529, !tbaa !5470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5530
  %214 = add nsw i32 %164, 1, !dbg !5531
  %215 = add nsw i32 %165, -1, !dbg !5532
  br label %216, !dbg !5495

; <label>:216:                                    ; preds = %176, %173, %162, %179
  %217 = phi i32 [ %215, %179 ], [ %165, %162 ], [ %165, %173 ], [ %165, %176 ], !dbg !5533
  %218 = phi i32 [ %214, %179 ], [ %164, %162 ], [ %164, %173 ], [ %164, %176 ], !dbg !5533
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5534
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %219 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %154) #6, !dbg !5483
  %220 = icmp ne %struct.dictEntry* %219, null, !dbg !5485
  %221 = icmp sgt i32 %217, 0, !dbg !5486
  %222 = and i1 %221, %220, !dbg !5487
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5482
  br i1 %222, label %162, label %223, !dbg !5482

; <label>:223:                                    ; preds = %216, %150
  %224 = phi i32 [ %148, %150 ], [ %218, %216 ], !dbg !5324
  tail call void @dictReleaseIterator(%struct.dictIterator* %154) #6, !dbg !5535
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5536
  br label %225, !dbg !5536

; <label>:225:                                    ; preds = %147, %223
  %226 = phi i32 [ %224, %223 ], [ %148, %147 ], !dbg !5324
  %227 = mul i32 %226, 104, !dbg !5537
  %228 = add i32 %227, 2256, !dbg !5538
  %229 = trunc i32 %226 to i16, !dbg !5539
  %230 = tail call zeroext i16 @lwip_htons(i16 zeroext %229) #6, !dbg !5539
  %231 = getelementptr inbounds i8, i8* %33, i64 14, !dbg !5540
  %232 = bitcast i8* %231 to i16*, !dbg !5540
  store i16 %230, i16* %232, align 2, !dbg !5541, !tbaa !3626
  %233 = tail call i32 @lwip_htonl(i32 %228) #6, !dbg !5542
  %234 = getelementptr inbounds i8, i8* %33, i64 4, !dbg !5543
  %235 = bitcast i8* %234 to i32*, !dbg !5543
  store i32 %233, i32* %235, align 4, !dbg !5544, !tbaa !2758
  %236 = sext i32 %228 to i64, !dbg !5545
  tail call void @clusterSendMessage(%struct.clusterLink* %0, i8* %33, i64 %236) #10, !dbg !5546
  tail call void @zfree(i8* %33) #6, !dbg !5547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5548
  ret void, !dbg !5548
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterDelNodeSlots(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !5549 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5557
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5559
  br label %2, !dbg !5559

; <label>:2:                                      ; preds = %1, %38
  %3 = phi i64 [ 0, %1 ], [ %40, %38 ]
  %4 = phi i32 [ 0, %1 ], [ %39, %38 ]
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 3
  %7 = and i64 %6, 8191
  %8 = and i32 %5, 7, !dbg !5574
  %9 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %7, !dbg !5576
  %10 = load i8, i8* %9, align 1, !dbg !5576, !tbaa !745
  %11 = zext i8 %10 to i32, !dbg !5576
  %12 = shl i32 1, %8, !dbg !5577
  %13 = and i32 %12, %11, !dbg !5578
  %14 = icmp eq i32 %13, 0, !dbg !5579
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5580
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5581
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5582
  br i1 %14, label %38, label %15, !dbg !5582

; <label>:15:                                     ; preds = %2
  %16 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5586, !tbaa !788
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %16, i64 0, i32 8, i64 %3, !dbg !5587
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !5587, !tbaa !760
  %19 = icmp eq %struct.clusterNode* %18, null, !dbg !5589
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5590
  br i1 %19, label %36, label %20, !dbg !5590

; <label>:20:                                     ; preds = %15
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 4, i64 %7, !dbg !5599
  %22 = load i8, i8* %21, align 1, !dbg !5599, !tbaa !745
  %23 = zext i8 %22 to i32, !dbg !5599
  %24 = and i32 %12, %23, !dbg !5600
  %25 = icmp eq i32 %24, 0, !dbg !5601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5602
  %26 = trunc i32 %12 to i8, !dbg !5608
  %27 = xor i8 %26, -1, !dbg !5608
  %28 = and i8 %22, %27, !dbg !5608
  store i8 %28, i8* %21, align 1, !dbg !5608, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5609
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5610
  br i1 %25, label %29, label %30, !dbg !5610

; <label>:29:                                     ; preds = %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5612
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !5612
  tail call void @_exit(i32 1) #8, !dbg !5612
  unreachable

; <label>:30:                                     ; preds = %20
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 5, !dbg !5613
  %32 = load i32, i32* %31, align 8, !dbg !5614, !tbaa !1164
  %33 = add nsw i32 %32, -1, !dbg !5614
  store i32 %33, i32* %31, align 8, !dbg !5614, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5615
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5611
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5612
  %34 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5616, !tbaa !788
  %35 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %34, i64 0, i32 8, i64 %3, !dbg !5617
  store %struct.clusterNode* null, %struct.clusterNode** %35, align 8, !dbg !5618, !tbaa !760
  br label %36, !dbg !5619

; <label>:36:                                     ; preds = %15, %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5621
  %37 = add nsw i32 %4, 1, !dbg !5622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5623
  br label %38, !dbg !5623

; <label>:38:                                     ; preds = %2, %36
  %39 = phi i32 [ %37, %36 ], [ %4, %2 ], !dbg !5624
  %40 = add nuw nsw i64 %3, 1, !dbg !5625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5626
  %41 = icmp ult i64 %40, 16384, !dbg !5627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5559
  br i1 %41, label %2, label %42, !dbg !5559, !llvm.loop !5628

; <label>:42:                                     ; preds = %38
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5630
  ret i32 %39, !dbg !5630
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendUpdate(%struct.clusterLink*, %struct.clusterNode*) local_unnamed_addr #0 !dbg !5631 {
  %3 = alloca %struct.clusterMsg, align 16
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 0, i64 0, !dbg !5641
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %4) #7, !dbg !5641
  %5 = icmp eq %struct.clusterLink* %0, null, !dbg !5643
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5645
  br i1 %5, label %21, label %6, !dbg !5645

; <label>:6:                                      ; preds = %2
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %3, i32 7) #10, !dbg !5647
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !5648
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 1, i64 0, !dbg !5649
  %9 = call i8* @memcpy(i8* nonnull %7, i8* nonnull %8, i64 40) #6, !dbg !5650
  %10 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 3, !dbg !5651
  %11 = load i64, i64* %10, align 8, !dbg !5651, !tbaa !1093
  %12 = call i64 @intrev64(i64 %11) #6, !dbg !5651
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !5652
  store i64 %12, i64* %13, align 16, !dbg !5653, !tbaa !745
  %14 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 18, i32 0, i32 0, i32 2, i64 0, !dbg !5654
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 4, i64 0, !dbg !5655
  %16 = call i8* @memcpy(i8* nonnull %14, i8* nonnull %15, i64 2048) #6, !dbg !5656
  %17 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 1, !dbg !5657
  %18 = load i32, i32* %17, align 4, !dbg !5657, !tbaa !2758
  %19 = call i32 @lwip_htonl(i32 %18) #6, !dbg !5657
  %20 = zext i32 %19 to i64, !dbg !5657
  call void @clusterSendMessage(%struct.clusterLink* nonnull %0, i8* nonnull %4, i64 %20) #10, !dbg !5658
  br label %21, !dbg !5659

; <label>:21:                                     ; preds = %2, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5660
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %4) #7, !dbg !5659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5659
  ret void, !dbg !5659
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createStringObject(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @pubsubPublishMessage(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @decrRefCount(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendFailoverAuthIfNeeded(%struct.clusterNode*, %struct.clusterMsg* nocapture readonly) local_unnamed_addr #0 !dbg !5661 {
  %3 = alloca %struct.clusterMsg, align 16
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !5675
  %5 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5675, !tbaa !1025
  %6 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 6, !dbg !5677
  %7 = load i64, i64* %6, align 8, !dbg !5677, !tbaa !4554
  %8 = tail call i64 @intrev64(i64 %7) #6, !dbg !5677
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 7, !dbg !5679
  %10 = load i64, i64* %9, align 8, !dbg !5679, !tbaa !4556
  %11 = tail call i64 @intrev64(i64 %10) #6, !dbg !5679
  %12 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 17, i64 0, !dbg !5682
  %13 = load i8, i8* %12, align 1, !dbg !5682, !tbaa !745
  %14 = and i8 %13, 2, !dbg !5683
  %15 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !5684, !tbaa !760
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 2, !dbg !5684
  %17 = load i32, i32* %16, align 8, !dbg !5684, !tbaa !927
  %18 = and i32 %17, 2, !dbg !5684
  %19 = icmp eq i32 %18, 0, !dbg !5684
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5686
  br i1 %19, label %20, label %138, !dbg !5686

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 5, !dbg !5687
  %22 = load i32, i32* %21, align 8, !dbg !5687, !tbaa !1164
  %23 = icmp eq i32 %22, 0, !dbg !5688
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5689
  br i1 %23, label %138, label %24, !dbg !5689

; <label>:24:                                     ; preds = %20
  %25 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5690, !tbaa !788
  %26 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 1, !dbg !5692
  %27 = load i64, i64* %26, align 8, !dbg !5692, !tbaa !797
  %28 = icmp ult i64 %8, %27, !dbg !5693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5694
  br i1 %28, label %29, label %31, !dbg !5694

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5695
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.72, i64 0, i64 0), i8* nonnull %30, i64 %8, i64 %27) #6, !dbg !5697
  br label %138, !dbg !5698

; <label>:31:                                     ; preds = %24
  %32 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %25, i64 0, i32 21, !dbg !5699
  %33 = load i64, i64* %32, align 8, !dbg !5699, !tbaa !811
  %34 = icmp eq i64 %33, %27, !dbg !5701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5702
  br i1 %34, label %35, label %37, !dbg !5702

; <label>:35:                                     ; preds = %31
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5703
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.73, i64 0, i64 0), i8* nonnull %36, i64 %27) #6, !dbg !5705
  br label %138, !dbg !5706

; <label>:37:                                     ; preds = %31
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !5707
  %39 = load i32, i32* %38, align 8, !dbg !5707, !tbaa !927
  %40 = and i32 %39, 1, !dbg !5707
  %41 = icmp ne i32 %40, 0, !dbg !5707
  %42 = icmp eq %struct.clusterNode* %5, null, !dbg !5709
  %43 = or i1 %42, %41, !dbg !5710
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5710
  br i1 %43, label %52, label %44, !dbg !5710

; <label>:44:                                     ; preds = %37
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 2, !dbg !5711
  %46 = load i32, i32* %45, align 8, !dbg !5711, !tbaa !927
  %47 = and i32 %46, 8, !dbg !5711
  %48 = icmp ne i32 %47, 0, !dbg !5711
  %49 = icmp ne i8 %14, 0, !dbg !5712
  %50 = or i1 %49, %48, !dbg !5713
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5713
  br i1 %50, label %67, label %51, !dbg !5713

; <label>:51:                                     ; preds = %44
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5714
  br label %56, !dbg !5714

; <label>:52:                                     ; preds = %37
  %53 = icmp eq i32 %40, 0, !dbg !5716
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5714
  br i1 %53, label %56, label %54, !dbg !5714

; <label>:54:                                     ; preds = %52
  %55 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5718
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.74, i64 0, i64 0), i8* nonnull %55) #6, !dbg !5720
  br label %66, !dbg !5721

; <label>:56:                                     ; preds = %51, %52
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5722
  br i1 %42, label %57, label %59, !dbg !5722

; <label>:57:                                     ; preds = %56
  %58 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5723
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.75, i64 0, i64 0), i8* nonnull %58) #6, !dbg !5726
  br label %66, !dbg !5727

; <label>:59:                                     ; preds = %56
  %60 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 2, !dbg !5728
  %61 = load i32, i32* %60, align 8, !dbg !5728, !tbaa !927
  %62 = and i32 %61, 8, !dbg !5728
  %63 = icmp eq i32 %62, 0, !dbg !5728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5730
  br i1 %63, label %64, label %138, !dbg !5730

; <label>:64:                                     ; preds = %59
  %65 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5731
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.76, i64 0, i64 0), i8* nonnull %65) #6, !dbg !5733
  br label %66, !dbg !5734

; <label>:66:                                     ; preds = %54, %64, %57
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5735
  br label %138, !dbg !5736

; <label>:67:                                     ; preds = %44
  %68 = tail call i64 @mstime() #6, !dbg !5737
  %69 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5739, !tbaa !1025
  %70 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %69, i64 0, i32 12, !dbg !5740
  %71 = load i64, i64* %70, align 8, !dbg !5740, !tbaa !1191
  %72 = sub nsw i64 %68, %71, !dbg !5741
  %73 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !5742, !tbaa !2943
  %74 = shl nsw i64 %73, 1, !dbg !5743
  %75 = icmp slt i64 %72, %74, !dbg !5744
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5745
  br i1 %75, label %76, label %84, !dbg !5745

; <label>:76:                                     ; preds = %67
  %77 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5746
  %78 = tail call i64 @mstime() #6, !dbg !5748
  %79 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5749, !tbaa !1025
  %80 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %79, i64 0, i32 12, !dbg !5750
  %81 = load i64, i64* %80, align 8, !dbg !5750, !tbaa !1191
  %82 = sub i64 %74, %78, !dbg !5751
  %83 = add i64 %82, %81, !dbg !5751
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.77, i64 0, i64 0), i8* nonnull %77, i64 %83) #6, !dbg !5752
  br label %138, !dbg !5753

; <label>:84:                                     ; preds = %67
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5757
  %85 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8
  br label %86, !dbg !5757

; <label>:86:                                     ; preds = %84, %109
  %87 = phi i64 [ 0, %84 ], [ %110, %109 ]
  %88 = trunc i64 %87 to i32
  %89 = lshr i64 %87, 3
  %90 = and i64 %89, 8191
  %91 = and i32 %88, 7, !dbg !5765
  %92 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 10, i64 %90, !dbg !5767
  %93 = load i8, i8* %92, align 1, !dbg !5767, !tbaa !745
  %94 = zext i8 %93 to i32, !dbg !5767
  %95 = shl i32 1, %91, !dbg !5768
  %96 = and i32 %95, %94, !dbg !5769
  %97 = icmp eq i32 %96, 0, !dbg !5770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5772
  br i1 %97, label %109, label %98, !dbg !5772

; <label>:98:                                     ; preds = %86
  %99 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 8, i64 %87, !dbg !5773
  %100 = load %struct.clusterNode*, %struct.clusterNode** %99, align 8, !dbg !5773, !tbaa !760
  %101 = icmp eq %struct.clusterNode* %100, null, !dbg !5775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5776
  br i1 %101, label %109, label %102, !dbg !5776

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %100, i64 0, i32 3, !dbg !5777
  %104 = load i64, i64* %103, align 8, !dbg !5777, !tbaa !1093
  %105 = icmp ugt i64 %104, %11, !dbg !5778
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5779
  br i1 %105, label %106, label %109, !dbg !5779

; <label>:106:                                    ; preds = %102
  %107 = trunc i64 %87 to i32
  %108 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5780
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.78, i64 0, i64 0), i8* nonnull %108, i32 %107, i64 %104, i64 %11) #6, !dbg !5781
  br label %138, !dbg !5782

; <label>:109:                                    ; preds = %102, %98, %86
  %110 = add nuw nsw i64 %87, 1, !dbg !5783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5784
  %111 = icmp ult i64 %110, 16384, !dbg !5785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5757
  br i1 %111, label %86, label %112, !dbg !5757, !llvm.loop !5786

; <label>:112:                                    ; preds = %109
  %113 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 1, !dbg !5788
  %114 = load i64, i64* %113, align 8, !dbg !5788, !tbaa !797
  %115 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %85, i64 0, i32 21, !dbg !5789
  store i64 %114, i64* %115, align 8, !dbg !5790, !tbaa !811
  %116 = tail call i64 @mstime() #6, !dbg !5791
  %117 = load %struct.clusterNode*, %struct.clusterNode** %4, align 8, !dbg !5792, !tbaa !1025
  %118 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %117, i64 0, i32 12, !dbg !5793
  store i64 %116, i64* %118, align 8, !dbg !5794, !tbaa !1191
  %119 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5797, !tbaa !788
  %120 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %119, i64 0, i32 22, !dbg !5798
  %121 = load i32, i32* %120, align 8, !dbg !5799, !tbaa !1475
  %122 = or i32 %121, 12, !dbg !5799
  store i32 %122, i32* %120, align 8, !dbg !5799, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5800
  %123 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 0, i64 0, !dbg !5809
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %123) #7, !dbg !5809
  %124 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !5811
  %125 = load %struct.clusterLink*, %struct.clusterLink** %124, align 8, !dbg !5811, !tbaa !1178
  %126 = icmp eq %struct.clusterLink* %125, null, !dbg !5813
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5814
  br i1 %126, label %127, label %128, !dbg !5814

; <label>:127:                                    ; preds = %112
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5815
  br label %133, !dbg !5815

; <label>:128:                                    ; preds = %112
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %3, i32 6) #6, !dbg !5817
  %129 = call i32 @lwip_htonl(i32 2256) #6, !dbg !5819
  %130 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %3, i64 0, i32 1, !dbg !5820
  store i32 %129, i32* %130, align 4, !dbg !5821, !tbaa !2758
  %131 = load %struct.clusterLink*, %struct.clusterLink** %124, align 8, !dbg !5822, !tbaa !1178
  call void @clusterSendMessage(%struct.clusterLink* %131, i8* nonnull %123, i64 2256) #6, !dbg !5823
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5824
  %132 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5825, !tbaa !788
  br label %133, !dbg !5824

; <label>:133:                                    ; preds = %127, %128
  %134 = phi %struct.clusterState* [ %119, %127 ], [ %132, %128 ], !dbg !5825
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %123) #7, !dbg !5824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5824
  %135 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !5826
  %136 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %134, i64 0, i32 1, !dbg !5827
  %137 = load i64, i64* %136, align 8, !dbg !5827, !tbaa !797
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.79, i64 0, i64 0), i8* nonnull %135, i64 %137) #6, !dbg !5828
  br label %138, !dbg !5829

; <label>:138:                                    ; preds = %59, %66, %20, %2, %133, %106, %76, %35, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5830
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5829
  ret void, !dbg !5829
}

; Function Attrs: noredzone
declare dso_local void @pauseClients(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @moduleCallClusterReceivers(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @handleLinkIOError(%struct.clusterLink*) local_unnamed_addr #0 !dbg !2765 {
  tail call void @freeClusterLink(%struct.clusterLink* %0) #10, !dbg !5832
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5833
  ret void, !dbg !5833
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterWriteHandler(%struct.aeEventLoop* nocapture readnone, i32, i8*, i32) #0 !dbg !5834 {
  %5 = bitcast i8* %2 to %struct.clusterLink*, !dbg !5846
  %6 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !5848
  %7 = bitcast i8* %6 to i8**, !dbg !5848
  %8 = load i8*, i8** %7, align 8, !dbg !5848, !tbaa !2147
  %9 = getelementptr inbounds i8, i8* %8, i64 -1, !dbg !5851
  %10 = load i8, i8* %9, align 1, !dbg !5851, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5853
  %11 = trunc i8 %10 to i3, !dbg !5853
  switch i3 %11, label %33 [
    i3 0, label %12
    i3 1, label %15
    i3 2, label %19
    i3 3, label %24
    i3 -4, label %29
  ], !dbg !5853

; <label>:12:                                     ; preds = %4
  %13 = lshr i8 %10, 3, !dbg !5854
  %14 = zext i8 %13 to i64, !dbg !5854
  br label %33, !dbg !5855

; <label>:15:                                     ; preds = %4
  %16 = getelementptr inbounds i8, i8* %8, i64 -3, !dbg !5856
  %17 = load i8, i8* %16, align 1, !dbg !5857, !tbaa !745
  %18 = zext i8 %17 to i64, !dbg !5856
  br label %33, !dbg !5858

; <label>:19:                                     ; preds = %4
  %20 = getelementptr inbounds i8, i8* %8, i64 -5, !dbg !5859
  %21 = bitcast i8* %20 to i16*, !dbg !5860
  %22 = load i16, i16* %21, align 1, !dbg !5860, !tbaa !1503
  %23 = zext i16 %22 to i64, !dbg !5859
  br label %33, !dbg !5861

; <label>:24:                                     ; preds = %4
  %25 = getelementptr inbounds i8, i8* %8, i64 -9, !dbg !5862
  %26 = bitcast i8* %25 to i32*, !dbg !5863
  %27 = load i32, i32* %26, align 1, !dbg !5863, !tbaa !708
  %28 = zext i32 %27 to i64, !dbg !5862
  br label %33, !dbg !5864

; <label>:29:                                     ; preds = %4
  %30 = getelementptr inbounds i8, i8* %8, i64 -17, !dbg !5865
  %31 = bitcast i8* %30 to i64*, !dbg !5866
  %32 = load i64, i64* %31, align 1, !dbg !5866, !tbaa !1510
  br label %33, !dbg !5867

; <label>:33:                                     ; preds = %4, %12, %15, %19, %24, %29
  %34 = phi i64 [ %32, %29 ], [ %28, %24 ], [ %23, %19 ], [ %18, %15 ], [ %14, %12 ], [ 0, %4 ], !dbg !5868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5870
  %35 = tail call i64 @write(i32 %1, i8* %8, i64 %34) #6, !dbg !5871
  %36 = icmp slt i64 %35, 1, !dbg !5873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5875
  br i1 %36, label %37, label %45, !dbg !5875

; <label>:37:                                     ; preds = %33
  %38 = icmp eq i64 %35, -1, !dbg !5876
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5878
  br i1 %38, label %39, label %43, !dbg !5878

; <label>:39:                                     ; preds = %37
  %40 = tail call i32* @__errno() #6, !dbg !5879
  %41 = load i32, i32* %40, align 4, !dbg !5879, !tbaa !708
  %42 = tail call i8* @strerror(i32 %41) #6, !dbg !5880
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5878
  br label %43, !dbg !5878

; <label>:43:                                     ; preds = %37, %39
  %44 = phi i8* [ %42, %39 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i64 0, i64 0), %37 ], !dbg !5878
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.66, i64 0, i64 0), i8* %44) #6, !dbg !5881
  tail call void @freeClusterLink(%struct.clusterLink* %5) #6, !dbg !5884
  br label %81, !dbg !5885

; <label>:45:                                     ; preds = %33
  %46 = load i8*, i8** %7, align 8, !dbg !5886, !tbaa !2147
  tail call void @sdsrange(i8* %46, i64 %35, i64 -1) #6, !dbg !5887
  %47 = load i8*, i8** %7, align 8, !dbg !5888, !tbaa !2147
  %48 = getelementptr inbounds i8, i8* %47, i64 -1, !dbg !5892
  %49 = load i8, i8* %48, align 1, !dbg !5892, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5894
  %50 = trunc i8 %49 to i3, !dbg !5894
  switch i3 %50, label %72 [
    i3 0, label %51
    i3 1, label %54
    i3 2, label %58
    i3 3, label %63
    i3 -4, label %68
  ], !dbg !5894

; <label>:51:                                     ; preds = %45
  %52 = lshr i8 %49, 3, !dbg !5895
  %53 = zext i8 %52 to i64, !dbg !5895
  br label %73, !dbg !5896

; <label>:54:                                     ; preds = %45
  %55 = getelementptr inbounds i8, i8* %47, i64 -3, !dbg !5897
  %56 = load i8, i8* %55, align 1, !dbg !5898, !tbaa !745
  %57 = zext i8 %56 to i64, !dbg !5897
  br label %73, !dbg !5899

; <label>:58:                                     ; preds = %45
  %59 = getelementptr inbounds i8, i8* %47, i64 -5, !dbg !5900
  %60 = bitcast i8* %59 to i16*, !dbg !5901
  %61 = load i16, i16* %60, align 1, !dbg !5901, !tbaa !1503
  %62 = zext i16 %61 to i64, !dbg !5900
  br label %73, !dbg !5902

; <label>:63:                                     ; preds = %45
  %64 = getelementptr inbounds i8, i8* %47, i64 -9, !dbg !5903
  %65 = bitcast i8* %64 to i32*, !dbg !5904
  %66 = load i32, i32* %65, align 1, !dbg !5904, !tbaa !708
  %67 = zext i32 %66 to i64, !dbg !5903
  br label %73, !dbg !5905

; <label>:68:                                     ; preds = %45
  %69 = getelementptr inbounds i8, i8* %47, i64 -17, !dbg !5906
  %70 = bitcast i8* %69 to i64*, !dbg !5907
  %71 = load i64, i64* %70, align 1, !dbg !5907, !tbaa !1510
  br label %73, !dbg !5908

; <label>:72:                                     ; preds = %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5909
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5911
  br label %76, !dbg !5911

; <label>:73:                                     ; preds = %51, %54, %58, %63, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %63 ], [ %62, %58 ], [ %57, %54 ], [ %53, %51 ], !dbg !5912
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5910
  %75 = icmp eq i64 %74, 0, !dbg !5914
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5911
  br i1 %75, label %76, label %82, !dbg !5911

; <label>:76:                                     ; preds = %72, %73
  %77 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5915, !tbaa !1942
  %78 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5916
  %79 = bitcast i8* %78 to i32*, !dbg !5916
  %80 = load i32, i32* %79, align 8, !dbg !5916, !tbaa !2159
  tail call void @aeDeleteFileEvent(%struct.aeEventLoop* %77, i32 %80, i32 2) #6, !dbg !5917
  br label %81, !dbg !5917

; <label>:81:                                     ; preds = %43, %76
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5918
  br label %82, !dbg !5918

; <label>:82:                                     ; preds = %81, %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5919
  ret void, !dbg !5919
}

; Function Attrs: noredzone
declare dso_local void @sdsrange(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @read(i32, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdscatlen(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendMessage(%struct.clusterLink*, i8*, i64) local_unnamed_addr #0 !dbg !5920 {
  %4 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 2, !dbg !5932
  %5 = load i8*, i8** %4, align 8, !dbg !5932, !tbaa !2147
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !5936
  %7 = load i8, i8* %6, align 1, !dbg !5936, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5938
  %8 = trunc i8 %7 to i3, !dbg !5938
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !5938

; <label>:9:                                      ; preds = %3
  %10 = lshr i8 %7, 3, !dbg !5939
  %11 = zext i8 %10 to i64, !dbg !5939
  br label %30, !dbg !5940

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !5941
  %14 = load i8, i8* %13, align 1, !dbg !5942, !tbaa !745
  %15 = zext i8 %14 to i64, !dbg !5941
  br label %30, !dbg !5943

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !5944
  %18 = bitcast i8* %17 to i16*, !dbg !5945
  %19 = load i16, i16* %18, align 1, !dbg !5945, !tbaa !1503
  %20 = zext i16 %19 to i64, !dbg !5944
  br label %30, !dbg !5946

; <label>:21:                                     ; preds = %3
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !5947
  %23 = bitcast i8* %22 to i32*, !dbg !5948
  %24 = load i32, i32* %23, align 1, !dbg !5948, !tbaa !708
  %25 = zext i32 %24 to i64, !dbg !5947
  br label %30, !dbg !5949

; <label>:26:                                     ; preds = %3
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !5950
  %28 = bitcast i8* %27 to i64*, !dbg !5951
  %29 = load i64, i64* %28, align 1, !dbg !5951, !tbaa !1510
  br label %30, !dbg !5952

; <label>:30:                                     ; preds = %3, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %3 ], !dbg !5953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5954
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5955
  %32 = icmp eq i64 %31, 0, !dbg !5956
  %33 = icmp ne i64 %2, 0, !dbg !5957
  %34 = and i1 %33, %32, !dbg !5958
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5958
  br i1 %34, label %35, label %42, !dbg !5958

; <label>:35:                                     ; preds = %30
  %36 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !5959, !tbaa !1942
  %37 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %0, i64 0, i32 1, !dbg !5960
  %38 = load i32, i32* %37, align 8, !dbg !5960, !tbaa !2159
  %39 = bitcast %struct.clusterLink* %0 to i8*, !dbg !5961
  %40 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* %36, i32 %38, i32 6, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterWriteHandler, i8* %39) #6, !dbg !5962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5962
  %41 = load i8*, i8** %4, align 8, !dbg !5963, !tbaa !2147
  br label %42, !dbg !5962

; <label>:42:                                     ; preds = %35, %30
  %43 = phi i8* [ %41, %35 ], [ %5, %30 ], !dbg !5963
  %44 = tail call i8* @sdscatlen(i8* %43, i8* %1, i64 %2) #6, !dbg !5964
  store i8* %44, i8** %4, align 8, !dbg !5965, !tbaa !2147
  %45 = getelementptr inbounds i8, i8* %1, i64 12, !dbg !5967
  %46 = bitcast i8* %45 to i16*, !dbg !5967
  %47 = load i16, i16* %46, align 4, !dbg !5967, !tbaa !4419
  %48 = tail call zeroext i16 @lwip_htons(i16 zeroext %47) #6, !dbg !5967
  %49 = icmp ult i16 %48, 10, !dbg !5969
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5971
  br i1 %49, label %50, label %56, !dbg !5971

; <label>:50:                                     ; preds = %42
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5972, !tbaa !788
  %52 = zext i16 %48 to i64, !dbg !5973
  %53 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 23, i64 %52, !dbg !5973
  %54 = load i64, i64* %53, align 8, !dbg !5974, !tbaa !1173
  %55 = add nsw i64 %54, 1, !dbg !5974
  store i64 %55, i64* %53, align 8, !dbg !5974, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5973
  br label %56, !dbg !5973

; <label>:56:                                     ; preds = %50, %42
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5975
  ret void, !dbg !5975
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterBroadcastMessage(i8*, i64) local_unnamed_addr #0 !dbg !5976 {
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !5988, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !5989
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !5989, !tbaa !837
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #6, !dbg !5990
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5992
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #6, !dbg !5993
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !5995
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5992
  br i1 %8, label %26, label %9, !dbg !5992

; <label>:9:                                      ; preds = %2, %23
  %10 = phi %struct.dictEntry* [ %24, %23 ], [ %7, %2 ]
  %11 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !5996
  %12 = bitcast i8** %11 to %struct.clusterNode**, !dbg !5996
  %13 = load %struct.clusterNode*, %struct.clusterNode** %12, align 8, !dbg !5996, !tbaa !745
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 19, !dbg !5998
  %15 = load %struct.clusterLink*, %struct.clusterLink** %14, align 8, !dbg !5998, !tbaa !1178
  %16 = icmp eq %struct.clusterLink* %15, null, !dbg !6000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6001
  br i1 %16, label %23, label %17, !dbg !6001, !llvm.loop !6002

; <label>:17:                                     ; preds = %9
  %18 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %13, i64 0, i32 2, !dbg !6004
  %19 = load i32, i32* %18, align 8, !dbg !6004, !tbaa !927
  %20 = and i32 %19, 48, !dbg !6006
  %21 = icmp eq i32 %20, 0, !dbg !6006
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6007
  br i1 %21, label %22, label %23, !dbg !6007, !llvm.loop !6002

; <label>:22:                                     ; preds = %17
  tail call void @clusterSendMessage(%struct.clusterLink* nonnull %15, i8* %0, i64 %1) #10, !dbg !6008
  br label %23, !dbg !6003

; <label>:23:                                     ; preds = %17, %9, %22
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6009
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %24 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #6, !dbg !5993
  %25 = icmp eq %struct.dictEntry* %24, null, !dbg !5995
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5992
  br i1 %25, label %26, label %9, !dbg !5992

; <label>:26:                                     ; preds = %23, %2
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #6, !dbg !6010
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6011
  ret void, !dbg !6011
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterBuildMessageHdr(%struct.clusterMsg*, i32) local_unnamed_addr #0 !dbg !6012 {
  %3 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6026, !tbaa !760
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %3, i64 0, i32 2, !dbg !6026
  %5 = load i32, i32* %4, align 8, !dbg !6026, !tbaa !927
  %6 = and i32 %5, 2, !dbg !6026
  %7 = icmp eq i32 %6, 0, !dbg !6026
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6027
  br i1 %7, label %12, label %8, !dbg !6027

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %3, i64 0, i32 8, !dbg !6028
  %10 = load %struct.clusterNode*, %struct.clusterNode** %9, align 8, !dbg !6028, !tbaa !1025
  %11 = icmp eq %struct.clusterNode* %10, null, !dbg !6029
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6030
  br i1 %11, label %12, label %13, !dbg !6030

; <label>:12:                                     ; preds = %8, %2
  br label %13, !dbg !6030

; <label>:13:                                     ; preds = %8, %12
  %14 = phi %struct.clusterNode* [ %3, %12 ], [ %10, %8 ], !dbg !6030
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6030
  %15 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 0, !dbg !6032
  %16 = tail call i8* @memset(i8* %15, i32 0, i64 4352) #6, !dbg !6033
  %17 = tail call zeroext i16 @lwip_htons(i16 zeroext 1) #6, !dbg !6034
  %18 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 2, !dbg !6035
  store i16 %17, i16* %18, align 8, !dbg !6036, !tbaa !4461
  store i8 82, i8* %15, align 8, !dbg !6037, !tbaa !745
  %19 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 1, !dbg !6038
  store i8 67, i8* %19, align 1, !dbg !6039, !tbaa !745
  %20 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 2, !dbg !6040
  store i8 109, i8* %20, align 2, !dbg !6041, !tbaa !745
  %21 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 0, i64 3, !dbg !6042
  store i8 98, i8* %21, align 1, !dbg !6043, !tbaa !745
  %22 = trunc i32 %1 to i16, !dbg !6044
  %23 = tail call zeroext i16 @lwip_htons(i16 zeroext %22) #6, !dbg !6044
  %24 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 4, !dbg !6045
  store i16 %23, i16* %24, align 4, !dbg !6046, !tbaa !4419
  %25 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 9, i64 0, !dbg !6047
  %26 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6048, !tbaa !760
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 1, i64 0, !dbg !6048
  %28 = tail call i8* @memcpy(i8* nonnull %25, i8* nonnull %27, i64 40) #6, !dbg !6049
  %29 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 12, i64 0, !dbg !6050
  %30 = tail call i8* @memset(i8* nonnull %29, i32 0, i64 46) #6, !dbg !6051
  %31 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !6052, !tbaa !4618
  %32 = icmp eq i8* %31, null, !dbg !6054
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6055
  br i1 %32, label %36, label %33, !dbg !6055

; <label>:33:                                     ; preds = %13
  %34 = tail call i8* @strncpy(i8* nonnull %29, i8* nonnull %31, i64 46) #6, !dbg !6056
  %35 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 12, i64 45, !dbg !6058
  store i8 0, i8* %35, align 1, !dbg !6059, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6060
  br label %36, !dbg !6060

; <label>:36:                                     ; preds = %13, %33
  %37 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 267), align 8, !dbg !6061, !tbaa !1968
  %38 = icmp eq i32 %37, 0, !dbg !6062
  %39 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 27), align 8, !dbg !6063
  %40 = select i1 %38, i32 %39, i32 %37, !dbg !6062
  %41 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 268), align 4, !dbg !6065, !tbaa !1975
  %42 = icmp eq i32 %41, 0, !dbg !6066
  %43 = add nsw i32 %39, 10000, !dbg !6067
  %44 = select i1 %42, i32 %43, i32 %41, !dbg !6066
  %45 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 10, i64 0, !dbg !6069
  %46 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 4, i64 0, !dbg !6070
  %47 = tail call i8* @memcpy(i8* nonnull %45, i8* nonnull %46, i64 2048) #6, !dbg !6071
  %48 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 11, i64 0, !dbg !6072
  %49 = tail call i8* @memset(i8* nonnull %48, i32 0, i64 40) #6, !dbg !6073
  %50 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6074, !tbaa !760
  %51 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %50, i64 0, i32 8, !dbg !6076
  %52 = load %struct.clusterNode*, %struct.clusterNode** %51, align 8, !dbg !6076, !tbaa !1025
  %53 = icmp eq %struct.clusterNode* %52, null, !dbg !6077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6078
  br i1 %53, label %57, label %54, !dbg !6078

; <label>:54:                                     ; preds = %36
  %55 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %52, i64 0, i32 1, i64 0, !dbg !6079
  %56 = tail call i8* @memcpy(i8* nonnull %48, i8* nonnull %55, i64 40) #6, !dbg !6080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6080
  br label %57, !dbg !6080

; <label>:57:                                     ; preds = %36, %54
  %58 = trunc i32 %40 to i16, !dbg !6081
  %59 = tail call zeroext i16 @lwip_htons(i16 zeroext %58) #6, !dbg !6081
  %60 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 3, !dbg !6082
  store i16 %59, i16* %60, align 2, !dbg !6083, !tbaa !3954
  %61 = trunc i32 %44 to i16, !dbg !6084
  %62 = tail call zeroext i16 @lwip_htons(i16 zeroext %61) #6, !dbg !6084
  %63 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 14, !dbg !6085
  store i16 %62, i16* %63, align 8, !dbg !6086, !tbaa !3957
  %64 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6087, !tbaa !760
  %65 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %64, i64 0, i32 2, !dbg !6087
  %66 = load i32, i32* %65, align 8, !dbg !6087, !tbaa !927
  %67 = trunc i32 %66 to i16, !dbg !6087
  %68 = tail call zeroext i16 @lwip_htons(i16 zeroext %67) #6, !dbg !6087
  %69 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 15, !dbg !6088
  store i16 %68, i16* %69, align 2, !dbg !6089, !tbaa !4465
  %70 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6090, !tbaa !788
  %71 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %70, i64 0, i32 2, !dbg !6091
  %72 = load i32, i32* %71, align 8, !dbg !6091, !tbaa !1770
  %73 = trunc i32 %72 to i8, !dbg !6092
  %74 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 16, !dbg !6093
  store i8 %73, i8* %74, align 4, !dbg !6094, !tbaa !6095
  %75 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %70, i64 0, i32 1, !dbg !6096
  %76 = load i64, i64* %75, align 8, !dbg !6096, !tbaa !797
  %77 = tail call i64 @intrev64(i64 %76) #6, !dbg !6096
  %78 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 6, !dbg !6097
  store i64 %77, i64* %78, align 8, !dbg !6098, !tbaa !4554
  %79 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 3, !dbg !6099
  %80 = load i64, i64* %79, align 8, !dbg !6099, !tbaa !1093
  %81 = tail call i64 @intrev64(i64 %80) #6, !dbg !6099
  %82 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 7, !dbg !6100
  store i64 %81, i64* %82, align 8, !dbg !6101, !tbaa !4556
  %83 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6102, !tbaa !760
  %84 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %83, i64 0, i32 2, !dbg !6102
  %85 = load i32, i32* %84, align 8, !dbg !6102, !tbaa !927
  %86 = and i32 %85, 2, !dbg !6102
  %87 = icmp eq i32 %86, 0, !dbg !6102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6104
  br i1 %87, label %90, label %88, !dbg !6104

; <label>:88:                                     ; preds = %57
  %89 = tail call i64 @replicationGetSlaveOffset() #6, !dbg !6105
  br label %92, !dbg !6107

; <label>:90:                                     ; preds = %57
  %91 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 179), align 8, !dbg !6108, !tbaa !6109
  br label %92

; <label>:92:                                     ; preds = %90, %88
  %93 = phi i64 [ %89, %88 ], [ %91, %90 ], !dbg !6110
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %94 = tail call i64 @intrev64(i64 %93) #6, !dbg !6111
  %95 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 8, !dbg !6112
  store i64 %94, i64* %95, align 8, !dbg !6113, !tbaa !4577
  %96 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6114, !tbaa !760
  %97 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %96, i64 0, i32 2, !dbg !6114
  %98 = load i32, i32* %97, align 8, !dbg !6114, !tbaa !927
  %99 = and i32 %98, 1, !dbg !6114
  %100 = icmp eq i32 %99, 0, !dbg !6114
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6116
  br i1 %100, label %110, label %101, !dbg !6116

; <label>:101:                                    ; preds = %92
  %102 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6117, !tbaa !788
  %103 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %102, i64 0, i32 17, !dbg !6118
  %104 = load i64, i64* %103, align 8, !dbg !6118, !tbaa !1987
  %105 = icmp eq i64 %104, 0, !dbg !6119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6120
  br i1 %105, label %110, label %106, !dbg !6120

; <label>:106:                                    ; preds = %101
  %107 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 17, i64 0, !dbg !6121
  %108 = load i8, i8* %107, align 1, !dbg !6122, !tbaa !745
  %109 = or i8 %108, 1, !dbg !6122
  store i8 %109, i8* %107, align 1, !dbg !6122, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6121
  br label %110, !dbg !6121

; <label>:110:                                    ; preds = %101, %92, %106
  %111 = icmp eq i32 %1, 3, !dbg !6123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6125
  br i1 %111, label %114, label %112, !dbg !6125

; <label>:112:                                    ; preds = %110
  %113 = icmp eq i32 %1, 7, !dbg !6126
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6128
  br i1 %113, label %114, label %116, !dbg !6128

; <label>:114:                                    ; preds = %112, %110
  %115 = phi i32 [ 2296, %110 ], [ 4352, %112 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6129
  br label %116, !dbg !6131

; <label>:116:                                    ; preds = %114, %112
  %117 = phi i32 [ 0, %112 ], [ %115, %114 ], !dbg !6132
  %118 = tail call i32 @lwip_htonl(i32 %117) #6, !dbg !6131
  %119 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 1, !dbg !6133
  store i32 %118, i32* %119, align 4, !dbg !6134, !tbaa !2758
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6135
  ret void, !dbg !6135
}

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @replicationGetSlaveOffset() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeIsInGossipSection(%struct.clusterMsg*, i32, %struct.clusterNode*) local_unnamed_addr #0 !dbg !5400 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6140
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 18, !dbg !6141
  %5 = bitcast %union.clusterMsgData* %4 to [1 x %struct.clusterMsgDataGossip]*, !dbg !6142
  %6 = icmp sgt i32 %1, 0, !dbg !6143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5427
  br i1 %6, label %7, label %22, !dbg !5427

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 1, i64 0
  %9 = sext i32 %1 to i64, !dbg !5427
  br label %10, !dbg !5427

; <label>:10:                                     ; preds = %7, %16
  %11 = phi i64 [ 0, %7 ], [ %17, %16 ]
  %12 = phi i32 [ 0, %7 ], [ %18, %16 ]
  %13 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %11, i32 0, i64 0, !dbg !6144
  %14 = tail call i32 @memcmp(i8* %13, i8* nonnull %8, i64 40) #6, !dbg !6145
  %15 = icmp eq i32 %14, 0, !dbg !6146
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6147
  br i1 %15, label %20, label %16, !dbg !6147

; <label>:16:                                     ; preds = %10
  %17 = add nuw nsw i64 %11, 1, !dbg !6148
  %18 = add nuw nsw i32 %12, 1, !dbg !6148
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6149
  %19 = icmp slt i64 %17, %9, !dbg !6143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !5427
  br i1 %19, label %10, label %22, !dbg !5427, !llvm.loop !5426

; <label>:20:                                     ; preds = %10
  %21 = trunc i64 %11 to i32, !dbg !6147
  br label %22, !dbg !6150

; <label>:22:                                     ; preds = %16, %20, %3
  %23 = phi i32 [ 0, %3 ], [ %21, %20 ], [ %18, %16 ], !dbg !6151
  %24 = icmp ne i32 %23, %1, !dbg !6150
  %25 = zext i1 %24 to i32, !dbg !6150
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6152
  ret i32 %25, !dbg !6152
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSetGossipEntry(%struct.clusterMsg*, i32, %struct.clusterNode*) local_unnamed_addr #0 !dbg !5434 {
  %4 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %0, i64 0, i32 18, !dbg !6156
  %5 = bitcast %union.clusterMsgData* %4 to [1 x %struct.clusterMsgDataGossip]*, !dbg !6157
  %6 = sext i32 %1 to i64, !dbg !6158
  %7 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 0, i64 0, !dbg !6159
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 1, i64 0, !dbg !6160
  %9 = tail call i8* @memcpy(i8* %7, i8* nonnull %8, i64 40) #6, !dbg !6161
  %10 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 9, !dbg !6162
  %11 = load i64, i64* %10, align 8, !dbg !6162, !tbaa !1078
  %12 = sdiv i64 %11, 1000, !dbg !6162
  %13 = trunc i64 %12 to i32, !dbg !6162
  %14 = tail call i32 @lwip_htonl(i32 %13) #6, !dbg !6162
  %15 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 1, !dbg !6163
  store i32 %14, i32* %15, align 4, !dbg !6164, !tbaa !5452
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 10, !dbg !6165
  %17 = load i64, i64* %16, align 8, !dbg !6165, !tbaa !1087
  %18 = sdiv i64 %17, 1000, !dbg !6165
  %19 = trunc i64 %18 to i32, !dbg !6165
  %20 = tail call i32 @lwip_htonl(i32 %19) #6, !dbg !6165
  %21 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 2, !dbg !6166
  store i32 %20, i32* %21, align 4, !dbg !6167, !tbaa !3763
  %22 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 3, i64 0, !dbg !6168
  %23 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 16, i64 0, !dbg !6169
  %24 = tail call i8* @memcpy(i8* nonnull %22, i8* nonnull %23, i64 46) #6, !dbg !6170
  %25 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 17, !dbg !6171
  %26 = load i32, i32* %25, align 8, !dbg !6171, !tbaa !900
  %27 = trunc i32 %26 to i16, !dbg !6171
  %28 = tail call zeroext i16 @lwip_htons(i16 zeroext %27) #6, !dbg !6171
  %29 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 4, !dbg !6172
  store i16 %28, i16* %29, align 2, !dbg !6173, !tbaa !3670
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 18, !dbg !6174
  %31 = load i32, i32* %30, align 4, !dbg !6174, !tbaa !907
  %32 = trunc i32 %31 to i16, !dbg !6174
  %33 = tail call zeroext i16 @lwip_htons(i16 zeroext %32) #6, !dbg !6174
  %34 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 5, !dbg !6175
  store i16 %33, i16* %34, align 4, !dbg !6176, !tbaa !3672
  %35 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 2, !dbg !6177
  %36 = load i32, i32* %35, align 8, !dbg !6177, !tbaa !927
  %37 = trunc i32 %36 to i16, !dbg !6177
  %38 = tail call zeroext i16 @lwip_htons(i16 zeroext %37) #6, !dbg !6177
  %39 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 6, !dbg !6178
  store i16 %38, i16* %39, align 2, !dbg !6179, !tbaa !3654
  %40 = getelementptr inbounds [1 x %struct.clusterMsgDataGossip], [1 x %struct.clusterMsgDataGossip]* %5, i64 0, i64 %6, i32 7, !dbg !6180
  store i32 0, i32* %40, align 4, !dbg !6181, !tbaa !5470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6182
  ret void, !dbg !6182
}

; Function Attrs: noredzone
declare dso_local double @floor(double) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @zcalloc(i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.dictEntry* @dictGetRandomKey(%struct.dict*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterBroadcastPong(i32) local_unnamed_addr #0 !dbg !6183 {
  %2 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6194, !tbaa !788
  %3 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %2, i64 0, i32 4, !dbg !6195
  %4 = load %struct.dict*, %struct.dict** %3, align 8, !dbg !6195, !tbaa !837
  %5 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %4) #6, !dbg !6196
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6198
  %6 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #6, !dbg !6199
  %7 = icmp eq %struct.dictEntry* %6, null, !dbg !6201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6198
  br i1 %7, label %47, label %8, !dbg !6198

; <label>:8:                                      ; preds = %1
  %9 = icmp eq i32 %0, 1
  br label %10, !dbg !6198

; <label>:10:                                     ; preds = %8, %44
  %11 = phi %struct.dictEntry* [ %6, %8 ], [ %45, %44 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %11, i64 0, i32 1, i32 0, !dbg !6202
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !6202
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !6202, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 19, !dbg !6204
  %16 = load %struct.clusterLink*, %struct.clusterLink** %15, align 8, !dbg !6204, !tbaa !1178
  %17 = icmp eq %struct.clusterLink* %16, null, !dbg !6206
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6207
  br i1 %17, label %44, label %18, !dbg !6207, !llvm.loop !6208

; <label>:18:                                     ; preds = %10
  %19 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6210, !tbaa !760
  %20 = icmp eq %struct.clusterNode* %14, %19, !dbg !6212
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6213
  br i1 %20, label %44, label %21, !dbg !6213, !llvm.loop !6208

; <label>:21:                                     ; preds = %18
  %22 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !6214
  %23 = load i32, i32* %22, align 8, !dbg !6214, !tbaa !927
  %24 = and i32 %23, 32, !dbg !6214
  %25 = icmp eq i32 %24, 0, !dbg !6214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6215
  br i1 %25, label %26, label %44, !dbg !6215, !llvm.loop !6208

; <label>:26:                                     ; preds = %21
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6216
  br i1 %9, label %27, label %43, !dbg !6216

; <label>:27:                                     ; preds = %26
  %28 = and i32 %23, 2, !dbg !6217
  %29 = icmp eq i32 %28, 0, !dbg !6217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6218
  br i1 %29, label %37, label %30, !dbg !6218

; <label>:30:                                     ; preds = %27
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 8, !dbg !6219
  %32 = load %struct.clusterNode*, %struct.clusterNode** %31, align 8, !dbg !6219, !tbaa !1025
  %33 = icmp eq %struct.clusterNode* %32, null, !dbg !6220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6221
  br i1 %33, label %37, label %34, !dbg !6221

; <label>:34:                                     ; preds = %30
  %35 = icmp eq %struct.clusterNode* %32, %19, !dbg !6222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6223
  br i1 %35, label %36, label %38, !dbg !6223

; <label>:36:                                     ; preds = %34
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6225
  br label %42, !dbg !6227

; <label>:37:                                     ; preds = %30, %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6225
  br label %44, !dbg !6227

; <label>:38:                                     ; preds = %34
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %19, i64 0, i32 8, !dbg !6228
  %40 = load %struct.clusterNode*, %struct.clusterNode** %39, align 8, !dbg !6228, !tbaa !1025
  %41 = icmp eq %struct.clusterNode* %32, %40, !dbg !6229
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6223
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6225
  br i1 %41, label %42, label %44, !dbg !6227

; <label>:42:                                     ; preds = %38, %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %43

; <label>:43:                                     ; preds = %42, %26
  tail call void @clusterSendPing(%struct.clusterLink* nonnull %16, i32 1) #10, !dbg !6230
  br label %44, !dbg !6209

; <label>:44:                                     ; preds = %37, %38, %18, %21, %10, %43
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %45 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %5) #6, !dbg !6199
  %46 = icmp eq %struct.dictEntry* %45, null, !dbg !6201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6198
  br i1 %46, label %47, label %10, !dbg !6198

; <label>:47:                                     ; preds = %44, %1
  tail call void @dictReleaseIterator(%struct.dictIterator* %5) #6, !dbg !6231
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6232
  ret void, !dbg !6232
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendPublish(%struct.clusterLink*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #0 !dbg !6233 {
  %4 = alloca %struct.clusterMsg, align 16
  %5 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %4, i64 0, i32 0, i64 0, !dbg !6249
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %5) #7, !dbg !6249
  %6 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %1) #6, !dbg !6251
  %7 = tail call %struct.redisObject* @getDecodedObject(%struct.redisObject* %2) #6, !dbg !6252
  %8 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %6, i64 0, i32 2, !dbg !6253
  %9 = load i8*, i8** %8, align 8, !dbg !6253, !tbaa !6254
  %10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !6258
  %11 = load i8, i8* %10, align 1, !dbg !6258, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6260
  %12 = trunc i8 %11 to i3, !dbg !6260
  switch i3 %12, label %34 [
    i3 0, label %13
    i3 1, label %16
    i3 2, label %20
    i3 3, label %25
    i3 -4, label %30
  ], !dbg !6260

; <label>:13:                                     ; preds = %3
  %14 = lshr i8 %11, 3, !dbg !6261
  %15 = zext i8 %14 to i64, !dbg !6261
  br label %34, !dbg !6262

; <label>:16:                                     ; preds = %3
  %17 = getelementptr inbounds i8, i8* %9, i64 -3, !dbg !6263
  %18 = load i8, i8* %17, align 1, !dbg !6264, !tbaa !745
  %19 = zext i8 %18 to i64, !dbg !6263
  br label %34, !dbg !6265

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds i8, i8* %9, i64 -5, !dbg !6266
  %22 = bitcast i8* %21 to i16*, !dbg !6267
  %23 = load i16, i16* %22, align 1, !dbg !6267, !tbaa !1503
  %24 = zext i16 %23 to i64, !dbg !6266
  br label %34, !dbg !6268

; <label>:25:                                     ; preds = %3
  %26 = getelementptr inbounds i8, i8* %9, i64 -9, !dbg !6269
  %27 = bitcast i8* %26 to i32*, !dbg !6270
  %28 = load i32, i32* %27, align 1, !dbg !6270, !tbaa !708
  %29 = zext i32 %28 to i64, !dbg !6269
  br label %34, !dbg !6271

; <label>:30:                                     ; preds = %3
  %31 = getelementptr inbounds i8, i8* %9, i64 -17, !dbg !6272
  %32 = bitcast i8* %31 to i64*, !dbg !6273
  %33 = load i64, i64* %32, align 1, !dbg !6273, !tbaa !1510
  br label %34, !dbg !6274

; <label>:34:                                     ; preds = %3, %13, %16, %20, %25, %30
  %35 = phi i64 [ %33, %30 ], [ %29, %25 ], [ %24, %20 ], [ %19, %16 ], [ %15, %13 ], [ 0, %3 ], !dbg !6275
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6277
  %36 = trunc i64 %35 to i32, !dbg !6278
  %37 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %7, i64 0, i32 2, !dbg !6280
  %38 = load i8*, i8** %37, align 8, !dbg !6280, !tbaa !6254
  %39 = getelementptr inbounds i8, i8* %38, i64 -1, !dbg !6283
  %40 = load i8, i8* %39, align 1, !dbg !6283, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6285
  %41 = trunc i8 %40 to i3, !dbg !6285
  switch i3 %41, label %63 [
    i3 0, label %42
    i3 1, label %45
    i3 2, label %49
    i3 3, label %54
    i3 -4, label %59
  ], !dbg !6285

; <label>:42:                                     ; preds = %34
  %43 = lshr i8 %40, 3, !dbg !6286
  %44 = zext i8 %43 to i64, !dbg !6286
  br label %63, !dbg !6287

; <label>:45:                                     ; preds = %34
  %46 = getelementptr inbounds i8, i8* %38, i64 -3, !dbg !6288
  %47 = load i8, i8* %46, align 1, !dbg !6289, !tbaa !745
  %48 = zext i8 %47 to i64, !dbg !6288
  br label %63, !dbg !6290

; <label>:49:                                     ; preds = %34
  %50 = getelementptr inbounds i8, i8* %38, i64 -5, !dbg !6291
  %51 = bitcast i8* %50 to i16*, !dbg !6292
  %52 = load i16, i16* %51, align 1, !dbg !6292, !tbaa !1503
  %53 = zext i16 %52 to i64, !dbg !6291
  br label %63, !dbg !6293

; <label>:54:                                     ; preds = %34
  %55 = getelementptr inbounds i8, i8* %38, i64 -9, !dbg !6294
  %56 = bitcast i8* %55 to i32*, !dbg !6295
  %57 = load i32, i32* %56, align 1, !dbg !6295, !tbaa !708
  %58 = zext i32 %57 to i64, !dbg !6294
  br label %63, !dbg !6296

; <label>:59:                                     ; preds = %34
  %60 = getelementptr inbounds i8, i8* %38, i64 -17, !dbg !6297
  %61 = bitcast i8* %60 to i64*, !dbg !6298
  %62 = load i64, i64* %61, align 1, !dbg !6298, !tbaa !1510
  br label %63, !dbg !6299

; <label>:63:                                     ; preds = %34, %42, %45, %49, %54, %59
  %64 = phi i64 [ %62, %59 ], [ %58, %54 ], [ %53, %49 ], [ %48, %45 ], [ %44, %42 ], [ 0, %34 ], !dbg !6300
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6301
  %65 = trunc i64 %64 to i32, !dbg !6302
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %4, i32 4) #10, !dbg !6305
  %66 = add i64 %35, 8, !dbg !6307
  %67 = add i64 %66, %64, !dbg !6308
  %68 = trunc i64 %67 to i32, !dbg !6309
  %69 = add i32 %68, 2256, !dbg !6309
  %70 = call i32 @lwip_htonl(i32 %36) #6, !dbg !6310
  %71 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %4, i64 0, i32 18, !dbg !6311
  %72 = bitcast %union.clusterMsgData* %71 to %struct.clusterMsgDataPublish*, !dbg !6312
  %73 = bitcast %union.clusterMsgData* %71 to i32*, !dbg !6313
  store i32 %70, i32* %73, align 16, !dbg !6314, !tbaa !745
  %74 = call i32 @lwip_htonl(i32 %65) #6, !dbg !6315
  %75 = getelementptr inbounds %struct.clusterMsgDataPublish, %struct.clusterMsgDataPublish* %72, i64 0, i32 1, !dbg !6316
  store i32 %74, i32* %75, align 4, !dbg !6317, !tbaa !745
  %76 = call i32 @lwip_htonl(i32 %69) #6, !dbg !6318
  %77 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %4, i64 0, i32 1, !dbg !6319
  store i32 %76, i32* %77, align 4, !dbg !6320, !tbaa !2758
  %78 = zext i32 %69 to i64, !dbg !6321
  %79 = icmp ult i32 %69, 4352, !dbg !6323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6324
  br i1 %79, label %84, label %80, !dbg !6324

; <label>:80:                                     ; preds = %63
  %81 = call i8* @zmalloc(i64 %78) #6, !dbg !6325
  %82 = call i8* @memcpy(i8* %81, i8* nonnull %5, i64 4352) #6, !dbg !6328
  %83 = bitcast i8* %81 to %struct.clusterMsg*, !dbg !6329
  br label %84

; <label>:84:                                     ; preds = %63, %80
  %85 = phi i8* [ %81, %80 ], [ %5, %63 ], !dbg !6330
  %86 = phi %struct.clusterMsg* [ %83, %80 ], [ %4, %63 ], !dbg !6330
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %87 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %86, i64 0, i32 18, i32 0, i32 0, i32 1, i64 0, !dbg !6331
  %88 = load i8*, i8** %8, align 8, !dbg !6332, !tbaa !6254
  %89 = getelementptr inbounds i8, i8* %88, i64 -1, !dbg !6335
  %90 = load i8, i8* %89, align 1, !dbg !6335, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6337
  %91 = trunc i8 %90 to i3, !dbg !6337
  switch i3 %91, label %113 [
    i3 0, label %92
    i3 1, label %95
    i3 2, label %99
    i3 3, label %104
    i3 -4, label %109
  ], !dbg !6337

; <label>:92:                                     ; preds = %84
  %93 = lshr i8 %90, 3, !dbg !6338
  %94 = zext i8 %93 to i64, !dbg !6338
  br label %113, !dbg !6339

; <label>:95:                                     ; preds = %84
  %96 = getelementptr inbounds i8, i8* %88, i64 -3, !dbg !6340
  %97 = load i8, i8* %96, align 1, !dbg !6341, !tbaa !745
  %98 = zext i8 %97 to i64, !dbg !6340
  br label %113, !dbg !6342

; <label>:99:                                     ; preds = %84
  %100 = getelementptr inbounds i8, i8* %88, i64 -5, !dbg !6343
  %101 = bitcast i8* %100 to i16*, !dbg !6344
  %102 = load i16, i16* %101, align 1, !dbg !6344, !tbaa !1503
  %103 = zext i16 %102 to i64, !dbg !6343
  br label %113, !dbg !6345

; <label>:104:                                    ; preds = %84
  %105 = getelementptr inbounds i8, i8* %88, i64 -9, !dbg !6346
  %106 = bitcast i8* %105 to i32*, !dbg !6347
  %107 = load i32, i32* %106, align 1, !dbg !6347, !tbaa !708
  %108 = zext i32 %107 to i64, !dbg !6346
  br label %113, !dbg !6348

; <label>:109:                                    ; preds = %84
  %110 = getelementptr inbounds i8, i8* %88, i64 -17, !dbg !6349
  %111 = bitcast i8* %110 to i64*, !dbg !6350
  %112 = load i64, i64* %111, align 1, !dbg !6350, !tbaa !1510
  br label %113, !dbg !6351

; <label>:113:                                    ; preds = %84, %92, %95, %99, %104, %109
  %114 = phi i64 [ %112, %109 ], [ %108, %104 ], [ %103, %99 ], [ %98, %95 ], [ %94, %92 ], [ 0, %84 ], !dbg !6352
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6353
  %115 = call i8* @memcpy(i8* nonnull %87, i8* %88, i64 %114) #6, !dbg !6354
  %116 = load i8*, i8** %8, align 8, !dbg !6355, !tbaa !6254
  %117 = getelementptr inbounds i8, i8* %116, i64 -1, !dbg !6358
  %118 = load i8, i8* %117, align 1, !dbg !6358, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6360
  %119 = trunc i8 %118 to i3, !dbg !6360
  switch i3 %119, label %141 [
    i3 0, label %120
    i3 1, label %123
    i3 2, label %127
    i3 3, label %132
    i3 -4, label %137
  ], !dbg !6360

; <label>:120:                                    ; preds = %113
  %121 = lshr i8 %118, 3, !dbg !6361
  %122 = zext i8 %121 to i64, !dbg !6361
  br label %141, !dbg !6362

; <label>:123:                                    ; preds = %113
  %124 = getelementptr inbounds i8, i8* %116, i64 -3, !dbg !6363
  %125 = load i8, i8* %124, align 1, !dbg !6364, !tbaa !745
  %126 = zext i8 %125 to i64, !dbg !6363
  br label %141, !dbg !6365

; <label>:127:                                    ; preds = %113
  %128 = getelementptr inbounds i8, i8* %116, i64 -5, !dbg !6366
  %129 = bitcast i8* %128 to i16*, !dbg !6367
  %130 = load i16, i16* %129, align 1, !dbg !6367, !tbaa !1503
  %131 = zext i16 %130 to i64, !dbg !6366
  br label %141, !dbg !6368

; <label>:132:                                    ; preds = %113
  %133 = getelementptr inbounds i8, i8* %116, i64 -9, !dbg !6369
  %134 = bitcast i8* %133 to i32*, !dbg !6370
  %135 = load i32, i32* %134, align 1, !dbg !6370, !tbaa !708
  %136 = zext i32 %135 to i64, !dbg !6369
  br label %141, !dbg !6371

; <label>:137:                                    ; preds = %113
  %138 = getelementptr inbounds i8, i8* %116, i64 -17, !dbg !6372
  %139 = bitcast i8* %138 to i64*, !dbg !6373
  %140 = load i64, i64* %139, align 1, !dbg !6373, !tbaa !1510
  br label %141, !dbg !6374

; <label>:141:                                    ; preds = %113, %120, %123, %127, %132, %137
  %142 = phi i64 [ %140, %137 ], [ %136, %132 ], [ %131, %127 ], [ %126, %123 ], [ %122, %120 ], [ 0, %113 ], !dbg !6375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6376
  %143 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %86, i64 0, i32 18, i32 0, i32 0, i32 1, i64 %142, !dbg !6377
  %144 = load i8*, i8** %37, align 8, !dbg !6378, !tbaa !6254
  %145 = getelementptr inbounds i8, i8* %144, i64 -1, !dbg !6381
  %146 = load i8, i8* %145, align 1, !dbg !6381, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6383
  %147 = trunc i8 %146 to i3, !dbg !6383
  switch i3 %147, label %169 [
    i3 0, label %148
    i3 1, label %151
    i3 2, label %155
    i3 3, label %160
    i3 -4, label %165
  ], !dbg !6383

; <label>:148:                                    ; preds = %141
  %149 = lshr i8 %146, 3, !dbg !6384
  %150 = zext i8 %149 to i64, !dbg !6384
  br label %169, !dbg !6385

; <label>:151:                                    ; preds = %141
  %152 = getelementptr inbounds i8, i8* %144, i64 -3, !dbg !6386
  %153 = load i8, i8* %152, align 1, !dbg !6387, !tbaa !745
  %154 = zext i8 %153 to i64, !dbg !6386
  br label %169, !dbg !6388

; <label>:155:                                    ; preds = %141
  %156 = getelementptr inbounds i8, i8* %144, i64 -5, !dbg !6389
  %157 = bitcast i8* %156 to i16*, !dbg !6390
  %158 = load i16, i16* %157, align 1, !dbg !6390, !tbaa !1503
  %159 = zext i16 %158 to i64, !dbg !6389
  br label %169, !dbg !6391

; <label>:160:                                    ; preds = %141
  %161 = getelementptr inbounds i8, i8* %144, i64 -9, !dbg !6392
  %162 = bitcast i8* %161 to i32*, !dbg !6393
  %163 = load i32, i32* %162, align 1, !dbg !6393, !tbaa !708
  %164 = zext i32 %163 to i64, !dbg !6392
  br label %169, !dbg !6394

; <label>:165:                                    ; preds = %141
  %166 = getelementptr inbounds i8, i8* %144, i64 -17, !dbg !6395
  %167 = bitcast i8* %166 to i64*, !dbg !6396
  %168 = load i64, i64* %167, align 1, !dbg !6396, !tbaa !1510
  br label %169, !dbg !6397

; <label>:169:                                    ; preds = %141, %148, %151, %155, %160, %165
  %170 = phi i64 [ %168, %165 ], [ %164, %160 ], [ %159, %155 ], [ %154, %151 ], [ %150, %148 ], [ 0, %141 ], !dbg !6398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6399
  %171 = call i8* @memcpy(i8* nonnull %143, i8* %144, i64 %170) #6, !dbg !6400
  %172 = icmp eq %struct.clusterLink* %0, null, !dbg !6401
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6403
  br i1 %172, label %174, label %173, !dbg !6403

; <label>:173:                                    ; preds = %169
  call void @clusterSendMessage(%struct.clusterLink* nonnull %0, i8* %85, i64 %78) #10, !dbg !6404
  br label %175, !dbg !6404

; <label>:174:                                    ; preds = %169
  call void @clusterBroadcastMessage(i8* %85, i64 %78) #10, !dbg !6405
  br label %175

; <label>:175:                                    ; preds = %174, %173
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @decrRefCount(%struct.redisObject* nonnull %6) #6, !dbg !6406
  call void @decrRefCount(%struct.redisObject* nonnull %7) #6, !dbg !6407
  %176 = icmp eq i8* %85, %5, !dbg !6408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6410
  br i1 %176, label %178, label %177, !dbg !6410

; <label>:177:                                    ; preds = %175
  call void @zfree(i8* %85) #6, !dbg !6411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6411
  br label %178, !dbg !6411

; <label>:178:                                    ; preds = %175, %177
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %5) #7, !dbg !6412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6412
  ret void, !dbg !6412
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @getDecodedObject(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendModule(%struct.clusterLink*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #0 !dbg !6413 {
  %6 = alloca %struct.clusterMsg, align 16
  %7 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 0, i64 0, !dbg !6431
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %7) #7, !dbg !6431
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %6, i32 9) #10, !dbg !6434
  %8 = zext i32 %4 to i64, !dbg !6436
  %9 = add i32 %4, 2269, !dbg !6437
  %10 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 18, i32 0, i32 0, i32 0, !dbg !6438
  store i64 %1, i64* %10, align 16, !dbg !6439, !tbaa !745
  %11 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 18, i32 0, i32 0, i32 1, i64 4, !dbg !6440
  store i8 %2, i8* %11, align 4, !dbg !6441, !tbaa !745
  %12 = call i32 @lwip_htonl(i32 %4) #6, !dbg !6442
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 18, i32 0, i32 0, i32 1, !dbg !6443
  %14 = bitcast [40 x i8]* %13 to i32*, !dbg !6443
  store i32 %12, i32* %14, align 8, !dbg !6444, !tbaa !745
  %15 = call i32 @lwip_htonl(i32 %9) #6, !dbg !6445
  %16 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %6, i64 0, i32 1, !dbg !6446
  store i32 %15, i32* %16, align 4, !dbg !6447, !tbaa !2758
  %17 = zext i32 %9 to i64, !dbg !6448
  %18 = icmp ult i32 %9, 4352, !dbg !6450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6451
  br i1 %18, label %23, label %19, !dbg !6451

; <label>:19:                                     ; preds = %5
  %20 = call i8* @zmalloc(i64 %17) #6, !dbg !6452
  %21 = call i8* @memcpy(i8* %20, i8* nonnull %7, i64 4352) #6, !dbg !6455
  %22 = bitcast i8* %20 to %struct.clusterMsg*, !dbg !6456
  br label %23

; <label>:23:                                     ; preds = %5, %19
  %24 = phi i8* [ %20, %19 ], [ %7, %5 ], !dbg !6457
  %25 = phi %struct.clusterMsg* [ %22, %19 ], [ %6, %5 ], !dbg !6457
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %26 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %25, i64 0, i32 18, i32 0, i32 0, i32 1, i64 5, !dbg !6458
  %27 = call i8* @memcpy(i8* nonnull %26, i8* %3, i64 %8) #6, !dbg !6459
  %28 = icmp eq %struct.clusterLink* %0, null, !dbg !6460
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6462
  br i1 %28, label %30, label %29, !dbg !6462

; <label>:29:                                     ; preds = %23
  call void @clusterSendMessage(%struct.clusterLink* nonnull %0, i8* %24, i64 %17) #10, !dbg !6463
  br label %31, !dbg !6463

; <label>:30:                                     ; preds = %23
  call void @clusterBroadcastMessage(i8* %24, i64 %17) #10, !dbg !6464
  br label %31

; <label>:31:                                     ; preds = %30, %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %32 = icmp eq i8* %24, %7, !dbg !6465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6467
  br i1 %32, label %34, label %33, !dbg !6467

; <label>:33:                                     ; preds = %31
  call void @zfree(i8* %24) #6, !dbg !6468
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6468
  br label %34, !dbg !6468

; <label>:34:                                     ; preds = %31, %33
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %7) #7, !dbg !6469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6469
  ret void, !dbg !6469
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterSendModuleMessageToTarget(i8*, i64, i8 zeroext, i8*, i32) local_unnamed_addr #0 !dbg !6470 {
  %6 = icmp eq i8* %0, null, !dbg !6486
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6488
  br i1 %6, label %25, label %7, !dbg !6488

; <label>:7:                                      ; preds = %5
  %8 = tail call i8* @sdsnewlen(i8* nonnull %0, i64 40) #6, !dbg !6492
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6494, !tbaa !788
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 4, !dbg !6495
  %11 = load %struct.dict*, %struct.dict** %10, align 8, !dbg !6495, !tbaa !837
  %12 = tail call %struct.dictEntry* @dictFind(%struct.dict* %11, i8* %8) #6, !dbg !6496
  tail call void @sdsfree(i8* %8) #6, !dbg !6498
  %13 = icmp eq %struct.dictEntry* %12, null, !dbg !6499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6500
  br i1 %13, label %14, label %15, !dbg !6500

; <label>:14:                                     ; preds = %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6501
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6503
  br label %27, !dbg !6503

; <label>:15:                                     ; preds = %7
  %16 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %12, i64 0, i32 1, i32 0, !dbg !6505
  %17 = bitcast i8** %16 to %struct.clusterNode**, !dbg !6505
  %18 = load %struct.clusterNode*, %struct.clusterNode** %17, align 8, !dbg !6505, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6502
  %19 = icmp eq %struct.clusterNode* %18, null, !dbg !6507
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6503
  br i1 %19, label %27, label %20, !dbg !6503

; <label>:20:                                     ; preds = %15
  %21 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 19, !dbg !6508
  %22 = load %struct.clusterLink*, %struct.clusterLink** %21, align 8, !dbg !6508, !tbaa !1178
  %23 = icmp eq %struct.clusterLink* %22, null, !dbg !6509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6510
  br i1 %23, label %27, label %24, !dbg !6510

; <label>:24:                                     ; preds = %20
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6511
  br label %25, !dbg !6511

; <label>:25:                                     ; preds = %5, %24
  %26 = phi %struct.clusterLink* [ %22, %24 ], [ null, %5 ], !dbg !6511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6511
  tail call void @clusterSendModule(%struct.clusterLink* %26, i64 %1, i8 zeroext %2, i8* %3, i32 %4) #10, !dbg !6512
  br label %27, !dbg !6513

; <label>:27:                                     ; preds = %15, %20, %14, %25
  %28 = phi i32 [ 0, %25 ], [ -1, %14 ], [ -1, %20 ], [ -1, %15 ], !dbg !6514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6515
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6516
  ret i32 %28, !dbg !6516
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterPropagatePublish(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #0 !dbg !6517 {
  tail call void @clusterSendPublish(%struct.clusterLink* null, %struct.redisObject* %0, %struct.redisObject* %1) #10, !dbg !6525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6526
  ret void, !dbg !6526
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterRequestFailoverAuth() local_unnamed_addr #0 !dbg !6527 {
  %1 = alloca %struct.clusterMsg, align 16
  %2 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 0, i64 0, !dbg !6532
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %2) #7, !dbg !6532
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %1, i32 5) #10, !dbg !6535
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6536, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 17, !dbg !6538
  %5 = load i64, i64* %4, align 8, !dbg !6538, !tbaa !1987
  %6 = icmp eq i64 %5, 0, !dbg !6539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6540
  br i1 %6, label %11, label %7, !dbg !6540

; <label>:7:                                      ; preds = %0
  %8 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 17, i64 0, !dbg !6541
  %9 = load i8, i8* %8, align 1, !dbg !6542, !tbaa !745
  %10 = or i8 %9, 2, !dbg !6542
  store i8 %10, i8* %8, align 1, !dbg !6542, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6541
  br label %11, !dbg !6541

; <label>:11:                                     ; preds = %0, %7
  %12 = call i32 @lwip_htonl(i32 2256) #6, !dbg !6544
  %13 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 1, !dbg !6545
  store i32 %12, i32* %13, align 4, !dbg !6546, !tbaa !2758
  call void @clusterBroadcastMessage(i8* nonnull %2, i64 2256) #10, !dbg !6547
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %2) #7, !dbg !6548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6548
  ret void, !dbg !6548
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendFailoverAuth(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !5802 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !6550
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %3) #7, !dbg !6550
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !6552
  %5 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6552, !tbaa !1178
  %6 = icmp eq %struct.clusterLink* %5, null, !dbg !6553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6554
  br i1 %6, label %11, label %7, !dbg !6554

; <label>:7:                                      ; preds = %1
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 6) #10, !dbg !6556
  %8 = call i32 @lwip_htonl(i32 2256) #6, !dbg !6558
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !6559
  store i32 %8, i32* %9, align 4, !dbg !6560, !tbaa !2758
  %10 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6561, !tbaa !1178
  call void @clusterSendMessage(%struct.clusterLink* %10, i8* nonnull %3, i64 2256) #10, !dbg !6562
  br label %11, !dbg !6563

; <label>:11:                                     ; preds = %1, %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6564
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %3) #7, !dbg !6563
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6563
  ret void, !dbg !6563
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterSendMFStart(%struct.clusterNode* nocapture readonly) local_unnamed_addr #0 !dbg !6565 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !6572
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %3) #7, !dbg !6572
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !6574
  %5 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6574, !tbaa !1178
  %6 = icmp eq %struct.clusterLink* %5, null, !dbg !6576
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6577
  br i1 %6, label %11, label %7, !dbg !6577

; <label>:7:                                      ; preds = %1
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 8) #10, !dbg !6579
  %8 = call i32 @lwip_htonl(i32 2256) #6, !dbg !6581
  %9 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !6582
  store i32 %8, i32* %9, align 4, !dbg !6583, !tbaa !2758
  %10 = load %struct.clusterLink*, %struct.clusterLink** %4, align 8, !dbg !6584, !tbaa !1178
  call void @clusterSendMessage(%struct.clusterLink* %10, i8* nonnull %3, i64 2256) #10, !dbg !6585
  br label %11, !dbg !6586

; <label>:11:                                     ; preds = %1, %7
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6587
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %3) #7, !dbg !6586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6586
  ret void, !dbg !6586
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterGetSlaveRank() local_unnamed_addr #0 !dbg !6588 {
  %1 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6595, !tbaa !760
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 2, !dbg !6595
  %3 = load i32, i32* %2, align 8, !dbg !6595, !tbaa !927
  %4 = and i32 %3, 2, !dbg !6595
  %5 = icmp eq i32 %4, 0, !dbg !6595
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6595
  br i1 %5, label %6, label %7, !dbg !6595

; <label>:6:                                      ; preds = %0
  tail call void @_serverAssert(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 2827) #6, !dbg !6595
  tail call void @_exit(i32 1) #8, !dbg !6595
  unreachable

; <label>:7:                                      ; preds = %0
  %8 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 8, !dbg !6596
  %9 = load %struct.clusterNode*, %struct.clusterNode** %8, align 8, !dbg !6596, !tbaa !1025
  %10 = icmp eq %struct.clusterNode* %9, null, !dbg !6598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6600
  br i1 %10, label %42, label %11, !dbg !6600

; <label>:11:                                     ; preds = %7
  %12 = tail call i64 @replicationGetSlaveOffset() #6, !dbg !6601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6604
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %9, i64 0, i32 6, !dbg !6606
  %14 = load i32, i32* %13, align 4, !dbg !6606, !tbaa !1041
  %15 = icmp sgt i32 %14, 0, !dbg !6608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6609
  br i1 %15, label %16, label %42, !dbg !6609

; <label>:16:                                     ; preds = %11
  %17 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %9, i64 0, i32 7
  %18 = load %struct.clusterNode**, %struct.clusterNode*** %17, align 8, !tbaa !1044
  %19 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8
  %20 = sext i32 %14 to i64
  br label %21, !dbg !6609

; <label>:21:                                     ; preds = %16, %38
  %22 = phi i64 [ 0, %16 ], [ %40, %38 ]
  %23 = phi i32 [ 0, %16 ], [ %39, %38 ]
  %24 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %18, i64 %22, !dbg !6610
  %25 = load %struct.clusterNode*, %struct.clusterNode** %24, align 8, !dbg !6610, !tbaa !760
  %26 = icmp eq %struct.clusterNode* %25, %19, !dbg !6612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6613
  br i1 %26, label %38, label %27, !dbg !6613

; <label>:27:                                     ; preds = %21
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %25, i64 0, i32 2, !dbg !6614
  %29 = load i32, i32* %28, align 8, !dbg !6614, !tbaa !927
  %30 = and i32 %29, 512, !dbg !6614
  %31 = icmp eq i32 %30, 0, !dbg !6614
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6615
  br i1 %31, label %32, label %38, !dbg !6615

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %25, i64 0, i32 15, !dbg !6616
  %34 = load i64, i64* %33, align 8, !dbg !6616, !tbaa !1200
  %35 = icmp sgt i64 %34, %12, !dbg !6617
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6618
  br i1 %35, label %36, label %38, !dbg !6618

; <label>:36:                                     ; preds = %32
  %37 = add nsw i32 %23, 1, !dbg !6619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6620
  br label %38, !dbg !6620

; <label>:38:                                     ; preds = %27, %21, %32, %36
  %39 = phi i32 [ %23, %27 ], [ %37, %36 ], [ %23, %32 ], [ %23, %21 ], !dbg !6621
  %40 = add nuw nsw i64 %22, 1, !dbg !6622
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6623
  %41 = icmp slt i64 %40, %20, !dbg !6608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6609
  br i1 %41, label %21, label %42, !dbg !6609, !llvm.loop !6624

; <label>:42:                                     ; preds = %38, %11, %7
  %43 = phi i32 [ 0, %7 ], [ 0, %11 ], [ %39, %38 ], !dbg !6621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6626
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6627
  ret i32 %43, !dbg !6627
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterLogCantFailover(i32) local_unnamed_addr #0 !dbg !281 {
  %2 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !6629, !tbaa !2943
  %3 = add nsw i64 %2, 5000, !dbg !6630
  %4 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6632, !tbaa !788
  %5 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %4, i64 0, i32 16, !dbg !6634
  %6 = load i32, i32* %5, align 8, !dbg !6634, !tbaa !1799
  %7 = icmp eq i32 %6, %0, !dbg !6635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6636
  br i1 %7, label %8, label %16, !dbg !6636

; <label>:8:                                      ; preds = %1
  %9 = tail call i64 @time(i64* null) #6, !dbg !6637
  %10 = load i64, i64* @clusterLogCantFailover.lastlog_time, align 8, !dbg !6638, !tbaa !1510
  %11 = sub nsw i64 %9, %10, !dbg !6639
  %12 = icmp slt i64 %11, 300, !dbg !6640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6641
  br i1 %12, label %46, label %13, !dbg !6641

; <label>:13:                                     ; preds = %8
  %14 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6642, !tbaa !788
  %15 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %14, i64 0, i32 16, !dbg !6643
  br label %16, !dbg !6641

; <label>:16:                                     ; preds = %13, %1
  %17 = phi i32* [ %15, %13 ], [ %5, %1 ], !dbg !6643
  store i32 %0, i32* %17, align 8, !dbg !6644, !tbaa !1799
  %18 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6645, !tbaa !760
  %19 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %18, i64 0, i32 8, !dbg !6647
  %20 = load %struct.clusterNode*, %struct.clusterNode** %19, align 8, !dbg !6647, !tbaa !1025
  %21 = icmp eq %struct.clusterNode* %20, null, !dbg !6645
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6648
  br i1 %21, label %36, label %22, !dbg !6648

; <label>:22:                                     ; preds = %16
  %23 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %20, i64 0, i32 2, !dbg !6649
  %24 = load i32, i32* %23, align 8, !dbg !6649, !tbaa !927
  %25 = and i32 %24, 8, !dbg !6649
  %26 = icmp eq i32 %25, 0, !dbg !6649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6650
  br i1 %26, label %36, label %27, !dbg !6650

; <label>:27:                                     ; preds = %22
  %28 = tail call i64 @mstime() #6, !dbg !6651
  %29 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6652, !tbaa !760
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %29, i64 0, i32 8, !dbg !6653
  %31 = load %struct.clusterNode*, %struct.clusterNode** %30, align 8, !dbg !6653, !tbaa !1025
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %31, i64 0, i32 11, !dbg !6654
  %33 = load i64, i64* %32, align 8, !dbg !6654, !tbaa !954
  %34 = sub nsw i64 %28, %33, !dbg !6655
  %35 = icmp slt i64 %34, %3, !dbg !6656
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6657
  br i1 %35, label %46, label %36, !dbg !6657

; <label>:36:                                     ; preds = %22, %16, %27
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6658
  %37 = add i32 %0, -1, !dbg !6658
  %38 = icmp ult i32 %37, 4, !dbg !6658
  br i1 %38, label %39, label %43, !dbg !6658

; <label>:39:                                     ; preds = %36
  %40 = sext i32 %37 to i64, !dbg !6658
  %41 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.clusterLogCantFailover, i64 0, i64 %40, !dbg !6658
  %42 = load i8*, i8** %41, align 8, !dbg !6658
  br label %43, !dbg !6658

; <label>:43:                                     ; preds = %36, %39
  %44 = phi i8* [ %42, %39 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.85, i64 0, i64 0), %36 ], !dbg !6659
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6659
  %45 = tail call i64 @time(i64* null) #6, !dbg !6662
  store i64 %45, i64* @clusterLogCantFailover.lastlog_time, align 8, !dbg !6663, !tbaa !1510
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0), i8* nonnull %44) #6, !dbg !6664
  br label %46, !dbg !6665

; <label>:46:                                     ; preds = %27, %8, %43
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6666
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6665
  ret void, !dbg !6665
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterFailoverReplaceYourMaster() local_unnamed_addr #0 !dbg !6667 {
  %1 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6671, !tbaa !760
  %2 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 8, !dbg !6672
  %3 = load %struct.clusterNode*, %struct.clusterNode** %2, align 8, !dbg !6672, !tbaa !1025
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 2, !dbg !6674
  %5 = load i32, i32* %4, align 8, !dbg !6674, !tbaa !927
  %6 = and i32 %5, 1, !dbg !6674
  %7 = icmp ne i32 %6, 0, !dbg !6674
  %8 = icmp eq %struct.clusterNode* %3, null, !dbg !6676
  %9 = or i1 %8, %7, !dbg !6677
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6677
  br i1 %9, label %80, label %10, !dbg !6677

; <label>:10:                                     ; preds = %0
  tail call void @clusterSetNodeAsMaster(%struct.clusterNode* %1) #10, !dbg !6678
  tail call void @replicationUnsetMaster() #6, !dbg !6679
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6681
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6683
  br label %11, !dbg !6683

; <label>:11:                                     ; preds = %10, %57
  %12 = phi i64 [ 0, %10 ], [ %58, %57 ]
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 3
  %15 = and i64 %14, 8191
  %16 = and i32 %13, 7, !dbg !6694
  %17 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %3, i64 0, i32 4, i64 %15, !dbg !6696
  %18 = load i8, i8* %17, align 1, !dbg !6696, !tbaa !745
  %19 = zext i8 %18 to i32, !dbg !6696
  %20 = shl i32 1, %16, !dbg !6697
  %21 = and i32 %20, %19, !dbg !6698
  %22 = icmp eq i32 %21, 0, !dbg !6699
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6700
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6702
  br i1 %22, label %57, label %23, !dbg !6702

; <label>:23:                                     ; preds = %11
  %24 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6706, !tbaa !788
  %25 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %24, i64 0, i32 8, i64 %12, !dbg !6707
  %26 = load %struct.clusterNode*, %struct.clusterNode** %25, align 8, !dbg !6707, !tbaa !760
  %27 = icmp eq %struct.clusterNode* %26, null, !dbg !6709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6710
  br i1 %27, label %28, label %30, !dbg !6710

; <label>:28:                                     ; preds = %23
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6712
  %29 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6713, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6717
  br label %51, !dbg !6717

; <label>:30:                                     ; preds = %23
  %31 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 4, i64 %15, !dbg !6726
  %32 = load i8, i8* %31, align 1, !dbg !6726, !tbaa !745
  %33 = zext i8 %32 to i32, !dbg !6726
  %34 = and i32 %20, %33, !dbg !6727
  %35 = icmp eq i32 %34, 0, !dbg !6728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6729
  %36 = trunc i32 %20 to i8, !dbg !6735
  %37 = xor i8 %36, -1, !dbg !6735
  %38 = and i8 %32, %37, !dbg !6735
  store i8 %38, i8* %31, align 1, !dbg !6735, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6736
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6737
  br i1 %35, label %39, label %40, !dbg !6737

; <label>:39:                                     ; preds = %30
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6739
  tail call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !6739
  tail call void @_exit(i32 1) #8, !dbg !6739
  unreachable

; <label>:40:                                     ; preds = %30
  %41 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %26, i64 0, i32 5, !dbg !6740
  %42 = load i32, i32* %41, align 8, !dbg !6741, !tbaa !1164
  %43 = add nsw i32 %42, -1, !dbg !6741
  store i32 %43, i32* %41, align 8, !dbg !6741, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6742
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6739
  %44 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6743, !tbaa !788
  %45 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %44, i64 0, i32 8, i64 %12, !dbg !6744
  store %struct.clusterNode* null, %struct.clusterNode** %45, align 8, !dbg !6745, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6746
  %46 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6747, !tbaa !788
  %47 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %46, i64 0, i32 8, i64 %12
  %48 = load %struct.clusterNode*, %struct.clusterNode** %47, align 8, !dbg !6748, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6712
  %49 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6713, !tbaa !760
  %50 = icmp eq %struct.clusterNode* %48, null, !dbg !6748
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6717
  br i1 %50, label %51, label %56, !dbg !6717

; <label>:51:                                     ; preds = %28, %40
  %52 = phi %struct.clusterNode* [ %29, %28 ], [ %49, %40 ]
  %53 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %52, i32 %13) #6, !dbg !6749
  %54 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6750, !tbaa !788
  %55 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %54, i64 0, i32 8, i64 %12, !dbg !6751
  store %struct.clusterNode* %52, %struct.clusterNode** %55, align 8, !dbg !6752, !tbaa !760
  br label %56, !dbg !6753

; <label>:56:                                     ; preds = %40, %51
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6754
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6756
  br label %57, !dbg !6756

; <label>:57:                                     ; preds = %11, %56
  %58 = add nuw nsw i64 %12, 1, !dbg !6757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6758
  %59 = icmp ult i64 %58, 16384, !dbg !6759
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6683
  br i1 %59, label %11, label %60, !dbg !6683, !llvm.loop !6760

; <label>:60:                                     ; preds = %57
  tail call void @clusterUpdateState() #10, !dbg !6762
  %61 = tail call i32 @clusterSaveConfig(i32 1) #6, !dbg !6765
  %62 = icmp eq i32 %61, -1, !dbg !6766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6767
  br i1 %62, label %63, label %64, !dbg !6767

; <label>:63:                                     ; preds = %60
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !6768
  tail call void @exit(i32 1) #8, !dbg !6769
  unreachable

; <label>:64:                                     ; preds = %60
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6770
  tail call void @clusterBroadcastPong(i32 0) #10, !dbg !6771
  %65 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6772, !tbaa !788
  %66 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %65, i64 0, i32 17, !dbg !6774
  %67 = load i64, i64* %66, align 8, !dbg !6774, !tbaa !1987
  %68 = icmp eq i64 %67, 0, !dbg !6775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6776
  br i1 %68, label %74, label %69, !dbg !6776

; <label>:69:                                     ; preds = %64
  %70 = tail call i32 @clientsArePaused() #6, !dbg !6777
  %71 = icmp eq i32 %70, 0, !dbg !6777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6778
  br i1 %71, label %74, label %72, !dbg !6778

; <label>:72:                                     ; preds = %69
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !6779, !tbaa !2176
  %73 = tail call i32 @clientsArePaused() #6, !dbg !6780
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6781
  br label %74, !dbg !6781

; <label>:74:                                     ; preds = %64, %69, %72
  %75 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6782, !tbaa !788
  %76 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 17, !dbg !6783
  store i64 0, i64* %76, align 8, !dbg !6784, !tbaa !1987
  %77 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 20, !dbg !6785
  store i32 0, i32* %77, align 8, !dbg !6786, !tbaa !1990
  %78 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 18, !dbg !6787
  store %struct.clusterNode* null, %struct.clusterNode** %78, align 8, !dbg !6788, !tbaa !1993
  %79 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %75, i64 0, i32 19, !dbg !6789
  store i64 0, i64* %79, align 8, !dbg !6790, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6791
  br label %80, !dbg !6792

; <label>:80:                                     ; preds = %0, %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6792
  ret void, !dbg !6792
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeGetSlotBit(%struct.clusterNode* nocapture readonly, i32) local_unnamed_addr #0 !dbg !5561 {
  %3 = sdiv i32 %1, 8, !dbg !6799
  %4 = sext i32 %3 to i64, !dbg !6800
  %5 = and i32 %1, 7, !dbg !6802
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %4, !dbg !6804
  %7 = load i8, i8* %6, align 1, !dbg !6804, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !6804
  %9 = shl i32 1, %5, !dbg !6805
  %10 = and i32 %9, %8, !dbg !6806
  %11 = icmp ne i32 %10, 0, !dbg !6807
  %12 = zext i1 %11 to i32, !dbg !6807
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6809
  ret i32 %12, !dbg !6809
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterUpdateState() local_unnamed_addr #0 !dbg !408 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6811, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 22, !dbg !6812
  %3 = load i32, i32* %2, align 8, !dbg !6813, !tbaa !1475
  %4 = and i32 %3, -3, !dbg !6813
  store i32 %4, i32* %2, align 8, !dbg !6813, !tbaa !1475
  %5 = load i64, i64* @clusterUpdateState.first_call_time, align 8, !dbg !6814, !tbaa !1173
  %6 = icmp eq i64 %5, 0, !dbg !6816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6817
  br i1 %6, label %7, label %9, !dbg !6817

; <label>:7:                                      ; preds = %0
  %8 = tail call i64 @mstime() #6, !dbg !6818
  store i64 %8, i64* @clusterUpdateState.first_call_time, align 8, !dbg !6819, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6820
  br label %9, !dbg !6820

; <label>:9:                                      ; preds = %7, %0
  %10 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6821, !tbaa !760
  %11 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %10, i64 0, i32 2, !dbg !6821
  %12 = load i32, i32* %11, align 8, !dbg !6821, !tbaa !927
  %13 = and i32 %12, 1, !dbg !6821
  %14 = icmp eq i32 %13, 0, !dbg !6821
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6823
  br i1 %14, label %25, label %15, !dbg !6823

; <label>:15:                                     ; preds = %9
  %16 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6824, !tbaa !788
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %16, i64 0, i32 2, !dbg !6825
  %18 = load i32, i32* %17, align 8, !dbg !6825, !tbaa !1770
  %19 = icmp eq i32 %18, 1, !dbg !6826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6827
  br i1 %19, label %20, label %25, !dbg !6827

; <label>:20:                                     ; preds = %15
  %21 = tail call i64 @mstime() #6, !dbg !6828
  %22 = load i64, i64* @clusterUpdateState.first_call_time, align 8, !dbg !6829, !tbaa !1173
  %23 = sub nsw i64 %21, %22, !dbg !6830
  %24 = icmp slt i64 %23, 2000, !dbg !6831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6832
  br i1 %24, label %123, label %25, !dbg !6832

; <label>:25:                                     ; preds = %9, %20, %15
  %26 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 264), align 8, !dbg !6834, !tbaa !6836
  %27 = icmp eq i32 %26, 0, !dbg !6837
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6838
  br i1 %27, label %28, label %30, !dbg !6838

; <label>:28:                                     ; preds = %25
  %29 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6839, !tbaa !788
  br label %48, !dbg !6838

; <label>:30:                                     ; preds = %25
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6841
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6844
  %31 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !tbaa !788
  br label %32, !dbg !6844

; <label>:32:                                     ; preds = %129, %30
  %33 = phi i64 [ 0, %30 ], [ %130, %129 ]
  %34 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %31, i64 0, i32 8, i64 %33, !dbg !6845
  %35 = load %struct.clusterNode*, %struct.clusterNode** %34, align 8, !dbg !6845, !tbaa !760
  %36 = icmp eq %struct.clusterNode* %35, null, !dbg !6849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6850
  br i1 %36, label %42, label %37, !dbg !6850

; <label>:37:                                     ; preds = %32
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %35, i64 0, i32 2, !dbg !6851
  %39 = load i32, i32* %38, align 8, !dbg !6851, !tbaa !927
  %40 = and i32 %39, 8, !dbg !6852
  %41 = icmp eq i32 %40, 0, !dbg !6852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6853
  br i1 %41, label %43, label %42, !dbg !6853

; <label>:42:                                     ; preds = %124, %43, %37, %32
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6854
  br label %48, !dbg !6854

; <label>:43:                                     ; preds = %37
  %44 = or i64 %33, 1, !dbg !6856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6857
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6844
  %45 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %31, i64 0, i32 8, i64 %44, !dbg !6845
  %46 = load %struct.clusterNode*, %struct.clusterNode** %45, align 8, !dbg !6845, !tbaa !760
  %47 = icmp eq %struct.clusterNode* %46, null, !dbg !6849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6850
  br i1 %47, label %42, label %124, !dbg !6850

; <label>:48:                                     ; preds = %129, %28, %42
  %49 = phi %struct.clusterState* [ %31, %42 ], [ %29, %28 ], [ %31, %129 ], !dbg !6839
  %50 = phi i32 [ 1, %42 ], [ 0, %28 ], [ 0, %129 ], !dbg !6858
  %51 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %49, i64 0, i32 3, !dbg !6859
  store i32 0, i32* %51, align 4, !dbg !6860, !tbaa !1773
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %49, i64 0, i32 4, !dbg !6861
  %53 = load %struct.dict*, %struct.dict** %52, align 8, !dbg !6861, !tbaa !837
  %54 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %53) #6, !dbg !6862
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6864
  %55 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %54) #6, !dbg !6865
  %56 = icmp eq %struct.dictEntry* %55, null, !dbg !6867
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6864
  br i1 %56, label %84, label %57, !dbg !6864

; <label>:57:                                     ; preds = %48, %80
  %58 = phi %struct.dictEntry* [ %82, %80 ], [ %55, %48 ]
  %59 = phi i32 [ %81, %80 ], [ 0, %48 ]
  %60 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %58, i64 0, i32 1, i32 0, !dbg !6868
  %61 = bitcast i8** %60 to %struct.clusterNode**, !dbg !6868
  %62 = load %struct.clusterNode*, %struct.clusterNode** %61, align 8, !dbg !6868, !tbaa !745
  %63 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %62, i64 0, i32 2, !dbg !6870
  %64 = load i32, i32* %63, align 8, !dbg !6870, !tbaa !927
  %65 = and i32 %64, 1, !dbg !6870
  %66 = icmp eq i32 %65, 0, !dbg !6870
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6872
  br i1 %66, label %80, label %67, !dbg !6872

; <label>:67:                                     ; preds = %57
  %68 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %62, i64 0, i32 5, !dbg !6873
  %69 = load i32, i32* %68, align 8, !dbg !6873, !tbaa !1164
  %70 = icmp eq i32 %69, 0, !dbg !6874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6875
  br i1 %70, label %80, label %71, !dbg !6875

; <label>:71:                                     ; preds = %67
  %72 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6876, !tbaa !788
  %73 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %72, i64 0, i32 3, !dbg !6878
  %74 = load i32, i32* %73, align 4, !dbg !6879, !tbaa !1773
  %75 = add nsw i32 %74, 1, !dbg !6879
  store i32 %75, i32* %73, align 4, !dbg !6879, !tbaa !1773
  %76 = and i32 %64, 12, !dbg !6880
  %77 = icmp eq i32 %76, 0, !dbg !6882
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6883
  br i1 %77, label %78, label %80, !dbg !6883

; <label>:78:                                     ; preds = %71
  %79 = add nsw i32 %59, 1, !dbg !6884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6885
  br label %80, !dbg !6885

; <label>:80:                                     ; preds = %67, %57, %71, %78
  %81 = phi i32 [ %79, %78 ], [ %59, %71 ], [ %59, %67 ], [ %59, %57 ], !dbg !6858
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6864
  %82 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %54) #6, !dbg !6865
  %83 = icmp eq %struct.dictEntry* %82, null, !dbg !6867
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6864
  br i1 %83, label %84, label %57, !dbg !6864, !llvm.loop !6886

; <label>:84:                                     ; preds = %80, %48
  %85 = phi i32 [ 0, %48 ], [ %81, %80 ], !dbg !6888
  tail call void @dictReleaseIterator(%struct.dictIterator* %54) #6, !dbg !6889
  %86 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6890, !tbaa !788
  %87 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %86, i64 0, i32 3, !dbg !6891
  %88 = load i32, i32* %87, align 4, !dbg !6891, !tbaa !1773
  %89 = sdiv i32 %88, 2, !dbg !6892
  %90 = icmp sgt i32 %85, %89, !dbg !6894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6896
  br i1 %90, label %94, label %91, !dbg !6896

; <label>:91:                                     ; preds = %84
  %92 = tail call i64 @mstime() #6, !dbg !6897
  store i64 %92, i64* @clusterUpdateState.among_minority_time, align 8, !dbg !6899, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6900
  %93 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6901, !tbaa !788
  br label %94, !dbg !6900

; <label>:94:                                     ; preds = %84, %91
  %95 = phi %struct.clusterState* [ %93, %91 ], [ %86, %84 ], !dbg !6901
  %96 = phi i32 [ 1, %91 ], [ %50, %84 ], !dbg !6902
  %97 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %95, i64 0, i32 2, !dbg !6903
  %98 = load i32, i32* %97, align 8, !dbg !6903, !tbaa !1770
  %99 = icmp eq i32 %96, %98, !dbg !6904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6905
  br i1 %99, label %123, label %100, !dbg !6905

; <label>:100:                                    ; preds = %94
  %101 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !6906, !tbaa !2943
  %102 = icmp slt i64 %101, 5000, !dbg !6908
  %103 = select i1 %102, i64 %101, i64 5000, !dbg !6908
  %104 = icmp sgt i64 %103, 500, !dbg !6909
  %105 = select i1 %104, i64 %103, i64 500, !dbg !6909
  %106 = icmp eq i32 %96, 0, !dbg !6910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6912
  br i1 %106, label %107, label %119, !dbg !6912

; <label>:107:                                    ; preds = %100
  %108 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6913, !tbaa !760
  %109 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %108, i64 0, i32 2, !dbg !6913
  %110 = load i32, i32* %109, align 8, !dbg !6913, !tbaa !927
  %111 = and i32 %110, 1, !dbg !6913
  %112 = icmp eq i32 %111, 0, !dbg !6913
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6914
  br i1 %112, label %119, label %113, !dbg !6914

; <label>:113:                                    ; preds = %107
  %114 = tail call i64 @mstime() #6, !dbg !6915
  %115 = load i64, i64* @clusterUpdateState.among_minority_time, align 8, !dbg !6916, !tbaa !1173
  %116 = sub nsw i64 %114, %115, !dbg !6917
  %117 = icmp slt i64 %116, %105, !dbg !6918
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6919
  br i1 %117, label %118, label %119, !dbg !6919

; <label>:118:                                    ; preds = %113
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6920
  br label %123

; <label>:119:                                    ; preds = %107, %113, %100
  %120 = select i1 %106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), !dbg !6922
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.100, i64 0, i64 0), i8* %120) #6, !dbg !6923
  %121 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6924, !tbaa !788
  %122 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %121, i64 0, i32 2, !dbg !6925
  store i32 %96, i32* %122, align 8, !dbg !6926, !tbaa !1770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6927
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %123

; <label>:123:                                    ; preds = %94, %119, %20, %118
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6928
  ret void, !dbg !6928

; <label>:124:                                    ; preds = %43
  %125 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %46, i64 0, i32 2, !dbg !6851
  %126 = load i32, i32* %125, align 8, !dbg !6851, !tbaa !927
  %127 = and i32 %126, 8, !dbg !6852
  %128 = icmp eq i32 %127, 0, !dbg !6852
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6853
  br i1 %128, label %129, label %42, !dbg !6853

; <label>:129:                                    ; preds = %124
  %130 = add nuw nsw i64 %33, 2, !dbg !6856
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6857
  %131 = icmp ult i64 %130, 16384, !dbg !6929
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6844
  br i1 %131, label %32, label %48, !dbg !6844, !llvm.loop !6930
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleSlaveFailover() local_unnamed_addr #0 !dbg !6932 {
  %1 = alloca %struct.clusterMsg, align 16
  %2 = tail call i64 @mstime() #6, !dbg !6946
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !6947, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 11, !dbg !6948
  %5 = load i64, i64* %4, align 8, !dbg !6948, !tbaa !1787
  %6 = sub nsw i64 %2, %5, !dbg !6949
  %7 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 3, !dbg !6951
  %8 = load i32, i32* %7, align 4, !dbg !6951, !tbaa !1773
  %9 = sdiv i32 %8, 2, !dbg !6952
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 17, !dbg !6954
  %11 = load i64, i64* %10, align 8, !dbg !6954, !tbaa !1987
  %12 = icmp eq i64 %11, 0, !dbg !6955
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6956
  br i1 %12, label %17, label %13, !dbg !6956

; <label>:13:                                     ; preds = %0
  %14 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 20, !dbg !6957
  %15 = load i32, i32* %14, align 8, !dbg !6957, !tbaa !1990
  %16 = icmp ne i32 %15, 0, !dbg !6956
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %17

; <label>:17:                                     ; preds = %0, %13
  %18 = phi i1 [ false, %0 ], [ %16, %13 ], !dbg !6958
  %19 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 22, !dbg !6959
  %20 = load i32, i32* %19, align 8, !dbg !6960, !tbaa !1475
  %21 = and i32 %20, -2, !dbg !6960
  store i32 %21, i32* %19, align 8, !dbg !6960, !tbaa !1475
  %22 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !6961, !tbaa !2943
  %23 = shl nsw i64 %22, 1, !dbg !6962
  %24 = icmp sgt i64 %23, 2000, !dbg !6964
  %25 = select i1 %24, i64 %23, i64 2000, !dbg !6964
  %26 = shl nuw nsw i64 %25, 1, !dbg !6965
  %27 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !6967, !tbaa !760
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %27, i64 0, i32 2, !dbg !6967
  %29 = load i32, i32* %28, align 8, !dbg !6967, !tbaa !927
  %30 = and i32 %29, 1, !dbg !6967
  %31 = icmp eq i32 %30, 0, !dbg !6967
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6969
  br i1 %31, label %32, label %50, !dbg !6969

; <label>:32:                                     ; preds = %17
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %27, i64 0, i32 8, !dbg !6970
  %34 = load %struct.clusterNode*, %struct.clusterNode** %33, align 8, !dbg !6970, !tbaa !1025
  %35 = icmp eq %struct.clusterNode* %34, null, !dbg !6971
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6972
  br i1 %35, label %50, label %36, !dbg !6972

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %34, i64 0, i32 2, !dbg !6973
  %38 = load i32, i32* %37, align 8, !dbg !6973, !tbaa !927
  %39 = and i32 %38, 8, !dbg !6973
  %40 = icmp ne i32 %39, 0, !dbg !6973
  %41 = or i1 %18, %40, !dbg !6974
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6974
  br i1 %41, label %42, label %50, !dbg !6974

; <label>:42:                                     ; preds = %36
  %43 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !6975, !tbaa !1728
  %44 = icmp eq i32 %43, 0, !dbg !6976
  %45 = or i1 %18, %44, !dbg !6977
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6977
  br i1 %45, label %46, label %50, !dbg !6977

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %34, i64 0, i32 5, !dbg !6978
  %48 = load i32, i32* %47, align 8, !dbg !6978, !tbaa !1164
  %49 = icmp eq i32 %48, 0, !dbg !6979
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6980
  br i1 %49, label %50, label %52, !dbg !6980

; <label>:50:                                     ; preds = %17, %42, %36, %46, %32
  %51 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 16, !dbg !6981
  store i32 0, i32* %51, align 8, !dbg !6983, !tbaa !1799
  br label %189, !dbg !6984

; <label>:52:                                     ; preds = %46
  %53 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 202), align 4, !dbg !6985, !tbaa !6987
  %54 = icmp eq i32 %53, 15, !dbg !6988
  %55 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !6989, !tbaa !3248
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6991
  %56 = load %struct.client*, %struct.client** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 199), align 8, !dbg !6992
  %57 = getelementptr inbounds %struct.client, %struct.client* %56, i64 0, i32 19, !dbg !6994
  %58 = select i1 %54, i64* %57, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 213), !dbg !6991
  %59 = load i64, i64* %58, align 8, !dbg !6995, !tbaa !1510
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %60 = sub nsw i64 %55, %59, !dbg !6989
  %61 = mul nsw i64 %60, 1000, !dbg !6989
  %62 = icmp sgt i64 %61, %22, !dbg !6997
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !6999
  br i1 %62, label %63, label %65, !dbg !6999

; <label>:63:                                     ; preds = %52
  %64 = sub nsw i64 %61, %22, !dbg !7000
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7001
  br label %65, !dbg !7001

; <label>:65:                                     ; preds = %63, %52
  %66 = phi i64 [ %64, %63 ], [ %61, %52 ], !dbg !6995
  %67 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 263), align 4, !dbg !7002, !tbaa !7004
  %68 = icmp eq i32 %67, 0, !dbg !7005
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7006
  br i1 %68, label %79, label %69, !dbg !7006

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 182), align 4, !dbg !7007, !tbaa !7008
  %71 = sext i32 %70 to i64, !dbg !7009
  %72 = mul nsw i64 %71, 1000, !dbg !7010
  %73 = sext i32 %67 to i64, !dbg !7011
  %74 = mul nsw i64 %22, %73, !dbg !7012
  %75 = add nsw i64 %72, %74, !dbg !7013
  %76 = icmp sle i64 %66, %75, !dbg !7014
  %77 = or i1 %18, %76, !dbg !7015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7015
  br i1 %77, label %79, label %78, !dbg !7015

; <label>:78:                                     ; preds = %69
  tail call void @clusterLogCantFailover(i32 1) #10, !dbg !7016
  br label %189, !dbg !7020

; <label>:79:                                     ; preds = %65, %69
  %80 = icmp sgt i64 %6, %26, !dbg !7021
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7023
  br i1 %80, label %81, label %118, !dbg !7023

; <label>:81:                                     ; preds = %79
  %82 = tail call i64 @mstime() #6, !dbg !7024
  %83 = add nsw i64 %82, 500, !dbg !7026
  %84 = tail call i64 @random() #6, !dbg !7027
  %85 = srem i64 %84, 500, !dbg !7028
  %86 = add nsw i64 %83, %85, !dbg !7029
  %87 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7030, !tbaa !788
  %88 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %87, i64 0, i32 11, !dbg !7031
  store i64 %86, i64* %88, align 8, !dbg !7032, !tbaa !1787
  %89 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %87, i64 0, i32 12, !dbg !7033
  store i32 0, i32* %89, align 8, !dbg !7034, !tbaa !1790
  %90 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %87, i64 0, i32 13, !dbg !7035
  store i32 0, i32* %90, align 4, !dbg !7036, !tbaa !7037
  %91 = tail call i32 @clusterGetSlaveRank() #10, !dbg !7038
  %92 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7039, !tbaa !788
  %93 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %92, i64 0, i32 14, !dbg !7040
  store i32 %91, i32* %93, align 8, !dbg !7041, !tbaa !1793
  %94 = mul nsw i32 %91, 1000, !dbg !7042
  %95 = sext i32 %94 to i64, !dbg !7043
  %96 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %92, i64 0, i32 11, !dbg !7044
  %97 = load i64, i64* %96, align 8, !dbg !7045, !tbaa !1787
  %98 = add nsw i64 %97, %95, !dbg !7045
  store i64 %98, i64* %96, align 8, !dbg !7045, !tbaa !1787
  %99 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %92, i64 0, i32 17, !dbg !7046
  %100 = load i64, i64* %99, align 8, !dbg !7046, !tbaa !1987
  %101 = icmp eq i64 %100, 0, !dbg !7048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7049
  br i1 %101, label %110, label %102, !dbg !7049

; <label>:102:                                    ; preds = %81
  %103 = tail call i64 @mstime() #6, !dbg !7050
  %104 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7052, !tbaa !788
  %105 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %104, i64 0, i32 11, !dbg !7053
  store i64 %103, i64* %105, align 8, !dbg !7054, !tbaa !1787
  %106 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %104, i64 0, i32 14, !dbg !7055
  store i32 0, i32* %106, align 8, !dbg !7056, !tbaa !1793
  %107 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %104, i64 0, i32 22, !dbg !7059
  %108 = load i32, i32* %107, align 8, !dbg !7060, !tbaa !1475
  %109 = or i32 %108, 1, !dbg !7060
  store i32 %109, i32* %107, align 8, !dbg !7060, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7062
  br label %110, !dbg !7062

; <label>:110:                                    ; preds = %81, %102
  %111 = phi i64 [ %98, %81 ], [ %103, %102 ], !dbg !7063
  %112 = tail call i64 @mstime() #6, !dbg !7064
  %113 = sub nsw i64 %111, %112, !dbg !7065
  %114 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7066, !tbaa !788
  %115 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %114, i64 0, i32 14, !dbg !7067
  %116 = load i32, i32* %115, align 8, !dbg !7067, !tbaa !1793
  %117 = tail call i64 @replicationGetSlaveOffset() #6, !dbg !7068
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.87, i64 0, i64 0), i64 %113, i32 %116, i64 %117) #6, !dbg !7069
  tail call void @clusterBroadcastPong(i32 1) #10, !dbg !7070
  br label %189, !dbg !7071

; <label>:118:                                    ; preds = %79
  %119 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 13, !dbg !7072
  %120 = load i32, i32* %119, align 4, !dbg !7072, !tbaa !7037
  %121 = icmp eq i32 %120, 0, !dbg !7073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7074
  br i1 %121, label %122, label %137, !dbg !7074

; <label>:122:                                    ; preds = %118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7075
  br i1 %12, label %123, label %137, !dbg !7075

; <label>:123:                                    ; preds = %122
  %124 = tail call i32 @clusterGetSlaveRank() #10, !dbg !7076
  %125 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7078, !tbaa !788
  %126 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %125, i64 0, i32 14, !dbg !7079
  %127 = load i32, i32* %126, align 8, !dbg !7079, !tbaa !1793
  %128 = icmp sgt i32 %124, %127, !dbg !7080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7081
  br i1 %128, label %129, label %136, !dbg !7081

; <label>:129:                                    ; preds = %123
  %130 = sub nsw i32 %124, %127, !dbg !7082
  %131 = mul nsw i32 %130, 1000, !dbg !7083
  %132 = sext i32 %131 to i64, !dbg !7084
  %133 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %125, i64 0, i32 11, !dbg !7086
  %134 = load i64, i64* %133, align 8, !dbg !7087, !tbaa !1787
  %135 = add nsw i64 %134, %132, !dbg !7087
  store i64 %135, i64* %133, align 8, !dbg !7087, !tbaa !1787
  store i32 %124, i32* %126, align 8, !dbg !7088, !tbaa !1793
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i64 0, i64 0), i32 %124, i64 %132) #6, !dbg !7089
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7090
  br label %136, !dbg !7090

; <label>:136:                                    ; preds = %129, %123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7091
  br label %137, !dbg !7091

; <label>:137:                                    ; preds = %136, %122, %118
  %138 = tail call i64 @mstime() #6, !dbg !7092
  %139 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7094, !tbaa !788
  %140 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 11, !dbg !7095
  %141 = load i64, i64* %140, align 8, !dbg !7095, !tbaa !1787
  %142 = icmp slt i64 %138, %141, !dbg !7096
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7097
  br i1 %142, label %143, label %144, !dbg !7097

; <label>:143:                                    ; preds = %137
  tail call void @clusterLogCantFailover(i32 2) #10, !dbg !7098
  br label %189, !dbg !7100

; <label>:144:                                    ; preds = %137
  %145 = icmp sgt i64 %6, %25, !dbg !7101
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7103
  br i1 %145, label %146, label %147, !dbg !7103

; <label>:146:                                    ; preds = %144
  tail call void @clusterLogCantFailover(i32 3) #10, !dbg !7104
  br label %189, !dbg !7106

; <label>:147:                                    ; preds = %144
  %148 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 13, !dbg !7107
  %149 = load i32, i32* %148, align 4, !dbg !7107, !tbaa !7037
  %150 = icmp eq i32 %149, 0, !dbg !7109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7110
  br i1 %150, label %151, label %173, !dbg !7110

; <label>:151:                                    ; preds = %147
  %152 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 1, !dbg !7111
  %153 = load i64, i64* %152, align 8, !dbg !7113, !tbaa !797
  %154 = add i64 %153, 1, !dbg !7113
  store i64 %154, i64* %152, align 8, !dbg !7113, !tbaa !797
  %155 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 15, !dbg !7114
  store i64 %154, i64* %155, align 8, !dbg !7115, !tbaa !1796
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.89, i64 0, i64 0), i64 %154) #6, !dbg !7116
  %156 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 0, i64 0, !dbg !7117
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %156) #7, !dbg !7117
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %1, i32 5) #6, !dbg !7121
  %157 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7122, !tbaa !788
  %158 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %157, i64 0, i32 17, !dbg !7123
  %159 = load i64, i64* %158, align 8, !dbg !7123, !tbaa !1987
  %160 = icmp eq i64 %159, 0, !dbg !7124
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7125
  br i1 %160, label %165, label %161, !dbg !7125

; <label>:161:                                    ; preds = %151
  %162 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 17, i64 0, !dbg !7126
  %163 = load i8, i8* %162, align 1, !dbg !7127, !tbaa !745
  %164 = or i8 %163, 2, !dbg !7127
  store i8 %164, i8* %162, align 1, !dbg !7127, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7126
  br label %165, !dbg !7126

; <label>:165:                                    ; preds = %151, %161
  %166 = call i32 @lwip_htonl(i32 2256) #6, !dbg !7129
  %167 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %1, i64 0, i32 1, !dbg !7130
  store i32 %166, i32* %167, align 4, !dbg !7131, !tbaa !2758
  call void @clusterBroadcastMessage(i8* nonnull %156, i64 2256) #6, !dbg !7132
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %156) #7, !dbg !7133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7133
  %168 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7134, !tbaa !788
  %169 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %168, i64 0, i32 13, !dbg !7135
  store i32 1, i32* %169, align 4, !dbg !7136, !tbaa !7037
  %170 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %168, i64 0, i32 22, !dbg !7139
  %171 = load i32, i32* %170, align 8, !dbg !7140, !tbaa !1475
  %172 = or i32 %171, 14, !dbg !7140
  store i32 %172, i32* %170, align 8, !dbg !7140, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7141
  br label %189, !dbg !7142

; <label>:173:                                    ; preds = %147
  %174 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 12, !dbg !7143
  %175 = load i32, i32* %174, align 8, !dbg !7143, !tbaa !1790
  %176 = icmp sgt i32 %175, %9, !dbg !7145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7146
  br i1 %176, label %177, label %187, !dbg !7146

; <label>:177:                                    ; preds = %173
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.90, i64 0, i64 0)) #6, !dbg !7147
  %178 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7149, !tbaa !760
  %179 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %178, i64 0, i32 3, !dbg !7151
  %180 = load i64, i64* %179, align 8, !dbg !7151, !tbaa !1093
  %181 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7152, !tbaa !788
  %182 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %181, i64 0, i32 15, !dbg !7153
  %183 = load i64, i64* %182, align 8, !dbg !7153, !tbaa !1796
  %184 = icmp ult i64 %180, %183, !dbg !7154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7155
  br i1 %184, label %185, label %186, !dbg !7155

; <label>:185:                                    ; preds = %177
  store i64 %183, i64* %179, align 8, !dbg !7156, !tbaa !1093
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.91, i64 0, i64 0), i64 %183) #6, !dbg !7158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7159
  br label %186, !dbg !7159

; <label>:186:                                    ; preds = %185, %177
  tail call void @clusterFailoverReplaceYourMaster() #10, !dbg !7160
  br label %188, !dbg !7161

; <label>:187:                                    ; preds = %173
  tail call void @clusterLogCantFailover(i32 4) #10, !dbg !7162
  br label %188

; <label>:188:                                    ; preds = %187, %186
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %189, !dbg !7164

; <label>:189:                                    ; preds = %188, %165, %146, %143, %110, %78, %50
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7165
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7164
  ret void, !dbg !7164
}

; Function Attrs: noredzone
declare dso_local i64 @random() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleSlaveMigration(i32) local_unnamed_addr #0 !dbg !7166 {
  %2 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7182, !tbaa !760
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %2, i64 0, i32 8, !dbg !7183
  %4 = load %struct.clusterNode*, %struct.clusterNode** %3, align 8, !dbg !7183, !tbaa !1025
  %5 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7187, !tbaa !788
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 2, !dbg !7189
  %7 = load i32, i32* %6, align 8, !dbg !7189, !tbaa !1770
  %8 = icmp eq i32 %7, 0, !dbg !7190
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7191
  br i1 %8, label %9, label %200, !dbg !7191

; <label>:9:                                      ; preds = %1
  %10 = icmp eq %struct.clusterNode* %4, null, !dbg !7192
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7194
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7195
  br i1 %10, label %201, label %11, !dbg !7194

; <label>:11:                                     ; preds = %9
  %12 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 6, !dbg !7198
  %13 = load i32, i32* %12, align 4, !dbg !7198, !tbaa !1041
  %14 = icmp sgt i32 %13, 0, !dbg !7200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7201
  br i1 %14, label %15, label %37, !dbg !7201

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %4, i64 0, i32 7
  %17 = load %struct.clusterNode**, %struct.clusterNode*** %16, align 8, !tbaa !1044
  %18 = sext i32 %13 to i64
  br label %19, !dbg !7201

; <label>:19:                                     ; preds = %15, %33
  %20 = phi i64 [ 0, %15 ], [ %35, %33 ]
  %21 = phi i32 [ 0, %15 ], [ %34, %33 ]
  %22 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %17, i64 %20, !dbg !7202
  %23 = load %struct.clusterNode*, %struct.clusterNode** %22, align 8, !dbg !7202, !tbaa !760
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %23, i64 0, i32 2, !dbg !7202
  %25 = load i32, i32* %24, align 8, !dbg !7202, !tbaa !927
  %26 = and i32 %25, 8, !dbg !7202
  %27 = icmp eq i32 %26, 0, !dbg !7202
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7204
  br i1 %27, label %28, label %33, !dbg !7204

; <label>:28:                                     ; preds = %19
  %29 = and i32 %25, 4, !dbg !7205
  %30 = icmp eq i32 %29, 0, !dbg !7205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7206
  br i1 %30, label %31, label %33, !dbg !7206

; <label>:31:                                     ; preds = %28
  %32 = add nsw i32 %21, 1, !dbg !7207
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7208
  br label %33, !dbg !7208

; <label>:33:                                     ; preds = %28, %19, %31
  %34 = phi i32 [ %21, %19 ], [ %21, %28 ], [ %32, %31 ], !dbg !7209
  %35 = add nuw nsw i64 %20, 1, !dbg !7210
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7211
  %36 = icmp slt i64 %35, %18, !dbg !7200
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7201
  br i1 %36, label %19, label %37, !dbg !7201, !llvm.loop !7212

; <label>:37:                                     ; preds = %33, %11
  %38 = phi i32 [ 0, %11 ], [ %34, %33 ], !dbg !7181
  %39 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 262), align 8, !dbg !7214, !tbaa !7216
  %40 = icmp sgt i32 %38, %39, !dbg !7217
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7218
  br i1 %40, label %41, label %200, !dbg !7218

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %5, i64 0, i32 4, !dbg !7219
  %43 = load %struct.dict*, %struct.dict** %42, align 8, !dbg !7219, !tbaa !837
  %44 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %43) #6, !dbg !7220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7222
  %45 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %44) #6, !dbg !7223
  %46 = icmp eq %struct.dictEntry* %45, null, !dbg !7225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7222
  br i1 %46, label %47, label %48, !dbg !7222

; <label>:47:                                     ; preds = %41
  tail call void @dictReleaseIterator(%struct.dictIterator* %44) #6, !dbg !7226
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7227
  br label %200, !dbg !7227

; <label>:48:                                     ; preds = %41, %179
  %49 = phi %struct.dictEntry* [ %181, %179 ], [ %45, %41 ]
  %50 = phi %struct.clusterNode* [ %151, %179 ], [ null, %41 ]
  %51 = phi %struct.clusterNode* [ %180, %179 ], [ %2, %41 ]
  %52 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %49, i64 0, i32 1, i32 0, !dbg !7229
  %53 = bitcast i8** %52 to %struct.clusterNode**, !dbg !7229
  %54 = load %struct.clusterNode*, %struct.clusterNode** %53, align 8, !dbg !7229, !tbaa !745
  %55 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 2, !dbg !7233
  %56 = load i32, i32* %55, align 8, !dbg !7233, !tbaa !927
  %57 = and i32 %56, 2, !dbg !7233
  %58 = icmp eq i32 %57, 0, !dbg !7233
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7235
  br i1 %58, label %59, label %62, !dbg !7235

; <label>:59:                                     ; preds = %48
  %60 = and i32 %56, 8, !dbg !7236
  %61 = icmp eq i32 %60, 0, !dbg !7236
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7237
  br i1 %61, label %63, label %62, !dbg !7237

; <label>:62:                                     ; preds = %59, %48
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7238
  br label %63, !dbg !7238

; <label>:63:                                     ; preds = %59, %62
  %64 = phi i32 [ 0, %62 ], [ 1, %59 ], !dbg !7239
  %65 = and i32 %56, 256, !dbg !7240
  %66 = icmp eq i32 %65, 0, !dbg !7240
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7242
  br i1 %66, label %67, label %68, !dbg !7242

; <label>:67:                                     ; preds = %63
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7243
  br label %68, !dbg !7243

; <label>:68:                                     ; preds = %63, %67
  %69 = phi i32 [ %64, %63 ], [ 0, %67 ], !dbg !7244
  %70 = and i32 %56, 1, !dbg !7245
  %71 = icmp eq i32 %70, 0, !dbg !7245
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7247
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7248
  br i1 %71, label %126, label %72, !dbg !7247

; <label>:72:                                     ; preds = %68
  %73 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 6, !dbg !7253
  %74 = load i32, i32* %73, align 4, !dbg !7253, !tbaa !1041
  %75 = icmp sgt i32 %74, 0, !dbg !7254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7255
  br i1 %75, label %77, label %76, !dbg !7255

; <label>:76:                                     ; preds = %72
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7258
  br label %126, !dbg !7258

; <label>:77:                                     ; preds = %72
  %78 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 7
  %79 = load %struct.clusterNode**, %struct.clusterNode*** %78, align 8, !tbaa !1044
  %80 = sext i32 %74 to i64
  %81 = and i64 %80, 1, !dbg !7255
  %82 = icmp eq i32 %74, 1, !dbg !7255
  br i1 %82, label %106, label %83, !dbg !7255

; <label>:83:                                     ; preds = %77
  %84 = sub nsw i64 %80, %81, !dbg !7255
  br label %85, !dbg !7255

; <label>:85:                                     ; preds = %204, %83
  %86 = phi i64 [ 0, %83 ], [ %206, %204 ]
  %87 = phi i32 [ 0, %83 ], [ %205, %204 ]
  %88 = phi i64 [ %84, %83 ], [ %207, %204 ]
  %89 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %79, i64 %86, !dbg !7259
  %90 = load %struct.clusterNode*, %struct.clusterNode** %89, align 8, !dbg !7259, !tbaa !760
  %91 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %90, i64 0, i32 2, !dbg !7259
  %92 = load i32, i32* %91, align 8, !dbg !7259, !tbaa !927
  %93 = and i32 %92, 8, !dbg !7259
  %94 = icmp eq i32 %93, 0, !dbg !7259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7260
  br i1 %94, label %95, label %97, !dbg !7260

; <label>:95:                                     ; preds = %85
  %96 = add nsw i32 %87, 1, !dbg !7261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7262
  br label %97, !dbg !7262

; <label>:97:                                     ; preds = %95, %85
  %98 = phi i32 [ %87, %85 ], [ %96, %95 ], !dbg !7263
  %99 = or i64 %86, 1, !dbg !7264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7255
  %100 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %79, i64 %99, !dbg !7259
  %101 = load %struct.clusterNode*, %struct.clusterNode** %100, align 8, !dbg !7259, !tbaa !760
  %102 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %101, i64 0, i32 2, !dbg !7259
  %103 = load i32, i32* %102, align 8, !dbg !7259, !tbaa !927
  %104 = and i32 %103, 8, !dbg !7259
  %105 = icmp eq i32 %104, 0, !dbg !7259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7260
  br i1 %105, label %202, label %204, !dbg !7260

; <label>:106:                                    ; preds = %204, %77
  %107 = phi i32 [ undef, %77 ], [ %205, %204 ]
  %108 = phi i64 [ 0, %77 ], [ %206, %204 ]
  %109 = phi i32 [ 0, %77 ], [ %205, %204 ]
  %110 = icmp eq i64 %81, 0, !dbg !7260
  br i1 %110, label %122, label %111, !dbg !7260

; <label>:111:                                    ; preds = %106
  %112 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %79, i64 %108, !dbg !7259
  %113 = load %struct.clusterNode*, %struct.clusterNode** %112, align 8, !dbg !7259, !tbaa !760
  %114 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %113, i64 0, i32 2, !dbg !7259
  %115 = load i32, i32* %114, align 8, !dbg !7259, !tbaa !927
  %116 = and i32 %115, 8, !dbg !7259
  %117 = icmp eq i32 %116, 0, !dbg !7259
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7260
  br i1 %117, label %118, label %120, !dbg !7260

; <label>:118:                                    ; preds = %111
  %119 = add nsw i32 %109, 1, !dbg !7261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7262
  br label %120, !dbg !7262

; <label>:120:                                    ; preds = %118, %111
  %121 = phi i32 [ %109, %111 ], [ %119, %118 ], !dbg !7263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7255
  br label %122, !dbg !7256

; <label>:122:                                    ; preds = %106, %120
  %123 = phi i32 [ %107, %106 ], [ %121, %120 ], !dbg !7263
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7256
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7257
  %124 = icmp sgt i32 %123, 0, !dbg !7266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7258
  br i1 %124, label %125, label %126, !dbg !7258

; <label>:125:                                    ; preds = %122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7268
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7269
  br label %143, !dbg !7269

; <label>:126:                                    ; preds = %68, %76, %122
  %127 = phi i32 [ %123, %122 ], [ 0, %76 ], [ 0, %68 ]
  %128 = icmp eq i32 %69, 0, !dbg !7270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7269
  br i1 %128, label %143, label %129, !dbg !7269

; <label>:129:                                    ; preds = %126
  %130 = icmp eq %struct.clusterNode* %50, null, !dbg !7272
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7275
  br i1 %130, label %131, label %136, !dbg !7275

; <label>:131:                                    ; preds = %129
  %132 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 5, !dbg !7276
  %133 = load i32, i32* %132, align 8, !dbg !7276, !tbaa !1164
  %134 = icmp sgt i32 %133, 0, !dbg !7277
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7278
  br i1 %134, label %135, label %136, !dbg !7278

; <label>:135:                                    ; preds = %131
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7279
  br label %136, !dbg !7279

; <label>:136:                                    ; preds = %129, %135, %131
  %137 = phi %struct.clusterNode* [ %50, %129 ], [ %54, %135 ], [ null, %131 ], !dbg !7280
  %138 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 14, !dbg !7281
  %139 = load i64, i64* %138, align 8, !dbg !7281, !tbaa !1194
  %140 = icmp eq i64 %139, 0, !dbg !7283
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7284
  br i1 %140, label %141, label %149, !dbg !7284

; <label>:141:                                    ; preds = %136
  %142 = tail call i64 @mstime() #6, !dbg !7285
  store i64 %142, i64* %138, align 8, !dbg !7286, !tbaa !1194
  br label %146, !dbg !7287

; <label>:143:                                    ; preds = %125, %126
  %144 = phi i32 [ %123, %125 ], [ %127, %126 ]
  %145 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 14, !dbg !7288
  store i64 0, i64* %145, align 8, !dbg !7290, !tbaa !1194
  br label %146

; <label>:146:                                    ; preds = %143, %141
  %147 = phi i32 [ %144, %143 ], [ %127, %141 ]
  %148 = phi %struct.clusterNode* [ %50, %143 ], [ %137, %141 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %149, !dbg !7291

; <label>:149:                                    ; preds = %146, %136
  %150 = phi i32 [ %127, %136 ], [ %147, %146 ]
  %151 = phi %struct.clusterNode* [ %137, %136 ], [ %148, %146 ], !dbg !7185
  %152 = icmp eq i32 %150, %0, !dbg !7291
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7293
  br i1 %152, label %153, label %179, !dbg !7293

; <label>:153:                                    ; preds = %149
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7294
  %154 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 6, !dbg !7297
  %155 = load i32, i32* %154, align 4, !dbg !7297, !tbaa !1041
  %156 = icmp sgt i32 %155, 0, !dbg !7299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7300
  br i1 %156, label %157, label %179, !dbg !7300

; <label>:157:                                    ; preds = %153
  %158 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %54, i64 0, i32 7
  br label %159, !dbg !7300

; <label>:159:                                    ; preds = %157, %173
  %160 = phi i64 [ 0, %157 ], [ %175, %173 ]
  %161 = phi %struct.clusterNode* [ %51, %157 ], [ %174, %173 ]
  %162 = load %struct.clusterNode**, %struct.clusterNode*** %158, align 8, !dbg !7301, !tbaa !1044
  %163 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %162, i64 %160, !dbg !7304
  %164 = load %struct.clusterNode*, %struct.clusterNode** %163, align 8, !dbg !7304, !tbaa !760
  %165 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %164, i64 0, i32 1, i64 0, !dbg !7304
  %166 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %161, i64 0, i32 1, i64 0, !dbg !7305
  %167 = tail call i32 @memcmp(i8* nonnull %165, i8* nonnull %166, i64 40) #6, !dbg !7306
  %168 = icmp slt i32 %167, 0, !dbg !7307
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7308
  br i1 %168, label %169, label %173, !dbg !7308

; <label>:169:                                    ; preds = %159
  %170 = load %struct.clusterNode**, %struct.clusterNode*** %158, align 8, !dbg !7309, !tbaa !1044
  %171 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %170, i64 %160, !dbg !7311
  %172 = load %struct.clusterNode*, %struct.clusterNode** %171, align 8, !dbg !7311, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7312
  br label %173, !dbg !7312

; <label>:173:                                    ; preds = %159, %169
  %174 = phi %struct.clusterNode* [ %172, %169 ], [ %161, %159 ], !dbg !7280
  %175 = add nuw nsw i64 %160, 1, !dbg !7313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7314
  %176 = load i32, i32* %154, align 4, !dbg !7297, !tbaa !1041
  %177 = sext i32 %176 to i64, !dbg !7299
  %178 = icmp slt i64 %175, %177, !dbg !7299
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7300
  br i1 %178, label %159, label %179, !dbg !7300, !llvm.loop !7315

; <label>:179:                                    ; preds = %173, %153, %149
  %180 = phi %struct.clusterNode* [ %51, %149 ], [ %51, %153 ], [ %174, %173 ], !dbg !7317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7222
  %181 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %44) #6, !dbg !7223
  %182 = icmp eq %struct.dictEntry* %181, null, !dbg !7225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7222
  br i1 %182, label %183, label %48, !dbg !7222, !llvm.loop !7318

; <label>:183:                                    ; preds = %179
  tail call void @dictReleaseIterator(%struct.dictIterator* %44) #6, !dbg !7226
  %184 = icmp eq %struct.clusterNode* %151, null, !dbg !7320
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7227
  br i1 %184, label %200, label %185, !dbg !7227

; <label>:185:                                    ; preds = %183
  %186 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7321, !tbaa !760
  %187 = icmp eq %struct.clusterNode* %180, %186, !dbg !7322
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7323
  br i1 %187, label %188, label %200, !dbg !7323

; <label>:188:                                    ; preds = %185
  %189 = tail call i64 @mstime() #6, !dbg !7324
  %190 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %151, i64 0, i32 14, !dbg !7325
  %191 = load i64, i64* %190, align 8, !dbg !7325, !tbaa !1194
  %192 = sub nsw i64 %189, %191, !dbg !7326
  %193 = icmp sgt i64 %192, 5000, !dbg !7327
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7328
  br i1 %193, label %194, label %200, !dbg !7328

; <label>:194:                                    ; preds = %188
  %195 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7329, !tbaa !4165
  %196 = and i32 %195, 2, !dbg !7330
  %197 = icmp eq i32 %196, 0, !dbg !7330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7331
  br i1 %197, label %198, label %200, !dbg !7331

; <label>:198:                                    ; preds = %194
  %199 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %151, i64 0, i32 1, i64 0, !dbg !7332
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.92, i64 0, i64 0), i8* nonnull %199) #6, !dbg !7334
  tail call void @clusterSetMaster(%struct.clusterNode* nonnull %151) #10, !dbg !7335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7336
  br label %200, !dbg !7336

; <label>:200:                                    ; preds = %185, %188, %198, %183, %194, %47, %37, %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7337
  br label %201, !dbg !7338

; <label>:201:                                    ; preds = %200, %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7338
  ret void, !dbg !7338

; <label>:202:                                    ; preds = %97
  %203 = add nsw i32 %98, 1, !dbg !7261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7262
  br label %204, !dbg !7262

; <label>:204:                                    ; preds = %202, %97
  %205 = phi i32 [ %98, %97 ], [ %203, %202 ], !dbg !7263
  %206 = add nuw nsw i64 %86, 2, !dbg !7264
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7265
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7255
  %207 = add i64 %88, -2, !dbg !7255
  %208 = icmp eq i64 %207, 0, !dbg !7255
  br i1 %208, label %106, label %85, !dbg !7255, !llvm.loop !3050
}

; Function Attrs: noredzone
declare dso_local i32 @clientsArePaused() local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @manualFailoverCheckTimeout() local_unnamed_addr #0 !dbg !7339 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7340, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 17, !dbg !7342
  %3 = load i64, i64* %2, align 8, !dbg !7342, !tbaa !1987
  %4 = icmp eq i64 %3, 0, !dbg !7343
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7344
  br i1 %4, label %24, label %5, !dbg !7344

; <label>:5:                                      ; preds = %0
  %6 = tail call i64 @mstime() #6, !dbg !7345
  %7 = icmp slt i64 %3, %6, !dbg !7346
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7347
  br i1 %7, label %8, label %24, !dbg !7347

; <label>:8:                                      ; preds = %5
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.93, i64 0, i64 0)) #6, !dbg !7348
  %9 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7350, !tbaa !788
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %9, i64 0, i32 17, !dbg !7352
  %11 = load i64, i64* %10, align 8, !dbg !7352, !tbaa !1987
  %12 = icmp eq i64 %11, 0, !dbg !7353
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7354
  br i1 %12, label %18, label %13, !dbg !7354

; <label>:13:                                     ; preds = %8
  %14 = tail call i32 @clientsArePaused() #6, !dbg !7355
  %15 = icmp eq i32 %14, 0, !dbg !7355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7356
  br i1 %15, label %18, label %16, !dbg !7356

; <label>:16:                                     ; preds = %13
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !7357, !tbaa !2176
  %17 = tail call i32 @clientsArePaused() #6, !dbg !7358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7359
  br label %18, !dbg !7359

; <label>:18:                                     ; preds = %8, %13, %16
  %19 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7360, !tbaa !788
  %20 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 17, !dbg !7361
  store i64 0, i64* %20, align 8, !dbg !7362, !tbaa !1987
  %21 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 20, !dbg !7363
  store i32 0, i32* %21, align 8, !dbg !7364, !tbaa !1990
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 18, !dbg !7365
  store %struct.clusterNode* null, %struct.clusterNode** %22, align 8, !dbg !7366, !tbaa !1993
  %23 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %19, i64 0, i32 19, !dbg !7367
  store i64 0, i64* %23, align 8, !dbg !7368, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7370
  br label %24, !dbg !7370

; <label>:24:                                     ; preds = %0, %18, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7371
  ret void, !dbg !7371
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterHandleManualFailover() local_unnamed_addr #0 !dbg !7372 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7373, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 17, !dbg !7375
  %3 = load i64, i64* %2, align 8, !dbg !7375, !tbaa !1987
  %4 = icmp eq i64 %3, 0, !dbg !7376
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7377
  br i1 %4, label %19, label %5, !dbg !7377

; <label>:5:                                      ; preds = %0
  %6 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 20, !dbg !7378
  %7 = load i32, i32* %6, align 8, !dbg !7378, !tbaa !1990
  %8 = icmp eq i32 %7, 0, !dbg !7380
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7381
  br i1 %8, label %9, label %19, !dbg !7381

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 19, !dbg !7382
  %11 = load i64, i64* %10, align 8, !dbg !7382, !tbaa !1996
  %12 = icmp eq i64 %11, 0, !dbg !7384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7385
  br i1 %12, label %19, label %13, !dbg !7385

; <label>:13:                                     ; preds = %9
  %14 = tail call i64 @replicationGetSlaveOffset() #6, !dbg !7386
  %15 = icmp eq i64 %11, %14, !dbg !7388
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7389
  br i1 %15, label %16, label %19, !dbg !7389

; <label>:16:                                     ; preds = %13
  %17 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7390, !tbaa !788
  %18 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %17, i64 0, i32 20, !dbg !7392
  store i32 1, i32* %18, align 8, !dbg !7393, !tbaa !1990
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.94, i64 0, i64 0)) #6, !dbg !7394
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7395
  br label %19, !dbg !7395

; <label>:19:                                     ; preds = %5, %9, %0, %16, %13
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7396
  ret void, !dbg !7396
}

; Function Attrs: noredzone nounwind
define dso_local void @clusterCron() local_unnamed_addr #0 !dbg !292 {
  %1 = tail call i64 @mstime() #6, !dbg !7399
  %2 = load i64, i64* @clusterCron.iteration, align 8, !dbg !7402, !tbaa !1173
  %3 = add i64 %2, 1, !dbg !7402
  store i64 %3, i64* @clusterCron.iteration, align 8, !dbg !7402, !tbaa !1173
  %4 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !7403, !tbaa !4618
  %5 = load i8*, i8** @clusterCron.prev_ip, align 8, !dbg !7406, !tbaa !760
  %6 = icmp eq i8* %5, null, !dbg !7408
  %7 = icmp ne i8* %4, null, !dbg !7409
  %8 = and i1 %7, %6, !dbg !7410
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7410
  br i1 %8, label %9, label %10, !dbg !7410

; <label>:9:                                      ; preds = %0
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7412
  br label %27, !dbg !7413

; <label>:10:                                     ; preds = %0
  %11 = icmp ne i8* %5, null, !dbg !7416
  %12 = icmp eq i8* %4, null, !dbg !7418
  %13 = and i1 %12, %11, !dbg !7419
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7419
  br i1 %13, label %14, label %15, !dbg !7419

; <label>:14:                                     ; preds = %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7420
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7412
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7413
  br label %25, !dbg !7413

; <label>:15:                                     ; preds = %10
  %16 = and i1 %7, %11, !dbg !7421
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7421
  br i1 %16, label %17, label %20, !dbg !7421

; <label>:17:                                     ; preds = %15
  %18 = tail call i32 @strcmp(i8* nonnull %5, i8* nonnull %4) #6, !dbg !7423
  %19 = icmp eq i32 %18, 0, !dbg !7423
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7424
  br i1 %19, label %20, label %22, !dbg !7424

; <label>:20:                                     ; preds = %17, %15
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7412
  %21 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7425, !tbaa !760
  br label %40, !dbg !7412

; <label>:22:                                     ; preds = %17
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7427
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7412
  %23 = load i8*, i8** @clusterCron.prev_ip, align 8, !dbg !7428, !tbaa !760
  %24 = icmp eq i8* %23, null, !dbg !7428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7413
  br i1 %24, label %28, label %25, !dbg !7413

; <label>:25:                                     ; preds = %14, %22
  %26 = phi i8* [ %5, %14 ], [ %23, %22 ]
  tail call void @zfree(i8* nonnull %26) #6, !dbg !7430
  br label %27, !dbg !7430

; <label>:27:                                     ; preds = %25, %9
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7431
  br label %28, !dbg !7432

; <label>:28:                                     ; preds = %27, %22
  store i8* %4, i8** @clusterCron.prev_ip, align 8, !dbg !7432, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7433
  br i1 %7, label %29, label %37, !dbg !7433

; <label>:29:                                     ; preds = %28
  %30 = tail call i8* @zstrdup(i8* nonnull %4) #6, !dbg !7434
  store i8* %30, i8** @clusterCron.prev_ip, align 8, !dbg !7437, !tbaa !760
  %31 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7438, !tbaa !760
  %32 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %31, i64 0, i32 16, i64 0, !dbg !7438
  %33 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 266), align 8, !dbg !7439, !tbaa !4618
  %34 = tail call i8* @strncpy(i8* nonnull %32, i8* %33, i64 46) #6, !dbg !7440
  %35 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7441, !tbaa !760
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %35, i64 0, i32 16, i64 45, !dbg !7441
  store i8 0, i8* %36, align 1, !dbg !7442, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7443
  br label %40, !dbg !7443

; <label>:37:                                     ; preds = %28
  %38 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7444, !tbaa !760
  %39 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %38, i64 0, i32 16, i64 0, !dbg !7444
  store i8 0, i8* %39, align 8, !dbg !7446, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %40

; <label>:40:                                     ; preds = %20, %29, %37
  %41 = phi %struct.clusterNode* [ %21, %20 ], [ %35, %29 ], [ %38, %37 ], !dbg !7425
  %42 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7447, !tbaa !2943
  %43 = icmp sgt i64 %42, 1000, !dbg !7449
  %44 = select i1 %43, i64 %42, i64 1000, !dbg !7449
  %45 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %41, i64 0, i32 2, !dbg !7450
  %46 = load i32, i32* %45, align 8, !dbg !7450, !tbaa !927
  %47 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 265), align 4, !dbg !7452, !tbaa !1728
  %48 = icmp eq i32 %47, 0, !dbg !7453
  %49 = select i1 %48, i32 0, i32 512, !dbg !7453
  %50 = and i32 %46, -513, !dbg !7455
  %51 = or i32 %49, %50, !dbg !7456
  store i32 %51, i32* %45, align 8, !dbg !7456, !tbaa !927
  %52 = icmp eq i32 %51, %46, !dbg !7457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7458
  %53 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7459, !tbaa !788
  br i1 %52, label %58, label %54, !dbg !7458

; <label>:54:                                     ; preds = %40
  %55 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %53, i64 0, i32 22, !dbg !7462
  %56 = load i32, i32* %55, align 8, !dbg !7463, !tbaa !1475
  %57 = or i32 %56, 6, !dbg !7463
  store i32 %57, i32* %55, align 8, !dbg !7463, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7464
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7465
  br label %58, !dbg !7465

; <label>:58:                                     ; preds = %40, %54
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7466
  %59 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %53, i64 0, i32 4, !dbg !7467
  %60 = load %struct.dict*, %struct.dict** %59, align 8, !dbg !7467, !tbaa !837
  %61 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %60) #6, !dbg !7468
  %62 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7470, !tbaa !788
  %63 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %62, i64 0, i32 25, !dbg !7471
  store i64 0, i64* %63, align 8, !dbg !7472, !tbaa !1814
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7473
  %64 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %61) #6, !dbg !7474
  %65 = icmp eq %struct.dictEntry* %64, null, !dbg !7476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7473
  br i1 %65, label %147, label %66, !dbg !7473

; <label>:66:                                     ; preds = %58, %144
  %67 = phi %struct.dictEntry* [ %145, %144 ], [ %64, %58 ]
  %68 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %67, i64 0, i32 1, i32 0, !dbg !7477
  %69 = bitcast i8** %68 to %struct.clusterNode**, !dbg !7477
  %70 = load %struct.clusterNode*, %struct.clusterNode** %69, align 8, !dbg !7477, !tbaa !745
  %71 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 2, !dbg !7479
  %72 = load i32, i32* %71, align 8, !dbg !7479, !tbaa !927
  %73 = and i32 %72, 80, !dbg !7481
  %74 = icmp eq i32 %73, 0, !dbg !7481
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7482
  br i1 %74, label %75, label %144, !dbg !7482, !llvm.loop !7483

; <label>:75:                                     ; preds = %66
  %76 = and i32 %72, 4, !dbg !7485
  %77 = icmp eq i32 %76, 0, !dbg !7485
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7487
  br i1 %77, label %83, label %78, !dbg !7487

; <label>:78:                                     ; preds = %75
  %79 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7488, !tbaa !788
  %80 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %79, i64 0, i32 25, !dbg !7489
  %81 = load i64, i64* %80, align 8, !dbg !7490, !tbaa !1814
  %82 = add nsw i64 %81, 1, !dbg !7490
  store i64 %82, i64* %80, align 8, !dbg !7490, !tbaa !1814
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7491
  br label %83, !dbg !7491

; <label>:83:                                     ; preds = %75, %78
  %84 = and i32 %72, 32, !dbg !7492
  %85 = icmp eq i32 %84, 0, !dbg !7492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7494
  br i1 %85, label %92, label %86, !dbg !7494

; <label>:86:                                     ; preds = %83
  %87 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 0, !dbg !7495
  %88 = load i64, i64* %87, align 8, !dbg !7495, !tbaa !1155
  %89 = sub nsw i64 %1, %88, !dbg !7496
  %90 = icmp sgt i64 %89, %44, !dbg !7497
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7498
  br i1 %90, label %91, label %92, !dbg !7498

; <label>:91:                                     ; preds = %86
  tail call void @clusterDelNode(%struct.clusterNode* nonnull %70) #10, !dbg !7499
  br label %144, !dbg !7501, !llvm.loop !7483

; <label>:92:                                     ; preds = %83, %86
  %93 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 19, !dbg !7502
  %94 = load %struct.clusterLink*, %struct.clusterLink** %93, align 8, !dbg !7502, !tbaa !1178
  %95 = icmp eq %struct.clusterLink* %94, null, !dbg !7503
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7504
  br i1 %95, label %96, label %144, !dbg !7504

; <label>:96:                                     ; preds = %92
  %97 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 16, i64 0, !dbg !7505
  %98 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 18, !dbg !7506
  %99 = load i32, i32* %98, align 4, !dbg !7506, !tbaa !907
  %100 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 30), align 8, !dbg !7507, !tbaa !7508
  %101 = icmp eq i32 %100, 0, !dbg !7507
  %102 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 29, i64 0), align 8, !dbg !7507
  %103 = select i1 %101, i8* null, i8* %102, !dbg !7507
  %104 = tail call i32 @anetTcpNonBlockBindConnect(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i8* nonnull %97, i32 %99, i8* %103) #6, !dbg !7509
  %105 = icmp eq i32 %104, -1, !dbg !7511
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7513
  br i1 %105, label %106, label %114, !dbg !7513

; <label>:106:                                    ; preds = %96
  %107 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 9, !dbg !7514
  %108 = load i64, i64* %107, align 8, !dbg !7514, !tbaa !1078
  %109 = icmp eq i64 %108, 0, !dbg !7517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7518
  br i1 %109, label %110, label %112, !dbg !7518

; <label>:110:                                    ; preds = %106
  %111 = tail call i64 @mstime() #6, !dbg !7519
  store i64 %111, i64* %107, align 8, !dbg !7520, !tbaa !1078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7521
  br label %112, !dbg !7521

; <label>:112:                                    ; preds = %110, %106
  %113 = load i32, i32* %98, align 4, !dbg !7522, !tbaa !907
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.95, i64 0, i64 0), i8* nonnull %97, i32 %113, i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #6, !dbg !7523
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7524
  br label %144

; <label>:114:                                    ; preds = %96
  %115 = tail call i8* @zmalloc(i64 40) #6, !dbg !7527
  %116 = bitcast i8* %115 to %struct.clusterLink*, !dbg !7527
  %117 = tail call i64 @mstime() #6, !dbg !7529
  %118 = bitcast i8* %115 to i64*, !dbg !7530
  store i64 %117, i64* %118, align 8, !dbg !7531, !tbaa !2142
  %119 = tail call i8* @sdsempty() #6, !dbg !7532
  %120 = getelementptr inbounds i8, i8* %115, i64 16, !dbg !7533
  %121 = bitcast i8* %120 to i8**, !dbg !7533
  store i8* %119, i8** %121, align 8, !dbg !7534, !tbaa !2147
  %122 = tail call i8* @sdsempty() #6, !dbg !7535
  %123 = getelementptr inbounds i8, i8* %115, i64 24, !dbg !7536
  %124 = bitcast i8* %123 to i8**, !dbg !7536
  store i8* %122, i8** %124, align 8, !dbg !7537, !tbaa !2151
  %125 = getelementptr inbounds i8, i8* %115, i64 32, !dbg !7538
  %126 = bitcast i8* %125 to %struct.clusterNode**, !dbg !7538
  store %struct.clusterNode* %70, %struct.clusterNode** %126, align 8, !dbg !7539, !tbaa !2154
  %127 = getelementptr inbounds i8, i8* %115, i64 8, !dbg !7540
  %128 = bitcast i8* %127 to i32*, !dbg !7540
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7541
  store i32 %104, i32* %128, align 8, !dbg !7543, !tbaa !2159
  %129 = bitcast %struct.clusterLink** %93 to i8**, !dbg !7544
  store i8* %115, i8** %129, align 8, !dbg !7544, !tbaa !1178
  %130 = load %struct.aeEventLoop*, %struct.aeEventLoop** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 10), align 8, !dbg !7545, !tbaa !1942
  %131 = tail call i32 @aeCreateFileEvent(%struct.aeEventLoop* %130, i32 %104, i32 1, void (%struct.aeEventLoop*, i32, i8*, i32)* nonnull @clusterReadHandler, i8* %115) #6, !dbg !7546
  %132 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 9, !dbg !7547
  %133 = load i64, i64* %132, align 8, !dbg !7547, !tbaa !1078
  %134 = load i32, i32* %71, align 8, !dbg !7549, !tbaa !927
  %135 = lshr i32 %134, 6, !dbg !7550
  %136 = and i32 %135, 2, !dbg !7550
  tail call void @clusterSendPing(%struct.clusterLink* %116, i32 %136) #10, !dbg !7551
  %137 = icmp eq i64 %133, 0, !dbg !7552
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7554
  br i1 %137, label %139, label %138, !dbg !7554

; <label>:138:                                    ; preds = %114
  store i64 %133, i64* %132, align 8, !dbg !7555, !tbaa !1078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7557
  br label %139, !dbg !7557

; <label>:139:                                    ; preds = %114, %138
  %140 = load i32, i32* %71, align 8, !dbg !7558, !tbaa !927
  %141 = and i32 %140, -129, !dbg !7558
  store i32 %141, i32* %71, align 8, !dbg !7558, !tbaa !927
  %142 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %70, i64 0, i32 1, i64 0, !dbg !7559
  %143 = load i32, i32* %98, align 4, !dbg !7560, !tbaa !907
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.96, i64 0, i64 0), i8* nonnull %142, i8* nonnull %97, i32 %143) #6, !dbg !7561
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7562
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %144

; <label>:144:                                    ; preds = %92, %139, %66, %112, %91
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %145 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %61) #6, !dbg !7474
  %146 = icmp eq %struct.dictEntry* %145, null, !dbg !7476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7473
  br i1 %146, label %147, label %66, !dbg !7473

; <label>:147:                                    ; preds = %144, %58
  tail call void @dictReleaseIterator(%struct.dictIterator* %61) #6, !dbg !7563
  %148 = load i64, i64* @clusterCron.iteration, align 8, !dbg !7564, !tbaa !1173
  %149 = urem i64 %148, 10, !dbg !7565
  %150 = icmp eq i64 %149, 0, !dbg !7565
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7566
  br i1 %150, label %151, label %194, !dbg !7566

; <label>:151:                                    ; preds = %147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7569
  br label %152, !dbg !7569

; <label>:152:                                    ; preds = %182, %151
  %153 = phi i32 [ 0, %151 ], [ %185, %182 ]
  %154 = phi i64 [ 0, %151 ], [ %184, %182 ]
  %155 = phi %struct.clusterNode* [ null, %151 ], [ %183, %182 ]
  %156 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7570, !tbaa !788
  %157 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %156, i64 0, i32 4, !dbg !7571
  %158 = load %struct.dict*, %struct.dict** %157, align 8, !dbg !7571, !tbaa !837
  %159 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %158) #6, !dbg !7572
  %160 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %159, i64 0, i32 1, i32 0, !dbg !7573
  %161 = bitcast i8** %160 to %struct.clusterNode**, !dbg !7573
  %162 = load %struct.clusterNode*, %struct.clusterNode** %161, align 8, !dbg !7573, !tbaa !745
  %163 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %162, i64 0, i32 19, !dbg !7575
  %164 = load %struct.clusterLink*, %struct.clusterLink** %163, align 8, !dbg !7575, !tbaa !1178
  %165 = icmp eq %struct.clusterLink* %164, null, !dbg !7577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7578
  br i1 %165, label %182, label %166, !dbg !7578

; <label>:166:                                    ; preds = %152
  %167 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %162, i64 0, i32 9, !dbg !7579
  %168 = load i64, i64* %167, align 8, !dbg !7579, !tbaa !1078
  %169 = icmp eq i64 %168, 0, !dbg !7580
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7581
  br i1 %169, label %170, label %182, !dbg !7581

; <label>:170:                                    ; preds = %166
  %171 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %162, i64 0, i32 2, !dbg !7582
  %172 = load i32, i32* %171, align 8, !dbg !7582, !tbaa !927
  %173 = and i32 %172, 48, !dbg !7584
  %174 = icmp eq i32 %173, 0, !dbg !7584
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7585
  br i1 %174, label %175, label %182, !dbg !7585

; <label>:175:                                    ; preds = %170
  %176 = icmp eq %struct.clusterNode* %155, null, !dbg !7586
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7588
  %177 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %162, i64 0, i32 10
  %178 = load i64, i64* %177, align 8, !dbg !7589, !tbaa !1087
  br i1 %176, label %181, label %179, !dbg !7588

; <label>:179:                                    ; preds = %175
  %180 = icmp sgt i64 %154, %178, !dbg !7590
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7591
  br i1 %180, label %181, label %182, !dbg !7591

; <label>:181:                                    ; preds = %175, %179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7592
  br label %182, !dbg !7592

; <label>:182:                                    ; preds = %179, %181, %170, %152, %166
  %183 = phi %struct.clusterNode* [ %155, %166 ], [ %155, %152 ], [ %155, %170 ], [ %162, %181 ], [ %155, %179 ], !dbg !7594
  %184 = phi i64 [ %154, %166 ], [ %154, %152 ], [ %154, %170 ], [ %178, %181 ], [ %154, %179 ], !dbg !7594
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7595
  %185 = add nuw nsw i32 %153, 1, !dbg !7596
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7597
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7569
  %186 = icmp eq i32 %185, 5, !dbg !7598
  br i1 %186, label %187, label %152, !dbg !7569, !llvm.loop !7599

; <label>:187:                                    ; preds = %182
  %188 = icmp eq %struct.clusterNode* %183, null, !dbg !7601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7603
  br i1 %188, label %193, label %189, !dbg !7603

; <label>:189:                                    ; preds = %187
  %190 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %183, i64 0, i32 1, i64 0, !dbg !7604
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i64 0, i64 0), i8* nonnull %190) #6, !dbg !7606
  %191 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %183, i64 0, i32 19, !dbg !7607
  %192 = load %struct.clusterLink*, %struct.clusterLink** %191, align 8, !dbg !7607, !tbaa !1178
  tail call void @clusterSendPing(%struct.clusterLink* %192, i32 0) #10, !dbg !7608
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7609
  br label %193, !dbg !7609

; <label>:193:                                    ; preds = %187, %189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7610
  br label %194, !dbg !7610

; <label>:194:                                    ; preds = %147, %193
  %195 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7614, !tbaa !788
  %196 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %195, i64 0, i32 4, !dbg !7615
  %197 = load %struct.dict*, %struct.dict** %196, align 8, !dbg !7615, !tbaa !837
  %198 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %197) #6, !dbg !7616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7617
  %199 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %198) #6, !dbg !7618
  %200 = icmp eq %struct.dictEntry* %199, null, !dbg !7619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7617
  br i1 %200, label %387, label %201, !dbg !7617

; <label>:201:                                    ; preds = %194, %380
  %202 = phi %struct.dictEntry* [ %385, %380 ], [ %199, %194 ]
  %203 = phi i32 [ %384, %380 ], [ 0, %194 ]
  %204 = phi i32 [ %383, %380 ], [ 0, %194 ]
  %205 = phi i32 [ %382, %380 ], [ 0, %194 ]
  %206 = phi i32 [ %381, %380 ], [ 0, %194 ]
  %207 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %202, i64 0, i32 1, i32 0, !dbg !7620
  %208 = bitcast i8** %207 to %struct.clusterNode**, !dbg !7620
  %209 = load %struct.clusterNode*, %struct.clusterNode** %208, align 8, !dbg !7620, !tbaa !745
  %210 = tail call i64 @mstime() #6, !dbg !7622
  %211 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 2, !dbg !7623
  %212 = load i32, i32* %211, align 8, !dbg !7623, !tbaa !927
  %213 = and i32 %212, 112, !dbg !7625
  %214 = icmp eq i32 %213, 0, !dbg !7625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7626
  br i1 %214, label %215, label %380, !dbg !7626, !llvm.loop !7627

; <label>:215:                                    ; preds = %201
  %216 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7629, !tbaa !760
  %217 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %216, i64 0, i32 2, !dbg !7629
  %218 = load i32, i32* %217, align 8, !dbg !7629, !tbaa !927
  %219 = and i32 %218, 2, !dbg !7629
  %220 = icmp eq i32 %219, 0, !dbg !7629
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7630
  br i1 %220, label %302, label %221, !dbg !7630

; <label>:221:                                    ; preds = %215
  %222 = and i32 %212, 1, !dbg !7631
  %223 = icmp eq i32 %222, 0, !dbg !7631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7632
  br i1 %223, label %302, label %224, !dbg !7632

; <label>:224:                                    ; preds = %221
  %225 = and i32 %212, 8, !dbg !7633
  %226 = icmp eq i32 %225, 0, !dbg !7633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7634
  br i1 %226, label %227, label %302, !dbg !7634

; <label>:227:                                    ; preds = %224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7639
  %228 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 6, !dbg !7640
  %229 = load i32, i32* %228, align 4, !dbg !7640, !tbaa !1041
  %230 = icmp sgt i32 %229, 0, !dbg !7641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7642
  br i1 %230, label %232, label %231, !dbg !7642

; <label>:231:                                    ; preds = %227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7643
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7645
  br label %280, !dbg !7645

; <label>:232:                                    ; preds = %227
  %233 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 7
  %234 = load %struct.clusterNode**, %struct.clusterNode*** %233, align 8, !tbaa !1044
  %235 = sext i32 %229 to i64
  %236 = and i64 %235, 1, !dbg !7642
  %237 = icmp eq i32 %229, 1, !dbg !7642
  br i1 %237, label %261, label %238, !dbg !7642

; <label>:238:                                    ; preds = %232
  %239 = sub nsw i64 %235, %236, !dbg !7642
  br label %240, !dbg !7642

; <label>:240:                                    ; preds = %461, %238
  %241 = phi i64 [ 0, %238 ], [ %463, %461 ]
  %242 = phi i32 [ 0, %238 ], [ %462, %461 ]
  %243 = phi i64 [ %239, %238 ], [ %464, %461 ]
  %244 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %234, i64 %241, !dbg !7647
  %245 = load %struct.clusterNode*, %struct.clusterNode** %244, align 8, !dbg !7647, !tbaa !760
  %246 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %245, i64 0, i32 2, !dbg !7647
  %247 = load i32, i32* %246, align 8, !dbg !7647, !tbaa !927
  %248 = and i32 %247, 8, !dbg !7647
  %249 = icmp eq i32 %248, 0, !dbg !7647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7648
  br i1 %249, label %250, label %252, !dbg !7648

; <label>:250:                                    ; preds = %240
  %251 = add nsw i32 %242, 1, !dbg !7649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7650
  br label %252, !dbg !7650

; <label>:252:                                    ; preds = %250, %240
  %253 = phi i32 [ %242, %240 ], [ %251, %250 ], !dbg !7651
  %254 = or i64 %241, 1, !dbg !7652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7642
  %255 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %234, i64 %254, !dbg !7647
  %256 = load %struct.clusterNode*, %struct.clusterNode** %255, align 8, !dbg !7647, !tbaa !760
  %257 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %256, i64 0, i32 2, !dbg !7647
  %258 = load i32, i32* %257, align 8, !dbg !7647, !tbaa !927
  %259 = and i32 %258, 8, !dbg !7647
  %260 = icmp eq i32 %259, 0, !dbg !7647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7648
  br i1 %260, label %459, label %461, !dbg !7648

; <label>:261:                                    ; preds = %461, %232
  %262 = phi i32 [ undef, %232 ], [ %462, %461 ]
  %263 = phi i64 [ 0, %232 ], [ %463, %461 ]
  %264 = phi i32 [ 0, %232 ], [ %462, %461 ]
  %265 = icmp eq i64 %236, 0, !dbg !7648
  br i1 %265, label %277, label %266, !dbg !7648

; <label>:266:                                    ; preds = %261
  %267 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %234, i64 %263, !dbg !7647
  %268 = load %struct.clusterNode*, %struct.clusterNode** %267, align 8, !dbg !7647, !tbaa !760
  %269 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %268, i64 0, i32 2, !dbg !7647
  %270 = load i32, i32* %269, align 8, !dbg !7647, !tbaa !927
  %271 = and i32 %270, 8, !dbg !7647
  %272 = icmp eq i32 %271, 0, !dbg !7647
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7648
  br i1 %272, label %273, label %275, !dbg !7648

; <label>:273:                                    ; preds = %266
  %274 = add nsw i32 %264, 1, !dbg !7649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7650
  br label %275, !dbg !7650

; <label>:275:                                    ; preds = %273, %266
  %276 = phi i32 [ %264, %266 ], [ %274, %273 ], !dbg !7651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7642
  br label %277, !dbg !7643

; <label>:277:                                    ; preds = %261, %275
  %278 = phi i32 [ %262, %261 ], [ %276, %275 ], !dbg !7651
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7643
  %279 = icmp eq i32 %278, 0, !dbg !7654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7645
  br i1 %279, label %280, label %289, !dbg !7645

; <label>:280:                                    ; preds = %231, %277
  %281 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 5, !dbg !7655
  %282 = load i32, i32* %281, align 8, !dbg !7655, !tbaa !1164
  %283 = icmp sgt i32 %282, 0, !dbg !7656
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7657
  br i1 %283, label %284, label %289, !dbg !7657

; <label>:284:                                    ; preds = %280
  %285 = and i32 %212, 256, !dbg !7658
  %286 = icmp eq i32 %285, 0, !dbg !7658
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7659
  br i1 %286, label %289, label %287, !dbg !7659

; <label>:287:                                    ; preds = %284
  %288 = add nsw i32 %204, 1, !dbg !7660
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7662
  br label %289, !dbg !7662

; <label>:289:                                    ; preds = %284, %287, %280, %277
  %290 = phi i32 [ 0, %287 ], [ 0, %284 ], [ 0, %280 ], [ %278, %277 ]
  %291 = phi i32 [ %288, %287 ], [ %204, %284 ], [ %204, %280 ], [ %204, %277 ], !dbg !7459
  %292 = icmp sgt i32 %290, %205, !dbg !7663
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7665
  br i1 %292, label %293, label %294, !dbg !7665

; <label>:293:                                    ; preds = %289
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7666
  br label %294, !dbg !7666

; <label>:294:                                    ; preds = %289, %293
  %295 = phi i32 [ %290, %293 ], [ %205, %289 ], !dbg !7459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7667
  %296 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %216, i64 0, i32 8, !dbg !7669
  %297 = load %struct.clusterNode*, %struct.clusterNode** %296, align 8, !dbg !7669, !tbaa !1025
  %298 = icmp eq %struct.clusterNode* %297, %209, !dbg !7670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7671
  br i1 %298, label %299, label %300, !dbg !7671

; <label>:299:                                    ; preds = %294
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7672
  br label %300, !dbg !7672

; <label>:300:                                    ; preds = %299, %294
  %301 = phi i32 [ %290, %299 ], [ %206, %294 ], !dbg !7459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7673
  br label %302, !dbg !7673

; <label>:302:                                    ; preds = %224, %221, %215, %300
  %303 = phi i32 [ %206, %224 ], [ %301, %300 ], [ %206, %221 ], [ %206, %215 ], !dbg !7459
  %304 = phi i32 [ %205, %224 ], [ %295, %300 ], [ %205, %221 ], [ %205, %215 ], !dbg !7459
  %305 = phi i32 [ %204, %224 ], [ %291, %300 ], [ %204, %221 ], [ %204, %215 ], !dbg !7459
  %306 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 19, !dbg !7674
  %307 = load %struct.clusterLink*, %struct.clusterLink** %306, align 8, !dbg !7674, !tbaa !1178
  %308 = icmp eq %struct.clusterLink* %307, null, !dbg !7676
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7677
  br i1 %308, label %309, label %310, !dbg !7677

; <label>:309:                                    ; preds = %302
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7678
  br label %345, !dbg !7678

; <label>:310:                                    ; preds = %302
  %311 = getelementptr inbounds %struct.clusterLink, %struct.clusterLink* %307, i64 0, i32 0, !dbg !7680
  %312 = load i64, i64* %311, align 8, !dbg !7680, !tbaa !2142
  %313 = sub nsw i64 %210, %312, !dbg !7681
  %314 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7682, !tbaa !2943
  %315 = icmp sgt i64 %313, %314, !dbg !7683
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7684
  br i1 %315, label %316, label %328, !dbg !7684

; <label>:316:                                    ; preds = %310
  %317 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 9, !dbg !7685
  %318 = load i64, i64* %317, align 8, !dbg !7685, !tbaa !1078
  %319 = icmp eq i64 %318, 0, !dbg !7686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7687
  br i1 %319, label %328, label %320, !dbg !7687

; <label>:320:                                    ; preds = %316
  %321 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 10, !dbg !7688
  %322 = load i64, i64* %321, align 8, !dbg !7688, !tbaa !1087
  %323 = icmp slt i64 %322, %318, !dbg !7689
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7690
  br i1 %323, label %324, label %328, !dbg !7690

; <label>:324:                                    ; preds = %320
  %325 = sub nsw i64 %210, %318, !dbg !7691
  %326 = sdiv i64 %314, 2, !dbg !7692
  %327 = icmp sgt i64 %325, %326, !dbg !7693
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7694
  br i1 %327, label %329, label %328, !dbg !7694

; <label>:328:                                    ; preds = %316, %324, %320, %310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7678
  br label %332, !dbg !7678

; <label>:329:                                    ; preds = %324
  tail call void @freeClusterLink(%struct.clusterLink* nonnull %307) #10, !dbg !7695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7697
  %330 = load %struct.clusterLink*, %struct.clusterLink** %306, align 8, !dbg !7698, !tbaa !1178
  %331 = icmp eq %struct.clusterLink* %330, null, !dbg !7699
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7678
  br i1 %331, label %345, label %332, !dbg !7678

; <label>:332:                                    ; preds = %328, %329
  %333 = phi %struct.clusterLink* [ %307, %328 ], [ %330, %329 ]
  %334 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 9, !dbg !7700
  %335 = load i64, i64* %334, align 8, !dbg !7700, !tbaa !1078
  %336 = icmp eq i64 %335, 0, !dbg !7701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7702
  br i1 %336, label %337, label %345, !dbg !7702

; <label>:337:                                    ; preds = %332
  %338 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 10, !dbg !7703
  %339 = load i64, i64* %338, align 8, !dbg !7703, !tbaa !1087
  %340 = sub nsw i64 %210, %339, !dbg !7704
  %341 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7705, !tbaa !2943
  %342 = sdiv i64 %341, 2, !dbg !7706
  %343 = icmp sgt i64 %340, %342, !dbg !7707
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7708
  br i1 %343, label %344, label %345, !dbg !7708

; <label>:344:                                    ; preds = %337
  tail call void @clusterSendPing(%struct.clusterLink* nonnull %333, i32 0) #10, !dbg !7709
  br label %380, !dbg !7711, !llvm.loop !7627

; <label>:345:                                    ; preds = %309, %329, %337, %332
  %346 = phi i1 [ true, %309 ], [ true, %329 ], [ false, %337 ], [ false, %332 ]
  %347 = phi %struct.clusterLink* [ null, %309 ], [ null, %329 ], [ %333, %337 ], [ %333, %332 ]
  %348 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7712, !tbaa !788
  %349 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %348, i64 0, i32 17, !dbg !7714
  %350 = load i64, i64* %349, align 8, !dbg !7714, !tbaa !1987
  %351 = icmp eq i64 %350, 0, !dbg !7715
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7716
  br i1 %351, label %364, label %352, !dbg !7716

; <label>:352:                                    ; preds = %345
  %353 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7717, !tbaa !760
  %354 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %353, i64 0, i32 2, !dbg !7717
  %355 = load i32, i32* %354, align 8, !dbg !7717, !tbaa !927
  %356 = and i32 %355, 1, !dbg !7717
  %357 = icmp eq i32 %356, 0, !dbg !7717
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7718
  br i1 %357, label %364, label %358, !dbg !7718

; <label>:358:                                    ; preds = %352
  %359 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %348, i64 0, i32 18, !dbg !7719
  %360 = load %struct.clusterNode*, %struct.clusterNode** %359, align 8, !dbg !7719, !tbaa !1993
  %361 = icmp eq %struct.clusterNode* %360, %209, !dbg !7720
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7721
  br i1 %361, label %362, label %364, !dbg !7721

; <label>:362:                                    ; preds = %358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7722
  br i1 %346, label %364, label %363, !dbg !7722

; <label>:363:                                    ; preds = %362
  tail call void @clusterSendPing(%struct.clusterLink* nonnull %347, i32 0) #10, !dbg !7723
  br label %380, !dbg !7725, !llvm.loop !7627

; <label>:364:                                    ; preds = %362, %352, %345, %358
  %365 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 9, !dbg !7726
  %366 = load i64, i64* %365, align 8, !dbg !7726, !tbaa !1078
  %367 = icmp eq i64 %366, 0, !dbg !7728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7729
  br i1 %367, label %380, label %368, !dbg !7729, !llvm.loop !7627

; <label>:368:                                    ; preds = %364
  %369 = sub nsw i64 %210, %366, !dbg !7730
  %370 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 259), align 8, !dbg !7732, !tbaa !2943
  %371 = icmp sgt i64 %369, %370, !dbg !7734
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7735
  br i1 %371, label %372, label %380, !dbg !7735

; <label>:372:                                    ; preds = %368
  %373 = load i32, i32* %211, align 8, !dbg !7736, !tbaa !927
  %374 = and i32 %373, 12, !dbg !7739
  %375 = icmp eq i32 %374, 0, !dbg !7739
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7740
  br i1 %375, label %376, label %380, !dbg !7740

; <label>:376:                                    ; preds = %372
  %377 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %209, i64 0, i32 1, i64 0, !dbg !7741
  tail call void (i32, i8*, ...) @serverLog(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.98, i64 0, i64 0), i8* nonnull %377) #6, !dbg !7743
  %378 = load i32, i32* %211, align 8, !dbg !7744, !tbaa !927
  %379 = or i32 %378, 4, !dbg !7744
  store i32 %379, i32* %211, align 8, !dbg !7744, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7745
  br label %380, !dbg !7745

; <label>:380:                                    ; preds = %368, %376, %372, %364, %201, %363, %344
  %381 = phi i32 [ %303, %344 ], [ %303, %363 ], [ %206, %201 ], [ %303, %364 ], [ %303, %372 ], [ %303, %376 ], [ %303, %368 ], !dbg !7746
  %382 = phi i32 [ %304, %344 ], [ %304, %363 ], [ %205, %201 ], [ %304, %364 ], [ %304, %372 ], [ %304, %376 ], [ %304, %368 ], !dbg !7747
  %383 = phi i32 [ %305, %344 ], [ %305, %363 ], [ %204, %201 ], [ %305, %364 ], [ %305, %372 ], [ %305, %376 ], [ %305, %368 ], !dbg !7748
  %384 = phi i32 [ %203, %344 ], [ %203, %363 ], [ %203, %201 ], [ %203, %364 ], [ %203, %372 ], [ 1, %376 ], [ %203, %368 ], !dbg !7397
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7749
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %385 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %198) #6, !dbg !7618
  %386 = icmp eq %struct.dictEntry* %385, null, !dbg !7619
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7617
  br i1 %386, label %387, label %201, !dbg !7617

; <label>:387:                                    ; preds = %380, %194
  %388 = phi i32 [ 0, %194 ], [ %381, %380 ], !dbg !7746
  %389 = phi i32 [ 0, %194 ], [ %382, %380 ], !dbg !7747
  %390 = phi i32 [ 0, %194 ], [ %383, %380 ], !dbg !7748
  %391 = phi i32 [ 0, %194 ], [ %384, %380 ], !dbg !7397
  tail call void @dictReleaseIterator(%struct.dictIterator* %198) #6, !dbg !7750
  %392 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7751, !tbaa !760
  %393 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %392, i64 0, i32 2, !dbg !7751
  %394 = load i32, i32* %393, align 8, !dbg !7751, !tbaa !927
  %395 = and i32 %394, 2, !dbg !7751
  %396 = icmp ne i32 %395, 0, !dbg !7751
  %397 = load i8*, i8** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 196), align 8, !dbg !7753
  %398 = icmp eq i8* %397, null, !dbg !7754
  %399 = and i1 %396, %398, !dbg !7755
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7755
  br i1 %399, label %400, label %413, !dbg !7755

; <label>:400:                                    ; preds = %387
  %401 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %392, i64 0, i32 8, !dbg !7756
  %402 = load %struct.clusterNode*, %struct.clusterNode** %401, align 8, !dbg !7756, !tbaa !1025
  %403 = icmp eq %struct.clusterNode* %402, null, !dbg !7757
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7758
  br i1 %403, label %413, label %404, !dbg !7758

; <label>:404:                                    ; preds = %400
  %405 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %402, i64 0, i32 2, !dbg !7759
  %406 = load i32, i32* %405, align 8, !dbg !7759, !tbaa !927
  %407 = and i32 %406, 64, !dbg !7759
  %408 = icmp eq i32 %407, 0, !dbg !7759
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7760
  br i1 %408, label %409, label %413, !dbg !7760

; <label>:409:                                    ; preds = %404
  %410 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %402, i64 0, i32 16, i64 0, !dbg !7761
  %411 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %402, i64 0, i32 17, !dbg !7763
  %412 = load i32, i32* %411, align 8, !dbg !7763, !tbaa !900
  tail call void @replicationSetMaster(i8* nonnull %410, i32 %412) #6, !dbg !7764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7765
  br label %413, !dbg !7765

; <label>:413:                                    ; preds = %404, %400, %409, %387
  tail call void @manualFailoverCheckTimeout() #10, !dbg !7766
  %414 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !7767, !tbaa !760
  %415 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %414, i64 0, i32 2, !dbg !7767
  %416 = load i32, i32* %415, align 8, !dbg !7767, !tbaa !927
  %417 = and i32 %416, 2, !dbg !7767
  %418 = icmp eq i32 %417, 0, !dbg !7767
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7769
  br i1 %418, label %450, label %419, !dbg !7769

; <label>:419:                                    ; preds = %413
  %420 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7770, !tbaa !788
  %421 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %420, i64 0, i32 17, !dbg !7773
  %422 = load i64, i64* %421, align 8, !dbg !7773, !tbaa !1987
  %423 = icmp eq i64 %422, 0, !dbg !7774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7775
  br i1 %423, label %438, label %424, !dbg !7775

; <label>:424:                                    ; preds = %419
  %425 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %420, i64 0, i32 20, !dbg !7776
  %426 = load i32, i32* %425, align 8, !dbg !7776, !tbaa !1990
  %427 = icmp eq i32 %426, 0, !dbg !7777
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7778
  br i1 %427, label %428, label %438, !dbg !7778

; <label>:428:                                    ; preds = %424
  %429 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %420, i64 0, i32 19, !dbg !7779
  %430 = load i64, i64* %429, align 8, !dbg !7779, !tbaa !1996
  %431 = icmp eq i64 %430, 0, !dbg !7780
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7781
  br i1 %431, label %438, label %432, !dbg !7781

; <label>:432:                                    ; preds = %428
  %433 = tail call i64 @replicationGetSlaveOffset() #6, !dbg !7782
  %434 = icmp eq i64 %430, %433, !dbg !7783
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7784
  br i1 %434, label %435, label %438, !dbg !7784

; <label>:435:                                    ; preds = %432
  %436 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7785, !tbaa !788
  %437 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %436, i64 0, i32 20, !dbg !7786
  store i32 1, i32* %437, align 8, !dbg !7787, !tbaa !1990
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.94, i64 0, i64 0)) #6, !dbg !7788
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7789
  br label %438, !dbg !7789

; <label>:438:                                    ; preds = %419, %424, %428, %432, %435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7790
  %439 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !7791, !tbaa !4165
  %440 = and i32 %439, 2, !dbg !7793
  %441 = icmp eq i32 %440, 0, !dbg !7793
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7794
  br i1 %441, label %442, label %443, !dbg !7794

; <label>:442:                                    ; preds = %438
  tail call void @clusterHandleSlaveFailover() #10, !dbg !7795
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7795
  br label %443, !dbg !7795

; <label>:443:                                    ; preds = %438, %442
  %444 = icmp ne i32 %390, 0, !dbg !7796
  %445 = icmp sgt i32 %389, 1, !dbg !7798
  %446 = and i1 %445, %444, !dbg !7799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7799
  br i1 %446, label %447, label %450, !dbg !7799

; <label>:447:                                    ; preds = %443
  %448 = icmp eq i32 %388, %389, !dbg !7800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7801
  br i1 %448, label %449, label %450, !dbg !7801

; <label>:449:                                    ; preds = %447
  tail call void @clusterHandleSlaveMigration(i32 %388) #10, !dbg !7802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7802
  br label %450, !dbg !7802

; <label>:450:                                    ; preds = %413, %443, %447, %449
  %451 = icmp eq i32 %391, 0, !dbg !7803
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7805
  br i1 %451, label %452, label %457, !dbg !7805

; <label>:452:                                    ; preds = %450
  %453 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7806, !tbaa !788
  %454 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %453, i64 0, i32 2, !dbg !7807
  %455 = load i32, i32* %454, align 8, !dbg !7807, !tbaa !1770
  %456 = icmp eq i32 %455, 1, !dbg !7808
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7809
  br i1 %456, label %457, label %458, !dbg !7809

; <label>:457:                                    ; preds = %450, %452
  tail call void @clusterUpdateState() #10, !dbg !7810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7810
  br label %458, !dbg !7810

; <label>:458:                                    ; preds = %457, %452
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7811
  ret void, !dbg !7811

; <label>:459:                                    ; preds = %252
  %460 = add nsw i32 %253, 1, !dbg !7649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7650
  br label %461, !dbg !7650

; <label>:461:                                    ; preds = %459, %252
  %462 = phi i32 [ %253, %252 ], [ %460, %459 ], !dbg !7651
  %463 = add nuw nsw i64 %241, 2, !dbg !7652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7642
  %464 = add i64 %243, -2, !dbg !7642
  %465 = icmp eq i64 %464, 0, !dbg !7642
  br i1 %465, label %261, label %240, !dbg !7642, !llvm.loop !3050
}

; Function Attrs: noredzone
declare dso_local i8* @zstrdup(i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetTcpNonBlockBindConnect(i8*, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterBeforeSleep() local_unnamed_addr #0 !dbg !7812 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7817, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 22, !dbg !7819
  %3 = load i32, i32* %2, align 8, !dbg !7819, !tbaa !1475
  %4 = and i32 %3, 1, !dbg !7820
  %5 = icmp eq i32 %4, 0, !dbg !7820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7821
  br i1 %5, label %10, label %6, !dbg !7821

; <label>:6:                                      ; preds = %0
  tail call void @clusterHandleSlaveFailover() #10, !dbg !7822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7822
  %7 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7823, !tbaa !788
  %8 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %7, i64 0, i32 22
  %9 = load i32, i32* %8, align 8, !dbg !7825, !tbaa !1475
  br label %10, !dbg !7822

; <label>:10:                                     ; preds = %0, %6
  %11 = phi i32* [ %2, %0 ], [ %8, %6 ], !dbg !7825
  %12 = phi i32 [ %3, %0 ], [ %9, %6 ], !dbg !7825
  %13 = and i32 %12, 2, !dbg !7826
  %14 = icmp eq i32 %13, 0, !dbg !7826
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7827
  br i1 %14, label %19, label %15, !dbg !7827

; <label>:15:                                     ; preds = %10
  tail call void @clusterUpdateState() #10, !dbg !7828
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7828
  %16 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7829, !tbaa !788
  %17 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %16, i64 0, i32 22
  %18 = load i32, i32* %17, align 8, !dbg !7830, !tbaa !1475
  br label %19, !dbg !7828

; <label>:19:                                     ; preds = %10, %15
  %20 = phi i32* [ %11, %10 ], [ %17, %15 ], !dbg !7830
  %21 = phi i32 [ %12, %10 ], [ %18, %15 ], !dbg !7830
  %22 = and i32 %21, 4, !dbg !7831
  %23 = icmp eq i32 %22, 0, !dbg !7831
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7832
  br i1 %23, label %32, label %24, !dbg !7832

; <label>:24:                                     ; preds = %19
  %25 = and i32 %21, 8, !dbg !7833
  %26 = tail call i32 @clusterSaveConfig(i32 %25) #6, !dbg !7837
  %27 = icmp eq i32 %26, -1, !dbg !7838
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7839
  br i1 %27, label %28, label %29, !dbg !7839

; <label>:28:                                     ; preds = %24
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !7840
  tail call void @exit(i32 1) #8, !dbg !7841
  unreachable

; <label>:29:                                     ; preds = %24
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7843
  %30 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7844, !tbaa !788
  %31 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %30, i64 0, i32 22, !dbg !7845
  br label %32, !dbg !7843

; <label>:32:                                     ; preds = %19, %29
  %33 = phi i32* [ %20, %19 ], [ %31, %29 ], !dbg !7845
  store i32 0, i32* %33, align 8, !dbg !7846, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7847
  ret void, !dbg !7847
}

; Function Attrs: noredzone nounwind
define dso_local void @bitmapSetBit(i8* nocapture, i32) local_unnamed_addr #0 !dbg !7848 {
  %3 = sdiv i32 %1, 8, !dbg !7856
  %4 = sext i32 %3 to i64, !dbg !7857
  %5 = and i32 %1, 7, !dbg !7859
  %6 = shl i32 1, %5, !dbg !7861
  %7 = getelementptr inbounds i8, i8* %0, i64 %4, !dbg !7862
  %8 = load i8, i8* %7, align 1, !dbg !7863, !tbaa !745
  %9 = trunc i32 %6 to i8, !dbg !7863
  %10 = or i8 %8, %9, !dbg !7863
  store i8 %10, i8* %7, align 1, !dbg !7863, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7864
  ret void, !dbg !7864
}

; Function Attrs: noredzone nounwind
define dso_local void @bitmapClearBit(i8* nocapture, i32) local_unnamed_addr #0 !dbg !2282 {
  %3 = sdiv i32 %1, 8, !dbg !7867
  %4 = sext i32 %3 to i64, !dbg !7868
  %5 = and i32 %1, 7, !dbg !7870
  %6 = shl i32 1, %5, !dbg !7872
  %7 = getelementptr inbounds i8, i8* %0, i64 %4, !dbg !7873
  %8 = load i8, i8* %7, align 1, !dbg !7874, !tbaa !745
  %9 = trunc i32 %6 to i8, !dbg !7874
  %10 = xor i8 %9, -1, !dbg !7874
  %11 = and i8 %8, %10, !dbg !7874
  store i8 %11, i8* %7, align 1, !dbg !7874, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7875
  ret void, !dbg !7875
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterMastersHaveSlaves() local_unnamed_addr #0 !dbg !7876 {
  %1 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7883, !tbaa !788
  %2 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1, i64 0, i32 4, !dbg !7884
  %3 = load %struct.dict*, %struct.dict** %2, align 8, !dbg !7884, !tbaa !837
  %4 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %3) #6, !dbg !7885
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7888
  %5 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #6, !dbg !7889
  %6 = icmp eq %struct.dictEntry* %5, null, !dbg !7891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7888
  br i1 %6, label %25, label %7, !dbg !7888

; <label>:7:                                      ; preds = %0, %21
  %8 = phi %struct.dictEntry* [ %23, %21 ], [ %5, %0 ]
  %9 = phi i32 [ %22, %21 ], [ 0, %0 ]
  %10 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %8, i64 0, i32 1, i32 0, !dbg !7892
  %11 = bitcast i8** %10 to %struct.clusterNode**, !dbg !7892
  %12 = load %struct.clusterNode*, %struct.clusterNode** %11, align 8, !dbg !7892, !tbaa !745
  %13 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 2, !dbg !7894
  %14 = load i32, i32* %13, align 8, !dbg !7894, !tbaa !927
  %15 = and i32 %14, 2, !dbg !7894
  %16 = icmp eq i32 %15, 0, !dbg !7894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7896
  br i1 %16, label %17, label %21, !dbg !7896, !llvm.loop !7897

; <label>:17:                                     ; preds = %7
  %18 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %12, i64 0, i32 6, !dbg !7899
  %19 = load i32, i32* %18, align 4, !dbg !7899, !tbaa !1041
  %20 = add nsw i32 %19, %9, !dbg !7900
  br label %21, !dbg !7898

; <label>:21:                                     ; preds = %7, %17
  %22 = phi i32 [ %20, %17 ], [ %9, %7 ], !dbg !7901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7902
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %23 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %4) #6, !dbg !7889
  %24 = icmp eq %struct.dictEntry* %23, null, !dbg !7891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7888
  br i1 %24, label %25, label %7, !dbg !7888

; <label>:25:                                     ; preds = %21, %0
  %26 = phi i32 [ 0, %0 ], [ %22, %21 ], !dbg !7887
  tail call void @dictReleaseIterator(%struct.dictIterator* %4) #6, !dbg !7903
  %27 = icmp ne i32 %26, 0, !dbg !7904
  %28 = zext i1 %27 to i32, !dbg !7904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7905
  ret i32 %28, !dbg !7905
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeSetSlotBit(%struct.clusterNode* nocapture, i32) local_unnamed_addr #0 !dbg !7906 {
  %3 = sdiv i32 %1, 8, !dbg !7916
  %4 = sext i32 %3 to i64, !dbg !7917
  %5 = and i32 %1, 7, !dbg !7919
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %4, !dbg !7921
  %7 = load i8, i8* %6, align 1, !dbg !7921, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !7921
  %9 = shl i32 1, %5, !dbg !7922
  %10 = and i32 %9, %8, !dbg !7923
  %11 = icmp ne i32 %10, 0, !dbg !7924
  %12 = zext i1 %11 to i32, !dbg !7924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7925
  %13 = trunc i32 %9 to i8, !dbg !7932
  %14 = or i8 %7, %13, !dbg !7932
  store i8 %14, i8* %6, align 1, !dbg !7932, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7934
  br i1 %11, label %52, label %15, !dbg !7934

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !7935
  %17 = load i32, i32* %16, align 8, !dbg !7938, !tbaa !1164
  %18 = add nsw i32 %17, 1, !dbg !7938
  store i32 %18, i32* %16, align 8, !dbg !7938, !tbaa !1164
  %19 = icmp eq i32 %17, 0, !dbg !7939
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7941
  br i1 %19, label %20, label %52, !dbg !7941

; <label>:20:                                     ; preds = %15
  %21 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !7942, !tbaa !788
  %22 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %21, i64 0, i32 4, !dbg !7944
  %23 = load %struct.dict*, %struct.dict** %22, align 8, !dbg !7944, !tbaa !837
  %24 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %23) #6, !dbg !7945
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7948
  %25 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %24) #6, !dbg !7949
  %26 = icmp eq %struct.dictEntry* %25, null, !dbg !7951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7948
  br i1 %26, label %45, label %27, !dbg !7948

; <label>:27:                                     ; preds = %20, %41
  %28 = phi %struct.dictEntry* [ %43, %41 ], [ %25, %20 ]
  %29 = phi i32 [ %42, %41 ], [ 0, %20 ]
  %30 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %28, i64 0, i32 1, i32 0, !dbg !7952
  %31 = bitcast i8** %30 to %struct.clusterNode**, !dbg !7952
  %32 = load %struct.clusterNode*, %struct.clusterNode** %31, align 8, !dbg !7952, !tbaa !745
  %33 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %32, i64 0, i32 2, !dbg !7954
  %34 = load i32, i32* %33, align 8, !dbg !7954, !tbaa !927
  %35 = and i32 %34, 2, !dbg !7954
  %36 = icmp eq i32 %35, 0, !dbg !7954
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7955
  br i1 %36, label %37, label %41, !dbg !7955, !llvm.loop !7897

; <label>:37:                                     ; preds = %27
  %38 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %32, i64 0, i32 6, !dbg !7956
  %39 = load i32, i32* %38, align 4, !dbg !7956, !tbaa !1041
  %40 = add nsw i32 %39, %29, !dbg !7957
  br label %41, !dbg !7958

; <label>:41:                                     ; preds = %27, %37
  %42 = phi i32 [ %40, %37 ], [ %29, %27 ], !dbg !7959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7960
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %43 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %24) #6, !dbg !7949
  %44 = icmp eq %struct.dictEntry* %43, null, !dbg !7951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7948
  br i1 %44, label %45, label %27, !dbg !7948

; <label>:45:                                     ; preds = %41, %20
  %46 = phi i32 [ 0, %20 ], [ %42, %41 ], !dbg !7947
  tail call void @dictReleaseIterator(%struct.dictIterator* %24) #6, !dbg !7961
  %47 = icmp eq i32 %46, 0, !dbg !7962
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7964
  br i1 %47, label %52, label %48, !dbg !7964

; <label>:48:                                     ; preds = %45
  %49 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !7965
  %50 = load i32, i32* %49, align 8, !dbg !7966, !tbaa !927
  %51 = or i32 %50, 256, !dbg !7966
  store i32 %51, i32* %49, align 8, !dbg !7966, !tbaa !927
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7967
  br label %52, !dbg !7967

; <label>:52:                                     ; preds = %2, %45, %15, %48
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7968
  ret i32 %12, !dbg !7968
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterNodeClearSlotBit(%struct.clusterNode* nocapture, i32) local_unnamed_addr #0 !dbg !2255 {
  %3 = sdiv i32 %1, 8, !dbg !7974
  %4 = sext i32 %3 to i64, !dbg !7975
  %5 = and i32 %1, 7, !dbg !7977
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %4, !dbg !7979
  %7 = load i8, i8* %6, align 1, !dbg !7979, !tbaa !745
  %8 = zext i8 %7 to i32, !dbg !7979
  %9 = shl i32 1, %5, !dbg !7980
  %10 = and i32 %9, %8, !dbg !7981
  %11 = icmp ne i32 %10, 0, !dbg !7982
  %12 = zext i1 %11 to i32, !dbg !7982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7983
  %13 = trunc i32 %9 to i8, !dbg !7990
  %14 = xor i8 %13, -1, !dbg !7990
  %15 = and i8 %7, %14, !dbg !7990
  store i8 %15, i8* %6, align 1, !dbg !7990, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7992
  br i1 %11, label %16, label %20, !dbg !7992

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 5, !dbg !7993
  %18 = load i32, i32* %17, align 8, !dbg !7994, !tbaa !1164
  %19 = add nsw i32 %18, -1, !dbg !7994
  store i32 %19, i32* %17, align 8, !dbg !7994, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7995
  br label %20, !dbg !7995

; <label>:20:                                     ; preds = %2, %16
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !7996
  ret i32 %12, !dbg !7996
}

; Function Attrs: noredzone nounwind
define dso_local i32 @verifyClusterConfigWithData() local_unnamed_addr #0 !dbg !7997 {
  %1 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !8002, !tbaa !4165
  %2 = and i32 %1, 4, !dbg !8004
  %3 = icmp eq i32 %2, 0, !dbg !8004
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8005
  br i1 %3, label %4, label %78, !dbg !8005

; <label>:4:                                      ; preds = %0
  %5 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8006, !tbaa !760
  %6 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %5, i64 0, i32 2, !dbg !8006
  %7 = load i32, i32* %6, align 8, !dbg !8006, !tbaa !927
  %8 = and i32 %7, 2, !dbg !8006
  %9 = icmp eq i32 %8, 0, !dbg !8006
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8008
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8009
  br i1 %9, label %10, label %80, !dbg !8008

; <label>:10:                                     ; preds = %4
  %11 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 112), align 8, !dbg !8011, !tbaa !8014
  %12 = icmp sgt i32 %11, 1, !dbg !8015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8016
  br i1 %12, label %13, label %29, !dbg !8016

; <label>:13:                                     ; preds = %10
  %14 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !tbaa !8017
  %15 = sext i32 %11 to i64, !dbg !8016
  br label %16, !dbg !8016

; <label>:16:                                     ; preds = %13, %26
  %17 = phi i64 [ 1, %13 ], [ %27, %26 ]
  %18 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %14, i64 %17, i32 0, !dbg !8018
  %19 = load %struct.dict*, %struct.dict** %18, align 8, !dbg !8018, !tbaa !8021
  %20 = getelementptr inbounds %struct.dict, %struct.dict* %19, i64 0, i32 2, i64 0, i32 3, !dbg !8018
  %21 = load i64, i64* %20, align 8, !dbg !8018, !tbaa !5132
  %22 = getelementptr inbounds %struct.dict, %struct.dict* %19, i64 0, i32 2, i64 1, i32 3, !dbg !8018
  %23 = load i64, i64* %22, align 8, !dbg !8018, !tbaa !5132
  %24 = sub i64 0, %23, !dbg !8018
  %25 = icmp eq i64 %21, %24, !dbg !8018
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8023
  br i1 %25, label %26, label %78, !dbg !8023

; <label>:26:                                     ; preds = %16
  %27 = add nuw nsw i64 %17, 1, !dbg !8024
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8025
  %28 = icmp slt i64 %27, %15, !dbg !8015
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8016
  br i1 %28, label %16, label %29, !dbg !8016, !llvm.loop !8026

; <label>:29:                                     ; preds = %26, %10
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8028
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8030
  br label %30, !dbg !8030

; <label>:30:                                     ; preds = %67, %29
  %31 = phi i64 [ 0, %29 ], [ %69, %67 ]
  %32 = phi i32 [ 0, %29 ], [ %68, %67 ]
  %33 = trunc i64 %31 to i32, !dbg !8031
  %34 = tail call i32 @countKeysInSlot(i32 %33) #6, !dbg !8031
  %35 = icmp eq i32 %34, 0, !dbg !8031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8035
  br i1 %35, label %67, label %36, !dbg !8035

; <label>:36:                                     ; preds = %30
  %37 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8036, !tbaa !788
  %38 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %37, i64 0, i32 8, i64 %31, !dbg !8038
  %39 = load %struct.clusterNode*, %struct.clusterNode** %38, align 8, !dbg !8038, !tbaa !760
  %40 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8039, !tbaa !760
  %41 = icmp eq %struct.clusterNode* %39, %40, !dbg !8040
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8041
  br i1 %41, label %67, label %42, !dbg !8041

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %37, i64 0, i32 7, i64 %31, !dbg !8042
  %44 = load %struct.clusterNode*, %struct.clusterNode** %43, align 8, !dbg !8042, !tbaa !760
  %45 = icmp eq %struct.clusterNode* %44, null, !dbg !8043
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8044
  br i1 %45, label %46, label %67, !dbg !8044

; <label>:46:                                     ; preds = %42
  %47 = add nsw i32 %32, 1, !dbg !8045
  %48 = icmp eq %struct.clusterNode* %39, null, !dbg !8046
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8048
  br i1 %48, label %49, label %60, !dbg !8048

; <label>:49:                                     ; preds = %46
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.102, i64 0, i64 0), i32 %33) #6, !dbg !8049
  %50 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8051, !tbaa !760
  %51 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8055, !tbaa !788
  %52 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %51, i64 0, i32 8, i64 %31, !dbg !8056
  %53 = load %struct.clusterNode*, %struct.clusterNode** %52, align 8, !dbg !8056, !tbaa !760
  %54 = icmp eq %struct.clusterNode* %53, null, !dbg !8056
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8057
  br i1 %54, label %55, label %59, !dbg !8057

; <label>:55:                                     ; preds = %49
  %56 = tail call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %50, i32 %33) #6, !dbg !8058
  %57 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8059, !tbaa !788
  %58 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %57, i64 0, i32 8, i64 %31, !dbg !8060
  store %struct.clusterNode* %50, %struct.clusterNode** %58, align 8, !dbg !8061, !tbaa !760
  br label %59, !dbg !8062

; <label>:59:                                     ; preds = %49, %55
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8063
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8064
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8065
  br label %67, !dbg !8065

; <label>:60:                                     ; preds = %46
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.103, i64 0, i64 0), i32 %33) #6, !dbg !8066
  %61 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8068, !tbaa !788
  %62 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %61, i64 0, i32 8, i64 %31, !dbg !8069
  %63 = bitcast %struct.clusterNode** %62 to i64*, !dbg !8069
  %64 = load i64, i64* %63, align 8, !dbg !8069, !tbaa !760
  %65 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %61, i64 0, i32 7, i64 %31, !dbg !8070
  %66 = bitcast %struct.clusterNode** %65 to i64*, !dbg !8071
  store i64 %64, i64* %66, align 8, !dbg !8071, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %67

; <label>:67:                                     ; preds = %42, %30, %59, %60, %36
  %68 = phi i32 [ %32, %36 ], [ %32, %42 ], [ %47, %59 ], [ %47, %60 ], [ %32, %30 ], !dbg !8072
  %69 = add nuw nsw i64 %31, 1, !dbg !8073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8074
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8030
  %70 = icmp eq i64 %69, 16384, !dbg !8075
  br i1 %70, label %71, label %30, !dbg !8030, !llvm.loop !8076

; <label>:71:                                     ; preds = %67
  %72 = icmp eq i32 %68, 0, !dbg !8078
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8080
  br i1 %72, label %78, label %73, !dbg !8080

; <label>:73:                                     ; preds = %71
  %74 = tail call i32 @clusterSaveConfig(i32 1) #6, !dbg !8083
  %75 = icmp eq i32 %74, -1, !dbg !8084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8085
  br i1 %75, label %76, label %77, !dbg !8085

; <label>:76:                                     ; preds = %73
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0)) #6, !dbg !8086
  tail call void @exit(i32 1) #8, !dbg !8087
  unreachable

; <label>:77:                                     ; preds = %73
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8088
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8089
  br label %78, !dbg !8089

; <label>:78:                                     ; preds = %16, %77, %71, %0
  %79 = phi i32 [ 0, %0 ], [ 0, %71 ], [ 0, %77 ], [ -1, %16 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8090
  br label %80, !dbg !8091

; <label>:80:                                     ; preds = %78, %4
  %81 = phi i32 [ 0, %4 ], [ %79, %78 ], !dbg !8072
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8091
  ret i32 %81, !dbg !8091
}

; Function Attrs: noredzone
declare dso_local i8* @sdscat(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @sdsIncrLen(i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @clusterGenNodeDescription(%struct.clusterNode*) local_unnamed_addr #0 !dbg !8092 {
  %2 = tail call i8* @sdsempty() #6, !dbg !8105
  %3 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 1, i64 0, !dbg !8106
  %4 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 16, i64 0, !dbg !8107
  %5 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 17, !dbg !8108
  %6 = load i32, i32* %5, align 8, !dbg !8108, !tbaa !900
  %7 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 18, !dbg !8109
  %8 = load i32, i32* %7, align 4, !dbg !8109, !tbaa !907
  %9 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.107, i64 0, i64 0), i8* nonnull %3, i8* nonnull %4, i32 %6, i32 %8) #6, !dbg !8110
  %10 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 2, !dbg !8112
  %11 = load i32, i32* %10, align 8, !dbg !8112, !tbaa !927
  %12 = trunc i32 %11 to i16, !dbg !8113
  %13 = tail call i8* @representClusterNodeFlags(i8* %9, i16 zeroext %12) #10, !dbg !8114
  %14 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 8, !dbg !8115
  %15 = load %struct.clusterNode*, %struct.clusterNode** %14, align 8, !dbg !8115, !tbaa !1025
  %16 = icmp eq %struct.clusterNode* %15, null, !dbg !8117
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8118
  br i1 %16, label %20, label %17, !dbg !8118

; <label>:17:                                     ; preds = %1
  %18 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %15, i64 0, i32 1, i64 0, !dbg !8119
  %19 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i64 0, i64 0), i8* nonnull %18) #6, !dbg !8120
  br label %22, !dbg !8121

; <label>:20:                                     ; preds = %1
  %21 = tail call i8* @sdscatlen(i8* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0), i64 3) #6, !dbg !8122
  br label %22

; <label>:22:                                     ; preds = %20, %17
  %23 = phi i8* [ %19, %17 ], [ %21, %20 ], !dbg !8123
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 9, !dbg !8124
  %25 = load i64, i64* %24, align 8, !dbg !8124, !tbaa !1078
  %26 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 10, !dbg !8125
  %27 = load i64, i64* %26, align 8, !dbg !8125, !tbaa !1087
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 3, !dbg !8126
  %29 = load i64, i64* %28, align 8, !dbg !8126, !tbaa !1093
  %30 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 19, !dbg !8127
  %31 = load %struct.clusterLink*, %struct.clusterLink** %30, align 8, !dbg !8127, !tbaa !1178
  %32 = icmp eq %struct.clusterLink* %31, null, !dbg !8128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8129
  br i1 %32, label %33, label %38, !dbg !8129

; <label>:33:                                     ; preds = %22
  %34 = load i32, i32* %10, align 8, !dbg !8130, !tbaa !927
  %35 = and i32 %34, 16, !dbg !8131
  %36 = icmp eq i32 %35, 0, !dbg !8129
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8129
  %37 = select i1 %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), !dbg !8129
  br label %38, !dbg !8129

; <label>:38:                                     ; preds = %22, %33
  %39 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), %22 ], [ %37, %33 ]
  %40 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.110, i64 0, i64 0), i64 %25, i64 %27, i64 %29, i8* %39) #6, !dbg !8132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8135
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8136
  br label %41, !dbg !8136

; <label>:41:                                     ; preds = %38, %77
  %42 = phi i32 [ 0, %38 ], [ %81, %77 ]
  %43 = phi i8* [ %40, %38 ], [ %79, %77 ]
  %44 = phi i32 [ -1, %38 ], [ %78, %77 ]
  %45 = sdiv i32 %42, 8, !dbg !8144
  %46 = sext i32 %45 to i64, !dbg !8145
  %47 = and i32 %42, 7, !dbg !8147
  %48 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %0, i64 0, i32 4, i64 %46, !dbg !8149
  %49 = load i8, i8* %48, align 1, !dbg !8149, !tbaa !745
  %50 = zext i8 %49 to i32, !dbg !8149
  %51 = shl i32 1, %47, !dbg !8150
  %52 = and i32 %51, %50, !dbg !8151
  %53 = icmp ne i32 %52, 0, !dbg !8152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8153
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8154
  %54 = icmp eq i32 %44, -1, !dbg !8155
  %55 = and i1 %54, %53, !dbg !8158
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8158
  br i1 %55, label %56, label %57, !dbg !8158

; <label>:56:                                     ; preds = %41
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8159
  br label %57, !dbg !8159

; <label>:57:                                     ; preds = %56, %41
  %58 = phi i32 [ %42, %56 ], [ %44, %41 ], !dbg !8160
  %59 = icmp eq i32 %58, -1, !dbg !8161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8163
  br i1 %59, label %77, label %60, !dbg !8163

; <label>:60:                                     ; preds = %57
  %61 = xor i1 %53, true, !dbg !8164
  %62 = icmp eq i32 %42, 16383, !dbg !8165
  %63 = or i1 %62, %61, !dbg !8166
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8166
  br i1 %63, label %64, label %77, !dbg !8166

; <label>:64:                                     ; preds = %60
  %65 = and i1 %62, %53, !dbg !8167
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8167
  br i1 %65, label %66, label %67, !dbg !8167

; <label>:66:                                     ; preds = %64
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8170
  br label %67, !dbg !8170

; <label>:67:                                     ; preds = %66, %64
  %68 = phi i32 [ 16384, %66 ], [ %42, %64 ], !dbg !8171
  %69 = add nsw i32 %68, -1, !dbg !8172
  %70 = icmp eq i32 %58, %69, !dbg !8174
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8175
  br i1 %70, label %71, label %73, !dbg !8175

; <label>:71:                                     ; preds = %67
  %72 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i64 0, i64 0), i32 %58) #6, !dbg !8176
  br label %75, !dbg !8178

; <label>:73:                                     ; preds = %67
  %74 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i64 0, i64 0), i32 %58, i32 %69) #6, !dbg !8179
  br label %75

; <label>:75:                                     ; preds = %73, %71
  %76 = phi i8* [ %72, %71 ], [ %74, %73 ], !dbg !8181
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8182
  br label %77, !dbg !8182

; <label>:77:                                     ; preds = %57, %60, %75
  %78 = phi i32 [ -1, %75 ], [ %58, %60 ], [ -1, %57 ], !dbg !8183
  %79 = phi i8* [ %76, %75 ], [ %43, %60 ], [ %43, %57 ], !dbg !8160
  %80 = phi i32 [ %68, %75 ], [ %42, %60 ], [ %42, %57 ], !dbg !8171
  %81 = add nsw i32 %80, 1, !dbg !8184
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8185
  %82 = icmp slt i32 %80, 16383, !dbg !8186
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8136
  br i1 %82, label %41, label %83, !dbg !8136, !llvm.loop !8187

; <label>:83:                                     ; preds = %77
  %84 = load i32, i32* %10, align 8, !dbg !8189, !tbaa !927
  %85 = and i32 %84, 16, !dbg !8191
  %86 = icmp eq i32 %85, 0, !dbg !8191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8192
  br i1 %86, label %109, label %87, !dbg !8192

; <label>:87:                                     ; preds = %83
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8196
  br label %88, !dbg !8196

; <label>:88:                                     ; preds = %105, %87
  %89 = phi i64 [ 0, %87 ], [ %107, %105 ]
  %90 = phi i8* [ %79, %87 ], [ %106, %105 ]
  %91 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8197, !tbaa !788
  %92 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %91, i64 0, i32 6, i64 %89, !dbg !8201
  %93 = load %struct.clusterNode*, %struct.clusterNode** %92, align 8, !dbg !8201, !tbaa !760
  %94 = icmp eq %struct.clusterNode* %93, null, !dbg !8201
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8202
  br i1 %94, label %95, label %99, !dbg !8202

; <label>:95:                                     ; preds = %88
  %96 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %91, i64 0, i32 7, i64 %89, !dbg !8203
  %97 = load %struct.clusterNode*, %struct.clusterNode** %96, align 8, !dbg !8203, !tbaa !760
  %98 = icmp eq %struct.clusterNode* %97, null, !dbg !8203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8205
  br i1 %98, label %105, label %99, !dbg !8205

; <label>:99:                                     ; preds = %95, %88
  %100 = phi %struct.clusterNode* [ %93, %88 ], [ %97, %95 ]
  %101 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i64 0, i64 0), %88 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.116, i64 0, i64 0), %95 ]
  %102 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %100, i64 0, i32 1, i64 0, !dbg !8206
  %103 = trunc i64 %89 to i32, !dbg !8206
  %104 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %90, i8* %101, i32 %103, i8* nonnull %102) #6, !dbg !8206
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8206
  br label %105, !dbg !8208

; <label>:105:                                    ; preds = %99, %95
  %106 = phi i8* [ %90, %95 ], [ %104, %99 ], !dbg !8160
  %107 = add nuw nsw i64 %89, 1, !dbg !8208
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8196
  %108 = icmp eq i64 %107, 16384, !dbg !8210
  br i1 %108, label %109, label %88, !dbg !8196, !llvm.loop !8211

; <label>:109:                                    ; preds = %105, %83
  %110 = phi i8* [ %79, %83 ], [ %106, %105 ], !dbg !8213
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8214
  ret i8* %110, !dbg !8214
}

; Function Attrs: noredzone
declare dso_local i8* @sdscatsds(i8*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i8* @clusterGetMessageTypeString(i32) local_unnamed_addr #0 !dbg !8215 {
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8221
  %2 = icmp ult i32 %0, 10, !dbg !8221
  br i1 %2, label %3, label %7, !dbg !8221

; <label>:3:                                      ; preds = %1
  %4 = sext i32 %0 to i64, !dbg !8221
  %5 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.clusterCommand.284, i64 0, i64 %4, !dbg !8221
  %6 = load i8*, i8** %5, align 8, !dbg !8221
  br label %7, !dbg !8221

; <label>:7:                                      ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), %1 ], !dbg !8222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8222
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8224
  ret i8* %8, !dbg !8224
}

; Function Attrs: noredzone nounwind
define dso_local i32 @getSlotOrReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #0 !dbg !8225 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !8357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8357
  %5 = call i32 @getLongLongFromObject(%struct.redisObject* %1, i64* nonnull %3) #6, !dbg !8359
  %6 = icmp ne i32 %5, 0, !dbg !8361
  %7 = load i64, i64* %3, align 8, !dbg !8362
  %8 = icmp ugt i64 %7, 16383, !dbg !8363
  %9 = or i1 %6, %8, !dbg !8363
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8363
  br i1 %9, label %10, label %11, !dbg !8363

; <label>:10:                                     ; preds = %2
  call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !8364
  br label %13, !dbg !8366

; <label>:11:                                     ; preds = %2
  %12 = trunc i64 %7 to i32, !dbg !8367
  br label %13, !dbg !8368

; <label>:13:                                     ; preds = %11, %10
  %14 = phi i32 [ -1, %10 ], [ %12, %11 ], !dbg !8369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8370
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !8371
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8371
  ret i32 %14, !dbg !8371
}

; Function Attrs: noredzone
declare dso_local i32 @getLongLongFromObject(%struct.redisObject*, i64*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyError(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterReplyMultiBulkSlots(%struct.client*) local_unnamed_addr #0 !dbg !8372 {
  %2 = tail call i8* @addDeferredMultiBulkLength(%struct.client* %0) #6, !dbg !8394
  %3 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8396, !tbaa !788
  %4 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %3, i64 0, i32 4, !dbg !8397
  %5 = load %struct.dict*, %struct.dict** %4, align 8, !dbg !8397, !tbaa !837
  %6 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %5) #6, !dbg !8398
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8400
  %7 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #6, !dbg !8401
  %8 = icmp eq %struct.dictEntry* %7, null, !dbg !8403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8400
  br i1 %8, label %117, label %9, !dbg !8400

; <label>:9:                                      ; preds = %1, %113
  %10 = phi %struct.dictEntry* [ %115, %113 ], [ %7, %1 ]
  %11 = phi i32 [ %114, %113 ], [ 0, %1 ]
  %12 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %10, i64 0, i32 1, i32 0, !dbg !8404
  %13 = bitcast i8** %12 to %struct.clusterNode**, !dbg !8404
  %14 = load %struct.clusterNode*, %struct.clusterNode** %13, align 8, !dbg !8404, !tbaa !745
  %15 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 2, !dbg !8408
  %16 = load i32, i32* %15, align 8, !dbg !8408, !tbaa !927
  %17 = and i32 %16, 1, !dbg !8408
  %18 = icmp eq i32 %17, 0, !dbg !8408
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8410
  br i1 %18, label %113, label %19, !dbg !8410, !llvm.loop !8411

; <label>:19:                                     ; preds = %9
  %20 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 5, !dbg !8413
  %21 = load i32, i32* %20, align 8, !dbg !8413, !tbaa !1164
  %22 = icmp eq i32 %21, 0, !dbg !8414
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8415
  br i1 %22, label %113, label %23, !dbg !8415, !llvm.loop !8411

; <label>:23:                                     ; preds = %19
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8416
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8417
  %24 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 16, i64 0
  %25 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 17
  %26 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 1, i64 0
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 6
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 7
  br label %29, !dbg !8417

; <label>:29:                                     ; preds = %23, %107
  %30 = phi i32 [ %11, %23 ], [ %110, %107 ]
  %31 = phi i32 [ 0, %23 ], [ %111, %107 ]
  %32 = phi i32 [ -1, %23 ], [ %108, %107 ]
  %33 = sdiv i32 %31, 8, !dbg !8425
  %34 = sext i32 %33 to i64, !dbg !8426
  %35 = and i32 %31, 7, !dbg !8428
  %36 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %14, i64 0, i32 4, i64 %34, !dbg !8430
  %37 = load i8, i8* %36, align 1, !dbg !8430, !tbaa !745
  %38 = zext i8 %37 to i32, !dbg !8430
  %39 = shl i32 1, %35, !dbg !8431
  %40 = and i32 %39, %38, !dbg !8432
  %41 = icmp ne i32 %40, 0, !dbg !8433
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8435
  %42 = icmp eq i32 %32, -1, !dbg !8436
  %43 = and i1 %42, %41, !dbg !8439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8439
  br i1 %43, label %44, label %45, !dbg !8439

; <label>:44:                                     ; preds = %29
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8440
  br label %45, !dbg !8440

; <label>:45:                                     ; preds = %44, %29
  %46 = phi i32 [ %31, %44 ], [ %32, %29 ], !dbg !8441
  %47 = icmp eq i32 %46, -1, !dbg !8442
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8443
  br i1 %47, label %107, label %48, !dbg !8443

; <label>:48:                                     ; preds = %45
  %49 = xor i1 %41, true, !dbg !8444
  %50 = icmp eq i32 %31, 16383, !dbg !8445
  %51 = or i1 %50, %49, !dbg !8446
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8446
  br i1 %51, label %52, label %107, !dbg !8446

; <label>:52:                                     ; preds = %48
  %53 = tail call i8* @addDeferredMultiBulkLength(%struct.client* %0) #6, !dbg !8448
  %54 = and i1 %50, %41, !dbg !8450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8450
  br i1 %54, label %55, label %56, !dbg !8450

; <label>:55:                                     ; preds = %52
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8452
  br label %56, !dbg !8452

; <label>:56:                                     ; preds = %55, %52
  %57 = phi i32 [ 16384, %55 ], [ %31, %52 ], !dbg !8453
  %58 = add nsw i32 %57, -1, !dbg !8454
  %59 = icmp eq i32 %46, %58, !dbg !8456
  %60 = sext i32 %46 to i64, !dbg !8457
  tail call void @addReplyLongLong(%struct.client* %0, i64 %60) #6, !dbg !8457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8459
  br i1 %59, label %61, label %62, !dbg !8459

; <label>:61:                                     ; preds = %56
  tail call void @addReplyLongLong(%struct.client* %0, i64 %60) #6, !dbg !8460
  br label %64, !dbg !8462

; <label>:62:                                     ; preds = %56
  %63 = sext i32 %58 to i64, !dbg !8463
  tail call void @addReplyLongLong(%struct.client* %0, i64 %63) #6, !dbg !8464
  br label %64

; <label>:64:                                     ; preds = %62, %61
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 3) #6, !dbg !8465
  tail call void @addReplyBulkCString(%struct.client* %0, i8* nonnull %24) #6, !dbg !8466
  %65 = load i32, i32* %25, align 8, !dbg !8467, !tbaa !900
  %66 = sext i32 %65 to i64, !dbg !8468
  tail call void @addReplyLongLong(%struct.client* %0, i64 %66) #6, !dbg !8469
  tail call void @addReplyBulkCBuffer(%struct.client* %0, i8* nonnull %26, i64 40) #6, !dbg !8470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8472
  %67 = load i32, i32* %27, align 4, !dbg !8474, !tbaa !1041
  %68 = icmp sgt i32 %67, 0, !dbg !8476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8477
  br i1 %68, label %69, label %103, !dbg !8477

; <label>:69:                                     ; preds = %64, %97
  %70 = phi i32 [ %98, %97 ], [ %67, %64 ]
  %71 = phi i64 [ %100, %97 ], [ 0, %64 ]
  %72 = phi i32 [ %99, %97 ], [ 3, %64 ]
  %73 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8478, !tbaa !1044
  %74 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %73, i64 %71, !dbg !8478
  %75 = load %struct.clusterNode*, %struct.clusterNode** %74, align 8, !dbg !8478, !tbaa !760
  %76 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %75, i64 0, i32 2, !dbg !8478
  %77 = load i32, i32* %76, align 8, !dbg !8478, !tbaa !927
  %78 = and i32 %77, 8, !dbg !8478
  %79 = icmp eq i32 %78, 0, !dbg !8478
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8481
  br i1 %79, label %80, label %97, !dbg !8481

; <label>:80:                                     ; preds = %69
  tail call void @addReplyMultiBulkLen(%struct.client* %0, i64 3) #6, !dbg !8482
  %81 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8483, !tbaa !1044
  %82 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %81, i64 %71, !dbg !8484
  %83 = load %struct.clusterNode*, %struct.clusterNode** %82, align 8, !dbg !8484, !tbaa !760
  %84 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %83, i64 0, i32 16, i64 0, !dbg !8484
  tail call void @addReplyBulkCString(%struct.client* %0, i8* nonnull %84) #6, !dbg !8485
  %85 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8486, !tbaa !1044
  %86 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %85, i64 %71, !dbg !8487
  %87 = load %struct.clusterNode*, %struct.clusterNode** %86, align 8, !dbg !8487, !tbaa !760
  %88 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %87, i64 0, i32 17, !dbg !8488
  %89 = load i32, i32* %88, align 8, !dbg !8488, !tbaa !900
  %90 = sext i32 %89 to i64, !dbg !8487
  tail call void @addReplyLongLong(%struct.client* %0, i64 %90) #6, !dbg !8489
  %91 = load %struct.clusterNode**, %struct.clusterNode*** %28, align 8, !dbg !8490, !tbaa !1044
  %92 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %91, i64 %71, !dbg !8491
  %93 = load %struct.clusterNode*, %struct.clusterNode** %92, align 8, !dbg !8491, !tbaa !760
  %94 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %93, i64 0, i32 1, i64 0, !dbg !8491
  tail call void @addReplyBulkCBuffer(%struct.client* %0, i8* nonnull %94, i64 40) #6, !dbg !8492
  %95 = add nsw i32 %72, 1, !dbg !8493
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8494
  %96 = load i32, i32* %27, align 4, !dbg !8474, !tbaa !1041
  br label %97, !dbg !8494

; <label>:97:                                     ; preds = %69, %80
  %98 = phi i32 [ %70, %69 ], [ %96, %80 ], !dbg !8474
  %99 = phi i32 [ %72, %69 ], [ %95, %80 ], !dbg !8495
  %100 = add nuw nsw i64 %71, 1, !dbg !8496
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8497
  %101 = sext i32 %98 to i64, !dbg !8476
  %102 = icmp slt i64 %100, %101, !dbg !8476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8477
  br i1 %102, label %69, label %103, !dbg !8477, !llvm.loop !8498

; <label>:103:                                    ; preds = %97, %64
  %104 = phi i32 [ 3, %64 ], [ %99, %97 ], !dbg !8447
  %105 = sext i32 %104 to i64, !dbg !8500
  tail call void @setDeferredMultiBulkLength(%struct.client* %0, i8* %53, i64 %105) #6, !dbg !8501
  %106 = add nsw i32 %30, 1, !dbg !8502
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8503
  br label %107, !dbg !8503

; <label>:107:                                    ; preds = %45, %48, %103
  %108 = phi i32 [ -1, %103 ], [ %46, %48 ], [ -1, %45 ], !dbg !8504
  %109 = phi i32 [ %57, %103 ], [ %31, %48 ], [ %31, %45 ], !dbg !8453
  %110 = phi i32 [ %106, %103 ], [ %30, %48 ], [ %30, %45 ], !dbg !8505
  %111 = add nsw i32 %109, 1, !dbg !8506
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8507
  %112 = icmp slt i32 %109, 16383, !dbg !8508
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8417
  br i1 %112, label %29, label %113, !dbg !8417, !llvm.loop !8509

; <label>:113:                                    ; preds = %107, %19, %9
  %114 = phi i32 [ %11, %9 ], [ %11, %19 ], [ %110, %107 ], !dbg !8393
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8511
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %115 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %6) #6, !dbg !8401
  %116 = icmp eq %struct.dictEntry* %115, null, !dbg !8403
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8400
  br i1 %116, label %117, label %9, !dbg !8400

; <label>:117:                                    ; preds = %113, %1
  %118 = phi i32 [ 0, %1 ], [ %114, %113 ], !dbg !8393
  tail call void @dictReleaseIterator(%struct.dictIterator* %6) #6, !dbg !8512
  %119 = sext i32 %118 to i64, !dbg !8513
  tail call void @setDeferredMultiBulkLength(%struct.client* %0, i8* %2, i64 %119) #6, !dbg !8514
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8515
  ret void, !dbg !8515
}

; Function Attrs: noredzone
declare dso_local i8* @addDeferredMultiBulkLength(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyLongLong(%struct.client*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyMultiBulkLen(%struct.client*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCString(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyBulkCBuffer(%struct.client*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setDeferredMultiBulkLength(%struct.client*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterCommand(%struct.client*) local_unnamed_addr #0 !dbg !8516 {
  %2 = alloca %struct.clusterMsg, align 16
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca [23 x i8*], align 16
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !8628, !tbaa !8630
  %13 = icmp eq i32 %12, 0, !dbg !8631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8632
  br i1 %13, label %14, label %15, !dbg !8632

; <label>:14:                                     ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.127, i64 0, i64 0)) #6, !dbg !8633
  br label %1234, !dbg !8635

; <label>:15:                                     ; preds = %1
  %16 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !8636
  %17 = load i32, i32* %16, align 8, !dbg !8636, !tbaa !8637
  %18 = icmp eq i32 %17, 2, !dbg !8641
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8642
  %19 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  %20 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8643, !tbaa !8644
  %21 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 1
  %22 = load %struct.redisObject*, %struct.redisObject** %21, align 8, !dbg !8643, !tbaa !760
  %23 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %22, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8, !dbg !8643, !tbaa !6254
  br i1 %18, label %25, label %31, !dbg !8642

; <label>:25:                                     ; preds = %15
  %26 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i64 0, i64 0)) #9, !dbg !8645
  %27 = icmp eq i32 %26, 0, !dbg !8645
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8646
  br i1 %27, label %28, label %31, !dbg !8646

; <label>:28:                                     ; preds = %25
  %29 = bitcast [23 x i8*]* %5 to i8*, !dbg !8647
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %29) #7, !dbg !8647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* align 16 bitcast ([23 x i8*]* @clusterCommand.help to i8*), i64 184, i1 false), !dbg !8648
  %30 = getelementptr inbounds [23 x i8*], [23 x i8*]* %5, i64 0, i64 0, !dbg !8649
  call void @addReplyHelp(%struct.client* nonnull %0, i8** nonnull %30) #6, !dbg !8650
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %29) #7, !dbg !8651
  br label %1234, !dbg !8652

; <label>:31:                                     ; preds = %15, %25
  %32 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i64 0, i64 0)) #9, !dbg !8653
  %33 = icmp eq i32 %32, 0, !dbg !8653
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8654
  br i1 %33, label %34, label %102, !dbg !8654

; <label>:34:                                     ; preds = %31
  %35 = icmp eq i32 %17, 4, !dbg !8655
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8656
  br i1 %35, label %38, label %36, !dbg !8656

; <label>:36:                                     ; preds = %34
  %37 = icmp eq i32 %17, 5, !dbg !8657
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8658
  br i1 %37, label %38, label %102, !dbg !8658

; <label>:38:                                     ; preds = %36, %34
  %39 = bitcast i64* %6 to i8*, !dbg !8659
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #7, !dbg !8659
  %40 = bitcast i64* %7 to i8*, !dbg !8659
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7, !dbg !8659
  %41 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 3, !dbg !8660
  %42 = load %struct.redisObject*, %struct.redisObject** %41, align 8, !dbg !8660, !tbaa !760
  %43 = call i32 @getLongLongFromObject(%struct.redisObject* %42, i64* nonnull %6) #6, !dbg !8663
  %44 = icmp eq i32 %43, 0, !dbg !8664
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8665
  br i1 %44, label %51, label %45, !dbg !8665

; <label>:45:                                     ; preds = %38
  %46 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8666, !tbaa !8644
  %47 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %46, i64 3, !dbg !8668
  %48 = load %struct.redisObject*, %struct.redisObject** %47, align 8, !dbg !8668, !tbaa !760
  %49 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %48, i64 0, i32 2, !dbg !8669
  %50 = load i8*, i8** %49, align 8, !dbg !8669, !tbaa !6254
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.151, i64 0, i64 0), i8* %50) #6, !dbg !8670
  br label %101, !dbg !8671

; <label>:51:                                     ; preds = %38
  %52 = load i32, i32* %16, align 8, !dbg !8672, !tbaa !8637
  %53 = icmp eq i32 %52, 5, !dbg !8674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8675
  br i1 %53, label %54, label %69, !dbg !8675

; <label>:54:                                     ; preds = %51
  %55 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8676, !tbaa !8644
  %56 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %55, i64 4, !dbg !8679
  %57 = load %struct.redisObject*, %struct.redisObject** %56, align 8, !dbg !8679, !tbaa !760
  %58 = call i32 @getLongLongFromObject(%struct.redisObject* %57, i64* nonnull %7) #6, !dbg !8681
  %59 = icmp eq i32 %58, 0, !dbg !8682
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8683
  br i1 %59, label %60, label %63, !dbg !8683

; <label>:60:                                     ; preds = %54
  %61 = load i64, i64* %6, align 8, !dbg !8684, !tbaa !1173
  %62 = load i64, i64* %7, align 8, !dbg !8686, !tbaa !1173
  br label %72, !dbg !8683

; <label>:63:                                     ; preds = %54
  %64 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8687, !tbaa !8644
  %65 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %64, i64 4, !dbg !8689
  %66 = load %struct.redisObject*, %struct.redisObject** %65, align 8, !dbg !8689, !tbaa !760
  %67 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %66, i64 0, i32 2, !dbg !8690
  %68 = load i8*, i8** %67, align 8, !dbg !8690, !tbaa !6254
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.152, i64 0, i64 0), i8* %68) #6, !dbg !8691
  br label %101, !dbg !8692

; <label>:69:                                     ; preds = %51
  %70 = load i64, i64* %6, align 8, !dbg !8693, !tbaa !1173
  %71 = add nsw i64 %70, 10000, !dbg !8695
  store i64 %71, i64* %7, align 8, !dbg !8696, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %72

; <label>:72:                                     ; preds = %60, %69
  %73 = phi i64 [ %62, %60 ], [ %71, %69 ], !dbg !8686
  %74 = phi i64 [ %61, %60 ], [ %70, %69 ], !dbg !8684
  %75 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8697, !tbaa !8644
  %76 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %75, i64 2, !dbg !8698
  %77 = load %struct.redisObject*, %struct.redisObject** %76, align 8, !dbg !8698, !tbaa !760
  %78 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %77, i64 0, i32 2, !dbg !8699
  %79 = load i8*, i8** %78, align 8, !dbg !8699, !tbaa !6254
  %80 = trunc i64 %74 to i32, !dbg !8684
  %81 = trunc i64 %73 to i32, !dbg !8686
  %82 = call i32 @clusterStartHandshake(i8* %79, i32 %80, i32 %81) #10, !dbg !8700
  %83 = icmp eq i32 %82, 0, !dbg !8701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8702
  br i1 %83, label %84, label %98, !dbg !8702

; <label>:84:                                     ; preds = %72
  %85 = call i32* @__errno() #6, !dbg !8703
  %86 = load i32, i32* %85, align 4, !dbg !8703, !tbaa !708
  %87 = icmp eq i32 %86, 22, !dbg !8704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8705
  br i1 %87, label %88, label %98, !dbg !8705

; <label>:88:                                     ; preds = %84
  %89 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8706, !tbaa !8644
  %90 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %89, i64 2, !dbg !8708
  %91 = load %struct.redisObject*, %struct.redisObject** %90, align 8, !dbg !8708, !tbaa !760
  %92 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %91, i64 0, i32 2, !dbg !8709
  %93 = load i8*, i8** %92, align 8, !dbg !8709, !tbaa !6254
  %94 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %89, i64 3, !dbg !8710
  %95 = load %struct.redisObject*, %struct.redisObject** %94, align 8, !dbg !8710, !tbaa !760
  %96 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %95, i64 0, i32 2, !dbg !8711
  %97 = load i8*, i8** %96, align 8, !dbg !8711, !tbaa !6254
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.153, i64 0, i64 0), i8* %93, i8* %97) #6, !dbg !8712
  br label %100, !dbg !8713

; <label>:98:                                     ; preds = %84, %72
  %99 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8714, !tbaa !8716
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %99) #6, !dbg !8718
  br label %100

; <label>:100:                                    ; preds = %98, %88
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %101, !dbg !8719

; <label>:101:                                    ; preds = %100, %63, %45
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8720
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7, !dbg !8719
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7, !dbg !8719
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  ret void

; <label>:102:                                    ; preds = %31, %36
  %103 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.154, i64 0, i64 0)) #9, !dbg !8721
  %104 = icmp eq i32 %103, 0, !dbg !8721
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8722
  br i1 %104, label %105, label %109, !dbg !8722

; <label>:105:                                    ; preds = %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8723
  br i1 %18, label %106, label %109, !dbg !8723

; <label>:106:                                    ; preds = %105
  %107 = tail call i8* @clusterGenNodesDescription(i32 0) #10, !dbg !8724
  %108 = tail call %struct.redisObject* @createObject(i32 0, i8* %107) #6, !dbg !8726
  tail call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %108) #6, !dbg !8728
  tail call void @decrRefCount(%struct.redisObject* %108) #6, !dbg !8729
  br label %1234, !dbg !8730

; <label>:109:                                    ; preds = %102, %105
  %110 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i64 0, i64 0)) #9, !dbg !8731
  %111 = icmp eq i32 %110, 0, !dbg !8731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8732
  br i1 %111, label %112, label %116, !dbg !8732

; <label>:112:                                    ; preds = %109
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8733
  br i1 %18, label %113, label %116, !dbg !8733

; <label>:113:                                    ; preds = %112
  %114 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8734, !tbaa !760
  %115 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %114, i64 0, i32 1, i64 0, !dbg !8734
  tail call void @addReplyBulkCBuffer(%struct.client* nonnull %0, i8* nonnull %115, i64 40) #6, !dbg !8736
  br label %1234, !dbg !8737

; <label>:116:                                    ; preds = %109, %112
  %117 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i64 0, i64 0)) #9, !dbg !8738
  %118 = icmp eq i32 %117, 0, !dbg !8738
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8739
  br i1 %118, label %119, label %121, !dbg !8739

; <label>:119:                                    ; preds = %116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8740
  br i1 %18, label %120, label %121, !dbg !8740

; <label>:120:                                    ; preds = %119
  tail call void @clusterReplyMultiBulkSlots(%struct.client* nonnull %0) #10, !dbg !8741
  br label %1234, !dbg !8743

; <label>:121:                                    ; preds = %116, %119
  %122 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.157, i64 0, i64 0)) #9, !dbg !8744
  %123 = icmp eq i32 %122, 0, !dbg !8744
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8745
  br i1 %123, label %124, label %144, !dbg !8745

; <label>:124:                                    ; preds = %121
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8746
  br i1 %18, label %125, label %144, !dbg !8746

; <label>:125:                                    ; preds = %124
  %126 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !8747, !tbaa !8017
  %127 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %126, i64 0, i32 0, !dbg !8747
  %128 = load %struct.dict*, %struct.dict** %127, align 8, !dbg !8747, !tbaa !8021
  %129 = getelementptr inbounds %struct.dict, %struct.dict* %128, i64 0, i32 2, i64 0, i32 3, !dbg !8747
  %130 = load i64, i64* %129, align 8, !dbg !8747, !tbaa !5132
  %131 = getelementptr inbounds %struct.dict, %struct.dict* %128, i64 0, i32 2, i64 1, i32 3, !dbg !8747
  %132 = load i64, i64* %131, align 8, !dbg !8747, !tbaa !5132
  %133 = sub i64 0, %132, !dbg !8750
  %134 = icmp eq i64 %130, %133, !dbg !8750
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8751
  br i1 %134, label %136, label %135, !dbg !8751

; <label>:135:                                    ; preds = %125
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.158, i64 0, i64 0)) #6, !dbg !8752
  br label %1234, !dbg !8754

; <label>:136:                                    ; preds = %125
  %137 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8755, !tbaa !760
  %138 = tail call i32 @clusterDelNodeSlots(%struct.clusterNode* %137) #10, !dbg !8756
  %139 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8759, !tbaa !788
  %140 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %139, i64 0, i32 22, !dbg !8760
  %141 = load i32, i32* %140, align 8, !dbg !8761, !tbaa !1475
  %142 = or i32 %141, 6, !dbg !8761
  store i32 %142, i32* %140, align 8, !dbg !8761, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8762
  %143 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8763, !tbaa !8716
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %143) #6, !dbg !8764
  br label %1234, !dbg !8765

; <label>:144:                                    ; preds = %121, %124
  %145 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.159, i64 0, i64 0)) #9, !dbg !8766
  %146 = icmp eq i32 %145, 0, !dbg !8766
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8767
  br i1 %146, label %150, label %147, !dbg !8767

; <label>:147:                                    ; preds = %144
  %148 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0)) #9, !dbg !8768
  %149 = icmp eq i32 %148, 0, !dbg !8768
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8769
  br i1 %149, label %150, label %278, !dbg !8769

; <label>:150:                                    ; preds = %147, %144
  %151 = icmp sgt i32 %17, 2, !dbg !8770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8771
  br i1 %151, label %152, label %278, !dbg !8771

; <label>:152:                                    ; preds = %150
  %153 = tail call i8* @zmalloc(i64 16384) #6, !dbg !8772
  %154 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8774, !tbaa !8644
  %155 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %154, i64 1, !dbg !8775
  %156 = load %struct.redisObject*, %struct.redisObject** %155, align 8, !dbg !8775, !tbaa !760
  %157 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %156, i64 0, i32 2, !dbg !8776
  %158 = load i8*, i8** %157, align 8, !dbg !8776, !tbaa !6254
  %159 = tail call i32 @strcasecmp(i8* %158, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i64 0, i64 0)) #9, !dbg !8777
  %160 = icmp eq i32 %159, 0, !dbg !8778
  %161 = tail call i8* @memset(i8* %153, i32 0, i64 16384) #6, !dbg !8779
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8781
  %162 = load i32, i32* %16, align 8, !dbg !8783, !tbaa !8637
  %163 = icmp sgt i32 %162, 2, !dbg !8785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8786
  br i1 %163, label %164, label %214, !dbg !8786

; <label>:164:                                    ; preds = %152
  %165 = bitcast i64* %4 to i8*
  br label %166, !dbg !8786

; <label>:166:                                    ; preds = %164, %209
  %167 = phi i64 [ 2, %164 ], [ %210, %209 ]
  %168 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8787, !tbaa !8644
  %169 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %168, i64 %167, !dbg !8790
  %170 = load %struct.redisObject*, %struct.redisObject** %169, align 8, !dbg !8790, !tbaa !760
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #7, !dbg !8794
  %171 = call i32 @getLongLongFromObject(%struct.redisObject* %170, i64* nonnull %4) #6, !dbg !8796
  %172 = icmp ne i32 %171, 0, !dbg !8797
  %173 = load i64, i64* %4, align 8, !dbg !8798
  %174 = icmp ugt i64 %173, 16383, !dbg !8799
  %175 = or i1 %172, %174, !dbg !8799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8799
  br i1 %175, label %176, label %177, !dbg !8799

; <label>:176:                                    ; preds = %166
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !8800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8801
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #7, !dbg !8802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8804
  br label %180, !dbg !8804

; <label>:177:                                    ; preds = %166
  %178 = trunc i64 %173 to i32, !dbg !8805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8806
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #7, !dbg !8802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8802
  %179 = icmp eq i32 %178, -1, !dbg !8807
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8804
  br i1 %179, label %180, label %181, !dbg !8804

; <label>:180:                                    ; preds = %177, %176
  call void @zfree(i8* %153) #6, !dbg !8808
  br label %277, !dbg !8810

; <label>:181:                                    ; preds = %177
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8811
  br i1 %160, label %182, label %192, !dbg !8811

; <label>:182:                                    ; preds = %181
  %183 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8813, !tbaa !788
  %184 = shl i64 %173, 32, !dbg !8814
  %185 = ashr exact i64 %184, 32, !dbg !8814
  %186 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %183, i64 0, i32 8, i64 %185, !dbg !8814
  %187 = load %struct.clusterNode*, %struct.clusterNode** %186, align 8, !dbg !8814, !tbaa !760
  %188 = icmp eq %struct.clusterNode* %187, null, !dbg !8815
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8816
  br i1 %188, label %189, label %191, !dbg !8816

; <label>:189:                                    ; preds = %182
  %190 = trunc i64 %173 to i32, !dbg !8805
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.161, i64 0, i64 0), i32 %190) #6, !dbg !8817
  call void @zfree(i8* %153) #6, !dbg !8819
  br label %277, !dbg !8820

; <label>:191:                                    ; preds = %182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8821
  br label %201, !dbg !8821

; <label>:192:                                    ; preds = %181
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8821
  %193 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8823, !tbaa !788
  %194 = shl i64 %173, 32, !dbg !8824
  %195 = ashr exact i64 %194, 32, !dbg !8824
  %196 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %193, i64 0, i32 8, i64 %195, !dbg !8824
  %197 = load %struct.clusterNode*, %struct.clusterNode** %196, align 8, !dbg !8824, !tbaa !760
  %198 = icmp eq %struct.clusterNode* %197, null, !dbg !8824
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8825
  br i1 %198, label %201, label %199, !dbg !8825

; <label>:199:                                    ; preds = %192
  %200 = trunc i64 %173 to i32, !dbg !8805
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i64 0, i64 0), i32 %200) #6, !dbg !8826
  call void @zfree(i8* %153) #6, !dbg !8828
  br label %277, !dbg !8829

; <label>:201:                                    ; preds = %191, %192
  %202 = phi i64 [ %185, %191 ], [ %195, %192 ], !dbg !8830
  %203 = getelementptr inbounds i8, i8* %153, i64 %202, !dbg !8830
  %204 = load i8, i8* %203, align 1, !dbg !8832, !tbaa !745
  %205 = add i8 %204, 1, !dbg !8832
  store i8 %205, i8* %203, align 1, !dbg !8832, !tbaa !745
  %206 = icmp eq i8 %204, 1, !dbg !8833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8834
  br i1 %206, label %207, label %209, !dbg !8834

; <label>:207:                                    ; preds = %201
  %208 = trunc i64 %173 to i32, !dbg !8805
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.163, i64 0, i64 0), i32 %208) #6, !dbg !8835
  call void @zfree(i8* nonnull %153) #6, !dbg !8837
  br label %277, !dbg !8838

; <label>:209:                                    ; preds = %201
  %210 = add nuw nsw i64 %167, 1, !dbg !8839
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8840
  %211 = load i32, i32* %16, align 8, !dbg !8783, !tbaa !8637
  %212 = sext i32 %211 to i64, !dbg !8785
  %213 = icmp slt i64 %210, %212, !dbg !8785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8786
  br i1 %213, label %166, label %214, !dbg !8786, !llvm.loop !8841

; <label>:214:                                    ; preds = %209, %152
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8844
  br label %215, !dbg !8844

; <label>:215:                                    ; preds = %214, %268
  %216 = phi i64 [ 0, %214 ], [ %269, %268 ]
  %217 = getelementptr inbounds i8, i8* %153, i64 %216, !dbg !8845
  %218 = load i8, i8* %217, align 1, !dbg !8845, !tbaa !745
  %219 = icmp eq i8 %218, 0, !dbg !8845
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8846
  br i1 %219, label %268, label %220, !dbg !8846

; <label>:220:                                    ; preds = %215
  %221 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8847, !tbaa !788
  %222 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %221, i64 0, i32 7, i64 %216, !dbg !8849
  %223 = load %struct.clusterNode*, %struct.clusterNode** %222, align 8, !dbg !8849, !tbaa !760
  %224 = icmp eq %struct.clusterNode* %223, null, !dbg !8849
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8850
  br i1 %224, label %226, label %225, !dbg !8850

; <label>:225:                                    ; preds = %220
  store %struct.clusterNode* null, %struct.clusterNode** %222, align 8, !dbg !8851, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8852
  br label %226, !dbg !8852

; <label>:226:                                    ; preds = %220, %225
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8853
  br i1 %160, label %227, label %253, !dbg !8853

; <label>:227:                                    ; preds = %226
  %228 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8856, !tbaa !788
  %229 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %228, i64 0, i32 8, i64 %216, !dbg !8857
  %230 = load %struct.clusterNode*, %struct.clusterNode** %229, align 8, !dbg !8857, !tbaa !760
  %231 = icmp eq %struct.clusterNode* %230, null, !dbg !8859
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8860
  br i1 %231, label %265, label %232, !dbg !8860

; <label>:232:                                    ; preds = %227
  %233 = trunc i64 %216 to i32
  %234 = lshr i64 %216, 3
  %235 = and i64 %234, 8191
  %236 = and i32 %233, 7, !dbg !8868
  %237 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %230, i64 0, i32 4, i64 %235, !dbg !8870
  %238 = load i8, i8* %237, align 1, !dbg !8870, !tbaa !745
  %239 = zext i8 %238 to i32, !dbg !8870
  %240 = shl i32 1, %236, !dbg !8871
  %241 = and i32 %240, %239, !dbg !8872
  %242 = icmp eq i32 %241, 0, !dbg !8873
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8874
  %243 = trunc i32 %240 to i8, !dbg !8880
  %244 = xor i8 %243, -1, !dbg !8880
  %245 = and i8 %238, %244, !dbg !8880
  store i8 %245, i8* %237, align 1, !dbg !8880, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8881
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8882
  br i1 %242, label %246, label %247, !dbg !8882

; <label>:246:                                    ; preds = %232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8884
  call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !8884
  call void @_exit(i32 1) #8, !dbg !8884
  unreachable

; <label>:247:                                    ; preds = %232
  %248 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %230, i64 0, i32 5, !dbg !8885
  %249 = load i32, i32* %248, align 8, !dbg !8886, !tbaa !1164
  %250 = add nsw i32 %249, -1, !dbg !8886
  store i32 %250, i32* %248, align 8, !dbg !8886, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8887
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8883
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8884
  %251 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8888, !tbaa !788
  %252 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %251, i64 0, i32 8, i64 %216, !dbg !8889
  store %struct.clusterNode* null, %struct.clusterNode** %252, align 8, !dbg !8890, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8892
  br label %267

; <label>:253:                                    ; preds = %226
  %254 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8893, !tbaa !760
  %255 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8897, !tbaa !788
  %256 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %255, i64 0, i32 8, i64 %216, !dbg !8898
  %257 = load %struct.clusterNode*, %struct.clusterNode** %256, align 8, !dbg !8898, !tbaa !760
  %258 = icmp eq %struct.clusterNode* %257, null, !dbg !8898
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8899
  br i1 %258, label %259, label %264, !dbg !8899

; <label>:259:                                    ; preds = %253
  %260 = trunc i64 %216 to i32, !dbg !8900
  %261 = call i32 @clusterNodeSetSlotBit(%struct.clusterNode* %254, i32 %260) #6, !dbg !8900
  %262 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8901, !tbaa !788
  %263 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %262, i64 0, i32 8, i64 %216, !dbg !8902
  store %struct.clusterNode* %254, %struct.clusterNode** %263, align 8, !dbg !8903, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8892
  br label %267

; <label>:264:                                    ; preds = %253
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8892
  br label %266, !dbg !8892

; <label>:265:                                    ; preds = %227
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8891
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8853
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8892
  br label %266

; <label>:266:                                    ; preds = %264, %265
  call void @_serverAssertWithInfo(%struct.client* %0, %struct.redisObject* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 4320) #6, !dbg !8892
  call void @_exit(i32 1) #8, !dbg !8892
  unreachable

; <label>:267:                                    ; preds = %259, %247
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8904
  br label %268, !dbg !8904

; <label>:268:                                    ; preds = %215, %267
  %269 = add nuw nsw i64 %216, 1, !dbg !8905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8906
  %270 = icmp ult i64 %269, 16384, !dbg !8907
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8844
  br i1 %270, label %215, label %271, !dbg !8844, !llvm.loop !8908

; <label>:271:                                    ; preds = %268
  call void @zfree(i8* nonnull %153) #6, !dbg !8910
  %272 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8913, !tbaa !788
  %273 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %272, i64 0, i32 22, !dbg !8914
  %274 = load i32, i32* %273, align 8, !dbg !8915, !tbaa !1475
  %275 = or i32 %274, 6, !dbg !8915
  store i32 %275, i32* %273, align 8, !dbg !8915, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8916
  %276 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !8917, !tbaa !8716
  call void @addReply(%struct.client* %0, %struct.redisObject* %276) #6, !dbg !8918
  br label %277, !dbg !8919

; <label>:277:                                    ; preds = %271, %207, %199, %189, %180
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8920
  br label %1234

; <label>:278:                                    ; preds = %147, %150
  %279 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i64 0, i64 0)) #9, !dbg !8921
  %280 = icmp eq i32 %279, 0, !dbg !8921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8922
  br i1 %280, label %281, label %526, !dbg !8922

; <label>:281:                                    ; preds = %278
  %282 = icmp sgt i32 %17, 3, !dbg !8923
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8924
  br i1 %282, label %283, label %526, !dbg !8924

; <label>:283:                                    ; preds = %281
  %284 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8925, !tbaa !760
  %285 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %284, i64 0, i32 2, !dbg !8925
  %286 = load i32, i32* %285, align 8, !dbg !8925, !tbaa !927
  %287 = and i32 %286, 2, !dbg !8925
  %288 = icmp eq i32 %287, 0, !dbg !8925
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8927
  br i1 %288, label %290, label %289, !dbg !8927

; <label>:289:                                    ; preds = %283
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.166, i64 0, i64 0)) #6, !dbg !8928
  br label %525, !dbg !8930

; <label>:290:                                    ; preds = %283
  %291 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !8931
  %292 = load %struct.redisObject*, %struct.redisObject** %291, align 8, !dbg !8931, !tbaa !760
  %293 = bitcast i64* %3 to i8*, !dbg !8936
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #7, !dbg !8936
  %294 = call i32 @getLongLongFromObject(%struct.redisObject* %292, i64* nonnull %3) #6, !dbg !8938
  %295 = icmp ne i32 %294, 0, !dbg !8939
  %296 = load i64, i64* %3, align 8, !dbg !8940
  %297 = icmp ugt i64 %296, 16383, !dbg !8941
  %298 = or i1 %295, %297, !dbg !8941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8941
  br i1 %298, label %299, label %300, !dbg !8941

; <label>:299:                                    ; preds = %290
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !8942
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8943
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #7, !dbg !8944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8946
  br label %525, !dbg !8946

; <label>:300:                                    ; preds = %290
  %301 = trunc i64 %296 to i32, !dbg !8947
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8948
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #7, !dbg !8944
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8944
  %302 = icmp eq i32 %301, -1, !dbg !8949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8946
  br i1 %302, label %525, label %303, !dbg !8946

; <label>:303:                                    ; preds = %300
  %304 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8950, !tbaa !8644
  %305 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %304, i64 3, !dbg !8951
  %306 = load %struct.redisObject*, %struct.redisObject** %305, align 8, !dbg !8951, !tbaa !760
  %307 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %306, i64 0, i32 2, !dbg !8952
  %308 = load i8*, i8** %307, align 8, !dbg !8952, !tbaa !6254
  %309 = call i32 @strcasecmp(i8* %308, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.167, i64 0, i64 0)) #9, !dbg !8953
  %310 = icmp eq i32 %309, 0, !dbg !8953
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8954
  br i1 %310, label %311, label %349, !dbg !8954

; <label>:311:                                    ; preds = %303
  %312 = load i32, i32* %16, align 8, !dbg !8955, !tbaa !8637
  %313 = icmp eq i32 %312, 5, !dbg !8956
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8957
  br i1 %313, label %314, label %349, !dbg !8957

; <label>:314:                                    ; preds = %311
  %315 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8958, !tbaa !788
  %316 = shl i64 %296, 32, !dbg !8961
  %317 = ashr exact i64 %316, 32, !dbg !8961
  %318 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %315, i64 0, i32 8, i64 %317, !dbg !8961
  %319 = load %struct.clusterNode*, %struct.clusterNode** %318, align 8, !dbg !8961, !tbaa !760
  %320 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !8962, !tbaa !760
  %321 = icmp eq %struct.clusterNode* %319, %320, !dbg !8963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8964
  br i1 %321, label %323, label %322, !dbg !8964

; <label>:322:                                    ; preds = %314
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.168, i64 0, i64 0), i32 %301) #6, !dbg !8965
  br label %525, !dbg !8967

; <label>:323:                                    ; preds = %314
  %324 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %304, i64 4, !dbg !8968
  %325 = load %struct.redisObject*, %struct.redisObject** %324, align 8, !dbg !8968, !tbaa !760
  %326 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %325, i64 0, i32 2, !dbg !8970
  %327 = load i8*, i8** %326, align 8, !dbg !8970, !tbaa !6254
  %328 = call i8* @sdsnewlen(i8* %327, i64 40) #6, !dbg !8973
  %329 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8975, !tbaa !788
  %330 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %329, i64 0, i32 4, !dbg !8976
  %331 = load %struct.dict*, %struct.dict** %330, align 8, !dbg !8976, !tbaa !837
  %332 = call %struct.dictEntry* @dictFind(%struct.dict* %331, i8* %328) #6, !dbg !8977
  call void @sdsfree(i8* %328) #6, !dbg !8979
  %333 = icmp eq %struct.dictEntry* %332, null, !dbg !8980
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8981
  br i1 %333, label %334, label %335, !dbg !8981

; <label>:334:                                    ; preds = %323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8982
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8983
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8985
  br label %340, !dbg !8985

; <label>:335:                                    ; preds = %323
  %336 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %332, i64 0, i32 1, i32 0, !dbg !8986
  %337 = bitcast i8** %336 to %struct.clusterNode**, !dbg !8986
  %338 = load %struct.clusterNode*, %struct.clusterNode** %337, align 8, !dbg !8986, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8987
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8983
  %339 = icmp eq %struct.clusterNode* %338, null, !dbg !8988
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !8985
  br i1 %339, label %340, label %346, !dbg !8985

; <label>:340:                                    ; preds = %334, %335
  %341 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !8989, !tbaa !8644
  %342 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %341, i64 4, !dbg !8991
  %343 = load %struct.redisObject*, %struct.redisObject** %342, align 8, !dbg !8991, !tbaa !760
  %344 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %343, i64 0, i32 2, !dbg !8992
  %345 = load i8*, i8** %344, align 8, !dbg !8992, !tbaa !6254
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i64 0, i64 0), i8* %345) #6, !dbg !8993
  br label %525, !dbg !8994

; <label>:346:                                    ; preds = %335
  %347 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !8995, !tbaa !788
  %348 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %347, i64 0, i32 6, i64 %317, !dbg !8996
  store %struct.clusterNode* %338, %struct.clusterNode** %348, align 8, !dbg !8997, !tbaa !760
  br label %519, !dbg !8998

; <label>:349:                                    ; preds = %303, %311
  %350 = call i32 @strcasecmp(i8* %308, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0)) #9, !dbg !8999
  %351 = icmp eq i32 %350, 0, !dbg !8999
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9000
  br i1 %351, label %352, label %390, !dbg !9000

; <label>:352:                                    ; preds = %349
  %353 = load i32, i32* %16, align 8, !dbg !9001, !tbaa !8637
  %354 = icmp eq i32 %353, 5, !dbg !9002
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9003
  br i1 %354, label %355, label %390, !dbg !9003

; <label>:355:                                    ; preds = %352
  %356 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9004, !tbaa !788
  %357 = shl i64 %296, 32, !dbg !9007
  %358 = ashr exact i64 %357, 32, !dbg !9007
  %359 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %356, i64 0, i32 8, i64 %358, !dbg !9007
  %360 = load %struct.clusterNode*, %struct.clusterNode** %359, align 8, !dbg !9007, !tbaa !760
  %361 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9008, !tbaa !760
  %362 = icmp eq %struct.clusterNode* %360, %361, !dbg !9009
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9010
  br i1 %362, label %363, label %364, !dbg !9010

; <label>:363:                                    ; preds = %355
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.171, i64 0, i64 0), i32 %301) #6, !dbg !9011
  br label %525, !dbg !9013

; <label>:364:                                    ; preds = %355
  %365 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %304, i64 4, !dbg !9014
  %366 = load %struct.redisObject*, %struct.redisObject** %365, align 8, !dbg !9014, !tbaa !760
  %367 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %366, i64 0, i32 2, !dbg !9016
  %368 = load i8*, i8** %367, align 8, !dbg !9016, !tbaa !6254
  %369 = call i8* @sdsnewlen(i8* %368, i64 40) #6, !dbg !9019
  %370 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9021, !tbaa !788
  %371 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %370, i64 0, i32 4, !dbg !9022
  %372 = load %struct.dict*, %struct.dict** %371, align 8, !dbg !9022, !tbaa !837
  %373 = call %struct.dictEntry* @dictFind(%struct.dict* %372, i8* %369) #6, !dbg !9023
  call void @sdsfree(i8* %369) #6, !dbg !9025
  %374 = icmp eq %struct.dictEntry* %373, null, !dbg !9026
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9027
  br i1 %374, label %375, label %376, !dbg !9027

; <label>:375:                                    ; preds = %364
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9028
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9029
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9030
  br label %381, !dbg !9030

; <label>:376:                                    ; preds = %364
  %377 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %373, i64 0, i32 1, i32 0, !dbg !9031
  %378 = bitcast i8** %377 to %struct.clusterNode**, !dbg !9031
  %379 = load %struct.clusterNode*, %struct.clusterNode** %378, align 8, !dbg !9031, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9032
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9029
  %380 = icmp eq %struct.clusterNode* %379, null, !dbg !9033
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9030
  br i1 %380, label %381, label %387, !dbg !9030

; <label>:381:                                    ; preds = %375, %376
  %382 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9034, !tbaa !8644
  %383 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %382, i64 4, !dbg !9036
  %384 = load %struct.redisObject*, %struct.redisObject** %383, align 8, !dbg !9036, !tbaa !760
  %385 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %384, i64 0, i32 2, !dbg !9037
  %386 = load i8*, i8** %385, align 8, !dbg !9037, !tbaa !6254
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i64 0, i64 0), i8* %386) #6, !dbg !9038
  br label %525, !dbg !9039

; <label>:387:                                    ; preds = %376
  %388 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9040, !tbaa !788
  %389 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %388, i64 0, i32 7, i64 %358, !dbg !9041
  store %struct.clusterNode* %379, %struct.clusterNode** %389, align 8, !dbg !9042, !tbaa !760
  br label %519, !dbg !9043

; <label>:390:                                    ; preds = %349, %352
  %391 = call i32 @strcasecmp(i8* %308, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0)) #9, !dbg !9044
  %392 = icmp eq i32 %391, 0, !dbg !9044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9045
  br i1 %392, label %393, label %403, !dbg !9045

; <label>:393:                                    ; preds = %390
  %394 = load i32, i32* %16, align 8, !dbg !9046, !tbaa !8637
  %395 = icmp eq i32 %394, 4, !dbg !9047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9048
  br i1 %395, label %396, label %403, !dbg !9048

; <label>:396:                                    ; preds = %393
  %397 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9049, !tbaa !788
  %398 = shl i64 %296, 32, !dbg !9051
  %399 = ashr exact i64 %398, 32, !dbg !9051
  %400 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %397, i64 0, i32 7, i64 %399, !dbg !9051
  store %struct.clusterNode* null, %struct.clusterNode** %400, align 8, !dbg !9052, !tbaa !760
  %401 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9053, !tbaa !788
  %402 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %401, i64 0, i32 6, i64 %399, !dbg !9054
  store %struct.clusterNode* null, %struct.clusterNode** %402, align 8, !dbg !9055, !tbaa !760
  br label %519, !dbg !9056

; <label>:403:                                    ; preds = %390, %393
  %404 = call i32 @strcasecmp(i8* %308, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i64 0, i64 0)) #9, !dbg !9057
  %405 = icmp eq i32 %404, 0, !dbg !9057
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9058
  br i1 %405, label %406, label %518, !dbg !9058

; <label>:406:                                    ; preds = %403
  %407 = load i32, i32* %16, align 8, !dbg !9059, !tbaa !8637
  %408 = icmp eq i32 %407, 5, !dbg !9060
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9061
  br i1 %408, label %409, label %518, !dbg !9061

; <label>:409:                                    ; preds = %406
  %410 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %304, i64 4, !dbg !9062
  %411 = load %struct.redisObject*, %struct.redisObject** %410, align 8, !dbg !9062, !tbaa !760
  %412 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %411, i64 0, i32 2, !dbg !9063
  %413 = load i8*, i8** %412, align 8, !dbg !9063, !tbaa !6254
  %414 = call i8* @sdsnewlen(i8* %413, i64 40) #6, !dbg !9066
  %415 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9068, !tbaa !788
  %416 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %415, i64 0, i32 4, !dbg !9069
  %417 = load %struct.dict*, %struct.dict** %416, align 8, !dbg !9069, !tbaa !837
  %418 = call %struct.dictEntry* @dictFind(%struct.dict* %417, i8* %414) #6, !dbg !9070
  call void @sdsfree(i8* %414) #6, !dbg !9072
  %419 = icmp eq %struct.dictEntry* %418, null, !dbg !9073
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9074
  br i1 %419, label %420, label %421, !dbg !9074

; <label>:420:                                    ; preds = %409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9078
  br label %426, !dbg !9078

; <label>:421:                                    ; preds = %409
  %422 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %418, i64 0, i32 1, i32 0, !dbg !9079
  %423 = bitcast i8** %422 to %struct.clusterNode**, !dbg !9079
  %424 = load %struct.clusterNode*, %struct.clusterNode** %423, align 8, !dbg !9079, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9080
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9076
  %425 = icmp eq %struct.clusterNode* %424, null, !dbg !9081
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9078
  br i1 %425, label %426, label %432, !dbg !9078

; <label>:426:                                    ; preds = %420, %421
  %427 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9083, !tbaa !8644
  %428 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %427, i64 4, !dbg !9085
  %429 = load %struct.redisObject*, %struct.redisObject** %428, align 8, !dbg !9085, !tbaa !760
  %430 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %429, i64 0, i32 2, !dbg !9086
  %431 = load i8*, i8** %430, align 8, !dbg !9086, !tbaa !6254
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %431) #6, !dbg !9087
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9088
  br label %525

; <label>:432:                                    ; preds = %421
  %433 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9089, !tbaa !788
  %434 = shl i64 %296, 32, !dbg !9091
  %435 = ashr exact i64 %434, 32, !dbg !9091
  %436 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %433, i64 0, i32 8, i64 %435, !dbg !9091
  %437 = load %struct.clusterNode*, %struct.clusterNode** %436, align 8, !dbg !9091, !tbaa !760
  %438 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9092, !tbaa !760
  %439 = icmp eq %struct.clusterNode* %437, %438, !dbg !9093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9094
  br i1 %439, label %440, label %446, !dbg !9094

; <label>:440:                                    ; preds = %432
  %441 = icmp eq %struct.clusterNode* %424, %437, !dbg !9095
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9096
  br i1 %441, label %446, label %442, !dbg !9096

; <label>:442:                                    ; preds = %440
  %443 = call i32 @countKeysInSlot(i32 %301) #6, !dbg !9097
  %444 = icmp eq i32 %443, 0, !dbg !9100
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9101
  br i1 %444, label %446, label %445, !dbg !9101

; <label>:445:                                    ; preds = %442
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.175, i64 0, i64 0), i32 %301) #6, !dbg !9102
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9104
  br label %525

; <label>:446:                                    ; preds = %442, %440, %432
  %447 = call i32 @countKeysInSlot(i32 %301) #6, !dbg !9105
  %448 = icmp eq i32 %447, 0, !dbg !9107
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9108
  br i1 %448, label %449, label %455, !dbg !9108

; <label>:449:                                    ; preds = %446
  %450 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9109, !tbaa !788
  %451 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %450, i64 0, i32 6, i64 %435, !dbg !9110
  %452 = load %struct.clusterNode*, %struct.clusterNode** %451, align 8, !dbg !9110, !tbaa !760
  %453 = icmp eq %struct.clusterNode* %452, null, !dbg !9110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9111
  br i1 %453, label %455, label %454, !dbg !9111

; <label>:454:                                    ; preds = %449
  store %struct.clusterNode* null, %struct.clusterNode** %451, align 8, !dbg !9112, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9113
  br label %455, !dbg !9113

; <label>:455:                                    ; preds = %449, %454, %446
  %456 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9114, !tbaa !760
  %457 = icmp eq %struct.clusterNode* %424, %456, !dbg !9116
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9117
  br i1 %457, label %458, label %483, !dbg !9117

; <label>:458:                                    ; preds = %455
  %459 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9118, !tbaa !788
  %460 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %459, i64 0, i32 7, i64 %435, !dbg !9119
  %461 = load %struct.clusterNode*, %struct.clusterNode** %460, align 8, !dbg !9119, !tbaa !760
  %462 = icmp eq %struct.clusterNode* %461, null, !dbg !9119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9120
  br i1 %462, label %483, label %463, !dbg !9120

; <label>:463:                                    ; preds = %458
  %464 = call i64 @clusterGetMaxEpoch() #6, !dbg !9121
  %465 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9126, !tbaa !760
  %466 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %465, i64 0, i32 3, !dbg !9127
  %467 = load i64, i64* %466, align 8, !dbg !9127, !tbaa !1093
  %468 = icmp eq i64 %467, 0, !dbg !9128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9129
  br i1 %468, label %472, label %469, !dbg !9129

; <label>:469:                                    ; preds = %463
  %470 = icmp eq i64 %467, %464, !dbg !9130
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9131
  br i1 %470, label %471, label %472, !dbg !9131

; <label>:471:                                    ; preds = %469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9132
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9133
  br label %480, !dbg !9134

; <label>:472:                                    ; preds = %463, %469
  %473 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9135, !tbaa !788
  %474 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %473, i64 0, i32 1, !dbg !9136
  %475 = load i64, i64* %474, align 8, !dbg !9137, !tbaa !797
  %476 = add i64 %475, 1, !dbg !9137
  store i64 %476, i64* %474, align 8, !dbg !9137, !tbaa !797
  store i64 %476, i64* %466, align 8, !dbg !9138, !tbaa !1093
  %477 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %473, i64 0, i32 22, !dbg !9141
  %478 = load i32, i32* %477, align 8, !dbg !9142, !tbaa !1475
  %479 = or i32 %478, 12, !dbg !9142
  store i32 %479, i32* %477, align 8, !dbg !9142, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9143
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0), i64 %476) #6, !dbg !9144
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9145
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9134
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.176, i64 0, i64 0), i32 %301) #6, !dbg !9146
  br label %480, !dbg !9148

; <label>:480:                                    ; preds = %471, %472
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9149
  %481 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9150, !tbaa !788
  %482 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %481, i64 0, i32 7, i64 %435, !dbg !9151
  store %struct.clusterNode* null, %struct.clusterNode** %482, align 8, !dbg !9152, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9153
  br label %483, !dbg !9153

; <label>:483:                                    ; preds = %458, %480, %455
  %484 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9156, !tbaa !788
  %485 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %484, i64 0, i32 8, i64 %435, !dbg !9157
  %486 = load %struct.clusterNode*, %struct.clusterNode** %485, align 8, !dbg !9157, !tbaa !760
  %487 = icmp eq %struct.clusterNode* %486, null, !dbg !9159
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9160
  br i1 %487, label %488, label %489, !dbg !9160

; <label>:488:                                    ; preds = %483
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9161
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9166
  br label %513, !dbg !9166

; <label>:489:                                    ; preds = %483
  %490 = lshr i64 %296, 3
  %491 = and i64 %490, 8191
  %492 = and i32 %301, 7, !dbg !9174
  %493 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %486, i64 0, i32 4, i64 %491, !dbg !9176
  %494 = load i8, i8* %493, align 1, !dbg !9176, !tbaa !745
  %495 = zext i8 %494 to i32, !dbg !9176
  %496 = shl i32 1, %492, !dbg !9177
  %497 = and i32 %496, %495, !dbg !9178
  %498 = icmp eq i32 %497, 0, !dbg !9179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9180
  %499 = trunc i32 %496 to i8, !dbg !9186
  %500 = xor i8 %499, -1, !dbg !9186
  %501 = and i8 %494, %500, !dbg !9186
  store i8 %501, i8* %493, align 1, !dbg !9186, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9187
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9188
  br i1 %498, label %502, label %503, !dbg !9188

; <label>:502:                                    ; preds = %489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9190
  call void @_serverAssert(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 3720) #6, !dbg !9190
  call void @_exit(i32 1) #8, !dbg !9190
  unreachable

; <label>:503:                                    ; preds = %489
  %504 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %486, i64 0, i32 5, !dbg !9191
  %505 = load i32, i32* %504, align 8, !dbg !9192, !tbaa !1164
  %506 = add nsw i32 %505, -1, !dbg !9192
  store i32 %506, i32* %504, align 8, !dbg !9192, !tbaa !1164
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9190
  %507 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9194, !tbaa !788
  %508 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %507, i64 0, i32 8, i64 %435, !dbg !9195
  store %struct.clusterNode* null, %struct.clusterNode** %508, align 8, !dbg !9196, !tbaa !760
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9197
  %509 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9198, !tbaa !788
  %510 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %509, i64 0, i32 8, i64 %435
  %511 = load %struct.clusterNode*, %struct.clusterNode** %510, align 8, !dbg !9199, !tbaa !760
  %512 = icmp eq %struct.clusterNode* %511, null, !dbg !9197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9162
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9166
  br i1 %512, label %513, label %517, !dbg !9166

; <label>:513:                                    ; preds = %488, %503
  %514 = call i32 @clusterNodeSetSlotBit(%struct.clusterNode* nonnull %424, i32 %301) #6, !dbg !9200
  %515 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9201, !tbaa !788
  %516 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %515, i64 0, i32 8, i64 %435, !dbg !9202
  store %struct.clusterNode* %424, %struct.clusterNode** %516, align 8, !dbg !9203, !tbaa !760
  br label %517, !dbg !9204

; <label>:517:                                    ; preds = %503, %513
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9205
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9206
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9207
  br label %519

; <label>:518:                                    ; preds = %403, %406
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.177, i64 0, i64 0)) #6, !dbg !9208
  br label %525, !dbg !9210

; <label>:519:                                    ; preds = %517, %387, %396, %346
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %520 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9213, !tbaa !788
  %521 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %520, i64 0, i32 22, !dbg !9214
  %522 = load i32, i32* %521, align 8, !dbg !9215, !tbaa !1475
  %523 = or i32 %522, 6, !dbg !9215
  store i32 %523, i32* %521, align 8, !dbg !9215, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9216
  %524 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9217, !tbaa !8716
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %524) #6, !dbg !9218
  br label %525, !dbg !9219

; <label>:525:                                    ; preds = %300, %299, %426, %445, %519, %518, %381, %363, %340, %322, %289
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %1234

; <label>:526:                                    ; preds = %278, %281
  %527 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0)) #9, !dbg !9220
  %528 = icmp eq i32 %527, 0, !dbg !9220
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9221
  br i1 %528, label %529, label %553, !dbg !9221

; <label>:529:                                    ; preds = %526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9222
  br i1 %18, label %530, label %553, !dbg !9222

; <label>:530:                                    ; preds = %529
  %531 = tail call i64 @clusterGetMaxEpoch() #6, !dbg !9223
  %532 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9226, !tbaa !760
  %533 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %532, i64 0, i32 3, !dbg !9227
  %534 = load i64, i64* %533, align 8, !dbg !9227, !tbaa !1093
  %535 = icmp eq i64 %534, 0, !dbg !9228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9229
  br i1 %535, label %538, label %536, !dbg !9229

; <label>:536:                                    ; preds = %530
  %537 = icmp eq i64 %534, %531, !dbg !9230
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9231
  br i1 %537, label %546, label %538, !dbg !9231

; <label>:538:                                    ; preds = %530, %536
  %539 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9232, !tbaa !788
  %540 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %539, i64 0, i32 1, !dbg !9233
  %541 = load i64, i64* %540, align 8, !dbg !9234, !tbaa !797
  %542 = add i64 %541, 1, !dbg !9234
  store i64 %542, i64* %540, align 8, !dbg !9234, !tbaa !797
  store i64 %542, i64* %533, align 8, !dbg !9235, !tbaa !1093
  %543 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %539, i64 0, i32 22, !dbg !9238
  %544 = load i32, i32* %543, align 8, !dbg !9239, !tbaa !1475
  %545 = or i32 %544, 12, !dbg !9239
  store i32 %545, i32* %543, align 8, !dbg !9239, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9240
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0), i64 %542) #6, !dbg !9241
  br label %546, !dbg !9243

; <label>:546:                                    ; preds = %536, %538
  %547 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.180, i64 0, i64 0), %538 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i64 0, i64 0), %536 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9244
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9245
  %548 = tail call i8* @sdsempty() #6, !dbg !9246
  %549 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9247, !tbaa !760
  %550 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %549, i64 0, i32 3, !dbg !9248
  %551 = load i64, i64* %550, align 8, !dbg !9248, !tbaa !1093
  %552 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %548, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.179, i64 0, i64 0), i8* nonnull %547, i64 %551) #6, !dbg !9249
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %552) #6, !dbg !9251
  br label %1234, !dbg !9252

; <label>:553:                                    ; preds = %526, %529
  %554 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.182, i64 0, i64 0)) #9, !dbg !9253
  %555 = icmp eq i32 %554, 0, !dbg !9253
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9254
  br i1 %555, label %556, label %713, !dbg !9254

; <label>:556:                                    ; preds = %553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9255
  br i1 %18, label %557, label %713, !dbg !9255

; <label>:557:                                    ; preds = %556
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9263
  %558 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !tbaa !788
  br label %559, !dbg !9263

; <label>:559:                                    ; preds = %587, %557
  %560 = phi i64 [ 0, %557 ], [ %592, %587 ]
  %561 = phi i32 [ 0, %557 ], [ %591, %587 ]
  %562 = phi i32 [ 0, %557 ], [ %590, %587 ]
  %563 = phi i32 [ 0, %557 ], [ %589, %587 ]
  %564 = phi i32 [ 0, %557 ], [ %588, %587 ]
  %565 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %558, i64 0, i32 8, i64 %560, !dbg !9264
  %566 = load %struct.clusterNode*, %struct.clusterNode** %565, align 8, !dbg !9264, !tbaa !760
  %567 = icmp eq %struct.clusterNode* %566, null, !dbg !9266
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9268
  br i1 %567, label %587, label %568, !dbg !9268

; <label>:568:                                    ; preds = %559
  %569 = add nsw i32 %561, 1, !dbg !9269
  %570 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %566, i64 0, i32 2, !dbg !9270
  %571 = load i32, i32* %570, align 8, !dbg !9270, !tbaa !927
  %572 = and i32 %571, 8, !dbg !9270
  %573 = icmp eq i32 %572, 0, !dbg !9270
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9272
  br i1 %573, label %576, label %574, !dbg !9272

; <label>:574:                                    ; preds = %568
  %575 = add nsw i32 %564, 1, !dbg !9273
  br label %583, !dbg !9275

; <label>:576:                                    ; preds = %568
  %577 = and i32 %571, 4, !dbg !9276
  %578 = icmp eq i32 %577, 0, !dbg !9276
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9278
  br i1 %578, label %581, label %579, !dbg !9278

; <label>:579:                                    ; preds = %576
  %580 = add nsw i32 %563, 1, !dbg !9279
  br label %583, !dbg !9281

; <label>:581:                                    ; preds = %576
  %582 = add nsw i32 %562, 1, !dbg !9282
  br label %583

; <label>:583:                                    ; preds = %579, %581, %574
  %584 = phi i32 [ %575, %574 ], [ %564, %579 ], [ %564, %581 ], !dbg !9284
  %585 = phi i32 [ %563, %574 ], [ %580, %579 ], [ %563, %581 ], !dbg !9284
  %586 = phi i32 [ %562, %574 ], [ %562, %579 ], [ %582, %581 ], !dbg !9285
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %587, !dbg !9286

; <label>:587:                                    ; preds = %559, %583
  %588 = phi i32 [ %584, %583 ], [ %564, %559 ], !dbg !9287
  %589 = phi i32 [ %585, %583 ], [ %563, %559 ], !dbg !9259
  %590 = phi i32 [ %586, %583 ], [ %562, %559 ], !dbg !9258
  %591 = phi i32 [ %569, %583 ], [ %561, %559 ], !dbg !9288
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9289
  %592 = add nuw nsw i64 %560, 1, !dbg !9290
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9291
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9263
  %593 = icmp eq i64 %592, 16384, !dbg !9292
  br i1 %593, label %594, label %559, !dbg !9263, !llvm.loop !9293

; <label>:594:                                    ; preds = %587
  %595 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9295, !tbaa !760
  %596 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %595, i64 0, i32 2, !dbg !9295
  %597 = load i32, i32* %596, align 8, !dbg !9295, !tbaa !927
  %598 = and i32 %597, 2, !dbg !9295
  %599 = icmp eq i32 %598, 0, !dbg !9295
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9296
  br i1 %599, label %604, label %600, !dbg !9296

; <label>:600:                                    ; preds = %594
  %601 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %595, i64 0, i32 8, !dbg !9297
  %602 = load %struct.clusterNode*, %struct.clusterNode** %601, align 8, !dbg !9297, !tbaa !1025
  %603 = icmp eq %struct.clusterNode* %602, null, !dbg !9298
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9299
  br i1 %603, label %604, label %605, !dbg !9299

; <label>:604:                                    ; preds = %600, %594
  br label %605, !dbg !9299

; <label>:605:                                    ; preds = %600, %604
  %606 = phi %struct.clusterNode* [ %595, %604 ], [ %602, %600 ]
  %607 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %606, i64 0, i32 3, !dbg !9284
  %608 = load i64, i64* %607, align 8, !dbg !9284, !tbaa !1093
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9299
  %609 = tail call i8* @sdsempty() #6, !dbg !9301
  %610 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9302, !tbaa !788
  %611 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %610, i64 0, i32 2, !dbg !9303
  %612 = load i32, i32* %611, align 8, !dbg !9303, !tbaa !1770
  %613 = sext i32 %612 to i64, !dbg !9304
  %614 = getelementptr inbounds [3 x i8*], [3 x i8*]* @clusterCommand.statestr, i64 0, i64 %613, !dbg !9304
  %615 = load i8*, i8** %614, align 8, !dbg !9304, !tbaa !760
  %616 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %610, i64 0, i32 4, !dbg !9305
  %617 = load %struct.dict*, %struct.dict** %616, align 8, !dbg !9305, !tbaa !837
  %618 = getelementptr inbounds %struct.dict, %struct.dict* %617, i64 0, i32 2, i64 0, i32 3, !dbg !9305
  %619 = load i64, i64* %618, align 8, !dbg !9305, !tbaa !5132
  %620 = getelementptr inbounds %struct.dict, %struct.dict* %617, i64 0, i32 2, i64 1, i32 3, !dbg !9305
  %621 = load i64, i64* %620, align 8, !dbg !9305, !tbaa !5132
  %622 = add i64 %621, %619, !dbg !9305
  %623 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %610, i64 0, i32 3, !dbg !9306
  %624 = load i32, i32* %623, align 4, !dbg !9306, !tbaa !1773
  %625 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %610, i64 0, i32 1, !dbg !9307
  %626 = load i64, i64* %625, align 8, !dbg !9307, !tbaa !797
  %627 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %609, i8* getelementptr inbounds ([207 x i8], [207 x i8]* @.str.184, i64 0, i64 0), i8* %615, i32 %591, i32 %590, i32 %589, i32 %588, i64 %622, i32 %624, i64 %626, i64 %608) #6, !dbg !9308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9313
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9314
  br label %630, !dbg !9314

; <label>:628:                                    ; preds = %650
  %629 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %652, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.186, i64 0, i64 0), i64 %651) #6, !dbg !9315
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9317
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9318
  br label %687, !dbg !9318

; <label>:630:                                    ; preds = %650, %605
  %631 = phi i64 [ 0, %605 ], [ %653, %650 ]
  %632 = phi i8* [ %627, %605 ], [ %652, %650 ]
  %633 = phi i64 [ 0, %605 ], [ %651, %650 ]
  %634 = phi i32 [ 0, %605 ], [ %654, %650 ]
  %635 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9319, !tbaa !788
  %636 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %635, i64 0, i32 23, i64 %631, !dbg !9323
  %637 = load i64, i64* %636, align 8, !dbg !9323, !tbaa !1173
  %638 = icmp eq i64 %637, 0, !dbg !9324
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9325
  br i1 %638, label %650, label %639, !dbg !9325

; <label>:639:                                    ; preds = %630
  %640 = add nsw i64 %637, %633, !dbg !9326
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9329
  %641 = trunc i32 %634 to i31, !dbg !9329
  %642 = icmp ult i31 %641, 10, !dbg !9329
  br i1 %642, label %643, label %647, !dbg !9329

; <label>:643:                                    ; preds = %639
  %644 = sext i31 %641 to i64, !dbg !9329
  %645 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.clusterCommand.284, i64 0, i64 %644, !dbg !9329
  %646 = load i8*, i8** %645, align 8, !dbg !9329
  br label %647, !dbg !9329

; <label>:647:                                    ; preds = %639, %643
  %648 = phi i8* [ %646, %643 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), %639 ], !dbg !9330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9332
  %649 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %632, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.185, i64 0, i64 0), i8* nonnull %648, i64 %637) #6, !dbg !9333
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9334
  br label %650, !dbg !9334

; <label>:650:                                    ; preds = %630, %647
  %651 = phi i64 [ %633, %630 ], [ %640, %647 ], !dbg !9331
  %652 = phi i8* [ %632, %630 ], [ %649, %647 ], !dbg !9331
  %653 = add nuw nsw i64 %631, 1, !dbg !9335
  %654 = add nuw nsw i32 %634, 1, !dbg !9335
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9336
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9314
  %655 = icmp eq i64 %653, 10, !dbg !9337
  br i1 %655, label %628, label %630, !dbg !9314, !llvm.loop !9338

; <label>:656:                                    ; preds = %707
  %657 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %709, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.188, i64 0, i64 0), i64 %708) #6, !dbg !9340
  %658 = tail call i8* @sdsempty() #6, !dbg !9341
  %659 = getelementptr inbounds i8, i8* %657, i64 -1, !dbg !9344
  %660 = load i8, i8* %659, align 1, !dbg !9344, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9346
  %661 = trunc i8 %660 to i3, !dbg !9346
  switch i3 %661, label %683 [
    i3 0, label %662
    i3 1, label %665
    i3 2, label %669
    i3 3, label %674
    i3 -4, label %679
  ], !dbg !9346

; <label>:662:                                    ; preds = %656
  %663 = lshr i8 %660, 3, !dbg !9347
  %664 = zext i8 %663 to i64, !dbg !9347
  br label %683, !dbg !9348

; <label>:665:                                    ; preds = %656
  %666 = getelementptr inbounds i8, i8* %657, i64 -3, !dbg !9349
  %667 = load i8, i8* %666, align 1, !dbg !9350, !tbaa !745
  %668 = zext i8 %667 to i64, !dbg !9349
  br label %683, !dbg !9351

; <label>:669:                                    ; preds = %656
  %670 = getelementptr inbounds i8, i8* %657, i64 -5, !dbg !9352
  %671 = bitcast i8* %670 to i16*, !dbg !9353
  %672 = load i16, i16* %671, align 1, !dbg !9353, !tbaa !1503
  %673 = zext i16 %672 to i64, !dbg !9352
  br label %683, !dbg !9354

; <label>:674:                                    ; preds = %656
  %675 = getelementptr inbounds i8, i8* %657, i64 -9, !dbg !9355
  %676 = bitcast i8* %675 to i32*, !dbg !9356
  %677 = load i32, i32* %676, align 1, !dbg !9356, !tbaa !708
  %678 = zext i32 %677 to i64, !dbg !9355
  br label %683, !dbg !9357

; <label>:679:                                    ; preds = %656
  %680 = getelementptr inbounds i8, i8* %657, i64 -17, !dbg !9358
  %681 = bitcast i8* %680 to i64*, !dbg !9359
  %682 = load i64, i64* %681, align 1, !dbg !9359, !tbaa !1510
  br label %683, !dbg !9360

; <label>:683:                                    ; preds = %656, %662, %665, %669, %674, %679
  %684 = phi i64 [ %682, %679 ], [ %678, %674 ], [ %673, %669 ], [ %668, %665 ], [ %664, %662 ], [ 0, %656 ], !dbg !9361
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9284
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9362
  %685 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %658, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i64 0, i64 0), i64 %684) #6, !dbg !9363
  tail call void @addReplySds(%struct.client* %0, i8* %685) #6, !dbg !9364
  tail call void @addReplySds(%struct.client* %0, i8* %657) #6, !dbg !9365
  %686 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 0), align 8, !dbg !9366, !tbaa !9367
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %686) #6, !dbg !9368
  br label %1234, !dbg !9369

; <label>:687:                                    ; preds = %707, %628
  %688 = phi i64 [ 0, %628 ], [ %710, %707 ]
  %689 = phi i8* [ %629, %628 ], [ %709, %707 ]
  %690 = phi i32 [ 0, %628 ], [ %711, %707 ]
  %691 = phi i64 [ 0, %628 ], [ %708, %707 ]
  %692 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9370, !tbaa !788
  %693 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %692, i64 0, i32 24, i64 %688, !dbg !9374
  %694 = load i64, i64* %693, align 8, !dbg !9374, !tbaa !1173
  %695 = icmp eq i64 %694, 0, !dbg !9375
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9376
  br i1 %695, label %707, label %696, !dbg !9376

; <label>:696:                                    ; preds = %687
  %697 = add nsw i64 %694, %691, !dbg !9377
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9380
  %698 = trunc i32 %690 to i31, !dbg !9380
  %699 = icmp ult i31 %698, 10, !dbg !9380
  br i1 %699, label %700, label %704, !dbg !9380

; <label>:700:                                    ; preds = %696
  %701 = sext i31 %698 to i64, !dbg !9380
  %702 = getelementptr inbounds [10 x i8*], [10 x i8*]* @switch.table.clusterCommand.284, i64 0, i64 %701, !dbg !9380
  %703 = load i8*, i8** %702, align 8, !dbg !9380
  br label %704, !dbg !9380

; <label>:704:                                    ; preds = %696, %700
  %705 = phi i8* [ %703, %700 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.125, i64 0, i64 0), %696 ], !dbg !9381
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9382
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9383
  %706 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %689, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.187, i64 0, i64 0), i8* nonnull %705, i64 %694) #6, !dbg !9384
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9385
  br label %707, !dbg !9385

; <label>:707:                                    ; preds = %687, %704
  %708 = phi i64 [ %691, %687 ], [ %697, %704 ], !dbg !9382
  %709 = phi i8* [ %689, %687 ], [ %706, %704 ], !dbg !9382
  %710 = add nuw nsw i64 %688, 1, !dbg !9386
  %711 = add nuw nsw i32 %690, 1, !dbg !9386
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9387
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9318
  %712 = icmp eq i64 %710, 10, !dbg !9388
  br i1 %712, label %656, label %687, !dbg !9318, !llvm.loop !9389

; <label>:713:                                    ; preds = %553, %556
  %714 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.190, i64 0, i64 0)) #9, !dbg !9391
  %715 = icmp eq i32 %714, 0, !dbg !9391
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9392
  br i1 %715, label %716, label %727, !dbg !9392

; <label>:716:                                    ; preds = %713
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9393
  br i1 %18, label %717, label %727, !dbg !9393

; <label>:717:                                    ; preds = %716
  %718 = tail call i32 @clusterSaveConfig(i32 1) #10, !dbg !9394
  %719 = icmp eq i32 %718, 0, !dbg !9396
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9398
  br i1 %719, label %720, label %722, !dbg !9398

; <label>:720:                                    ; preds = %717
  %721 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9399, !tbaa !8716
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %721) #6, !dbg !9400
  br label %726, !dbg !9400

; <label>:722:                                    ; preds = %717
  %723 = tail call i32* @__errno() #6, !dbg !9401
  %724 = load i32, i32* %723, align 4, !dbg !9401, !tbaa !708
  %725 = tail call i8* @strerror(i32 %724) #6, !dbg !9402
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.191, i64 0, i64 0), i8* %725) #6, !dbg !9403
  br label %726

; <label>:726:                                    ; preds = %722, %720
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %1234, !dbg !9404

; <label>:727:                                    ; preds = %713, %716
  %728 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i64 0, i64 0)) #9, !dbg !9405
  %729 = icmp eq i32 %728, 0, !dbg !9405
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9406
  br i1 %729, label %730, label %766, !dbg !9406

; <label>:730:                                    ; preds = %727
  %731 = icmp eq i32 %17, 3, !dbg !9407
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9408
  br i1 %731, label %732, label %766, !dbg !9408

; <label>:732:                                    ; preds = %730
  %733 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9409
  %734 = load %struct.redisObject*, %struct.redisObject** %733, align 8, !dbg !9409, !tbaa !760
  %735 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %734, i64 0, i32 2, !dbg !9410
  %736 = load i8*, i8** %735, align 8, !dbg !9410, !tbaa !6254
  %737 = getelementptr inbounds i8, i8* %736, i64 -1, !dbg !9414
  %738 = load i8, i8* %737, align 1, !dbg !9414, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9416
  %739 = trunc i8 %738 to i3, !dbg !9416
  switch i3 %739, label %761 [
    i3 0, label %740
    i3 1, label %743
    i3 2, label %747
    i3 3, label %752
    i3 -4, label %757
  ], !dbg !9416

; <label>:740:                                    ; preds = %732
  %741 = lshr i8 %738, 3, !dbg !9417
  %742 = zext i8 %741 to i64, !dbg !9417
  br label %761, !dbg !9418

; <label>:743:                                    ; preds = %732
  %744 = getelementptr inbounds i8, i8* %736, i64 -3, !dbg !9419
  %745 = load i8, i8* %744, align 1, !dbg !9420, !tbaa !745
  %746 = zext i8 %745 to i64, !dbg !9419
  br label %761, !dbg !9421

; <label>:747:                                    ; preds = %732
  %748 = getelementptr inbounds i8, i8* %736, i64 -5, !dbg !9422
  %749 = bitcast i8* %748 to i16*, !dbg !9423
  %750 = load i16, i16* %749, align 1, !dbg !9423, !tbaa !1503
  %751 = zext i16 %750 to i64, !dbg !9422
  br label %761, !dbg !9424

; <label>:752:                                    ; preds = %732
  %753 = getelementptr inbounds i8, i8* %736, i64 -9, !dbg !9425
  %754 = bitcast i8* %753 to i32*, !dbg !9426
  %755 = load i32, i32* %754, align 1, !dbg !9426, !tbaa !708
  %756 = zext i32 %755 to i64, !dbg !9425
  br label %761, !dbg !9427

; <label>:757:                                    ; preds = %732
  %758 = getelementptr inbounds i8, i8* %736, i64 -17, !dbg !9428
  %759 = bitcast i8* %758 to i64*, !dbg !9429
  %760 = load i64, i64* %759, align 1, !dbg !9429, !tbaa !1510
  br label %761, !dbg !9430

; <label>:761:                                    ; preds = %732, %740, %743, %747, %752, %757
  %762 = phi i64 [ %760, %757 ], [ %756, %752 ], [ %751, %747 ], [ %746, %743 ], [ %742, %740 ], [ 0, %732 ], !dbg !9431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9432
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9433
  %763 = trunc i64 %762 to i32, !dbg !9434
  %764 = tail call i32 @keyHashSlot(i8* %736, i32 %763) #10, !dbg !9435
  %765 = zext i32 %764 to i64, !dbg !9435
  tail call void @addReplyLongLong(%struct.client* nonnull %0, i64 %765) #6, !dbg !9436
  br label %1234, !dbg !9437

; <label>:766:                                    ; preds = %727, %730
  %767 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.193, i64 0, i64 0)) #9, !dbg !9438
  %768 = icmp eq i32 %767, 0, !dbg !9438
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9439
  br i1 %768, label %769, label %786, !dbg !9439

; <label>:769:                                    ; preds = %766
  %770 = icmp eq i32 %17, 3, !dbg !9440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9441
  br i1 %770, label %771, label %786, !dbg !9441

; <label>:771:                                    ; preds = %769
  %772 = bitcast i64* %8 to i8*, !dbg !9442
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %772) #7, !dbg !9442
  %773 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9443
  %774 = load %struct.redisObject*, %struct.redisObject** %773, align 8, !dbg !9443, !tbaa !760
  %775 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %774, i64* nonnull %8, i8* null) #6, !dbg !9446
  %776 = icmp eq i32 %775, 0, !dbg !9447
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9448
  br i1 %776, label %777, label %785, !dbg !9448

; <label>:777:                                    ; preds = %771
  %778 = load i64, i64* %8, align 8, !dbg !9449, !tbaa !1173
  %779 = icmp ugt i64 %778, 16383, !dbg !9451
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9451
  br i1 %779, label %780, label %781, !dbg !9451

; <label>:780:                                    ; preds = %777
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.194, i64 0, i64 0)) #6, !dbg !9452
  br label %785, !dbg !9454

; <label>:781:                                    ; preds = %777
  %782 = trunc i64 %778 to i32, !dbg !9455
  %783 = call i32 @countKeysInSlot(i32 %782) #6, !dbg !9456
  %784 = zext i32 %783 to i64, !dbg !9456
  call void @addReplyLongLong(%struct.client* nonnull %0, i64 %784) #6, !dbg !9457
  br label %785, !dbg !9458

; <label>:785:                                    ; preds = %771, %781, %780
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9459
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %772) #7, !dbg !9458
  br label %1234

; <label>:786:                                    ; preds = %766, %769
  %787 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.195, i64 0, i64 0)) #9, !dbg !9460
  %788 = icmp eq i32 %787, 0, !dbg !9460
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9461
  br i1 %788, label %789, label %839, !dbg !9461

; <label>:789:                                    ; preds = %786
  %790 = icmp eq i32 %17, 4, !dbg !9462
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9463
  br i1 %790, label %791, label %839, !dbg !9463

; <label>:791:                                    ; preds = %789
  %792 = bitcast i64* %9 to i8*, !dbg !9464
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %792) #7, !dbg !9464
  %793 = bitcast i64* %10 to i8*, !dbg !9464
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %793) #7, !dbg !9464
  %794 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9465
  %795 = load %struct.redisObject*, %struct.redisObject** %794, align 8, !dbg !9465, !tbaa !760
  %796 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %795, i64* nonnull %10, i8* null) #6, !dbg !9468
  %797 = icmp eq i32 %796, 0, !dbg !9469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9470
  br i1 %797, label %798, label %838, !dbg !9470

; <label>:798:                                    ; preds = %791
  %799 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9471, !tbaa !8644
  %800 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %799, i64 3, !dbg !9473
  %801 = load %struct.redisObject*, %struct.redisObject** %800, align 8, !dbg !9473, !tbaa !760
  %802 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %801, i64* nonnull %9, i8* null) #6, !dbg !9475
  %803 = icmp eq i32 %802, 0, !dbg !9476
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9477
  br i1 %803, label %804, label %838, !dbg !9477

; <label>:804:                                    ; preds = %798
  %805 = load i64, i64* %10, align 8, !dbg !9478, !tbaa !1173
  %806 = icmp ugt i64 %805, 16383, !dbg !9480
  %807 = load i64, i64* %9, align 8, !dbg !9481
  %808 = icmp slt i64 %807, 0, !dbg !9482
  %809 = or i1 %806, %808, !dbg !9480
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9480
  br i1 %809, label %810, label %811, !dbg !9480

; <label>:810:                                    ; preds = %804
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.196, i64 0, i64 0)) #6, !dbg !9483
  br label %838, !dbg !9485

; <label>:811:                                    ; preds = %804
  %812 = trunc i64 %805 to i32, !dbg !9486
  %813 = call i32 @countKeysInSlot(i32 %812) #6, !dbg !9487
  %814 = load i64, i64* %9, align 8, !dbg !9489, !tbaa !1173
  %815 = zext i32 %813 to i64, !dbg !9491
  %816 = icmp sgt i64 %814, %815, !dbg !9492
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9493
  br i1 %816, label %817, label %818, !dbg !9493

; <label>:817:                                    ; preds = %811
  store i64 %815, i64* %9, align 8, !dbg !9494, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9495
  br label %818, !dbg !9495

; <label>:818:                                    ; preds = %817, %811
  %819 = phi i64 [ %815, %817 ], [ %814, %811 ], !dbg !9496
  %820 = shl i64 %819, 3, !dbg !9497
  %821 = call i8* @zmalloc(i64 %820) #6, !dbg !9498
  %822 = bitcast i8* %821 to %struct.redisObject**, !dbg !9498
  %823 = load i64, i64* %10, align 8, !dbg !9500, !tbaa !1173
  %824 = trunc i64 %823 to i32, !dbg !9500
  %825 = load i64, i64* %9, align 8, !dbg !9501, !tbaa !1173
  %826 = trunc i64 %825 to i32, !dbg !9501
  %827 = call i32 @getKeysInSlot(i32 %824, %struct.redisObject** %822, i32 %826) #6, !dbg !9502
  %828 = zext i32 %827 to i64, !dbg !9504
  call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %828) #6, !dbg !9505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9507
  %829 = icmp eq i32 %827, 0, !dbg !9509
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9511
  br i1 %829, label %837, label %830, !dbg !9511

; <label>:830:                                    ; preds = %818, %830
  %831 = phi i64 [ %835, %830 ], [ 0, %818 ]
  %832 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %822, i64 %831, !dbg !9512
  %833 = load %struct.redisObject*, %struct.redisObject** %832, align 8, !dbg !9512, !tbaa !760
  call void @addReplyBulk(%struct.client* %0, %struct.redisObject* %833) #6, !dbg !9514
  %834 = load %struct.redisObject*, %struct.redisObject** %832, align 8, !dbg !9515, !tbaa !760
  call void @decrRefCount(%struct.redisObject* %834) #6, !dbg !9516
  %835 = add nuw nsw i64 %831, 1, !dbg !9517
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9518
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9511
  %836 = icmp eq i64 %835, %828, !dbg !9509
  br i1 %836, label %837, label %830, !dbg !9511, !llvm.loop !9519

; <label>:837:                                    ; preds = %830, %818
  call void @zfree(i8* %821) #6, !dbg !9521
  br label %838, !dbg !9522

; <label>:838:                                    ; preds = %798, %791, %837, %810
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9523
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %793) #7, !dbg !9522
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %792) #7, !dbg !9522
  br label %1234

; <label>:839:                                    ; preds = %786, %789
  %840 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.197, i64 0, i64 0)) #9, !dbg !9524
  %841 = icmp eq i32 %840, 0, !dbg !9524
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9525
  br i1 %841, label %842, label %888, !dbg !9525

; <label>:842:                                    ; preds = %839
  %843 = icmp eq i32 %17, 3, !dbg !9526
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9527
  br i1 %843, label %844, label %888, !dbg !9527

; <label>:844:                                    ; preds = %842
  %845 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9528
  %846 = load %struct.redisObject*, %struct.redisObject** %845, align 8, !dbg !9528, !tbaa !760
  %847 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %846, i64 0, i32 2, !dbg !9529
  %848 = load i8*, i8** %847, align 8, !dbg !9529, !tbaa !6254
  %849 = tail call i8* @sdsnewlen(i8* %848, i64 40) #6, !dbg !9532
  %850 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9534, !tbaa !788
  %851 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %850, i64 0, i32 4, !dbg !9535
  %852 = load %struct.dict*, %struct.dict** %851, align 8, !dbg !9535, !tbaa !837
  %853 = tail call %struct.dictEntry* @dictFind(%struct.dict* %852, i8* %849) #6, !dbg !9536
  tail call void @sdsfree(i8* %849) #6, !dbg !9538
  %854 = icmp eq %struct.dictEntry* %853, null, !dbg !9539
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9540
  br i1 %854, label %855, label %856, !dbg !9540

; <label>:855:                                    ; preds = %844
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9542
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9544
  br label %861, !dbg !9544

; <label>:856:                                    ; preds = %844
  %857 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %853, i64 0, i32 1, i32 0, !dbg !9545
  %858 = bitcast i8** %857 to %struct.clusterNode**, !dbg !9545
  %859 = load %struct.clusterNode*, %struct.clusterNode** %858, align 8, !dbg !9545, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9546
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9542
  %860 = icmp eq %struct.clusterNode* %859, null, !dbg !9547
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9544
  br i1 %860, label %861, label %867, !dbg !9544

; <label>:861:                                    ; preds = %855, %856
  %862 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9549, !tbaa !8644
  %863 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %862, i64 2, !dbg !9551
  %864 = load %struct.redisObject*, %struct.redisObject** %863, align 8, !dbg !9551, !tbaa !760
  %865 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %864, i64 0, i32 2, !dbg !9552
  %866 = load i8*, i8** %865, align 8, !dbg !9552, !tbaa !6254
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %866) #6, !dbg !9553
  br label %887, !dbg !9554

; <label>:867:                                    ; preds = %856
  %868 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9555, !tbaa !760
  %869 = icmp eq %struct.clusterNode* %859, %868, !dbg !9557
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9558
  br i1 %869, label %870, label %871, !dbg !9558

; <label>:870:                                    ; preds = %867
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.198, i64 0, i64 0)) #6, !dbg !9559
  br label %887, !dbg !9561

; <label>:871:                                    ; preds = %867
  %872 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %868, i64 0, i32 2, !dbg !9562
  %873 = load i32, i32* %872, align 8, !dbg !9562, !tbaa !927
  %874 = and i32 %873, 2, !dbg !9562
  %875 = icmp eq i32 %874, 0, !dbg !9562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9564
  br i1 %875, label %881, label %876, !dbg !9564

; <label>:876:                                    ; preds = %871
  %877 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %868, i64 0, i32 8, !dbg !9565
  %878 = load %struct.clusterNode*, %struct.clusterNode** %877, align 8, !dbg !9565, !tbaa !1025
  %879 = icmp eq %struct.clusterNode* %878, %859, !dbg !9566
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9567
  br i1 %879, label %880, label %881, !dbg !9567

; <label>:880:                                    ; preds = %876
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.199, i64 0, i64 0)) #6, !dbg !9568
  br label %887, !dbg !9570

; <label>:881:                                    ; preds = %871, %876
  tail call void @clusterBlacklistAddNode(%struct.clusterNode* nonnull %859) #10, !dbg !9571
  tail call void @clusterDelNode(%struct.clusterNode* nonnull %859) #10, !dbg !9572
  %882 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9575, !tbaa !788
  %883 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %882, i64 0, i32 22, !dbg !9576
  %884 = load i32, i32* %883, align 8, !dbg !9577, !tbaa !1475
  %885 = or i32 %884, 6, !dbg !9577
  store i32 %885, i32* %883, align 8, !dbg !9577, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9578
  %886 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9579, !tbaa !8716
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %886) #6, !dbg !9580
  br label %887, !dbg !9581

; <label>:887:                                    ; preds = %881, %880, %870, %861
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9582
  br label %1234

; <label>:888:                                    ; preds = %839, %842
  %889 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.200, i64 0, i64 0)) #9, !dbg !9583
  %890 = icmp eq i32 %889, 0, !dbg !9583
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9584
  br i1 %890, label %891, label %953, !dbg !9584

; <label>:891:                                    ; preds = %888
  %892 = icmp eq i32 %17, 3, !dbg !9585
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9586
  br i1 %892, label %893, label %953, !dbg !9586

; <label>:893:                                    ; preds = %891
  %894 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9587
  %895 = load %struct.redisObject*, %struct.redisObject** %894, align 8, !dbg !9587, !tbaa !760
  %896 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %895, i64 0, i32 2, !dbg !9588
  %897 = load i8*, i8** %896, align 8, !dbg !9588, !tbaa !6254
  %898 = tail call i8* @sdsnewlen(i8* %897, i64 40) #6, !dbg !9591
  %899 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9593, !tbaa !788
  %900 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %899, i64 0, i32 4, !dbg !9594
  %901 = load %struct.dict*, %struct.dict** %900, align 8, !dbg !9594, !tbaa !837
  %902 = tail call %struct.dictEntry* @dictFind(%struct.dict* %901, i8* %898) #6, !dbg !9595
  tail call void @sdsfree(i8* %898) #6, !dbg !9597
  %903 = icmp eq %struct.dictEntry* %902, null, !dbg !9598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9599
  br i1 %903, label %904, label %905, !dbg !9599

; <label>:904:                                    ; preds = %893
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9600
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9601
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9603
  br label %910, !dbg !9603

; <label>:905:                                    ; preds = %893
  %906 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %902, i64 0, i32 1, i32 0, !dbg !9604
  %907 = bitcast i8** %906 to %struct.clusterNode**, !dbg !9604
  %908 = load %struct.clusterNode*, %struct.clusterNode** %907, align 8, !dbg !9604, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9605
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9601
  %909 = icmp eq %struct.clusterNode* %908, null, !dbg !9606
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9603
  br i1 %909, label %910, label %916, !dbg !9603

; <label>:910:                                    ; preds = %904, %905
  %911 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9608, !tbaa !8644
  %912 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %911, i64 2, !dbg !9610
  %913 = load %struct.redisObject*, %struct.redisObject** %912, align 8, !dbg !9610, !tbaa !760
  %914 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %913, i64 0, i32 2, !dbg !9611
  %915 = load i8*, i8** %914, align 8, !dbg !9611, !tbaa !6254
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %915) #6, !dbg !9612
  br label %952, !dbg !9613

; <label>:916:                                    ; preds = %905
  %917 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9614, !tbaa !760
  %918 = icmp eq %struct.clusterNode* %908, %917, !dbg !9616
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9617
  br i1 %918, label %919, label %920, !dbg !9617

; <label>:919:                                    ; preds = %916
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.201, i64 0, i64 0)) #6, !dbg !9618
  br label %952, !dbg !9620

; <label>:920:                                    ; preds = %916
  %921 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %908, i64 0, i32 2, !dbg !9621
  %922 = load i32, i32* %921, align 8, !dbg !9621, !tbaa !927
  %923 = and i32 %922, 2, !dbg !9621
  %924 = icmp eq i32 %923, 0, !dbg !9621
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9623
  br i1 %924, label %926, label %925, !dbg !9623

; <label>:925:                                    ; preds = %920
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.202, i64 0, i64 0)) #6, !dbg !9624
  br label %952, !dbg !9626

; <label>:926:                                    ; preds = %920
  %927 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %917, i64 0, i32 2, !dbg !9627
  %928 = load i32, i32* %927, align 8, !dbg !9627, !tbaa !927
  %929 = and i32 %928, 1, !dbg !9627
  %930 = icmp eq i32 %929, 0, !dbg !9627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9629
  br i1 %930, label %946, label %931, !dbg !9629

; <label>:931:                                    ; preds = %926
  %932 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %917, i64 0, i32 5, !dbg !9630
  %933 = load i32, i32* %932, align 8, !dbg !9630, !tbaa !1164
  %934 = icmp eq i32 %933, 0, !dbg !9631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9632
  br i1 %934, label %935, label %945, !dbg !9632

; <label>:935:                                    ; preds = %931
  %936 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !9633, !tbaa !8017
  %937 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %936, i64 0, i32 0, !dbg !9633
  %938 = load %struct.dict*, %struct.dict** %937, align 8, !dbg !9633, !tbaa !8021
  %939 = getelementptr inbounds %struct.dict, %struct.dict* %938, i64 0, i32 2, i64 0, i32 3, !dbg !9633
  %940 = load i64, i64* %939, align 8, !dbg !9633, !tbaa !5132
  %941 = getelementptr inbounds %struct.dict, %struct.dict* %938, i64 0, i32 2, i64 1, i32 3, !dbg !9633
  %942 = load i64, i64* %941, align 8, !dbg !9633, !tbaa !5132
  %943 = sub i64 0, %942, !dbg !9634
  %944 = icmp eq i64 %940, %943, !dbg !9634
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9635
  br i1 %944, label %946, label %945, !dbg !9635

; <label>:945:                                    ; preds = %935, %931
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.203, i64 0, i64 0)) #6, !dbg !9636
  br label %952, !dbg !9638

; <label>:946:                                    ; preds = %935, %926
  tail call void @clusterSetMaster(%struct.clusterNode* nonnull %908) #10, !dbg !9639
  %947 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9642, !tbaa !788
  %948 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %947, i64 0, i32 22, !dbg !9643
  %949 = load i32, i32* %948, align 8, !dbg !9644, !tbaa !1475
  %950 = or i32 %949, 6, !dbg !9644
  store i32 %950, i32* %948, align 8, !dbg !9644, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9645
  %951 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9646, !tbaa !8716
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %951) #6, !dbg !9647
  br label %952, !dbg !9648

; <label>:952:                                    ; preds = %946, %945, %925, %919, %910
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9649
  br label %1234

; <label>:953:                                    ; preds = %888, %891
  %954 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i64 0, i64 0)) #9, !dbg !9650
  %955 = icmp eq i32 %954, 0, !dbg !9650
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9651
  br i1 %955, label %959, label %956, !dbg !9651

; <label>:956:                                    ; preds = %953
  %957 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.205, i64 0, i64 0)) #9, !dbg !9652
  %958 = icmp eq i32 %957, 0, !dbg !9652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9653
  br i1 %958, label %959, label %1009, !dbg !9653

; <label>:959:                                    ; preds = %956, %953
  %960 = icmp eq i32 %17, 3, !dbg !9654
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9655
  br i1 %960, label %961, label %1009, !dbg !9655

; <label>:961:                                    ; preds = %959
  %962 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9656
  %963 = load %struct.redisObject*, %struct.redisObject** %962, align 8, !dbg !9656, !tbaa !760
  %964 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %963, i64 0, i32 2, !dbg !9657
  %965 = load i8*, i8** %964, align 8, !dbg !9657, !tbaa !6254
  %966 = tail call i8* @sdsnewlen(i8* %965, i64 40) #6, !dbg !9660
  %967 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9662, !tbaa !788
  %968 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %967, i64 0, i32 4, !dbg !9663
  %969 = load %struct.dict*, %struct.dict** %968, align 8, !dbg !9663, !tbaa !837
  %970 = tail call %struct.dictEntry* @dictFind(%struct.dict* %969, i8* %966) #6, !dbg !9664
  tail call void @sdsfree(i8* %966) #6, !dbg !9666
  %971 = icmp eq %struct.dictEntry* %970, null, !dbg !9667
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9668
  br i1 %971, label %972, label %973, !dbg !9668

; <label>:972:                                    ; preds = %961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9669
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9670
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9672
  br label %978, !dbg !9672

; <label>:973:                                    ; preds = %961
  %974 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %970, i64 0, i32 1, i32 0, !dbg !9673
  %975 = bitcast i8** %974 to %struct.clusterNode**, !dbg !9673
  %976 = load %struct.clusterNode*, %struct.clusterNode** %975, align 8, !dbg !9673, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9674
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9670
  %977 = icmp eq %struct.clusterNode* %976, null, !dbg !9675
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9672
  br i1 %977, label %978, label %984, !dbg !9672

; <label>:978:                                    ; preds = %972, %973
  %979 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9677, !tbaa !8644
  %980 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %979, i64 2, !dbg !9679
  %981 = load %struct.redisObject*, %struct.redisObject** %980, align 8, !dbg !9679, !tbaa !760
  %982 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %981, i64 0, i32 2, !dbg !9680
  %983 = load i8*, i8** %982, align 8, !dbg !9680, !tbaa !6254
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %983) #6, !dbg !9681
  br label %1008, !dbg !9682

; <label>:984:                                    ; preds = %973
  %985 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %976, i64 0, i32 2, !dbg !9683
  %986 = load i32, i32* %985, align 8, !dbg !9683, !tbaa !927
  %987 = and i32 %986, 2, !dbg !9683
  %988 = icmp eq i32 %987, 0, !dbg !9683
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9685
  br i1 %988, label %990, label %989, !dbg !9685

; <label>:989:                                    ; preds = %984
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.206, i64 0, i64 0)) #6, !dbg !9686
  br label %1008, !dbg !9688

; <label>:990:                                    ; preds = %984
  %991 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %976, i64 0, i32 6, !dbg !9689
  %992 = load i32, i32* %991, align 4, !dbg !9689, !tbaa !1041
  %993 = sext i32 %992 to i64, !dbg !9690
  tail call void @addReplyMultiBulkLen(%struct.client* nonnull %0, i64 %993) #6, !dbg !9691
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9693
  %994 = load i32, i32* %991, align 4, !dbg !9694, !tbaa !1041
  %995 = icmp sgt i32 %994, 0, !dbg !9695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9696
  br i1 %995, label %996, label %1008, !dbg !9696

; <label>:996:                                    ; preds = %990
  %997 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %976, i64 0, i32 7
  br label %998, !dbg !9696

; <label>:998:                                    ; preds = %996, %998
  %999 = phi i64 [ 0, %996 ], [ %1004, %998 ]
  %1000 = load %struct.clusterNode**, %struct.clusterNode*** %997, align 8, !dbg !9697, !tbaa !1044
  %1001 = getelementptr inbounds %struct.clusterNode*, %struct.clusterNode** %1000, i64 %999, !dbg !9698
  %1002 = load %struct.clusterNode*, %struct.clusterNode** %1001, align 8, !dbg !9698, !tbaa !760
  %1003 = tail call i8* @clusterGenNodeDescription(%struct.clusterNode* %1002) #10, !dbg !9699
  tail call void @addReplyBulkCString(%struct.client* %0, i8* %1003) #6, !dbg !9701
  tail call void @sdsfree(i8* %1003) #6, !dbg !9702
  %1004 = add nuw nsw i64 %999, 1, !dbg !9703
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9704
  %1005 = load i32, i32* %991, align 4, !dbg !9694, !tbaa !1041
  %1006 = sext i32 %1005 to i64, !dbg !9695
  %1007 = icmp slt i64 %1004, %1006, !dbg !9695
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9696
  br i1 %1007, label %998, label %1008, !dbg !9696, !llvm.loop !9705

; <label>:1008:                                   ; preds = %998, %990, %989, %978
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9707
  br label %1234

; <label>:1009:                                   ; preds = %956, %959
  %1010 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.207, i64 0, i64 0)) #9, !dbg !9708
  %1011 = icmp eq i32 %1010, 0, !dbg !9708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9709
  br i1 %1011, label %1012, label %1045, !dbg !9709

; <label>:1012:                                   ; preds = %1009
  %1013 = icmp eq i32 %17, 3, !dbg !9710
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9711
  br i1 %1013, label %1014, label %1045, !dbg !9711

; <label>:1014:                                   ; preds = %1012
  %1015 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9712
  %1016 = load %struct.redisObject*, %struct.redisObject** %1015, align 8, !dbg !9712, !tbaa !760
  %1017 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1016, i64 0, i32 2, !dbg !9713
  %1018 = load i8*, i8** %1017, align 8, !dbg !9713, !tbaa !6254
  %1019 = tail call i8* @sdsnewlen(i8* %1018, i64 40) #6, !dbg !9716
  %1020 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9718, !tbaa !788
  %1021 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1020, i64 0, i32 4, !dbg !9719
  %1022 = load %struct.dict*, %struct.dict** %1021, align 8, !dbg !9719, !tbaa !837
  %1023 = tail call %struct.dictEntry* @dictFind(%struct.dict* %1022, i8* %1019) #6, !dbg !9720
  tail call void @sdsfree(i8* %1019) #6, !dbg !9722
  %1024 = icmp eq %struct.dictEntry* %1023, null, !dbg !9723
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9724
  br i1 %1024, label %1025, label %1026, !dbg !9724

; <label>:1025:                                   ; preds = %1014
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9725
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9726
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9728
  br label %1031, !dbg !9728

; <label>:1026:                                   ; preds = %1014
  %1027 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %1023, i64 0, i32 1, i32 0, !dbg !9729
  %1028 = bitcast i8** %1027 to %struct.clusterNode**, !dbg !9729
  %1029 = load %struct.clusterNode*, %struct.clusterNode** %1028, align 8, !dbg !9729, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9730
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9726
  %1030 = icmp eq %struct.clusterNode* %1029, null, !dbg !9731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9728
  br i1 %1030, label %1031, label %1037, !dbg !9728

; <label>:1031:                                   ; preds = %1025, %1026
  %1032 = load %struct.redisObject**, %struct.redisObject*** %19, align 8, !dbg !9733, !tbaa !8644
  %1033 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %1032, i64 2, !dbg !9735
  %1034 = load %struct.redisObject*, %struct.redisObject** %1033, align 8, !dbg !9735, !tbaa !760
  %1035 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1034, i64 0, i32 2, !dbg !9736
  %1036 = load i8*, i8** %1035, align 8, !dbg !9736, !tbaa !6254
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.174, i64 0, i64 0), i8* %1036) #6, !dbg !9737
  br label %1044, !dbg !9738

; <label>:1037:                                   ; preds = %1026
  tail call void @clusterNodeCleanupFailureReports(%struct.clusterNode* nonnull %1029) #6, !dbg !9742
  %1038 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1029, i64 0, i32 20, !dbg !9743
  %1039 = load %struct.list*, %struct.list** %1038, align 8, !dbg !9743, !tbaa !1188
  %1040 = getelementptr inbounds %struct.list, %struct.list* %1039, i64 0, i32 5, !dbg !9743
  %1041 = load i64, i64* %1040, align 8, !dbg !9743, !tbaa !2994
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9744
  %1042 = shl i64 %1041, 32, !dbg !9745
  %1043 = ashr exact i64 %1042, 32, !dbg !9745
  tail call void @addReplyLongLong(%struct.client* nonnull %0, i64 %1043) #6, !dbg !9746
  br label %1044, !dbg !9747

; <label>:1044:                                   ; preds = %1037, %1031
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9748
  br label %1234

; <label>:1045:                                   ; preds = %1009, %1012
  %1046 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.208, i64 0, i64 0)) #9, !dbg !9749
  %1047 = icmp eq i32 %1046, 0, !dbg !9749
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9750
  br i1 %1047, label %1048, label %1147, !dbg !9750

; <label>:1048:                                   ; preds = %1045
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9751
  br i1 %18, label %1063, label %1049, !dbg !9751

; <label>:1049:                                   ; preds = %1048
  %1050 = icmp eq i32 %17, 3, !dbg !9752
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9753
  br i1 %1050, label %1051, label %1147, !dbg !9753

; <label>:1051:                                   ; preds = %1049
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9756
  %1052 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9757
  %1053 = load %struct.redisObject*, %struct.redisObject** %1052, align 8, !dbg !9757, !tbaa !760
  %1054 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1053, i64 0, i32 2, !dbg !9761
  %1055 = load i8*, i8** %1054, align 8, !dbg !9761, !tbaa !6254
  %1056 = tail call i32 @strcasecmp(i8* %1055, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.209, i64 0, i64 0)) #9, !dbg !9762
  %1057 = icmp eq i32 %1056, 0, !dbg !9762
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9763
  br i1 %1057, label %1063, label %1058, !dbg !9763

; <label>:1058:                                   ; preds = %1051
  %1059 = tail call i32 @strcasecmp(i8* %1055, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.210, i64 0, i64 0)) #9, !dbg !9764
  %1060 = icmp eq i32 %1059, 0, !dbg !9764
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9766
  br i1 %1060, label %1063, label %1061, !dbg !9766

; <label>:1061:                                   ; preds = %1058
  %1062 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !9767, !tbaa !9769
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1062) #6, !dbg !9770
  br label %1146, !dbg !9771

; <label>:1063:                                   ; preds = %1058, %1051, %1048
  %1064 = phi i32 [ 0, %1048 ], [ 1, %1051 ], [ 1, %1058 ], !dbg !9772
  %1065 = phi i32 [ 0, %1048 ], [ 0, %1051 ], [ 1, %1058 ], !dbg !9772
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %1066 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9773, !tbaa !760
  %1067 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1066, i64 0, i32 2, !dbg !9773
  %1068 = load i32, i32* %1067, align 8, !dbg !9773, !tbaa !927
  %1069 = and i32 %1068, 1, !dbg !9773
  %1070 = icmp eq i32 %1069, 0, !dbg !9773
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9775
  br i1 %1070, label %1072, label %1071, !dbg !9775

; <label>:1071:                                   ; preds = %1063
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.211, i64 0, i64 0)) #6, !dbg !9776
  br label %1146, !dbg !9778

; <label>:1072:                                   ; preds = %1063
  %1073 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1066, i64 0, i32 8, !dbg !9779
  %1074 = load %struct.clusterNode*, %struct.clusterNode** %1073, align 8, !dbg !9779, !tbaa !1025
  %1075 = icmp eq %struct.clusterNode* %1074, null, !dbg !9781
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9782
  br i1 %1075, label %1076, label %1077, !dbg !9782

; <label>:1076:                                   ; preds = %1072
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.212, i64 0, i64 0)) #6, !dbg !9783
  br label %1146, !dbg !9785

; <label>:1077:                                   ; preds = %1072
  %1078 = icmp ne i32 %1064, 0, !dbg !9786
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9788
  br i1 %1078, label %1089, label %1079, !dbg !9788

; <label>:1079:                                   ; preds = %1077
  %1080 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1074, i64 0, i32 2, !dbg !9789
  %1081 = load i32, i32* %1080, align 8, !dbg !9789, !tbaa !927
  %1082 = and i32 %1081, 8, !dbg !9789
  %1083 = icmp eq i32 %1082, 0, !dbg !9789
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9790
  br i1 %1083, label %1084, label %1088, !dbg !9790

; <label>:1084:                                   ; preds = %1079
  %1085 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1074, i64 0, i32 19, !dbg !9791
  %1086 = load %struct.clusterLink*, %struct.clusterLink** %1085, align 8, !dbg !9791, !tbaa !1178
  %1087 = icmp eq %struct.clusterLink* %1086, null, !dbg !9792
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9793
  br i1 %1087, label %1088, label %1089, !dbg !9793

; <label>:1088:                                   ; preds = %1079, %1084
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.213, i64 0, i64 0)) #6, !dbg !9794
  br label %1146, !dbg !9796

; <label>:1089:                                   ; preds = %1084, %1077
  %1090 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9797, !tbaa !788
  %1091 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1090, i64 0, i32 17, !dbg !9799
  %1092 = load i64, i64* %1091, align 8, !dbg !9799, !tbaa !1987
  %1093 = icmp eq i64 %1092, 0, !dbg !9800
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9801
  br i1 %1093, label %1099, label %1094, !dbg !9801

; <label>:1094:                                   ; preds = %1089
  %1095 = tail call i32 @clientsArePaused() #6, !dbg !9802
  %1096 = icmp eq i32 %1095, 0, !dbg !9802
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9803
  br i1 %1096, label %1099, label %1097, !dbg !9803

; <label>:1097:                                   ; preds = %1094
  store i64 0, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 46), align 8, !dbg !9804, !tbaa !2176
  %1098 = tail call i32 @clientsArePaused() #6, !dbg !9805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9806
  br label %1099, !dbg !9806

; <label>:1099:                                   ; preds = %1089, %1094, %1097
  %1100 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9807, !tbaa !788
  %1101 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1100, i64 0, i32 17, !dbg !9808
  store i64 0, i64* %1101, align 8, !dbg !9809, !tbaa !1987
  %1102 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1100, i64 0, i32 20, !dbg !9810
  store i32 0, i32* %1102, align 8, !dbg !9811, !tbaa !1990
  %1103 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1100, i64 0, i32 18, !dbg !9812
  store %struct.clusterNode* null, %struct.clusterNode** %1103, align 8, !dbg !9813, !tbaa !1993
  %1104 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1100, i64 0, i32 19, !dbg !9814
  store i64 0, i64* %1104, align 8, !dbg !9815, !tbaa !1996
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9816
  %1105 = tail call i64 @mstime() #6, !dbg !9817
  %1106 = add nsw i64 %1105, 5000, !dbg !9818
  %1107 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9819, !tbaa !788
  %1108 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1107, i64 0, i32 17, !dbg !9820
  store i64 %1106, i64* %1108, align 8, !dbg !9821, !tbaa !1987
  %1109 = icmp eq i32 %1065, 0, !dbg !9822
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9824
  br i1 %1109, label %1127, label %1110, !dbg !9824

; <label>:1110:                                   ; preds = %1099
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.214, i64 0, i64 0)) #6, !dbg !9825
  %1111 = tail call i64 @clusterGetMaxEpoch() #6, !dbg !9827
  %1112 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9830, !tbaa !760
  %1113 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1112, i64 0, i32 3, !dbg !9831
  %1114 = load i64, i64* %1113, align 8, !dbg !9831, !tbaa !1093
  %1115 = icmp eq i64 %1114, 0, !dbg !9832
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9833
  br i1 %1115, label %1118, label %1116, !dbg !9833

; <label>:1116:                                   ; preds = %1110
  %1117 = icmp eq i64 %1114, %1111, !dbg !9834
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9835
  br i1 %1117, label %1126, label %1118, !dbg !9835

; <label>:1118:                                   ; preds = %1116, %1110
  %1119 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9836, !tbaa !788
  %1120 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1119, i64 0, i32 1, !dbg !9837
  %1121 = load i64, i64* %1120, align 8, !dbg !9838, !tbaa !797
  %1122 = add i64 %1121, 1, !dbg !9838
  store i64 %1122, i64* %1120, align 8, !dbg !9838, !tbaa !797
  store i64 %1122, i64* %1113, align 8, !dbg !9839, !tbaa !1093
  %1123 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1119, i64 0, i32 22, !dbg !9842
  %1124 = load i32, i32* %1123, align 8, !dbg !9843, !tbaa !1475
  %1125 = or i32 %1124, 12, !dbg !9843
  store i32 %1125, i32* %1123, align 8, !dbg !9843, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9844
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0), i64 %1122) #6, !dbg !9845
  br label %1126, !dbg !9846

; <label>:1126:                                   ; preds = %1116, %1118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9847
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9848
  tail call void @clusterFailoverReplaceYourMaster() #10, !dbg !9849
  br label %1144, !dbg !9850

; <label>:1127:                                   ; preds = %1099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9851
  br i1 %1078, label %1128, label %1131, !dbg !9851

; <label>:1128:                                   ; preds = %1127
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.215, i64 0, i64 0)) #6, !dbg !9852
  %1129 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9855, !tbaa !788
  %1130 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1129, i64 0, i32 20, !dbg !9856
  store i32 1, i32* %1130, align 8, !dbg !9857, !tbaa !1990
  br label %1144, !dbg !9858

; <label>:1131:                                   ; preds = %1127
  tail call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.216, i64 0, i64 0)) #6, !dbg !9859
  %1132 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9861, !tbaa !760
  %1133 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1132, i64 0, i32 8, !dbg !9862
  %1134 = load %struct.clusterNode*, %struct.clusterNode** %1133, align 8, !dbg !9862, !tbaa !1025
  %1135 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 0, i64 0, !dbg !9865
  call void @llvm.lifetime.start.p0i8(i64 4352, i8* nonnull %1135) #7, !dbg !9865
  %1136 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1134, i64 0, i32 19, !dbg !9867
  %1137 = load %struct.clusterLink*, %struct.clusterLink** %1136, align 8, !dbg !9867, !tbaa !1178
  %1138 = icmp eq %struct.clusterLink* %1137, null, !dbg !9868
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9869
  br i1 %1138, label %1143, label %1139, !dbg !9869

; <label>:1139:                                   ; preds = %1131
  call void @clusterBuildMessageHdr(%struct.clusterMsg* nonnull %2, i32 8) #6, !dbg !9871
  %1140 = call i32 @lwip_htonl(i32 2256) #6, !dbg !9873
  %1141 = getelementptr inbounds %struct.clusterMsg, %struct.clusterMsg* %2, i64 0, i32 1, !dbg !9874
  store i32 %1140, i32* %1141, align 4, !dbg !9875, !tbaa !2758
  %1142 = load %struct.clusterLink*, %struct.clusterLink** %1136, align 8, !dbg !9876, !tbaa !1178
  call void @clusterSendMessage(%struct.clusterLink* %1142, i8* nonnull %1135, i64 2256) #6, !dbg !9877
  br label %1143, !dbg !9878

; <label>:1143:                                   ; preds = %1131, %1139
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9879
  call void @llvm.lifetime.end.p0i8(i64 4352, i8* nonnull %1135) #7, !dbg !9878
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9878
  br label %1144

; <label>:1144:                                   ; preds = %1128, %1143, %1126
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %1145 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9880, !tbaa !8716
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1145) #6, !dbg !9881
  br label %1146, !dbg !9882

; <label>:1146:                                   ; preds = %1144, %1088, %1076, %1071, %1061
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9883
  br label %1234

; <label>:1147:                                   ; preds = %1045, %1049
  %1148 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.217, i64 0, i64 0)) #9, !dbg !9884
  %1149 = icmp eq i32 %1148, 0, !dbg !9884
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9885
  br i1 %1149, label %1150, label %1193, !dbg !9885

; <label>:1150:                                   ; preds = %1147
  %1151 = icmp eq i32 %17, 3, !dbg !9886
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9887
  br i1 %1151, label %1152, label %1193, !dbg !9887

; <label>:1152:                                   ; preds = %1150
  %1153 = bitcast i64* %11 to i8*, !dbg !9888
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1153) #7, !dbg !9888
  %1154 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9889
  %1155 = load %struct.redisObject*, %struct.redisObject** %1154, align 8, !dbg !9889, !tbaa !760
  %1156 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %1155, i64* nonnull %11, i8* null) #6, !dbg !9892
  %1157 = icmp eq i32 %1156, 0, !dbg !9893
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9894
  br i1 %1157, label %1158, label %1192, !dbg !9894

; <label>:1158:                                   ; preds = %1152
  %1159 = load i64, i64* %11, align 8, !dbg !9895, !tbaa !1173
  %1160 = icmp slt i64 %1159, 0, !dbg !9897
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9898
  br i1 %1160, label %1161, label %1162, !dbg !9898

; <label>:1161:                                   ; preds = %1158
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.218, i64 0, i64 0), i64 %1159) #6, !dbg !9899
  br label %1191, !dbg !9901

; <label>:1162:                                   ; preds = %1158
  %1163 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9902, !tbaa !788
  %1164 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1163, i64 0, i32 4, !dbg !9902
  %1165 = load %struct.dict*, %struct.dict** %1164, align 8, !dbg !9902, !tbaa !837
  %1166 = getelementptr inbounds %struct.dict, %struct.dict* %1165, i64 0, i32 2, i64 0, i32 3, !dbg !9902
  %1167 = load i64, i64* %1166, align 8, !dbg !9902, !tbaa !5132
  %1168 = getelementptr inbounds %struct.dict, %struct.dict* %1165, i64 0, i32 2, i64 1, i32 3, !dbg !9902
  %1169 = load i64, i64* %1168, align 8, !dbg !9902, !tbaa !5132
  %1170 = add i64 %1169, %1167, !dbg !9902
  %1171 = icmp ugt i64 %1170, 1, !dbg !9904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9905
  br i1 %1171, label %1172, label %1173, !dbg !9905

; <label>:1172:                                   ; preds = %1162
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.219, i64 0, i64 0)) #6, !dbg !9906
  br label %1191, !dbg !9908

; <label>:1173:                                   ; preds = %1162
  %1174 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9909, !tbaa !760
  %1175 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1174, i64 0, i32 3, !dbg !9911
  %1176 = load i64, i64* %1175, align 8, !dbg !9911, !tbaa !1093
  %1177 = icmp eq i64 %1176, 0, !dbg !9912
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9913
  br i1 %1177, label %1179, label %1178, !dbg !9913

; <label>:1178:                                   ; preds = %1173
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.220, i64 0, i64 0)) #6, !dbg !9914
  br label %1191, !dbg !9916

; <label>:1179:                                   ; preds = %1173
  store i64 %1159, i64* %1175, align 8, !dbg !9917, !tbaa !1093
  call void (i32, i8*, ...) @serverLog(i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.221, i64 0, i64 0), i64 %1159) #6, !dbg !9919
  %1180 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !9920, !tbaa !788
  %1181 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1180, i64 0, i32 1, !dbg !9922
  %1182 = load i64, i64* %1181, align 8, !dbg !9922, !tbaa !797
  %1183 = load i64, i64* %11, align 8, !dbg !9923, !tbaa !1173
  %1184 = icmp ult i64 %1182, %1183, !dbg !9924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9925
  br i1 %1184, label %1185, label %1186, !dbg !9925

; <label>:1185:                                   ; preds = %1179
  store i64 %1183, i64* %1181, align 8, !dbg !9926, !tbaa !797
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9927
  br label %1186, !dbg !9927

; <label>:1186:                                   ; preds = %1185, %1179
  %1187 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %1180, i64 0, i32 22, !dbg !9930
  %1188 = load i32, i32* %1187, align 8, !dbg !9931, !tbaa !1475
  %1189 = or i32 %1188, 6, !dbg !9931
  store i32 %1189, i32* %1187, align 8, !dbg !9931, !tbaa !1475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9932
  %1190 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9933, !tbaa !8716
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1190) #6, !dbg !9934
  br label %1191

; <label>:1191:                                   ; preds = %1172, %1186, %1178, %1161
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %1192, !dbg !9935

; <label>:1192:                                   ; preds = %1152, %1191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9936
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1153) #7, !dbg !9935
  br label %1234

; <label>:1193:                                   ; preds = %1147, %1150
  %1194 = tail call i32 @strcasecmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i64 0, i64 0)) #9, !dbg !9937
  %1195 = icmp eq i32 %1194, 0, !dbg !9937
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9938
  br i1 %1195, label %1196, label %1233, !dbg !9938

; <label>:1196:                                   ; preds = %1193
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9939
  br i1 %18, label %1211, label %1197, !dbg !9939

; <label>:1197:                                   ; preds = %1196
  %1198 = icmp eq i32 %17, 3, !dbg !9940
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9941
  br i1 %1198, label %1199, label %1233, !dbg !9941

; <label>:1199:                                   ; preds = %1197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9943
  %1200 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %20, i64 2, !dbg !9944
  %1201 = load %struct.redisObject*, %struct.redisObject** %1200, align 8, !dbg !9944, !tbaa !760
  %1202 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1201, i64 0, i32 2, !dbg !9948
  %1203 = load i8*, i8** %1202, align 8, !dbg !9948, !tbaa !6254
  %1204 = tail call i32 @strcasecmp(i8* %1203, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i64 0, i64 0)) #9, !dbg !9949
  %1205 = icmp eq i32 %1204, 0, !dbg !9949
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9950
  br i1 %1205, label %1211, label %1206, !dbg !9950

; <label>:1206:                                   ; preds = %1199
  %1207 = tail call i32 @strcasecmp(i8* %1203, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.224, i64 0, i64 0)) #9, !dbg !9951
  %1208 = icmp eq i32 %1207, 0, !dbg !9951
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9953
  br i1 %1208, label %1211, label %1209, !dbg !9953

; <label>:1209:                                   ; preds = %1206
  %1210 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !9954, !tbaa !9769
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1210) #6, !dbg !9956
  br label %1232, !dbg !9957

; <label>:1211:                                   ; preds = %1206, %1199, %1196
  %1212 = phi i32 [ 0, %1196 ], [ 1, %1199 ], [ 0, %1206 ], !dbg !9958
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %1213 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !9959, !tbaa !760
  %1214 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1213, i64 0, i32 2, !dbg !9959
  %1215 = load i32, i32* %1214, align 8, !dbg !9959, !tbaa !927
  %1216 = and i32 %1215, 1, !dbg !9959
  %1217 = icmp eq i32 %1216, 0, !dbg !9959
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9961
  br i1 %1217, label %1230, label %1218, !dbg !9961

; <label>:1218:                                   ; preds = %1211
  %1219 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !9962
  %1220 = load %struct.redisDb*, %struct.redisDb** %1219, align 8, !dbg !9962, !tbaa !9963
  %1221 = getelementptr inbounds %struct.redisDb, %struct.redisDb* %1220, i64 0, i32 0, !dbg !9962
  %1222 = load %struct.dict*, %struct.dict** %1221, align 8, !dbg !9962, !tbaa !8021
  %1223 = getelementptr inbounds %struct.dict, %struct.dict* %1222, i64 0, i32 2, i64 0, i32 3, !dbg !9962
  %1224 = load i64, i64* %1223, align 8, !dbg !9962, !tbaa !5132
  %1225 = getelementptr inbounds %struct.dict, %struct.dict* %1222, i64 0, i32 2, i64 1, i32 3, !dbg !9962
  %1226 = load i64, i64* %1225, align 8, !dbg !9962, !tbaa !5132
  %1227 = sub i64 0, %1226, !dbg !9964
  %1228 = icmp eq i64 %1224, %1227, !dbg !9964
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9965
  br i1 %1228, label %1230, label %1229, !dbg !9965

; <label>:1229:                                   ; preds = %1218
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.225, i64 0, i64 0)) #6, !dbg !9966
  br label %1232, !dbg !9968

; <label>:1230:                                   ; preds = %1218, %1211
  tail call void @clusterReset(i32 %1212) #10, !dbg !9969
  %1231 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !9970, !tbaa !8716
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %1231) #6, !dbg !9971
  br label %1232, !dbg !9972

; <label>:1232:                                   ; preds = %1230, %1229, %1209
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9973
  br label %1234

; <label>:1233:                                   ; preds = %1193, %1197
  tail call void @addReplySubcommandSyntaxError(%struct.client* nonnull %0) #6, !dbg !9974
  br label %1234, !dbg !9976

; <label>:1234:                                   ; preds = %1232, %1192, %1146, %1044, %1008, %952, %887, %838, %785, %525, %277, %113, %136, %683, %761, %726, %546, %120, %106, %14, %135, %1233, %28
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !9977
  ret void, !dbg !9977
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

; Function Attrs: noredzone
declare dso_local void @addReplyHelp(%struct.client*, i8**) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyErrorFormat(%struct.client*, i8*, ...) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReply(%struct.client*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @createObject(i32, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplyBulk(%struct.client*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @_serverAssertWithInfo(%struct.client*, %struct.redisObject*, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplySds(%struct.client*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @getLongLongFromObjectOrReply(%struct.client*, %struct.redisObject*, i64*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @getKeysInSlot(i32, %struct.redisObject**, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @addReplySubcommandSyntaxError(%struct.client*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @createDumpPayload(%struct._rio*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #0 !dbg !9978 {
  %4 = alloca [2 x i8], align 1
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0, !dbg !10042
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #7, !dbg !10042
  %7 = bitcast i64* %5 to i8*, !dbg !10044
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !10044
  %8 = tail call i8* @sdsempty() #6, !dbg !10045
  tail call void @rioInitWithBuffer(%struct._rio* %0, i8* %8) #6, !dbg !10046
  %9 = tail call i32 @rdbSaveObjectType(%struct._rio* %0, %struct.redisObject* %1) #6, !dbg !10047
  %10 = icmp eq i32 %9, 0, !dbg !10047
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10047
  br i1 %10, label %11, label %12, !dbg !10047

; <label>:11:                                     ; preds = %3
  tail call void @_serverAssert(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 4787) #6, !dbg !10047
  tail call void @_exit(i32 1) #8, !dbg !10047
  unreachable

; <label>:12:                                     ; preds = %3
  %13 = tail call i64 @rdbSaveObject(%struct._rio* %0, %struct.redisObject* %1, %struct.redisObject* %2) #6, !dbg !10048
  %14 = icmp eq i64 %13, 0, !dbg !10048
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10048
  br i1 %14, label %15, label %16, !dbg !10048

; <label>:15:                                     ; preds = %12
  tail call void @_serverAssert(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 4788) #6, !dbg !10048
  tail call void @_exit(i32 1) #8, !dbg !10048
  unreachable

; <label>:16:                                     ; preds = %12
  store i8 9, i8* %6, align 1, !dbg !10049, !tbaa !745
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1, !dbg !10050
  store i8 0, i8* %17, align 1, !dbg !10051, !tbaa !745
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %0, i64 0, i32 8, !dbg !10052
  %19 = bitcast %union.anon.11* %18 to i8**, !dbg !10053
  %20 = load i8*, i8** %19, align 8, !dbg !10053, !tbaa !745
  %21 = call i8* @sdscatlen(i8* %20, i8* nonnull %6, i64 2) #6, !dbg !10054
  store i8* %21, i8** %19, align 8, !dbg !10055, !tbaa !745
  %22 = getelementptr inbounds i8, i8* %21, i64 -1, !dbg !10058
  %23 = load i8, i8* %22, align 1, !dbg !10058, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10060
  %24 = trunc i8 %23 to i3, !dbg !10060
  switch i3 %24, label %46 [
    i3 0, label %25
    i3 1, label %28
    i3 2, label %32
    i3 3, label %37
    i3 -4, label %42
  ], !dbg !10060

; <label>:25:                                     ; preds = %16
  %26 = lshr i8 %23, 3, !dbg !10061
  %27 = zext i8 %26 to i64, !dbg !10061
  br label %46, !dbg !10062

; <label>:28:                                     ; preds = %16
  %29 = getelementptr inbounds i8, i8* %21, i64 -3, !dbg !10063
  %30 = load i8, i8* %29, align 1, !dbg !10064, !tbaa !745
  %31 = zext i8 %30 to i64, !dbg !10063
  br label %46, !dbg !10065

; <label>:32:                                     ; preds = %16
  %33 = getelementptr inbounds i8, i8* %21, i64 -5, !dbg !10066
  %34 = bitcast i8* %33 to i16*, !dbg !10067
  %35 = load i16, i16* %34, align 1, !dbg !10067, !tbaa !1503
  %36 = zext i16 %35 to i64, !dbg !10066
  br label %46, !dbg !10068

; <label>:37:                                     ; preds = %16
  %38 = getelementptr inbounds i8, i8* %21, i64 -9, !dbg !10069
  %39 = bitcast i8* %38 to i32*, !dbg !10070
  %40 = load i32, i32* %39, align 1, !dbg !10070, !tbaa !708
  %41 = zext i32 %40 to i64, !dbg !10069
  br label %46, !dbg !10071

; <label>:42:                                     ; preds = %16
  %43 = getelementptr inbounds i8, i8* %21, i64 -17, !dbg !10072
  %44 = bitcast i8* %43 to i64*, !dbg !10073
  %45 = load i64, i64* %44, align 1, !dbg !10073, !tbaa !1510
  br label %46, !dbg !10074

; <label>:46:                                     ; preds = %16, %25, %28, %32, %37, %42
  %47 = phi i64 [ %45, %42 ], [ %41, %37 ], [ %36, %32 ], [ %31, %28 ], [ %27, %25 ], [ 0, %16 ], !dbg !10075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10076
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10077
  %48 = call i64 @crc64(i64 0, i8* %21, i64 %47) #6, !dbg !10078
  store i64 %48, i64* %5, align 8, !dbg !10080, !tbaa !1510
  %49 = load i8*, i8** %19, align 8, !dbg !10081, !tbaa !745
  %50 = call i8* @sdscatlen(i8* %49, i8* nonnull %7, i64 8) #6, !dbg !10082
  store i8* %50, i8** %19, align 8, !dbg !10083, !tbaa !745
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !10084
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #7, !dbg !10084
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10084
  ret void, !dbg !10084
}

; Function Attrs: noredzone
declare dso_local void @rioInitWithBuffer(%struct._rio*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @rdbSaveObjectType(%struct._rio*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rdbSaveObject(%struct._rio*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @crc64(i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local i32 @verifyDumpPayload(i8*, i64) local_unnamed_addr #0 !dbg !10085 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*, !dbg !10096
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !10096
  %5 = icmp ult i64 %1, 10, !dbg !10097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10099
  br i1 %5, label %24, label %6, !dbg !10099

; <label>:6:                                      ; preds = %2
  %7 = add i64 %1, -10, !dbg !10100
  %8 = getelementptr inbounds i8, i8* %0, i64 %7, !dbg !10101
  %9 = getelementptr inbounds i8, i8* %8, i64 1, !dbg !10103
  %10 = load i8, i8* %9, align 1, !dbg !10103, !tbaa !745
  %11 = zext i8 %10 to i32, !dbg !10103
  %12 = shl nuw nsw i32 %11, 8, !dbg !10104
  %13 = load i8, i8* %8, align 1, !dbg !10105, !tbaa !745
  %14 = zext i8 %13 to i32, !dbg !10105
  %15 = or i32 %12, %14, !dbg !10106
  %16 = icmp ugt i32 %15, 9, !dbg !10108
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10110
  br i1 %16, label %24, label %17, !dbg !10110

; <label>:17:                                     ; preds = %6
  %18 = add i64 %1, -8, !dbg !10111
  %19 = tail call i64 @crc64(i64 0, i8* nonnull %0, i64 %18) #6, !dbg !10112
  store i64 %19, i64* %3, align 8, !dbg !10114, !tbaa !1510
  %20 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !10115
  %21 = call i32 @memcmp(i8* nonnull %4, i8* nonnull %20, i64 8) #6, !dbg !10116
  %22 = icmp ne i32 %21, 0, !dbg !10117
  %23 = sext i1 %22 to i32, !dbg !10118
  br label %24, !dbg !10119

; <label>:24:                                     ; preds = %6, %2, %17
  %25 = phi i32 [ %23, %17 ], [ -1, %2 ], [ -1, %6 ], !dbg !10120
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !10122
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10122
  ret i32 %25, !dbg !10122
}

; Function Attrs: noredzone nounwind
define dso_local void @dumpCommand(%struct.client*) local_unnamed_addr #0 !dbg !10123 {
  %2 = alloca %struct._rio, align 8
  %3 = bitcast %struct._rio* %2 to i8*, !dbg !10130
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %3) #7, !dbg !10130
  %4 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !10131
  %5 = load %struct.redisDb*, %struct.redisDb** %4, align 8, !dbg !10131, !tbaa !9963
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10133
  %7 = load %struct.redisObject**, %struct.redisObject*** %6, align 8, !dbg !10133, !tbaa !8644
  %8 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %7, i64 1, !dbg !10134
  %9 = load %struct.redisObject*, %struct.redisObject** %8, align 8, !dbg !10134, !tbaa !760
  %10 = tail call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %5, %struct.redisObject* %9) #6, !dbg !10135
  %11 = icmp eq %struct.redisObject* %10, null, !dbg !10137
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10138
  br i1 %11, label %12, label %14, !dbg !10138

; <label>:12:                                     ; preds = %1
  %13 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 10), align 8, !dbg !10139, !tbaa !10141
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %13) #6, !dbg !10142
  br label %22, !dbg !10143

; <label>:14:                                     ; preds = %1
  %15 = load %struct.redisObject**, %struct.redisObject*** %6, align 8, !dbg !10144, !tbaa !8644
  %16 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %15, i64 1, !dbg !10145
  %17 = load %struct.redisObject*, %struct.redisObject** %16, align 8, !dbg !10145, !tbaa !760
  call void @createDumpPayload(%struct._rio* nonnull %2, %struct.redisObject* nonnull %10, %struct.redisObject* %17) #10, !dbg !10147
  %18 = getelementptr inbounds %struct._rio, %struct._rio* %2, i64 0, i32 8, !dbg !10148
  %19 = bitcast %union.anon.11* %18 to i8**, !dbg !10149
  %20 = load i8*, i8** %19, align 8, !dbg !10149, !tbaa !745
  %21 = call %struct.redisObject* @createObject(i32 0, i8* %20) #6, !dbg !10150
  call void @addReplyBulk(%struct.client* nonnull %0, %struct.redisObject* %21) #6, !dbg !10152
  call void @decrRefCount(%struct.redisObject* %21) #6, !dbg !10153
  br label %22, !dbg !10154

; <label>:22:                                     ; preds = %14, %12
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10155
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %3) #7, !dbg !10156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10156
  ret void, !dbg !10156
}

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyRead(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @restoreCommand(%struct.client*) local_unnamed_addr #0 !dbg !10157 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct._rio, align 8
  %7 = bitcast i64* %3 to i8*, !dbg !10175
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7, !dbg !10175
  %8 = bitcast i64* %4 to i8*, !dbg !10175
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7, !dbg !10175
  store i64 -1, i64* %4, align 8, !dbg !10176, !tbaa !1173
  %9 = bitcast i64* %5 to i8*, !dbg !10175
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !10175
  store i64 -1, i64* %5, align 8, !dbg !10177, !tbaa !1173
  %10 = bitcast %struct._rio* %6 to i8*, !dbg !10179
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #7, !dbg !10179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10183
  %11 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !10184
  %12 = load i32, i32* %11, align 8, !dbg !10184, !tbaa !8637
  %13 = icmp sgt i32 %12, 4, !dbg !10185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10186
  br i1 %13, label %15, label %14, !dbg !10186

; <label>:14:                                     ; preds = %1
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10187
  br label %91, !dbg !10187

; <label>:15:                                     ; preds = %1
  %16 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  br label %17, !dbg !10186

; <label>:17:                                     ; preds = %15, %79
  %18 = phi i32 [ %12, %15 ], [ %85, %79 ]
  %19 = phi i64 [ -1, %15 ], [ %83, %79 ]
  %20 = phi i32 [ 4, %15 ], [ %84, %79 ]
  %21 = phi i32 [ 0, %15 ], [ %81, %79 ]
  %22 = phi i32 [ 0, %15 ], [ %80, %79 ]
  %23 = xor i32 %20, -1, !dbg !10189
  %24 = add i32 %18, %23, !dbg !10189
  %25 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10191, !tbaa !8644
  %26 = sext i32 %20 to i64, !dbg !10193
  %27 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 %26, !dbg !10193
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !10193, !tbaa !760
  %29 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %28, i64 0, i32 2, !dbg !10194
  %30 = load i8*, i8** %29, align 8, !dbg !10194, !tbaa !6254
  %31 = call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i64 0, i64 0)) #9, !dbg !10195
  %32 = icmp eq i32 %31, 0, !dbg !10195
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10196
  br i1 %32, label %79, label %33, !dbg !10196

; <label>:33:                                     ; preds = %17
  %34 = call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.229, i64 0, i64 0)) #9, !dbg !10197
  %35 = icmp eq i32 %34, 0, !dbg !10197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10199
  br i1 %35, label %79, label %36, !dbg !10199

; <label>:36:                                     ; preds = %33
  %37 = call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.230, i64 0, i64 0)) #9, !dbg !10200
  %38 = icmp eq i32 %37, 0, !dbg !10200
  %39 = icmp sgt i32 %24, 0, !dbg !10202
  %40 = and i1 %39, %38, !dbg !10203
  %41 = load i64, i64* %4, align 8, !dbg !10204
  %42 = icmp eq i64 %41, -1, !dbg !10205
  %43 = and i1 %40, %42, !dbg !10203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10203
  br i1 %43, label %44, label %58, !dbg !10203

; <label>:44:                                     ; preds = %36
  %45 = add nsw i32 %20, 1, !dbg !10206
  %46 = sext i32 %45 to i64, !dbg !10209
  %47 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 %46, !dbg !10209
  %48 = load %struct.redisObject*, %struct.redisObject** %47, align 8, !dbg !10209, !tbaa !760
  %49 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %48, i64* nonnull %5, i8* null) #6, !dbg !10210
  %50 = icmp eq i32 %49, 0, !dbg !10211
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10212
  br i1 %50, label %51, label %78, !dbg !10212

; <label>:51:                                     ; preds = %44
  %52 = load i64, i64* %5, align 8, !dbg !10213, !tbaa !1173
  %53 = icmp slt i64 %52, 0, !dbg !10215
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10216
  br i1 %53, label %54, label %55, !dbg !10216

; <label>:54:                                     ; preds = %51
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.231, i64 0, i64 0)) #6, !dbg !10217
  br label %78, !dbg !10219

; <label>:55:                                     ; preds = %51
  %56 = call i32 @LRU_CLOCK() #6, !dbg !10220
  %57 = zext i32 %56 to i64, !dbg !10220
  br label %79, !dbg !10221

; <label>:58:                                     ; preds = %36
  %59 = call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.232, i64 0, i64 0)) #9, !dbg !10222
  %60 = icmp eq i32 %59, 0, !dbg !10222
  %61 = and i1 %39, %60, !dbg !10224
  %62 = load i64, i64* %5, align 8, !dbg !10225
  %63 = icmp eq i64 %62, -1, !dbg !10226
  %64 = and i1 %61, %63, !dbg !10224
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10224
  br i1 %64, label %65, label %76, !dbg !10224

; <label>:65:                                     ; preds = %58
  %66 = add nsw i32 %20, 1, !dbg !10227
  %67 = sext i32 %66 to i64, !dbg !10230
  %68 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %25, i64 %67, !dbg !10230
  %69 = load %struct.redisObject*, %struct.redisObject** %68, align 8, !dbg !10230, !tbaa !760
  %70 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %69, i64* nonnull %4, i8* null) #6, !dbg !10231
  %71 = icmp eq i32 %70, 0, !dbg !10232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10233
  br i1 %71, label %72, label %78, !dbg !10233

; <label>:72:                                     ; preds = %65
  %73 = load i64, i64* %4, align 8, !dbg !10234, !tbaa !1173
  %74 = icmp ugt i64 %73, 255, !dbg !10236
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10236
  br i1 %74, label %75, label %79, !dbg !10236

; <label>:75:                                     ; preds = %72
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.233, i64 0, i64 0)) #6, !dbg !10237
  br label %78, !dbg !10239

; <label>:76:                                     ; preds = %58
  %77 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !10240, !tbaa !9769
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %77) #6, !dbg !10242
  br label %78, !dbg !10243

; <label>:78:                                     ; preds = %65, %44, %54, %75, %76
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10244
  br label %226

; <label>:79:                                     ; preds = %72, %33, %17, %55
  %80 = phi i32 [ %22, %55 ], [ 1, %17 ], [ %22, %33 ], [ %22, %72 ], !dbg !10245
  %81 = phi i32 [ %21, %55 ], [ %21, %17 ], [ 1, %33 ], [ %21, %72 ], !dbg !10247
  %82 = phi i32 [ %45, %55 ], [ %20, %17 ], [ %20, %33 ], [ %66, %72 ], !dbg !10248
  %83 = phi i64 [ %57, %55 ], [ %19, %17 ], [ %19, %33 ], [ %19, %72 ], !dbg !10247
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10249
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %84 = add nsw i32 %82, 1, !dbg !10250
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10251
  %85 = load i32, i32* %11, align 8, !dbg !10184, !tbaa !8637
  %86 = icmp sgt i32 %85, %84, !dbg !10185
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10186
  br i1 %86, label %17, label %87, !dbg !10186, !llvm.loop !10252

; <label>:87:                                     ; preds = %79
  %88 = icmp eq i32 %80, 0, !dbg !10254
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10187
  br i1 %88, label %91, label %89, !dbg !10187

; <label>:89:                                     ; preds = %87
  %90 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10255
  br label %104, !dbg !10187

; <label>:91:                                     ; preds = %87, %14
  %92 = phi i64 [ -1, %14 ], [ %83, %87 ]
  %93 = phi i32 [ 0, %14 ], [ %81, %87 ]
  %94 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !10257
  %95 = load %struct.redisDb*, %struct.redisDb** %94, align 8, !dbg !10257, !tbaa !9963
  %96 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10258
  %97 = load %struct.redisObject**, %struct.redisObject*** %96, align 8, !dbg !10258, !tbaa !8644
  %98 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %97, i64 1, !dbg !10259
  %99 = load %struct.redisObject*, %struct.redisObject** %98, align 8, !dbg !10259, !tbaa !760
  %100 = call %struct.redisObject* @lookupKeyWrite(%struct.redisDb* %95, %struct.redisObject* %99) #6, !dbg !10260
  %101 = icmp eq %struct.redisObject* %100, null, !dbg !10261
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10262
  br i1 %101, label %104, label %102, !dbg !10262

; <label>:102:                                    ; preds = %91
  %103 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 28), align 8, !dbg !10263, !tbaa !10265
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %103) #6, !dbg !10266
  br label %226, !dbg !10267

; <label>:104:                                    ; preds = %89, %91
  %105 = phi i1 [ true, %89 ], [ false, %91 ]
  %106 = phi i64 [ %83, %89 ], [ %92, %91 ]
  %107 = phi i32 [ %81, %89 ], [ %93, %91 ]
  %108 = phi %struct.redisObject*** [ %90, %89 ], [ %96, %91 ], !dbg !10255
  %109 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10255, !tbaa !8644
  %110 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %109, i64 2, !dbg !10268
  %111 = load %struct.redisObject*, %struct.redisObject** %110, align 8, !dbg !10268, !tbaa !760
  %112 = call i32 @getLongLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %111, i64* nonnull %3, i8* null) #6, !dbg !10270
  %113 = icmp eq i32 %112, 0, !dbg !10271
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10272
  br i1 %113, label %114, label %226, !dbg !10272

; <label>:114:                                    ; preds = %104
  %115 = load i64, i64* %3, align 8, !dbg !10273, !tbaa !1173
  %116 = icmp slt i64 %115, 0, !dbg !10275
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10276
  br i1 %116, label %117, label %118, !dbg !10276

; <label>:117:                                    ; preds = %114
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.234, i64 0, i64 0)) #6, !dbg !10277
  br label %226, !dbg !10279

; <label>:118:                                    ; preds = %114
  %119 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10280, !tbaa !8644
  %120 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %119, i64 3, !dbg !10282
  %121 = load %struct.redisObject*, %struct.redisObject** %120, align 8, !dbg !10282, !tbaa !760
  %122 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %121, i64 0, i32 2, !dbg !10283
  %123 = load i8*, i8** %122, align 8, !dbg !10283, !tbaa !6254
  %124 = getelementptr inbounds i8, i8* %123, i64 -1, !dbg !10286
  %125 = load i8, i8* %124, align 1, !dbg !10286, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10288
  %126 = trunc i8 %125 to i3, !dbg !10288
  switch i3 %126, label %148 [
    i3 0, label %127
    i3 1, label %130
    i3 2, label %134
    i3 3, label %139
    i3 -4, label %144
  ], !dbg !10288

; <label>:127:                                    ; preds = %118
  %128 = lshr i8 %125, 3, !dbg !10289
  %129 = zext i8 %128 to i64, !dbg !10289
  br label %150, !dbg !10290

; <label>:130:                                    ; preds = %118
  %131 = getelementptr inbounds i8, i8* %123, i64 -3, !dbg !10291
  %132 = load i8, i8* %131, align 1, !dbg !10292, !tbaa !745
  %133 = zext i8 %132 to i64, !dbg !10291
  br label %150, !dbg !10293

; <label>:134:                                    ; preds = %118
  %135 = getelementptr inbounds i8, i8* %123, i64 -5, !dbg !10294
  %136 = bitcast i8* %135 to i16*, !dbg !10295
  %137 = load i16, i16* %136, align 1, !dbg !10295, !tbaa !1503
  %138 = zext i16 %137 to i64, !dbg !10294
  br label %150, !dbg !10296

; <label>:139:                                    ; preds = %118
  %140 = getelementptr inbounds i8, i8* %123, i64 -9, !dbg !10297
  %141 = bitcast i8* %140 to i32*, !dbg !10298
  %142 = load i32, i32* %141, align 1, !dbg !10298, !tbaa !708
  %143 = zext i32 %142 to i64, !dbg !10297
  br label %150, !dbg !10299

; <label>:144:                                    ; preds = %118
  %145 = getelementptr inbounds i8, i8* %123, i64 -17, !dbg !10300
  %146 = bitcast i8* %145 to i64*, !dbg !10301
  %147 = load i64, i64* %146, align 1, !dbg !10301, !tbaa !1510
  br label %150, !dbg !10302

; <label>:148:                                    ; preds = %118
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10303
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10304
  %149 = bitcast i64* %2 to i8*, !dbg !10308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #7, !dbg !10308
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10309
  br label %165, !dbg !10309

; <label>:150:                                    ; preds = %127, %130, %134, %139, %144
  %151 = phi i64 [ %147, %144 ], [ %143, %139 ], [ %138, %134 ], [ %133, %130 ], [ %129, %127 ], !dbg !10310
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10311
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10304
  %152 = bitcast i64* %2 to i8*, !dbg !10308
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #7, !dbg !10308
  %153 = icmp ult i64 %151, 10, !dbg !10312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10309
  br i1 %153, label %165, label %154, !dbg !10309

; <label>:154:                                    ; preds = %150
  %155 = add i64 %151, -10, !dbg !10313
  %156 = getelementptr inbounds i8, i8* %123, i64 %155, !dbg !10314
  %157 = getelementptr inbounds i8, i8* %156, i64 1, !dbg !10316
  %158 = load i8, i8* %157, align 1, !dbg !10316, !tbaa !745
  %159 = zext i8 %158 to i32, !dbg !10316
  %160 = shl nuw nsw i32 %159, 8, !dbg !10317
  %161 = load i8, i8* %156, align 1, !dbg !10318, !tbaa !745
  %162 = zext i8 %161 to i32, !dbg !10318
  %163 = or i32 %160, %162, !dbg !10319
  %164 = icmp ugt i32 %163, 9, !dbg !10321
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10322
  br i1 %164, label %165, label %167, !dbg !10322

; <label>:165:                                    ; preds = %154, %150, %148
  %166 = phi i8* [ %149, %148 ], [ %152, %150 ], [ %152, %154 ]
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10311
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #7, !dbg !10323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10324
  br label %173, !dbg !10324

; <label>:167:                                    ; preds = %154
  %168 = add i64 %151, -8, !dbg !10325
  %169 = call i64 @crc64(i64 0, i8* nonnull %123, i64 %168) #6, !dbg !10326
  store i64 %169, i64* %2, align 8, !dbg !10328, !tbaa !1510
  %170 = getelementptr inbounds i8, i8* %156, i64 2, !dbg !10329
  %171 = call i32 @memcmp(i8* nonnull %152, i8* nonnull %170, i64 8) #6, !dbg !10330
  %172 = icmp eq i32 %171, 0, !dbg !10331
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #7, !dbg !10323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10323
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10324
  br i1 %172, label %174, label %173, !dbg !10324

; <label>:173:                                    ; preds = %167, %165
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.235, i64 0, i64 0)) #6, !dbg !10333
  br label %226, !dbg !10335

; <label>:174:                                    ; preds = %167
  %175 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10336, !tbaa !8644
  %176 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %175, i64 3, !dbg !10337
  %177 = load %struct.redisObject*, %struct.redisObject** %176, align 8, !dbg !10337, !tbaa !760
  %178 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %177, i64 0, i32 2, !dbg !10338
  %179 = load i8*, i8** %178, align 8, !dbg !10338, !tbaa !6254
  call void @rioInitWithBuffer(%struct._rio* nonnull %6, i8* %179) #6, !dbg !10340
  %180 = call i32 @rdbLoadObjectType(%struct._rio* nonnull %6) #6, !dbg !10341
  %181 = icmp eq i32 %180, -1, !dbg !10344
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10345
  br i1 %181, label %188, label %182, !dbg !10345

; <label>:182:                                    ; preds = %174
  %183 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10346, !tbaa !8644
  %184 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %183, i64 1, !dbg !10347
  %185 = load %struct.redisObject*, %struct.redisObject** %184, align 8, !dbg !10347, !tbaa !760
  %186 = call %struct.redisObject* @rdbLoadObject(i32 %180, %struct._rio* nonnull %6, %struct.redisObject* %185) #6, !dbg !10348
  %187 = icmp eq %struct.redisObject* %186, null, !dbg !10350
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10351
  br i1 %187, label %188, label %189, !dbg !10351

; <label>:188:                                    ; preds = %182, %174
  call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.236, i64 0, i64 0)) #6, !dbg !10352
  br label %226, !dbg !10354

; <label>:189:                                    ; preds = %182
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10355
  %190 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2, !dbg !10247
  br i1 %105, label %191, label %197, !dbg !10355

; <label>:191:                                    ; preds = %189
  %192 = load %struct.redisDb*, %struct.redisDb** %190, align 8, !dbg !10356, !tbaa !9963
  %193 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10358, !tbaa !8644
  %194 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %193, i64 1, !dbg !10359
  %195 = load %struct.redisObject*, %struct.redisObject** %194, align 8, !dbg !10359, !tbaa !760
  %196 = call i32 @dbDelete(%struct.redisDb* %192, %struct.redisObject* %195) #6, !dbg !10360
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10360
  br label %197, !dbg !10360

; <label>:197:                                    ; preds = %189, %191
  %198 = load %struct.redisDb*, %struct.redisDb** %190, align 8, !dbg !10361, !tbaa !9963
  %199 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10362, !tbaa !8644
  %200 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %199, i64 1, !dbg !10363
  %201 = load %struct.redisObject*, %struct.redisObject** %200, align 8, !dbg !10363, !tbaa !760
  call void @dbAdd(%struct.redisDb* %198, %struct.redisObject* %201, %struct.redisObject* nonnull %186) #6, !dbg !10364
  %202 = load i64, i64* %3, align 8, !dbg !10365, !tbaa !1173
  %203 = icmp eq i64 %202, 0, !dbg !10365
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10367
  br i1 %203, label %216, label %204, !dbg !10367

; <label>:204:                                    ; preds = %197
  %205 = icmp eq i32 %107, 0, !dbg !10368
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10371
  br i1 %205, label %206, label %210, !dbg !10371

; <label>:206:                                    ; preds = %204
  %207 = call i64 @mstime() #6, !dbg !10372
  %208 = load i64, i64* %3, align 8, !dbg !10373, !tbaa !1173
  %209 = add nsw i64 %208, %207, !dbg !10373
  store i64 %209, i64* %3, align 8, !dbg !10373, !tbaa !1173
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10374
  br label %210, !dbg !10374

; <label>:210:                                    ; preds = %204, %206
  %211 = phi i64 [ %202, %204 ], [ %209, %206 ], !dbg !10375
  %212 = load %struct.redisDb*, %struct.redisDb** %190, align 8, !dbg !10376, !tbaa !9963
  %213 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10377, !tbaa !8644
  %214 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %213, i64 1, !dbg !10378
  %215 = load %struct.redisObject*, %struct.redisObject** %214, align 8, !dbg !10378, !tbaa !760
  call void @setExpire(%struct.client* nonnull %0, %struct.redisDb* %212, %struct.redisObject* %215, i64 %211) #6, !dbg !10379
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10380
  br label %216, !dbg !10380

; <label>:216:                                    ; preds = %197, %210
  %217 = load i64, i64* %4, align 8, !dbg !10381, !tbaa !1173
  %218 = load i64, i64* %5, align 8, !dbg !10382, !tbaa !1173
  call void @objectSetLRUOrLFU(%struct.redisObject* nonnull %186, i64 %217, i64 %218, i64 %106) #6, !dbg !10383
  %219 = load %struct.redisDb*, %struct.redisDb** %190, align 8, !dbg !10384, !tbaa !9963
  %220 = load %struct.redisObject**, %struct.redisObject*** %108, align 8, !dbg !10385, !tbaa !8644
  %221 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %220, i64 1, !dbg !10386
  %222 = load %struct.redisObject*, %struct.redisObject** %221, align 8, !dbg !10386, !tbaa !760
  call void @signalModifiedKey(%struct.redisDb* %219, %struct.redisObject* %222) #6, !dbg !10387
  %223 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !10388, !tbaa !8716
  call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %223) #6, !dbg !10389
  %224 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !10390, !tbaa !10391
  %225 = add nsw i64 %224, 1, !dbg !10390
  store i64 %225, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !10390, !tbaa !10391
  br label %226, !dbg !10392

; <label>:226:                                    ; preds = %104, %78, %216, %188, %173, %117, %102
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #7, !dbg !10392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !10392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7, !dbg !10392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7, !dbg !10392
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10392
  ret void, !dbg !10392
}

; Function Attrs: noredzone
declare dso_local i32 @LRU_CLOCK() local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @lookupKeyWrite(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @rdbLoadObjectType(%struct._rio*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local %struct.redisObject* @rdbLoadObject(i32, %struct._rio*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @dbDelete(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @dbAdd(%struct.redisDb*, %struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @setExpire(%struct.client*, %struct.redisDb*, %struct.redisObject*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @objectSetLRUOrLFU(%struct.redisObject*, i64, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @signalModifiedKey(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local %struct.migrateCachedSocket* @migrateGetSocket(%struct.client*, %struct.redisObject* nocapture readonly, %struct.redisObject* nocapture readonly, i64) local_unnamed_addr #0 !dbg !10393 {
  %5 = tail call i8* @sdsempty() #6, !dbg !10418
  %6 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !10420
  %7 = load i8*, i8** %6, align 8, !dbg !10420, !tbaa !6254
  %8 = getelementptr inbounds i8, i8* %7, i64 -1, !dbg !10423
  %9 = load i8, i8* %8, align 1, !dbg !10423, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10425
  %10 = trunc i8 %9 to i3, !dbg !10425
  switch i3 %10, label %32 [
    i3 0, label %11
    i3 1, label %14
    i3 2, label %18
    i3 3, label %23
    i3 -4, label %28
  ], !dbg !10425

; <label>:11:                                     ; preds = %4
  %12 = lshr i8 %9, 3, !dbg !10426
  %13 = zext i8 %12 to i64, !dbg !10426
  br label %32, !dbg !10427

; <label>:14:                                     ; preds = %4
  %15 = getelementptr inbounds i8, i8* %7, i64 -3, !dbg !10428
  %16 = load i8, i8* %15, align 1, !dbg !10429, !tbaa !745
  %17 = zext i8 %16 to i64, !dbg !10428
  br label %32, !dbg !10430

; <label>:18:                                     ; preds = %4
  %19 = getelementptr inbounds i8, i8* %7, i64 -5, !dbg !10431
  %20 = bitcast i8* %19 to i16*, !dbg !10432
  %21 = load i16, i16* %20, align 1, !dbg !10432, !tbaa !1503
  %22 = zext i16 %21 to i64, !dbg !10431
  br label %32, !dbg !10433

; <label>:23:                                     ; preds = %4
  %24 = getelementptr inbounds i8, i8* %7, i64 -9, !dbg !10434
  %25 = bitcast i8* %24 to i32*, !dbg !10435
  %26 = load i32, i32* %25, align 1, !dbg !10435, !tbaa !708
  %27 = zext i32 %26 to i64, !dbg !10434
  br label %32, !dbg !10436

; <label>:28:                                     ; preds = %4
  %29 = getelementptr inbounds i8, i8* %7, i64 -17, !dbg !10437
  %30 = bitcast i8* %29 to i64*, !dbg !10438
  %31 = load i64, i64* %30, align 1, !dbg !10438, !tbaa !1510
  br label %32, !dbg !10439

; <label>:32:                                     ; preds = %4, %11, %14, %18, %23, %28
  %33 = phi i64 [ %31, %28 ], [ %27, %23 ], [ %22, %18 ], [ %17, %14 ], [ %13, %11 ], [ 0, %4 ], !dbg !10440
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10442
  %34 = tail call i8* @sdscatlen(i8* %5, i8* %7, i64 %33) #6, !dbg !10443
  %35 = tail call i8* @sdscatlen(i8* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #6, !dbg !10444
  %36 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %2, i64 0, i32 2, !dbg !10445
  %37 = load i8*, i8** %36, align 8, !dbg !10445, !tbaa !6254
  %38 = getelementptr inbounds i8, i8* %37, i64 -1, !dbg !10448
  %39 = load i8, i8* %38, align 1, !dbg !10448, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10450
  %40 = trunc i8 %39 to i3, !dbg !10450
  switch i3 %40, label %62 [
    i3 0, label %41
    i3 1, label %44
    i3 2, label %48
    i3 3, label %53
    i3 -4, label %58
  ], !dbg !10450

; <label>:41:                                     ; preds = %32
  %42 = lshr i8 %39, 3, !dbg !10451
  %43 = zext i8 %42 to i64, !dbg !10451
  br label %62, !dbg !10452

; <label>:44:                                     ; preds = %32
  %45 = getelementptr inbounds i8, i8* %37, i64 -3, !dbg !10453
  %46 = load i8, i8* %45, align 1, !dbg !10454, !tbaa !745
  %47 = zext i8 %46 to i64, !dbg !10453
  br label %62, !dbg !10455

; <label>:48:                                     ; preds = %32
  %49 = getelementptr inbounds i8, i8* %37, i64 -5, !dbg !10456
  %50 = bitcast i8* %49 to i16*, !dbg !10457
  %51 = load i16, i16* %50, align 1, !dbg !10457, !tbaa !1503
  %52 = zext i16 %51 to i64, !dbg !10456
  br label %62, !dbg !10458

; <label>:53:                                     ; preds = %32
  %54 = getelementptr inbounds i8, i8* %37, i64 -9, !dbg !10459
  %55 = bitcast i8* %54 to i32*, !dbg !10460
  %56 = load i32, i32* %55, align 1, !dbg !10460, !tbaa !708
  %57 = zext i32 %56 to i64, !dbg !10459
  br label %62, !dbg !10461

; <label>:58:                                     ; preds = %32
  %59 = getelementptr inbounds i8, i8* %37, i64 -17, !dbg !10462
  %60 = bitcast i8* %59 to i64*, !dbg !10463
  %61 = load i64, i64* %60, align 1, !dbg !10463, !tbaa !1510
  br label %62, !dbg !10464

; <label>:62:                                     ; preds = %32, %41, %44, %48, %53, %58
  %63 = phi i64 [ %61, %58 ], [ %57, %53 ], [ %52, %48 ], [ %47, %44 ], [ %43, %41 ], [ 0, %32 ], !dbg !10465
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10466
  %64 = tail call i8* @sdscatlen(i8* %35, i8* %37, i64 %63) #6, !dbg !10467
  %65 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10468, !tbaa !10469
  %66 = tail call i8* @dictFetchValue(%struct.dict* %65, i8* %64) #6, !dbg !10470
  %67 = icmp eq i8* %66, null, !dbg !10471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10473
  br i1 %67, label %73, label %68, !dbg !10473

; <label>:68:                                     ; preds = %62
  %69 = bitcast i8* %66 to %struct.migrateCachedSocket*, !dbg !10470
  tail call void @sdsfree(i8* %64) #6, !dbg !10475
  %70 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !10477, !tbaa !3248
  %71 = getelementptr inbounds i8, i8* %66, i64 16, !dbg !10478
  %72 = bitcast i8* %71 to i64*, !dbg !10478
  store i64 %70, i64* %72, align 8, !dbg !10479, !tbaa !10480
  br label %126, !dbg !10482

; <label>:73:                                     ; preds = %62
  %74 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10483, !tbaa !10469
  %75 = getelementptr inbounds %struct.dict, %struct.dict* %74, i64 0, i32 2, i64 0, i32 3, !dbg !10483
  %76 = load i64, i64* %75, align 8, !dbg !10483, !tbaa !5132
  %77 = getelementptr inbounds %struct.dict, %struct.dict* %74, i64 0, i32 2, i64 1, i32 3, !dbg !10483
  %78 = load i64, i64* %77, align 8, !dbg !10483, !tbaa !5132
  %79 = add i64 %78, %76, !dbg !10483
  %80 = icmp eq i64 %79, 64, !dbg !10484
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10485
  br i1 %80, label %81, label %92, !dbg !10485

; <label>:81:                                     ; preds = %73
  %82 = tail call %struct.dictEntry* @dictGetRandomKey(%struct.dict* %74) #6, !dbg !10486
  %83 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %82, i64 0, i32 1, i32 0, !dbg !10488
  %84 = load i8*, i8** %83, align 8, !dbg !10488, !tbaa !745
  %85 = bitcast i8* %84 to i32*, !dbg !10489
  %86 = load i32, i32* %85, align 8, !dbg !10489, !tbaa !10490
  %87 = tail call i32 @close(i32 %86) #6, !dbg !10491
  tail call void @zfree(i8* %84) #6, !dbg !10492
  %88 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10493, !tbaa !10469
  %89 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %82, i64 0, i32 0, !dbg !10494
  %90 = load i8*, i8** %89, align 8, !dbg !10494, !tbaa !3254
  %91 = tail call i32 @dictDelete(%struct.dict* %88, i8* %90) #6, !dbg !10495
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10496
  br label %92, !dbg !10496

; <label>:92:                                     ; preds = %81, %73
  %93 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9, !dbg !10497
  %94 = load %struct.redisObject**, %struct.redisObject*** %93, align 8, !dbg !10497, !tbaa !8644
  %95 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %94, i64 1, !dbg !10498
  %96 = load %struct.redisObject*, %struct.redisObject** %95, align 8, !dbg !10498, !tbaa !760
  %97 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %96, i64 0, i32 2, !dbg !10499
  %98 = load i8*, i8** %97, align 8, !dbg !10499, !tbaa !6254
  %99 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %94, i64 2, !dbg !10500
  %100 = load %struct.redisObject*, %struct.redisObject** %99, align 8, !dbg !10500, !tbaa !760
  %101 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %100, i64 0, i32 2, !dbg !10501
  %102 = load i8*, i8** %101, align 8, !dbg !10501, !tbaa !6254
  %103 = tail call i32 @atoi(i8* %102) #6, !dbg !10502
  %104 = tail call i32 @anetTcpNonBlockConnect(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i8* %98, i32 %103) #6, !dbg !10503
  %105 = icmp eq i32 %104, -1, !dbg !10505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10507
  br i1 %105, label %106, label %107, !dbg !10507

; <label>:106:                                    ; preds = %92
  tail call void @sdsfree(i8* %64) #6, !dbg !10508
  tail call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* nonnull %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.238, i64 0, i64 0), i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0)) #6, !dbg !10510
  br label %126, !dbg !10511

; <label>:107:                                    ; preds = %92
  %108 = tail call i32 @anetEnableTcpNoDelay(i8* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 47, i64 0), i32 %104) #6, !dbg !10512
  %109 = tail call i32 @aeWait(i32 %104, i32 2, i64 %3) #6, !dbg !10513
  %110 = and i32 %109, 2, !dbg !10515
  %111 = icmp eq i32 %110, 0, !dbg !10516
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10517
  br i1 %111, label %112, label %115, !dbg !10517

; <label>:112:                                    ; preds = %107
  tail call void @sdsfree(i8* %64) #6, !dbg !10518
  %113 = tail call i8* @sdsnew(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.239, i64 0, i64 0)) #6, !dbg !10520
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %113) #6, !dbg !10521
  %114 = tail call i32 @close(i32 %104) #6, !dbg !10522
  br label %126, !dbg !10523

; <label>:115:                                    ; preds = %107
  %116 = tail call i8* @zmalloc(i64 24) #6, !dbg !10524
  %117 = bitcast i8* %116 to %struct.migrateCachedSocket*, !dbg !10524
  %118 = bitcast i8* %116 to i32*, !dbg !10525
  store i32 %104, i32* %118, align 8, !dbg !10526, !tbaa !10490
  %119 = getelementptr inbounds i8, i8* %116, i64 8, !dbg !10527
  %120 = bitcast i8* %119 to i64*, !dbg !10527
  store i64 -1, i64* %120, align 8, !dbg !10528, !tbaa !10529
  %121 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !10530, !tbaa !3248
  %122 = getelementptr inbounds i8, i8* %116, i64 16, !dbg !10531
  %123 = bitcast i8* %122 to i64*, !dbg !10531
  store i64 %121, i64* %123, align 8, !dbg !10532, !tbaa !10480
  %124 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10533, !tbaa !10469
  %125 = tail call i32 @dictAdd(%struct.dict* %124, i8* %64, i8* %116) #6, !dbg !10534
  br label %126, !dbg !10535

; <label>:126:                                    ; preds = %115, %112, %106, %68
  %127 = phi %struct.migrateCachedSocket* [ %69, %68 ], [ null, %106 ], [ null, %112 ], [ %117, %115 ], !dbg !10441
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10536
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10537
  ret %struct.migrateCachedSocket* %127, !dbg !10537
}

; Function Attrs: noredzone
declare dso_local i8* @dictFetchValue(%struct.dict*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @anetTcpNonBlockConnect(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @aeWait(i32, i32, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i8* @sdsnew(i8*) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @migrateCloseSocket(%struct.redisObject* nocapture readonly, %struct.redisObject* nocapture readonly) local_unnamed_addr #0 !dbg !10538 {
  %3 = tail call i8* @sdsempty() #6, !dbg !10546
  %4 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %0, i64 0, i32 2, !dbg !10548
  %5 = load i8*, i8** %4, align 8, !dbg !10548, !tbaa !6254
  %6 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !10551
  %7 = load i8, i8* %6, align 1, !dbg !10551, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10553
  %8 = trunc i8 %7 to i3, !dbg !10553
  switch i3 %8, label %30 [
    i3 0, label %9
    i3 1, label %12
    i3 2, label %16
    i3 3, label %21
    i3 -4, label %26
  ], !dbg !10553

; <label>:9:                                      ; preds = %2
  %10 = lshr i8 %7, 3, !dbg !10554
  %11 = zext i8 %10 to i64, !dbg !10554
  br label %30, !dbg !10555

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds i8, i8* %5, i64 -3, !dbg !10556
  %14 = load i8, i8* %13, align 1, !dbg !10557, !tbaa !745
  %15 = zext i8 %14 to i64, !dbg !10556
  br label %30, !dbg !10558

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds i8, i8* %5, i64 -5, !dbg !10559
  %18 = bitcast i8* %17 to i16*, !dbg !10560
  %19 = load i16, i16* %18, align 1, !dbg !10560, !tbaa !1503
  %20 = zext i16 %19 to i64, !dbg !10559
  br label %30, !dbg !10561

; <label>:21:                                     ; preds = %2
  %22 = getelementptr inbounds i8, i8* %5, i64 -9, !dbg !10562
  %23 = bitcast i8* %22 to i32*, !dbg !10563
  %24 = load i32, i32* %23, align 1, !dbg !10563, !tbaa !708
  %25 = zext i32 %24 to i64, !dbg !10562
  br label %30, !dbg !10564

; <label>:26:                                     ; preds = %2
  %27 = getelementptr inbounds i8, i8* %5, i64 -17, !dbg !10565
  %28 = bitcast i8* %27 to i64*, !dbg !10566
  %29 = load i64, i64* %28, align 1, !dbg !10566, !tbaa !1510
  br label %30, !dbg !10567

; <label>:30:                                     ; preds = %2, %9, %12, %16, %21, %26
  %31 = phi i64 [ %29, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ], [ %11, %9 ], [ 0, %2 ], !dbg !10568
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10569
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10570
  %32 = tail call i8* @sdscatlen(i8* %3, i8* %5, i64 %31) #6, !dbg !10571
  %33 = tail call i8* @sdscatlen(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.237, i64 0, i64 0), i64 1) #6, !dbg !10572
  %34 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %1, i64 0, i32 2, !dbg !10573
  %35 = load i8*, i8** %34, align 8, !dbg !10573, !tbaa !6254
  %36 = getelementptr inbounds i8, i8* %35, i64 -1, !dbg !10576
  %37 = load i8, i8* %36, align 1, !dbg !10576, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10578
  %38 = trunc i8 %37 to i3, !dbg !10578
  switch i3 %38, label %60 [
    i3 0, label %39
    i3 1, label %42
    i3 2, label %46
    i3 3, label %51
    i3 -4, label %56
  ], !dbg !10578

; <label>:39:                                     ; preds = %30
  %40 = lshr i8 %37, 3, !dbg !10579
  %41 = zext i8 %40 to i64, !dbg !10579
  br label %60, !dbg !10580

; <label>:42:                                     ; preds = %30
  %43 = getelementptr inbounds i8, i8* %35, i64 -3, !dbg !10581
  %44 = load i8, i8* %43, align 1, !dbg !10582, !tbaa !745
  %45 = zext i8 %44 to i64, !dbg !10581
  br label %60, !dbg !10583

; <label>:46:                                     ; preds = %30
  %47 = getelementptr inbounds i8, i8* %35, i64 -5, !dbg !10584
  %48 = bitcast i8* %47 to i16*, !dbg !10585
  %49 = load i16, i16* %48, align 1, !dbg !10585, !tbaa !1503
  %50 = zext i16 %49 to i64, !dbg !10584
  br label %60, !dbg !10586

; <label>:51:                                     ; preds = %30
  %52 = getelementptr inbounds i8, i8* %35, i64 -9, !dbg !10587
  %53 = bitcast i8* %52 to i32*, !dbg !10588
  %54 = load i32, i32* %53, align 1, !dbg !10588, !tbaa !708
  %55 = zext i32 %54 to i64, !dbg !10587
  br label %60, !dbg !10589

; <label>:56:                                     ; preds = %30
  %57 = getelementptr inbounds i8, i8* %35, i64 -17, !dbg !10590
  %58 = bitcast i8* %57 to i64*, !dbg !10591
  %59 = load i64, i64* %58, align 1, !dbg !10591, !tbaa !1510
  br label %60, !dbg !10592

; <label>:60:                                     ; preds = %30, %39, %42, %46, %51, %56
  %61 = phi i64 [ %59, %56 ], [ %55, %51 ], [ %50, %46 ], [ %45, %42 ], [ %41, %39 ], [ 0, %30 ], !dbg !10593
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10569
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10594
  %62 = tail call i8* @sdscatlen(i8* %33, i8* %35, i64 %61) #6, !dbg !10595
  %63 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10596, !tbaa !10469
  %64 = tail call i8* @dictFetchValue(%struct.dict* %63, i8* %62) #6, !dbg !10597
  %65 = icmp eq i8* %64, null, !dbg !10598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10600
  br i1 %65, label %66, label %67, !dbg !10600

; <label>:66:                                     ; preds = %60
  tail call void @sdsfree(i8* %62) #6, !dbg !10601
  br label %73, !dbg !10603

; <label>:67:                                     ; preds = %60
  %68 = bitcast i8* %64 to i32*, !dbg !10605
  %69 = load i32, i32* %68, align 8, !dbg !10605, !tbaa !10490
  %70 = tail call i32 @close(i32 %69) #6, !dbg !10606
  tail call void @zfree(i8* nonnull %64) #6, !dbg !10607
  %71 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10608, !tbaa !10469
  %72 = tail call i32 @dictDelete(%struct.dict* %71, i8* %62) #6, !dbg !10609
  tail call void @sdsfree(i8* %62) #6, !dbg !10610
  br label %73, !dbg !10611

; <label>:73:                                     ; preds = %67, %66
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10612
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10611
  ret void, !dbg !10611
}

; Function Attrs: noredzone nounwind
define dso_local void @migrateCloseTimedoutSockets() local_unnamed_addr #0 !dbg !10613 {
  %1 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10619, !tbaa !10469
  %2 = tail call %struct.dictIterator* @dictGetSafeIterator(%struct.dict* %1) #6, !dbg !10620
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10622
  %3 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %2) #6, !dbg !10623
  %4 = icmp eq %struct.dictEntry* %3, null, !dbg !10625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10622
  br i1 %4, label %26, label %5, !dbg !10622

; <label>:5:                                      ; preds = %0, %23
  %6 = phi %struct.dictEntry* [ %24, %23 ], [ %3, %0 ]
  %7 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 1, i32 0, !dbg !10626
  %8 = load i8*, i8** %7, align 8, !dbg !10626, !tbaa !745
  %9 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 251), align 8, !dbg !10627, !tbaa !3248
  %10 = getelementptr inbounds i8, i8* %8, i64 16, !dbg !10629
  %11 = bitcast i8* %10 to i64*, !dbg !10629
  %12 = load i64, i64* %11, align 8, !dbg !10629, !tbaa !10480
  %13 = sub nsw i64 %9, %12, !dbg !10630
  %14 = icmp sgt i64 %13, 10, !dbg !10631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10632
  br i1 %14, label %15, label %23, !dbg !10632

; <label>:15:                                     ; preds = %5
  %16 = bitcast i8* %8 to i32*, !dbg !10634
  %17 = load i32, i32* %16, align 8, !dbg !10634, !tbaa !10490
  %18 = tail call i32 @close(i32 %17) #6, !dbg !10636
  tail call void @zfree(i8* %8) #6, !dbg !10637
  %19 = load %struct.dict*, %struct.dict** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 48), align 8, !dbg !10638, !tbaa !10469
  %20 = getelementptr inbounds %struct.dictEntry, %struct.dictEntry* %6, i64 0, i32 0, !dbg !10639
  %21 = load i8*, i8** %20, align 8, !dbg !10639, !tbaa !3254
  %22 = tail call i32 @dictDelete(%struct.dict* %19, i8* %21) #6, !dbg !10640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10641
  br label %23, !dbg !10641

; <label>:23:                                     ; preds = %15, %5
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10622
  %24 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %2) #6, !dbg !10623
  %25 = icmp eq %struct.dictEntry* %24, null, !dbg !10625
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10622
  br i1 %25, label %26, label %5, !dbg !10622, !llvm.loop !10642

; <label>:26:                                     ; preds = %23, %0
  tail call void @dictReleaseIterator(%struct.dictIterator* %2) #6, !dbg !10644
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10645
  ret void, !dbg !10645
}

; Function Attrs: noredzone nounwind
define dso_local void @migrateCommand(%struct.client*) #0 !dbg !10646 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct._rio, align 8
  %5 = alloca %struct._rio, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [1024 x i8], align 16
  %9 = bitcast i64* %2 to i8*, !dbg !10704
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7, !dbg !10704
  %10 = bitcast i64* %3 to i8*, !dbg !10705
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7, !dbg !10705
  %11 = bitcast %struct._rio* %4 to i8*, !dbg !10709
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %11) #7, !dbg !10709
  %12 = bitcast %struct._rio* %5 to i8*, !dbg !10709
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %12) #7, !dbg !10709
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10716
  %13 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 8, !dbg !10717
  %14 = load i32, i32* %13, align 8, !dbg !10717, !tbaa !8637
  %15 = icmp sgt i32 %14, 6, !dbg !10718
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10719
  %16 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 9
  %17 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10720, !tbaa !8644
  br i1 %15, label %18, label %101, !dbg !10719

; <label>:18:                                     ; preds = %1
  %19 = add nsw i32 %14, -1
  br label %20, !dbg !10719

; <label>:20:                                     ; preds = %18, %94
  %21 = phi i32 [ 0, %18 ], [ %98, %94 ]
  %22 = phi i32 [ 0, %18 ], [ %97, %94 ]
  %23 = phi i32 [ 6, %18 ], [ %99, %94 ]
  %24 = phi i8* [ null, %18 ], [ %95, %94 ]
  %25 = icmp slt i32 %23, %19, !dbg !10722
  %26 = sext i32 %23 to i64, !dbg !10723
  %27 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 %26, !dbg !10723
  %28 = load %struct.redisObject*, %struct.redisObject** %27, align 8, !dbg !10723, !tbaa !760
  %29 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %28, i64 0, i32 2, !dbg !10725
  %30 = load i8*, i8** %29, align 8, !dbg !10725, !tbaa !6254
  %31 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.240, i64 0, i64 0)) #9, !dbg !10726
  %32 = icmp eq i32 %31, 0, !dbg !10726
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10727
  br i1 %32, label %94, label %33, !dbg !10727

; <label>:33:                                     ; preds = %20
  %34 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i64 0, i64 0)) #9, !dbg !10728
  %35 = icmp eq i32 %34, 0, !dbg !10728
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10730
  br i1 %35, label %94, label %36, !dbg !10730

; <label>:36:                                     ; preds = %33
  %37 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i64 0, i64 0)) #9, !dbg !10731
  %38 = icmp eq i32 %37, 0, !dbg !10731
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10733
  br i1 %38, label %39, label %49, !dbg !10733

; <label>:39:                                     ; preds = %36
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10734
  br i1 %25, label %42, label %40, !dbg !10734

; <label>:40:                                     ; preds = %39
  %41 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !10736, !tbaa !9769
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %41) #6, !dbg !10739
  br label %88, !dbg !10740

; <label>:42:                                     ; preds = %39
  %43 = add nsw i32 %23, 1, !dbg !10741
  %44 = sext i32 %43 to i64, !dbg !10742
  %45 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 %44, !dbg !10742
  %46 = load %struct.redisObject*, %struct.redisObject** %45, align 8, !dbg !10742, !tbaa !760
  %47 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %46, i64 0, i32 2, !dbg !10743
  %48 = load i8*, i8** %47, align 8, !dbg !10743, !tbaa !6254
  br label %94

; <label>:49:                                     ; preds = %36
  %50 = tail call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.242, i64 0, i64 0)) #9, !dbg !10744
  %51 = icmp eq i32 %50, 0, !dbg !10744
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10746
  br i1 %51, label %52, label %86, !dbg !10746

; <label>:52:                                     ; preds = %49
  %53 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 3, !dbg !10747
  %54 = load %struct.redisObject*, %struct.redisObject** %53, align 8, !dbg !10747, !tbaa !760
  %55 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %54, i64 0, i32 2, !dbg !10750
  %56 = load i8*, i8** %55, align 8, !dbg !10750, !tbaa !6254
  %57 = getelementptr inbounds i8, i8* %56, i64 -1, !dbg !10753
  %58 = load i8, i8* %57, align 1, !dbg !10753, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10755
  %59 = trunc i8 %58 to i3, !dbg !10755
  switch i3 %59, label %81 [
    i3 0, label %60
    i3 1, label %63
    i3 2, label %67
    i3 3, label %72
    i3 -4, label %77
  ], !dbg !10755

; <label>:60:                                     ; preds = %52
  %61 = lshr i8 %58, 3, !dbg !10756
  %62 = zext i8 %61 to i64, !dbg !10756
  br label %82, !dbg !10757

; <label>:63:                                     ; preds = %52
  %64 = getelementptr inbounds i8, i8* %56, i64 -3, !dbg !10758
  %65 = load i8, i8* %64, align 1, !dbg !10759, !tbaa !745
  %66 = zext i8 %65 to i64, !dbg !10758
  br label %82, !dbg !10760

; <label>:67:                                     ; preds = %52
  %68 = getelementptr inbounds i8, i8* %56, i64 -5, !dbg !10761
  %69 = bitcast i8* %68 to i16*, !dbg !10762
  %70 = load i16, i16* %69, align 1, !dbg !10762, !tbaa !1503
  %71 = zext i16 %70 to i64, !dbg !10761
  br label %82, !dbg !10763

; <label>:72:                                     ; preds = %52
  %73 = getelementptr inbounds i8, i8* %56, i64 -9, !dbg !10764
  %74 = bitcast i8* %73 to i32*, !dbg !10765
  %75 = load i32, i32* %74, align 1, !dbg !10765, !tbaa !708
  %76 = zext i32 %75 to i64, !dbg !10764
  br label %82, !dbg !10766

; <label>:77:                                     ; preds = %52
  %78 = getelementptr inbounds i8, i8* %56, i64 -17, !dbg !10767
  %79 = bitcast i8* %78 to i64*, !dbg !10768
  %80 = load i64, i64* %79, align 1, !dbg !10768, !tbaa !1510
  br label %82, !dbg !10769

; <label>:81:                                     ; preds = %52
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10770
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10771
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10772
  br label %89, !dbg !10772

; <label>:82:                                     ; preds = %60, %63, %67, %72, %77
  %83 = phi i64 [ %80, %77 ], [ %76, %72 ], [ %71, %67 ], [ %66, %63 ], [ %62, %60 ], !dbg !10773
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10774
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10771
  %84 = icmp eq i64 %83, 0, !dbg !10775
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10772
  br i1 %84, label %89, label %85, !dbg !10772

; <label>:85:                                     ; preds = %82
  tail call void @addReplyError(%struct.client* nonnull %0, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.243, i64 0, i64 0)) #6, !dbg !10776
  br label %88, !dbg !10778

; <label>:86:                                     ; preds = %49
  %87 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 16), align 8, !dbg !10779, !tbaa !9769
  tail call void @addReply(%struct.client* nonnull %0, %struct.redisObject* %87) #6, !dbg !10781
  br label %88, !dbg !10782

; <label>:88:                                     ; preds = %86, %85, %40
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10783
  br label %583

; <label>:89:                                     ; preds = %82, %81
  %90 = add nsw i32 %23, 1, !dbg !10784
  %91 = xor i32 %23, -1, !dbg !10785
  %92 = add i32 %14, %91, !dbg !10785
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10786
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %93 = sext i32 %90 to i64
  br label %101

; <label>:94:                                     ; preds = %33, %20, %42
  %95 = phi i8* [ %48, %42 ], [ %24, %20 ], [ %24, %33 ], !dbg !10787
  %96 = phi i32 [ %43, %42 ], [ %23, %20 ], [ %23, %33 ], !dbg !10788
  %97 = phi i32 [ %22, %42 ], [ %22, %20 ], [ 1, %33 ], !dbg !10787
  %98 = phi i32 [ %21, %42 ], [ 1, %20 ], [ %21, %33 ], !dbg !10789
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10791
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %99 = add nsw i32 %96, 1, !dbg !10792
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10793
  %100 = icmp slt i32 %99, %14, !dbg !10718
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10719
  br i1 %100, label %20, label %101, !dbg !10719, !llvm.loop !10794

; <label>:101:                                    ; preds = %94, %1, %89
  %102 = phi i8* [ %24, %89 ], [ null, %1 ], [ %95, %94 ]
  %103 = phi i32 [ %22, %89 ], [ 0, %1 ], [ %97, %94 ]
  %104 = phi i32 [ %21, %89 ], [ 0, %1 ], [ %98, %94 ]
  %105 = phi i64 [ %93, %89 ], [ 3, %1 ], [ 3, %94 ]
  %106 = phi i32 [ %92, %89 ], [ 1, %1 ], [ 1, %94 ], !dbg !10714
  %107 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %17, i64 5, !dbg !10796
  %108 = load %struct.redisObject*, %struct.redisObject** %107, align 8, !dbg !10796, !tbaa !760
  %109 = call i32 @getLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %108, i64* nonnull %2, i8* null) #6, !dbg !10798
  %110 = icmp eq i32 %109, 0, !dbg !10799
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10800
  br i1 %110, label %111, label %583, !dbg !10800

; <label>:111:                                    ; preds = %101
  %112 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10801, !tbaa !8644
  %113 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %112, i64 4, !dbg !10802
  %114 = load %struct.redisObject*, %struct.redisObject** %113, align 8, !dbg !10802, !tbaa !760
  %115 = call i32 @getLongFromObjectOrReply(%struct.client* nonnull %0, %struct.redisObject* %114, i64* nonnull %3, i8* null) #6, !dbg !10804
  %116 = icmp eq i32 %115, 0, !dbg !10805
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10806
  br i1 %116, label %117, label %583, !dbg !10806

; <label>:117:                                    ; preds = %111
  %118 = load i64, i64* %2, align 8, !dbg !10807, !tbaa !1510
  %119 = icmp slt i64 %118, 1, !dbg !10809
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10810
  br i1 %119, label %120, label %121, !dbg !10810

; <label>:120:                                    ; preds = %117
  store i64 1000, i64* %2, align 8, !dbg !10811, !tbaa !1510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10812
  br label %121, !dbg !10812

; <label>:121:                                    ; preds = %120, %117
  %122 = sext i32 %106 to i64, !dbg !10813
  %123 = shl nsw i64 %122, 3, !dbg !10814
  %124 = call i8* @zrealloc(i8* null, i64 %123) #6, !dbg !10815
  %125 = bitcast i8* %124 to %struct.redisObject**, !dbg !10815
  %126 = call i8* @zrealloc(i8* null, i64 %123) #6, !dbg !10816
  %127 = bitcast i8* %126 to %struct.redisObject**, !dbg !10816
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10818
  %128 = icmp sgt i32 %106, 0, !dbg !10820
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10822
  br i1 %128, label %130, label %129, !dbg !10822

; <label>:129:                                    ; preds = %121
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10823
  br label %189, !dbg !10823

; <label>:130:                                    ; preds = %121
  %131 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2
  %132 = zext i32 %106 to i64
  br label %133, !dbg !10822

; <label>:133:                                    ; preds = %153, %130
  %134 = phi i64 [ 0, %130 ], [ %155, %153 ]
  %135 = phi i32 [ 0, %130 ], [ %154, %153 ]
  %136 = load %struct.redisDb*, %struct.redisDb** %131, align 8, !dbg !10824, !tbaa !9963
  %137 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10827, !tbaa !8644
  %138 = add nsw i64 %134, %105, !dbg !10828
  %139 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %137, i64 %138, !dbg !10829
  %140 = load %struct.redisObject*, %struct.redisObject** %139, align 8, !dbg !10829, !tbaa !760
  %141 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %136, %struct.redisObject* %140) #6, !dbg !10830
  %142 = sext i32 %135 to i64, !dbg !10831
  %143 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %125, i64 %142, !dbg !10831
  store %struct.redisObject* %141, %struct.redisObject** %143, align 8, !dbg !10832, !tbaa !760
  %144 = icmp eq %struct.redisObject* %141, null, !dbg !10833
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10834
  br i1 %144, label %153, label %145, !dbg !10834

; <label>:145:                                    ; preds = %133
  %146 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10835, !tbaa !8644
  %147 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %146, i64 %138, !dbg !10837
  %148 = bitcast %struct.redisObject** %147 to i64*, !dbg !10837
  %149 = load i64, i64* %148, align 8, !dbg !10837, !tbaa !760
  %150 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %127, i64 %142, !dbg !10838
  %151 = bitcast %struct.redisObject** %150 to i64*, !dbg !10839
  store i64 %149, i64* %151, align 8, !dbg !10839, !tbaa !760
  %152 = add nsw i32 %135, 1, !dbg !10840
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10841
  br label %153, !dbg !10841

; <label>:153:                                    ; preds = %133, %145
  %154 = phi i32 [ %152, %145 ], [ %135, %133 ], !dbg !10787
  %155 = add nuw nsw i64 %134, 1, !dbg !10842
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10843
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10822
  %156 = icmp eq i64 %155, %132, !dbg !10820
  br i1 %156, label %157, label %133, !dbg !10822, !llvm.loop !10844

; <label>:157:                                    ; preds = %153
  %158 = icmp eq i32 %154, 0, !dbg !10846
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10823
  br i1 %158, label %189, label %159, !dbg !10823

; <label>:159:                                    ; preds = %157
  %160 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10848, !tbaa !8644
  %161 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %160, i64 1, !dbg !10849
  %162 = load %struct.redisObject*, %struct.redisObject** %161, align 8, !dbg !10849, !tbaa !760
  %163 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %160, i64 2, !dbg !10850
  %164 = load %struct.redisObject*, %struct.redisObject** %163, align 8, !dbg !10850, !tbaa !760
  %165 = load i64, i64* %2, align 8, !dbg !10851, !tbaa !1510
  %166 = call %struct.migrateCachedSocket* @migrateGetSocket(%struct.client* nonnull %0, %struct.redisObject* %162, %struct.redisObject* %164, i64 %165) #10, !dbg !10852
  %167 = icmp eq %struct.migrateCachedSocket* %166, null, !dbg !10854
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10856
  br i1 %167, label %191, label %168, !dbg !10856

; <label>:168:                                    ; preds = %159
  %169 = icmp ne i8* %102, null
  %170 = getelementptr inbounds i8, i8* %102, i64 -1
  %171 = getelementptr inbounds %struct._rio, %struct._rio* %4, i64 0, i32 8
  %172 = bitcast %union.anon.11* %171 to i8**
  %173 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 2
  %174 = icmp ne i32 %103, 0
  %175 = select i1 %174, i64 5, i64 4
  %176 = getelementptr inbounds %struct._rio, %struct._rio* %5, i64 0, i32 8
  %177 = bitcast %union.anon.11* %176 to i8**
  %178 = getelementptr inbounds i8, i8* %102, i64 -3
  %179 = getelementptr inbounds i8, i8* %102, i64 -5
  %180 = bitcast i8* %179 to i16*
  %181 = getelementptr inbounds i8, i8* %102, i64 -9
  %182 = bitcast i8* %181 to i32*
  %183 = getelementptr inbounds i8, i8* %102, i64 -17
  %184 = bitcast i8* %183 to i64*
  %185 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %186 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %187 = icmp ne i32 %104, 0
  %188 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  br label %192, !dbg !10856

; <label>:189:                                    ; preds = %129, %157
  call void @zfree(i8* %124) #6, !dbg !10857
  call void @zfree(i8* %126) #6, !dbg !10859
  %190 = call i8* @sdsnew(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.244, i64 0, i64 0)) #6, !dbg !10860
  call void @addReplySds(%struct.client* nonnull %0, i8* %190) #6, !dbg !10861
  br label %582, !dbg !10862

; <label>:191:                                    ; preds = %568, %159
  call void @zfree(i8* %124) #6, !dbg !10863
  call void @zfree(i8* %126) #6, !dbg !10865
  br label %582, !dbg !10866

; <label>:192:                                    ; preds = %168, %568
  %193 = phi %struct.migrateCachedSocket* [ %166, %168 ], [ %575, %568 ]
  %194 = phi i32 [ %154, %168 ], [ %379, %568 ]
  %195 = phi i32 [ 0, %168 ], [ %553, %568 ]
  %196 = phi i32 [ 1, %168 ], [ 0, %568 ]
  %197 = call i8* @sdsempty() #6, !dbg !10867
  call void @rioInitWithBuffer(%struct._rio* nonnull %4, i8* %197) #6, !dbg !10869
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10870
  br i1 %169, label %198, label %228, !dbg !10870

; <label>:198:                                    ; preds = %192
  %199 = call i64 @rioWriteBulkCount(%struct._rio* nonnull %4, i8 signext 42, i64 2) #6, !dbg !10871
  %200 = icmp eq i64 %199, 0, !dbg !10871
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10871
  br i1 %200, label %201, label %202, !dbg !10871

; <label>:201:                                    ; preds = %198
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5155) #6, !dbg !10871
  call void @_exit(i32 1) #8, !dbg !10871
  unreachable

; <label>:202:                                    ; preds = %198
  %203 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.246, i64 0, i64 0), i64 4) #6, !dbg !10874
  %204 = icmp eq i64 %203, 0, !dbg !10874
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10874
  br i1 %204, label %205, label %206, !dbg !10874

; <label>:205:                                    ; preds = %202
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5156) #6, !dbg !10874
  call void @_exit(i32 1) #8, !dbg !10874
  unreachable

; <label>:206:                                    ; preds = %202
  %207 = load i8, i8* %170, align 1, !dbg !10877, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10879
  %208 = trunc i8 %207 to i3, !dbg !10879
  switch i3 %208, label %223 [
    i3 0, label %209
    i3 1, label %212
    i3 2, label %215
    i3 3, label %218
    i3 -4, label %221
  ], !dbg !10879

; <label>:209:                                    ; preds = %206
  %210 = lshr i8 %207, 3, !dbg !10880
  %211 = zext i8 %210 to i64, !dbg !10880
  br label %223, !dbg !10881

; <label>:212:                                    ; preds = %206
  %213 = load i8, i8* %178, align 1, !dbg !10882, !tbaa !745
  %214 = zext i8 %213 to i64, !dbg !10883
  br label %223, !dbg !10884

; <label>:215:                                    ; preds = %206
  %216 = load i16, i16* %180, align 1, !dbg !10885, !tbaa !1503
  %217 = zext i16 %216 to i64, !dbg !10886
  br label %223, !dbg !10887

; <label>:218:                                    ; preds = %206
  %219 = load i32, i32* %182, align 1, !dbg !10888, !tbaa !708
  %220 = zext i32 %219 to i64, !dbg !10889
  br label %223, !dbg !10890

; <label>:221:                                    ; preds = %206
  %222 = load i64, i64* %184, align 1, !dbg !10891, !tbaa !1510
  br label %223, !dbg !10892

; <label>:223:                                    ; preds = %206, %209, %212, %215, %218, %221
  %224 = phi i64 [ %222, %221 ], [ %220, %218 ], [ %217, %215 ], [ %214, %212 ], [ %211, %209 ], [ 0, %206 ], !dbg !10893
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10894
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10895
  %225 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* nonnull %102, i64 %224) #6, !dbg !10896
  %226 = icmp eq i64 %225, 0, !dbg !10896
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10896
  br i1 %226, label %227, label %228, !dbg !10896

; <label>:227:                                    ; preds = %223
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.248, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5158) #6, !dbg !10896
  call void @_exit(i32 1) #8, !dbg !10896
  unreachable

; <label>:228:                                    ; preds = %223, %192
  %229 = getelementptr inbounds %struct.migrateCachedSocket, %struct.migrateCachedSocket* %193, i64 0, i32 1, !dbg !10897
  %230 = load i64, i64* %229, align 8, !dbg !10897, !tbaa !10529
  %231 = load i64, i64* %3, align 8, !dbg !10898, !tbaa !1510
  %232 = icmp ne i64 %230, %231, !dbg !10899
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10900
  br i1 %232, label %233, label %246, !dbg !10900

; <label>:233:                                    ; preds = %228
  %234 = call i64 @rioWriteBulkCount(%struct._rio* nonnull %4, i8 signext 42, i64 2) #6, !dbg !10901
  %235 = icmp eq i64 %234, 0, !dbg !10901
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10901
  br i1 %235, label %236, label %237, !dbg !10901

; <label>:236:                                    ; preds = %233
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5164) #6, !dbg !10901
  call void @_exit(i32 1) #8, !dbg !10901
  unreachable

; <label>:237:                                    ; preds = %233
  %238 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.249, i64 0, i64 0), i64 6) #6, !dbg !10904
  %239 = icmp eq i64 %238, 0, !dbg !10904
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10904
  br i1 %239, label %240, label %241, !dbg !10904

; <label>:240:                                    ; preds = %237
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.250, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5165) #6, !dbg !10904
  call void @_exit(i32 1) #8, !dbg !10904
  unreachable

; <label>:241:                                    ; preds = %237
  %242 = load i64, i64* %3, align 8, !dbg !10905, !tbaa !1510
  %243 = call i64 @rioWriteBulkLongLong(%struct._rio* nonnull %4, i64 %242) #6, !dbg !10905
  %244 = icmp eq i64 %243, 0, !dbg !10905
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10905
  br i1 %244, label %245, label %246, !dbg !10905

; <label>:245:                                    ; preds = %241
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.251, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5166) #6, !dbg !10905
  call void @_exit(i32 1) #8, !dbg !10905
  unreachable

; <label>:246:                                    ; preds = %241, %228
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10907
  %247 = icmp sgt i32 %194, 0, !dbg !10908
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10909
  br i1 %247, label %248, label %378, !dbg !10909

; <label>:248:                                    ; preds = %246
  %249 = sext i32 %194 to i64, !dbg !10910
  br label %250, !dbg !10910

; <label>:250:                                    ; preds = %248, %374
  %251 = phi i64 [ 0, %248 ], [ %376, %374 ]
  %252 = phi i32 [ 0, %248 ], [ %375, %374 ]
  %253 = load %struct.redisDb*, %struct.redisDb** %173, align 8, !dbg !10910, !tbaa !9963
  %254 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %127, i64 %251, !dbg !10912
  %255 = load %struct.redisObject*, %struct.redisObject** %254, align 8, !dbg !10912, !tbaa !760
  %256 = call i64 @getExpire(%struct.redisDb* %253, %struct.redisObject* %255) #6, !dbg !10913
  %257 = icmp eq i64 %256, -1, !dbg !10915
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10917
  br i1 %257, label %265, label %258, !dbg !10917

; <label>:258:                                    ; preds = %250
  %259 = call i64 @mstime() #6, !dbg !10918
  %260 = sub nsw i64 %256, %259, !dbg !10920
  %261 = icmp slt i64 %260, 0, !dbg !10921
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10923
  br i1 %261, label %374, label %262, !dbg !10923

; <label>:262:                                    ; preds = %258
  %263 = icmp eq i64 %260, 0, !dbg !10924
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10926
  br i1 %263, label %264, label %265, !dbg !10926

; <label>:264:                                    ; preds = %262
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10927
  br label %265, !dbg !10927

; <label>:265:                                    ; preds = %250, %262, %264
  %266 = phi i64 [ 1, %264 ], [ %260, %262 ], [ 0, %250 ], !dbg !10928
  %267 = bitcast %struct.redisObject** %254 to i64*, !dbg !10929
  %268 = load i64, i64* %267, align 8, !dbg !10929, !tbaa !760
  %269 = add nsw i32 %252, 1, !dbg !10930
  %270 = sext i32 %252 to i64, !dbg !10931
  %271 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %127, i64 %270, !dbg !10931
  %272 = bitcast %struct.redisObject** %271 to i64*, !dbg !10932
  store i64 %268, i64* %272, align 8, !dbg !10932, !tbaa !760
  %273 = call i64 @rioWriteBulkCount(%struct._rio* nonnull %4, i8 signext 42, i64 %175) #6, !dbg !10933
  %274 = icmp eq i64 %273, 0, !dbg !10933
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10933
  br i1 %274, label %275, label %276, !dbg !10933

; <label>:275:                                    ; preds = %265
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5193) #6, !dbg !10933
  call void @_exit(i32 1) #8, !dbg !10933
  unreachable

; <label>:276:                                    ; preds = %265
  %277 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !10934, !tbaa !8630
  %278 = icmp eq i32 %277, 0, !dbg !10936
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10937
  br i1 %278, label %283, label %279, !dbg !10937

; <label>:279:                                    ; preds = %276
  %280 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i64 0, i64 0), i64 14) #6, !dbg !10938
  %281 = icmp eq i64 %280, 0, !dbg !10938
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10938
  br i1 %281, label %282, label %287, !dbg !10938

; <label>:282:                                    ; preds = %279
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5197) #6, !dbg !10938
  call void @_exit(i32 1) #8, !dbg !10938
  unreachable

; <label>:283:                                    ; preds = %276
  %284 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i64 0, i64 0), i64 7) #6, !dbg !10939
  %285 = icmp eq i64 %284, 0, !dbg !10939
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10939
  br i1 %285, label %286, label %287, !dbg !10939

; <label>:286:                                    ; preds = %283
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.256, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5199) #6, !dbg !10939
  call void @_exit(i32 1) #8, !dbg !10939
  unreachable

; <label>:287:                                    ; preds = %279, %283
  %288 = bitcast %struct.redisObject** %254 to i32**, !dbg !10940
  %289 = load i32*, i32** %288, align 8, !dbg !10940, !tbaa !760
  %290 = load i32, i32* %289, align 8, !dbg !10940
  %291 = lshr i32 %290, 4, !dbg !10940
  %292 = and i32 %291, 15, !dbg !10940
  %293 = icmp eq i32 %292, 0, !dbg !10940
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10940
  br i1 %293, label %297, label %294, !dbg !10940

; <label>:294:                                    ; preds = %287
  %295 = icmp eq i32 %292, 8, !dbg !10940
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10940
  br i1 %295, label %297, label %296, !dbg !10940

; <label>:296:                                    ; preds = %294
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.257, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5200) #6, !dbg !10940
  call void @_exit(i32 1) #8, !dbg !10940
  unreachable

; <label>:297:                                    ; preds = %287, %294
  %298 = getelementptr inbounds i32, i32* %289, i64 2, !dbg !10941
  %299 = bitcast i32* %298 to i8**, !dbg !10941
  %300 = load i8*, i8** %299, align 8, !dbg !10941, !tbaa !6254
  %301 = getelementptr inbounds i8, i8* %300, i64 -1, !dbg !10944
  %302 = load i8, i8* %301, align 1, !dbg !10944, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10946
  %303 = trunc i8 %302 to i3, !dbg !10946
  switch i3 %303, label %325 [
    i3 0, label %304
    i3 1, label %307
    i3 2, label %311
    i3 3, label %316
    i3 -4, label %321
  ], !dbg !10946

; <label>:304:                                    ; preds = %297
  %305 = lshr i8 %302, 3, !dbg !10947
  %306 = zext i8 %305 to i64, !dbg !10947
  br label %325, !dbg !10948

; <label>:307:                                    ; preds = %297
  %308 = getelementptr inbounds i8, i8* %300, i64 -3, !dbg !10949
  %309 = load i8, i8* %308, align 1, !dbg !10950, !tbaa !745
  %310 = zext i8 %309 to i64, !dbg !10949
  br label %325, !dbg !10951

; <label>:311:                                    ; preds = %297
  %312 = getelementptr inbounds i8, i8* %300, i64 -5, !dbg !10952
  %313 = bitcast i8* %312 to i16*, !dbg !10953
  %314 = load i16, i16* %313, align 1, !dbg !10953, !tbaa !1503
  %315 = zext i16 %314 to i64, !dbg !10952
  br label %325, !dbg !10954

; <label>:316:                                    ; preds = %297
  %317 = getelementptr inbounds i8, i8* %300, i64 -9, !dbg !10955
  %318 = bitcast i8* %317 to i32*, !dbg !10956
  %319 = load i32, i32* %318, align 1, !dbg !10956, !tbaa !708
  %320 = zext i32 %319 to i64, !dbg !10955
  br label %325, !dbg !10957

; <label>:321:                                    ; preds = %297
  %322 = getelementptr inbounds i8, i8* %300, i64 -17, !dbg !10958
  %323 = bitcast i8* %322 to i64*, !dbg !10959
  %324 = load i64, i64* %323, align 1, !dbg !10959, !tbaa !1510
  br label %325, !dbg !10960

; <label>:325:                                    ; preds = %297, %304, %307, %311, %316, %321
  %326 = phi i64 [ %324, %321 ], [ %320, %316 ], [ %315, %311 ], [ %310, %307 ], [ %306, %304 ], [ 0, %297 ], !dbg !10961
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10962
  %327 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* %300, i64 %326) #6, !dbg !10941
  %328 = icmp eq i64 %327, 0, !dbg !10941
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10941
  br i1 %328, label %329, label %330, !dbg !10941

; <label>:329:                                    ; preds = %325
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5202) #6, !dbg !10941
  call void @_exit(i32 1) #8, !dbg !10941
  unreachable

; <label>:330:                                    ; preds = %325
  %331 = call i64 @rioWriteBulkLongLong(%struct._rio* nonnull %4, i64 %266) #6, !dbg !10963
  %332 = icmp eq i64 %331, 0, !dbg !10963
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10963
  br i1 %332, label %333, label %334, !dbg !10963

; <label>:333:                                    ; preds = %330
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.259, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5203) #6, !dbg !10963
  call void @_exit(i32 1) #8, !dbg !10963
  unreachable

; <label>:334:                                    ; preds = %330
  %335 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %125, i64 %251, !dbg !10964
  %336 = load %struct.redisObject*, %struct.redisObject** %335, align 8, !dbg !10964, !tbaa !760
  %337 = load %struct.redisObject*, %struct.redisObject** %254, align 8, !dbg !10965, !tbaa !760
  call void @createDumpPayload(%struct._rio* nonnull %5, %struct.redisObject* %336, %struct.redisObject* %337) #10, !dbg !10967
  %338 = load i8*, i8** %177, align 8, !dbg !10968, !tbaa !745
  %339 = getelementptr inbounds i8, i8* %338, i64 -1, !dbg !10971
  %340 = load i8, i8* %339, align 1, !dbg !10971, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10973
  %341 = trunc i8 %340 to i3, !dbg !10973
  switch i3 %341, label %363 [
    i3 0, label %342
    i3 1, label %345
    i3 2, label %349
    i3 3, label %354
    i3 -4, label %359
  ], !dbg !10973

; <label>:342:                                    ; preds = %334
  %343 = lshr i8 %340, 3, !dbg !10974
  %344 = zext i8 %343 to i64, !dbg !10974
  br label %363, !dbg !10975

; <label>:345:                                    ; preds = %334
  %346 = getelementptr inbounds i8, i8* %338, i64 -3, !dbg !10976
  %347 = load i8, i8* %346, align 1, !dbg !10977, !tbaa !745
  %348 = zext i8 %347 to i64, !dbg !10976
  br label %363, !dbg !10978

; <label>:349:                                    ; preds = %334
  %350 = getelementptr inbounds i8, i8* %338, i64 -5, !dbg !10979
  %351 = bitcast i8* %350 to i16*, !dbg !10980
  %352 = load i16, i16* %351, align 1, !dbg !10980, !tbaa !1503
  %353 = zext i16 %352 to i64, !dbg !10979
  br label %363, !dbg !10981

; <label>:354:                                    ; preds = %334
  %355 = getelementptr inbounds i8, i8* %338, i64 -9, !dbg !10982
  %356 = bitcast i8* %355 to i32*, !dbg !10983
  %357 = load i32, i32* %356, align 1, !dbg !10983, !tbaa !708
  %358 = zext i32 %357 to i64, !dbg !10982
  br label %363, !dbg !10984

; <label>:359:                                    ; preds = %334
  %360 = getelementptr inbounds i8, i8* %338, i64 -17, !dbg !10985
  %361 = bitcast i8* %360 to i64*, !dbg !10986
  %362 = load i64, i64* %361, align 1, !dbg !10986, !tbaa !1510
  br label %363, !dbg !10987

; <label>:363:                                    ; preds = %334, %342, %345, %349, %354, %359
  %364 = phi i64 [ %362, %359 ], [ %358, %354 ], [ %353, %349 ], [ %348, %345 ], [ %344, %342 ], [ 0, %334 ], !dbg !10988
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10989
  %365 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* %338, i64 %364) #6, !dbg !10968
  %366 = icmp eq i64 %365, 0, !dbg !10968
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10968
  br i1 %366, label %367, label %368, !dbg !10968

; <label>:367:                                    ; preds = %363
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5210) #6, !dbg !10968
  call void @_exit(i32 1) #8, !dbg !10968
  unreachable

; <label>:368:                                    ; preds = %363
  %369 = load i8*, i8** %177, align 8, !dbg !10990, !tbaa !745
  call void @sdsfree(i8* %369) #6, !dbg !10991
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10992
  br i1 %174, label %370, label %374, !dbg !10992

; <label>:370:                                    ; preds = %368
  %371 = call i64 @rioWriteBulkString(%struct._rio* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i64 0, i64 0), i64 7) #6, !dbg !10993
  %372 = icmp eq i64 %371, 0, !dbg !10993
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10993
  br i1 %372, label %373, label %374, !dbg !10993

; <label>:373:                                    ; preds = %370
  call void @_serverAssertWithInfo(%struct.client* nonnull %0, %struct.redisObject* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.262, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5216) #6, !dbg !10993
  call void @_exit(i32 1) #8, !dbg !10993
  unreachable

; <label>:374:                                    ; preds = %368, %370, %258
  %375 = phi i32 [ %252, %258 ], [ %269, %370 ], [ %269, %368 ], !dbg !10928
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10995
  %376 = add nuw nsw i64 %251, 1, !dbg !10997
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10998
  %377 = icmp slt i64 %376, %249, !dbg !10908
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10909
  br i1 %377, label %250, label %378, !dbg !10909, !llvm.loop !10999

; <label>:378:                                    ; preds = %374, %246
  %379 = phi i32 [ 0, %246 ], [ %375, %374 ], !dbg !10906
  %380 = call i32* @__errno() #6, !dbg !11001
  store i32 0, i32* %380, align 4, !dbg !11002, !tbaa !708
  %381 = load i8*, i8** %172, align 8, !dbg !11003, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11007
  %382 = getelementptr inbounds i8, i8* %381, i64 -1
  %383 = getelementptr inbounds i8, i8* %381, i64 -3
  %384 = getelementptr inbounds i8, i8* %381, i64 -5
  %385 = bitcast i8* %384 to i16*
  %386 = getelementptr inbounds i8, i8* %381, i64 -9
  %387 = bitcast i8* %386 to i32*
  %388 = getelementptr inbounds i8, i8* %381, i64 -17
  %389 = bitcast i8* %388 to i64*
  %390 = getelementptr inbounds %struct.migrateCachedSocket, %struct.migrateCachedSocket* %193, i64 0, i32 0
  br label %391, !dbg !11007

; <label>:391:                                    ; preds = %423, %378
  %392 = phi i64 [ 0, %378 ], [ %426, %423 ], !dbg !11008
  %393 = load i8, i8* %382, align 1, !dbg !11012, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11014
  %394 = trunc i8 %393 to i3, !dbg !11014
  switch i3 %394, label %409 [
    i3 0, label %395
    i3 1, label %398
    i3 2, label %401
    i3 3, label %404
    i3 -4, label %407
  ], !dbg !11014

; <label>:395:                                    ; preds = %391
  %396 = lshr i8 %393, 3, !dbg !11015
  %397 = zext i8 %396 to i64, !dbg !11015
  br label %409, !dbg !11016

; <label>:398:                                    ; preds = %391
  %399 = load i8, i8* %383, align 1, !dbg !11017, !tbaa !745
  %400 = zext i8 %399 to i64, !dbg !11018
  br label %409, !dbg !11019

; <label>:401:                                    ; preds = %391
  %402 = load i16, i16* %385, align 1, !dbg !11020, !tbaa !1503
  %403 = zext i16 %402 to i64, !dbg !11021
  br label %409, !dbg !11022

; <label>:404:                                    ; preds = %391
  %405 = load i32, i32* %387, align 1, !dbg !11023, !tbaa !708
  %406 = zext i32 %405 to i64, !dbg !11024
  br label %409, !dbg !11025

; <label>:407:                                    ; preds = %391
  %408 = load i64, i64* %389, align 1, !dbg !11026, !tbaa !1510
  br label %409, !dbg !11027

; <label>:409:                                    ; preds = %391, %395, %398, %401, %404, %407
  %410 = phi i64 [ %408, %407 ], [ %406, %404 ], [ %403, %401 ], [ %400, %398 ], [ %397, %395 ], [ 0, %391 ], !dbg !11028
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11029
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11030
  %411 = sub i64 %410, %392, !dbg !11031
  %412 = icmp eq i64 %411, 0, !dbg !11033
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11007
  br i1 %412, label %428, label %413, !dbg !11007

; <label>:413:                                    ; preds = %409
  %414 = icmp ult i64 %411, 65536, !dbg !11034
  %415 = select i1 %414, i64 %411, i64 65536, !dbg !11034
  %416 = load i32, i32* %390, align 8, !dbg !11035, !tbaa !10490
  %417 = getelementptr inbounds i8, i8* %381, i64 %392, !dbg !11036
  %418 = load i64, i64* %2, align 8, !dbg !11037, !tbaa !1510
  %419 = call i64 @syncWrite(i32 %416, i8* %417, i64 %415, i64 %418) #6, !dbg !11038
  %420 = trunc i64 %419 to i32, !dbg !11038
  %421 = trunc i64 %415 to i32, !dbg !11039
  %422 = icmp eq i32 %420, %421, !dbg !11041
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11042
  br i1 %422, label %423, label %427, !dbg !11042

; <label>:423:                                    ; preds = %413
  %424 = shl i64 %419, 32, !dbg !11043
  %425 = ashr exact i64 %424, 32, !dbg !11043
  %426 = add i64 %425, %392, !dbg !11044
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11007
  br label %391, !dbg !11007, !llvm.loop !11045

; <label>:427:                                    ; preds = %413
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11047
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %549

; <label>:428:                                    ; preds = %409
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11049
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11053
  br i1 %169, label %429, label %434, !dbg !11053

; <label>:429:                                    ; preds = %428
  %430 = load i32, i32* %390, align 8, !dbg !11055, !tbaa !10490
  %431 = load i64, i64* %2, align 8, !dbg !11056, !tbaa !1510
  %432 = call i64 @syncReadLine(i32 %430, i8* nonnull %185, i64 1024, i64 %431) #6, !dbg !11057
  %433 = icmp slt i64 %432, 1, !dbg !11058
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11059
  br i1 %433, label %549, label %434, !dbg !11059

; <label>:434:                                    ; preds = %429, %428
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11060
  br i1 %232, label %435, label %440, !dbg !11060

; <label>:435:                                    ; preds = %434
  %436 = load i32, i32* %390, align 8, !dbg !11062, !tbaa !10490
  %437 = load i64, i64* %2, align 8, !dbg !11063, !tbaa !1510
  %438 = call i64 @syncReadLine(i32 %436, i8* nonnull %186, i64 1024, i64 %437) #6, !dbg !11064
  %439 = icmp slt i64 %438, 1, !dbg !11065
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11066
  br i1 %439, label %549, label %440, !dbg !11066

; <label>:440:                                    ; preds = %435, %434
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11070
  br i1 %187, label %447, label %441, !dbg !11070

; <label>:441:                                    ; preds = %440
  %442 = add nsw i32 %379, 1, !dbg !11071
  %443 = sext i32 %442 to i64, !dbg !11073
  %444 = shl nsw i64 %443, 3, !dbg !11074
  %445 = call i8* @zmalloc(i64 %444) #6, !dbg !11075
  %446 = bitcast i8* %445 to %struct.redisObject**, !dbg !11075
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11076
  br label %447, !dbg !11076

; <label>:447:                                    ; preds = %441, %440
  %448 = phi i8* [ null, %440 ], [ %445, %441 ], !dbg !11077
  %449 = phi %struct.redisObject** [ null, %440 ], [ %446, %441 ], !dbg !11077
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11078
  %450 = icmp sgt i32 %379, 0, !dbg !11079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11080
  br i1 %450, label %451, label %510, !dbg !11080

; <label>:451:                                    ; preds = %447
  %452 = sext i32 %379 to i64, !dbg !11081
  br label %453, !dbg !11081

; <label>:453:                                    ; preds = %451, %503
  %454 = phi i64 [ 0, %451 ], [ %506, %503 ]
  %455 = phi i32 [ 1, %451 ], [ %505, %503 ]
  %456 = phi i32 [ 0, %451 ], [ %504, %503 ]
  %457 = load i32, i32* %390, align 8, !dbg !11081, !tbaa !10490
  %458 = load i64, i64* %2, align 8, !dbg !11083, !tbaa !1510
  %459 = call i64 @syncReadLine(i32 %457, i8* nonnull %188, i64 1024, i64 %458) #6, !dbg !11084
  %460 = icmp slt i64 %459, 1, !dbg !11085
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11086
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11087
  br i1 %460, label %508, label %461, !dbg !11086

; <label>:461:                                    ; preds = %453
  br i1 %169, label %462, label %465, !dbg !11088

; <label>:462:                                    ; preds = %461
  %463 = load i8, i8* %185, align 16, !dbg !11089, !tbaa !745
  %464 = icmp eq i8 %463, 45, !dbg !11090
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11091
  br i1 %464, label %472, label %465, !dbg !11091

; <label>:465:                                    ; preds = %462, %461
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11092
  br i1 %232, label %466, label %469, !dbg !11092

; <label>:466:                                    ; preds = %465
  %467 = load i8, i8* %186, align 16, !dbg !11093, !tbaa !745
  %468 = icmp eq i8 %467, 45, !dbg !11094
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11095
  br i1 %468, label %472, label %469, !dbg !11095

; <label>:469:                                    ; preds = %466, %465
  %470 = load i8, i8* %188, align 16, !dbg !11096, !tbaa !745
  %471 = icmp eq i8 %470, 45, !dbg !11097
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11098
  br i1 %471, label %472, label %486, !dbg !11098

; <label>:472:                                    ; preds = %469, %466, %462
  %473 = icmp eq i32 %456, 0, !dbg !11099
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11100
  br i1 %473, label %474, label %503, !dbg !11100

; <label>:474:                                    ; preds = %472
  store i64 -1, i64* %229, align 8, !dbg !11101, !tbaa !10529
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11102
  br i1 %169, label %475, label %478, !dbg !11102

; <label>:475:                                    ; preds = %474
  %476 = load i8, i8* %185, align 16, !dbg !11104, !tbaa !745
  %477 = icmp eq i8 %476, 45, !dbg !11105
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11106
  br i1 %477, label %483, label %478, !dbg !11106

; <label>:478:                                    ; preds = %475, %474
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11107
  br i1 %232, label %479, label %482, !dbg !11107

; <label>:479:                                    ; preds = %478
  %480 = load i8, i8* %186, align 16, !dbg !11109, !tbaa !745
  %481 = icmp eq i8 %480, 45, !dbg !11110
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11111
  br i1 %481, label %483, label %482, !dbg !11111

; <label>:482:                                    ; preds = %479, %478
  br label %483

; <label>:483:                                    ; preds = %479, %475, %482
  %484 = phi i8* [ %188, %482 ], [ %185, %475 ], [ %186, %479 ], !dbg !11113
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %485 = getelementptr inbounds i8, i8* %484, i64 1, !dbg !11114
  call void (%struct.client*, i8*, ...) @addReplyErrorFormat(%struct.client* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.263, i64 0, i64 0), i8* nonnull %485) #6, !dbg !11115
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11116
  br label %503, !dbg !11116

; <label>:486:                                    ; preds = %469
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11117
  br i1 %187, label %503, label %487, !dbg !11117

; <label>:487:                                    ; preds = %486
  %488 = load %struct.redisDb*, %struct.redisDb** %173, align 8, !dbg !11119, !tbaa !9963
  %489 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %127, i64 %454, !dbg !11122
  %490 = load %struct.redisObject*, %struct.redisObject** %489, align 8, !dbg !11122, !tbaa !760
  %491 = call i32 @dbDelete(%struct.redisDb* %488, %struct.redisObject* %490) #6, !dbg !11123
  %492 = load %struct.redisDb*, %struct.redisDb** %173, align 8, !dbg !11124, !tbaa !9963
  %493 = load %struct.redisObject*, %struct.redisObject** %489, align 8, !dbg !11125, !tbaa !760
  call void @signalModifiedKey(%struct.redisDb* %492, %struct.redisObject* %493) #6, !dbg !11126
  %494 = load i64, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !11127, !tbaa !10391
  %495 = add nsw i64 %494, 1, !dbg !11127
  store i64 %495, i64* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 152), align 8, !dbg !11127, !tbaa !10391
  %496 = bitcast %struct.redisObject** %489 to i64*, !dbg !11128
  %497 = load i64, i64* %496, align 8, !dbg !11128, !tbaa !760
  %498 = add nsw i32 %455, 1, !dbg !11129
  %499 = sext i32 %455 to i64, !dbg !11130
  %500 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %449, i64 %499, !dbg !11130
  %501 = bitcast %struct.redisObject** %500 to i64*, !dbg !11131
  store i64 %497, i64* %501, align 8, !dbg !11131, !tbaa !760
  %502 = load %struct.redisObject*, %struct.redisObject** %489, align 8, !dbg !11132, !tbaa !760
  call void @incrRefCount(%struct.redisObject* %502) #6, !dbg !11133
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11134
  br label %503, !dbg !11134

; <label>:503:                                    ; preds = %472, %483, %487, %486
  %504 = phi i32 [ %456, %472 ], [ 1, %483 ], [ %456, %486 ], [ %456, %487 ], !dbg !10787
  %505 = phi i32 [ %455, %472 ], [ %455, %483 ], [ %455, %486 ], [ %498, %487 ], !dbg !11135
  %506 = add nuw nsw i64 %454, 1, !dbg !11136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11137
  %507 = icmp slt i64 %506, %452, !dbg !11079
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11080
  br i1 %507, label %453, label %510, !dbg !11080, !llvm.loop !11138

; <label>:508:                                    ; preds = %453
  %509 = trunc i64 %454 to i32, !dbg !11086
  br label %510, !dbg !11140

; <label>:510:                                    ; preds = %503, %508, %447
  %511 = phi i32 [ 0, %447 ], [ %509, %508 ], [ 1, %503 ], !dbg !11142
  %512 = phi i32 [ 0, %447 ], [ %456, %508 ], [ %504, %503 ], !dbg !11067
  %513 = phi i32 [ 1, %447 ], [ %455, %508 ], [ %505, %503 ], !dbg !11069
  %514 = phi i1 [ false, %447 ], [ true, %508 ], [ false, %503 ]
  %515 = icmp eq i32 %512, 0, !dbg !11140
  %516 = and i1 %515, %514, !dbg !11143
  %517 = icmp eq i32 %511, 0, !dbg !11144
  %518 = and i1 %517, %516, !dbg !11143
  %519 = icmp ne i32 %196, 0, !dbg !11145
  %520 = and i1 %519, %518, !dbg !11143
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11143
  br i1 %520, label %521, label %525, !dbg !11143

; <label>:521:                                    ; preds = %510
  %522 = call i32* @__errno() #6, !dbg !11146
  %523 = load i32, i32* %522, align 4, !dbg !11146, !tbaa !708
  %524 = icmp eq i32 %523, 116, !dbg !11147
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11148
  br i1 %524, label %525, label %549, !dbg !11148

; <label>:525:                                    ; preds = %521, %510
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11149
  br i1 %514, label %526, label %532, !dbg !11149

; <label>:526:                                    ; preds = %525
  %527 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !11150, !tbaa !8644
  %528 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %527, i64 1, !dbg !11152
  %529 = load %struct.redisObject*, %struct.redisObject** %528, align 8, !dbg !11152, !tbaa !760
  %530 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %527, i64 2, !dbg !11153
  %531 = load %struct.redisObject*, %struct.redisObject** %530, align 8, !dbg !11153, !tbaa !760
  call void @migrateCloseSocket(%struct.redisObject* %529, %struct.redisObject* %531) #10, !dbg !11154
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11154
  br label %532, !dbg !11154

; <label>:532:                                    ; preds = %526, %525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11155
  br i1 %187, label %540, label %533, !dbg !11155

; <label>:533:                                    ; preds = %532
  %534 = icmp sgt i32 %513, 1, !dbg !11156
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11160
  br i1 %534, label %535, label %537, !dbg !11160

; <label>:535:                                    ; preds = %533
  %536 = call %struct.redisObject* @createStringObject(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.264, i64 0, i64 0), i64 3) #6, !dbg !11161
  store %struct.redisObject* %536, %struct.redisObject** %449, align 8, !dbg !11163, !tbaa !760
  call void @replaceClientCommandVector(%struct.client* %0, i32 %513, %struct.redisObject** %449) #6, !dbg !11164
  br label %538, !dbg !11165

; <label>:537:                                    ; preds = %533
  call void @zfree(i8* %448) #6, !dbg !11166
  br label %538

; <label>:538:                                    ; preds = %537, %535
  %539 = phi i32 [ 1, %535 ], [ %195, %537 ], !dbg !10787
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11168
  br label %540, !dbg !11168

; <label>:540:                                    ; preds = %538, %532
  %541 = phi i8* [ %448, %532 ], [ null, %538 ], !dbg !11169
  %542 = phi i32 [ %195, %532 ], [ %539, %538 ], !dbg !11170
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11171
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10787
  br i1 %516, label %549, label %543, !dbg !11171

; <label>:543:                                    ; preds = %540
  br i1 %515, label %544, label %547, !dbg !11173

; <label>:544:                                    ; preds = %543
  %545 = load i64, i64* %3, align 8, !dbg !11174, !tbaa !1510
  store i64 %545, i64* %229, align 8, !dbg !11177, !tbaa !10529
  %546 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11178, !tbaa !8716
  call void @addReply(%struct.client* %0, %struct.redisObject* %546) #6, !dbg !11179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11180
  br label %547, !dbg !11180

; <label>:547:                                    ; preds = %543, %544
  %548 = load i8*, i8** %172, align 8, !dbg !11181, !tbaa !745
  call void @sdsfree(i8* %548) #6, !dbg !11182
  call void @zfree(i8* %124) #6, !dbg !11183
  call void @zfree(i8* %126) #6, !dbg !11184
  call void @zfree(i8* %541) #6, !dbg !11185
  br label %582, !dbg !11186

; <label>:549:                                    ; preds = %540, %427, %521, %435, %429
  %550 = phi i32 [ 1, %427 ], [ 0, %429 ], [ 0, %435 ], [ 0, %521 ], [ 0, %540 ]
  %551 = phi i8* [ null, %427 ], [ null, %429 ], [ null, %435 ], [ %448, %521 ], [ %541, %540 ], !dbg !10708
  %552 = phi i32 [ %196, %427 ], [ %196, %429 ], [ %196, %435 ], [ %196, %521 ], [ 0, %540 ], !dbg !11187
  %553 = phi i32 [ %195, %427 ], [ %195, %429 ], [ %195, %435 ], [ %195, %521 ], [ %542, %540 ], !dbg !10712
  %554 = load i8*, i8** %172, align 8, !dbg !11189, !tbaa !745
  call void @sdsfree(i8* %554) #6, !dbg !11190
  %555 = icmp eq i32 %553, 0, !dbg !11191
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11193
  br i1 %555, label %556, label %562, !dbg !11193

; <label>:556:                                    ; preds = %549
  %557 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !11194, !tbaa !8644
  %558 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %557, i64 1, !dbg !11195
  %559 = load %struct.redisObject*, %struct.redisObject** %558, align 8, !dbg !11195, !tbaa !760
  %560 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %557, i64 2, !dbg !11196
  %561 = load %struct.redisObject*, %struct.redisObject** %560, align 8, !dbg !11196, !tbaa !760
  call void @migrateCloseSocket(%struct.redisObject* %559, %struct.redisObject* %561) #10, !dbg !11197
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11197
  br label %562, !dbg !11197

; <label>:562:                                    ; preds = %549, %556
  call void @zfree(i8* %551) #6, !dbg !11198
  %563 = call i32* @__errno() #6, !dbg !11199
  %564 = load i32, i32* %563, align 4, !dbg !11199, !tbaa !708
  %565 = icmp ne i32 %564, 116, !dbg !11201
  %566 = icmp ne i32 %552, 0, !dbg !11202
  %567 = and i1 %566, %565, !dbg !11203
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11203
  br i1 %567, label %568, label %577, !dbg !11203

; <label>:568:                                    ; preds = %562
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11204
  %569 = load %struct.redisObject**, %struct.redisObject*** %16, align 8, !dbg !10848, !tbaa !8644
  %570 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %569, i64 1, !dbg !10849
  %571 = load %struct.redisObject*, %struct.redisObject** %570, align 8, !dbg !10849, !tbaa !760
  %572 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %569, i64 2, !dbg !10850
  %573 = load %struct.redisObject*, %struct.redisObject** %572, align 8, !dbg !10850, !tbaa !760
  %574 = load i64, i64* %2, align 8, !dbg !10851, !tbaa !1510
  %575 = call %struct.migrateCachedSocket* @migrateGetSocket(%struct.client* %0, %struct.redisObject* %571, %struct.redisObject* %573, i64 %574) #10, !dbg !10852
  %576 = icmp eq %struct.migrateCachedSocket* %575, null, !dbg !10854
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !10856
  br i1 %576, label %191, label %192, !dbg !10856

; <label>:577:                                    ; preds = %562
  call void @zfree(i8* %124) #6, !dbg !11206
  call void @zfree(i8* %126) #6, !dbg !11207
  %578 = call i8* @sdsempty() #6, !dbg !11208
  %579 = icmp eq i32 %550, 0, !dbg !11209
  %580 = select i1 %579, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.267, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.266, i64 0, i64 0), !dbg !11209
  %581 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %578, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.265, i64 0, i64 0), i8* %580) #6, !dbg !11210
  call void @addReplySds(%struct.client* %0, i8* %581) #6, !dbg !11211
  br label %582, !dbg !11212

; <label>:582:                                    ; preds = %577, %547, %191, %189
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11213
  br label %583

; <label>:583:                                    ; preds = %101, %111, %88, %582
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %12) #7, !dbg !11214
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %11) #7, !dbg !11214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7, !dbg !11214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7, !dbg !11214
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11214
  ret void, !dbg !11214
}

; Function Attrs: noredzone
declare dso_local i32 @getLongFromObjectOrReply(%struct.client*, %struct.redisObject*, i64*, i8*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkCount(%struct._rio*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkString(%struct._rio*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @rioWriteBulkLongLong(%struct._rio*, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @getExpire(%struct.redisDb*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @syncWrite(i32, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i64 @syncReadLine(i32, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @incrRefCount(%struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @replaceClientCommandVector(%struct.client*, i32, %struct.redisObject**) local_unnamed_addr #3

; Function Attrs: noredzone nounwind
define dso_local void @askingCommand(%struct.client*) local_unnamed_addr #0 !dbg !11215 {
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !11219, !tbaa !8630
  %3 = icmp eq i32 %2, 0, !dbg !11221
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11222
  br i1 %3, label %4, label %5, !dbg !11222

; <label>:4:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.127, i64 0, i64 0)) #6, !dbg !11223
  br label %10, !dbg !11225

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11226
  %7 = load i32, i32* %6, align 8, !dbg !11227, !tbaa !11228
  %8 = or i32 %7, 512, !dbg !11227
  store i32 %8, i32* %6, align 8, !dbg !11227, !tbaa !11228
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11229, !tbaa !8716
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %9) #6, !dbg !11230
  br label %10, !dbg !11231

; <label>:10:                                     ; preds = %5, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11232
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11231
  ret void, !dbg !11231
}

; Function Attrs: noredzone nounwind
define dso_local void @readonlyCommand(%struct.client*) local_unnamed_addr #0 !dbg !11233 {
  %2 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 258), align 4, !dbg !11237, !tbaa !8630
  %3 = icmp eq i32 %2, 0, !dbg !11239
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11240
  br i1 %3, label %4, label %5, !dbg !11240

; <label>:4:                                      ; preds = %1
  tail call void @addReplyError(%struct.client* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.127, i64 0, i64 0)) #6, !dbg !11241
  br label %10, !dbg !11243

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11244
  %7 = load i32, i32* %6, align 8, !dbg !11245, !tbaa !11228
  %8 = or i32 %7, 131072, !dbg !11245
  store i32 %8, i32* %6, align 8, !dbg !11245, !tbaa !11228
  %9 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11246, !tbaa !8716
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %9) #6, !dbg !11247
  br label %10, !dbg !11248

; <label>:10:                                     ; preds = %5, %4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11249
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11248
  ret void, !dbg !11248
}

; Function Attrs: noredzone nounwind
define dso_local void @readwriteCommand(%struct.client*) local_unnamed_addr #0 !dbg !11250 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11254
  %3 = load i32, i32* %2, align 8, !dbg !11255, !tbaa !11228
  %4 = and i32 %3, -131073, !dbg !11255
  store i32 %4, i32* %2, align 8, !dbg !11255, !tbaa !11228
  %5 = load %struct.redisObject*, %struct.redisObject** getelementptr inbounds (%struct.sharedObjectsStruct, %struct.sharedObjectsStruct* @shared, i64 0, i32 1), align 8, !dbg !11256, !tbaa !8716
  tail call void @addReply(%struct.client* %0, %struct.redisObject* %5) #6, !dbg !11257
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11258
  ret void, !dbg !11258
}

; Function Attrs: noredzone nounwind
define dso_local %struct.clusterNode* @getNodeByQuery(%struct.client* nocapture readonly, %struct.redisCommand*, %struct.redisObject**, i32, i32*, i32*) local_unnamed_addr #0 !dbg !11259 {
  %7 = alloca %struct.multiState, align 8
  %8 = alloca %struct.multiCmd, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %struct.multiState* %7 to i8*, !dbg !11304
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7, !dbg !11304
  %11 = bitcast %struct.multiCmd* %8 to i8*, !dbg !11305
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7, !dbg !11305
  %12 = load i32, i32* getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 269), align 8, !dbg !11310, !tbaa !4165
  %13 = and i32 %12, 4, !dbg !11312
  %14 = icmp eq i32 %13, 0, !dbg !11312
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11313
  br i1 %14, label %17, label %15, !dbg !11313

; <label>:15:                                     ; preds = %6
  %16 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11314, !tbaa !760
  br label %254, !dbg !11315

; <label>:17:                                     ; preds = %6
  %18 = icmp ne i32* %5, null, !dbg !11316
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11318
  br i1 %18, label %19, label %20, !dbg !11318

; <label>:19:                                     ; preds = %17
  store i32 0, i32* %5, align 4, !dbg !11319, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11320
  br label %20, !dbg !11320

; <label>:20:                                     ; preds = %19, %17
  %21 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 1, !dbg !11321
  %22 = load void (%struct.client*)*, void (%struct.client*)** %21, align 8, !dbg !11321, !tbaa !11323
  %23 = icmp eq void (%struct.client*)* %22, @execCommand, !dbg !11325
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11326
  br i1 %23, label %24, label %31, !dbg !11326

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11327
  %26 = load i32, i32* %25, align 8, !dbg !11327, !tbaa !11228
  %27 = and i32 %26, 8, !dbg !11330
  %28 = icmp eq i32 %27, 0, !dbg !11330
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11331
  br i1 %28, label %29, label %37, !dbg !11331

; <label>:29:                                     ; preds = %24
  %30 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11332, !tbaa !760
  br label %254, !dbg !11333

; <label>:31:                                     ; preds = %20
  %32 = getelementptr inbounds %struct.multiState, %struct.multiState* %7, i64 0, i32 0, !dbg !11335
  store %struct.multiCmd* %8, %struct.multiCmd** %32, align 8, !dbg !11337, !tbaa !11338
  %33 = getelementptr inbounds %struct.multiState, %struct.multiState* %7, i64 0, i32 1, !dbg !11339
  store i32 1, i32* %33, align 8, !dbg !11340, !tbaa !11341
  %34 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %8, i64 0, i32 0, !dbg !11342
  store %struct.redisObject** %2, %struct.redisObject*** %34, align 8, !dbg !11343, !tbaa !11344
  %35 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %8, i64 0, i32 1, !dbg !11346
  store i32 %3, i32* %35, align 8, !dbg !11347, !tbaa !11348
  %36 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %8, i64 0, i32 2, !dbg !11349
  store %struct.redisCommand* %1, %struct.redisCommand** %36, align 8, !dbg !11350, !tbaa !11351
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11353
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11354
  br label %43, !dbg !11354

; <label>:37:                                     ; preds = %24
  %38 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 38, !dbg !11355
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11356
  %39 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 38, i32 1
  %40 = load i32, i32* %39, align 8, !dbg !11357, !tbaa !11341
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11353
  %41 = icmp sgt i32 %40, 0, !dbg !11358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11354
  br i1 %41, label %43, label %42, !dbg !11354

; <label>:42:                                     ; preds = %37
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11359
  br label %177, !dbg !11359

; <label>:43:                                     ; preds = %31, %37
  %44 = phi %struct.multiState* [ %7, %31 ], [ %38, %37 ]
  %45 = phi i32* [ %33, %31 ], [ %39, %37 ]
  %46 = bitcast i32* %9 to i8*
  %47 = getelementptr inbounds %struct.multiState, %struct.multiState* %44, i64 0, i32 0
  br label %48, !dbg !11354

; <label>:48:                                     ; preds = %43, %163
  %49 = phi i64 [ 0, %43 ], [ %171, %163 ]
  %50 = phi %struct.clusterNode* [ null, %43 ], [ %170, %163 ]
  %51 = phi %struct.redisObject* [ null, %43 ], [ %169, %163 ]
  %52 = phi i32 [ 0, %43 ], [ %168, %163 ]
  %53 = phi i32 [ 0, %43 ], [ %167, %163 ]
  %54 = phi i32 [ 0, %43 ], [ %166, %163 ]
  %55 = phi i32 [ 0, %43 ], [ %165, %163 ]
  %56 = phi i32 [ 0, %43 ], [ %164, %163 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #7, !dbg !11360
  %57 = load %struct.multiCmd*, %struct.multiCmd** %47, align 8, !dbg !11361, !tbaa !11338
  %58 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %57, i64 %49, i32 2, !dbg !11362
  %59 = load %struct.redisCommand*, %struct.redisCommand** %58, align 8, !dbg !11362, !tbaa !11351
  %60 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %57, i64 %49, i32 1, !dbg !11364
  %61 = load i32, i32* %60, align 8, !dbg !11364, !tbaa !11348
  %62 = getelementptr inbounds %struct.multiCmd, %struct.multiCmd* %57, i64 %49, i32 0, !dbg !11366
  %63 = load %struct.redisObject**, %struct.redisObject*** %62, align 8, !dbg !11366, !tbaa !11344
  %64 = call i32* @getKeysFromCommand(%struct.redisCommand* %59, %struct.redisObject** %63, i32 %61, i32* nonnull %9) #6, !dbg !11369
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11372
  %65 = load i32, i32* %9, align 4, !dbg !11373, !tbaa !708
  %66 = icmp sgt i32 %65, 0, !dbg !11374
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11375
  br i1 %66, label %67, label %163, !dbg !11375

; <label>:67:                                     ; preds = %48, %156
  %68 = phi i64 [ %158, %156 ], [ 0, %48 ]
  %69 = phi %struct.clusterNode* [ %147, %156 ], [ %50, %48 ]
  %70 = phi %struct.redisObject* [ %146, %156 ], [ %51, %48 ]
  %71 = phi i32 [ %145, %156 ], [ %52, %48 ]
  %72 = phi i32 [ %157, %156 ], [ %53, %48 ]
  %73 = phi i32 [ %144, %156 ], [ %54, %48 ]
  %74 = phi i32 [ %143, %156 ], [ %55, %48 ]
  %75 = phi i32 [ %142, %156 ], [ %56, %48 ]
  %76 = getelementptr inbounds i32, i32* %64, i64 %68, !dbg !11376
  %77 = load i32, i32* %76, align 4, !dbg !11376, !tbaa !708
  %78 = sext i32 %77 to i64, !dbg !11377
  %79 = getelementptr inbounds %struct.redisObject*, %struct.redisObject** %63, i64 %78, !dbg !11377
  %80 = load %struct.redisObject*, %struct.redisObject** %79, align 8, !dbg !11377, !tbaa !760
  %81 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %80, i64 0, i32 2, !dbg !11379
  %82 = load i8*, i8** %81, align 8, !dbg !11379, !tbaa !6254
  %83 = getelementptr inbounds i8, i8* %82, i64 -1, !dbg !11382
  %84 = load i8, i8* %83, align 1, !dbg !11382, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11384
  %85 = trunc i8 %84 to i3, !dbg !11384
  switch i3 %85, label %107 [
    i3 0, label %86
    i3 1, label %89
    i3 2, label %93
    i3 3, label %98
    i3 -4, label %103
  ], !dbg !11384

; <label>:86:                                     ; preds = %67
  %87 = lshr i8 %84, 3, !dbg !11385
  %88 = zext i8 %87 to i64, !dbg !11385
  br label %107, !dbg !11386

; <label>:89:                                     ; preds = %67
  %90 = getelementptr inbounds i8, i8* %82, i64 -3, !dbg !11387
  %91 = load i8, i8* %90, align 1, !dbg !11388, !tbaa !745
  %92 = zext i8 %91 to i64, !dbg !11387
  br label %107, !dbg !11389

; <label>:93:                                     ; preds = %67
  %94 = getelementptr inbounds i8, i8* %82, i64 -5, !dbg !11390
  %95 = bitcast i8* %94 to i16*, !dbg !11391
  %96 = load i16, i16* %95, align 1, !dbg !11391, !tbaa !1503
  %97 = zext i16 %96 to i64, !dbg !11390
  br label %107, !dbg !11392

; <label>:98:                                     ; preds = %67
  %99 = getelementptr inbounds i8, i8* %82, i64 -9, !dbg !11393
  %100 = bitcast i8* %99 to i32*, !dbg !11394
  %101 = load i32, i32* %100, align 1, !dbg !11394, !tbaa !708
  %102 = zext i32 %101 to i64, !dbg !11393
  br label %107, !dbg !11395

; <label>:103:                                    ; preds = %67
  %104 = getelementptr inbounds i8, i8* %82, i64 -17, !dbg !11396
  %105 = bitcast i8* %104 to i64*, !dbg !11397
  %106 = load i64, i64* %105, align 1, !dbg !11397, !tbaa !1510
  br label %107, !dbg !11398

; <label>:107:                                    ; preds = %67, %86, %89, %93, %98, %103
  %108 = phi i64 [ %106, %103 ], [ %102, %98 ], [ %97, %93 ], [ %92, %89 ], [ %88, %86 ], [ 0, %67 ], !dbg !11399
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11400
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11401
  %109 = trunc i64 %108 to i32, !dbg !11402
  %110 = call i32 @keyHashSlot(i8* %82, i32 %109) #10, !dbg !11403
  %111 = icmp eq %struct.redisObject* %70, null, !dbg !11405
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11407
  br i1 %111, label %112, label %133, !dbg !11407

; <label>:112:                                    ; preds = %107
  %113 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11408, !tbaa !788
  %114 = sext i32 %110 to i64, !dbg !11410
  %115 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %113, i64 0, i32 8, i64 %114, !dbg !11410
  %116 = load %struct.clusterNode*, %struct.clusterNode** %115, align 8, !dbg !11410, !tbaa !760
  %117 = icmp eq %struct.clusterNode* %116, null, !dbg !11411
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11413
  br i1 %117, label %118, label %120, !dbg !11413

; <label>:118:                                    ; preds = %112
  call void @getKeysFreeResult(i32* nonnull %64) #6, !dbg !11414
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11416
  br i1 %18, label %119, label %162, !dbg !11416

; <label>:119:                                    ; preds = %118
  store i32 6, i32* %5, align 4, !dbg !11417, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11419
  br label %162, !dbg !11419

; <label>:120:                                    ; preds = %112
  %121 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11420, !tbaa !760
  %122 = icmp eq %struct.clusterNode* %116, %121, !dbg !11422
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11423
  br i1 %122, label %123, label %128, !dbg !11423

; <label>:123:                                    ; preds = %120
  %124 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %113, i64 0, i32 6, i64 %114, !dbg !11424
  %125 = load %struct.clusterNode*, %struct.clusterNode** %124, align 8, !dbg !11424, !tbaa !760
  %126 = icmp eq %struct.clusterNode* %125, null, !dbg !11425
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11426
  br i1 %126, label %128, label %127, !dbg !11426

; <label>:127:                                    ; preds = %123
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11427
  br label %141, !dbg !11427

; <label>:128:                                    ; preds = %123, %120
  %129 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %113, i64 0, i32 7, i64 %114, !dbg !11429
  %130 = load %struct.clusterNode*, %struct.clusterNode** %129, align 8, !dbg !11429, !tbaa !760
  %131 = icmp eq %struct.clusterNode* %130, null, !dbg !11431
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11432
  br i1 %131, label %141, label %132, !dbg !11432

; <label>:132:                                    ; preds = %128
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11433
  br label %141, !dbg !11433

; <label>:133:                                    ; preds = %107
  %134 = call i32 @equalStringObjects(%struct.redisObject* nonnull %70, %struct.redisObject* %80) #6, !dbg !11435
  %135 = icmp eq i32 %134, 0, !dbg !11435
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11438
  br i1 %135, label %136, label %141, !dbg !11438

; <label>:136:                                    ; preds = %133
  %137 = icmp eq i32 %75, %110, !dbg !11439
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11442
  br i1 %137, label %140, label %138, !dbg !11442

; <label>:138:                                    ; preds = %136
  call void @getKeysFreeResult(i32* nonnull %64) #6, !dbg !11443
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11445
  br i1 %18, label %139, label %162, !dbg !11445

; <label>:139:                                    ; preds = %138
  store i32 1, i32* %5, align 4, !dbg !11446, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11448
  br label %162, !dbg !11448

; <label>:140:                                    ; preds = %136
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11449
  br label %141, !dbg !11449

; <label>:141:                                    ; preds = %128, %133, %140, %127, %132
  %142 = phi i32 [ %110, %127 ], [ %110, %132 ], [ %110, %128 ], [ %75, %133 ], [ %75, %140 ], !dbg !11450
  %143 = phi i32 [ 1, %127 ], [ %74, %132 ], [ %74, %128 ], [ %74, %133 ], [ %74, %140 ], !dbg !11450
  %144 = phi i32 [ %73, %127 ], [ 1, %132 ], [ %73, %128 ], [ %73, %133 ], [ %73, %140 ], !dbg !11450
  %145 = phi i32 [ %71, %127 ], [ %71, %132 ], [ %71, %128 ], [ %71, %133 ], [ 1, %140 ], !dbg !11451
  %146 = phi %struct.redisObject* [ %80, %127 ], [ %80, %132 ], [ %80, %128 ], [ %70, %133 ], [ %70, %140 ], !dbg !11450
  %147 = phi %struct.clusterNode* [ %116, %127 ], [ %116, %132 ], [ %116, %128 ], [ %69, %133 ], [ %69, %140 ], !dbg !11450
  %148 = or i32 %144, %143, !dbg !11453
  %149 = icmp eq i32 %148, 0, !dbg !11453
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11453
  br i1 %149, label %156, label %150, !dbg !11453

; <label>:150:                                    ; preds = %141
  %151 = load %struct.redisDb*, %struct.redisDb** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 7), align 8, !dbg !11455, !tbaa !8017
  %152 = call %struct.redisObject* @lookupKeyRead(%struct.redisDb* %151, %struct.redisObject* %80) #6, !dbg !11456
  %153 = icmp eq %struct.redisObject* %152, null, !dbg !11457
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11458
  br i1 %153, label %154, label %156, !dbg !11458

; <label>:154:                                    ; preds = %150
  %155 = add nsw i32 %72, 1, !dbg !11459
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11461
  br label %156, !dbg !11461

; <label>:156:                                    ; preds = %141, %154, %150
  %157 = phi i32 [ %155, %154 ], [ %72, %150 ], [ %72, %141 ], !dbg !11450
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11462
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %158 = add nuw nsw i64 %68, 1, !dbg !11463
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11464
  %159 = load i32, i32* %9, align 4, !dbg !11373, !tbaa !708
  %160 = sext i32 %159 to i64, !dbg !11374
  %161 = icmp slt i64 %158, %160, !dbg !11374
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11375
  br i1 %161, label %67, label %163, !dbg !11375, !llvm.loop !11465

; <label>:162:                                    ; preds = %138, %139, %118, %119
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11467
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #7, !dbg !11468
  br label %254

; <label>:163:                                    ; preds = %156, %48
  %164 = phi i32 [ %56, %48 ], [ %142, %156 ], !dbg !11469
  %165 = phi i32 [ %55, %48 ], [ %143, %156 ], !dbg !11307
  %166 = phi i32 [ %54, %48 ], [ %144, %156 ], !dbg !11308
  %167 = phi i32 [ %53, %48 ], [ %157, %156 ], !dbg !11309
  %168 = phi i32 [ %52, %48 ], [ %145, %156 ], !dbg !11303
  %169 = phi %struct.redisObject* [ %51, %48 ], [ %146, %156 ], !dbg !11469
  %170 = phi %struct.clusterNode* [ %50, %48 ], [ %147, %156 ], !dbg !11469
  call void @getKeysFreeResult(i32* %64) #6, !dbg !11470
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11468
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #7, !dbg !11468
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  %171 = add nuw nsw i64 %49, 1, !dbg !11471
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11472
  %172 = load i32, i32* %45, align 8, !dbg !11357, !tbaa !11341
  %173 = sext i32 %172 to i64, !dbg !11358
  %174 = icmp slt i64 %171, %173, !dbg !11358
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11354
  br i1 %174, label %48, label %175, !dbg !11354, !llvm.loop !11473

; <label>:175:                                    ; preds = %163
  %176 = icmp eq %struct.clusterNode* %170, null, !dbg !11475
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11359
  br i1 %176, label %177, label %179, !dbg !11359

; <label>:177:                                    ; preds = %42, %175
  %178 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11477, !tbaa !760
  br label %254, !dbg !11478

; <label>:179:                                    ; preds = %175
  %180 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11479, !tbaa !788
  %181 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %180, i64 0, i32 2, !dbg !11481
  %182 = load i32, i32* %181, align 8, !dbg !11481, !tbaa !1770
  %183 = icmp eq i32 %182, 0, !dbg !11482
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11483
  br i1 %183, label %186, label %184, !dbg !11483

; <label>:184:                                    ; preds = %179
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11484
  br i1 %18, label %185, label %254, !dbg !11484

; <label>:185:                                    ; preds = %184
  store i32 5, i32* %5, align 4, !dbg !11486, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11488
  br label %254, !dbg !11488

; <label>:186:                                    ; preds = %179
  %187 = icmp eq i32* %4, null, !dbg !11489
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11491
  br i1 %187, label %189, label %188, !dbg !11491

; <label>:188:                                    ; preds = %186
  store i32 %164, i32* %4, align 4, !dbg !11492, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11493
  br label %189, !dbg !11493

; <label>:189:                                    ; preds = %186, %188
  %190 = icmp ne i32 %165, 0, !dbg !11494
  %191 = icmp eq i32 %166, 0, !dbg !11496
  %192 = or i32 %166, %165, !dbg !11497
  %193 = icmp eq i32 %192, 0, !dbg !11497
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11497
  br i1 %193, label %199, label %194, !dbg !11497

; <label>:194:                                    ; preds = %189
  %195 = load void (%struct.client*)*, void (%struct.client*)** %21, align 8, !dbg !11498, !tbaa !11323
  %196 = icmp eq void (%struct.client*)* %195, @migrateCommand, !dbg !11499
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11500
  br i1 %196, label %197, label %199, !dbg !11500

; <label>:197:                                    ; preds = %194
  %198 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11501, !tbaa !760
  br label %254, !dbg !11502

; <label>:199:                                    ; preds = %189, %194
  %200 = icmp ne i32 %167, 0, !dbg !11503
  %201 = and i1 %190, %200, !dbg !11505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11505
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11506
  br i1 %201, label %202, label %208, !dbg !11505

; <label>:202:                                    ; preds = %199
  br i1 %18, label %203, label %204, !dbg !11508

; <label>:203:                                    ; preds = %202
  store i32 3, i32* %5, align 4, !dbg !11510, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11512
  br label %204, !dbg !11512

; <label>:204:                                    ; preds = %203, %202
  %205 = sext i32 %164 to i64, !dbg !11513
  %206 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %180, i64 0, i32 6, i64 %205, !dbg !11513
  %207 = load %struct.clusterNode*, %struct.clusterNode** %206, align 8, !dbg !11513, !tbaa !760
  br label %254, !dbg !11514

; <label>:208:                                    ; preds = %199
  %209 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21
  %210 = load i32, i32* %209, align 8, !dbg !11506, !tbaa !11228
  br i1 %191, label %226, label %211, !dbg !11515

; <label>:211:                                    ; preds = %208
  %212 = and i32 %210, 512, !dbg !11516
  %213 = icmp eq i32 %212, 0, !dbg !11516
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11517
  br i1 %213, label %214, label %219, !dbg !11517

; <label>:214:                                    ; preds = %211
  %215 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 4, !dbg !11518
  %216 = load i32, i32* %215, align 8, !dbg !11518, !tbaa !11519
  %217 = and i32 %216, 4096, !dbg !11520
  %218 = icmp eq i32 %217, 0, !dbg !11520
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11521
  br i1 %218, label %226, label %219, !dbg !11521

; <label>:219:                                    ; preds = %214, %211
  %220 = icmp ne i32 %168, 0, !dbg !11522
  %221 = and i1 %200, %220, !dbg !11525
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11525
  br i1 %221, label %222, label %224, !dbg !11525

; <label>:222:                                    ; preds = %219
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11526
  br i1 %18, label %223, label %254, !dbg !11526

; <label>:223:                                    ; preds = %222
  store i32 2, i32* %5, align 4, !dbg !11528, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11530
  br label %254, !dbg !11530

; <label>:224:                                    ; preds = %219
  %225 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11531, !tbaa !760
  br label %254, !dbg !11533

; <label>:226:                                    ; preds = %208, %214
  %227 = and i32 %210, 131072, !dbg !11534
  %228 = icmp eq i32 %227, 0, !dbg !11534
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11536
  br i1 %228, label %249, label %229, !dbg !11536

; <label>:229:                                    ; preds = %226
  %230 = getelementptr inbounds %struct.redisCommand, %struct.redisCommand* %1, i64 0, i32 4, !dbg !11537
  %231 = load i32, i32* %230, align 8, !dbg !11537, !tbaa !11519
  %232 = and i32 %231, 2, !dbg !11538
  %233 = icmp eq i32 %232, 0, !dbg !11538
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11539
  br i1 %233, label %234, label %239, !dbg !11539

; <label>:234:                                    ; preds = %229
  %235 = load void (%struct.client*)*, void (%struct.client*)** %21, align 8, !dbg !11540, !tbaa !11323
  %236 = icmp eq void (%struct.client*)* %235, @evalCommand, !dbg !11541
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11542
  br i1 %236, label %239, label %237, !dbg !11542

; <label>:237:                                    ; preds = %234
  %238 = icmp eq void (%struct.client*)* %235, @evalShaCommand, !dbg !11543
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11544
  br i1 %238, label %239, label %249, !dbg !11544

; <label>:239:                                    ; preds = %229, %237, %234
  %240 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11545, !tbaa !760
  %241 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %240, i64 0, i32 2, !dbg !11545
  %242 = load i32, i32* %241, align 8, !dbg !11545, !tbaa !927
  %243 = and i32 %242, 2, !dbg !11545
  %244 = icmp eq i32 %243, 0, !dbg !11545
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11546
  br i1 %244, label %249, label %245, !dbg !11546

; <label>:245:                                    ; preds = %239
  %246 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %240, i64 0, i32 8, !dbg !11547
  %247 = load %struct.clusterNode*, %struct.clusterNode** %246, align 8, !dbg !11547, !tbaa !1025
  %248 = icmp eq %struct.clusterNode* %247, %170, !dbg !11548
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11549
  br i1 %248, label %254, label %249, !dbg !11549

; <label>:249:                                    ; preds = %239, %226, %245, %237
  %250 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11550, !tbaa !760
  %251 = icmp ne %struct.clusterNode* %170, %250, !dbg !11552
  %252 = and i1 %18, %251, !dbg !11553
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11553
  br i1 %252, label %253, label %254, !dbg !11553

; <label>:253:                                    ; preds = %249
  store i32 4, i32* %5, align 4, !dbg !11554, !tbaa !708
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11555
  br label %254, !dbg !11555

; <label>:254:                                    ; preds = %249, %253, %245, %222, %223, %184, %185, %162, %224, %204, %197, %177, %29, %15
  %255 = phi %struct.clusterNode* [ %16, %15 ], [ null, %162 ], [ %178, %177 ], [ %198, %197 ], [ %207, %204 ], [ %225, %224 ], [ %30, %29 ], [ null, %185 ], [ null, %184 ], [ null, %223 ], [ null, %222 ], [ %240, %245 ], [ %170, %253 ], [ %170, %249 ], !dbg !11556
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7, !dbg !11557
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7, !dbg !11557
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11557
  ret %struct.clusterNode* %255, !dbg !11557
}

; Function Attrs: noredzone
declare dso_local void @execCommand(%struct.client*) #3

; Function Attrs: noredzone
declare dso_local i32* @getKeysFromCommand(%struct.redisCommand*, %struct.redisObject**, i32, i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @getKeysFreeResult(i32*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local i32 @equalStringObjects(%struct.redisObject*, %struct.redisObject*) local_unnamed_addr #3

; Function Attrs: noredzone
declare dso_local void @evalCommand(%struct.client*) #3

; Function Attrs: noredzone
declare dso_local void @evalShaCommand(%struct.client*) #3

; Function Attrs: noredzone nounwind
define dso_local void @clusterRedirectClient(%struct.client*, %struct.clusterNode*, i32, i32) local_unnamed_addr #0 !dbg !11558 {
  %5 = icmp eq i32 %3, 1, !dbg !11570
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11572
  br i1 %5, label %6, label %8, !dbg !11572

; <label>:6:                                      ; preds = %4
  %7 = tail call i8* @sdsnew(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.268, i64 0, i64 0)) #6, !dbg !11573
  tail call void @addReplySds(%struct.client* %0, i8* %7) #6, !dbg !11575
  br label %32, !dbg !11576

; <label>:8:                                      ; preds = %4
  %9 = icmp eq i32 %3, 2, !dbg !11577
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11579
  br i1 %9, label %10, label %12, !dbg !11579

; <label>:10:                                     ; preds = %8
  %11 = tail call i8* @sdsnew(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.269, i64 0, i64 0)) #6, !dbg !11580
  tail call void @addReplySds(%struct.client* %0, i8* %11) #6, !dbg !11582
  br label %32, !dbg !11583

; <label>:12:                                     ; preds = %8
  %13 = icmp eq i32 %3, 5, !dbg !11584
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11586
  br i1 %13, label %14, label %16, !dbg !11586

; <label>:14:                                     ; preds = %12
  %15 = tail call i8* @sdsnew(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.270, i64 0, i64 0)) #6, !dbg !11587
  tail call void @addReplySds(%struct.client* %0, i8* %15) #6, !dbg !11589
  br label %32, !dbg !11590

; <label>:16:                                     ; preds = %12
  %17 = icmp eq i32 %3, 6, !dbg !11591
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11593
  br i1 %17, label %18, label %20, !dbg !11593

; <label>:18:                                     ; preds = %16
  %19 = tail call i8* @sdsnew(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.271, i64 0, i64 0)) #6, !dbg !11594
  tail call void @addReplySds(%struct.client* %0, i8* %19) #6, !dbg !11596
  br label %32, !dbg !11597

; <label>:20:                                     ; preds = %16
  %21 = add i32 %3, -3, !dbg !11598
  %22 = icmp ult i32 %21, 2, !dbg !11598
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11598
  br i1 %22, label %23, label %31, !dbg !11598

; <label>:23:                                     ; preds = %20
  %24 = icmp eq i32 %3, 3, !dbg !11600
  %25 = tail call i8* @sdsempty() #6, !dbg !11601
  %26 = select i1 %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.273, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0), !dbg !11603
  %27 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 16, i64 0, !dbg !11604
  %28 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %1, i64 0, i32 17, !dbg !11605
  %29 = load i32, i32* %28, align 8, !dbg !11605, !tbaa !900
  %30 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %25, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i8* %26, i32 %2, i8* nonnull %27, i32 %29) #6, !dbg !11606
  tail call void @addReplySds(%struct.client* %0, i8* %30) #6, !dbg !11607
  br label %32

; <label>:31:                                     ; preds = %20
  tail call void (i8*, i32, i8*, ...) @_serverPanic(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0), i32 5652, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.275, i64 0, i64 0)) #6, !dbg !11608
  tail call void @_exit(i32 1) #8, !dbg !11608
  unreachable

; <label>:32:                                     ; preds = %10, %18, %23, %14, %6
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11610
  ret void, !dbg !11610
}

; Function Attrs: noredzone nounwind
define dso_local i32 @clusterRedirectBlockedClientIfNeeded(%struct.client*) local_unnamed_addr #0 !dbg !11611 {
  %2 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 21, !dbg !11626
  %3 = load i32, i32* %2, align 8, !dbg !11626, !tbaa !11228
  %4 = and i32 %3, 16, !dbg !11627
  %5 = icmp eq i32 %4, 0, !dbg !11627
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11628
  br i1 %5, label %84, label %6, !dbg !11628

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 39, !dbg !11629
  %8 = load i32, i32* %7, align 8, !dbg !11629, !tbaa !11630
  %9 = icmp eq i32 %8, 1, !dbg !11631
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11632
  br i1 %9, label %14, label %10, !dbg !11632

; <label>:10:                                     ; preds = %6
  %11 = icmp eq i32 %8, 5, !dbg !11633
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11634
  br i1 %11, label %14, label %12, !dbg !11634

; <label>:12:                                     ; preds = %10
  %13 = icmp eq i32 %8, 4, !dbg !11635
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11636
  br i1 %13, label %14, label %84, !dbg !11636

; <label>:14:                                     ; preds = %12, %10, %6
  %15 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11637, !tbaa !788
  %16 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %15, i64 0, i32 2, !dbg !11639
  %17 = load i32, i32* %16, align 8, !dbg !11639, !tbaa !1770
  %18 = icmp eq i32 %17, 1, !dbg !11640
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11641
  br i1 %18, label %19, label %21, !dbg !11641

; <label>:19:                                     ; preds = %14
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11648
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11649
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11650
  %20 = tail call i8* @sdsnew(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.270, i64 0, i64 0)) #6, !dbg !11651
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %20) #6, !dbg !11652
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11653
  br label %82, !dbg !11654

; <label>:21:                                     ; preds = %14
  %22 = getelementptr inbounds %struct.client, %struct.client* %0, i64 0, i32 40, i32 1, !dbg !11655
  %23 = load %struct.dict*, %struct.dict** %22, align 8, !dbg !11655, !tbaa !11656
  %24 = tail call %struct.dictIterator* @dictGetIterator(%struct.dict* %23) #6, !dbg !11657
  %25 = tail call %struct.dictEntry* @dictNext(%struct.dictIterator* %24) #6, !dbg !11659
  %26 = icmp eq %struct.dictEntry* %25, null, !dbg !11661
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11662
  br i1 %26, label %83, label %27, !dbg !11662

; <label>:27:                                     ; preds = %21
  %28 = bitcast %struct.dictEntry* %25 to %struct.redisObject**, !dbg !11663
  %29 = load %struct.redisObject*, %struct.redisObject** %28, align 8, !dbg !11663, !tbaa !3254
  %30 = getelementptr inbounds %struct.redisObject, %struct.redisObject* %29, i64 0, i32 2, !dbg !11665
  %31 = load i8*, i8** %30, align 8, !dbg !11665, !tbaa !6254
  %32 = getelementptr inbounds i8, i8* %31, i64 -1, !dbg !11668
  %33 = load i8, i8* %32, align 1, !dbg !11668, !tbaa !745
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11670
  %34 = trunc i8 %33 to i3, !dbg !11670
  switch i3 %34, label %56 [
    i3 0, label %35
    i3 1, label %38
    i3 2, label %42
    i3 3, label %47
    i3 -4, label %52
  ], !dbg !11670

; <label>:35:                                     ; preds = %27
  %36 = lshr i8 %33, 3, !dbg !11671
  %37 = zext i8 %36 to i64, !dbg !11671
  br label %56, !dbg !11672

; <label>:38:                                     ; preds = %27
  %39 = getelementptr inbounds i8, i8* %31, i64 -3, !dbg !11673
  %40 = load i8, i8* %39, align 1, !dbg !11674, !tbaa !745
  %41 = zext i8 %40 to i64, !dbg !11673
  br label %56, !dbg !11675

; <label>:42:                                     ; preds = %27
  %43 = getelementptr inbounds i8, i8* %31, i64 -5, !dbg !11676
  %44 = bitcast i8* %43 to i16*, !dbg !11677
  %45 = load i16, i16* %44, align 1, !dbg !11677, !tbaa !1503
  %46 = zext i16 %45 to i64, !dbg !11676
  br label %56, !dbg !11678

; <label>:47:                                     ; preds = %27
  %48 = getelementptr inbounds i8, i8* %31, i64 -9, !dbg !11679
  %49 = bitcast i8* %48 to i32*, !dbg !11680
  %50 = load i32, i32* %49, align 1, !dbg !11680, !tbaa !708
  %51 = zext i32 %50 to i64, !dbg !11679
  br label %56, !dbg !11681

; <label>:52:                                     ; preds = %27
  %53 = getelementptr inbounds i8, i8* %31, i64 -17, !dbg !11682
  %54 = bitcast i8* %53 to i64*, !dbg !11683
  %55 = load i64, i64* %54, align 1, !dbg !11683, !tbaa !1510
  br label %56, !dbg !11684

; <label>:56:                                     ; preds = %27, %35, %38, %42, %47, %52
  %57 = phi i64 [ %55, %52 ], [ %51, %47 ], [ %46, %42 ], [ %41, %38 ], [ %37, %35 ], [ 0, %27 ], !dbg !11685
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11686
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11687
  %58 = trunc i64 %57 to i32, !dbg !11688
  %59 = tail call i32 @keyHashSlot(i8* %31, i32 %58) #10, !dbg !11689
  %60 = load %struct.clusterState*, %struct.clusterState** getelementptr inbounds (%struct.redisServer, %struct.redisServer* @server, i64 0, i32 261), align 8, !dbg !11691, !tbaa !788
  %61 = sext i32 %59 to i64, !dbg !11692
  %62 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %60, i64 0, i32 8, i64 %61, !dbg !11692
  %63 = load %struct.clusterNode*, %struct.clusterNode** %62, align 8, !dbg !11692, !tbaa !760
  %64 = load %struct.clusterNode*, %struct.clusterNode** @myself, align 8, !dbg !11694, !tbaa !760
  %65 = icmp eq %struct.clusterNode* %63, %64, !dbg !11696
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11697
  br i1 %65, label %80, label %66, !dbg !11697

; <label>:66:                                     ; preds = %56
  %67 = getelementptr inbounds %struct.clusterState, %struct.clusterState* %60, i64 0, i32 7, i64 %61, !dbg !11698
  %68 = load %struct.clusterNode*, %struct.clusterNode** %67, align 8, !dbg !11698, !tbaa !760
  %69 = icmp eq %struct.clusterNode* %68, null, !dbg !11699
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11700
  br i1 %69, label %70, label %80, !dbg !11700

; <label>:70:                                     ; preds = %66
  %71 = icmp eq %struct.clusterNode* %63, null, !dbg !11701
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11704
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11711
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11712
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11713
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11714
  br i1 %71, label %72, label %74, !dbg !11704

; <label>:72:                                     ; preds = %70
  %73 = tail call i8* @sdsnew(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.271, i64 0, i64 0)) #6, !dbg !11718
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %73) #6, !dbg !11719
  br label %81, !dbg !11720

; <label>:74:                                     ; preds = %70
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11724
  %75 = tail call i8* @sdsempty() #6, !dbg !11725
  %76 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 16, i64 0, !dbg !11726
  %77 = getelementptr inbounds %struct.clusterNode, %struct.clusterNode* %63, i64 0, i32 17, !dbg !11727
  %78 = load i32, i32* %77, align 8, !dbg !11727, !tbaa !900
  %79 = tail call i8* (i8*, i8*, ...) @sdscatprintf(i8* %75, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.272, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i64 0, i64 0), i32 %59, i8* nonnull %76, i32 %78) #6, !dbg !11728
  tail call void @addReplySds(%struct.client* nonnull %0, i8* %79) #6, !dbg !11729
  br label %81

; <label>:80:                                     ; preds = %66, %56
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11730
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %83

; <label>:81:                                     ; preds = %72, %74
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11731
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  tail call void @dictReleaseIterator(%struct.dictIterator* %24) #6, !dbg !11732
  br label %82

; <label>:82:                                     ; preds = %19, %81
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11733
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %84

; <label>:83:                                     ; preds = %21, %80
  tail call void @dictReleaseIterator(%struct.dictIterator* %24) #6, !dbg !11734
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11735
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  br label %84

; <label>:84:                                     ; preds = %12, %1, %83, %82
  %85 = phi i32 [ 1, %82 ], [ 0, %83 ], [ 0, %1 ], [ 0, %12 ], !dbg !11736
  store volatile i32 42, i32* @__A_VARIABLE, align 4
  store volatile i32 42, i32* @__A_VARIABLE, align 4, !dbg !11737
  ret i32 %85, !dbg !11737
}

; Function Attrs: noredzone
declare dso_local %struct.dictIterator* @dictGetIterator(%struct.dict*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable

attributes #0 = { noredzone nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin noredzone nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin noredzone noreturn nounwind }
attributes #9 = { nobuiltin noredzone nounwind readonly }
attributes #10 = { nobuiltin noredzone }

!llvm.module.flags = !{!432, !433, !434}
!llvm.ident = !{!435}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "myself", scope: !2, file: !3, line: 47, type: !378, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !278)
!3 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.c", directory: "/root/.unikraft/apps/redis/build")
!4 = !{}
!5 = !{!6, !7, !8, !14, !16, !51, !73, !92, !106, !177, !178, !179, !186, !184, !104, !246, !247, !257, !264, !271}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!7 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !9, line: 173, baseType: !10)
!9 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/types.h", directory: "/root/.unikraft/apps/redis/build")
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !11, line: 100, baseType: !12)
!11 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_types.h", directory: "/root/.unikraft/apps/redis/build")
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !11, line: 44, baseType: !13)
!13 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !9, line: 200, baseType: !15)
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "_ssize_t", file: !11, line: 145, baseType: !13)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!17 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !18, line: 73, size: 128, elements: !19)
!18 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/sockets.h", directory: "/root/.unikraft/apps/redis/build")
!19 = !{!20, !28, !30, !36, !46}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "sin_len", scope: !17, file: !18, line: 74, baseType: !21, size: 8)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8_t", file: !22, line: 125, baseType: !23)
!22 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/arch.h", directory: "/root/.unikraft/apps/redis/build")
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !24, line: 24, baseType: !25)
!24 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/_stdint.h", directory: "/root/.unikraft/apps/redis/build")
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !26, line: 43, baseType: !27)
!26 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/machine/_default_types.h", directory: "/root/.unikraft/apps/redis/build")
!27 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !17, file: !18, line: 75, baseType: !29, size: 8, offset: 8)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !18, line: 63, baseType: !21)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !17, file: !18, line: 76, baseType: !31, size: 16, offset: 16)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !18, line: 68, baseType: !32)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16_t", file: !22, line: 127, baseType: !33)
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !24, line: 36, baseType: !34)
!34 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !26, line: 57, baseType: !35)
!35 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !17, file: !18, line: 77, baseType: !37, size: 32, offset: 32)
!37 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !38, line: 58, size: 32, elements: !39)
!38 = !DIFile(filename: "/root/.unikraft/apps/redis/build/liblwip/origin/lwip-2.1.2/src/include/lwip/inet.h", directory: "/root/.unikraft/apps/redis/build")
!39 = !{!40}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !37, file: !38, line: 59, baseType: !41, size: 32)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !38, line: 55, baseType: !42)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32_t", file: !22, line: 129, baseType: !43)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !24, line: 48, baseType: !44)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !26, line: 79, baseType: !45)
!45 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !17, file: !18, line: 79, baseType: !47, size: 64, offset: 64)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 64, elements: !49)
!48 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!49 = !{!50}
!50 = !DISubrange(count: 8)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in6", file: !18, line: 84, size: 224, elements: !53)
!53 = !{!54, !55, !56, !57, !58, !72}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_len", scope: !52, file: !18, line: 85, baseType: !21, size: 8)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_family", scope: !52, file: !18, line: 86, baseType: !29, size: 8, offset: 8)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_port", scope: !52, file: !18, line: 87, baseType: !31, size: 16, offset: 16)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_flowinfo", scope: !52, file: !18, line: 88, baseType: !42, size: 32, offset: 32)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_addr", scope: !52, file: !18, line: 89, baseType: !59, size: 128, offset: 64)
!59 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !38, line: 62, size: 128, elements: !60)
!60 = !{!61}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "un", scope: !59, file: !38, line: 66, baseType: !62, size: 128)
!62 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !59, file: !38, line: 63, size: 128, elements: !63)
!63 = !{!64, !68}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "u32_addr", scope: !62, file: !38, line: 64, baseType: !65, size: 128)
!65 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 128, elements: !66)
!66 = !{!67}
!67 = !DISubrange(count: 4)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "u8_addr", scope: !62, file: !38, line: 65, baseType: !69, size: 128)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, elements: !70)
!70 = !{!71}
!71 = !DISubrange(count: 16)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "sin6_scope_id", scope: !52, file: !18, line: 90, baseType: !42, size: 32, offset: 192)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataGossip", file: !75, line: 197, baseType: !76)
!75 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/cluster.h", directory: "/root/.unikraft/apps/redis/build")
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 188, size: 832, elements: !77)
!77 = !{!78, !82, !83, !84, !88, !89, !90, !91}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !76, file: !75, line: 189, baseType: !79, size: 320)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 320, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 40)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !76, file: !75, line: 190, baseType: !43, size: 32, offset: 320)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !76, file: !75, line: 191, baseType: !43, size: 32, offset: 352)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !76, file: !75, line: 192, baseType: !85, size: 368, offset: 384)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 368, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 46)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !76, file: !75, line: 193, baseType: !33, size: 16, offset: 752)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !76, file: !75, line: 194, baseType: !33, size: 16, offset: 768)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !76, file: !75, line: 195, baseType: !33, size: 16, offset: 784)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "notused1", scope: !76, file: !75, line: 196, baseType: !43, size: 32, offset: 800)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsg", file: !75, line: 275, baseType: !94)
!94 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 252, size: 34816, elements: !95)
!95 = !{!96, !98, !99, !100, !101, !102, !103, !107, !108, !109, !110, !114, !115, !116, !120, !121, !122, !123, !127}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !94, file: !75, line: 253, baseType: !97, size: 32)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 32, elements: !66)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "totlen", scope: !94, file: !75, line: 254, baseType: !43, size: 32, offset: 32)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "ver", scope: !94, file: !75, line: 255, baseType: !33, size: 16, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !94, file: !75, line: 256, baseType: !33, size: 16, offset: 80)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !94, file: !75, line: 257, baseType: !33, size: 16, offset: 96)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !94, file: !75, line: 258, baseType: !33, size: 16, offset: 112)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "currentEpoch", scope: !94, file: !75, line: 259, baseType: !104, size: 64, offset: 128)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !24, line: 60, baseType: !105)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !26, line: 105, baseType: !106)
!106 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !94, file: !75, line: 260, baseType: !104, size: 64, offset: 192)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !94, file: !75, line: 263, baseType: !104, size: 64, offset: 256)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "sender", scope: !94, file: !75, line: 265, baseType: !79, size: 320, offset: 320)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "myslots", scope: !94, file: !75, line: 266, baseType: !111, size: 16384, offset: 640)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 16384, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 2048)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !94, file: !75, line: 267, baseType: !79, size: 320, offset: 17024)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "myip", scope: !94, file: !75, line: 268, baseType: !85, size: 368, offset: 17344)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "notused1", scope: !94, file: !75, line: 269, baseType: !117, size: 272, offset: 17712)
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 272, elements: !118)
!118 = !{!119}
!119 = !DISubrange(count: 34)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !94, file: !75, line: 270, baseType: !33, size: 16, offset: 17984)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !94, file: !75, line: 271, baseType: !33, size: 16, offset: 18000)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !94, file: !75, line: 272, baseType: !27, size: 8, offset: 18016)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "mflags", scope: !94, file: !75, line: 273, baseType: !124, size: 24, offset: 18024)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 24, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 3)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !94, file: !75, line: 274, baseType: !128, size: 16768, offset: 18048)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "clusterMsgData", file: !75, line: 222, size: 16768, elements: !129)
!129 = !{!130, !137, !145, !156, !166}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !128, file: !75, line: 227, baseType: !131, size: 832)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 224, size: 832, elements: !132)
!132 = !{!133}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "gossip", scope: !131, file: !75, line: 226, baseType: !134, size: 832)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 832, elements: !135)
!135 = !{!136}
!136 = !DISubrange(count: 1)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "fail", scope: !128, file: !75, line: 232, baseType: !138, size: 320)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 230, size: 320, elements: !139)
!139 = !{!140}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "about", scope: !138, file: !75, line: 231, baseType: !141, size: 320)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataFail", file: !75, line: 201, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 199, size: 320, elements: !143)
!143 = !{!144}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !142, file: !75, line: 200, baseType: !79, size: 320)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "publish", scope: !128, file: !75, line: 237, baseType: !146, size: 128)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 235, size: 128, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !146, file: !75, line: 236, baseType: !149, size: 128)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataPublish", file: !75, line: 207, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 203, size: 128, elements: !151)
!151 = !{!152, !153, !154}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "channel_len", scope: !150, file: !75, line: 204, baseType: !43, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "message_len", scope: !150, file: !75, line: 205, baseType: !43, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_data", scope: !150, file: !75, line: 206, baseType: !155, size: 64, offset: 64)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 64, elements: !49)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !128, file: !75, line: 242, baseType: !157, size: 16768)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 240, size: 16768, elements: !158)
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "nodecfg", scope: !157, file: !75, line: 241, baseType: !160, size: 16768)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgDataUpdate", file: !75, line: 213, baseType: !161)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 209, size: 16768, elements: !162)
!162 = !{!163, !164, !165}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !161, file: !75, line: 210, baseType: !104, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !161, file: !75, line: 211, baseType: !79, size: 320, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !161, file: !75, line: 212, baseType: !111, size: 16384, offset: 384)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !128, file: !75, line: 247, baseType: !167, size: 128)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !128, file: !75, line: 245, size: 128, elements: !168)
!168 = !{!169}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !167, file: !75, line: 246, baseType: !170, size: 128)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterMsgModule", file: !75, line: 220, baseType: !171)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !75, line: 215, size: 128, elements: !172)
!172 = !{!173, !174, !175, !176}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "module_id", scope: !171, file: !75, line: 216, baseType: !104, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !171, file: !75, line: 217, baseType: !43, size: 32, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !171, file: !75, line: 218, baseType: !23, size: 8, offset: 96)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_data", scope: !171, file: !75, line: 219, baseType: !124, size: 24, offset: 104)
!177 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterLink", file: !75, line: 47, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterLink", file: !75, line: 41, size: 320, elements: !182)
!182 = !{!183, !187, !188, !191, !192}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !181, file: !75, line: 42, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "mstime_t", file: !185, line: 52, baseType: !186)
!185 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/server.h", directory: "/root/.unikraft/apps/redis/build")
!186 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !181, file: !75, line: 43, baseType: !177, size: 32, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf", scope: !181, file: !75, line: 44, baseType: !189, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "sds", file: !190, line: 43, baseType: !178)
!190 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/sds.h", directory: "/root/.unikraft/apps/redis/build")
!191 = !DIDerivedType(tag: DW_TAG_member, name: "rcvbuf", scope: !181, file: !75, line: 45, baseType: !189, size: 64, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !181, file: !75, line: 46, baseType: !193, size: 64, offset: 256)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNode", file: !75, line: 116, size: 18112, elements: !195)
!195 = !{!196, !197, !198, !199, !200, !201, !202, !203, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !194, file: !75, line: 117, baseType: !184, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !194, file: !75, line: 118, baseType: !79, size: 320, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !194, file: !75, line: 119, baseType: !177, size: 32, offset: 384)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "configEpoch", scope: !194, file: !75, line: 120, baseType: !104, size: 64, offset: 448)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !194, file: !75, line: 121, baseType: !111, size: 16384, offset: 512)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "numslots", scope: !194, file: !75, line: 122, baseType: !177, size: 32, offset: 16896)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "numslaves", scope: !194, file: !75, line: 123, baseType: !177, size: 32, offset: 16928)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "slaves", scope: !194, file: !75, line: 124, baseType: !204, size: 64, offset: 16960)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "slaveof", scope: !194, file: !75, line: 125, baseType: !193, size: 64, offset: 17024)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ping_sent", scope: !194, file: !75, line: 129, baseType: !184, size: 64, offset: 17088)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "pong_received", scope: !194, file: !75, line: 130, baseType: !184, size: 64, offset: 17152)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "fail_time", scope: !194, file: !75, line: 131, baseType: !184, size: 64, offset: 17216)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "voted_time", scope: !194, file: !75, line: 132, baseType: !184, size: 64, offset: 17280)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset_time", scope: !194, file: !75, line: 133, baseType: !184, size: 64, offset: 17344)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "orphaned_time", scope: !194, file: !75, line: 134, baseType: !184, size: 64, offset: 17408)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "repl_offset", scope: !194, file: !75, line: 135, baseType: !186, size: 64, offset: 17472)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !194, file: !75, line: 136, baseType: !85, size: 368, offset: 17536)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !194, file: !75, line: 137, baseType: !177, size: 32, offset: 17920)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "cport", scope: !194, file: !75, line: 138, baseType: !177, size: 32, offset: 17952)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !194, file: !75, line: 139, baseType: !179, size: 64, offset: 17984)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "fail_reports", scope: !194, file: !75, line: 140, baseType: !218, size: 64, offset: 18048)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "list", file: !220, line: 54, baseType: !221)
!220 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/adlist.h", directory: "/root/.unikraft/apps/redis/build")
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list", file: !220, line: 47, size: 384, elements: !222)
!222 = !{!223, !232, !233, !237, !241, !245}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !221, file: !220, line: 48, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "listNode", file: !220, line: 40, baseType: !226)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listNode", file: !220, line: 36, size: 192, elements: !227)
!227 = !{!228, !230, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !226, file: !220, line: 37, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !226, file: !220, line: 38, baseType: !229, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !226, file: !220, line: 39, baseType: !6, size: 64, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !221, file: !220, line: 49, baseType: !224, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !221, file: !220, line: 50, baseType: !234, size: 64, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{!6, !6}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !221, file: !220, line: 51, baseType: !238, size: 64, offset: 192)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DISubroutineType(types: !240)
!240 = !{null, !6}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !221, file: !220, line: 52, baseType: !242, size: 64, offset: 256)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DISubroutineType(types: !244)
!244 = !{!177, !6, !6}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !221, file: !220, line: 53, baseType: !106, size: 64, offset: 320)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr8", file: !190, line: 51, size: 24, elements: !249)
!249 = !{!250, !251, !252, !253}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !248, file: !190, line: 52, baseType: !23, size: 8)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !248, file: !190, line: 53, baseType: !23, size: 8, offset: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !248, file: !190, line: 54, baseType: !27, size: 8, offset: 16)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !248, file: !190, line: 55, baseType: !254, offset: 24)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, elements: !255)
!255 = !{!256}
!256 = !DISubrange(count: -1)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr16", file: !190, line: 57, size: 40, elements: !259)
!259 = !{!260, !261, !262, !263}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !258, file: !190, line: 58, baseType: !33, size: 16)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !258, file: !190, line: 59, baseType: !33, size: 16, offset: 16)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !190, line: 60, baseType: !27, size: 8, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !258, file: !190, line: 61, baseType: !254, offset: 40)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr32", file: !190, line: 63, size: 72, elements: !266)
!266 = !{!267, !268, !269, !270}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !265, file: !190, line: 64, baseType: !43, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !265, file: !190, line: 65, baseType: !43, size: 32, offset: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !265, file: !190, line: 66, baseType: !27, size: 8, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !265, file: !190, line: 67, baseType: !254, offset: 72)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdshdr64", file: !190, line: 69, size: 136, elements: !273)
!273 = !{!274, !275, !276, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !272, file: !190, line: 70, baseType: !104, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !272, file: !190, line: 71, baseType: !104, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !272, file: !190, line: 72, baseType: !27, size: 8, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !272, file: !190, line: 73, baseType: !254, offset: 136)
!278 = !{!0, !279, !290, !404, !406, !423, !425}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "lastlog_time", scope: !281, file: !3, line: 2863, type: !288, isLocal: true, isDefinition: true)
!281 = distinct !DISubprogram(name: "clusterLogCantFailover", scope: !3, file: !3, line: 2861, type: !282, isLocal: false, isDefinition: true, scopeLine: 2861, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !284)
!282 = !DISubroutineType(types: !283)
!283 = !{null, !177}
!284 = !{!285, !286, !287}
!285 = !DILocalVariable(name: "reason", arg: 1, scope: !281, file: !3, line: 2861, type: !177)
!286 = !DILocalVariable(name: "msg", scope: !281, file: !3, line: 2862, type: !178)
!287 = !DILocalVariable(name: "nolog_fail_time", scope: !281, file: !3, line: 2864, type: !184)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !289, line: 34, baseType: !13)
!289 = !DIFile(filename: "/root/.unikraft/unikraft/lib/uktime/include/uk/time_types.h", directory: "/root/.unikraft/apps/redis/build")
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "iteration", scope: !292, file: !3, line: 3319, type: !7, isLocal: true, isDefinition: true)
!292 = distinct !DISubprogram(name: "clusterCron", scope: !3, file: !3, line: 3310, type: !293, isLocal: false, isDefinition: true, scopeLine: 3310, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !295)
!293 = !DISubroutineType(types: !294)
!294 = !{null}
!295 = !{!296, !370, !371, !372, !373, !374, !375, !376, !377, !380, !381, !383, !384, !386, !389, !390, !391, !394, !398, !400, !401}
!296 = !DILocalVariable(name: "di", scope: !292, file: !3, line: 3311, type: !297)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictIterator", file: !299, line: 95, baseType: !300)
!299 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/dict.h", directory: "/root/.unikraft/apps/redis/build")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictIterator", file: !299, line: 88, size: 384, elements: !301)
!301 = !{!302, !364, !365, !366, !367, !368, !369}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !300, file: !299, line: 89, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "dict", file: !299, line: 82, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dict", file: !299, line: 76, size: 768, elements: !306)
!306 = !{!307, !332, !333, !362, !363}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !305, file: !299, line: 77, baseType: !308, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictType", file: !299, line: 65, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictType", file: !299, line: 58, size: 384, elements: !311)
!311 = !{!312, !318, !322, !323, !327, !331}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "hashFunction", scope: !310, file: !299, line: 59, baseType: !313, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DISubroutineType(types: !315)
!315 = !{!104, !316}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "keyDup", scope: !310, file: !299, line: 60, baseType: !319, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!6, !6, !316}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "valDup", scope: !310, file: !299, line: 61, baseType: !319, size: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "keyCompare", scope: !310, file: !299, line: 62, baseType: !324, size: 64, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!177, !6, !316, !316}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "keyDestructor", scope: !310, file: !299, line: 63, baseType: !328, size: 64, offset: 256)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DISubroutineType(types: !330)
!330 = !{null, !6, !6}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "valDestructor", scope: !310, file: !299, line: 64, baseType: !328, size: 64, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !305, file: !299, line: 78, baseType: !6, size: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !305, file: !299, line: 79, baseType: !334, size: 512, offset: 128)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 512, elements: !360)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictht", file: !299, line: 74, baseType: !336)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictht", file: !299, line: 69, size: 256, elements: !337)
!337 = !{!338, !357, !358, !359}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !336, file: !299, line: 70, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "dictEntry", file: !299, line: 56, baseType: !342)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dictEntry", file: !299, line: 47, size: 192, elements: !343)
!343 = !{!344, !345, !355}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !342, file: !299, line: 48, baseType: !6, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !342, file: !299, line: 54, baseType: !346, size: 64, offset: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !342, file: !299, line: 49, size: 64, elements: !347)
!347 = !{!348, !349, !350, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !346, file: !299, line: 50, baseType: !6, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "u64", scope: !346, file: !299, line: 51, baseType: !104, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "s64", scope: !346, file: !299, line: 52, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !24, line: 56, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !26, line: 103, baseType: !13)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !346, file: !299, line: 53, baseType: !354, size: 64)
!354 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !342, file: !299, line: 55, baseType: !356, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !336, file: !299, line: 71, baseType: !106, size: 64, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "sizemask", scope: !336, file: !299, line: 72, baseType: !106, size: 64, offset: 128)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !336, file: !299, line: 73, baseType: !106, size: 64, offset: 192)
!360 = !{!361}
!361 = !DISubrange(count: 2)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rehashidx", scope: !305, file: !299, line: 80, baseType: !13, size: 64, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "iterators", scope: !305, file: !299, line: 81, baseType: !106, size: 64, offset: 704)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !300, file: !299, line: 90, baseType: !13, size: 64, offset: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !300, file: !299, line: 91, baseType: !177, size: 32, offset: 128)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "safe", scope: !300, file: !299, line: 91, baseType: !177, size: 32, offset: 160)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !300, file: !299, line: 92, baseType: !340, size: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "nextEntry", scope: !300, file: !299, line: 92, baseType: !340, size: 64, offset: 256)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fingerprint", scope: !300, file: !299, line: 94, baseType: !186, size: 64, offset: 320)
!370 = !DILocalVariable(name: "de", scope: !292, file: !3, line: 3312, type: !340)
!371 = !DILocalVariable(name: "update_state", scope: !292, file: !3, line: 3313, type: !177)
!372 = !DILocalVariable(name: "orphaned_masters", scope: !292, file: !3, line: 3314, type: !177)
!373 = !DILocalVariable(name: "max_slaves", scope: !292, file: !3, line: 3315, type: !177)
!374 = !DILocalVariable(name: "this_slaves", scope: !292, file: !3, line: 3316, type: !177)
!375 = !DILocalVariable(name: "min_pong", scope: !292, file: !3, line: 3317, type: !184)
!376 = !DILocalVariable(name: "now", scope: !292, file: !3, line: 3317, type: !184)
!377 = !DILocalVariable(name: "min_pong_node", scope: !292, file: !3, line: 3318, type: !378)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNode", file: !75, line: 141, baseType: !194)
!380 = !DILocalVariable(name: "handshake_timeout", scope: !292, file: !3, line: 3320, type: !184)
!381 = !DILocalVariable(name: "curr_ip", scope: !382, file: !3, line: 3329, type: !178)
!382 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3327, column: 5)
!383 = !DILocalVariable(name: "changed", scope: !382, file: !3, line: 3330, type: !177)
!384 = !DILocalVariable(name: "node", scope: !385, file: !3, line: 3369, type: !378)
!385 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3368, column: 40)
!386 = !DILocalVariable(name: "fd", scope: !387, file: !3, line: 3386, type: !177)
!387 = distinct !DILexicalBlock(scope: !388, file: !3, line: 3385, column: 33)
!388 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3385, column: 13)
!389 = !DILocalVariable(name: "old_ping_sent", scope: !387, file: !3, line: 3387, type: !184)
!390 = !DILocalVariable(name: "link", scope: !387, file: !3, line: 3388, type: !179)
!391 = !DILocalVariable(name: "j", scope: !392, file: !3, line: 3440, type: !177)
!392 = distinct !DILexicalBlock(scope: !393, file: !3, line: 3439, column: 28)
!393 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3439, column: 9)
!394 = !DILocalVariable(name: "this", scope: !395, file: !3, line: 3446, type: !378)
!395 = distinct !DILexicalBlock(scope: !396, file: !3, line: 3444, column: 33)
!396 = distinct !DILexicalBlock(scope: !397, file: !3, line: 3444, column: 9)
!397 = distinct !DILexicalBlock(scope: !392, file: !3, line: 3444, column: 9)
!398 = !DILocalVariable(name: "node", scope: !399, file: !3, line: 3474, type: !378)
!399 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3473, column: 40)
!400 = !DILocalVariable(name: "delay", scope: !399, file: !3, line: 3476, type: !184)
!401 = !DILocalVariable(name: "okslaves", scope: !402, file: !3, line: 3485, type: !177)
!402 = distinct !DILexicalBlock(scope: !403, file: !3, line: 3484, column: 77)
!403 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3484, column: 13)
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "prev_ip", scope: !292, file: !3, line: 3328, type: !178, isLocal: true, isDefinition: true)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(name: "among_minority_time", scope: !408, file: !3, line: 3763, type: !184, isLocal: true, isDefinition: true)
!408 = distinct !DISubprogram(name: "clusterUpdateState", scope: !3, file: !3, line: 3760, type: !293, isLocal: false, isDefinition: true, scopeLine: 3760, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !409)
!409 = !{!410, !411, !412, !413, !415, !416, !418, !420}
!410 = !DILocalVariable(name: "j", scope: !408, file: !3, line: 3761, type: !177)
!411 = !DILocalVariable(name: "new_state", scope: !408, file: !3, line: 3761, type: !177)
!412 = !DILocalVariable(name: "reachable_masters", scope: !408, file: !3, line: 3762, type: !177)
!413 = !DILocalVariable(name: "di", scope: !414, file: !3, line: 3801, type: !297)
!414 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3800, column: 5)
!415 = !DILocalVariable(name: "de", scope: !414, file: !3, line: 3802, type: !340)
!416 = !DILocalVariable(name: "node", scope: !417, file: !3, line: 3807, type: !378)
!417 = distinct !DILexicalBlock(scope: !414, file: !3, line: 3806, column: 44)
!418 = !DILocalVariable(name: "needed_quorum", scope: !419, file: !3, line: 3821, type: !177)
!419 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3820, column: 5)
!420 = !DILocalVariable(name: "rejoin_delay", scope: !421, file: !3, line: 3831, type: !184)
!421 = distinct !DILexicalBlock(scope: !422, file: !3, line: 3830, column: 45)
!422 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3830, column: 9)
!423 = !DIGlobalVariableExpression(var: !424, expr: !DIExpression())
!424 = distinct !DIGlobalVariable(name: "first_call_time", scope: !408, file: !3, line: 3764, type: !184, isLocal: true, isDefinition: true)
!425 = !DIGlobalVariableExpression(var: !426, expr: !DIExpression())
!426 = distinct !DIGlobalVariable(name: "redisNodeFlagsTable", scope: !2, file: !3, line: 3960, type: !427, isLocal: true, isDefinition: true)
!427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !428, size: 1024, elements: !49)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisNodeFlags", file: !3, line: 3955, size: 128, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !428, file: !3, line: 3956, baseType: !33, size: 16)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !428, file: !3, line: 3957, baseType: !178, size: 64, offset: 64)
!432 = !{i32 2, !"Dwarf Version", i32 4}
!433 = !{i32 2, !"Debug Info Version", i32 3}
!434 = !{i32 1, !"wchar_size", i32 4}
!435 = !{!"clang version 7.0.1-8+deb10u2 (tags/RELEASE_701/final)"}
!436 = distinct !DISubprogram(name: "clusterLoadConfig", scope: !3, file: !3, line: 90, type: !437, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !439)
!437 = !DISubroutineType(types: !438)
!438 = !{!177, !178}
!439 = !{!440, !441, !638, !675, !676, !677, !678, !680, !682, !683, !684, !685, !686, !687, !688, !692, !693, !696, !697}
!440 = !DILocalVariable(name: "filename", arg: 1, scope: !436, file: !3, line: 90, type: !178)
!441 = !DILocalVariable(name: "fp", scope: !436, file: !3, line: 91, type: !442)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !444, line: 66, baseType: !445)
!444 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/stdio.h", directory: "/root/.unikraft/apps/redis/build")
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !446, line: 287, baseType: !447)
!446 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/reent.h", directory: "/root/.unikraft/apps/redis/build")
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !446, line: 181, size: 1408, elements: !448)
!448 = !{!449, !450, !451, !452, !454, !455, !460, !461, !462, !607, !613, !618, !622, !623, !624, !625, !626, !628, !629, !630, !631, !632, !636, !637}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !447, file: !446, line: 182, baseType: !246, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !447, file: !446, line: 183, baseType: !177, size: 32, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !447, file: !446, line: 184, baseType: !177, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !447, file: !446, line: 185, baseType: !453, size: 16, offset: 128)
!453 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !447, file: !446, line: 186, baseType: !453, size: 16, offset: 144)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !447, file: !446, line: 187, baseType: !456, size: 128, offset: 192)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !446, line: 117, size: 128, elements: !457)
!457 = !{!458, !459}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !456, file: !446, line: 118, baseType: !246, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !456, file: !446, line: 119, baseType: !177, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !447, file: !446, line: 188, baseType: !177, size: 32, offset: 320)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !447, file: !446, line: 195, baseType: !6, size: 64, offset: 384)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !447, file: !446, line: 197, baseType: !463, size: 64, offset: 448)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DISubroutineType(types: !465)
!465 = !{!15, !466, !6, !178, !177}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !446, line: 569, size: 14912, elements: !468)
!468 = !{!469, !470, !472, !473, !474, !475, !479, !480, !483, !484, !488, !500, !501, !502, !504, !505, !506, !575, !594, !595, !598, !605}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !467, file: !446, line: 571, baseType: !177, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !467, file: !446, line: 576, baseType: !471, size: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !467, file: !446, line: 576, baseType: !471, size: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !467, file: !446, line: 576, baseType: !471, size: 64, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !467, file: !446, line: 578, baseType: !177, size: 32, offset: 256)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !467, file: !446, line: 579, baseType: !476, size: 200, offset: 288)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 200, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 25)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !467, file: !446, line: 582, baseType: !177, size: 32, offset: 512)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !467, file: !446, line: 583, baseType: !481, size: 64, offset: 576)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !446, line: 40, flags: DIFlagFwdDecl)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !467, file: !446, line: 585, baseType: !177, size: 32, offset: 640)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !467, file: !446, line: 587, baseType: !485, size: 64, offset: 704)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !466}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !467, file: !446, line: 590, baseType: !489, size: 64, offset: 768)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !446, line: 47, size: 256, elements: !491)
!491 = !{!492, !493, !494, !495, !496, !497}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !490, file: !446, line: 49, baseType: !489, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 96)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !490, file: !446, line: 50, baseType: !177, size: 32, offset: 160)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !490, file: !446, line: 51, baseType: !498, size: 32, offset: 192)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 32, elements: !135)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !446, line: 25, baseType: !45)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !467, file: !446, line: 591, baseType: !177, size: 32, offset: 832)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !467, file: !446, line: 592, baseType: !489, size: 64, offset: 896)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !467, file: !446, line: 593, baseType: !503, size: 64, offset: 960)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !467, file: !446, line: 596, baseType: !177, size: 32, offset: 1024)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !467, file: !446, line: 597, baseType: !178, size: 64, offset: 1088)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "_new", scope: !467, file: !446, line: 632, baseType: !507, size: 2880, offset: 1152)
!507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !467, file: !446, line: 599, size: 2880, elements: !508)
!508 = !{!509, !566}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "_reent", scope: !507, file: !446, line: 622, baseType: !510, size: 1728)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !446, line: 601, size: 1728, elements: !511)
!511 = !{!512, !513, !514, !518, !530, !531, !532, !539, !552, !553, !554, !555, !559, !560, !561, !562, !563, !564, !565}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "_unused_rand", scope: !510, file: !446, line: 603, baseType: !45, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !510, file: !446, line: 604, baseType: !178, size: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !510, file: !446, line: 605, baseType: !515, size: 208, offset: 128)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 208, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 26)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !510, file: !446, line: 606, baseType: !519, size: 288, offset: 352)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !446, line: 55, size: 288, elements: !520)
!520 = !{!521, !522, !523, !524, !525, !526, !527, !528, !529}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !519, file: !446, line: 57, baseType: !177, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !519, file: !446, line: 58, baseType: !177, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !519, file: !446, line: 59, baseType: !177, size: 32, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !519, file: !446, line: 60, baseType: !177, size: 32, offset: 96)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !519, file: !446, line: 61, baseType: !177, size: 32, offset: 128)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !519, file: !446, line: 62, baseType: !177, size: 32, offset: 160)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !519, file: !446, line: 63, baseType: !177, size: 32, offset: 192)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !519, file: !446, line: 64, baseType: !177, size: 32, offset: 224)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !519, file: !446, line: 65, baseType: !177, size: 32, offset: 256)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !510, file: !446, line: 607, baseType: !177, size: 32, offset: 640)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !510, file: !446, line: 608, baseType: !7, size: 64, offset: 704)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !510, file: !446, line: 609, baseType: !533, size: 112, offset: 768)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !446, line: 319, size: 112, elements: !534)
!534 = !{!535, !537, !538}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !533, file: !446, line: 320, baseType: !536, size: 48)
!536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 48, elements: !125)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !533, file: !446, line: 321, baseType: !536, size: 48, offset: 48)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !533, file: !446, line: 322, baseType: !35, size: 16, offset: 96)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !510, file: !446, line: 610, baseType: !540, size: 64, offset: 896)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !11, line: 171, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11, line: 163, size: 64, elements: !542)
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !541, file: !11, line: 165, baseType: !177, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !541, file: !11, line: 170, baseType: !545, size: 32, offset: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !541, file: !11, line: 166, size: 32, elements: !546)
!546 = !{!547, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !545, file: !11, line: 168, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !549, line: 124, baseType: !45)
!549 = !DIFile(filename: "/root/.unikraft/libs/newlib/include/stddef.h", directory: "/root/.unikraft/apps/redis/build")
!550 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !545, file: !11, line: 169, baseType: !551, size: 32)
!551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 32, elements: !66)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !510, file: !446, line: 611, baseType: !540, size: 64, offset: 960)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !510, file: !446, line: 612, baseType: !540, size: 64, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !510, file: !446, line: 613, baseType: !47, size: 64, offset: 1088)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !510, file: !446, line: 614, baseType: !556, size: 192, offset: 1152)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 192, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 24)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !510, file: !446, line: 615, baseType: !177, size: 32, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !510, file: !446, line: 616, baseType: !540, size: 64, offset: 1376)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !510, file: !446, line: 617, baseType: !540, size: 64, offset: 1440)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !510, file: !446, line: 618, baseType: !540, size: 64, offset: 1504)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !510, file: !446, line: 619, baseType: !540, size: 64, offset: 1568)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !510, file: !446, line: 620, baseType: !540, size: 64, offset: 1632)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "_h_errno", scope: !510, file: !446, line: 621, baseType: !177, size: 32, offset: 1696)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !507, file: !446, line: 631, baseType: !567, size: 2880)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !446, line: 626, size: 2880, elements: !568)
!568 = !{!569, !573}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "_nextf", scope: !567, file: !446, line: 629, baseType: !570, size: 1920)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 1920, elements: !571)
!571 = !{!572}
!572 = !DISubrange(count: 30)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "_nmalloc", scope: !567, file: !446, line: 630, baseType: !574, size: 960, offset: 1920)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 960, elements: !571)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !467, file: !446, line: 636, baseType: !576, size: 64, offset: 4032)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !446, line: 93, size: 6336, elements: !578)
!578 = !{!579, !580, !581, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !577, file: !446, line: 94, baseType: !576, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !577, file: !446, line: 95, baseType: !177, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !577, file: !446, line: 97, baseType: !582, size: 2048, offset: 128)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 2048, elements: !584)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!584 = !{!585}
!585 = !DISubrange(count: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args", scope: !577, file: !446, line: 98, baseType: !587, size: 4160, offset: 2176)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !446, line: 74, size: 4160, elements: !588)
!588 = !{!589, !591, !592, !593}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !587, file: !446, line: 75, baseType: !590, size: 2048)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, elements: !584)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !587, file: !446, line: 76, baseType: !590, size: 2048, offset: 2048)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !587, file: !446, line: 78, baseType: !499, size: 32, offset: 4096)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !587, file: !446, line: 81, baseType: !499, size: 32, offset: 4128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !467, file: !446, line: 637, baseType: !577, size: 6336, offset: 4096)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !467, file: !446, line: 641, baseType: !596, size: 64, offset: 10432)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !467, file: !446, line: 646, baseType: !599, size: 192, offset: 10496)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !446, line: 291, size: 192, elements: !600)
!600 = !{!601, !603, !604}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !599, file: !446, line: 293, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !599, file: !446, line: 294, baseType: !177, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !599, file: !446, line: 295, baseType: !471, size: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !467, file: !446, line: 648, baseType: !606, size: 4224, offset: 10688)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, size: 4224, elements: !125)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !447, file: !446, line: 199, baseType: !608, size: 64, offset: 512)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!15, !466, !6, !611, !177}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !447, file: !446, line: 202, baseType: !614, size: 64, offset: 576)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!617, !466, !6, !617, !177}
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !11, line: 114, baseType: !13)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !447, file: !446, line: 203, baseType: !619, size: 64, offset: 640)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!177, !466, !6}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !447, file: !446, line: 206, baseType: !456, size: 128, offset: 704)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !447, file: !446, line: 207, baseType: !246, size: 64, offset: 832)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !447, file: !446, line: 208, baseType: !177, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !447, file: !446, line: 211, baseType: !124, size: 24, offset: 928)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !447, file: !446, line: 212, baseType: !627, size: 8, offset: 952)
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 8, elements: !135)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !447, file: !446, line: 215, baseType: !456, size: 128, offset: 960)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !447, file: !446, line: 218, baseType: !177, size: 32, offset: 1088)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !447, file: !446, line: 219, baseType: !12, size: 64, offset: 1152)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !447, file: !446, line: 222, baseType: !466, size: 64, offset: 1216)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !447, file: !446, line: 226, baseType: !633, size: 32, offset: 1280)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !11, line: 175, baseType: !634)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_RECURSIVE_T", file: !635, line: 12, baseType: !177)
!635 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/lock.h", directory: "/root/.unikraft/apps/redis/build")
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !447, file: !446, line: 228, baseType: !540, size: 64, offset: 1312)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !447, file: !446, line: 229, baseType: !177, size: 32, offset: 1376)
!638 = !DILocalVariable(name: "sb", scope: !436, file: !3, line: 92, type: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !640, line: 27, size: 704, elements: !641)
!640 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/sys/stat.h", directory: "/root/.unikraft/apps/redis/build")
!641 = !{!642, !645, !648, !651, !654, !657, !660, !661, !662, !667, !668, !669, !672}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !639, file: !640, line: 29, baseType: !643, size: 16)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !9, line: 177, baseType: !644)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !11, line: 54, baseType: !453)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !639, file: !640, line: 30, baseType: !646, size: 16, offset: 16)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !9, line: 155, baseType: !647)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !11, line: 73, baseType: !35)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !639, file: !640, line: 31, baseType: !649, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !9, line: 205, baseType: !650)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !11, line: 88, baseType: !44)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !639, file: !640, line: 32, baseType: !652, size: 16, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !9, line: 210, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !11, line: 210, baseType: !35)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !639, file: !640, line: 33, baseType: !655, size: 16, offset: 80)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !9, line: 181, baseType: !656)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !11, line: 58, baseType: !35)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !639, file: !640, line: 34, baseType: !658, size: 16, offset: 96)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !9, line: 185, baseType: !659)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !11, line: 61, baseType: !35)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !639, file: !640, line: 35, baseType: !643, size: 16, offset: 112)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !639, file: !640, line: 36, baseType: !8, size: 64, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !639, file: !640, line: 37, baseType: !663, size: 128, offset: 192)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !289, line: 52, size: 128, elements: !664)
!664 = !{!665, !666}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !663, file: !289, line: 53, baseType: !288, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !663, file: !289, line: 54, baseType: !13, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !639, file: !640, line: 38, baseType: !663, size: 128, offset: 320)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !639, file: !640, line: 39, baseType: !663, size: 128, offset: 448)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !639, file: !640, line: 40, baseType: !670, size: 64, offset: 576)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !9, line: 118, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !11, line: 32, baseType: !13)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !639, file: !640, line: 41, baseType: !673, size: 64, offset: 640)
!673 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !9, line: 113, baseType: !674)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !11, line: 28, baseType: !13)
!675 = !DILocalVariable(name: "line", scope: !436, file: !3, line: 93, type: !178)
!676 = !DILocalVariable(name: "maxline", scope: !436, file: !3, line: 94, type: !177)
!677 = !DILocalVariable(name: "j", scope: !436, file: !3, line: 94, type: !177)
!678 = !DILocalVariable(name: "argc", scope: !679, file: !3, line: 124, type: !177)
!679 = distinct !DILexicalBlock(scope: !436, file: !3, line: 123, column: 43)
!680 = !DILocalVariable(name: "argv", scope: !679, file: !3, line: 125, type: !681)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!682 = !DILocalVariable(name: "n", scope: !679, file: !3, line: 126, type: !378)
!683 = !DILocalVariable(name: "master", scope: !679, file: !3, line: 126, type: !378)
!684 = !DILocalVariable(name: "p", scope: !679, file: !3, line: 127, type: !178)
!685 = !DILocalVariable(name: "s", scope: !679, file: !3, line: 127, type: !178)
!686 = !DILocalVariable(name: "port", scope: !679, file: !3, line: 172, type: !178)
!687 = !DILocalVariable(name: "busp", scope: !679, file: !3, line: 173, type: !178)
!688 = !DILocalVariable(name: "start", scope: !689, file: !3, line: 237, type: !177)
!689 = distinct !DILexicalBlock(scope: !690, file: !3, line: 236, column: 36)
!690 = distinct !DILexicalBlock(scope: !691, file: !3, line: 236, column: 9)
!691 = distinct !DILexicalBlock(scope: !679, file: !3, line: 236, column: 9)
!692 = !DILocalVariable(name: "stop", scope: !689, file: !3, line: 237, type: !177)
!693 = !DILocalVariable(name: "slot", scope: !694, file: !3, line: 241, type: !177)
!694 = distinct !DILexicalBlock(scope: !695, file: !3, line: 239, column: 36)
!695 = distinct !DILexicalBlock(scope: !689, file: !3, line: 239, column: 17)
!696 = !DILocalVariable(name: "direction", scope: !694, file: !3, line: 242, type: !48)
!697 = !DILocalVariable(name: "cn", scope: !694, file: !3, line: 243, type: !378)
!698 = !DILocation(line: 90, column: 29, scope: !436)
!699 = !DILocation(line: 91, column: 16, scope: !436)
!700 = !DILocation(line: 91, column: 11, scope: !436)
!701 = !DILocation(line: 92, column: 5, scope: !436)
!702 = !DILocation(line: 96, column: 12, scope: !703)
!703 = distinct !DILexicalBlock(scope: !436, file: !3, line: 96, column: 9)
!704 = !DILocation(line: 96, column: 9, scope: !436)
!705 = !DILocation(line: 97, column: 13, scope: !706)
!706 = distinct !DILexicalBlock(scope: !707, file: !3, line: 97, column: 13)
!707 = distinct !DILexicalBlock(scope: !703, file: !3, line: 96, column: 21)
!708 = !{!709, !709, i64 0}
!709 = !{!"int", !710, i64 0}
!710 = !{!"omnipotent char", !711, i64 0}
!711 = !{!"Simple C/C++ TBAA"}
!712 = !DILocation(line: 97, column: 19, scope: !706)
!713 = !DILocation(line: 97, column: 13, scope: !707)
!714 = !DILocation(line: 102, column: 36, scope: !715)
!715 = distinct !DILexicalBlock(scope: !706, file: !3, line: 99, column: 16)
!716 = !DILocation(line: 102, column: 27, scope: !715)
!717 = !DILocation(line: 100, column: 13, scope: !715)
!718 = !DILocation(line: 103, column: 13, scope: !715)
!719 = !DILocation(line: 109, column: 15, scope: !720)
!720 = distinct !DILexicalBlock(scope: !436, file: !3, line: 109, column: 9)
!721 = !DILocation(line: 92, column: 17, scope: !436)
!722 = !DILocation(line: 109, column: 9, scope: !720)
!723 = !DILocation(line: 109, column: 31, scope: !720)
!724 = !DILocation(line: 109, column: 37, scope: !720)
!725 = !DILocation(line: 109, column: 43, scope: !720)
!726 = !{!727, !729, i64 16}
!727 = !{!"stat", !728, i64 0, !728, i64 2, !709, i64 4, !728, i64 8, !728, i64 10, !728, i64 12, !728, i64 14, !729, i64 16, !730, i64 24, !730, i64 40, !730, i64 56, !729, i64 72, !729, i64 80}
!728 = !{!"short", !710, i64 0}
!729 = !{!"long", !710, i64 0}
!730 = !{!"timespec", !729, i64 0, !729, i64 8}
!731 = !DILocation(line: 109, column: 51, scope: !720)
!732 = !DILocation(line: 109, column: 9, scope: !436)
!733 = !DILocation(line: 110, column: 9, scope: !734)
!734 = distinct !DILexicalBlock(scope: !720, file: !3, line: 109, column: 57)
!735 = !DILocation(line: 111, column: 9, scope: !734)
!736 = !DILocation(line: 94, column: 9, scope: !436)
!737 = !DILocation(line: 122, column: 12, scope: !436)
!738 = !DILocation(line: 93, column: 11, scope: !436)
!739 = !DILocation(line: 123, column: 5, scope: !436)
!740 = !DILocation(line: 123, column: 11, scope: !436)
!741 = !DILocation(line: 123, column: 34, scope: !436)
!742 = !DILocation(line: 124, column: 9, scope: !679)
!743 = !DILocation(line: 132, column: 13, scope: !744)
!744 = distinct !DILexicalBlock(scope: !679, file: !3, line: 132, column: 13)
!745 = !{!710, !710, i64 0}
!746 = !DILocation(line: 132, column: 21, scope: !744)
!747 = !DILocation(line: 132, column: 29, scope: !744)
!748 = distinct !{!748, !739, !749}
!749 = !DILocation(line: 276, column: 5, scope: !436)
!750 = !DILocation(line: 132, column: 40, scope: !744)
!751 = !DILocation(line: 132, column: 13, scope: !679)
!752 = !DILocation(line: 124, column: 13, scope: !679)
!753 = !DILocation(line: 135, column: 16, scope: !679)
!754 = !DILocation(line: 125, column: 14, scope: !679)
!755 = !DILocation(line: 136, column: 18, scope: !756)
!756 = distinct !DILexicalBlock(scope: !679, file: !3, line: 136, column: 13)
!757 = !DILocation(line: 136, column: 13, scope: !679)
!758 = !DILocation(line: 140, column: 24, scope: !759)
!759 = distinct !DILexicalBlock(scope: !679, file: !3, line: 140, column: 13)
!760 = !{!761, !761, i64 0}
!761 = !{!"any pointer", !710, i64 0}
!762 = !DILocation(line: 140, column: 13, scope: !759)
!763 = !DILocation(line: 140, column: 40, scope: !759)
!764 = !DILocation(line: 0, scope: !765)
!765 = distinct !DILexicalBlock(scope: !679, file: !3, line: 160, column: 13)
!766 = !DILocation(line: 140, column: 13, scope: !679)
!767 = !DILocation(line: 141, column: 24, scope: !768)
!768 = distinct !DILexicalBlock(scope: !769, file: !3, line: 141, column: 17)
!769 = distinct !DILexicalBlock(scope: !759, file: !3, line: 140, column: 46)
!770 = !DILocation(line: 141, column: 17, scope: !769)
!771 = !DILocation(line: 0, scope: !772)
!772 = distinct !DILexicalBlock(scope: !769, file: !3, line: 142, column: 13)
!773 = !DILocation(line: 94, column: 18, scope: !436)
!774 = !DILocation(line: 142, column: 27, scope: !775)
!775 = distinct !DILexicalBlock(scope: !772, file: !3, line: 142, column: 13)
!776 = !DILocation(line: 142, column: 13, scope: !772)
!777 = !DILocation(line: 143, column: 32, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !3, line: 143, column: 21)
!779 = distinct !DILexicalBlock(scope: !775, file: !3, line: 142, column: 43)
!780 = !DILocation(line: 143, column: 21, scope: !778)
!781 = !DILocation(line: 143, column: 56, scope: !778)
!782 = !DILocation(line: 143, column: 21, scope: !779)
!783 = !DILocation(line: 145, column: 44, scope: !784)
!784 = distinct !DILexicalBlock(scope: !778, file: !3, line: 143, column: 62)
!785 = !DILocation(line: 145, column: 38, scope: !784)
!786 = !DILocation(line: 145, column: 29, scope: !784)
!787 = !DILocation(line: 144, column: 28, scope: !784)
!788 = !{!789, !761, i64 2944}
!789 = !{!"redisServer", !709, i64 0, !761, i64 8, !761, i64 16, !761, i64 24, !709, i64 32, !709, i64 36, !709, i64 40, !761, i64 48, !761, i64 56, !761, i64 64, !761, i64 72, !709, i64 80, !709, i64 84, !709, i64 88, !709, i64 92, !761, i64 96, !761, i64 104, !709, i64 112, !709, i64 116, !710, i64 120, !709, i64 164, !729, i64 168, !709, i64 176, !761, i64 184, !761, i64 192, !761, i64 200, !710, i64 208, !709, i64 216, !709, i64 220, !710, i64 224, !709, i64 352, !761, i64 360, !709, i64 368, !710, i64 372, !709, i64 436, !709, i64 440, !710, i64 444, !709, i64 508, !761, i64 512, !761, i64 520, !761, i64 528, !761, i64 536, !761, i64 544, !761, i64 552, !761, i64 560, !709, i64 568, !790, i64 576, !710, i64 584, !761, i64 840, !729, i64 848, !709, i64 856, !709, i64 860, !729, i64 864, !729, i64 872, !729, i64 880, !729, i64 888, !761, i64 896, !761, i64 904, !761, i64 912, !761, i64 920, !761, i64 928, !761, i64 936, !761, i64 944, !761, i64 952, !761, i64 960, !761, i64 968, !761, i64 976, !761, i64 984, !761, i64 992, !729, i64 1000, !790, i64 1008, !790, i64 1016, !790, i64 1024, !791, i64 1032, !790, i64 1040, !790, i64 1048, !790, i64 1056, !790, i64 1064, !790, i64 1072, !790, i64 1080, !790, i64 1088, !790, i64 1096, !790, i64 1104, !729, i64 1112, !790, i64 1120, !791, i64 1128, !790, i64 1136, !790, i64 1144, !790, i64 1152, !790, i64 1160, !761, i64 1168, !790, i64 1176, !790, i64 1184, !729, i64 1192, !792, i64 1200, !790, i64 1240, !790, i64 1248, !729, i64 1256, !729, i64 1264, !710, i64 1272, !709, i64 1728, !709, i64 1732, !709, i64 1736, !709, i64 1740, !709, i64 1744, !729, i64 1752, !709, i64 1760, !709, i64 1764, !709, i64 1768, !709, i64 1772, !729, i64 1776, !729, i64 1784, !709, i64 1792, !709, i64 1796, !709, i64 1800, !709, i64 1804, !710, i64 1808, !709, i64 1880, !709, i64 1884, !761, i64 1888, !709, i64 1896, !709, i64 1900, !729, i64 1904, !729, i64 1912, !729, i64 1920, !729, i64 1928, !709, i64 1936, !709, i64 1940, !761, i64 1944, !761, i64 1952, !709, i64 1960, !709, i64 1964, !729, i64 1968, !729, i64 1976, !729, i64 1984, !729, i64 1992, !709, i64 2000, !729, i64 2008, !709, i64 2016, !709, i64 2020, !709, i64 2024, !709, i64 2028, !709, i64 2032, !709, i64 2036, !709, i64 2040, !709, i64 2044, !709, i64 2048, !709, i64 2052, !709, i64 2056, !709, i64 2060, !709, i64 2064, !761, i64 2072, !790, i64 2080, !790, i64 2088, !709, i64 2096, !761, i64 2104, !709, i64 2112, !761, i64 2120, !709, i64 2128, !709, i64 2132, !729, i64 2136, !729, i64 2144, !729, i64 2152, !729, i64 2160, !709, i64 2168, !709, i64 2172, !709, i64 2176, !709, i64 2180, !709, i64 2184, !709, i64 2188, !710, i64 2192, !793, i64 2200, !794, i64 2224, !761, i64 2240, !709, i64 2248, !761, i64 2256, !709, i64 2264, !710, i64 2268, !710, i64 2309, !790, i64 2352, !790, i64 2360, !709, i64 2368, !709, i64 2372, !761, i64 2376, !790, i64 2384, !790, i64 2392, !790, i64 2400, !790, i64 2408, !729, i64 2416, !729, i64 2424, !709, i64 2432, !709, i64 2436, !709, i64 2440, !709, i64 2444, !709, i64 2448, !761, i64 2456, !761, i64 2464, !709, i64 2472, !709, i64 2476, !761, i64 2480, !761, i64 2488, !709, i64 2496, !709, i64 2500, !729, i64 2504, !729, i64 2512, !729, i64 2520, !709, i64 2528, !709, i64 2532, !761, i64 2536, !729, i64 2544, !709, i64 2552, !709, i64 2556, !709, i64 2560, !729, i64 2568, !709, i64 2576, !709, i64 2580, !709, i64 2584, !761, i64 2592, !710, i64 2600, !790, i64 2648, !709, i64 2656, !761, i64 2664, !761, i64 2672, !709, i64 2680, !761, i64 2688, !709, i64 2696, !709, i64 2700, !790, i64 2704, !709, i64 2712, !709, i64 2716, !709, i64 2720, !709, i64 2724, !790, i64 2728, !709, i64 2736, !710, i64 2740, !761, i64 2768, !761, i64 2776, !709, i64 2784, !709, i64 2788, !709, i64 2792, !709, i64 2796, !729, i64 2800, !729, i64 2808, !729, i64 2816, !729, i64 2824, !729, i64 2832, !729, i64 2840, !729, i64 2848, !729, i64 2856, !709, i64 2864, !709, i64 2868, !729, i64 2872, !729, i64 2880, !709, i64 2888, !790, i64 2896, !761, i64 2904, !761, i64 2912, !709, i64 2920, !709, i64 2924, !790, i64 2928, !761, i64 2936, !761, i64 2944, !709, i64 2952, !709, i64 2956, !709, i64 2960, !709, i64 2964, !761, i64 2968, !709, i64 2976, !709, i64 2980, !709, i64 2984, !761, i64 2992, !761, i64 3000, !761, i64 3008, !761, i64 3016, !790, i64 3024, !790, i64 3032, !790, i64 3040, !709, i64 3048, !709, i64 3052, !709, i64 3056, !709, i64 3060, !709, i64 3064, !709, i64 3068, !709, i64 3072, !709, i64 3076, !709, i64 3080, !709, i64 3084, !709, i64 3088, !790, i64 3096, !761, i64 3104, !761, i64 3112, !761, i64 3120, !709, i64 3128, !709, i64 3132, !709, i64 3136, !729, i64 3144, !761, i64 3152, !761, i64 3160, !761, i64 3168}
!790 = !{!"long long", !710, i64 0}
!791 = !{!"double", !710, i64 0}
!792 = !{!"malloc_stats", !729, i64 0, !729, i64 8, !729, i64 16, !729, i64 24, !729, i64 32}
!793 = !{!"", !709, i64 0, !729, i64 8, !790, i64 16}
!794 = !{!"redisOpArray", !761, i64 0, !709, i64 8}
!795 = !DILocation(line: 144, column: 37, scope: !784)
!796 = !DILocation(line: 144, column: 50, scope: !784)
!797 = !{!798, !729, i64 8}
!798 = !{!"clusterState", !761, i64 0, !729, i64 8, !709, i64 16, !709, i64 20, !761, i64 24, !761, i64 32, !710, i64 40, !710, i64 131112, !710, i64 262184, !710, i64 393256, !761, i64 524328, !790, i64 524336, !709, i64 524344, !709, i64 524348, !709, i64 524352, !729, i64 524360, !709, i64 524368, !790, i64 524376, !761, i64 524384, !790, i64 524392, !709, i64 524400, !729, i64 524408, !709, i64 524416, !710, i64 524424, !710, i64 524504, !790, i64 524584}
!799 = !DILocation(line: 146, column: 17, scope: !784)
!800 = !DILocation(line: 146, column: 28, scope: !801)
!801 = distinct !DILexicalBlock(scope: !778, file: !3, line: 146, column: 28)
!802 = !DILocation(line: 146, column: 64, scope: !801)
!803 = !DILocation(line: 146, column: 28, scope: !778)
!804 = !DILocation(line: 148, column: 44, scope: !805)
!805 = distinct !DILexicalBlock(scope: !801, file: !3, line: 146, column: 70)
!806 = !DILocation(line: 148, column: 38, scope: !805)
!807 = !DILocation(line: 148, column: 29, scope: !805)
!808 = !DILocation(line: 147, column: 28, scope: !805)
!809 = !DILocation(line: 147, column: 37, scope: !805)
!810 = !DILocation(line: 147, column: 51, scope: !805)
!811 = !{!798, !729, i64 524408}
!812 = !DILocation(line: 149, column: 17, scope: !805)
!813 = !DILocation(line: 150, column: 21, scope: !814)
!814 = distinct !DILexicalBlock(scope: !801, file: !3, line: 149, column: 24)
!815 = !DILocation(line: 142, column: 37, scope: !775)
!816 = !DILocation(line: 142, column: 13, scope: !775)
!817 = !DILocation(line: 142, column: 29, scope: !775)
!818 = distinct !{!818, !776, !819}
!819 = !DILocation(line: 154, column: 13, scope: !772)
!820 = !DILocation(line: 155, column: 13, scope: !769)
!821 = !DILocation(line: 156, column: 13, scope: !769)
!822 = !DILocation(line: 160, column: 18, scope: !765)
!823 = !DILocation(line: 160, column: 13, scope: !679)
!824 = !DILocalVariable(name: "name", arg: 1, scope: !825, file: !3, line: 936, type: !611)
!825 = distinct !DISubprogram(name: "clusterLookupNode", scope: !3, file: !3, line: 936, type: !826, isLocal: false, isDefinition: true, scopeLine: 936, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !828)
!826 = !DISubroutineType(types: !827)
!827 = !{!378, !611}
!828 = !{!824, !829, !830}
!829 = !DILocalVariable(name: "s", scope: !825, file: !3, line: 937, type: !189)
!830 = !DILocalVariable(name: "de", scope: !825, file: !3, line: 938, type: !340)
!831 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !832)
!832 = distinct !DILocation(line: 163, column: 13, scope: !679)
!833 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !832)
!834 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !832)
!835 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !832)
!836 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !832)
!837 = !{!798, !761, i64 24}
!838 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !832)
!839 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !832)
!840 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !832)
!841 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !832)
!842 = distinct !DILexicalBlock(scope: !825, file: !3, line: 942, column: 9)
!843 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !832)
!844 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !832)
!845 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !832)
!846 = !DILocation(line: 126, column: 22, scope: !679)
!847 = !DILocation(line: 164, column: 13, scope: !679)
!848 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !832)
!849 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !832)
!850 = !DILocation(line: 164, column: 14, scope: !851)
!851 = distinct !DILexicalBlock(scope: !679, file: !3, line: 164, column: 13)
!852 = !DILocation(line: 165, column: 35, scope: !853)
!853 = distinct !DILexicalBlock(scope: !851, file: !3, line: 164, column: 17)
!854 = !DILocation(line: 165, column: 17, scope: !853)
!855 = !DILocalVariable(name: "node", arg: 1, scope: !856, file: !3, line: 887, type: !378)
!856 = distinct !DISubprogram(name: "clusterAddNode", scope: !3, file: !3, line: 887, type: !857, isLocal: false, isDefinition: true, scopeLine: 887, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !859)
!857 = !DISubroutineType(types: !858)
!858 = !{!177, !378}
!859 = !{!855, !860}
!860 = !DILocalVariable(name: "retval", scope: !856, file: !3, line: 888, type: !177)
!861 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !862)
!862 = distinct !DILocation(line: 166, column: 13, scope: !853)
!863 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !862)
!864 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !862)
!865 = !DILocation(line: 891, column: 23, scope: !856, inlinedAt: !862)
!866 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !862)
!867 = !DILocation(line: 891, column: 52, scope: !856, inlinedAt: !862)
!868 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !862)
!869 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !862)
!870 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !862)
!871 = !DILocation(line: 167, column: 9, scope: !853)
!872 = !DILocation(line: 0, scope: !853)
!873 = !DILocation(line: 169, column: 26, scope: !874)
!874 = distinct !DILexicalBlock(scope: !679, file: !3, line: 169, column: 13)
!875 = !DILocation(line: 169, column: 18, scope: !874)
!876 = !DILocation(line: 127, column: 15, scope: !679)
!877 = !DILocation(line: 169, column: 40, scope: !874)
!878 = !DILocation(line: 169, column: 13, scope: !679)
!879 = !DILocation(line: 170, column: 12, scope: !679)
!880 = !DILocation(line: 171, column: 16, scope: !679)
!881 = !DILocation(line: 171, column: 22, scope: !679)
!882 = !DILocation(line: 171, column: 30, scope: !679)
!883 = !DILocation(line: 171, column: 45, scope: !679)
!884 = !DILocation(line: 171, column: 9, scope: !679)
!885 = !DILocation(line: 172, column: 23, scope: !679)
!886 = !DILocation(line: 172, column: 15, scope: !679)
!887 = !DILocation(line: 173, column: 22, scope: !679)
!888 = !DILocation(line: 173, column: 15, scope: !679)
!889 = !DILocation(line: 174, column: 13, scope: !890)
!890 = distinct !DILexicalBlock(scope: !679, file: !3, line: 174, column: 13)
!891 = !DILocation(line: 174, column: 13, scope: !679)
!892 = !DILocation(line: 175, column: 19, scope: !893)
!893 = distinct !DILexicalBlock(scope: !890, file: !3, line: 174, column: 19)
!894 = !DILocation(line: 176, column: 17, scope: !893)
!895 = !DILocation(line: 177, column: 9, scope: !893)
!896 = !DILocation(line: 0, scope: !679)
!897 = !DILocation(line: 178, column: 19, scope: !679)
!898 = !DILocation(line: 178, column: 12, scope: !679)
!899 = !DILocation(line: 178, column: 17, scope: !679)
!900 = !{!901, !709, i64 2240}
!901 = !{!"clusterNode", !790, i64 0, !710, i64 8, !709, i64 48, !729, i64 56, !710, i64 64, !709, i64 2112, !709, i64 2116, !761, i64 2120, !761, i64 2128, !790, i64 2136, !790, i64 2144, !790, i64 2152, !790, i64 2160, !790, i64 2168, !790, i64 2176, !790, i64 2184, !710, i64 2192, !709, i64 2240, !709, i64 2244, !761, i64 2248, !761, i64 2256}
!902 = !DILocation(line: 182, column: 20, scope: !679)
!903 = !DILocation(line: 182, column: 27, scope: !679)
!904 = !DILocation(line: 182, column: 48, scope: !679)
!905 = !DILocation(line: 182, column: 12, scope: !679)
!906 = !DILocation(line: 182, column: 18, scope: !679)
!907 = !{!901, !709, i64 2244}
!908 = !DILocation(line: 185, column: 17, scope: !679)
!909 = !DILocation(line: 127, column: 19, scope: !679)
!910 = !DILocation(line: 186, column: 9, scope: !679)
!911 = !DILocation(line: 187, column: 17, scope: !912)
!912 = distinct !DILexicalBlock(scope: !679, file: !3, line: 186, column: 18)
!913 = !DILocation(line: 188, column: 17, scope: !914)
!914 = distinct !DILexicalBlock(scope: !912, file: !3, line: 188, column: 17)
!915 = !DILocation(line: 188, column: 17, scope: !912)
!916 = !DILocation(line: 188, column: 23, scope: !914)
!917 = !DILocation(line: 188, column: 20, scope: !914)
!918 = !DILocation(line: 189, column: 18, scope: !919)
!919 = distinct !DILexicalBlock(scope: !912, file: !3, line: 189, column: 17)
!920 = !DILocation(line: 189, column: 17, scope: !912)
!921 = !DILocation(line: 190, column: 17, scope: !922)
!922 = distinct !DILexicalBlock(scope: !919, file: !3, line: 189, column: 42)
!923 = !{!798, !761, i64 0}
!924 = !DILocation(line: 191, column: 49, scope: !922)
!925 = !DILocation(line: 191, column: 24, scope: !922)
!926 = !DILocation(line: 192, column: 26, scope: !922)
!927 = !{!901, !709, i64 48}
!928 = !DILocation(line: 193, column: 13, scope: !922)
!929 = !DILocation(line: 193, column: 25, scope: !930)
!930 = distinct !DILexicalBlock(scope: !919, file: !3, line: 193, column: 24)
!931 = !DILocation(line: 193, column: 24, scope: !919)
!932 = !DILocation(line: 194, column: 26, scope: !933)
!933 = distinct !DILexicalBlock(scope: !930, file: !3, line: 193, column: 49)
!934 = !DILocation(line: 195, column: 13, scope: !933)
!935 = !DILocation(line: 195, column: 25, scope: !936)
!936 = distinct !DILexicalBlock(scope: !930, file: !3, line: 195, column: 24)
!937 = !DILocation(line: 195, column: 24, scope: !930)
!938 = !DILocation(line: 196, column: 26, scope: !939)
!939 = distinct !DILexicalBlock(scope: !936, file: !3, line: 195, column: 48)
!940 = !DILocation(line: 197, column: 13, scope: !939)
!941 = !DILocation(line: 197, column: 25, scope: !942)
!942 = distinct !DILexicalBlock(scope: !936, file: !3, line: 197, column: 24)
!943 = !DILocation(line: 197, column: 24, scope: !936)
!944 = !DILocation(line: 198, column: 26, scope: !945)
!945 = distinct !DILexicalBlock(scope: !942, file: !3, line: 197, column: 48)
!946 = !DILocation(line: 199, column: 13, scope: !945)
!947 = !DILocation(line: 199, column: 25, scope: !948)
!948 = distinct !DILexicalBlock(scope: !942, file: !3, line: 199, column: 24)
!949 = !DILocation(line: 199, column: 24, scope: !942)
!950 = !DILocation(line: 200, column: 26, scope: !951)
!951 = distinct !DILexicalBlock(scope: !948, file: !3, line: 199, column: 47)
!952 = !DILocation(line: 201, column: 32, scope: !951)
!953 = !DILocation(line: 201, column: 30, scope: !951)
!954 = !{!901, !790, i64 2152}
!955 = !DILocation(line: 202, column: 13, scope: !951)
!956 = !DILocation(line: 202, column: 25, scope: !957)
!957 = distinct !DILexicalBlock(scope: !948, file: !3, line: 202, column: 24)
!958 = !DILocation(line: 202, column: 24, scope: !948)
!959 = !DILocation(line: 203, column: 26, scope: !960)
!960 = distinct !DILexicalBlock(scope: !957, file: !3, line: 202, column: 52)
!961 = !DILocation(line: 204, column: 13, scope: !960)
!962 = !DILocation(line: 204, column: 25, scope: !963)
!963 = distinct !DILexicalBlock(scope: !957, file: !3, line: 204, column: 24)
!964 = !DILocation(line: 204, column: 24, scope: !957)
!965 = !DILocation(line: 205, column: 26, scope: !966)
!966 = distinct !DILexicalBlock(scope: !963, file: !3, line: 204, column: 49)
!967 = !DILocation(line: 206, column: 13, scope: !966)
!968 = !DILocation(line: 206, column: 25, scope: !969)
!969 = distinct !DILexicalBlock(scope: !963, file: !3, line: 206, column: 24)
!970 = !DILocation(line: 206, column: 24, scope: !963)
!971 = !DILocation(line: 207, column: 26, scope: !972)
!972 = distinct !DILexicalBlock(scope: !969, file: !3, line: 206, column: 53)
!973 = !DILocation(line: 208, column: 13, scope: !972)
!974 = !DILocation(line: 208, column: 25, scope: !975)
!975 = distinct !DILexicalBlock(scope: !969, file: !3, line: 208, column: 24)
!976 = !DILocation(line: 208, column: 24, scope: !969)
!977 = !DILocation(line: 211, column: 17, scope: !978)
!978 = distinct !DILexicalBlock(scope: !975, file: !3, line: 210, column: 20)
!979 = !DILocation(line: 0, scope: !922)
!980 = !DILocation(line: 213, column: 17, scope: !912)
!981 = !DILocation(line: 213, column: 25, scope: !982)
!982 = distinct !DILexicalBlock(scope: !912, file: !3, line: 213, column: 17)
!983 = !DILocation(line: 213, column: 20, scope: !982)
!984 = !DILocation(line: 218, column: 13, scope: !985)
!985 = distinct !DILexicalBlock(scope: !679, file: !3, line: 218, column: 13)
!986 = !DILocation(line: 218, column: 24, scope: !985)
!987 = !DILocation(line: 218, column: 13, scope: !679)
!988 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !989)
!989 = distinct !DILocation(line: 219, column: 22, scope: !990)
!990 = distinct !DILexicalBlock(scope: !985, file: !3, line: 218, column: 32)
!991 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !989)
!992 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !989)
!993 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !989)
!994 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !989)
!995 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !989)
!996 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !989)
!997 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !989)
!998 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !989)
!999 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !989)
!1000 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !989)
!1001 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !989)
!1002 = !DILocation(line: 126, column: 26, scope: !679)
!1003 = !DILocation(line: 220, column: 17, scope: !990)
!1004 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !989)
!1005 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !989)
!1006 = !DILocation(line: 220, column: 18, scope: !1007)
!1007 = distinct !DILexicalBlock(scope: !990, file: !3, line: 220, column: 17)
!1008 = !DILocation(line: 221, column: 44, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !1007, file: !3, line: 220, column: 26)
!1010 = !DILocation(line: 221, column: 26, scope: !1009)
!1011 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !1012)
!1012 = distinct !DILocation(line: 222, column: 17, scope: !1009)
!1013 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !1012)
!1014 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !1012)
!1015 = !DILocation(line: 891, column: 23, scope: !856, inlinedAt: !1012)
!1016 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !1012)
!1017 = !DILocation(line: 891, column: 52, scope: !856, inlinedAt: !1012)
!1018 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !1012)
!1019 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !1012)
!1020 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !1012)
!1021 = !DILocation(line: 223, column: 13, scope: !1009)
!1022 = !DILocation(line: 0, scope: !1009)
!1023 = !DILocation(line: 224, column: 16, scope: !990)
!1024 = !DILocation(line: 224, column: 24, scope: !990)
!1025 = !{!901, !761, i64 2128}
!1026 = !DILocalVariable(name: "master", arg: 1, scope: !1027, file: !3, line: 839, type: !378)
!1027 = distinct !DISubprogram(name: "clusterNodeAddSlave", scope: !3, file: !3, line: 839, type: !1028, isLocal: false, isDefinition: true, scopeLine: 839, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1030)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!177, !378, !378}
!1030 = !{!1026, !1031, !1032}
!1031 = !DILocalVariable(name: "slave", arg: 2, scope: !1027, file: !3, line: 839, type: !378)
!1032 = !DILocalVariable(name: "j", scope: !1027, file: !3, line: 840, type: !177)
!1033 = !DILocation(line: 839, column: 38, scope: !1027, inlinedAt: !1034)
!1034 = distinct !DILocation(line: 225, column: 13, scope: !990)
!1035 = !DILocation(line: 839, column: 59, scope: !1027, inlinedAt: !1034)
!1036 = !DILocation(line: 840, column: 9, scope: !1027, inlinedAt: !1034)
!1037 = !DILocation(line: 843, column: 10, scope: !1038, inlinedAt: !1034)
!1038 = distinct !DILexicalBlock(scope: !1027, file: !3, line: 843, column: 5)
!1039 = !DILocation(line: 843, column: 29, scope: !1040, inlinedAt: !1034)
!1040 = distinct !DILexicalBlock(scope: !1038, file: !3, line: 843, column: 5)
!1041 = !{!901, !709, i64 2116}
!1042 = !DILocation(line: 843, column: 19, scope: !1040, inlinedAt: !1034)
!1043 = !DILocation(line: 0, scope: !1027, inlinedAt: !1034)
!1044 = !{!901, !761, i64 2120}
!1045 = !DILocation(line: 843, column: 5, scope: !1038, inlinedAt: !1034)
!1046 = !DILocation(line: 844, column: 13, scope: !1047, inlinedAt: !1034)
!1047 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 844, column: 13)
!1048 = !DILocation(line: 844, column: 31, scope: !1047, inlinedAt: !1034)
!1049 = !DILocation(line: 844, column: 13, scope: !1040, inlinedAt: !1034)
!1050 = !DILocation(line: 843, column: 41, scope: !1040, inlinedAt: !1034)
!1051 = !DILocation(line: 843, column: 5, scope: !1040, inlinedAt: !1034)
!1052 = distinct !{!1052, !1053, !1054}
!1053 = !DILocation(line: 843, column: 5, scope: !1038)
!1054 = !DILocation(line: 844, column: 48, scope: !1038)
!1055 = !DILocation(line: 845, column: 31, scope: !1027, inlinedAt: !1034)
!1056 = !DILocation(line: 846, column: 48, scope: !1027, inlinedAt: !1034)
!1057 = !DILocation(line: 846, column: 30, scope: !1027, inlinedAt: !1034)
!1058 = !DILocation(line: 846, column: 29, scope: !1027, inlinedAt: !1034)
!1059 = !DILocation(line: 845, column: 22, scope: !1027, inlinedAt: !1034)
!1060 = !DILocation(line: 845, column: 20, scope: !1027, inlinedAt: !1034)
!1061 = !DILocation(line: 847, column: 28, scope: !1027, inlinedAt: !1034)
!1062 = !DILocation(line: 847, column: 5, scope: !1027, inlinedAt: !1034)
!1063 = !DILocation(line: 847, column: 39, scope: !1027, inlinedAt: !1034)
!1064 = !DILocation(line: 848, column: 22, scope: !1027, inlinedAt: !1034)
!1065 = !DILocation(line: 849, column: 13, scope: !1027, inlinedAt: !1034)
!1066 = !DILocation(line: 849, column: 19, scope: !1027, inlinedAt: !1034)
!1067 = !DILocation(line: 850, column: 5, scope: !1027, inlinedAt: !1034)
!1068 = !DILocation(line: 0, scope: !990)
!1069 = !DILocation(line: 851, column: 1, scope: !1027, inlinedAt: !1034)
!1070 = !DILocation(line: 226, column: 9, scope: !990)
!1071 = !DILocation(line: 229, column: 18, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !679, file: !3, line: 229, column: 13)
!1073 = !DILocation(line: 229, column: 13, scope: !1072)
!1074 = !DILocation(line: 229, column: 13, scope: !679)
!1075 = !DILocation(line: 229, column: 43, scope: !1072)
!1076 = !DILocation(line: 229, column: 31, scope: !1072)
!1077 = !DILocation(line: 229, column: 41, scope: !1072)
!1078 = !{!901, !790, i64 2136}
!1079 = !DILocation(line: 229, column: 28, scope: !1072)
!1080 = !DILocation(line: 230, column: 18, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !679, file: !3, line: 230, column: 13)
!1082 = !DILocation(line: 230, column: 13, scope: !1081)
!1083 = !DILocation(line: 230, column: 13, scope: !679)
!1084 = !DILocation(line: 230, column: 47, scope: !1081)
!1085 = !DILocation(line: 230, column: 31, scope: !1081)
!1086 = !DILocation(line: 230, column: 45, scope: !1081)
!1087 = !{!901, !790, i64 2144}
!1088 = !DILocation(line: 230, column: 28, scope: !1081)
!1089 = !DILocation(line: 233, column: 35, scope: !679)
!1090 = !DILocation(line: 233, column: 26, scope: !679)
!1091 = !DILocation(line: 233, column: 12, scope: !679)
!1092 = !DILocation(line: 233, column: 24, scope: !679)
!1093 = !{!901, !729, i64 56}
!1094 = !DILocation(line: 236, column: 14, scope: !691)
!1095 = !DILocation(line: 236, column: 25, scope: !690)
!1096 = !DILocation(line: 236, column: 23, scope: !690)
!1097 = !DILocation(line: 236, column: 9, scope: !691)
!1098 = !DILocation(line: 239, column: 17, scope: !695)
!1099 = !DILocation(line: 239, column: 28, scope: !695)
!1100 = !DILocation(line: 239, column: 17, scope: !689)
!1101 = !DILocation(line: 0, scope: !1102)
!1102 = distinct !DILexicalBlock(scope: !695, file: !3, line: 263, column: 24)
!1103 = !DILocation(line: 0, scope: !695)
!1104 = !DILocation(line: 246, column: 17, scope: !694)
!1105 = !DILocation(line: 247, column: 20, scope: !694)
!1106 = !DILocation(line: 248, column: 29, scope: !694)
!1107 = !DILocation(line: 242, column: 22, scope: !694)
!1108 = !DILocation(line: 249, column: 29, scope: !694)
!1109 = !DILocation(line: 249, column: 36, scope: !694)
!1110 = !DILocation(line: 249, column: 24, scope: !694)
!1111 = !DILocation(line: 241, column: 21, scope: !694)
!1112 = !DILocation(line: 250, column: 30, scope: !1113)
!1113 = distinct !DILexicalBlock(scope: !694, file: !3, line: 250, column: 21)
!1114 = !DILocation(line: 250, column: 56, scope: !1113)
!1115 = !DILocation(line: 251, column: 19, scope: !694)
!1116 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !1117)
!1117 = distinct !DILocation(line: 252, column: 22, scope: !694)
!1118 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !1117)
!1119 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !1117)
!1120 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !1117)
!1121 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !1117)
!1122 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !1117)
!1123 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !1117)
!1124 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !1117)
!1125 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !1117)
!1126 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !1117)
!1127 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !1117)
!1128 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !1117)
!1129 = !DILocation(line: 243, column: 30, scope: !694)
!1130 = !DILocation(line: 253, column: 21, scope: !694)
!1131 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !1117)
!1132 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !1117)
!1133 = !DILocation(line: 253, column: 22, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !694, file: !3, line: 253, column: 21)
!1135 = !DILocalVariable(name: "nodename", arg: 1, scope: !1136, file: !3, line: 695, type: !178)
!1136 = distinct !DISubprogram(name: "createClusterNode", scope: !3, file: !3, line: 695, type: !1137, isLocal: false, isDefinition: true, scopeLine: 695, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1139)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!378, !178, !177}
!1139 = !{!1135, !1140, !1141}
!1140 = !DILocalVariable(name: "flags", arg: 2, scope: !1136, file: !3, line: 695, type: !177)
!1141 = !DILocalVariable(name: "node", scope: !1136, file: !3, line: 696, type: !378)
!1142 = !DILocation(line: 695, column: 38, scope: !1136, inlinedAt: !1143)
!1143 = distinct !DILocation(line: 254, column: 26, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1134, file: !3, line: 253, column: 26)
!1145 = !DILocation(line: 695, column: 52, scope: !1136, inlinedAt: !1143)
!1146 = !DILocation(line: 696, column: 25, scope: !1136, inlinedAt: !1143)
!1147 = !DILocation(line: 696, column: 18, scope: !1136, inlinedAt: !1143)
!1148 = !DILocation(line: 0, scope: !1149, inlinedAt: !1143)
!1149 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 698, column: 9)
!1150 = !DILocation(line: 698, column: 9, scope: !1136, inlinedAt: !1143)
!1151 = !DILocation(line: 699, column: 9, scope: !1149, inlinedAt: !1143)
!1152 = !DILocation(line: 702, column: 19, scope: !1136, inlinedAt: !1143)
!1153 = !DILocation(line: 702, column: 11, scope: !1136, inlinedAt: !1143)
!1154 = !DILocation(line: 702, column: 17, scope: !1136, inlinedAt: !1143)
!1155 = !{!901, !790, i64 0}
!1156 = !DILocation(line: 703, column: 11, scope: !1136, inlinedAt: !1143)
!1157 = !DILocation(line: 703, column: 23, scope: !1136, inlinedAt: !1143)
!1158 = !DILocation(line: 704, column: 11, scope: !1136, inlinedAt: !1143)
!1159 = !DILocation(line: 704, column: 17, scope: !1136, inlinedAt: !1143)
!1160 = !DILocation(line: 705, column: 18, scope: !1136, inlinedAt: !1143)
!1161 = !DILocation(line: 705, column: 5, scope: !1136, inlinedAt: !1143)
!1162 = !DILocation(line: 706, column: 11, scope: !1136, inlinedAt: !1143)
!1163 = !DILocation(line: 706, column: 20, scope: !1136, inlinedAt: !1143)
!1164 = !{!901, !709, i64 2112}
!1165 = !DILocation(line: 707, column: 11, scope: !1136, inlinedAt: !1143)
!1166 = !DILocation(line: 707, column: 21, scope: !1136, inlinedAt: !1143)
!1167 = !DILocation(line: 708, column: 11, scope: !1136, inlinedAt: !1143)
!1168 = !DILocation(line: 708, column: 18, scope: !1136, inlinedAt: !1143)
!1169 = !DILocation(line: 709, column: 11, scope: !1136, inlinedAt: !1143)
!1170 = !DILocation(line: 709, column: 19, scope: !1136, inlinedAt: !1143)
!1171 = !DILocation(line: 710, column: 11, scope: !1136, inlinedAt: !1143)
!1172 = !DILocation(line: 710, column: 21, scope: !1136, inlinedAt: !1143)
!1173 = !{!790, !790, i64 0}
!1174 = !DILocation(line: 711, column: 11, scope: !1136, inlinedAt: !1143)
!1175 = !DILocation(line: 711, column: 21, scope: !1136, inlinedAt: !1143)
!1176 = !DILocation(line: 712, column: 11, scope: !1136, inlinedAt: !1143)
!1177 = !DILocation(line: 712, column: 16, scope: !1136, inlinedAt: !1143)
!1178 = !{!901, !761, i64 2248}
!1179 = !DILocation(line: 713, column: 18, scope: !1136, inlinedAt: !1143)
!1180 = !DILocation(line: 713, column: 5, scope: !1136, inlinedAt: !1143)
!1181 = !DILocation(line: 714, column: 11, scope: !1136, inlinedAt: !1143)
!1182 = !DILocation(line: 714, column: 16, scope: !1136, inlinedAt: !1143)
!1183 = !DILocation(line: 715, column: 11, scope: !1136, inlinedAt: !1143)
!1184 = !DILocation(line: 715, column: 17, scope: !1136, inlinedAt: !1143)
!1185 = !DILocation(line: 716, column: 26, scope: !1136, inlinedAt: !1143)
!1186 = !DILocation(line: 716, column: 11, scope: !1136, inlinedAt: !1143)
!1187 = !DILocation(line: 716, column: 24, scope: !1136, inlinedAt: !1143)
!1188 = !{!901, !761, i64 2256}
!1189 = !DILocation(line: 717, column: 11, scope: !1136, inlinedAt: !1143)
!1190 = !DILocation(line: 717, column: 22, scope: !1136, inlinedAt: !1143)
!1191 = !{!901, !790, i64 2160}
!1192 = !DILocation(line: 718, column: 11, scope: !1136, inlinedAt: !1143)
!1193 = !DILocation(line: 718, column: 25, scope: !1136, inlinedAt: !1143)
!1194 = !{!901, !790, i64 2176}
!1195 = !DILocation(line: 719, column: 11, scope: !1136, inlinedAt: !1143)
!1196 = !DILocation(line: 719, column: 28, scope: !1136, inlinedAt: !1143)
!1197 = !{!901, !790, i64 2168}
!1198 = !DILocation(line: 720, column: 11, scope: !1136, inlinedAt: !1143)
!1199 = !DILocation(line: 720, column: 23, scope: !1136, inlinedAt: !1143)
!1200 = !{!901, !790, i64 2184}
!1201 = !DILocation(line: 721, column: 5, scope: !1136, inlinedAt: !1143)
!1202 = !{!1203, !761, i64 24}
!1203 = !{!"list", !761, i64 0, !761, i64 8, !761, i64 16, !761, i64 24, !761, i64 32, !729, i64 40}
!1204 = !DILocation(line: 722, column: 5, scope: !1136, inlinedAt: !1143)
!1205 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !1206)
!1206 = distinct !DILocation(line: 255, column: 21, scope: !1144)
!1207 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !1206)
!1208 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !1206)
!1209 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !1206)
!1210 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !1206)
!1211 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !1206)
!1212 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !1206)
!1213 = !DILocation(line: 256, column: 17, scope: !1144)
!1214 = !DILocation(line: 0, scope: !1144)
!1215 = !DILocation(line: 257, column: 31, scope: !1216)
!1216 = distinct !DILexicalBlock(scope: !694, file: !3, line: 257, column: 21)
!1217 = !DILocation(line: 0, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1216, file: !3, line: 259, column: 24)
!1219 = !DILocation(line: 257, column: 21, scope: !694)
!1220 = !DILocation(line: 258, column: 21, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1216, file: !3, line: 257, column: 39)
!1222 = !DILocation(line: 260, column: 21, scope: !1218)
!1223 = !DILocation(line: 262, column: 17, scope: !694)
!1224 = !DILocation(line: 263, column: 24, scope: !695)
!1225 = !DILocation(line: 264, column: 20, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1102, file: !3, line: 263, column: 59)
!1227 = !DILocation(line: 265, column: 30, scope: !1226)
!1228 = !DILocation(line: 265, column: 25, scope: !1226)
!1229 = !DILocation(line: 237, column: 17, scope: !689)
!1230 = !DILocation(line: 266, column: 30, scope: !1226)
!1231 = !DILocation(line: 266, column: 24, scope: !1226)
!1232 = !DILocation(line: 237, column: 24, scope: !689)
!1233 = !DILocation(line: 267, column: 13, scope: !1226)
!1234 = !DILocation(line: 268, column: 37, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1102, file: !3, line: 267, column: 20)
!1236 = !DILocation(line: 268, column: 32, scope: !1235)
!1237 = !DILocation(line: 0, scope: !1235)
!1238 = !DILocation(line: 270, column: 27, scope: !1239)
!1239 = distinct !DILexicalBlock(scope: !689, file: !3, line: 270, column: 17)
!1240 = !DILocation(line: 271, column: 26, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !689, file: !3, line: 271, column: 17)
!1242 = !DILocation(line: 272, column: 25, scope: !689)
!1243 = !DILocation(line: 272, column: 13, scope: !689)
!1244 = !DILocation(line: 272, column: 57, scope: !689)
!1245 = !DILocalVariable(name: "n", arg: 1, scope: !1246, file: !3, line: 3706, type: !378)
!1246 = distinct !DISubprogram(name: "clusterAddSlot", scope: !3, file: !3, line: 3706, type: !1247, isLocal: false, isDefinition: true, scopeLine: 3706, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1249)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!177, !378, !177}
!1249 = !{!1245, !1250}
!1250 = !DILocalVariable(name: "slot", arg: 2, scope: !1246, file: !3, line: 3706, type: !177)
!1251 = !DILocation(line: 3706, column: 33, scope: !1246, inlinedAt: !1252)
!1252 = distinct !DILocation(line: 272, column: 34, scope: !689)
!1253 = !DILocation(line: 3706, column: 40, scope: !1246, inlinedAt: !1252)
!1254 = !DILocation(line: 3707, column: 16, scope: !1255, inlinedAt: !1252)
!1255 = distinct !DILexicalBlock(scope: !1246, file: !3, line: 3707, column: 9)
!1256 = !DILocation(line: 3707, column: 9, scope: !1255, inlinedAt: !1252)
!1257 = !DILocation(line: 3707, column: 9, scope: !1246, inlinedAt: !1252)
!1258 = !DILocation(line: 3708, column: 5, scope: !1246, inlinedAt: !1252)
!1259 = !DILocation(line: 3709, column: 12, scope: !1246, inlinedAt: !1252)
!1260 = !DILocation(line: 3709, column: 5, scope: !1246, inlinedAt: !1252)
!1261 = !DILocation(line: 3709, column: 33, scope: !1246, inlinedAt: !1252)
!1262 = !DILocation(line: 3710, column: 5, scope: !1246, inlinedAt: !1252)
!1263 = !DILocation(line: 0, scope: !689)
!1264 = !DILocation(line: 3711, column: 1, scope: !1246, inlinedAt: !1252)
!1265 = distinct !{!1265, !1243, !1266}
!1266 = !DILocation(line: 272, column: 59, scope: !689)
!1267 = !DILocation(line: 236, column: 32, scope: !690)
!1268 = !DILocation(line: 236, column: 9, scope: !690)
!1269 = distinct !{!1269, !1097, !1270}
!1270 = !DILocation(line: 273, column: 9, scope: !691)
!1271 = !DILocation(line: 0, scope: !874)
!1272 = !DILocation(line: 0, scope: !769)
!1273 = !DILocation(line: 275, column: 9, scope: !679)
!1274 = !DILocation(line: 278, column: 16, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !436, file: !3, line: 278, column: 9)
!1276 = !DILocation(line: 278, column: 25, scope: !1275)
!1277 = !DILocation(line: 278, column: 32, scope: !1275)
!1278 = !DILocation(line: 278, column: 9, scope: !436)
!1279 = !DILocation(line: 280, column: 5, scope: !436)
!1280 = !DILocation(line: 281, column: 5, scope: !436)
!1281 = !DILocation(line: 283, column: 65, scope: !436)
!1282 = !DILocation(line: 283, column: 5, scope: !436)
!1283 = !DILocation(line: 288, column: 9, scope: !1284)
!1284 = distinct !DILexicalBlock(scope: !436, file: !3, line: 288, column: 9)
!1285 = !DILocation(line: 288, column: 39, scope: !1284)
!1286 = !DILocation(line: 288, column: 48, scope: !1284)
!1287 = !DILocation(line: 288, column: 30, scope: !1284)
!1288 = !DILocation(line: 288, column: 9, scope: !436)
!1289 = !DILocation(line: 289, column: 40, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1284, file: !3, line: 288, column: 62)
!1291 = !DILocation(line: 289, column: 16, scope: !1290)
!1292 = !DILocation(line: 289, column: 25, scope: !1290)
!1293 = !DILocation(line: 289, column: 38, scope: !1290)
!1294 = !DILocation(line: 290, column: 5, scope: !1290)
!1295 = !DILocation(line: 294, column: 5, scope: !436)
!1296 = !DILocation(line: 296, column: 5, scope: !436)
!1297 = !DILocation(line: 297, column: 9, scope: !436)
!1298 = !DILocation(line: 297, column: 13, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !436, file: !3, line: 297, column: 9)
!1300 = !DILocation(line: 298, column: 5, scope: !436)
!1301 = !DILocation(line: 0, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !706, file: !3, line: 97, column: 30)
!1303 = !DILocation(line: 299, column: 1, scope: !436)
!1304 = !DILocation(line: 936, column: 44, scope: !825)
!1305 = !DILocation(line: 937, column: 13, scope: !825)
!1306 = !DILocation(line: 937, column: 9, scope: !825)
!1307 = !DILocation(line: 940, column: 26, scope: !825)
!1308 = !DILocation(line: 940, column: 35, scope: !825)
!1309 = !DILocation(line: 940, column: 10, scope: !825)
!1310 = !DILocation(line: 938, column: 16, scope: !825)
!1311 = !DILocation(line: 941, column: 5, scope: !825)
!1312 = !DILocation(line: 942, column: 12, scope: !842)
!1313 = !DILocation(line: 942, column: 9, scope: !825)
!1314 = !DILocation(line: 943, column: 12, scope: !825)
!1315 = !DILocation(line: 943, column: 5, scope: !825)
!1316 = !DILocation(line: 0, scope: !825)
!1317 = !DILocation(line: 0, scope: !842)
!1318 = !DILocation(line: 944, column: 1, scope: !825)
!1319 = !DILocation(line: 695, column: 38, scope: !1136)
!1320 = !DILocation(line: 695, column: 52, scope: !1136)
!1321 = !DILocation(line: 696, column: 25, scope: !1136)
!1322 = !DILocation(line: 696, column: 18, scope: !1136)
!1323 = !DILocation(line: 698, column: 9, scope: !1149)
!1324 = !DILocation(line: 0, scope: !1149)
!1325 = !DILocation(line: 698, column: 9, scope: !1136)
!1326 = !DILocation(line: 699, column: 9, scope: !1149)
!1327 = !DILocation(line: 701, column: 9, scope: !1149)
!1328 = !DILocation(line: 702, column: 19, scope: !1136)
!1329 = !DILocation(line: 702, column: 11, scope: !1136)
!1330 = !DILocation(line: 702, column: 17, scope: !1136)
!1331 = !DILocation(line: 703, column: 11, scope: !1136)
!1332 = !DILocation(line: 703, column: 23, scope: !1136)
!1333 = !DILocation(line: 704, column: 11, scope: !1136)
!1334 = !DILocation(line: 704, column: 17, scope: !1136)
!1335 = !DILocation(line: 705, column: 18, scope: !1136)
!1336 = !DILocation(line: 705, column: 5, scope: !1136)
!1337 = !DILocation(line: 706, column: 11, scope: !1136)
!1338 = !DILocation(line: 706, column: 20, scope: !1136)
!1339 = !DILocation(line: 707, column: 11, scope: !1136)
!1340 = !DILocation(line: 707, column: 21, scope: !1136)
!1341 = !DILocation(line: 708, column: 11, scope: !1136)
!1342 = !DILocation(line: 708, column: 18, scope: !1136)
!1343 = !DILocation(line: 709, column: 11, scope: !1136)
!1344 = !DILocation(line: 709, column: 19, scope: !1136)
!1345 = !DILocation(line: 710, column: 11, scope: !1136)
!1346 = !DILocation(line: 710, column: 21, scope: !1136)
!1347 = !DILocation(line: 711, column: 11, scope: !1136)
!1348 = !DILocation(line: 711, column: 21, scope: !1136)
!1349 = !DILocation(line: 712, column: 11, scope: !1136)
!1350 = !DILocation(line: 712, column: 16, scope: !1136)
!1351 = !DILocation(line: 713, column: 18, scope: !1136)
!1352 = !DILocation(line: 713, column: 5, scope: !1136)
!1353 = !DILocation(line: 714, column: 11, scope: !1136)
!1354 = !DILocation(line: 714, column: 16, scope: !1136)
!1355 = !DILocation(line: 715, column: 11, scope: !1136)
!1356 = !DILocation(line: 715, column: 17, scope: !1136)
!1357 = !DILocation(line: 716, column: 26, scope: !1136)
!1358 = !DILocation(line: 716, column: 11, scope: !1136)
!1359 = !DILocation(line: 716, column: 24, scope: !1136)
!1360 = !DILocation(line: 717, column: 11, scope: !1136)
!1361 = !DILocation(line: 717, column: 22, scope: !1136)
!1362 = !DILocation(line: 718, column: 11, scope: !1136)
!1363 = !DILocation(line: 718, column: 25, scope: !1136)
!1364 = !DILocation(line: 719, column: 11, scope: !1136)
!1365 = !DILocation(line: 719, column: 28, scope: !1136)
!1366 = !DILocation(line: 720, column: 11, scope: !1136)
!1367 = !DILocation(line: 720, column: 23, scope: !1136)
!1368 = !DILocation(line: 721, column: 5, scope: !1136)
!1369 = !DILocation(line: 722, column: 5, scope: !1136)
!1370 = !DILocation(line: 887, column: 33, scope: !856)
!1371 = !DILocation(line: 890, column: 29, scope: !856)
!1372 = !DILocation(line: 890, column: 38, scope: !856)
!1373 = !DILocation(line: 891, column: 23, scope: !856)
!1374 = !DILocation(line: 891, column: 13, scope: !856)
!1375 = !DILocation(line: 891, column: 52, scope: !856)
!1376 = !DILocation(line: 890, column: 14, scope: !856)
!1377 = !DILocation(line: 888, column: 9, scope: !856)
!1378 = !DILocation(line: 892, column: 20, scope: !856)
!1379 = !DILocation(line: 892, column: 12, scope: !856)
!1380 = !DILocation(line: 892, column: 5, scope: !856)
!1381 = !DILocation(line: 839, column: 38, scope: !1027)
!1382 = !DILocation(line: 839, column: 59, scope: !1027)
!1383 = !DILocation(line: 840, column: 9, scope: !1027)
!1384 = !DILocation(line: 843, column: 10, scope: !1038)
!1385 = !DILocation(line: 843, column: 29, scope: !1040)
!1386 = !DILocation(line: 843, column: 19, scope: !1040)
!1387 = !DILocation(line: 0, scope: !1027)
!1388 = !DILocation(line: 844, column: 13, scope: !1047)
!1389 = !DILocation(line: 844, column: 31, scope: !1047)
!1390 = !DILocation(line: 844, column: 13, scope: !1040)
!1391 = !DILocation(line: 843, column: 41, scope: !1040)
!1392 = !DILocation(line: 843, column: 5, scope: !1040)
!1393 = !DILocation(line: 845, column: 31, scope: !1027)
!1394 = !DILocation(line: 846, column: 48, scope: !1027)
!1395 = !DILocation(line: 846, column: 30, scope: !1027)
!1396 = !DILocation(line: 846, column: 29, scope: !1027)
!1397 = !DILocation(line: 845, column: 22, scope: !1027)
!1398 = !DILocation(line: 845, column: 20, scope: !1027)
!1399 = !DILocation(line: 847, column: 28, scope: !1027)
!1400 = !DILocation(line: 847, column: 5, scope: !1027)
!1401 = !DILocation(line: 847, column: 39, scope: !1027)
!1402 = !DILocation(line: 848, column: 22, scope: !1027)
!1403 = !DILocation(line: 849, column: 13, scope: !1027)
!1404 = !DILocation(line: 849, column: 19, scope: !1027)
!1405 = !DILocation(line: 850, column: 5, scope: !1027)
!1406 = !DILocation(line: 0, scope: !1047)
!1407 = !DILocation(line: 851, column: 1, scope: !1027)
!1408 = !DILocation(line: 3706, column: 33, scope: !1246)
!1409 = !DILocation(line: 3706, column: 40, scope: !1246)
!1410 = !DILocation(line: 3707, column: 16, scope: !1255)
!1411 = !DILocation(line: 3707, column: 9, scope: !1255)
!1412 = !DILocation(line: 3707, column: 9, scope: !1246)
!1413 = !DILocation(line: 3708, column: 5, scope: !1246)
!1414 = !DILocation(line: 3709, column: 12, scope: !1246)
!1415 = !DILocation(line: 3709, column: 5, scope: !1246)
!1416 = !DILocation(line: 3709, column: 33, scope: !1246)
!1417 = !DILocation(line: 3710, column: 5, scope: !1246)
!1418 = !DILocation(line: 0, scope: !1246)
!1419 = !DILocation(line: 0, scope: !1255)
!1420 = !DILocation(line: 3711, column: 1, scope: !1246)
!1421 = distinct !DISubprogram(name: "clusterGetMaxEpoch", scope: !3, file: !3, line: 969, type: !1422, isLocal: false, isDefinition: true, scopeLine: 969, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1424)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!104}
!1424 = !{!1425, !1426, !1427, !1428}
!1425 = !DILocalVariable(name: "max", scope: !1421, file: !3, line: 970, type: !104)
!1426 = !DILocalVariable(name: "di", scope: !1421, file: !3, line: 971, type: !297)
!1427 = !DILocalVariable(name: "de", scope: !1421, file: !3, line: 972, type: !340)
!1428 = !DILocalVariable(name: "node", scope: !1429, file: !3, line: 976, type: !378)
!1429 = distinct !DILexicalBlock(scope: !1421, file: !3, line: 975, column: 40)
!1430 = !DILocation(line: 970, column: 14, scope: !1421)
!1431 = !DILocation(line: 974, column: 37, scope: !1421)
!1432 = !DILocation(line: 974, column: 46, scope: !1421)
!1433 = !DILocation(line: 974, column: 10, scope: !1421)
!1434 = !DILocation(line: 971, column: 19, scope: !1421)
!1435 = !DILocation(line: 975, column: 5, scope: !1421)
!1436 = !DILocation(line: 975, column: 17, scope: !1421)
!1437 = !DILocation(line: 972, column: 16, scope: !1421)
!1438 = !DILocation(line: 975, column: 31, scope: !1421)
!1439 = !DILocation(line: 976, column: 29, scope: !1429)
!1440 = !DILocation(line: 976, column: 22, scope: !1429)
!1441 = !DILocation(line: 977, column: 19, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1429, file: !3, line: 977, column: 13)
!1443 = !DILocation(line: 977, column: 31, scope: !1442)
!1444 = !DILocation(line: 977, column: 13, scope: !1429)
!1445 = !DILocation(line: 977, column: 38, scope: !1442)
!1446 = !DILocation(line: 0, scope: !1421)
!1447 = distinct !{!1447, !1435, !1448}
!1448 = !DILocation(line: 978, column: 5, scope: !1421)
!1449 = !DILocation(line: 0, scope: !1442)
!1450 = !DILocation(line: 979, column: 5, scope: !1421)
!1451 = !DILocation(line: 980, column: 22, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1421, file: !3, line: 980, column: 9)
!1453 = !DILocation(line: 980, column: 31, scope: !1452)
!1454 = !DILocation(line: 980, column: 13, scope: !1452)
!1455 = !DILocation(line: 980, column: 9, scope: !1421)
!1456 = !DILocation(line: 980, column: 45, scope: !1452)
!1457 = !DILocation(line: 981, column: 5, scope: !1421)
!1458 = distinct !DISubprogram(name: "clusterSaveConfig", scope: !3, file: !3, line: 313, type: !1459, isLocal: false, isDefinition: true, scopeLine: 313, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1461)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!177, !177}
!1461 = !{!1462, !1463, !1464, !1468, !1469}
!1462 = !DILocalVariable(name: "do_fsync", arg: 1, scope: !1458, file: !3, line: 313, type: !177)
!1463 = !DILocalVariable(name: "ci", scope: !1458, file: !3, line: 314, type: !189)
!1464 = !DILocalVariable(name: "content_size", scope: !1458, file: !3, line: 315, type: !1465)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1466, line: 40, baseType: !1467)
!1466 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libnewlibc/origin/newlib-2.5.0.20170922/newlib/libc/include/strings.h", directory: "/root/.unikraft/apps/redis/build")
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !11, line: 129, baseType: !106)
!1468 = !DILocalVariable(name: "sb", scope: !1458, file: !3, line: 316, type: !639)
!1469 = !DILocalVariable(name: "fd", scope: !1458, file: !3, line: 317, type: !177)
!1470 = !DILocation(line: 313, column: 27, scope: !1458)
!1471 = !DILocation(line: 316, column: 5, scope: !1458)
!1472 = !DILocation(line: 319, column: 12, scope: !1458)
!1473 = !DILocation(line: 319, column: 21, scope: !1458)
!1474 = !DILocation(line: 319, column: 39, scope: !1458)
!1475 = !{!798, !709, i64 524416}
!1476 = !DILocation(line: 323, column: 10, scope: !1458)
!1477 = !DILocation(line: 314, column: 9, scope: !1458)
!1478 = !DILocation(line: 325, column: 37, scope: !1458)
!1479 = !DILocation(line: 325, column: 46, scope: !1458)
!1480 = !DILocation(line: 326, column: 46, scope: !1458)
!1481 = !DILocation(line: 324, column: 10, scope: !1458)
!1482 = !DILocalVariable(name: "s", arg: 1, scope: !1483, file: !190, line: 87, type: !1487)
!1483 = distinct !DISubprogram(name: "sdslen", scope: !190, file: !190, line: 87, type: !1484, isLocal: true, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1488)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !549, line: 58, baseType: !106)
!1487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!1488 = !{!1482, !1489}
!1489 = !DILocalVariable(name: "flags", scope: !1483, file: !190, line: 88, type: !27)
!1490 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !1491)
!1491 = distinct !DILocation(line: 327, column: 20, scope: !1458)
!1492 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !1491)
!1493 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !1491)
!1494 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !1491)
!1495 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !1491)
!1496 = distinct !DILexicalBlock(scope: !1483, file: !190, line: 89, column: 33)
!1497 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !1491)
!1498 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !1491)
!1499 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !1491)
!1500 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !1491)
!1501 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !1491)
!1502 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !1491)
!1503 = !{!728, !728, i64 0}
!1504 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !1491)
!1505 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !1491)
!1506 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !1491)
!1507 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !1491)
!1508 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !1491)
!1509 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !1491)
!1510 = !{!729, !729, i64 0}
!1511 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !1491)
!1512 = !DILocation(line: 0, scope: !1496, inlinedAt: !1491)
!1513 = !DILocation(line: 0, scope: !1458)
!1514 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !1491)
!1515 = !DILocation(line: 315, column: 12, scope: !1458)
!1516 = !DILocation(line: 329, column: 27, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 329, column: 9)
!1518 = !{!789, !761, i64 2936}
!1519 = !DILocation(line: 329, column: 15, scope: !1517)
!1520 = !DILocation(line: 317, column: 9, scope: !1458)
!1521 = !DILocation(line: 330, column: 9, scope: !1517)
!1522 = !DILocation(line: 329, column: 9, scope: !1458)
!1523 = !DILocation(line: 316, column: 17, scope: !1458)
!1524 = !DILocation(line: 333, column: 9, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 333, column: 9)
!1526 = !DILocation(line: 333, column: 23, scope: !1525)
!1527 = !DILocation(line: 333, column: 9, scope: !1458)
!1528 = !DILocation(line: 334, column: 16, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1530, file: !3, line: 334, column: 13)
!1530 = distinct !DILexicalBlock(scope: !1525, file: !3, line: 333, column: 30)
!1531 = !DILocation(line: 334, column: 24, scope: !1529)
!1532 = !DILocation(line: 334, column: 13, scope: !1530)
!1533 = !DILocation(line: 335, column: 18, scope: !1534)
!1534 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 334, column: 47)
!1535 = !DILocation(line: 336, column: 22, scope: !1534)
!1536 = !DILocation(line: 336, column: 44, scope: !1534)
!1537 = !DILocation(line: 336, column: 51, scope: !1534)
!1538 = !DILocation(line: 336, column: 13, scope: !1534)
!1539 = !DILocation(line: 337, column: 9, scope: !1534)
!1540 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !1541)
!1541 = distinct !DILocation(line: 339, column: 21, scope: !1542)
!1542 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 339, column: 9)
!1543 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !1541)
!1544 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !1541)
!1545 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !1541)
!1546 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !1541)
!1547 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !1541)
!1548 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !1541)
!1549 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !1541)
!1550 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !1541)
!1551 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !1541)
!1552 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !1541)
!1553 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !1541)
!1554 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !1541)
!1555 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !1541)
!1556 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !1541)
!1557 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !1541)
!1558 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !1541)
!1559 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !1541)
!1560 = !DILocation(line: 0, scope: !1496, inlinedAt: !1541)
!1561 = !DILocation(line: 0, scope: !1542)
!1562 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !1541)
!1563 = !DILocation(line: 339, column: 9, scope: !1542)
!1564 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !1565)
!1565 = distinct !DILocation(line: 339, column: 45, scope: !1542)
!1566 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !1565)
!1567 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !1565)
!1568 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !1565)
!1569 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !1565)
!1570 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !1565)
!1571 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !1565)
!1572 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !1565)
!1573 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !1565)
!1574 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !1565)
!1575 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !1565)
!1576 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !1565)
!1577 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !1565)
!1578 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !1565)
!1579 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !1565)
!1580 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !1565)
!1581 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !1565)
!1582 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !1565)
!1583 = !DILocation(line: 0, scope: !1496, inlinedAt: !1565)
!1584 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !1565)
!1585 = !DILocation(line: 339, column: 33, scope: !1542)
!1586 = !DILocation(line: 339, column: 9, scope: !1458)
!1587 = !DILocation(line: 340, column: 9, scope: !1588)
!1588 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 340, column: 9)
!1589 = !DILocation(line: 340, column: 9, scope: !1458)
!1590 = !DILocation(line: 341, column: 16, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1588, file: !3, line: 340, column: 19)
!1592 = !DILocation(line: 341, column: 25, scope: !1591)
!1593 = !DILocation(line: 341, column: 43, scope: !1591)
!1594 = !DILocation(line: 342, column: 9, scope: !1591)
!1595 = !DILocation(line: 343, column: 5, scope: !1591)
!1596 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !1597)
!1597 = distinct !DILocation(line: 347, column: 25, scope: !1598)
!1598 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 347, column: 9)
!1599 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !1597)
!1600 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !1597)
!1601 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !1597)
!1602 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !1597)
!1603 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !1597)
!1604 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !1597)
!1605 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !1597)
!1606 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !1597)
!1607 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !1597)
!1608 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !1597)
!1609 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !1597)
!1610 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !1597)
!1611 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !1597)
!1612 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !1597)
!1613 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !1597)
!1614 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !1597)
!1615 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !1597)
!1616 = !DILocation(line: 0, scope: !1496, inlinedAt: !1597)
!1617 = !DILocation(line: 0, scope: !1598)
!1618 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !1597)
!1619 = !DILocation(line: 347, column: 22, scope: !1598)
!1620 = !DILocation(line: 347, column: 36, scope: !1598)
!1621 = !DILocation(line: 347, column: 39, scope: !1598)
!1622 = !DILocation(line: 347, column: 9, scope: !1458)
!1623 = !DILocation(line: 350, column: 5, scope: !1458)
!1624 = !DILocation(line: 351, column: 5, scope: !1458)
!1625 = !DILocation(line: 352, column: 5, scope: !1458)
!1626 = !DILocation(line: 355, column: 9, scope: !1458)
!1627 = !DILocation(line: 355, column: 19, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 355, column: 9)
!1629 = !DILocation(line: 0, scope: !1628)
!1630 = !DILocation(line: 356, column: 5, scope: !1458)
!1631 = !DILocation(line: 357, column: 5, scope: !1458)
!1632 = !DILocation(line: 358, column: 1, scope: !1458)
!1633 = distinct !DISubprogram(name: "clusterGenNodesDescription", scope: !3, file: !3, line: 4067, type: !1634, isLocal: false, isDefinition: true, scopeLine: 4067, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1636)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!189, !177}
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642}
!1637 = !DILocalVariable(name: "filter", arg: 1, scope: !1633, file: !3, line: 4067, type: !177)
!1638 = !DILocalVariable(name: "ci", scope: !1633, file: !3, line: 4068, type: !189)
!1639 = !DILocalVariable(name: "ni", scope: !1633, file: !3, line: 4068, type: !189)
!1640 = !DILocalVariable(name: "di", scope: !1633, file: !3, line: 4069, type: !297)
!1641 = !DILocalVariable(name: "de", scope: !1633, file: !3, line: 4070, type: !340)
!1642 = !DILocalVariable(name: "node", scope: !1643, file: !3, line: 4074, type: !378)
!1643 = distinct !DILexicalBlock(scope: !1633, file: !3, line: 4073, column: 40)
!1644 = !DILocation(line: 4067, column: 36, scope: !1633)
!1645 = !DILocation(line: 4068, column: 14, scope: !1633)
!1646 = !DILocation(line: 4068, column: 9, scope: !1633)
!1647 = !DILocation(line: 4072, column: 37, scope: !1633)
!1648 = !DILocation(line: 4072, column: 46, scope: !1633)
!1649 = !DILocation(line: 4072, column: 10, scope: !1633)
!1650 = !DILocation(line: 4069, column: 19, scope: !1633)
!1651 = !DILocation(line: 4073, column: 5, scope: !1633)
!1652 = !DILocation(line: 4073, column: 17, scope: !1633)
!1653 = !DILocation(line: 4070, column: 16, scope: !1633)
!1654 = !DILocation(line: 4073, column: 31, scope: !1633)
!1655 = !DILocation(line: 4074, column: 29, scope: !1643)
!1656 = !DILocation(line: 4074, column: 22, scope: !1643)
!1657 = !DILocation(line: 4076, column: 19, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1643, file: !3, line: 4076, column: 13)
!1659 = !DILocation(line: 4076, column: 25, scope: !1658)
!1660 = !DILocation(line: 4076, column: 13, scope: !1643)
!1661 = distinct !{!1661, !1651, !1662}
!1662 = !DILocation(line: 4081, column: 5, scope: !1633)
!1663 = !DILocation(line: 4077, column: 14, scope: !1643)
!1664 = !DILocation(line: 4068, column: 26, scope: !1633)
!1665 = !DILocation(line: 4078, column: 14, scope: !1643)
!1666 = !DILocation(line: 4079, column: 9, scope: !1643)
!1667 = !DILocation(line: 4080, column: 14, scope: !1643)
!1668 = !DILocation(line: 0, scope: !1643)
!1669 = !DILocation(line: 0, scope: !1658)
!1670 = !DILocation(line: 4082, column: 5, scope: !1633)
!1671 = !DILocation(line: 4083, column: 5, scope: !1633)
!1672 = distinct !DISubprogram(name: "clusterSaveConfigOrDie", scope: !3, file: !3, line: 360, type: !282, isLocal: false, isDefinition: true, scopeLine: 360, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1673)
!1673 = !{!1674}
!1674 = !DILocalVariable(name: "do_fsync", arg: 1, scope: !1672, file: !3, line: 360, type: !177)
!1675 = !DILocation(line: 360, column: 33, scope: !1672)
!1676 = !DILocation(line: 361, column: 9, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 361, column: 9)
!1678 = !DILocation(line: 361, column: 37, scope: !1677)
!1679 = !DILocation(line: 361, column: 9, scope: !1672)
!1680 = !DILocation(line: 362, column: 9, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1677, file: !3, line: 361, column: 44)
!1682 = !DILocation(line: 363, column: 9, scope: !1681)
!1683 = !DILocation(line: 365, column: 1, scope: !1672)
!1684 = distinct !DISubprogram(name: "clusterLockConfig", scope: !3, file: !3, line: 376, type: !437, isLocal: false, isDefinition: true, scopeLine: 376, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1685)
!1685 = !{!1686, !1687}
!1686 = !DILocalVariable(name: "filename", arg: 1, scope: !1684, file: !3, line: 376, type: !178)
!1687 = !DILocalVariable(name: "fd", scope: !1684, file: !3, line: 385, type: !177)
!1688 = !DILocation(line: 376, column: 29, scope: !1684)
!1689 = !DILocation(line: 385, column: 14, scope: !1684)
!1690 = !DILocation(line: 385, column: 9, scope: !1684)
!1691 = !DILocation(line: 386, column: 12, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1684, file: !3, line: 386, column: 9)
!1693 = !DILocation(line: 386, column: 9, scope: !1684)
!1694 = !DILocation(line: 389, column: 32, scope: !1695)
!1695 = distinct !DILexicalBlock(scope: !1692, file: !3, line: 386, column: 19)
!1696 = !DILocation(line: 389, column: 23, scope: !1695)
!1697 = !DILocation(line: 387, column: 9, scope: !1695)
!1698 = !DILocation(line: 390, column: 9, scope: !1695)
!1699 = !DILocation(line: 393, column: 9, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1684, file: !3, line: 393, column: 9)
!1701 = !DILocation(line: 393, column: 35, scope: !1700)
!1702 = !DILocation(line: 393, column: 9, scope: !1684)
!1703 = !DILocation(line: 394, column: 13, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1705, file: !3, line: 394, column: 13)
!1705 = distinct !DILexicalBlock(scope: !1700, file: !3, line: 393, column: 42)
!1706 = !DILocation(line: 394, column: 19, scope: !1704)
!1707 = !DILocation(line: 394, column: 13, scope: !1705)
!1708 = !DILocation(line: 395, column: 13, scope: !1709)
!1709 = distinct !DILexicalBlock(scope: !1704, file: !3, line: 394, column: 35)
!1710 = !DILocation(line: 400, column: 9, scope: !1709)
!1711 = !DILocation(line: 402, column: 65, scope: !1712)
!1712 = distinct !DILexicalBlock(scope: !1704, file: !3, line: 400, column: 16)
!1713 = !DILocation(line: 402, column: 56, scope: !1712)
!1714 = !DILocation(line: 401, column: 13, scope: !1712)
!1715 = !DILocation(line: 404, column: 9, scope: !1705)
!1716 = !DILocation(line: 405, column: 9, scope: !1705)
!1717 = !DILocation(line: 0, scope: !1684)
!1718 = !DILocation(line: 0, scope: !1695)
!1719 = !DILocation(line: 412, column: 1, scope: !1684)
!1720 = distinct !DISubprogram(name: "clusterUpdateMyselfFlags", scope: !3, file: !3, line: 418, type: !293, isLocal: false, isDefinition: true, scopeLine: 418, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1721)
!1721 = !{!1722, !1723}
!1722 = !DILocalVariable(name: "oldflags", scope: !1720, file: !3, line: 419, type: !177)
!1723 = !DILocalVariable(name: "nofailover", scope: !1720, file: !3, line: 420, type: !177)
!1724 = !DILocation(line: 419, column: 20, scope: !1720)
!1725 = !DILocation(line: 419, column: 28, scope: !1720)
!1726 = !DILocation(line: 419, column: 9, scope: !1720)
!1727 = !DILocation(line: 420, column: 29, scope: !1720)
!1728 = !{!789, !709, i64 2964}
!1729 = !DILocation(line: 420, column: 22, scope: !1720)
!1730 = !DILocation(line: 420, column: 9, scope: !1720)
!1731 = !DILocation(line: 422, column: 19, scope: !1720)
!1732 = !DILocation(line: 423, column: 19, scope: !1720)
!1733 = !DILocation(line: 424, column: 23, scope: !1734)
!1734 = distinct !DILexicalBlock(scope: !1720, file: !3, line: 424, column: 9)
!1735 = !DILocation(line: 424, column: 9, scope: !1720)
!1736 = !DILocalVariable(name: "flags", arg: 1, scope: !1737, file: !3, line: 3617, type: !177)
!1737 = distinct !DISubprogram(name: "clusterDoBeforeSleep", scope: !3, file: !3, line: 3617, type: !282, isLocal: false, isDefinition: true, scopeLine: 3617, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1738)
!1738 = !{!1736}
!1739 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !1740)
!1740 = distinct !DILocation(line: 425, column: 9, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1734, file: !3, line: 424, column: 36)
!1742 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !1740)
!1743 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !1740)
!1744 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !1740)
!1745 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !1740)
!1746 = !DILocation(line: 427, column: 5, scope: !1741)
!1747 = !DILocation(line: 428, column: 1, scope: !1720)
!1748 = !DILocation(line: 3617, column: 31, scope: !1737)
!1749 = !DILocation(line: 3618, column: 12, scope: !1737)
!1750 = !DILocation(line: 3618, column: 21, scope: !1737)
!1751 = !DILocation(line: 3618, column: 39, scope: !1737)
!1752 = !DILocation(line: 3619, column: 1, scope: !1737)
!1753 = distinct !DISubprogram(name: "clusterInit", scope: !3, file: !3, line: 430, type: !293, isLocal: false, isDefinition: true, scopeLine: 430, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !1754)
!1754 = !{!1755, !1756, !1758}
!1755 = !DILocalVariable(name: "saveconf", scope: !1753, file: !3, line: 431, type: !177)
!1756 = !DILocalVariable(name: "i", scope: !1757, file: !3, line: 448, type: !177)
!1757 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 448, column: 5)
!1758 = !DILocalVariable(name: "j", scope: !1759, file: !3, line: 494, type: !177)
!1759 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 493, column: 12)
!1760 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 489, column: 9)
!1761 = !DILocation(line: 431, column: 9, scope: !1753)
!1762 = !DILocation(line: 433, column: 22, scope: !1753)
!1763 = !DILocation(line: 433, column: 20, scope: !1753)
!1764 = !DILocation(line: 434, column: 21, scope: !1753)
!1765 = !DILocation(line: 434, column: 28, scope: !1753)
!1766 = !DILocation(line: 435, column: 21, scope: !1753)
!1767 = !DILocation(line: 435, column: 34, scope: !1753)
!1768 = !DILocation(line: 436, column: 21, scope: !1753)
!1769 = !DILocation(line: 436, column: 27, scope: !1753)
!1770 = !{!798, !709, i64 16}
!1771 = !DILocation(line: 437, column: 21, scope: !1753)
!1772 = !DILocation(line: 437, column: 26, scope: !1753)
!1773 = !{!798, !709, i64 20}
!1774 = !DILocation(line: 438, column: 21, scope: !1753)
!1775 = !DILocation(line: 438, column: 39, scope: !1753)
!1776 = !DILocation(line: 439, column: 29, scope: !1753)
!1777 = !DILocation(line: 439, column: 12, scope: !1753)
!1778 = !DILocation(line: 439, column: 21, scope: !1753)
!1779 = !DILocation(line: 439, column: 27, scope: !1753)
!1780 = !DILocation(line: 441, column: 9, scope: !1753)
!1781 = !DILocation(line: 440, column: 12, scope: !1753)
!1782 = !DILocation(line: 440, column: 21, scope: !1753)
!1783 = !DILocation(line: 440, column: 38, scope: !1753)
!1784 = !{!798, !761, i64 32}
!1785 = !DILocation(line: 442, column: 21, scope: !1753)
!1786 = !DILocation(line: 442, column: 40, scope: !1753)
!1787 = !{!798, !790, i64 524336}
!1788 = !DILocation(line: 443, column: 21, scope: !1753)
!1789 = !DILocation(line: 443, column: 41, scope: !1753)
!1790 = !{!798, !709, i64 524344}
!1791 = !DILocation(line: 444, column: 21, scope: !1753)
!1792 = !DILocation(line: 444, column: 40, scope: !1753)
!1793 = !{!798, !709, i64 524352}
!1794 = !DILocation(line: 445, column: 21, scope: !1753)
!1795 = !DILocation(line: 445, column: 41, scope: !1753)
!1796 = !{!798, !729, i64 524360}
!1797 = !DILocation(line: 446, column: 21, scope: !1753)
!1798 = !DILocation(line: 446, column: 42, scope: !1753)
!1799 = !{!798, !709, i64 524368}
!1800 = !DILocation(line: 447, column: 21, scope: !1753)
!1801 = !DILocation(line: 447, column: 35, scope: !1753)
!1802 = !DILocation(line: 448, column: 14, scope: !1757)
!1803 = !DILocation(line: 448, column: 10, scope: !1757)
!1804 = !DILocation(line: 448, column: 5, scope: !1757)
!1805 = !DILocation(line: 449, column: 9, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !1807, file: !3, line: 448, column: 53)
!1807 = distinct !DILexicalBlock(scope: !1757, file: !3, line: 448, column: 5)
!1808 = !DILocation(line: 449, column: 52, scope: !1806)
!1809 = !DILocation(line: 450, column: 9, scope: !1806)
!1810 = !DILocation(line: 450, column: 56, scope: !1806)
!1811 = !DILocation(line: 448, column: 5, scope: !1807)
!1812 = !DILocation(line: 452, column: 21, scope: !1753)
!1813 = !DILocation(line: 452, column: 39, scope: !1753)
!1814 = !{!798, !790, i64 524584}
!1815 = !DILocation(line: 453, column: 12, scope: !1753)
!1816 = !DILocation(line: 453, column: 5, scope: !1753)
!1817 = !DILocation(line: 3742, column: 19, scope: !1818, inlinedAt: !1819)
!1818 = distinct !DISubprogram(name: "clusterCloseAllSlots", scope: !3, file: !3, line: 3741, type: !293, isLocal: false, isDefinition: true, scopeLine: 3741, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1819 = distinct !DILocation(line: 454, column: 5, scope: !1753)
!1820 = !DILocation(line: 3742, column: 12, scope: !1818, inlinedAt: !1819)
!1821 = !DILocation(line: 3742, column: 5, scope: !1818, inlinedAt: !1819)
!1822 = !DILocation(line: 3744, column: 19, scope: !1818, inlinedAt: !1819)
!1823 = !DILocation(line: 3744, column: 12, scope: !1818, inlinedAt: !1819)
!1824 = !DILocation(line: 3744, column: 5, scope: !1818, inlinedAt: !1819)
!1825 = !DILocation(line: 3746, column: 1, scope: !1818, inlinedAt: !1819)
!1826 = !DILocation(line: 458, column: 34, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 458, column: 9)
!1828 = !DILocation(line: 458, column: 9, scope: !1827)
!1829 = !DILocation(line: 458, column: 54, scope: !1827)
!1830 = !DILocation(line: 458, column: 9, scope: !1753)
!1831 = !DILocation(line: 459, column: 9, scope: !1827)
!1832 = !DILocation(line: 462, column: 34, scope: !1833)
!1833 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 462, column: 9)
!1834 = !DILocation(line: 462, column: 9, scope: !1833)
!1835 = !DILocation(line: 462, column: 54, scope: !1833)
!1836 = !DILocation(line: 462, column: 9, scope: !1753)
!1837 = !DILocation(line: 695, column: 38, scope: !1136, inlinedAt: !1838)
!1838 = distinct !DILocation(line: 466, column: 13, scope: !1839)
!1839 = distinct !DILexicalBlock(scope: !1833, file: !3, line: 462, column: 64)
!1840 = !DILocation(line: 695, column: 52, scope: !1136, inlinedAt: !1838)
!1841 = !DILocation(line: 696, column: 25, scope: !1136, inlinedAt: !1838)
!1842 = !DILocation(line: 696, column: 18, scope: !1136, inlinedAt: !1838)
!1843 = !DILocation(line: 0, scope: !1149, inlinedAt: !1838)
!1844 = !DILocation(line: 698, column: 9, scope: !1136, inlinedAt: !1838)
!1845 = !DILocation(line: 701, column: 9, scope: !1149, inlinedAt: !1838)
!1846 = !DILocation(line: 702, column: 19, scope: !1136, inlinedAt: !1838)
!1847 = !DILocation(line: 702, column: 11, scope: !1136, inlinedAt: !1838)
!1848 = !DILocation(line: 702, column: 17, scope: !1136, inlinedAt: !1838)
!1849 = !DILocation(line: 703, column: 11, scope: !1136, inlinedAt: !1838)
!1850 = !DILocation(line: 703, column: 23, scope: !1136, inlinedAt: !1838)
!1851 = !DILocation(line: 704, column: 11, scope: !1136, inlinedAt: !1838)
!1852 = !DILocation(line: 704, column: 17, scope: !1136, inlinedAt: !1838)
!1853 = !DILocation(line: 705, column: 18, scope: !1136, inlinedAt: !1838)
!1854 = !DILocation(line: 705, column: 5, scope: !1136, inlinedAt: !1838)
!1855 = !DILocation(line: 706, column: 11, scope: !1136, inlinedAt: !1838)
!1856 = !DILocation(line: 706, column: 20, scope: !1136, inlinedAt: !1838)
!1857 = !DILocation(line: 707, column: 11, scope: !1136, inlinedAt: !1838)
!1858 = !DILocation(line: 707, column: 21, scope: !1136, inlinedAt: !1838)
!1859 = !DILocation(line: 708, column: 11, scope: !1136, inlinedAt: !1838)
!1860 = !DILocation(line: 708, column: 18, scope: !1136, inlinedAt: !1838)
!1861 = !DILocation(line: 709, column: 11, scope: !1136, inlinedAt: !1838)
!1862 = !DILocation(line: 709, column: 19, scope: !1136, inlinedAt: !1838)
!1863 = !DILocation(line: 710, column: 11, scope: !1136, inlinedAt: !1838)
!1864 = !DILocation(line: 710, column: 21, scope: !1136, inlinedAt: !1838)
!1865 = !DILocation(line: 711, column: 11, scope: !1136, inlinedAt: !1838)
!1866 = !DILocation(line: 711, column: 21, scope: !1136, inlinedAt: !1838)
!1867 = !DILocation(line: 712, column: 11, scope: !1136, inlinedAt: !1838)
!1868 = !DILocation(line: 712, column: 16, scope: !1136, inlinedAt: !1838)
!1869 = !DILocation(line: 713, column: 18, scope: !1136, inlinedAt: !1838)
!1870 = !DILocation(line: 713, column: 5, scope: !1136, inlinedAt: !1838)
!1871 = !DILocation(line: 714, column: 11, scope: !1136, inlinedAt: !1838)
!1872 = !DILocation(line: 714, column: 16, scope: !1136, inlinedAt: !1838)
!1873 = !DILocation(line: 715, column: 11, scope: !1136, inlinedAt: !1838)
!1874 = !DILocation(line: 715, column: 17, scope: !1136, inlinedAt: !1838)
!1875 = !DILocation(line: 716, column: 26, scope: !1136, inlinedAt: !1838)
!1876 = !DILocation(line: 716, column: 11, scope: !1136, inlinedAt: !1838)
!1877 = !DILocation(line: 716, column: 24, scope: !1136, inlinedAt: !1838)
!1878 = !DILocation(line: 717, column: 11, scope: !1136, inlinedAt: !1838)
!1879 = !DILocation(line: 717, column: 22, scope: !1136, inlinedAt: !1838)
!1880 = !DILocation(line: 718, column: 11, scope: !1136, inlinedAt: !1838)
!1881 = !DILocation(line: 718, column: 25, scope: !1136, inlinedAt: !1838)
!1882 = !DILocation(line: 719, column: 11, scope: !1136, inlinedAt: !1838)
!1883 = !DILocation(line: 719, column: 28, scope: !1136, inlinedAt: !1838)
!1884 = !DILocation(line: 720, column: 11, scope: !1136, inlinedAt: !1838)
!1885 = !DILocation(line: 720, column: 23, scope: !1136, inlinedAt: !1838)
!1886 = !DILocation(line: 721, column: 5, scope: !1136, inlinedAt: !1838)
!1887 = !DILocation(line: 722, column: 5, scope: !1136, inlinedAt: !1838)
!1888 = !DILocation(line: 465, column: 25, scope: !1839)
!1889 = !DILocation(line: 465, column: 41, scope: !1839)
!1890 = !DILocation(line: 465, column: 16, scope: !1839)
!1891 = !DILocation(line: 467, column: 9, scope: !1839)
!1892 = !DILocation(line: 469, column: 24, scope: !1839)
!1893 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !1894)
!1894 = distinct !DILocation(line: 469, column: 9, scope: !1839)
!1895 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !1894)
!1896 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !1894)
!1897 = !DILocation(line: 891, column: 23, scope: !856, inlinedAt: !1894)
!1898 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !1894)
!1899 = !DILocation(line: 891, column: 52, scope: !856, inlinedAt: !1894)
!1900 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !1894)
!1901 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !1894)
!1902 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !1894)
!1903 = !DILocation(line: 471, column: 5, scope: !1839)
!1904 = !DILocation(line: 472, column: 9, scope: !1753)
!1905 = !DILocation(line: 360, column: 33, scope: !1672, inlinedAt: !1906)
!1906 = distinct !DILocation(line: 472, column: 19, scope: !1907)
!1907 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 472, column: 9)
!1908 = !DILocation(line: 361, column: 9, scope: !1677, inlinedAt: !1906)
!1909 = !DILocation(line: 361, column: 37, scope: !1677, inlinedAt: !1906)
!1910 = !DILocation(line: 361, column: 9, scope: !1672, inlinedAt: !1906)
!1911 = !DILocation(line: 362, column: 9, scope: !1681, inlinedAt: !1906)
!1912 = !DILocation(line: 363, column: 9, scope: !1681, inlinedAt: !1906)
!1913 = !DILocation(line: 365, column: 1, scope: !1672, inlinedAt: !1906)
!1914 = !DILocation(line: 472, column: 19, scope: !1907)
!1915 = !DILocation(line: 0, scope: !1907)
!1916 = !DILocation(line: 475, column: 22, scope: !1753)
!1917 = !{!789, !709, i64 508}
!1918 = !DILocation(line: 480, column: 16, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 480, column: 9)
!1920 = !{!789, !709, i64 216}
!1921 = !DILocation(line: 480, column: 21, scope: !1919)
!1922 = !DILocation(line: 480, column: 9, scope: !1753)
!1923 = !DILocation(line: 481, column: 9, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1919, file: !3, line: 480, column: 50)
!1925 = !DILocation(line: 486, column: 9, scope: !1924)
!1926 = !DILocation(line: 489, column: 33, scope: !1760)
!1927 = !DILocation(line: 489, column: 9, scope: !1760)
!1928 = !DILocation(line: 490, column: 39, scope: !1760)
!1929 = !DILocation(line: 489, column: 9, scope: !1753)
!1930 = !DILocation(line: 492, column: 9, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1760, file: !3, line: 491, column: 5)
!1932 = !DILocation(line: 494, column: 13, scope: !1759)
!1933 = !DILocation(line: 496, column: 14, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1759, file: !3, line: 496, column: 9)
!1935 = !DILocation(line: 496, column: 32, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1934, file: !3, line: 496, column: 9)
!1937 = !DILocation(line: 496, column: 23, scope: !1936)
!1938 = !DILocation(line: 496, column: 9, scope: !1934)
!1939 = !DILocation(line: 497, column: 42, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1941, file: !3, line: 497, column: 17)
!1941 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 496, column: 48)
!1942 = !{!789, !761, i64 72}
!1943 = !DILocation(line: 497, column: 46, scope: !1940)
!1944 = !DILocation(line: 497, column: 17, scope: !1940)
!1945 = !DILocation(line: 498, column: 45, scope: !1940)
!1946 = !DILocation(line: 497, column: 17, scope: !1941)
!1947 = !DILocation(line: 499, column: 21, scope: !1940)
!1948 = !DILocation(line: 496, column: 44, scope: !1936)
!1949 = !DILocation(line: 496, column: 9, scope: !1936)
!1950 = distinct !{!1950, !1938, !1951}
!1951 = !DILocation(line: 501, column: 9, scope: !1934)
!1952 = !DILocation(line: 505, column: 37, scope: !1753)
!1953 = !DILocation(line: 505, column: 12, scope: !1753)
!1954 = !DILocation(line: 505, column: 21, scope: !1753)
!1955 = !DILocation(line: 505, column: 35, scope: !1753)
!1956 = !{!798, !761, i64 524328}
!1957 = !DILocation(line: 506, column: 12, scope: !1753)
!1958 = !DILocation(line: 506, column: 5, scope: !1753)
!1959 = !DILocation(line: 511, column: 27, scope: !1753)
!1960 = !DILocation(line: 511, column: 5, scope: !1753)
!1961 = !DILocation(line: 511, column: 13, scope: !1753)
!1962 = !DILocation(line: 511, column: 18, scope: !1753)
!1963 = !DILocation(line: 512, column: 32, scope: !1753)
!1964 = !DILocation(line: 512, column: 13, scope: !1753)
!1965 = !DILocation(line: 512, column: 19, scope: !1753)
!1966 = !DILocation(line: 513, column: 16, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 513, column: 9)
!1968 = !{!789, !709, i64 2976}
!1969 = !DILocation(line: 513, column: 9, scope: !1967)
!1970 = !DILocation(line: 513, column: 9, scope: !1753)
!1971 = !DILocation(line: 514, column: 22, scope: !1967)
!1972 = !DILocation(line: 514, column: 9, scope: !1967)
!1973 = !DILocation(line: 515, column: 16, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1753, file: !3, line: 515, column: 9)
!1975 = !{!789, !709, i64 2980}
!1976 = !DILocation(line: 515, column: 9, scope: !1974)
!1977 = !DILocation(line: 515, column: 9, scope: !1753)
!1978 = !DILocation(line: 516, column: 23, scope: !1974)
!1979 = !DILocation(line: 516, column: 9, scope: !1974)
!1980 = !DILocation(line: 518, column: 12, scope: !1753)
!1981 = !DILocation(line: 518, column: 21, scope: !1753)
!1982 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !1985)
!1983 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 3265, column: 9)
!1984 = distinct !DISubprogram(name: "resetManualFailover", scope: !3, file: !3, line: 3264, type: !293, isLocal: false, isDefinition: true, scopeLine: 3264, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!1985 = distinct !DILocation(line: 519, column: 5, scope: !1753)
!1986 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !1985)
!1987 = !{!798, !790, i64 524376}
!1988 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !1985)
!1989 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !1985)
!1990 = !{!798, !709, i64 524400}
!1991 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !1985)
!1992 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !1985)
!1993 = !{!798, !761, i64 524384}
!1994 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !1985)
!1995 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !1985)
!1996 = !{!798, !790, i64 524392}
!1997 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !1985)
!1998 = !DILocation(line: 419, column: 28, scope: !1720, inlinedAt: !1999)
!1999 = distinct !DILocation(line: 520, column: 5, scope: !1753)
!2000 = !DILocation(line: 419, column: 9, scope: !1720, inlinedAt: !1999)
!2001 = !DILocation(line: 420, column: 29, scope: !1720, inlinedAt: !1999)
!2002 = !DILocation(line: 420, column: 22, scope: !1720, inlinedAt: !1999)
!2003 = !DILocation(line: 420, column: 9, scope: !1720, inlinedAt: !1999)
!2004 = !DILocation(line: 422, column: 19, scope: !1720, inlinedAt: !1999)
!2005 = !DILocation(line: 423, column: 19, scope: !1720, inlinedAt: !1999)
!2006 = !DILocation(line: 424, column: 23, scope: !1734, inlinedAt: !1999)
!2007 = !DILocation(line: 424, column: 9, scope: !1720, inlinedAt: !1999)
!2008 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !2009)
!2009 = distinct !DILocation(line: 425, column: 9, scope: !1741, inlinedAt: !1999)
!2010 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !2009)
!2011 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !2009)
!2012 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !2009)
!2013 = !DILocation(line: 427, column: 5, scope: !1741, inlinedAt: !1999)
!2014 = !DILocation(line: 428, column: 1, scope: !1720, inlinedAt: !1999)
!2015 = !DILocation(line: 521, column: 1, scope: !1753)
!2016 = !DILocation(line: 3742, column: 19, scope: !1818)
!2017 = !DILocation(line: 3742, column: 12, scope: !1818)
!2018 = !DILocation(line: 3742, column: 5, scope: !1818)
!2019 = !DILocation(line: 3744, column: 19, scope: !1818)
!2020 = !DILocation(line: 3744, column: 12, scope: !1818)
!2021 = !DILocation(line: 3744, column: 5, scope: !1818)
!2022 = !DILocation(line: 3746, column: 1, scope: !1818)
!2023 = distinct !DISubprogram(name: "clusterAcceptHandler", scope: !3, file: !3, line: 616, type: !2024, isLocal: false, isDefinition: true, scopeLine: 616, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2086)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{null, !2026, !177, !6, !177}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventLoop", file: !2028, line: 109, baseType: !2029)
!2028 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/ae.h", directory: "/root/.unikraft/apps/redis/build")
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeEventLoop", file: !2028, line: 97, size: 640, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2049, !2056, !2078, !2079, !2080, !2085}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "maxfd", scope: !2029, file: !2028, line: 98, baseType: !177, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "setsize", scope: !2029, file: !2028, line: 99, baseType: !177, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventNextId", scope: !2029, file: !2028, line: 100, baseType: !186, size: 64, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "lastTime", scope: !2029, file: !2028, line: 101, baseType: !288, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2029, file: !2028, line: 102, baseType: !2036, size: 64, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileEvent", file: !2028, line: 76, baseType: !2038)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFileEvent", file: !2028, line: 71, size: 256, elements: !2039)
!2039 = !{!2040, !2041, !2047, !2048}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2038, file: !2028, line: 72, baseType: !177, size: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "rfileProc", scope: !2038, file: !2028, line: 73, baseType: !2042, size: 64, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFileProc", file: !2028, line: 65, baseType: !2044)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{null, !2046, !177, !6, !177}
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "wfileProc", scope: !2038, file: !2028, line: 74, baseType: !2042, size: 64, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !2038, file: !2028, line: 75, baseType: !6, size: 64, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fired", scope: !2029, file: !2028, line: 103, baseType: !2050, size: 64, offset: 256)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeFiredEvent", file: !2028, line: 94, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeFiredEvent", file: !2028, line: 91, size: 64, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !2052, file: !2028, line: 92, baseType: !177, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2052, file: !2028, line: 93, baseType: !177, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "timeEventHead", scope: !2029, file: !2028, line: 104, baseType: !2057, size: 64, offset: 320)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeEvent", file: !2028, line: 88, baseType: !2059)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aeTimeEvent", file: !2028, line: 79, size: 512, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2069, !2074, !2075, !2077}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2059, file: !2028, line: 80, baseType: !186, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "when_sec", scope: !2059, file: !2028, line: 81, baseType: !13, size: 64, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "when_ms", scope: !2059, file: !2028, line: 82, baseType: !13, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "timeProc", scope: !2059, file: !2028, line: 83, baseType: !2065, size: 64, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeTimeProc", file: !2028, line: 66, baseType: !2067)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!177, !2046, !186, !6}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "finalizerProc", scope: !2059, file: !2028, line: 84, baseType: !2070, size: 64, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeEventFinalizerProc", file: !2028, line: 67, baseType: !2072)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !2046, !6}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "clientData", scope: !2059, file: !2028, line: 85, baseType: !6, size: 64, offset: 320)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2059, file: !2028, line: 86, baseType: !2076, size: 64, offset: 384)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2059, file: !2028, line: 87, baseType: !2076, size: 64, offset: 448)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2029, file: !2028, line: 105, baseType: !177, size: 32, offset: 384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "apidata", scope: !2029, file: !2028, line: 106, baseType: !6, size: 64, offset: 448)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "beforesleep", scope: !2029, file: !2028, line: 107, baseType: !2081, size: 64, offset: 512)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "aeBeforeSleepProc", file: !2028, line: 68, baseType: !2083)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !2046}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "aftersleep", scope: !2029, file: !2028, line: 108, baseType: !2081, size: 64, offset: 576)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095}
!2087 = !DILocalVariable(name: "el", arg: 1, scope: !2023, file: !3, line: 616, type: !2026)
!2088 = !DILocalVariable(name: "fd", arg: 2, scope: !2023, file: !3, line: 616, type: !177)
!2089 = !DILocalVariable(name: "privdata", arg: 3, scope: !2023, file: !3, line: 616, type: !6)
!2090 = !DILocalVariable(name: "mask", arg: 4, scope: !2023, file: !3, line: 616, type: !177)
!2091 = !DILocalVariable(name: "cport", scope: !2023, file: !3, line: 617, type: !177)
!2092 = !DILocalVariable(name: "cfd", scope: !2023, file: !3, line: 617, type: !177)
!2093 = !DILocalVariable(name: "max", scope: !2023, file: !3, line: 618, type: !177)
!2094 = !DILocalVariable(name: "cip", scope: !2023, file: !3, line: 619, type: !85)
!2095 = !DILocalVariable(name: "link", scope: !2023, file: !3, line: 620, type: !179)
!2096 = !DILocation(line: 616, column: 40, scope: !2023)
!2097 = !DILocation(line: 616, column: 48, scope: !2023)
!2098 = !DILocation(line: 616, column: 58, scope: !2023)
!2099 = !DILocation(line: 616, column: 72, scope: !2023)
!2100 = !DILocation(line: 617, column: 5, scope: !2023)
!2101 = !DILocation(line: 618, column: 9, scope: !2023)
!2102 = !DILocation(line: 619, column: 5, scope: !2023)
!2103 = !DILocation(line: 619, column: 10, scope: !2023)
!2104 = !DILocation(line: 627, column: 16, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2023, file: !3, line: 627, column: 9)
!2106 = !{!789, !761, i64 2464}
!2107 = !DILocation(line: 627, column: 27, scope: !2105)
!2108 = !DILocation(line: 627, column: 45, scope: !2105)
!2109 = !DILocation(line: 627, column: 38, scope: !2105)
!2110 = !DILocation(line: 627, column: 35, scope: !2105)
!2111 = !DILocation(line: 0, scope: !2023)
!2112 = !DILocation(line: 617, column: 9, scope: !2023)
!2113 = !DILocation(line: 630, column: 15, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2023, file: !3, line: 629, column: 18)
!2115 = !DILocation(line: 617, column: 16, scope: !2023)
!2116 = !DILocation(line: 631, column: 17, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2114, file: !3, line: 631, column: 13)
!2118 = !DILocation(line: 631, column: 13, scope: !2114)
!2119 = !DILocation(line: 632, column: 17, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !2121, file: !3, line: 632, column: 17)
!2121 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 631, column: 30)
!2122 = !DILocation(line: 632, column: 23, scope: !2120)
!2123 = !DILocation(line: 632, column: 17, scope: !2121)
!2124 = !DILocation(line: 633, column: 17, scope: !2120)
!2125 = !DILocation(line: 637, column: 9, scope: !2114)
!2126 = !DILocation(line: 638, column: 9, scope: !2114)
!2127 = !DILocation(line: 641, column: 66, scope: !2114)
!2128 = !DILocation(line: 641, column: 9, scope: !2114)
!2129 = !DILocalVariable(name: "node", arg: 1, scope: !2130, file: !3, line: 590, type: !378)
!2130 = distinct !DISubprogram(name: "createClusterLink", scope: !3, file: !3, line: 590, type: !2131, isLocal: false, isDefinition: true, scopeLine: 590, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2133)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!179, !378}
!2133 = !{!2129, !2134}
!2134 = !DILocalVariable(name: "link", scope: !2130, file: !3, line: 591, type: !179)
!2135 = !DILocation(line: 590, column: 45, scope: !2130, inlinedAt: !2136)
!2136 = distinct !DILocation(line: 647, column: 16, scope: !2114)
!2137 = !DILocation(line: 591, column: 25, scope: !2130, inlinedAt: !2136)
!2138 = !DILocation(line: 591, column: 18, scope: !2130, inlinedAt: !2136)
!2139 = !DILocation(line: 592, column: 19, scope: !2130, inlinedAt: !2136)
!2140 = !DILocation(line: 592, column: 11, scope: !2130, inlinedAt: !2136)
!2141 = !DILocation(line: 592, column: 17, scope: !2130, inlinedAt: !2136)
!2142 = !{!2143, !790, i64 0}
!2143 = !{!"clusterLink", !790, i64 0, !709, i64 8, !761, i64 16, !761, i64 24, !761, i64 32}
!2144 = !DILocation(line: 593, column: 20, scope: !2130, inlinedAt: !2136)
!2145 = !DILocation(line: 593, column: 11, scope: !2130, inlinedAt: !2136)
!2146 = !DILocation(line: 593, column: 18, scope: !2130, inlinedAt: !2136)
!2147 = !{!2143, !761, i64 16}
!2148 = !DILocation(line: 594, column: 20, scope: !2130, inlinedAt: !2136)
!2149 = !DILocation(line: 594, column: 11, scope: !2130, inlinedAt: !2136)
!2150 = !DILocation(line: 594, column: 18, scope: !2130, inlinedAt: !2136)
!2151 = !{!2143, !761, i64 24}
!2152 = !DILocation(line: 595, column: 11, scope: !2130, inlinedAt: !2136)
!2153 = !DILocation(line: 595, column: 16, scope: !2130, inlinedAt: !2136)
!2154 = !{!2143, !761, i64 32}
!2155 = !DILocation(line: 596, column: 11, scope: !2130, inlinedAt: !2136)
!2156 = !DILocation(line: 597, column: 5, scope: !2130, inlinedAt: !2136)
!2157 = !DILocation(line: 620, column: 18, scope: !2023)
!2158 = !DILocation(line: 648, column: 18, scope: !2114)
!2159 = !{!2143, !709, i64 8}
!2160 = !DILocation(line: 649, column: 34, scope: !2114)
!2161 = !DILocation(line: 649, column: 9, scope: !2114)
!2162 = !DILocation(line: 629, column: 5, scope: !2023)
!2163 = !DILocation(line: 629, column: 14, scope: !2023)
!2164 = distinct !{!2164, !2162, !2165}
!2165 = !DILocation(line: 650, column: 5, scope: !2023)
!2166 = !DILocation(line: 0, scope: !2121)
!2167 = !DILocation(line: 651, column: 1, scope: !2023)
!2168 = !DILocation(line: 3265, column: 16, scope: !1983)
!2169 = !DILocation(line: 3265, column: 25, scope: !1983)
!2170 = !DILocation(line: 3265, column: 9, scope: !1983)
!2171 = !DILocation(line: 3265, column: 32, scope: !1983)
!2172 = !DILocation(line: 3265, column: 35, scope: !1983)
!2173 = !DILocation(line: 3265, column: 9, scope: !1984)
!2174 = !DILocation(line: 3266, column: 39, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 3265, column: 55)
!2176 = !{!789, !790, i64 576}
!2177 = !DILocation(line: 3267, column: 9, scope: !2175)
!2178 = !DILocation(line: 3268, column: 5, scope: !2175)
!2179 = !DILocation(line: 3269, column: 12, scope: !1984)
!2180 = !DILocation(line: 3269, column: 21, scope: !1984)
!2181 = !DILocation(line: 3269, column: 28, scope: !1984)
!2182 = !DILocation(line: 3270, column: 21, scope: !1984)
!2183 = !DILocation(line: 3270, column: 34, scope: !1984)
!2184 = !DILocation(line: 3271, column: 21, scope: !1984)
!2185 = !DILocation(line: 3271, column: 30, scope: !1984)
!2186 = !DILocation(line: 3272, column: 21, scope: !1984)
!2187 = !DILocation(line: 3272, column: 38, scope: !1984)
!2188 = !DILocation(line: 3273, column: 1, scope: !1984)
!2189 = distinct !DISubprogram(name: "clusterReset", scope: !3, file: !3, line: 532, type: !282, isLocal: false, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2190)
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2197}
!2191 = !DILocalVariable(name: "hard", arg: 1, scope: !2189, file: !3, line: 532, type: !177)
!2192 = !DILocalVariable(name: "di", scope: !2189, file: !3, line: 533, type: !297)
!2193 = !DILocalVariable(name: "de", scope: !2189, file: !3, line: 534, type: !340)
!2194 = !DILocalVariable(name: "j", scope: !2189, file: !3, line: 535, type: !177)
!2195 = !DILocalVariable(name: "node", scope: !2196, file: !3, line: 554, type: !378)
!2196 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 553, column: 40)
!2197 = !DILocalVariable(name: "oldname", scope: !2198, file: !3, line: 563, type: !189)
!2198 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 562, column: 15)
!2199 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 562, column: 9)
!2200 = !DILocation(line: 532, column: 23, scope: !2189)
!2201 = !DILocation(line: 538, column: 9, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 538, column: 9)
!2203 = !DILocation(line: 538, column: 9, scope: !2189)
!2204 = !DILocation(line: 539, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 538, column: 30)
!2206 = !DILocation(line: 540, column: 9, scope: !2205)
!2207 = !DILocation(line: 541, column: 9, scope: !2205)
!2208 = !DILocation(line: 542, column: 5, scope: !2205)
!2209 = !DILocation(line: 3742, column: 19, scope: !1818, inlinedAt: !2210)
!2210 = distinct !DILocation(line: 545, column: 5, scope: !2189)
!2211 = !DILocation(line: 3742, column: 12, scope: !1818, inlinedAt: !2210)
!2212 = !DILocation(line: 3742, column: 5, scope: !1818, inlinedAt: !2210)
!2213 = !DILocation(line: 3744, column: 19, scope: !1818, inlinedAt: !2210)
!2214 = !DILocation(line: 3744, column: 12, scope: !1818, inlinedAt: !2210)
!2215 = !DILocation(line: 3744, column: 5, scope: !1818, inlinedAt: !2210)
!2216 = !DILocation(line: 3746, column: 1, scope: !1818, inlinedAt: !2210)
!2217 = !DILocation(line: 3265, column: 16, scope: !1983, inlinedAt: !2218)
!2218 = distinct !DILocation(line: 546, column: 5, scope: !2189)
!2219 = !DILocation(line: 3265, column: 25, scope: !1983, inlinedAt: !2218)
!2220 = !DILocation(line: 3265, column: 9, scope: !1983, inlinedAt: !2218)
!2221 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !2218)
!2222 = !DILocation(line: 3265, column: 35, scope: !1983, inlinedAt: !2218)
!2223 = !DILocation(line: 3265, column: 9, scope: !1984, inlinedAt: !2218)
!2224 = !DILocation(line: 3266, column: 39, scope: !2175, inlinedAt: !2218)
!2225 = !DILocation(line: 3267, column: 9, scope: !2175, inlinedAt: !2218)
!2226 = !DILocation(line: 3268, column: 5, scope: !2175, inlinedAt: !2218)
!2227 = !DILocation(line: 3269, column: 12, scope: !1984, inlinedAt: !2218)
!2228 = !DILocation(line: 3269, column: 21, scope: !1984, inlinedAt: !2218)
!2229 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !2218)
!2230 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !2218)
!2231 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !2218)
!2232 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !2218)
!2233 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !2218)
!2234 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !2218)
!2235 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !2218)
!2236 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !2218)
!2237 = !DILocation(line: 535, column: 9, scope: !2189)
!2238 = !DILocation(line: 549, column: 10, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 549, column: 5)
!2240 = !DILocation(line: 549, column: 5, scope: !2239)
!2241 = !DILocalVariable(name: "slot", arg: 1, scope: !2242, file: !3, line: 3716, type: !177)
!2242 = distinct !DISubprogram(name: "clusterDelSlot", scope: !3, file: !3, line: 3716, type: !1459, isLocal: false, isDefinition: true, scopeLine: 3716, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2243)
!2243 = !{!2241, !2244}
!2244 = !DILocalVariable(name: "n", scope: !2242, file: !3, line: 3717, type: !378)
!2245 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !2246)
!2246 = distinct !DILocation(line: 549, column: 41, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 549, column: 5)
!2248 = !DILocation(line: 3717, column: 22, scope: !2242, inlinedAt: !2246)
!2249 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !2246)
!2250 = !DILocation(line: 3719, column: 10, scope: !2251, inlinedAt: !2246)
!2251 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 3719, column: 9)
!2252 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !2246)
!2253 = !DILocation(line: 3719, column: 13, scope: !2251, inlinedAt: !2246)
!2254 = !DILocalVariable(name: "n", arg: 1, scope: !2255, file: !3, line: 3690, type: !378)
!2255 = distinct !DISubprogram(name: "clusterNodeClearSlotBit", scope: !3, file: !3, line: 3690, type: !1247, isLocal: false, isDefinition: true, scopeLine: 3690, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2256)
!2256 = !{!2254, !2257, !2258}
!2257 = !DILocalVariable(name: "slot", arg: 2, scope: !2255, file: !3, line: 3690, type: !177)
!2258 = !DILocalVariable(name: "old", scope: !2255, file: !3, line: 3691, type: !177)
!2259 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !2260)
!2260 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !2246)
!2261 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !2260)
!2262 = !DILocalVariable(name: "bitmap", arg: 1, scope: !2263, file: !3, line: 3627, type: !246)
!2263 = distinct !DISubprogram(name: "bitmapTestBit", scope: !3, file: !3, line: 3627, type: !2264, isLocal: false, isDefinition: true, scopeLine: 3627, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2266)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!177, !246, !177}
!2266 = !{!2262, !2267, !2268, !2269}
!2267 = !DILocalVariable(name: "pos", arg: 2, scope: !2263, file: !3, line: 3627, type: !177)
!2268 = !DILocalVariable(name: "byte", scope: !2263, file: !3, line: 3628, type: !8)
!2269 = !DILocalVariable(name: "bit", scope: !2263, file: !3, line: 3629, type: !177)
!2270 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !2271)
!2271 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !2260)
!2272 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !2271)
!2273 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !2271)
!2274 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !2271)
!2275 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !2271)
!2276 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !2271)
!2277 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !2271)
!2278 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !2271)
!2279 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !2271)
!2280 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !2271)
!2281 = !DILocalVariable(name: "bitmap", arg: 1, scope: !2282, file: !3, line: 3641, type: !246)
!2282 = distinct !DISubprogram(name: "bitmapClearBit", scope: !3, file: !3, line: 3641, type: !2283, isLocal: false, isDefinition: true, scopeLine: 3641, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2285)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{null, !246, !177}
!2285 = !{!2281, !2286, !2287, !2288}
!2286 = !DILocalVariable(name: "pos", arg: 2, scope: !2282, file: !3, line: 3641, type: !177)
!2287 = !DILocalVariable(name: "byte", scope: !2282, file: !3, line: 3642, type: !8)
!2288 = !DILocalVariable(name: "bit", scope: !2282, file: !3, line: 3643, type: !177)
!2289 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !2290)
!2290 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !2260)
!2291 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !2290)
!2292 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !2290)
!2293 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !2290)
!2294 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !2290)
!2295 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !2290)
!2296 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !2260)
!2297 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !2260)
!2298 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !2246)
!2299 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !2260)
!2300 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 3693, column: 9)
!2301 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !2260)
!2302 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !2260)
!2303 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !2246)
!2304 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !2246)
!2305 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !2246)
!2306 = !DILocation(line: 3722, column: 5, scope: !2242, inlinedAt: !2246)
!2307 = !DILocation(line: 0, scope: !2189)
!2308 = !DILocation(line: 3723, column: 1, scope: !2242, inlinedAt: !2246)
!2309 = !DILocation(line: 549, column: 37, scope: !2247)
!2310 = !DILocation(line: 549, column: 5, scope: !2247)
!2311 = !DILocation(line: 549, column: 19, scope: !2247)
!2312 = distinct !{!2312, !2240, !2313}
!2313 = !DILocation(line: 549, column: 57, scope: !2239)
!2314 = !DILocation(line: 552, column: 46, scope: !2189)
!2315 = !DILocation(line: 552, column: 10, scope: !2189)
!2316 = !DILocation(line: 533, column: 19, scope: !2189)
!2317 = !DILocation(line: 553, column: 5, scope: !2189)
!2318 = !DILocation(line: 553, column: 17, scope: !2189)
!2319 = !DILocation(line: 534, column: 16, scope: !2189)
!2320 = !DILocation(line: 553, column: 31, scope: !2189)
!2321 = !DILocation(line: 554, column: 29, scope: !2196)
!2322 = !DILocation(line: 554, column: 22, scope: !2196)
!2323 = !DILocation(line: 556, column: 21, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2196, file: !3, line: 556, column: 13)
!2325 = !DILocation(line: 556, column: 18, scope: !2324)
!2326 = !DILocation(line: 556, column: 13, scope: !2196)
!2327 = distinct !{!2327, !2317, !2328}
!2328 = !DILocation(line: 558, column: 5, scope: !2189)
!2329 = !DILocation(line: 557, column: 9, scope: !2196)
!2330 = !DILocation(line: 0, scope: !2324)
!2331 = !DILocation(line: 559, column: 5, scope: !2189)
!2332 = !DILocation(line: 562, column: 9, scope: !2199)
!2333 = !DILocation(line: 562, column: 9, scope: !2189)
!2334 = !DILocation(line: 565, column: 16, scope: !2198)
!2335 = !DILocation(line: 565, column: 25, scope: !2198)
!2336 = !DILocation(line: 565, column: 38, scope: !2198)
!2337 = !DILocation(line: 566, column: 25, scope: !2198)
!2338 = !DILocation(line: 566, column: 39, scope: !2198)
!2339 = !DILocation(line: 567, column: 9, scope: !2198)
!2340 = !DILocation(line: 567, column: 17, scope: !2198)
!2341 = !DILocation(line: 567, column: 29, scope: !2198)
!2342 = !DILocation(line: 568, column: 9, scope: !2198)
!2343 = !DILocation(line: 572, column: 29, scope: !2198)
!2344 = !DILocation(line: 572, column: 19, scope: !2198)
!2345 = !DILocation(line: 563, column: 13, scope: !2198)
!2346 = !DILocation(line: 573, column: 27, scope: !2198)
!2347 = !DILocation(line: 573, column: 36, scope: !2198)
!2348 = !DILocation(line: 573, column: 9, scope: !2198)
!2349 = !DILocation(line: 574, column: 9, scope: !2198)
!2350 = !DILocation(line: 575, column: 27, scope: !2198)
!2351 = !DILocation(line: 575, column: 9, scope: !2198)
!2352 = !DILocation(line: 576, column: 24, scope: !2198)
!2353 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !2354)
!2354 = distinct !DILocation(line: 576, column: 9, scope: !2198)
!2355 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !2354)
!2356 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !2354)
!2357 = !DILocation(line: 891, column: 23, scope: !856, inlinedAt: !2354)
!2358 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !2354)
!2359 = !DILocation(line: 891, column: 52, scope: !856, inlinedAt: !2354)
!2360 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !2354)
!2361 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !2354)
!2362 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !2354)
!2363 = !DILocation(line: 577, column: 63, scope: !2198)
!2364 = !DILocation(line: 577, column: 9, scope: !2198)
!2365 = !DILocation(line: 578, column: 5, scope: !2198)
!2366 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !2367)
!2367 = distinct !DILocation(line: 581, column: 5, scope: !2189)
!2368 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !2367)
!2369 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !2367)
!2370 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !2367)
!2371 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !2367)
!2372 = !DILocation(line: 584, column: 1, scope: !2189)
!2373 = distinct !DISubprogram(name: "clusterSetNodeAsMaster", scope: !3, file: !3, line: 1504, type: !2374, isLocal: false, isDefinition: true, scopeLine: 1504, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2376)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{null, !378}
!2376 = !{!2377}
!2377 = !DILocalVariable(name: "n", arg: 1, scope: !2373, file: !3, line: 1504, type: !378)
!2378 = !DILocation(line: 1504, column: 42, scope: !2373)
!2379 = !DILocation(line: 1505, column: 9, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 1505, column: 9)
!2381 = !DILocation(line: 1505, column: 9, scope: !2373)
!2382 = !DILocation(line: 1507, column: 12, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2373, file: !3, line: 1507, column: 9)
!2384 = !DILocation(line: 1507, column: 9, scope: !2383)
!2385 = !DILocation(line: 1507, column: 9, scope: !2373)
!2386 = !DILocalVariable(name: "master", arg: 1, scope: !2387, file: !3, line: 820, type: !378)
!2387 = distinct !DISubprogram(name: "clusterNodeRemoveSlave", scope: !3, file: !3, line: 820, type: !1028, isLocal: false, isDefinition: true, scopeLine: 820, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2388)
!2388 = !{!2386, !2389, !2390, !2391}
!2389 = !DILocalVariable(name: "slave", arg: 2, scope: !2387, file: !3, line: 820, type: !378)
!2390 = !DILocalVariable(name: "j", scope: !2387, file: !3, line: 821, type: !177)
!2391 = !DILocalVariable(name: "remaining_slaves", scope: !2392, file: !3, line: 826, type: !177)
!2392 = distinct !DILexicalBlock(scope: !2393, file: !3, line: 825, column: 44)
!2393 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 825, column: 17)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 824, column: 41)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !3, line: 824, column: 13)
!2396 = distinct !DILexicalBlock(scope: !2397, file: !3, line: 823, column: 45)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 823, column: 5)
!2398 = distinct !DILexicalBlock(scope: !2387, file: !3, line: 823, column: 5)
!2399 = !DILocation(line: 820, column: 41, scope: !2387, inlinedAt: !2400)
!2400 = distinct !DILocation(line: 1508, column: 9, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 1507, column: 21)
!2402 = !DILocation(line: 820, column: 62, scope: !2387, inlinedAt: !2400)
!2403 = !DILocation(line: 821, column: 9, scope: !2387, inlinedAt: !2400)
!2404 = !DILocation(line: 823, column: 10, scope: !2398, inlinedAt: !2400)
!2405 = !DILocation(line: 823, column: 29, scope: !2397, inlinedAt: !2400)
!2406 = !DILocation(line: 823, column: 19, scope: !2397, inlinedAt: !2400)
!2407 = !DILocation(line: 823, column: 5, scope: !2398, inlinedAt: !2400)
!2408 = !DILocation(line: 824, column: 13, scope: !2395, inlinedAt: !2400)
!2409 = !DILocation(line: 824, column: 31, scope: !2395, inlinedAt: !2400)
!2410 = !DILocation(line: 0, scope: !2397, inlinedAt: !2400)
!2411 = !DILocation(line: 824, column: 13, scope: !2396, inlinedAt: !2400)
!2412 = !DILocation(line: 825, column: 23, scope: !2393, inlinedAt: !2400)
!2413 = !DILocation(line: 825, column: 17, scope: !2394, inlinedAt: !2400)
!2414 = !DILocation(line: 826, column: 64, scope: !2392, inlinedAt: !2400)
!2415 = !DILocation(line: 826, column: 21, scope: !2392, inlinedAt: !2400)
!2416 = !DILocation(line: 827, column: 25, scope: !2392, inlinedAt: !2400)
!2417 = !DILocation(line: 827, column: 56, scope: !2392, inlinedAt: !2400)
!2418 = !DILocation(line: 827, column: 42, scope: !2392, inlinedAt: !2400)
!2419 = !DILocation(line: 828, column: 52, scope: !2392, inlinedAt: !2400)
!2420 = !DILocation(line: 828, column: 50, scope: !2392, inlinedAt: !2400)
!2421 = !DILocation(line: 827, column: 17, scope: !2392, inlinedAt: !2400)
!2422 = !DILocation(line: 829, column: 13, scope: !2392, inlinedAt: !2400)
!2423 = !DILocation(line: 830, column: 30, scope: !2394, inlinedAt: !2400)
!2424 = !DILocation(line: 831, column: 35, scope: !2425, inlinedAt: !2400)
!2425 = distinct !DILexicalBlock(scope: !2394, file: !3, line: 831, column: 17)
!2426 = !DILocation(line: 831, column: 17, scope: !2394, inlinedAt: !2400)
!2427 = !DILocation(line: 832, column: 25, scope: !2425, inlinedAt: !2400)
!2428 = !DILocation(line: 832, column: 31, scope: !2425, inlinedAt: !2400)
!2429 = !DILocation(line: 832, column: 17, scope: !2425, inlinedAt: !2400)
!2430 = !DILocation(line: 823, column: 5, scope: !2397, inlinedAt: !2400)
!2431 = distinct !{!2431, !2432, !2433}
!2432 = !DILocation(line: 823, column: 5, scope: !2398)
!2433 = !DILocation(line: 835, column: 5, scope: !2398)
!2434 = !DILocation(line: 0, scope: !2401)
!2435 = !DILocation(line: 837, column: 1, scope: !2387, inlinedAt: !2400)
!2436 = !DILocation(line: 1509, column: 18, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 1509, column: 13)
!2438 = !DILocation(line: 1509, column: 15, scope: !2437)
!2439 = !DILocation(line: 1509, column: 13, scope: !2401)
!2440 = !DILocation(line: 0, scope: !2437)
!2441 = !DILocation(line: 1509, column: 35, scope: !2437)
!2442 = !DILocation(line: 1509, column: 26, scope: !2437)
!2443 = !DILocation(line: 1511, column: 14, scope: !2373)
!2444 = !DILocation(line: 1512, column: 14, scope: !2373)
!2445 = !DILocation(line: 1513, column: 16, scope: !2373)
!2446 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !2447)
!2447 = distinct !DILocation(line: 1516, column: 5, scope: !2373)
!2448 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !2447)
!2449 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !2447)
!2450 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !2447)
!2451 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !2447)
!2452 = !DILocation(line: 1518, column: 1, scope: !2373)
!2453 = !DILocation(line: 3716, column: 24, scope: !2242)
!2454 = !DILocation(line: 3717, column: 29, scope: !2242)
!2455 = !DILocation(line: 3717, column: 22, scope: !2242)
!2456 = !DILocation(line: 3717, column: 18, scope: !2242)
!2457 = !DILocation(line: 3719, column: 10, scope: !2251)
!2458 = !DILocation(line: 3719, column: 9, scope: !2242)
!2459 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !2460)
!2460 = distinct !DILocation(line: 3720, column: 5, scope: !2242)
!2461 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !2460)
!2462 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !2463)
!2463 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !2460)
!2464 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !2463)
!2465 = !DILocation(line: 3628, column: 21, scope: !2263, inlinedAt: !2463)
!2466 = !DILocation(line: 3628, column: 18, scope: !2263, inlinedAt: !2463)
!2467 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !2463)
!2468 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !2463)
!2469 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !2463)
!2470 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !2463)
!2471 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !2463)
!2472 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !2463)
!2473 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !2463)
!2474 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !2463)
!2475 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !2476)
!2476 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !2460)
!2477 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !2476)
!2478 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !2476)
!2479 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !2476)
!2480 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !2476)
!2481 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !2476)
!2482 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !2460)
!2483 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !2460)
!2484 = !DILocation(line: 3720, column: 5, scope: !2242)
!2485 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !2460)
!2486 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !2460)
!2487 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !2460)
!2488 = !DILocation(line: 3721, column: 12, scope: !2242)
!2489 = !DILocation(line: 3721, column: 5, scope: !2242)
!2490 = !DILocation(line: 3721, column: 33, scope: !2242)
!2491 = !DILocation(line: 3722, column: 5, scope: !2242)
!2492 = !DILocation(line: 0, scope: !2251)
!2493 = !DILocation(line: 3723, column: 1, scope: !2242)
!2494 = distinct !DISubprogram(name: "clusterDelNode", scope: !3, file: !3, line: 906, type: !2374, isLocal: false, isDefinition: true, scopeLine: 906, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2495)
!2495 = !{!2496, !2497, !2498, !2499, !2500}
!2496 = !DILocalVariable(name: "delnode", arg: 1, scope: !2494, file: !3, line: 906, type: !378)
!2497 = !DILocalVariable(name: "j", scope: !2494, file: !3, line: 907, type: !177)
!2498 = !DILocalVariable(name: "di", scope: !2494, file: !3, line: 908, type: !297)
!2499 = !DILocalVariable(name: "de", scope: !2494, file: !3, line: 909, type: !340)
!2500 = !DILocalVariable(name: "node", scope: !2501, file: !3, line: 924, type: !378)
!2501 = distinct !DILexicalBlock(scope: !2494, file: !3, line: 923, column: 40)
!2502 = !DILocation(line: 906, column: 34, scope: !2494)
!2503 = !DILocation(line: 907, column: 9, scope: !2494)
!2504 = !DILocation(line: 912, column: 10, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2494, file: !3, line: 912, column: 5)
!2506 = !DILocation(line: 0, scope: !2494)
!2507 = !DILocation(line: 912, column: 5, scope: !2505)
!2508 = !DILocation(line: 913, column: 13, scope: !2509)
!2509 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 913, column: 13)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 912, column: 41)
!2511 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 912, column: 5)
!2512 = !DILocation(line: 913, column: 53, scope: !2509)
!2513 = !DILocation(line: 913, column: 13, scope: !2510)
!2514 = !DILocation(line: 914, column: 53, scope: !2509)
!2515 = !DILocation(line: 914, column: 13, scope: !2509)
!2516 = !DILocation(line: 915, column: 20, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 915, column: 13)
!2518 = !DILocation(line: 915, column: 13, scope: !2517)
!2519 = !DILocation(line: 915, column: 51, scope: !2517)
!2520 = !DILocation(line: 915, column: 13, scope: !2510)
!2521 = !DILocation(line: 916, column: 51, scope: !2517)
!2522 = !DILocation(line: 916, column: 13, scope: !2517)
!2523 = !DILocation(line: 917, column: 20, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 917, column: 13)
!2525 = !DILocation(line: 917, column: 13, scope: !2524)
!2526 = !DILocation(line: 917, column: 38, scope: !2524)
!2527 = !DILocation(line: 917, column: 13, scope: !2510)
!2528 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !2529)
!2529 = distinct !DILocation(line: 918, column: 13, scope: !2524)
!2530 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !2529)
!2531 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !2529)
!2532 = !DILocation(line: 3719, column: 13, scope: !2251, inlinedAt: !2529)
!2533 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !2534)
!2534 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !2529)
!2535 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !2534)
!2536 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !2537)
!2537 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !2534)
!2538 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !2537)
!2539 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !2537)
!2540 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !2537)
!2541 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !2537)
!2542 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !2537)
!2543 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !2537)
!2544 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !2537)
!2545 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !2537)
!2546 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !2537)
!2547 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !2548)
!2548 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !2534)
!2549 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !2548)
!2550 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !2548)
!2551 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !2548)
!2552 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !2548)
!2553 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !2548)
!2554 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !2534)
!2555 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !2534)
!2556 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !2529)
!2557 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !2534)
!2558 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !2534)
!2559 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !2529)
!2560 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !2529)
!2561 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !2529)
!2562 = !DILocation(line: 3722, column: 5, scope: !2242, inlinedAt: !2529)
!2563 = !DILocation(line: 3723, column: 1, scope: !2242, inlinedAt: !2529)
!2564 = !DILocation(line: 918, column: 13, scope: !2524)
!2565 = !DILocation(line: 912, column: 37, scope: !2511)
!2566 = !DILocation(line: 912, column: 5, scope: !2511)
!2567 = !DILocation(line: 912, column: 19, scope: !2511)
!2568 = distinct !{!2568, !2507, !2569}
!2569 = !DILocation(line: 919, column: 5, scope: !2505)
!2570 = !DILocation(line: 922, column: 46, scope: !2494)
!2571 = !DILocation(line: 922, column: 10, scope: !2494)
!2572 = !DILocation(line: 908, column: 19, scope: !2494)
!2573 = !DILocation(line: 923, column: 5, scope: !2494)
!2574 = !DILocation(line: 923, column: 17, scope: !2494)
!2575 = !DILocation(line: 909, column: 16, scope: !2494)
!2576 = !DILocation(line: 923, column: 31, scope: !2494)
!2577 = !DILocation(line: 924, column: 29, scope: !2501)
!2578 = !DILocation(line: 924, column: 22, scope: !2501)
!2579 = !DILocation(line: 926, column: 18, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2501, file: !3, line: 926, column: 13)
!2581 = !DILocation(line: 926, column: 13, scope: !2501)
!2582 = distinct !{!2582, !2573, !2583}
!2583 = !DILocation(line: 928, column: 5, scope: !2494)
!2584 = !DILocalVariable(name: "node", arg: 1, scope: !2585, file: !3, line: 792, type: !378)
!2585 = distinct !DISubprogram(name: "clusterNodeDelFailureReport", scope: !3, file: !3, line: 792, type: !1028, isLocal: false, isDefinition: true, scopeLine: 792, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2586)
!2586 = !{!2584, !2587, !2588, !2589, !2590, !2596}
!2587 = !DILocalVariable(name: "sender", arg: 2, scope: !2585, file: !3, line: 792, type: !378)
!2588 = !DILocalVariable(name: "l", scope: !2585, file: !3, line: 793, type: !218)
!2589 = !DILocalVariable(name: "ln", scope: !2585, file: !3, line: 794, type: !224)
!2590 = !DILocalVariable(name: "li", scope: !2585, file: !3, line: 795, type: !2591)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "listIter", file: !220, line: 45, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "listIter", file: !220, line: 42, size: 128, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2592, file: !220, line: 43, baseType: !224, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !2592, file: !220, line: 44, baseType: !177, size: 32, offset: 64)
!2596 = !DILocalVariable(name: "fr", scope: !2585, file: !3, line: 796, type: !2597)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "clusterNodeFailReport", file: !75, line: 114, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clusterNodeFailReport", file: !75, line: 111, size: 128, elements: !2600)
!2600 = !{!2601, !2602}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2599, file: !75, line: 112, baseType: !193, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2599, file: !75, line: 113, baseType: !184, size: 64, offset: 64)
!2603 = !DILocation(line: 792, column: 46, scope: !2585, inlinedAt: !2604)
!2604 = distinct !DILocation(line: 927, column: 9, scope: !2501)
!2605 = !DILocation(line: 792, column: 65, scope: !2585, inlinedAt: !2604)
!2606 = !DILocation(line: 793, column: 21, scope: !2585, inlinedAt: !2604)
!2607 = !DILocation(line: 793, column: 11, scope: !2585, inlinedAt: !2604)
!2608 = !DILocation(line: 795, column: 5, scope: !2585, inlinedAt: !2604)
!2609 = !DILocation(line: 795, column: 14, scope: !2585, inlinedAt: !2604)
!2610 = !DILocation(line: 799, column: 5, scope: !2585, inlinedAt: !2604)
!2611 = !DILocation(line: 800, column: 5, scope: !2585, inlinedAt: !2604)
!2612 = !DILocation(line: 800, column: 18, scope: !2585, inlinedAt: !2604)
!2613 = !DILocation(line: 794, column: 15, scope: !2585, inlinedAt: !2604)
!2614 = !DILocation(line: 800, column: 33, scope: !2585, inlinedAt: !2604)
!2615 = !DILocation(line: 801, column: 18, scope: !2616, inlinedAt: !2604)
!2616 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 800, column: 42)
!2617 = !{!2618, !761, i64 16}
!2618 = !{!"listNode", !761, i64 0, !761, i64 8, !761, i64 16}
!2619 = !DILocation(line: 796, column: 28, scope: !2585, inlinedAt: !2604)
!2620 = !DILocation(line: 802, column: 17, scope: !2621, inlinedAt: !2604)
!2621 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 802, column: 13)
!2622 = !{!2623, !761, i64 0}
!2623 = !{!"clusterNodeFailReport", !761, i64 0, !790, i64 8}
!2624 = !DILocation(line: 802, column: 22, scope: !2621, inlinedAt: !2604)
!2625 = !DILocation(line: 802, column: 13, scope: !2616, inlinedAt: !2604)
!2626 = distinct !{!2626, !2627, !2628}
!2627 = !DILocation(line: 800, column: 5, scope: !2585)
!2628 = !DILocation(line: 803, column: 5, scope: !2585)
!2629 = !DILocation(line: 804, column: 9, scope: !2585, inlinedAt: !2604)
!2630 = !DILocation(line: 804, column: 14, scope: !2631, inlinedAt: !2604)
!2631 = distinct !DILexicalBlock(scope: !2585, file: !3, line: 804, column: 9)
!2632 = !DILocation(line: 807, column: 5, scope: !2585, inlinedAt: !2604)
!2633 = !DILocation(line: 808, column: 5, scope: !2585, inlinedAt: !2604)
!2634 = !DILocation(line: 809, column: 5, scope: !2585, inlinedAt: !2604)
!2635 = !DILocation(line: 0, scope: !2501)
!2636 = !DILocation(line: 810, column: 1, scope: !2585, inlinedAt: !2604)
!2637 = !DILocation(line: 0, scope: !2580)
!2638 = !DILocation(line: 929, column: 5, scope: !2494)
!2639 = !DILocation(line: 932, column: 5, scope: !2494)
!2640 = !DILocation(line: 933, column: 1, scope: !2494)
!2641 = !DILocation(line: 590, column: 45, scope: !2130)
!2642 = !DILocation(line: 591, column: 25, scope: !2130)
!2643 = !DILocation(line: 591, column: 18, scope: !2130)
!2644 = !DILocation(line: 592, column: 19, scope: !2130)
!2645 = !DILocation(line: 592, column: 11, scope: !2130)
!2646 = !DILocation(line: 592, column: 17, scope: !2130)
!2647 = !DILocation(line: 593, column: 20, scope: !2130)
!2648 = !DILocation(line: 593, column: 11, scope: !2130)
!2649 = !DILocation(line: 593, column: 18, scope: !2130)
!2650 = !DILocation(line: 594, column: 20, scope: !2130)
!2651 = !DILocation(line: 594, column: 11, scope: !2130)
!2652 = !DILocation(line: 594, column: 18, scope: !2130)
!2653 = !DILocation(line: 595, column: 11, scope: !2130)
!2654 = !DILocation(line: 595, column: 16, scope: !2130)
!2655 = !DILocation(line: 596, column: 11, scope: !2130)
!2656 = !DILocation(line: 596, column: 14, scope: !2130)
!2657 = !DILocation(line: 597, column: 5, scope: !2130)
!2658 = distinct !DISubprogram(name: "freeClusterLink", scope: !3, file: !3, line: 603, type: !2659, isLocal: false, isDefinition: true, scopeLine: 603, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2661)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !179}
!2661 = !{!2662}
!2662 = !DILocalVariable(name: "link", arg: 1, scope: !2658, file: !3, line: 603, type: !179)
!2663 = !DILocation(line: 603, column: 35, scope: !2658)
!2664 = !DILocation(line: 604, column: 15, scope: !2665)
!2665 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 604, column: 9)
!2666 = !DILocation(line: 604, column: 18, scope: !2665)
!2667 = !DILocation(line: 604, column: 9, scope: !2658)
!2668 = !DILocation(line: 605, column: 34, scope: !2669)
!2669 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 604, column: 25)
!2670 = !DILocation(line: 605, column: 9, scope: !2669)
!2671 = !DILocation(line: 606, column: 5, scope: !2669)
!2672 = !DILocation(line: 607, column: 19, scope: !2658)
!2673 = !DILocation(line: 607, column: 5, scope: !2658)
!2674 = !DILocation(line: 608, column: 19, scope: !2658)
!2675 = !DILocation(line: 608, column: 5, scope: !2658)
!2676 = !DILocation(line: 609, column: 15, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 609, column: 9)
!2678 = !DILocation(line: 609, column: 9, scope: !2677)
!2679 = !DILocation(line: 609, column: 9, scope: !2658)
!2680 = !DILocation(line: 610, column: 21, scope: !2677)
!2681 = !DILocation(line: 610, column: 26, scope: !2677)
!2682 = !DILocation(line: 610, column: 9, scope: !2677)
!2683 = !DILocation(line: 611, column: 17, scope: !2658)
!2684 = !DILocation(line: 611, column: 5, scope: !2658)
!2685 = !DILocation(line: 612, column: 11, scope: !2658)
!2686 = !DILocation(line: 612, column: 5, scope: !2658)
!2687 = !DILocation(line: 613, column: 1, scope: !2658)
!2688 = distinct !DISubprogram(name: "clusterReadHandler", scope: !3, file: !3, line: 2142, type: !2024, isLocal: false, isDefinition: true, scopeLine: 2142, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2689)
!2689 = !{!2690, !2691, !2692, !2693, !2694, !2698, !2699, !2700, !2701, !2702}
!2690 = !DILocalVariable(name: "el", arg: 1, scope: !2688, file: !3, line: 2142, type: !2026)
!2691 = !DILocalVariable(name: "fd", arg: 2, scope: !2688, file: !3, line: 2142, type: !177)
!2692 = !DILocalVariable(name: "privdata", arg: 3, scope: !2688, file: !3, line: 2142, type: !6)
!2693 = !DILocalVariable(name: "mask", arg: 4, scope: !2688, file: !3, line: 2142, type: !177)
!2694 = !DILocalVariable(name: "buf", scope: !2688, file: !3, line: 2143, type: !2695)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 34816, elements: !2696)
!2696 = !{!2697}
!2697 = !DISubrange(count: 4352)
!2698 = !DILocalVariable(name: "nread", scope: !2688, file: !3, line: 2144, type: !14)
!2699 = !DILocalVariable(name: "hdr", scope: !2688, file: !3, line: 2145, type: !92)
!2700 = !DILocalVariable(name: "link", scope: !2688, file: !3, line: 2146, type: !179)
!2701 = !DILocalVariable(name: "readlen", scope: !2688, file: !3, line: 2147, type: !45)
!2702 = !DILocalVariable(name: "rcvbuflen", scope: !2688, file: !3, line: 2147, type: !45)
!2703 = !DILocation(line: 2142, column: 38, scope: !2688)
!2704 = !DILocation(line: 2142, column: 46, scope: !2688)
!2705 = !DILocation(line: 2142, column: 56, scope: !2688)
!2706 = !DILocation(line: 2142, column: 70, scope: !2688)
!2707 = !DILocation(line: 2143, column: 5, scope: !2688)
!2708 = !DILocation(line: 2143, column: 10, scope: !2688)
!2709 = !DILocation(line: 2146, column: 25, scope: !2688)
!2710 = !DILocation(line: 2146, column: 18, scope: !2688)
!2711 = !DILocation(line: 2151, column: 5, scope: !2688)
!2712 = !DILocation(line: 2152, column: 34, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 2151, column: 14)
!2714 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !2715)
!2715 = distinct !DILocation(line: 2152, column: 21, scope: !2713)
!2716 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !2715)
!2717 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !2715)
!2718 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !2715)
!2719 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !2715)
!2720 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !2715)
!2721 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !2715)
!2722 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !2715)
!2723 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !2715)
!2724 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !2715)
!2725 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !2715)
!2726 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !2715)
!2727 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !2715)
!2728 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !2715)
!2729 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !2715)
!2730 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !2715)
!2731 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !2715)
!2732 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !2715)
!2733 = !DILocation(line: 101, column: 5, scope: !1483, inlinedAt: !2715)
!2734 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !2715)
!2735 = !DILocation(line: 2147, column: 27, scope: !2688)
!2736 = !DILocation(line: 2153, column: 13, scope: !2713)
!2737 = !DILocation(line: 0, scope: !1496, inlinedAt: !2715)
!2738 = !DILocation(line: 0, scope: !2713)
!2739 = !DILocation(line: 2152, column: 21, scope: !2713)
!2740 = !DILocation(line: 2153, column: 23, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2153, column: 13)
!2742 = !DILocation(line: 2156, column: 25, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 2153, column: 28)
!2744 = !DILocation(line: 2147, column: 18, scope: !2688)
!2745 = !DILocation(line: 2157, column: 9, scope: !2743)
!2746 = !DILocation(line: 2145, column: 17, scope: !2688)
!2747 = !DILocation(line: 2160, column: 27, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 2160, column: 17)
!2749 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 2157, column: 16)
!2750 = !DILocation(line: 2160, column: 17, scope: !2749)
!2751 = !DILocation(line: 2173, column: 23, scope: !2749)
!2752 = !DILocation(line: 2163, column: 21, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2754, file: !3, line: 2163, column: 21)
!2754 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 2160, column: 33)
!2755 = !DILocation(line: 2163, column: 47, scope: !2753)
!2756 = !DILocation(line: 2163, column: 52, scope: !2753)
!2757 = !DILocation(line: 2164, column: 21, scope: !2753)
!2758 = !{!2759, !709, i64 4}
!2759 = !{!"", !710, i64 0, !709, i64 4, !728, i64 8, !728, i64 10, !728, i64 12, !728, i64 14, !729, i64 16, !729, i64 24, !729, i64 32, !710, i64 40, !710, i64 80, !710, i64 2128, !710, i64 2168, !710, i64 2214, !728, i64 2248, !728, i64 2250, !710, i64 2252, !710, i64 2253, !710, i64 2256}
!2760 = !DILocation(line: 2164, column: 40, scope: !2753)
!2761 = !DILocation(line: 2163, column: 21, scope: !2754)
!2762 = !DILocation(line: 2166, column: 21, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 2165, column: 17)
!2764 = !DILocalVariable(name: "link", arg: 1, scope: !2765, file: !3, line: 2114, type: !179)
!2765 = distinct !DISubprogram(name: "handleLinkIOError", scope: !3, file: !3, line: 2114, type: !2659, isLocal: false, isDefinition: true, scopeLine: 2114, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2766)
!2766 = !{!2764}
!2767 = !DILocation(line: 2114, column: 37, scope: !2765, inlinedAt: !2768)
!2768 = distinct !DILocation(line: 2169, column: 21, scope: !2763)
!2769 = !DILocation(line: 2115, column: 5, scope: !2765, inlinedAt: !2768)
!2770 = !DILocation(line: 2170, column: 21, scope: !2763)
!2771 = !DILocation(line: 2173, column: 42, scope: !2749)
!2772 = !DILocation(line: 2174, column: 17, scope: !2749)
!2773 = !DILocation(line: 0, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2749, file: !3, line: 2174, column: 17)
!2775 = !DILocation(line: 2177, column: 29, scope: !2713)
!2776 = !DILocation(line: 2177, column: 17, scope: !2713)
!2777 = !DILocation(line: 2144, column: 13, scope: !2688)
!2778 = !DILocation(line: 2178, column: 19, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2178, column: 13)
!2780 = !DILocation(line: 2178, column: 25, scope: !2779)
!2781 = !DILocation(line: 2178, column: 28, scope: !2779)
!2782 = !DILocation(line: 2178, column: 34, scope: !2779)
!2783 = !DILocation(line: 2178, column: 13, scope: !2713)
!2784 = !DILocation(line: 2183, column: 17, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 2180, column: 25)
!2786 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2180, column: 13)
!2787 = !DILocation(line: 2180, column: 19, scope: !2786)
!2788 = !DILocation(line: 2180, column: 13, scope: !2713)
!2789 = !DILocation(line: 2183, column: 24, scope: !2785)
!2790 = !DILocation(line: 2183, column: 63, scope: !2785)
!2791 = !DILocation(line: 2183, column: 54, scope: !2785)
!2792 = !DILocation(line: 2182, column: 13, scope: !2785)
!2793 = !DILocation(line: 2114, column: 37, scope: !2765, inlinedAt: !2794)
!2794 = distinct !DILocation(line: 2184, column: 13, scope: !2785)
!2795 = !DILocation(line: 2115, column: 5, scope: !2765, inlinedAt: !2794)
!2796 = !DILocation(line: 2185, column: 13, scope: !2785)
!2797 = !DILocation(line: 2188, column: 44, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 2186, column: 16)
!2799 = !DILocation(line: 2188, column: 28, scope: !2798)
!2800 = !DILocation(line: 2188, column: 26, scope: !2798)
!2801 = !DILocation(line: 2190, column: 23, scope: !2798)
!2802 = !DILocation(line: 2194, column: 23, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 2194, column: 13)
!2804 = !DILocation(line: 2194, column: 28, scope: !2803)
!2805 = !DILocation(line: 2194, column: 44, scope: !2803)
!2806 = !DILocation(line: 2194, column: 41, scope: !2803)
!2807 = !DILocation(line: 2194, column: 13, scope: !2713)
!2808 = !DILocation(line: 2195, column: 17, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !3, line: 2195, column: 17)
!2810 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2194, column: 64)
!2811 = !DILocation(line: 2195, column: 17, scope: !2810)
!2812 = !DILocation(line: 2196, column: 31, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 2195, column: 45)
!2814 = !DILocation(line: 2196, column: 17, scope: !2813)
!2815 = !DILocation(line: 2197, column: 32, scope: !2813)
!2816 = !DILocation(line: 2197, column: 30, scope: !2813)
!2817 = !DILocation(line: 2201, column: 9, scope: !2810)
!2818 = distinct !{!2818, !2711, !2819}
!2819 = !DILocation(line: 2202, column: 5, scope: !2688)
!2820 = !DILocation(line: 2116, column: 1, scope: !2765, inlinedAt: !2768)
!2821 = !DILocation(line: 0, scope: !2763)
!2822 = !DILocation(line: 2203, column: 1, scope: !2688)
!2823 = distinct !DISubprogram(name: "keyHashSlot", scope: !3, file: !3, line: 663, type: !2824, isLocal: false, isDefinition: true, scopeLine: 663, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2826)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!45, !178, !177}
!2826 = !{!2827, !2828, !2829, !2830}
!2827 = !DILocalVariable(name: "key", arg: 1, scope: !2823, file: !3, line: 663, type: !178)
!2828 = !DILocalVariable(name: "keylen", arg: 2, scope: !2823, file: !3, line: 663, type: !177)
!2829 = !DILocalVariable(name: "s", scope: !2823, file: !3, line: 664, type: !177)
!2830 = !DILocalVariable(name: "e", scope: !2823, file: !3, line: 664, type: !177)
!2831 = !DILocation(line: 663, column: 32, scope: !2823)
!2832 = !DILocation(line: 663, column: 41, scope: !2823)
!2833 = !DILocation(line: 664, column: 9, scope: !2823)
!2834 = !DILocation(line: 666, column: 10, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 666, column: 5)
!2836 = !DILocation(line: 666, column: 19, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 666, column: 5)
!2838 = !DILocation(line: 666, column: 5, scope: !2835)
!2839 = !DILocation(line: 667, column: 13, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 667, column: 13)
!2841 = !DILocation(line: 667, column: 20, scope: !2840)
!2842 = !DILocation(line: 667, column: 13, scope: !2837)
!2843 = !DILocation(line: 666, column: 30, scope: !2837)
!2844 = !DILocation(line: 666, column: 5, scope: !2837)
!2845 = distinct !{!2845, !2838, !2846}
!2846 = !DILocation(line: 667, column: 28, scope: !2835)
!2847 = !DILocation(line: 670, column: 11, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 670, column: 9)
!2849 = !DILocation(line: 0, scope: !2837)
!2850 = !DILocation(line: 670, column: 9, scope: !2823)
!2851 = !DILocation(line: 670, column: 29, scope: !2848)
!2852 = !DILocation(line: 670, column: 22, scope: !2848)
!2853 = !DILocation(line: 673, column: 15, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 673, column: 5)
!2855 = !DILocation(line: 664, column: 12, scope: !2823)
!2856 = !DILocation(line: 673, column: 10, scope: !2854)
!2857 = !DILocation(line: 673, column: 21, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 673, column: 5)
!2859 = !DILocation(line: 673, column: 5, scope: !2854)
!2860 = !DILocation(line: 674, column: 13, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 674, column: 13)
!2862 = !DILocation(line: 674, column: 20, scope: !2861)
!2863 = !DILocation(line: 674, column: 13, scope: !2858)
!2864 = !DILocation(line: 673, column: 32, scope: !2858)
!2865 = !DILocation(line: 673, column: 5, scope: !2858)
!2866 = distinct !{!2866, !2859, !2867}
!2867 = !DILocation(line: 674, column: 28, scope: !2854)
!2868 = !DILocation(line: 677, column: 11, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 677, column: 9)
!2870 = !DILocation(line: 0, scope: !2858)
!2871 = !DILocation(line: 677, column: 21, scope: !2869)
!2872 = !DILocation(line: 677, column: 26, scope: !2869)
!2873 = !DILocation(line: 677, column: 9, scope: !2823)
!2874 = !DILocation(line: 677, column: 41, scope: !2869)
!2875 = !DILocation(line: 677, column: 34, scope: !2869)
!2876 = !DILocation(line: 681, column: 21, scope: !2823)
!2877 = !DILocation(line: 681, column: 23, scope: !2823)
!2878 = !DILocation(line: 681, column: 29, scope: !2823)
!2879 = !DILocation(line: 681, column: 12, scope: !2823)
!2880 = !DILocation(line: 681, column: 5, scope: !2823)
!2881 = !DILocation(line: 0, scope: !2848)
!2882 = !DILocation(line: 0, scope: !2823)
!2883 = !DILocation(line: 682, column: 1, scope: !2823)
!2884 = distinct !DISubprogram(name: "clusterNodeAddFailureReport", scope: !3, file: !3, line: 735, type: !1028, isLocal: false, isDefinition: true, scopeLine: 735, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890, !2891}
!2886 = !DILocalVariable(name: "failing", arg: 1, scope: !2884, file: !3, line: 735, type: !378)
!2887 = !DILocalVariable(name: "sender", arg: 2, scope: !2884, file: !3, line: 735, type: !378)
!2888 = !DILocalVariable(name: "l", scope: !2884, file: !3, line: 736, type: !218)
!2889 = !DILocalVariable(name: "ln", scope: !2884, file: !3, line: 737, type: !224)
!2890 = !DILocalVariable(name: "li", scope: !2884, file: !3, line: 738, type: !2591)
!2891 = !DILocalVariable(name: "fr", scope: !2884, file: !3, line: 739, type: !2597)
!2892 = !DILocation(line: 735, column: 46, scope: !2884)
!2893 = !DILocation(line: 735, column: 68, scope: !2884)
!2894 = !DILocation(line: 736, column: 24, scope: !2884)
!2895 = !DILocation(line: 736, column: 11, scope: !2884)
!2896 = !DILocation(line: 738, column: 5, scope: !2884)
!2897 = !DILocation(line: 738, column: 14, scope: !2884)
!2898 = !DILocation(line: 743, column: 5, scope: !2884)
!2899 = !DILocation(line: 744, column: 5, scope: !2884)
!2900 = !DILocation(line: 744, column: 18, scope: !2884)
!2901 = !DILocation(line: 737, column: 15, scope: !2884)
!2902 = !DILocation(line: 744, column: 33, scope: !2884)
!2903 = !DILocation(line: 745, column: 18, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 744, column: 42)
!2905 = !DILocation(line: 739, column: 28, scope: !2884)
!2906 = !DILocation(line: 746, column: 17, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 746, column: 13)
!2908 = !DILocation(line: 746, column: 22, scope: !2907)
!2909 = !DILocation(line: 746, column: 13, scope: !2904)
!2910 = distinct !{!2910, !2899, !2911}
!2911 = !DILocation(line: 750, column: 5, scope: !2884)
!2912 = !DILocation(line: 747, column: 24, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 746, column: 33)
!2914 = !DILocation(line: 747, column: 17, scope: !2913)
!2915 = !DILocation(line: 747, column: 22, scope: !2913)
!2916 = !{!2623, !790, i64 8}
!2917 = !DILocation(line: 748, column: 13, scope: !2913)
!2918 = !DILocation(line: 753, column: 10, scope: !2884)
!2919 = !DILocation(line: 754, column: 9, scope: !2884)
!2920 = !DILocation(line: 754, column: 14, scope: !2884)
!2921 = !DILocation(line: 755, column: 16, scope: !2884)
!2922 = !DILocation(line: 755, column: 9, scope: !2884)
!2923 = !DILocation(line: 755, column: 14, scope: !2884)
!2924 = !DILocation(line: 756, column: 5, scope: !2884)
!2925 = !DILocation(line: 757, column: 5, scope: !2884)
!2926 = !DILocation(line: 0, scope: !2884)
!2927 = !DILocation(line: 0, scope: !2913)
!2928 = !DILocation(line: 758, column: 1, scope: !2884)
!2929 = distinct !DISubprogram(name: "clusterNodeCleanupFailureReports", scope: !3, file: !3, line: 765, type: !2374, isLocal: false, isDefinition: true, scopeLine: 765, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937}
!2931 = !DILocalVariable(name: "node", arg: 1, scope: !2929, file: !3, line: 765, type: !378)
!2932 = !DILocalVariable(name: "l", scope: !2929, file: !3, line: 766, type: !218)
!2933 = !DILocalVariable(name: "ln", scope: !2929, file: !3, line: 767, type: !224)
!2934 = !DILocalVariable(name: "li", scope: !2929, file: !3, line: 768, type: !2591)
!2935 = !DILocalVariable(name: "fr", scope: !2929, file: !3, line: 769, type: !2597)
!2936 = !DILocalVariable(name: "maxtime", scope: !2929, file: !3, line: 770, type: !184)
!2937 = !DILocalVariable(name: "now", scope: !2929, file: !3, line: 772, type: !184)
!2938 = !DILocation(line: 765, column: 52, scope: !2929)
!2939 = !DILocation(line: 766, column: 21, scope: !2929)
!2940 = !DILocation(line: 766, column: 11, scope: !2929)
!2941 = !DILocation(line: 768, column: 5, scope: !2929)
!2942 = !DILocation(line: 770, column: 31, scope: !2929)
!2943 = !{!789, !790, i64 2928}
!2944 = !DILocation(line: 770, column: 52, scope: !2929)
!2945 = !DILocation(line: 770, column: 14, scope: !2929)
!2946 = !DILocation(line: 772, column: 20, scope: !2929)
!2947 = !DILocation(line: 772, column: 14, scope: !2929)
!2948 = !DILocation(line: 768, column: 14, scope: !2929)
!2949 = !DILocation(line: 774, column: 5, scope: !2929)
!2950 = !DILocation(line: 775, column: 5, scope: !2929)
!2951 = !DILocation(line: 775, column: 18, scope: !2929)
!2952 = !DILocation(line: 767, column: 15, scope: !2929)
!2953 = !DILocation(line: 775, column: 33, scope: !2929)
!2954 = !DILocation(line: 776, column: 18, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 775, column: 42)
!2956 = !DILocation(line: 769, column: 28, scope: !2929)
!2957 = !DILocation(line: 777, column: 23, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 777, column: 13)
!2959 = !DILocation(line: 777, column: 17, scope: !2958)
!2960 = !DILocation(line: 777, column: 28, scope: !2958)
!2961 = !DILocation(line: 777, column: 13, scope: !2955)
!2962 = !DILocation(line: 777, column: 39, scope: !2958)
!2963 = distinct !{!2963, !2950, !2964}
!2964 = !DILocation(line: 778, column: 5, scope: !2929)
!2965 = !DILocation(line: 779, column: 1, scope: !2929)
!2966 = !DILocation(line: 792, column: 46, scope: !2585)
!2967 = !DILocation(line: 792, column: 65, scope: !2585)
!2968 = !DILocation(line: 793, column: 21, scope: !2585)
!2969 = !DILocation(line: 793, column: 11, scope: !2585)
!2970 = !DILocation(line: 795, column: 5, scope: !2585)
!2971 = !DILocation(line: 795, column: 14, scope: !2585)
!2972 = !DILocation(line: 799, column: 5, scope: !2585)
!2973 = !DILocation(line: 800, column: 18, scope: !2585)
!2974 = !DILocation(line: 794, column: 15, scope: !2585)
!2975 = !DILocation(line: 800, column: 33, scope: !2585)
!2976 = !DILocation(line: 801, column: 18, scope: !2616)
!2977 = !DILocation(line: 796, column: 28, scope: !2585)
!2978 = !DILocation(line: 802, column: 17, scope: !2621)
!2979 = !DILocation(line: 802, column: 22, scope: !2621)
!2980 = !DILocation(line: 802, column: 13, scope: !2616)
!2981 = !DILocation(line: 804, column: 9, scope: !2585)
!2982 = !DILocation(line: 804, column: 14, scope: !2631)
!2983 = !DILocation(line: 807, column: 5, scope: !2585)
!2984 = !DILocation(line: 808, column: 5, scope: !2585)
!2985 = !DILocation(line: 809, column: 5, scope: !2585)
!2986 = !DILocation(line: 0, scope: !2631)
!2987 = !DILocation(line: 810, column: 1, scope: !2585)
!2988 = distinct !DISubprogram(name: "clusterNodeFailureReportsCount", scope: !3, file: !3, line: 815, type: !857, isLocal: false, isDefinition: true, scopeLine: 815, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !2989)
!2989 = !{!2990}
!2990 = !DILocalVariable(name: "node", arg: 1, scope: !2988, file: !3, line: 815, type: !378)
!2991 = !DILocation(line: 815, column: 49, scope: !2988)
!2992 = !DILocation(line: 816, column: 5, scope: !2988)
!2993 = !DILocation(line: 817, column: 12, scope: !2988)
!2994 = !{!1203, !729, i64 40}
!2995 = !DILocation(line: 817, column: 5, scope: !2988)
!2996 = !DILocation(line: 820, column: 41, scope: !2387)
!2997 = !DILocation(line: 820, column: 62, scope: !2387)
!2998 = !DILocation(line: 821, column: 9, scope: !2387)
!2999 = !DILocation(line: 823, column: 10, scope: !2398)
!3000 = !DILocation(line: 823, column: 29, scope: !2397)
!3001 = !DILocation(line: 823, column: 19, scope: !2397)
!3002 = !DILocation(line: 824, column: 13, scope: !2395)
!3003 = !DILocation(line: 824, column: 31, scope: !2395)
!3004 = !DILocation(line: 0, scope: !2397)
!3005 = !DILocation(line: 824, column: 13, scope: !2396)
!3006 = !DILocation(line: 825, column: 23, scope: !2393)
!3007 = !DILocation(line: 825, column: 17, scope: !2394)
!3008 = !DILocation(line: 826, column: 64, scope: !2392)
!3009 = !DILocation(line: 826, column: 21, scope: !2392)
!3010 = !DILocation(line: 827, column: 25, scope: !2392)
!3011 = !DILocation(line: 827, column: 56, scope: !2392)
!3012 = !DILocation(line: 827, column: 42, scope: !2392)
!3013 = !DILocation(line: 828, column: 52, scope: !2392)
!3014 = !DILocation(line: 828, column: 50, scope: !2392)
!3015 = !DILocation(line: 827, column: 17, scope: !2392)
!3016 = !DILocation(line: 829, column: 13, scope: !2392)
!3017 = !DILocation(line: 830, column: 30, scope: !2394)
!3018 = !DILocation(line: 831, column: 35, scope: !2425)
!3019 = !DILocation(line: 831, column: 17, scope: !2394)
!3020 = !DILocation(line: 832, column: 25, scope: !2425)
!3021 = !DILocation(line: 832, column: 31, scope: !2425)
!3022 = !DILocation(line: 832, column: 17, scope: !2425)
!3023 = !DILocation(line: 823, column: 5, scope: !2397)
!3024 = !DILocation(line: 0, scope: !2387)
!3025 = !DILocation(line: 0, scope: !2394)
!3026 = !DILocation(line: 837, column: 1, scope: !2387)
!3027 = distinct !DISubprogram(name: "clusterCountNonFailingSlaves", scope: !3, file: !3, line: 853, type: !857, isLocal: false, isDefinition: true, scopeLine: 853, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3028)
!3028 = !{!3029, !3030, !3031}
!3029 = !DILocalVariable(name: "n", arg: 1, scope: !3027, file: !3, line: 853, type: !378)
!3030 = !DILocalVariable(name: "j", scope: !3027, file: !3, line: 854, type: !177)
!3031 = !DILocalVariable(name: "okslaves", scope: !3027, file: !3, line: 854, type: !177)
!3032 = !DILocation(line: 853, column: 47, scope: !3027)
!3033 = !DILocation(line: 854, column: 12, scope: !3027)
!3034 = !DILocation(line: 854, column: 9, scope: !3027)
!3035 = !DILocation(line: 856, column: 10, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 856, column: 5)
!3037 = !DILocation(line: 856, column: 24, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 856, column: 5)
!3039 = !DILocation(line: 856, column: 19, scope: !3038)
!3040 = !DILocation(line: 856, column: 5, scope: !3036)
!3041 = !DILocation(line: 857, column: 14, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 857, column: 13)
!3043 = !DILocation(line: 857, column: 13, scope: !3038)
!3044 = !DILocation(line: 857, column: 48, scope: !3042)
!3045 = !DILocation(line: 857, column: 40, scope: !3042)
!3046 = !DILocation(line: 0, scope: !3042)
!3047 = !DILocation(line: 856, column: 36, scope: !3038)
!3048 = !DILocation(line: 856, column: 5, scope: !3038)
!3049 = !DILocation(line: 858, column: 5, scope: !3027)
!3050 = distinct !{!3050, !3040, !3051}
!3051 = !DILocation(line: 857, column: 48, scope: !3036)
!3052 = distinct !DISubprogram(name: "freeClusterNode", scope: !3, file: !3, line: 862, type: !2374, isLocal: false, isDefinition: true, scopeLine: 862, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3053)
!3053 = !{!3054, !3055, !3056}
!3054 = !DILocalVariable(name: "n", arg: 1, scope: !3052, file: !3, line: 862, type: !378)
!3055 = !DILocalVariable(name: "nodename", scope: !3052, file: !3, line: 863, type: !189)
!3056 = !DILocalVariable(name: "j", scope: !3052, file: !3, line: 864, type: !177)
!3057 = !DILocation(line: 862, column: 35, scope: !3052)
!3058 = !DILocation(line: 864, column: 9, scope: !3052)
!3059 = !DILocation(line: 868, column: 10, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 868, column: 5)
!3061 = !DILocation(line: 868, column: 24, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 868, column: 5)
!3063 = !DILocation(line: 868, column: 19, scope: !3062)
!3064 = !DILocation(line: 868, column: 5, scope: !3060)
!3065 = !DILocation(line: 869, column: 12, scope: !3062)
!3066 = !DILocation(line: 869, column: 9, scope: !3062)
!3067 = !DILocation(line: 869, column: 23, scope: !3062)
!3068 = !DILocation(line: 869, column: 31, scope: !3062)
!3069 = !DILocation(line: 868, column: 36, scope: !3062)
!3070 = !DILocation(line: 868, column: 5, scope: !3062)
!3071 = distinct !{!3071, !3064, !3072}
!3072 = !DILocation(line: 869, column: 33, scope: !3060)
!3073 = distinct !{!3073, !3074}
!3074 = !{!"llvm.loop.unroll.disable"}
!3075 = !DILocation(line: 872, column: 9, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 872, column: 9)
!3077 = !DILocation(line: 872, column: 24, scope: !3076)
!3078 = !DILocation(line: 872, column: 30, scope: !3076)
!3079 = !DILocation(line: 872, column: 27, scope: !3076)
!3080 = !DILocation(line: 872, column: 9, scope: !3052)
!3081 = !DILocation(line: 820, column: 41, scope: !2387, inlinedAt: !3082)
!3082 = distinct !DILocation(line: 872, column: 39, scope: !3076)
!3083 = !DILocation(line: 820, column: 62, scope: !2387, inlinedAt: !3082)
!3084 = !DILocation(line: 821, column: 9, scope: !2387, inlinedAt: !3082)
!3085 = !DILocation(line: 823, column: 10, scope: !2398, inlinedAt: !3082)
!3086 = !DILocation(line: 823, column: 29, scope: !2397, inlinedAt: !3082)
!3087 = !DILocation(line: 823, column: 19, scope: !2397, inlinedAt: !3082)
!3088 = !DILocation(line: 823, column: 5, scope: !2398, inlinedAt: !3082)
!3089 = !DILocation(line: 824, column: 13, scope: !2395, inlinedAt: !3082)
!3090 = !DILocation(line: 824, column: 31, scope: !2395, inlinedAt: !3082)
!3091 = !DILocation(line: 0, scope: !2397, inlinedAt: !3082)
!3092 = !DILocation(line: 824, column: 13, scope: !2396, inlinedAt: !3082)
!3093 = !DILocation(line: 825, column: 23, scope: !2393, inlinedAt: !3082)
!3094 = !DILocation(line: 825, column: 17, scope: !2394, inlinedAt: !3082)
!3095 = !DILocation(line: 826, column: 64, scope: !2392, inlinedAt: !3082)
!3096 = !DILocation(line: 826, column: 21, scope: !2392, inlinedAt: !3082)
!3097 = !DILocation(line: 827, column: 25, scope: !2392, inlinedAt: !3082)
!3098 = !DILocation(line: 827, column: 56, scope: !2392, inlinedAt: !3082)
!3099 = !DILocation(line: 827, column: 42, scope: !2392, inlinedAt: !3082)
!3100 = !DILocation(line: 828, column: 52, scope: !2392, inlinedAt: !3082)
!3101 = !DILocation(line: 828, column: 50, scope: !2392, inlinedAt: !3082)
!3102 = !DILocation(line: 827, column: 17, scope: !2392, inlinedAt: !3082)
!3103 = !DILocation(line: 829, column: 13, scope: !2392, inlinedAt: !3082)
!3104 = !DILocation(line: 830, column: 30, scope: !2394, inlinedAt: !3082)
!3105 = !DILocation(line: 831, column: 35, scope: !2425, inlinedAt: !3082)
!3106 = !DILocation(line: 831, column: 17, scope: !2394, inlinedAt: !3082)
!3107 = !DILocation(line: 832, column: 25, scope: !2425, inlinedAt: !3082)
!3108 = !DILocation(line: 832, column: 31, scope: !2425, inlinedAt: !3082)
!3109 = !DILocation(line: 832, column: 17, scope: !2425, inlinedAt: !3082)
!3110 = !DILocation(line: 823, column: 5, scope: !2397, inlinedAt: !3082)
!3111 = !DILocation(line: 0, scope: !3076)
!3112 = !DILocation(line: 837, column: 1, scope: !2387, inlinedAt: !3082)
!3113 = !DILocation(line: 872, column: 39, scope: !3076)
!3114 = !DILocation(line: 875, column: 26, scope: !3052)
!3115 = !DILocation(line: 875, column: 16, scope: !3052)
!3116 = !DILocation(line: 863, column: 9, scope: !3052)
!3117 = !DILocation(line: 876, column: 5, scope: !3052)
!3118 = !DILocation(line: 877, column: 5, scope: !3052)
!3119 = !DILocation(line: 880, column: 12, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 880, column: 9)
!3121 = !DILocation(line: 880, column: 9, scope: !3120)
!3122 = !DILocation(line: 880, column: 9, scope: !3052)
!3123 = !DILocation(line: 880, column: 18, scope: !3120)
!3124 = !DILocation(line: 881, column: 20, scope: !3052)
!3125 = !DILocation(line: 881, column: 5, scope: !3052)
!3126 = !DILocation(line: 882, column: 14, scope: !3052)
!3127 = !DILocation(line: 882, column: 5, scope: !3052)
!3128 = !DILocation(line: 883, column: 11, scope: !3052)
!3129 = !DILocation(line: 883, column: 5, scope: !3052)
!3130 = !DILocation(line: 884, column: 1, scope: !3052)
!3131 = distinct !DISubprogram(name: "clusterRenameNode", scope: !3, file: !3, line: 950, type: !3132, isLocal: false, isDefinition: true, scopeLine: 950, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3134)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{null, !378, !178}
!3134 = !{!3135, !3136, !3137, !3138}
!3135 = !DILocalVariable(name: "node", arg: 1, scope: !3131, file: !3, line: 950, type: !378)
!3136 = !DILocalVariable(name: "newname", arg: 2, scope: !3131, file: !3, line: 950, type: !178)
!3137 = !DILocalVariable(name: "retval", scope: !3131, file: !3, line: 951, type: !177)
!3138 = !DILocalVariable(name: "s", scope: !3131, file: !3, line: 952, type: !189)
!3139 = !DILocation(line: 950, column: 37, scope: !3131)
!3140 = !DILocation(line: 950, column: 49, scope: !3131)
!3141 = !DILocation(line: 952, column: 23, scope: !3131)
!3142 = !DILocation(line: 952, column: 13, scope: !3131)
!3143 = !DILocation(line: 952, column: 9, scope: !3131)
!3144 = !DILocation(line: 954, column: 5, scope: !3131)
!3145 = !DILocation(line: 956, column: 32, scope: !3131)
!3146 = !DILocation(line: 956, column: 41, scope: !3131)
!3147 = !DILocation(line: 956, column: 14, scope: !3131)
!3148 = !DILocation(line: 951, column: 9, scope: !3131)
!3149 = !DILocation(line: 957, column: 5, scope: !3131)
!3150 = !DILocation(line: 958, column: 5, scope: !3131)
!3151 = !DILocation(line: 959, column: 5, scope: !3131)
!3152 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !3153)
!3153 = distinct !DILocation(line: 960, column: 5, scope: !3131)
!3154 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !3153)
!3155 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !3153)
!3156 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !3153)
!3157 = !DILocation(line: 891, column: 52, scope: !856, inlinedAt: !3153)
!3158 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !3153)
!3159 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !3153)
!3160 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !3153)
!3161 = !DILocation(line: 961, column: 1, scope: !3131)
!3162 = distinct !DISubprogram(name: "clusterBumpConfigEpochWithoutConsensus", scope: !3, file: !3, line: 1013, type: !3163, isLocal: false, isDefinition: true, scopeLine: 1013, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3165)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!177}
!3165 = !{!3166}
!3166 = !DILocalVariable(name: "maxEpoch", scope: !3162, file: !3, line: 1014, type: !104)
!3167 = !DILocation(line: 1014, column: 25, scope: !3162)
!3168 = !DILocation(line: 1014, column: 14, scope: !3162)
!3169 = !DILocation(line: 1016, column: 9, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1016, column: 9)
!3171 = !DILocation(line: 1016, column: 17, scope: !3170)
!3172 = !DILocation(line: 1016, column: 29, scope: !3170)
!3173 = !DILocation(line: 1016, column: 34, scope: !3170)
!3174 = !DILocation(line: 1017, column: 29, scope: !3170)
!3175 = !DILocation(line: 1016, column: 9, scope: !3162)
!3176 = !DILocation(line: 1019, column: 16, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 1018, column: 5)
!3178 = !DILocation(line: 1019, column: 25, scope: !3177)
!3179 = !DILocation(line: 1019, column: 37, scope: !3177)
!3180 = !DILocation(line: 1020, column: 29, scope: !3177)
!3181 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !3182)
!3182 = distinct !DILocation(line: 1021, column: 9, scope: !3177)
!3183 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !3182)
!3184 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !3182)
!3185 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !3182)
!3186 = !DILocation(line: 1023, column: 9, scope: !3177)
!3187 = !DILocation(line: 1026, column: 9, scope: !3177)
!3188 = !DILocation(line: 0, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 1027, column: 12)
!3190 = !DILocation(line: 0, scope: !3177)
!3191 = !DILocation(line: 1030, column: 1, scope: !3162)
!3192 = distinct !DISubprogram(name: "clusterHandleConfigEpochCollision", scope: !3, file: !3, line: 1078, type: !2374, isLocal: false, isDefinition: true, scopeLine: 1078, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3193)
!3193 = !{!3194}
!3194 = !DILocalVariable(name: "sender", arg: 1, scope: !3192, file: !3, line: 1078, type: !378)
!3195 = !DILocation(line: 1078, column: 53, scope: !3192)
!3196 = !DILocation(line: 1080, column: 17, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 1080, column: 9)
!3198 = !DILocation(line: 1080, column: 32, scope: !3197)
!3199 = !DILocation(line: 1080, column: 40, scope: !3197)
!3200 = !DILocation(line: 1080, column: 29, scope: !3197)
!3201 = !DILocation(line: 1080, column: 52, scope: !3197)
!3202 = !DILocation(line: 1081, column: 10, scope: !3197)
!3203 = !DILocation(line: 1081, column: 31, scope: !3197)
!3204 = !DILocation(line: 1081, column: 35, scope: !3197)
!3205 = !DILocation(line: 1080, column: 9, scope: !3192)
!3206 = !DILocation(line: 1083, column: 16, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3192, file: !3, line: 1083, column: 9)
!3208 = !DILocation(line: 1083, column: 29, scope: !3207)
!3209 = !DILocation(line: 1083, column: 9, scope: !3207)
!3210 = !DILocation(line: 1083, column: 59, scope: !3207)
!3211 = !DILocation(line: 1083, column: 9, scope: !3192)
!3212 = !DILocation(line: 1085, column: 12, scope: !3192)
!3213 = !DILocation(line: 1085, column: 21, scope: !3192)
!3214 = !DILocation(line: 1085, column: 33, scope: !3192)
!3215 = !DILocation(line: 1086, column: 5, scope: !3192)
!3216 = !DILocation(line: 1086, column: 13, scope: !3192)
!3217 = !DILocation(line: 1086, column: 25, scope: !3192)
!3218 = !DILocation(line: 360, column: 33, scope: !1672, inlinedAt: !3219)
!3219 = distinct !DILocation(line: 1087, column: 5, scope: !3192)
!3220 = !DILocation(line: 361, column: 9, scope: !1677, inlinedAt: !3219)
!3221 = !DILocation(line: 361, column: 37, scope: !1677, inlinedAt: !3219)
!3222 = !DILocation(line: 361, column: 9, scope: !1672, inlinedAt: !3219)
!3223 = !DILocation(line: 362, column: 9, scope: !1681, inlinedAt: !3219)
!3224 = !DILocation(line: 363, column: 9, scope: !1681, inlinedAt: !3219)
!3225 = !DILocation(line: 365, column: 1, scope: !1672, inlinedAt: !3219)
!3226 = !DILocation(line: 1092, column: 30, scope: !3192)
!3227 = !DILocation(line: 1092, column: 38, scope: !3192)
!3228 = !DILocation(line: 1088, column: 5, scope: !3192)
!3229 = !DILocation(line: 1093, column: 1, scope: !3192)
!3230 = distinct !DISubprogram(name: "clusterBlacklistCleanup", scope: !3, file: !3, line: 1126, type: !293, isLocal: false, isDefinition: true, scopeLine: 1126, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3231)
!3231 = !{!3232, !3233, !3234}
!3232 = !DILocalVariable(name: "di", scope: !3230, file: !3, line: 1127, type: !297)
!3233 = !DILocalVariable(name: "de", scope: !3230, file: !3, line: 1128, type: !340)
!3234 = !DILocalVariable(name: "expire", scope: !3235, file: !3, line: 1132, type: !351)
!3235 = distinct !DILexicalBlock(scope: !3230, file: !3, line: 1131, column: 40)
!3236 = !DILocation(line: 1130, column: 37, scope: !3230)
!3237 = !DILocation(line: 1130, column: 46, scope: !3230)
!3238 = !DILocation(line: 1130, column: 10, scope: !3230)
!3239 = !DILocation(line: 1127, column: 19, scope: !3230)
!3240 = !DILocation(line: 1131, column: 5, scope: !3230)
!3241 = !DILocation(line: 1131, column: 17, scope: !3230)
!3242 = !DILocation(line: 1128, column: 16, scope: !3230)
!3243 = !DILocation(line: 1131, column: 31, scope: !3230)
!3244 = !DILocation(line: 1132, column: 26, scope: !3235)
!3245 = !DILocation(line: 1132, column: 17, scope: !3235)
!3246 = !DILocation(line: 1134, column: 29, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 1134, column: 13)
!3248 = !{!789, !729, i64 2872}
!3249 = !DILocation(line: 1134, column: 20, scope: !3247)
!3250 = !DILocation(line: 1134, column: 13, scope: !3235)
!3251 = !DILocation(line: 1135, column: 31, scope: !3247)
!3252 = !DILocation(line: 1135, column: 40, scope: !3247)
!3253 = !DILocation(line: 1135, column: 57, scope: !3247)
!3254 = !{!3255, !761, i64 0}
!3255 = !{!"dictEntry", !761, i64 0, !710, i64 8, !761, i64 16}
!3256 = !DILocation(line: 1135, column: 13, scope: !3247)
!3257 = distinct !{!3257, !3240, !3258}
!3258 = !DILocation(line: 1136, column: 5, scope: !3230)
!3259 = !DILocation(line: 1137, column: 5, scope: !3230)
!3260 = !DILocation(line: 1138, column: 1, scope: !3230)
!3261 = distinct !DISubprogram(name: "clusterBlacklistAddNode", scope: !3, file: !3, line: 1141, type: !2374, isLocal: false, isDefinition: true, scopeLine: 1141, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3262)
!3262 = !{!3263, !3264, !3265}
!3263 = !DILocalVariable(name: "node", arg: 1, scope: !3261, file: !3, line: 1141, type: !378)
!3264 = !DILocalVariable(name: "de", scope: !3261, file: !3, line: 1142, type: !340)
!3265 = !DILocalVariable(name: "id", scope: !3261, file: !3, line: 1143, type: !189)
!3266 = !DILocation(line: 1141, column: 43, scope: !3261)
!3267 = !DILocation(line: 1143, column: 24, scope: !3261)
!3268 = !DILocation(line: 1143, column: 14, scope: !3261)
!3269 = !DILocation(line: 1143, column: 9, scope: !3261)
!3270 = !DILocation(line: 1145, column: 5, scope: !3261)
!3271 = !DILocation(line: 1146, column: 24, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1146, column: 9)
!3273 = !DILocation(line: 1146, column: 33, scope: !3272)
!3274 = !DILocation(line: 1146, column: 9, scope: !3272)
!3275 = !DILocation(line: 1146, column: 59, scope: !3272)
!3276 = !DILocation(line: 1146, column: 9, scope: !3261)
!3277 = !DILocation(line: 1149, column: 14, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1146, column: 71)
!3279 = !DILocation(line: 1150, column: 5, scope: !3278)
!3280 = !DILocation(line: 0, scope: !3261)
!3281 = !DILocation(line: 1151, column: 26, scope: !3261)
!3282 = !DILocation(line: 1151, column: 35, scope: !3261)
!3283 = !DILocation(line: 1151, column: 10, scope: !3261)
!3284 = !DILocation(line: 1142, column: 16, scope: !3261)
!3285 = !DILocation(line: 1152, column: 5, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 1152, column: 5)
!3287 = !DILocation(line: 1153, column: 5, scope: !3261)
!3288 = !DILocation(line: 1154, column: 1, scope: !3261)
!3289 = distinct !DISubprogram(name: "clusterBlacklistExists", scope: !3, file: !3, line: 1159, type: !437, isLocal: false, isDefinition: true, scopeLine: 1159, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3290)
!3290 = !{!3291, !3292, !3293}
!3291 = !DILocalVariable(name: "nodeid", arg: 1, scope: !3289, file: !3, line: 1159, type: !178)
!3292 = !DILocalVariable(name: "id", scope: !3289, file: !3, line: 1160, type: !189)
!3293 = !DILocalVariable(name: "retval", scope: !3289, file: !3, line: 1161, type: !177)
!3294 = !DILocation(line: 1159, column: 34, scope: !3289)
!3295 = !DILocation(line: 1160, column: 14, scope: !3289)
!3296 = !DILocation(line: 1160, column: 9, scope: !3289)
!3297 = !DILocation(line: 1163, column: 5, scope: !3289)
!3298 = !DILocation(line: 1164, column: 30, scope: !3289)
!3299 = !DILocation(line: 1164, column: 39, scope: !3289)
!3300 = !DILocation(line: 1164, column: 14, scope: !3289)
!3301 = !DILocation(line: 1164, column: 60, scope: !3289)
!3302 = !DILocation(line: 1161, column: 9, scope: !3289)
!3303 = !DILocation(line: 1165, column: 5, scope: !3289)
!3304 = !DILocation(line: 1166, column: 5, scope: !3289)
!3305 = distinct !DISubprogram(name: "markNodeAsFailingIfNeeded", scope: !3, file: !3, line: 1194, type: !2374, isLocal: false, isDefinition: true, scopeLine: 1194, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3306)
!3306 = !{!3307, !3308, !3309}
!3307 = !DILocalVariable(name: "node", arg: 1, scope: !3305, file: !3, line: 1194, type: !378)
!3308 = !DILocalVariable(name: "failures", scope: !3305, file: !3, line: 1195, type: !177)
!3309 = !DILocalVariable(name: "needed_quorum", scope: !3305, file: !3, line: 1196, type: !177)
!3310 = !DILocation(line: 1194, column: 45, scope: !3305)
!3311 = !DILocation(line: 1196, column: 33, scope: !3305)
!3312 = !DILocation(line: 1196, column: 42, scope: !3305)
!3313 = !DILocation(line: 1196, column: 47, scope: !3305)
!3314 = !DILocation(line: 1196, column: 9, scope: !3305)
!3315 = !DILocation(line: 1198, column: 10, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1198, column: 9)
!3317 = !DILocation(line: 1198, column: 9, scope: !3305)
!3318 = !DILocation(line: 1199, column: 9, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1199, column: 9)
!3320 = !DILocation(line: 1199, column: 9, scope: !3305)
!3321 = !DILocation(line: 815, column: 49, scope: !2988, inlinedAt: !3322)
!3322 = distinct !DILocation(line: 1201, column: 16, scope: !3305)
!3323 = !DILocation(line: 816, column: 5, scope: !2988, inlinedAt: !3322)
!3324 = !DILocation(line: 817, column: 12, scope: !2988, inlinedAt: !3322)
!3325 = !DILocation(line: 817, column: 5, scope: !2988, inlinedAt: !3322)
!3326 = !DILocation(line: 1195, column: 9, scope: !3305)
!3327 = !DILocation(line: 1203, column: 9, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1203, column: 9)
!3329 = !DILocation(line: 1203, column: 9, scope: !3305)
!3330 = !DILocation(line: 1203, column: 39, scope: !3328)
!3331 = !DILocation(line: 1203, column: 31, scope: !3328)
!3332 = !DILocation(line: 0, scope: !3305)
!3333 = !DILocation(line: 1204, column: 18, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1204, column: 9)
!3335 = !DILocation(line: 1204, column: 9, scope: !3305)
!3336 = !DILocation(line: 1207, column: 60, scope: !3305)
!3337 = !DILocation(line: 1206, column: 5, scope: !3305)
!3338 = !DILocation(line: 1210, column: 17, scope: !3305)
!3339 = !DILocation(line: 1211, column: 17, scope: !3305)
!3340 = !DILocation(line: 1212, column: 23, scope: !3305)
!3341 = !DILocation(line: 1212, column: 11, scope: !3305)
!3342 = !DILocation(line: 1212, column: 21, scope: !3305)
!3343 = !DILocation(line: 1216, column: 9, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3305, file: !3, line: 1216, column: 9)
!3345 = !DILocation(line: 1216, column: 9, scope: !3305)
!3346 = !DILocalVariable(name: "nodename", arg: 1, scope: !3347, file: !3, line: 2565, type: !178)
!3347 = distinct !DISubprogram(name: "clusterSendFail", scope: !3, file: !3, line: 2565, type: !3348, isLocal: false, isDefinition: true, scopeLine: 2565, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3350)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !178}
!3350 = !{!3346, !3351, !3353}
!3351 = !DILocalVariable(name: "buf", scope: !3347, file: !3, line: 2566, type: !3352)
!3352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 34816, elements: !2696)
!3353 = !DILocalVariable(name: "hdr", scope: !3347, file: !3, line: 2567, type: !92)
!3354 = !DILocation(line: 2565, column: 28, scope: !3347, inlinedAt: !3355)
!3355 = distinct !DILocation(line: 1216, column: 31, scope: !3344)
!3356 = !DILocation(line: 2566, column: 5, scope: !3347, inlinedAt: !3355)
!3357 = !DILocation(line: 2567, column: 17, scope: !3347, inlinedAt: !3355)
!3358 = !DILocation(line: 2566, column: 19, scope: !3347, inlinedAt: !3355)
!3359 = !DILocation(line: 2569, column: 5, scope: !3347, inlinedAt: !3355)
!3360 = !DILocation(line: 2570, column: 17, scope: !3347, inlinedAt: !3355)
!3361 = !DILocation(line: 2570, column: 12, scope: !3347, inlinedAt: !3355)
!3362 = !DILocation(line: 2570, column: 5, scope: !3347, inlinedAt: !3355)
!3363 = !DILocation(line: 2571, column: 33, scope: !3347, inlinedAt: !3355)
!3364 = !DILocation(line: 2571, column: 5, scope: !3347, inlinedAt: !3355)
!3365 = !DILocation(line: 2572, column: 1, scope: !3347, inlinedAt: !3355)
!3366 = !DILocation(line: 1216, column: 31, scope: !3344)
!3367 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !3368)
!3368 = distinct !DILocation(line: 1217, column: 5, scope: !3305)
!3369 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !3368)
!3370 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !3368)
!3371 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !3368)
!3372 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !3368)
!3373 = !DILocation(line: 1218, column: 1, scope: !3305)
!3374 = !DILocation(line: 0, scope: !3316)
!3375 = !DILocation(line: 2565, column: 28, scope: !3347)
!3376 = !DILocation(line: 2566, column: 5, scope: !3347)
!3377 = !DILocation(line: 2567, column: 17, scope: !3347)
!3378 = !DILocation(line: 2566, column: 19, scope: !3347)
!3379 = !DILocation(line: 2569, column: 5, scope: !3347)
!3380 = !DILocation(line: 2570, column: 17, scope: !3347)
!3381 = !DILocation(line: 2570, column: 12, scope: !3347)
!3382 = !DILocation(line: 2570, column: 5, scope: !3347)
!3383 = !DILocation(line: 2571, column: 33, scope: !3347)
!3384 = !DILocation(line: 2571, column: 5, scope: !3347)
!3385 = !DILocation(line: 2572, column: 1, scope: !3347)
!3386 = distinct !DISubprogram(name: "clearNodeFailureIfNeeded", scope: !3, file: !3, line: 1223, type: !2374, isLocal: false, isDefinition: true, scopeLine: 1223, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3387)
!3387 = !{!3388, !3389}
!3388 = !DILocalVariable(name: "node", arg: 1, scope: !3386, file: !3, line: 1223, type: !378)
!3389 = !DILocalVariable(name: "now", scope: !3386, file: !3, line: 1224, type: !184)
!3390 = !DILocation(line: 1223, column: 44, scope: !3386)
!3391 = !DILocation(line: 1224, column: 20, scope: !3386)
!3392 = !DILocation(line: 1224, column: 14, scope: !3386)
!3393 = !DILocation(line: 1226, column: 5, scope: !3386)
!3394 = !DILocation(line: 1230, column: 9, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 1230, column: 9)
!3396 = !DILocation(line: 1230, column: 27, scope: !3395)
!3397 = !DILocation(line: 1230, column: 36, scope: !3395)
!3398 = !DILocation(line: 1230, column: 45, scope: !3395)
!3399 = !DILocation(line: 1230, column: 9, scope: !3386)
!3400 = !DILocation(line: 1233, column: 17, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3395, file: !3, line: 1230, column: 51)
!3402 = !DILocation(line: 1234, column: 17, scope: !3401)
!3403 = !DILocation(line: 1231, column: 9, scope: !3401)
!3404 = !DILocation(line: 1235, column: 21, scope: !3401)
!3405 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !3406)
!3406 = distinct !DILocation(line: 1236, column: 9, scope: !3401)
!3407 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !3406)
!3408 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !3406)
!3409 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !3406)
!3410 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !3406)
!3411 = !DILocation(line: 1237, column: 5, scope: !3401)
!3412 = !DILocation(line: 1243, column: 9, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 1243, column: 9)
!3414 = !DILocation(line: 1243, column: 28, scope: !3413)
!3415 = !DILocation(line: 1243, column: 37, scope: !3413)
!3416 = !DILocation(line: 1243, column: 46, scope: !3413)
!3417 = !DILocation(line: 1243, column: 50, scope: !3413)
!3418 = !DILocation(line: 1244, column: 22, scope: !3413)
!3419 = !DILocation(line: 1244, column: 14, scope: !3413)
!3420 = !DILocation(line: 1245, column: 17, scope: !3413)
!3421 = !DILocation(line: 1245, column: 38, scope: !3413)
!3422 = !DILocation(line: 1244, column: 33, scope: !3413)
!3423 = !DILocation(line: 1243, column: 9, scope: !3386)
!3424 = !DILocation(line: 1249, column: 17, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 1246, column: 5)
!3426 = !DILocation(line: 1247, column: 9, scope: !3425)
!3427 = !DILocation(line: 1250, column: 21, scope: !3425)
!3428 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !3429)
!3429 = distinct !DILocation(line: 1251, column: 9, scope: !3425)
!3430 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !3429)
!3431 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !3429)
!3432 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !3429)
!3433 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !3429)
!3434 = !DILocation(line: 1252, column: 5, scope: !3425)
!3435 = !DILocation(line: 1253, column: 1, scope: !3386)
!3436 = distinct !DISubprogram(name: "clusterHandshakeInProgress", scope: !3, file: !3, line: 1258, type: !3437, isLocal: false, isDefinition: true, scopeLine: 1258, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3439)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!177, !178, !177, !177}
!3439 = !{!3440, !3441, !3442, !3443, !3444, !3445}
!3440 = !DILocalVariable(name: "ip", arg: 1, scope: !3436, file: !3, line: 1258, type: !178)
!3441 = !DILocalVariable(name: "port", arg: 2, scope: !3436, file: !3, line: 1258, type: !177)
!3442 = !DILocalVariable(name: "cport", arg: 3, scope: !3436, file: !3, line: 1258, type: !177)
!3443 = !DILocalVariable(name: "di", scope: !3436, file: !3, line: 1259, type: !297)
!3444 = !DILocalVariable(name: "de", scope: !3436, file: !3, line: 1260, type: !340)
!3445 = !DILocalVariable(name: "node", scope: !3446, file: !3, line: 1264, type: !378)
!3446 = distinct !DILexicalBlock(scope: !3436, file: !3, line: 1263, column: 40)
!3447 = !DILocation(line: 1258, column: 38, scope: !3436)
!3448 = !DILocation(line: 1258, column: 46, scope: !3436)
!3449 = !DILocation(line: 1258, column: 56, scope: !3436)
!3450 = !DILocation(line: 1262, column: 37, scope: !3436)
!3451 = !DILocation(line: 1262, column: 46, scope: !3436)
!3452 = !DILocation(line: 1262, column: 10, scope: !3436)
!3453 = !DILocation(line: 1259, column: 19, scope: !3436)
!3454 = !DILocation(line: 1263, column: 5, scope: !3436)
!3455 = !DILocation(line: 1263, column: 17, scope: !3436)
!3456 = !DILocation(line: 1260, column: 16, scope: !3436)
!3457 = !DILocation(line: 1263, column: 31, scope: !3436)
!3458 = !DILocation(line: 1264, column: 29, scope: !3446)
!3459 = !DILocation(line: 1264, column: 22, scope: !3446)
!3460 = !DILocation(line: 1266, column: 14, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1266, column: 13)
!3462 = !DILocation(line: 1266, column: 13, scope: !3446)
!3463 = !DILocation(line: 1267, column: 25, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 1267, column: 13)
!3465 = !DILocation(line: 1267, column: 14, scope: !3464)
!3466 = !DILocation(line: 1267, column: 38, scope: !3464)
!3467 = !DILocation(line: 1268, column: 19, scope: !3464)
!3468 = !DILocation(line: 1268, column: 24, scope: !3464)
!3469 = !DILocation(line: 1268, column: 32, scope: !3464)
!3470 = !DILocation(line: 1269, column: 19, scope: !3464)
!3471 = !DILocation(line: 1269, column: 25, scope: !3464)
!3472 = !DILocation(line: 1267, column: 13, scope: !3446)
!3473 = !DILocation(line: 1269, column: 35, scope: !3464)
!3474 = !DILocation(line: 0, scope: !3461)
!3475 = !DILocation(line: 1271, column: 5, scope: !3436)
!3476 = !DILocation(line: 1272, column: 5, scope: !3436)
!3477 = distinct !DISubprogram(name: "clusterStartHandshake", scope: !3, file: !3, line: 1282, type: !3437, isLocal: false, isDefinition: true, scopeLine: 1282, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3478)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484}
!3479 = !DILocalVariable(name: "ip", arg: 1, scope: !3477, file: !3, line: 1282, type: !178)
!3480 = !DILocalVariable(name: "port", arg: 2, scope: !3477, file: !3, line: 1282, type: !177)
!3481 = !DILocalVariable(name: "cport", arg: 3, scope: !3477, file: !3, line: 1282, type: !177)
!3482 = !DILocalVariable(name: "n", scope: !3477, file: !3, line: 1283, type: !378)
!3483 = !DILocalVariable(name: "norm_ip", scope: !3477, file: !3, line: 1284, type: !85)
!3484 = !DILocalVariable(name: "sa", scope: !3477, file: !3, line: 1285, type: !3485)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_storage", file: !18, line: 100, size: 224, elements: !3486)
!3486 = !{!3487, !3488, !3489, !3491, !3493}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "s2_len", scope: !3485, file: !18, line: 101, baseType: !21, size: 8)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "ss_family", scope: !3485, file: !18, line: 102, baseType: !29, size: 8, offset: 8)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "s2_data1", scope: !3485, file: !18, line: 103, baseType: !3490, size: 16, offset: 16)
!3490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 16, elements: !360)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "s2_data2", scope: !3485, file: !18, line: 104, baseType: !3492, size: 96, offset: 32)
!3492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 96, elements: !125)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "s2_data3", scope: !3485, file: !18, line: 106, baseType: !3492, size: 96, offset: 128)
!3494 = !DILocation(line: 1282, column: 33, scope: !3477)
!3495 = !DILocation(line: 1282, column: 41, scope: !3477)
!3496 = !DILocation(line: 1282, column: 51, scope: !3477)
!3497 = !DILocation(line: 1284, column: 5, scope: !3477)
!3498 = !DILocation(line: 1284, column: 10, scope: !3477)
!3499 = !DILocation(line: 1285, column: 5, scope: !3477)
!3500 = !DILocation(line: 1289, column: 44, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 1288, column: 9)
!3502 = !DILocation(line: 1289, column: 13, scope: !3501)
!3503 = !DILocation(line: 1288, column: 9, scope: !3501)
!3504 = !DILocation(line: 1288, column: 9, scope: !3477)
!3505 = !DILocation(line: 1293, column: 45, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 1292, column: 16)
!3507 = !DILocation(line: 1293, column: 13, scope: !3506)
!3508 = !DILocation(line: 1292, column: 16, scope: !3506)
!3509 = !DILocation(line: 1292, column: 16, scope: !3501)
!3510 = !DILocation(line: 1297, column: 9, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 1296, column: 12)
!3512 = !DILocation(line: 1297, column: 15, scope: !3511)
!3513 = !DILocation(line: 1298, column: 9, scope: !3511)
!3514 = !DILocation(line: 0, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 1290, column: 5)
!3516 = !{!3517, !710, i64 1}
!3517 = !{!"sockaddr_storage", !710, i64 0, !710, i64 1, !710, i64 2, !710, i64 4, !710, i64 16}
!3518 = !DILocation(line: 1302, column: 19, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 1302, column: 9)
!3520 = !DILocation(line: 1303, column: 9, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 1302, column: 67)
!3522 = !DILocation(line: 1303, column: 15, scope: !3521)
!3523 = !DILocation(line: 1304, column: 9, scope: !3521)
!3524 = !DILocation(line: 1309, column: 5, scope: !3477)
!3525 = !DILocation(line: 1310, column: 12, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 1310, column: 9)
!3527 = !DILocation(line: 1310, column: 22, scope: !3526)
!3528 = !DILocation(line: 1310, column: 9, scope: !3477)
!3529 = !DILocation(line: 1311, column: 9, scope: !3526)
!3530 = !DILocation(line: 1316, column: 52, scope: !3526)
!3531 = !DILocation(line: 1316, column: 13, scope: !3526)
!3532 = !DILocation(line: 1315, column: 9, scope: !3526)
!3533 = !DILocation(line: 1319, column: 9, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 1319, column: 9)
!3535 = !DILocation(line: 1319, column: 9, scope: !3477)
!3536 = !DILocation(line: 1320, column: 9, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3534, file: !3, line: 1319, column: 57)
!3538 = !DILocation(line: 1320, column: 15, scope: !3537)
!3539 = !DILocation(line: 1321, column: 9, scope: !3537)
!3540 = !DILocation(line: 695, column: 38, scope: !1136, inlinedAt: !3541)
!3541 = distinct !DILocation(line: 1327, column: 9, scope: !3477)
!3542 = !DILocation(line: 695, column: 52, scope: !1136, inlinedAt: !3541)
!3543 = !DILocation(line: 696, column: 25, scope: !1136, inlinedAt: !3541)
!3544 = !DILocation(line: 696, column: 18, scope: !1136, inlinedAt: !3541)
!3545 = !DILocation(line: 0, scope: !1149, inlinedAt: !3541)
!3546 = !DILocation(line: 698, column: 9, scope: !1136, inlinedAt: !3541)
!3547 = !DILocation(line: 701, column: 9, scope: !1149, inlinedAt: !3541)
!3548 = !DILocation(line: 702, column: 19, scope: !1136, inlinedAt: !3541)
!3549 = !DILocation(line: 702, column: 11, scope: !1136, inlinedAt: !3541)
!3550 = !DILocation(line: 702, column: 17, scope: !1136, inlinedAt: !3541)
!3551 = !DILocation(line: 703, column: 11, scope: !1136, inlinedAt: !3541)
!3552 = !DILocation(line: 703, column: 23, scope: !1136, inlinedAt: !3541)
!3553 = !DILocation(line: 704, column: 11, scope: !1136, inlinedAt: !3541)
!3554 = !DILocation(line: 704, column: 17, scope: !1136, inlinedAt: !3541)
!3555 = !DILocation(line: 705, column: 18, scope: !1136, inlinedAt: !3541)
!3556 = !DILocation(line: 705, column: 5, scope: !1136, inlinedAt: !3541)
!3557 = !DILocation(line: 706, column: 11, scope: !1136, inlinedAt: !3541)
!3558 = !DILocation(line: 706, column: 20, scope: !1136, inlinedAt: !3541)
!3559 = !DILocation(line: 707, column: 11, scope: !1136, inlinedAt: !3541)
!3560 = !DILocation(line: 707, column: 21, scope: !1136, inlinedAt: !3541)
!3561 = !DILocation(line: 708, column: 11, scope: !1136, inlinedAt: !3541)
!3562 = !DILocation(line: 708, column: 18, scope: !1136, inlinedAt: !3541)
!3563 = !DILocation(line: 709, column: 11, scope: !1136, inlinedAt: !3541)
!3564 = !DILocation(line: 709, column: 19, scope: !1136, inlinedAt: !3541)
!3565 = !DILocation(line: 710, column: 11, scope: !1136, inlinedAt: !3541)
!3566 = !DILocation(line: 710, column: 21, scope: !1136, inlinedAt: !3541)
!3567 = !DILocation(line: 711, column: 11, scope: !1136, inlinedAt: !3541)
!3568 = !DILocation(line: 711, column: 21, scope: !1136, inlinedAt: !3541)
!3569 = !DILocation(line: 712, column: 11, scope: !1136, inlinedAt: !3541)
!3570 = !DILocation(line: 712, column: 16, scope: !1136, inlinedAt: !3541)
!3571 = !DILocation(line: 713, column: 18, scope: !1136, inlinedAt: !3541)
!3572 = !DILocation(line: 713, column: 5, scope: !1136, inlinedAt: !3541)
!3573 = !DILocation(line: 714, column: 11, scope: !1136, inlinedAt: !3541)
!3574 = !DILocation(line: 714, column: 16, scope: !1136, inlinedAt: !3541)
!3575 = !DILocation(line: 715, column: 11, scope: !1136, inlinedAt: !3541)
!3576 = !DILocation(line: 715, column: 17, scope: !1136, inlinedAt: !3541)
!3577 = !DILocation(line: 716, column: 26, scope: !1136, inlinedAt: !3541)
!3578 = !DILocation(line: 716, column: 11, scope: !1136, inlinedAt: !3541)
!3579 = !DILocation(line: 716, column: 24, scope: !1136, inlinedAt: !3541)
!3580 = !DILocation(line: 717, column: 11, scope: !1136, inlinedAt: !3541)
!3581 = !DILocation(line: 717, column: 22, scope: !1136, inlinedAt: !3541)
!3582 = !DILocation(line: 718, column: 11, scope: !1136, inlinedAt: !3541)
!3583 = !DILocation(line: 718, column: 25, scope: !1136, inlinedAt: !3541)
!3584 = !DILocation(line: 719, column: 11, scope: !1136, inlinedAt: !3541)
!3585 = !DILocation(line: 719, column: 28, scope: !1136, inlinedAt: !3541)
!3586 = !DILocation(line: 720, column: 11, scope: !1136, inlinedAt: !3541)
!3587 = !DILocation(line: 720, column: 23, scope: !1136, inlinedAt: !3541)
!3588 = !DILocation(line: 721, column: 5, scope: !1136, inlinedAt: !3541)
!3589 = !DILocation(line: 722, column: 5, scope: !1136, inlinedAt: !3541)
!3590 = !DILocation(line: 1283, column: 18, scope: !3477)
!3591 = !DILocation(line: 1328, column: 5, scope: !3477)
!3592 = !DILocation(line: 1329, column: 13, scope: !3477)
!3593 = !DILocation(line: 1330, column: 14, scope: !3477)
!3594 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !3595)
!3595 = distinct !DILocation(line: 1331, column: 5, scope: !3477)
!3596 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !3595)
!3597 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !3595)
!3598 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !3595)
!3599 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !3595)
!3600 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !3595)
!3601 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !3595)
!3602 = !DILocation(line: 1332, column: 5, scope: !3477)
!3603 = !DILocation(line: 0, scope: !3511)
!3604 = !DILocation(line: 1333, column: 1, scope: !3477)
!3605 = distinct !DISubprogram(name: "clusterProcessGossipSection", scope: !3, file: !3, line: 1339, type: !3606, isLocal: false, isDefinition: true, scopeLine: 1339, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3608)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{null, !92, !179}
!3608 = !{!3609, !3610, !3611, !3612, !3613, !3614, !3616, !3617, !3618}
!3609 = !DILocalVariable(name: "hdr", arg: 1, scope: !3605, file: !3, line: 1339, type: !92)
!3610 = !DILocalVariable(name: "link", arg: 2, scope: !3605, file: !3, line: 1339, type: !179)
!3611 = !DILocalVariable(name: "count", scope: !3605, file: !3, line: 1340, type: !33)
!3612 = !DILocalVariable(name: "g", scope: !3605, file: !3, line: 1341, type: !73)
!3613 = !DILocalVariable(name: "sender", scope: !3605, file: !3, line: 1342, type: !378)
!3614 = !DILocalVariable(name: "flags", scope: !3615, file: !3, line: 1345, type: !33)
!3615 = distinct !DILexicalBlock(scope: !3605, file: !3, line: 1344, column: 20)
!3616 = !DILocalVariable(name: "node", scope: !3615, file: !3, line: 1346, type: !378)
!3617 = !DILocalVariable(name: "ci", scope: !3615, file: !3, line: 1347, type: !189)
!3618 = !DILocalVariable(name: "pongtime", scope: !3619, file: !3, line: 1390, type: !184)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1389, column: 13)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1386, column: 17)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1362, column: 19)
!3622 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 1362, column: 13)
!3623 = !DILocation(line: 1339, column: 46, scope: !3605)
!3624 = !DILocation(line: 1339, column: 64, scope: !3605)
!3625 = !DILocation(line: 1340, column: 22, scope: !3605)
!3626 = !{!2759, !728, i64 14}
!3627 = !DILocation(line: 1340, column: 14, scope: !3605)
!3628 = !DILocation(line: 1341, column: 60, scope: !3605)
!3629 = !DILocation(line: 1341, column: 55, scope: !3605)
!3630 = !DILocation(line: 1341, column: 27, scope: !3605)
!3631 = !DILocation(line: 1342, column: 33, scope: !3605)
!3632 = !DILocation(line: 1342, column: 27, scope: !3605)
!3633 = !DILocation(line: 1342, column: 71, scope: !3605)
!3634 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !3635)
!3635 = distinct !DILocation(line: 1342, column: 53, scope: !3605)
!3636 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !3635)
!3637 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !3635)
!3638 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !3635)
!3639 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !3635)
!3640 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !3635)
!3641 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !3635)
!3642 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !3635)
!3643 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !3635)
!3644 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !3635)
!3645 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !3635)
!3646 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !3635)
!3647 = !DILocation(line: 0, scope: !825, inlinedAt: !3635)
!3648 = !DILocation(line: 0, scope: !3605)
!3649 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !3635)
!3650 = !DILocation(line: 1342, column: 18, scope: !3605)
!3651 = !DILocation(line: 1344, column: 5, scope: !3605)
!3652 = !DILocation(line: 1344, column: 16, scope: !3605)
!3653 = !DILocation(line: 1345, column: 26, scope: !3615)
!3654 = !{!3655, !728, i64 98}
!3655 = !{!"", !710, i64 0, !709, i64 40, !709, i64 44, !710, i64 48, !728, i64 94, !728, i64 96, !728, i64 98, !709, i64 100}
!3656 = !DILocation(line: 1345, column: 18, scope: !3615)
!3657 = !DILocation(line: 1349, column: 20, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3615, file: !3, line: 1349, column: 13)
!3659 = !{!789, !709, i64 1728}
!3660 = !DILocation(line: 1349, column: 30, scope: !3658)
!3661 = !DILocation(line: 1349, column: 13, scope: !3615)
!3662 = !DILocation(line: 1361, column: 34, scope: !3615)
!3663 = !DILocation(line: 1350, column: 44, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 1349, column: 43)
!3665 = !DILocation(line: 1350, column: 18, scope: !3664)
!3666 = !DILocation(line: 1347, column: 13, scope: !3615)
!3667 = !DILocation(line: 1352, column: 17, scope: !3664)
!3668 = !DILocation(line: 1353, column: 17, scope: !3664)
!3669 = !DILocation(line: 1354, column: 17, scope: !3664)
!3670 = !{!3655, !728, i64 94}
!3671 = !DILocation(line: 1355, column: 17, scope: !3664)
!3672 = !{!3655, !728, i64 96}
!3673 = !DILocation(line: 1351, column: 13, scope: !3664)
!3674 = !DILocation(line: 1357, column: 13, scope: !3664)
!3675 = !DILocation(line: 1358, column: 9, scope: !3664)
!3676 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !3677)
!3677 = distinct !DILocation(line: 1361, column: 16, scope: !3615)
!3678 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !3677)
!3679 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !3677)
!3680 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !3677)
!3681 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !3677)
!3682 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !3677)
!3683 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !3677)
!3684 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !3677)
!3685 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !3677)
!3686 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !3677)
!3687 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !3677)
!3688 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !3677)
!3689 = !DILocation(line: 1346, column: 22, scope: !3615)
!3690 = !DILocation(line: 1362, column: 13, scope: !3615)
!3691 = !DILocation(line: 0, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1365, column: 17)
!3693 = !DILocation(line: 1429, column: 24, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !3, line: 1429, column: 17)
!3695 = distinct !DILexicalBlock(scope: !3622, file: !3, line: 1422, column: 16)
!3696 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !3677)
!3697 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !3677)
!3698 = !DILocation(line: 1362, column: 13, scope: !3622)
!3699 = !DILocation(line: 1365, column: 24, scope: !3692)
!3700 = !DILocation(line: 1365, column: 27, scope: !3692)
!3701 = !DILocation(line: 1365, column: 48, scope: !3692)
!3702 = !DILocation(line: 1365, column: 59, scope: !3692)
!3703 = !DILocation(line: 1365, column: 56, scope: !3692)
!3704 = !DILocation(line: 1365, column: 17, scope: !3621)
!3705 = !DILocation(line: 1366, column: 27, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !3, line: 1366, column: 21)
!3707 = distinct !DILexicalBlock(scope: !3692, file: !3, line: 1365, column: 67)
!3708 = !DILocation(line: 1366, column: 21, scope: !3707)
!3709 = !DILocation(line: 1367, column: 25, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 1367, column: 25)
!3711 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 1366, column: 69)
!3712 = !DILocation(line: 1367, column: 25, scope: !3711)
!3713 = !DILocation(line: 1370, column: 43, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3710, file: !3, line: 1367, column: 67)
!3715 = !DILocation(line: 1368, column: 25, scope: !3714)
!3716 = !DILocation(line: 1371, column: 21, scope: !3714)
!3717 = !DILocation(line: 1372, column: 21, scope: !3711)
!3718 = !DILocation(line: 1373, column: 17, scope: !3711)
!3719 = !DILocation(line: 792, column: 46, scope: !2585, inlinedAt: !3720)
!3720 = distinct !DILocation(line: 1374, column: 25, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1374, column: 25)
!3722 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 1373, column: 24)
!3723 = !DILocation(line: 792, column: 65, scope: !2585, inlinedAt: !3720)
!3724 = !DILocation(line: 793, column: 21, scope: !2585, inlinedAt: !3720)
!3725 = !DILocation(line: 793, column: 11, scope: !2585, inlinedAt: !3720)
!3726 = !DILocation(line: 795, column: 5, scope: !2585, inlinedAt: !3720)
!3727 = !DILocation(line: 795, column: 14, scope: !2585, inlinedAt: !3720)
!3728 = !DILocation(line: 799, column: 5, scope: !2585, inlinedAt: !3720)
!3729 = !DILocation(line: 800, column: 5, scope: !2585, inlinedAt: !3720)
!3730 = !DILocation(line: 800, column: 18, scope: !2585, inlinedAt: !3720)
!3731 = !DILocation(line: 794, column: 15, scope: !2585, inlinedAt: !3720)
!3732 = !DILocation(line: 800, column: 33, scope: !2585, inlinedAt: !3720)
!3733 = !DILocation(line: 801, column: 18, scope: !2616, inlinedAt: !3720)
!3734 = !DILocation(line: 796, column: 28, scope: !2585, inlinedAt: !3720)
!3735 = !DILocation(line: 802, column: 17, scope: !2621, inlinedAt: !3720)
!3736 = !DILocation(line: 802, column: 22, scope: !2621, inlinedAt: !3720)
!3737 = !DILocation(line: 802, column: 13, scope: !2616, inlinedAt: !3720)
!3738 = !DILocation(line: 804, column: 9, scope: !2585, inlinedAt: !3720)
!3739 = !DILocation(line: 804, column: 14, scope: !2631, inlinedAt: !3720)
!3740 = !DILocation(line: 810, column: 1, scope: !2585, inlinedAt: !3720)
!3741 = !DILocation(line: 1374, column: 25, scope: !3722)
!3742 = !DILocation(line: 807, column: 5, scope: !2585, inlinedAt: !3720)
!3743 = !DILocation(line: 808, column: 5, scope: !2585, inlinedAt: !3720)
!3744 = !DILocation(line: 809, column: 5, scope: !2585, inlinedAt: !3720)
!3745 = !DILocation(line: 1377, column: 43, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1374, column: 67)
!3747 = !DILocation(line: 1375, column: 25, scope: !3746)
!3748 = !DILocation(line: 1378, column: 21, scope: !3746)
!3749 = !DILocation(line: 1386, column: 19, scope: !3620)
!3750 = !DILocation(line: 1386, column: 25, scope: !3620)
!3751 = !DILocation(line: 1386, column: 67, scope: !3620)
!3752 = !DILocation(line: 1387, column: 23, scope: !3620)
!3753 = !DILocation(line: 1387, column: 33, scope: !3620)
!3754 = !DILocation(line: 1387, column: 38, scope: !3620)
!3755 = !DILocation(line: 815, column: 49, scope: !2988, inlinedAt: !3756)
!3756 = distinct !DILocation(line: 1388, column: 17, scope: !3620)
!3757 = !DILocation(line: 816, column: 5, scope: !2988, inlinedAt: !3756)
!3758 = !DILocation(line: 817, column: 12, scope: !2988, inlinedAt: !3756)
!3759 = !DILocation(line: 817, column: 5, scope: !2988, inlinedAt: !3756)
!3760 = !DILocation(line: 1388, column: 54, scope: !3620)
!3761 = !DILocation(line: 1386, column: 17, scope: !3621)
!3762 = !DILocation(line: 1390, column: 37, scope: !3619)
!3763 = !{!3655, !709, i64 44}
!3764 = !DILocation(line: 1390, column: 26, scope: !3619)
!3765 = !DILocation(line: 1391, column: 26, scope: !3619)
!3766 = !DILocation(line: 1397, column: 41, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 1397, column: 21)
!3768 = !{!789, !790, i64 2896}
!3769 = !DILocation(line: 1397, column: 47, scope: !3767)
!3770 = !DILocation(line: 1397, column: 30, scope: !3767)
!3771 = !DILocation(line: 1397, column: 53, scope: !3767)
!3772 = !DILocation(line: 1398, column: 38, scope: !3767)
!3773 = !DILocation(line: 1398, column: 30, scope: !3767)
!3774 = !DILocation(line: 1397, column: 21, scope: !3619)
!3775 = !DILocation(line: 1400, column: 41, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 1399, column: 17)
!3777 = !DILocation(line: 1401, column: 17, scope: !3776)
!3778 = !DILocation(line: 1402, column: 13, scope: !3619)
!3779 = !DILocation(line: 1409, column: 23, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 1409, column: 17)
!3781 = !DILocation(line: 1409, column: 29, scope: !3780)
!3782 = !DILocation(line: 1409, column: 70, scope: !3780)
!3783 = !DILocation(line: 1410, column: 25, scope: !3780)
!3784 = !DILocation(line: 1410, column: 48, scope: !3780)
!3785 = !DILocation(line: 1411, column: 67, scope: !3780)
!3786 = !DILocation(line: 1412, column: 29, scope: !3780)
!3787 = !DILocation(line: 1412, column: 38, scope: !3780)
!3788 = !DILocation(line: 1412, column: 18, scope: !3780)
!3789 = !DILocation(line: 1412, column: 45, scope: !3780)
!3790 = !DILocation(line: 1413, column: 24, scope: !3780)
!3791 = !DILocation(line: 1413, column: 32, scope: !3780)
!3792 = !DILocation(line: 1413, column: 29, scope: !3780)
!3793 = !DILocation(line: 1413, column: 47, scope: !3780)
!3794 = !DILocation(line: 1414, column: 24, scope: !3780)
!3795 = !DILocation(line: 1414, column: 33, scope: !3780)
!3796 = !DILocation(line: 1414, column: 30, scope: !3780)
!3797 = !DILocation(line: 1409, column: 17, scope: !3621)
!3798 = !DILocation(line: 1416, column: 27, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 1416, column: 21)
!3800 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 1415, column: 13)
!3801 = !DILocation(line: 1416, column: 21, scope: !3799)
!3802 = !DILocation(line: 1416, column: 21, scope: !3800)
!3803 = !DILocation(line: 1416, column: 33, scope: !3799)
!3804 = !DILocation(line: 1417, column: 17, scope: !3800)
!3805 = !DILocation(line: 1418, column: 30, scope: !3800)
!3806 = !DILocation(line: 1418, column: 23, scope: !3800)
!3807 = !DILocation(line: 1418, column: 28, scope: !3800)
!3808 = !DILocation(line: 1419, column: 31, scope: !3800)
!3809 = !DILocation(line: 1419, column: 23, scope: !3800)
!3810 = !DILocation(line: 1419, column: 29, scope: !3800)
!3811 = !DILocation(line: 1420, column: 29, scope: !3800)
!3812 = !DILocation(line: 1421, column: 13, scope: !3800)
!3813 = !DILocation(line: 1430, column: 25, scope: !3694)
!3814 = !DILocation(line: 1430, column: 48, scope: !3694)
!3815 = !DILocation(line: 1159, column: 34, scope: !3289, inlinedAt: !3816)
!3816 = distinct !DILocation(line: 1431, column: 18, scope: !3694)
!3817 = !DILocation(line: 1160, column: 14, scope: !3289, inlinedAt: !3816)
!3818 = !DILocation(line: 1160, column: 9, scope: !3289, inlinedAt: !3816)
!3819 = !DILocation(line: 1163, column: 5, scope: !3289, inlinedAt: !3816)
!3820 = !DILocation(line: 1164, column: 30, scope: !3289, inlinedAt: !3816)
!3821 = !DILocation(line: 1164, column: 39, scope: !3289, inlinedAt: !3816)
!3822 = !DILocation(line: 1164, column: 14, scope: !3289, inlinedAt: !3816)
!3823 = !DILocation(line: 1164, column: 60, scope: !3289, inlinedAt: !3816)
!3824 = !DILocation(line: 1165, column: 5, scope: !3289, inlinedAt: !3816)
!3825 = !DILocation(line: 1166, column: 5, scope: !3289, inlinedAt: !3816)
!3826 = !DILocation(line: 1429, column: 17, scope: !3695)
!3827 = !DILocation(line: 1433, column: 39, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3694, file: !3, line: 1432, column: 13)
!3829 = !DILocation(line: 1433, column: 45, scope: !3828)
!3830 = !DILocation(line: 1433, column: 60, scope: !3828)
!3831 = !DILocation(line: 1433, column: 17, scope: !3828)
!3832 = !DILocation(line: 1434, column: 13, scope: !3828)
!3833 = !DILocation(line: 1438, column: 10, scope: !3615)
!3834 = distinct !{!3834, !3651, !3835}
!3835 = !DILocation(line: 1439, column: 5, scope: !3605)
!3836 = !DILocation(line: 1440, column: 1, scope: !3605)
!3837 = distinct !DISubprogram(name: "representClusterNodeFlags", scope: !3, file: !3, line: 3973, type: !3838, isLocal: false, isDefinition: true, scopeLine: 3973, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3840)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!189, !189, !33}
!3840 = !{!3841, !3842, !3843, !3844, !3845, !3846}
!3841 = !DILocalVariable(name: "ci", arg: 1, scope: !3837, file: !3, line: 3973, type: !189)
!3842 = !DILocalVariable(name: "flags", arg: 2, scope: !3837, file: !3, line: 3973, type: !33)
!3843 = !DILocalVariable(name: "orig_len", scope: !3837, file: !3, line: 3974, type: !1465)
!3844 = !DILocalVariable(name: "i", scope: !3837, file: !3, line: 3975, type: !177)
!3845 = !DILocalVariable(name: "size", scope: !3837, file: !3, line: 3975, type: !177)
!3846 = !DILocalVariable(name: "nodeflag", scope: !3847, file: !3, line: 3977, type: !3850)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 3976, column: 32)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 3976, column: 5)
!3849 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 3976, column: 5)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!3851 = !DILocation(line: 3973, column: 35, scope: !3837)
!3852 = !DILocation(line: 3973, column: 48, scope: !3837)
!3853 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !3854)
!3854 = distinct !DILocation(line: 3974, column: 23, scope: !3837)
!3855 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !3854)
!3856 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !3854)
!3857 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !3854)
!3858 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !3854)
!3859 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !3854)
!3860 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !3854)
!3861 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !3854)
!3862 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !3854)
!3863 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !3854)
!3864 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !3854)
!3865 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !3854)
!3866 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !3854)
!3867 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !3854)
!3868 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !3854)
!3869 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !3854)
!3870 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !3854)
!3871 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !3854)
!3872 = !DILocation(line: 0, scope: !1496, inlinedAt: !3854)
!3873 = !DILocation(line: 0, scope: !3837)
!3874 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !3854)
!3875 = !DILocation(line: 3974, column: 12, scope: !3837)
!3876 = !DILocation(line: 3975, column: 12, scope: !3837)
!3877 = !DILocation(line: 3975, column: 9, scope: !3837)
!3878 = !DILocation(line: 3976, column: 10, scope: !3849)
!3879 = !DILocation(line: 3976, column: 5, scope: !3849)
!3880 = !DILocation(line: 3978, column: 19, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3847, file: !3, line: 3978, column: 13)
!3882 = !DILocation(line: 3978, column: 13, scope: !3847)
!3883 = !DILocation(line: 3978, column: 42, scope: !3881)
!3884 = !DILocation(line: 3978, column: 37, scope: !3881)
!3885 = !DILocation(line: 3976, column: 5, scope: !3848)
!3886 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !3887)
!3887 = distinct !DILocation(line: 3981, column: 9, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 3981, column: 9)
!3889 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !3887)
!3890 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !3887)
!3891 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !3887)
!3892 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !3887)
!3893 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !3887)
!3894 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !3887)
!3895 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !3887)
!3896 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !3887)
!3897 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !3887)
!3898 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !3887)
!3899 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !3887)
!3900 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !3887)
!3901 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !3887)
!3902 = !DILocation(line: 0, scope: !1496, inlinedAt: !3887)
!3903 = !DILocation(line: 0, scope: !3888)
!3904 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !3887)
!3905 = !DILocation(line: 3981, column: 20, scope: !3888)
!3906 = !DILocation(line: 3981, column: 9, scope: !3837)
!3907 = !DILocation(line: 3981, column: 38, scope: !3888)
!3908 = !DILocation(line: 3981, column: 33, scope: !3888)
!3909 = !DILocation(line: 3982, column: 5, scope: !3837)
!3910 = !DILocation(line: 3983, column: 5, scope: !3837)
!3911 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !3887)
!3912 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !3887)
!3913 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !3887)
!3914 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !3887)
!3915 = distinct !DISubprogram(name: "nodeIp2String", scope: !3, file: !3, line: 1445, type: !3916, isLocal: false, isDefinition: true, scopeLine: 1445, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3918)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{null, !178, !179, !178}
!3918 = !{!3919, !3920, !3921}
!3919 = !DILocalVariable(name: "buf", arg: 1, scope: !3915, file: !3, line: 1445, type: !178)
!3920 = !DILocalVariable(name: "link", arg: 2, scope: !3915, file: !3, line: 1445, type: !179)
!3921 = !DILocalVariable(name: "announced_ip", arg: 3, scope: !3915, file: !3, line: 1445, type: !178)
!3922 = !DILocation(line: 1445, column: 26, scope: !3915)
!3923 = !DILocation(line: 1445, column: 44, scope: !3915)
!3924 = !DILocation(line: 1445, column: 56, scope: !3915)
!3925 = !DILocation(line: 1446, column: 9, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3915, file: !3, line: 1446, column: 9)
!3927 = !DILocation(line: 1446, column: 25, scope: !3926)
!3928 = !DILocation(line: 1446, column: 9, scope: !3915)
!3929 = !DILocation(line: 1447, column: 9, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1446, column: 34)
!3931 = !DILocation(line: 1448, column: 9, scope: !3930)
!3932 = !DILocation(line: 1448, column: 31, scope: !3930)
!3933 = !DILocation(line: 1449, column: 5, scope: !3930)
!3934 = !DILocation(line: 1450, column: 32, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 1449, column: 12)
!3936 = !DILocation(line: 1450, column: 9, scope: !3935)
!3937 = !DILocation(line: 1452, column: 1, scope: !3915)
!3938 = distinct !DISubprogram(name: "nodeUpdateAddressIfNeeded", scope: !3, file: !3, line: 1466, type: !3939, isLocal: false, isDefinition: true, scopeLine: 1468, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !3941)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!177, !378, !179, !92}
!3941 = !{!3942, !3943, !3944, !3945, !3946, !3947}
!3942 = !DILocalVariable(name: "node", arg: 1, scope: !3938, file: !3, line: 1466, type: !378)
!3943 = !DILocalVariable(name: "link", arg: 2, scope: !3938, file: !3, line: 1466, type: !179)
!3944 = !DILocalVariable(name: "hdr", arg: 3, scope: !3938, file: !3, line: 1467, type: !92)
!3945 = !DILocalVariable(name: "ip", scope: !3938, file: !3, line: 1469, type: !85)
!3946 = !DILocalVariable(name: "port", scope: !3938, file: !3, line: 1470, type: !177)
!3947 = !DILocalVariable(name: "cport", scope: !3938, file: !3, line: 1471, type: !177)
!3948 = !DILocation(line: 1466, column: 44, scope: !3938)
!3949 = !DILocation(line: 1466, column: 63, scope: !3938)
!3950 = !DILocation(line: 1467, column: 43, scope: !3938)
!3951 = !DILocation(line: 1469, column: 5, scope: !3938)
!3952 = !DILocation(line: 1469, column: 10, scope: !3938)
!3953 = !DILocation(line: 1470, column: 16, scope: !3938)
!3954 = !{!2759, !728, i64 10}
!3955 = !DILocation(line: 1470, column: 9, scope: !3938)
!3956 = !DILocation(line: 1471, column: 17, scope: !3938)
!3957 = !{!2759, !728, i64 2248}
!3958 = !DILocation(line: 1471, column: 9, scope: !3938)
!3959 = !DILocation(line: 1479, column: 23, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1479, column: 9)
!3961 = !DILocation(line: 1479, column: 14, scope: !3960)
!3962 = !DILocation(line: 1479, column: 9, scope: !3938)
!3963 = !DILocation(line: 1481, column: 27, scope: !3938)
!3964 = !DILocation(line: 1445, column: 26, scope: !3915, inlinedAt: !3965)
!3965 = distinct !DILocation(line: 1481, column: 5, scope: !3938)
!3966 = !DILocation(line: 1445, column: 44, scope: !3915, inlinedAt: !3965)
!3967 = !DILocation(line: 1445, column: 56, scope: !3915, inlinedAt: !3965)
!3968 = !DILocation(line: 1446, column: 9, scope: !3926, inlinedAt: !3965)
!3969 = !DILocation(line: 1446, column: 25, scope: !3926, inlinedAt: !3965)
!3970 = !DILocation(line: 1446, column: 9, scope: !3915, inlinedAt: !3965)
!3971 = !DILocation(line: 1447, column: 9, scope: !3930, inlinedAt: !3965)
!3972 = !DILocation(line: 1448, column: 9, scope: !3930, inlinedAt: !3965)
!3973 = !DILocation(line: 1448, column: 31, scope: !3930, inlinedAt: !3965)
!3974 = !DILocation(line: 1449, column: 5, scope: !3930, inlinedAt: !3965)
!3975 = !DILocation(line: 1450, column: 32, scope: !3935, inlinedAt: !3965)
!3976 = !DILocation(line: 1450, column: 9, scope: !3935, inlinedAt: !3965)
!3977 = !DILocation(line: 1452, column: 1, scope: !3915, inlinedAt: !3965)
!3978 = !DILocation(line: 1482, column: 15, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1482, column: 9)
!3980 = !DILocation(line: 1482, column: 20, scope: !3979)
!3981 = !DILocation(line: 1482, column: 28, scope: !3979)
!3982 = !DILocation(line: 0, scope: !3938)
!3983 = !DILocation(line: 1482, column: 37, scope: !3979)
!3984 = !DILocation(line: 1482, column: 43, scope: !3979)
!3985 = !DILocation(line: 1482, column: 52, scope: !3979)
!3986 = !DILocation(line: 1483, column: 19, scope: !3979)
!3987 = !DILocation(line: 1483, column: 9, scope: !3979)
!3988 = !DILocation(line: 1483, column: 29, scope: !3979)
!3989 = !DILocation(line: 1482, column: 9, scope: !3938)
!3990 = !DILocation(line: 1486, column: 12, scope: !3938)
!3991 = !DILocation(line: 1486, column: 5, scope: !3938)
!3992 = !DILocation(line: 1487, column: 16, scope: !3938)
!3993 = !DILocation(line: 1488, column: 17, scope: !3938)
!3994 = !DILocation(line: 1489, column: 15, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1489, column: 9)
!3996 = !DILocation(line: 1489, column: 9, scope: !3995)
!3997 = !DILocation(line: 1489, column: 9, scope: !3938)
!3998 = !DILocation(line: 1489, column: 21, scope: !3995)
!3999 = !DILocation(line: 1492, column: 37, scope: !3938)
!4000 = !DILocation(line: 1490, column: 11, scope: !3938)
!4001 = !DILocation(line: 1490, column: 17, scope: !3938)
!4002 = !DILocation(line: 1492, column: 9, scope: !3938)
!4003 = !DILocation(line: 1491, column: 5, scope: !3938)
!4004 = !DILocation(line: 1496, column: 9, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 1496, column: 9)
!4006 = !DILocation(line: 1496, column: 29, scope: !4005)
!4007 = !DILocation(line: 1496, column: 40, scope: !4005)
!4008 = !DILocation(line: 1496, column: 48, scope: !4005)
!4009 = !DILocation(line: 1496, column: 9, scope: !3938)
!4010 = !DILocation(line: 1497, column: 46, scope: !4005)
!4011 = !DILocation(line: 1497, column: 9, scope: !4005)
!4012 = !DILocation(line: 0, scope: !3960)
!4013 = !DILocation(line: 1499, column: 1, scope: !3938)
!4014 = distinct !DISubprogram(name: "clusterUpdateSlotsConfigWith", scope: !3, file: !3, line: 1531, type: !4015, isLocal: false, isDefinition: true, scopeLine: 1531, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4017)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{null, !378, !104, !246}
!4017 = !{!4018, !4019, !4020, !4021, !4022, !4023, !4024, !4028}
!4018 = !DILocalVariable(name: "sender", arg: 1, scope: !4014, file: !3, line: 1531, type: !378)
!4019 = !DILocalVariable(name: "senderConfigEpoch", arg: 2, scope: !4014, file: !3, line: 1531, type: !104)
!4020 = !DILocalVariable(name: "slots", arg: 3, scope: !4014, file: !3, line: 1531, type: !246)
!4021 = !DILocalVariable(name: "j", scope: !4014, file: !3, line: 1532, type: !177)
!4022 = !DILocalVariable(name: "curmaster", scope: !4014, file: !3, line: 1533, type: !378)
!4023 = !DILocalVariable(name: "newmaster", scope: !4014, file: !3, line: 1533, type: !378)
!4024 = !DILocalVariable(name: "dirty_slots", scope: !4014, file: !3, line: 1541, type: !4025)
!4025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !33, size: 262144, elements: !4026)
!4026 = !{!4027}
!4027 = !DISubrange(count: 16384)
!4028 = !DILocalVariable(name: "dirty_slots_count", scope: !4014, file: !3, line: 1542, type: !177)
!4029 = !DILocation(line: 1531, column: 48, scope: !4014)
!4030 = !DILocation(line: 1531, column: 65, scope: !4014)
!4031 = !DILocation(line: 1531, column: 99, scope: !4014)
!4032 = !DILocation(line: 1533, column: 30, scope: !4014)
!4033 = !DILocation(line: 1541, column: 5, scope: !4014)
!4034 = !DILocation(line: 1541, column: 14, scope: !4014)
!4035 = !DILocation(line: 1542, column: 9, scope: !4014)
!4036 = !DILocation(line: 1547, column: 17, scope: !4014)
!4037 = !DILocation(line: 1547, column: 57, scope: !4014)
!4038 = !DILocation(line: 1533, column: 18, scope: !4014)
!4039 = !DILocation(line: 1549, column: 16, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1549, column: 9)
!4041 = !DILocation(line: 1549, column: 9, scope: !4014)
!4042 = !DILocation(line: 1550, column: 9, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 1549, column: 27)
!4044 = !DILocation(line: 1551, column: 9, scope: !4043)
!4045 = !DILocation(line: 1532, column: 9, scope: !4014)
!4046 = !DILocation(line: 1554, column: 10, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1554, column: 5)
!4048 = !DILocation(line: 1554, column: 5, scope: !4047)
!4049 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !4050)
!4050 = distinct !DILocation(line: 1555, column: 13, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !3, line: 1555, column: 13)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1554, column: 41)
!4053 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 1554, column: 5)
!4054 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !4050)
!4055 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !4050)
!4056 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !4050)
!4057 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !4050)
!4058 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !4050)
!4059 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !4050)
!4060 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !4050)
!4061 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !4050)
!4062 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !4050)
!4063 = !DILocation(line: 1555, column: 13, scope: !4052)
!4064 = !DILocation(line: 1557, column: 24, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1557, column: 17)
!4066 = distinct !DILexicalBlock(scope: !4051, file: !3, line: 1555, column: 37)
!4067 = !DILocation(line: 1557, column: 17, scope: !4065)
!4068 = !DILocation(line: 1557, column: 42, scope: !4065)
!4069 = !DILocation(line: 1557, column: 17, scope: !4066)
!4070 = !DILocation(line: 1563, column: 17, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1563, column: 17)
!4072 = !DILocation(line: 1563, column: 17, scope: !4066)
!4073 = !DILocation(line: 1569, column: 42, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1569, column: 17)
!4075 = !DILocation(line: 1569, column: 50, scope: !4074)
!4076 = !DILocation(line: 1570, column: 43, scope: !4074)
!4077 = !DILocation(line: 1570, column: 55, scope: !4074)
!4078 = !DILocation(line: 1569, column: 17, scope: !4066)
!4079 = !DILocation(line: 1574, column: 49, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1574, column: 21)
!4081 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1571, column: 13)
!4082 = !DILocation(line: 1574, column: 46, scope: !4080)
!4083 = !DILocation(line: 1574, column: 56, scope: !4080)
!4084 = !DILocation(line: 1575, column: 21, scope: !4080)
!4085 = !DILocation(line: 1575, column: 40, scope: !4080)
!4086 = !DILocation(line: 1576, column: 31, scope: !4080)
!4087 = !DILocation(line: 1576, column: 28, scope: !4080)
!4088 = !DILocation(line: 1574, column: 21, scope: !4081)
!4089 = !DILocation(line: 1578, column: 54, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 1577, column: 17)
!4091 = !DILocation(line: 1578, column: 21, scope: !4090)
!4092 = !DILocation(line: 1578, column: 52, scope: !4090)
!4093 = !DILocation(line: 1579, column: 38, scope: !4090)
!4094 = !DILocation(line: 1580, column: 17, scope: !4090)
!4095 = !DILocation(line: 0, scope: !4014)
!4096 = !DILocation(line: 1582, column: 28, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1582, column: 21)
!4098 = !DILocation(line: 1582, column: 21, scope: !4097)
!4099 = !DILocation(line: 1582, column: 46, scope: !4097)
!4100 = !DILocation(line: 1582, column: 21, scope: !4081)
!4101 = !DILocation(line: 1583, column: 21, scope: !4097)
!4102 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !4103)
!4103 = distinct !DILocation(line: 1584, column: 17, scope: !4081)
!4104 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !4103)
!4105 = !DILocation(line: 3719, column: 10, scope: !2251, inlinedAt: !4103)
!4106 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !4103)
!4107 = !DILocation(line: 3719, column: 13, scope: !2251, inlinedAt: !4103)
!4108 = !DILocation(line: 3723, column: 1, scope: !2242, inlinedAt: !4103)
!4109 = !DILocation(line: 3706, column: 33, scope: !1246, inlinedAt: !4110)
!4110 = distinct !DILocation(line: 1585, column: 17, scope: !4081)
!4111 = !DILocation(line: 3706, column: 40, scope: !1246, inlinedAt: !4110)
!4112 = !DILocation(line: 3707, column: 9, scope: !1246, inlinedAt: !4110)
!4113 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !4114)
!4114 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !4103)
!4115 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !4114)
!4116 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !4117)
!4117 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !4114)
!4118 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !4117)
!4119 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !4117)
!4120 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !4117)
!4121 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !4117)
!4122 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !4117)
!4123 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !4117)
!4124 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !4117)
!4125 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !4126)
!4126 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !4114)
!4127 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !4126)
!4128 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !4126)
!4129 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !4126)
!4130 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !4126)
!4131 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !4126)
!4132 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !4114)
!4133 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !4114)
!4134 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !4103)
!4135 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !4114)
!4136 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !4114)
!4137 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !4114)
!4138 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !4103)
!4139 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !4103)
!4140 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !4103)
!4141 = !DILocation(line: 3722, column: 5, scope: !2242, inlinedAt: !4103)
!4142 = !DILocation(line: 3707, column: 16, scope: !1255, inlinedAt: !4110)
!4143 = !DILocation(line: 3707, column: 9, scope: !1255, inlinedAt: !4110)
!4144 = !DILocation(line: 3707, column: 38, scope: !1255, inlinedAt: !4110)
!4145 = !DILocation(line: 3708, column: 5, scope: !1246, inlinedAt: !4110)
!4146 = !DILocation(line: 3709, column: 12, scope: !1246, inlinedAt: !4110)
!4147 = !DILocation(line: 3709, column: 5, scope: !1246, inlinedAt: !4110)
!4148 = !DILocation(line: 3709, column: 33, scope: !1246, inlinedAt: !4110)
!4149 = !DILocation(line: 3710, column: 5, scope: !1246, inlinedAt: !4110)
!4150 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4151)
!4151 = distinct !DILocation(line: 1586, column: 17, scope: !4081)
!4152 = !DILocation(line: 3711, column: 1, scope: !1246, inlinedAt: !4110)
!4153 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4151)
!4154 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4151)
!4155 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4151)
!4156 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4151)
!4157 = !DILocation(line: 1589, column: 13, scope: !4081)
!4158 = !DILocation(line: 1554, column: 37, scope: !4053)
!4159 = !DILocation(line: 1554, column: 5, scope: !4053)
!4160 = !DILocation(line: 1554, column: 19, scope: !4053)
!4161 = distinct !{!4161, !4048, !4162}
!4162 = !DILocation(line: 1591, column: 5, scope: !4047)
!4163 = !DILocation(line: 1596, column: 16, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1596, column: 9)
!4165 = !{!789, !709, i64 2984}
!4166 = !DILocation(line: 1596, column: 37, scope: !4164)
!4167 = !DILocation(line: 1596, column: 9, scope: !4014)
!4168 = !DILocation(line: 1606, column: 9, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 1606, column: 9)
!4170 = !DILocation(line: 1606, column: 19, scope: !4169)
!4171 = !DILocation(line: 1606, column: 33, scope: !4169)
!4172 = !DILocation(line: 1606, column: 42, scope: !4169)
!4173 = !DILocation(line: 1606, column: 9, scope: !4014)
!4174 = !DILocation(line: 1609, column: 38, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 1606, column: 48)
!4176 = !DILocation(line: 1607, column: 9, scope: !4175)
!4177 = !DILocation(line: 1610, column: 9, scope: !4175)
!4178 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4179)
!4179 = distinct !DILocation(line: 1611, column: 9, scope: !4175)
!4180 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4179)
!4181 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4179)
!4182 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4179)
!4183 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4179)
!4184 = !DILocation(line: 1614, column: 5, scope: !4175)
!4185 = !DILocation(line: 1614, column: 16, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 1614, column: 16)
!4187 = !DILocation(line: 1614, column: 16, scope: !4169)
!4188 = !DILocation(line: 1622, column: 14, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !3, line: 1622, column: 9)
!4190 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 1614, column: 35)
!4191 = !DILocation(line: 1622, column: 23, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 1622, column: 9)
!4193 = !DILocation(line: 1622, column: 9, scope: !4189)
!4194 = !DILocation(line: 1623, column: 27, scope: !4192)
!4195 = !DILocation(line: 1623, column: 13, scope: !4192)
!4196 = !DILocation(line: 1622, column: 45, scope: !4192)
!4197 = !DILocation(line: 1622, column: 9, scope: !4192)
!4198 = distinct !{!4198, !4193, !4199}
!4199 = !DILocation(line: 1623, column: 41, scope: !4189)
!4200 = !DILocation(line: 0, scope: !4043)
!4201 = !DILocation(line: 1625, column: 1, scope: !4014)
!4202 = !DILocation(line: 3627, column: 34, scope: !2263)
!4203 = !DILocation(line: 3627, column: 46, scope: !2263)
!4204 = !DILocation(line: 3628, column: 21, scope: !2263)
!4205 = !DILocation(line: 3628, column: 18, scope: !2263)
!4206 = !DILocation(line: 3628, column: 11, scope: !2263)
!4207 = !DILocation(line: 3629, column: 18, scope: !2263)
!4208 = !DILocation(line: 3629, column: 9, scope: !2263)
!4209 = !DILocation(line: 3630, column: 13, scope: !2263)
!4210 = !DILocation(line: 3630, column: 30, scope: !2263)
!4211 = !DILocation(line: 3630, column: 26, scope: !2263)
!4212 = !DILocation(line: 3630, column: 38, scope: !2263)
!4213 = !DILocation(line: 3630, column: 5, scope: !2263)
!4214 = distinct !DISubprogram(name: "clusterSetMaster", scope: !3, file: !3, line: 3933, type: !2374, isLocal: false, isDefinition: true, scopeLine: 3933, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4215)
!4215 = !{!4216}
!4216 = !DILocalVariable(name: "n", arg: 1, scope: !4214, file: !3, line: 3933, type: !378)
!4217 = !DILocation(line: 3933, column: 36, scope: !4214)
!4218 = !DILocation(line: 3934, column: 5, scope: !4214)
!4219 = !DILocation(line: 3935, column: 5, scope: !4214)
!4220 = !DILocation(line: 3937, column: 9, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 3937, column: 9)
!4222 = !DILocation(line: 3937, column: 9, scope: !4214)
!4223 = !DILocation(line: 3938, column: 23, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 3937, column: 31)
!4225 = !DILocation(line: 3939, column: 23, scope: !4224)
!4226 = !DILocation(line: 3742, column: 19, scope: !1818, inlinedAt: !4227)
!4227 = distinct !DILocation(line: 3940, column: 9, scope: !4224)
!4228 = !DILocation(line: 3742, column: 12, scope: !1818, inlinedAt: !4227)
!4229 = !DILocation(line: 3742, column: 5, scope: !1818, inlinedAt: !4227)
!4230 = !DILocation(line: 3744, column: 19, scope: !1818, inlinedAt: !4227)
!4231 = !DILocation(line: 3744, column: 12, scope: !1818, inlinedAt: !4227)
!4232 = !DILocation(line: 3744, column: 5, scope: !1818, inlinedAt: !4227)
!4233 = !DILocation(line: 3941, column: 5, scope: !4224)
!4234 = !DILocation(line: 3942, column: 21, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 3942, column: 13)
!4236 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 3941, column: 12)
!4237 = !DILocation(line: 3942, column: 13, scope: !4235)
!4238 = !DILocation(line: 3942, column: 13, scope: !4236)
!4239 = !DILocation(line: 820, column: 41, scope: !2387, inlinedAt: !4240)
!4240 = distinct !DILocation(line: 3943, column: 13, scope: !4235)
!4241 = !DILocation(line: 820, column: 62, scope: !2387, inlinedAt: !4240)
!4242 = !DILocation(line: 821, column: 9, scope: !2387, inlinedAt: !4240)
!4243 = !DILocation(line: 823, column: 10, scope: !2398, inlinedAt: !4240)
!4244 = !DILocation(line: 823, column: 29, scope: !2397, inlinedAt: !4240)
!4245 = !DILocation(line: 823, column: 19, scope: !2397, inlinedAt: !4240)
!4246 = !DILocation(line: 823, column: 5, scope: !2398, inlinedAt: !4240)
!4247 = !DILocation(line: 824, column: 13, scope: !2395, inlinedAt: !4240)
!4248 = !DILocation(line: 824, column: 31, scope: !2395, inlinedAt: !4240)
!4249 = !DILocation(line: 0, scope: !2397, inlinedAt: !4240)
!4250 = !DILocation(line: 824, column: 13, scope: !2396, inlinedAt: !4240)
!4251 = !DILocation(line: 825, column: 23, scope: !2393, inlinedAt: !4240)
!4252 = !DILocation(line: 825, column: 17, scope: !2394, inlinedAt: !4240)
!4253 = !DILocation(line: 826, column: 64, scope: !2392, inlinedAt: !4240)
!4254 = !DILocation(line: 826, column: 21, scope: !2392, inlinedAt: !4240)
!4255 = !DILocation(line: 827, column: 25, scope: !2392, inlinedAt: !4240)
!4256 = !DILocation(line: 827, column: 56, scope: !2392, inlinedAt: !4240)
!4257 = !DILocation(line: 827, column: 42, scope: !2392, inlinedAt: !4240)
!4258 = !DILocation(line: 828, column: 52, scope: !2392, inlinedAt: !4240)
!4259 = !DILocation(line: 828, column: 50, scope: !2392, inlinedAt: !4240)
!4260 = !DILocation(line: 827, column: 17, scope: !2392, inlinedAt: !4240)
!4261 = !DILocation(line: 829, column: 13, scope: !2392, inlinedAt: !4240)
!4262 = !DILocation(line: 830, column: 30, scope: !2394, inlinedAt: !4240)
!4263 = !DILocation(line: 831, column: 35, scope: !2425, inlinedAt: !4240)
!4264 = !DILocation(line: 831, column: 17, scope: !2394, inlinedAt: !4240)
!4265 = !DILocation(line: 832, column: 25, scope: !2425, inlinedAt: !4240)
!4266 = !DILocation(line: 832, column: 31, scope: !2425, inlinedAt: !4240)
!4267 = !DILocation(line: 832, column: 17, scope: !2425, inlinedAt: !4240)
!4268 = !DILocation(line: 823, column: 5, scope: !2397, inlinedAt: !4240)
!4269 = !DILocation(line: 0, scope: !4235)
!4270 = !DILocation(line: 3943, column: 13, scope: !4235)
!4271 = !DILocation(line: 0, scope: !4224)
!4272 = !DILocation(line: 3945, column: 5, scope: !4214)
!4273 = !DILocation(line: 3945, column: 13, scope: !4214)
!4274 = !DILocation(line: 3945, column: 21, scope: !4214)
!4275 = !DILocation(line: 839, column: 38, scope: !1027, inlinedAt: !4276)
!4276 = distinct !DILocation(line: 3946, column: 5, scope: !4214)
!4277 = !DILocation(line: 839, column: 59, scope: !1027, inlinedAt: !4276)
!4278 = !DILocation(line: 840, column: 9, scope: !1027, inlinedAt: !4276)
!4279 = !DILocation(line: 843, column: 10, scope: !1038, inlinedAt: !4276)
!4280 = !DILocation(line: 843, column: 29, scope: !1040, inlinedAt: !4276)
!4281 = !DILocation(line: 843, column: 19, scope: !1040, inlinedAt: !4276)
!4282 = !DILocation(line: 0, scope: !1027, inlinedAt: !4276)
!4283 = !DILocation(line: 843, column: 5, scope: !1038, inlinedAt: !4276)
!4284 = !DILocation(line: 844, column: 13, scope: !1047, inlinedAt: !4276)
!4285 = !DILocation(line: 844, column: 31, scope: !1047, inlinedAt: !4276)
!4286 = !DILocation(line: 844, column: 13, scope: !1040, inlinedAt: !4276)
!4287 = !DILocation(line: 843, column: 41, scope: !1040, inlinedAt: !4276)
!4288 = !DILocation(line: 843, column: 5, scope: !1040, inlinedAt: !4276)
!4289 = !DILocation(line: 845, column: 31, scope: !1027, inlinedAt: !4276)
!4290 = !DILocation(line: 846, column: 48, scope: !1027, inlinedAt: !4276)
!4291 = !DILocation(line: 846, column: 30, scope: !1027, inlinedAt: !4276)
!4292 = !DILocation(line: 846, column: 29, scope: !1027, inlinedAt: !4276)
!4293 = !DILocation(line: 845, column: 22, scope: !1027, inlinedAt: !4276)
!4294 = !DILocation(line: 845, column: 20, scope: !1027, inlinedAt: !4276)
!4295 = !DILocation(line: 847, column: 28, scope: !1027, inlinedAt: !4276)
!4296 = !DILocation(line: 847, column: 5, scope: !1027, inlinedAt: !4276)
!4297 = !DILocation(line: 847, column: 39, scope: !1027, inlinedAt: !4276)
!4298 = !DILocation(line: 848, column: 22, scope: !1027, inlinedAt: !4276)
!4299 = !DILocation(line: 849, column: 13, scope: !1027, inlinedAt: !4276)
!4300 = !DILocation(line: 849, column: 19, scope: !1027, inlinedAt: !4276)
!4301 = !DILocation(line: 850, column: 5, scope: !1027, inlinedAt: !4276)
!4302 = !DILocation(line: 0, scope: !4214)
!4303 = !DILocation(line: 851, column: 1, scope: !1027, inlinedAt: !4276)
!4304 = !DILocation(line: 3947, column: 26, scope: !4214)
!4305 = !DILocation(line: 3947, column: 36, scope: !4214)
!4306 = !DILocation(line: 3947, column: 5, scope: !4214)
!4307 = !DILocation(line: 3265, column: 16, scope: !1983, inlinedAt: !4308)
!4308 = distinct !DILocation(line: 3948, column: 5, scope: !4214)
!4309 = !DILocation(line: 3265, column: 25, scope: !1983, inlinedAt: !4308)
!4310 = !DILocation(line: 3265, column: 9, scope: !1983, inlinedAt: !4308)
!4311 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !4308)
!4312 = !DILocation(line: 3265, column: 35, scope: !1983, inlinedAt: !4308)
!4313 = !DILocation(line: 3265, column: 9, scope: !1984, inlinedAt: !4308)
!4314 = !DILocation(line: 3266, column: 39, scope: !2175, inlinedAt: !4308)
!4315 = !DILocation(line: 3267, column: 9, scope: !2175, inlinedAt: !4308)
!4316 = !DILocation(line: 3268, column: 5, scope: !2175, inlinedAt: !4308)
!4317 = !DILocation(line: 3269, column: 12, scope: !1984, inlinedAt: !4308)
!4318 = !DILocation(line: 3269, column: 21, scope: !1984, inlinedAt: !4308)
!4319 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !4308)
!4320 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !4308)
!4321 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !4308)
!4322 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !4308)
!4323 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !4308)
!4324 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !4308)
!4325 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !4308)
!4326 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !4308)
!4327 = !DILocation(line: 3949, column: 1, scope: !4214)
!4328 = distinct !DISubprogram(name: "clusterProcessPacket", scope: !3, file: !3, line: 1636, type: !4329, isLocal: false, isDefinition: true, scopeLine: 1636, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4331)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!177, !179}
!4331 = !{!4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4343, !4344, !4347, !4350, !4353, !4356, !4359, !4364, !4367, !4372, !4377, !4378, !4379, !4382, !4385, !4397, !4398, !4399, !4400, !4406, !4407, !4410, !4411, !4412}
!4332 = !DILocalVariable(name: "link", arg: 1, scope: !4328, file: !3, line: 1636, type: !179)
!4333 = !DILocalVariable(name: "hdr", scope: !4328, file: !3, line: 1637, type: !92)
!4334 = !DILocalVariable(name: "totlen", scope: !4328, file: !3, line: 1638, type: !43)
!4335 = !DILocalVariable(name: "type", scope: !4328, file: !3, line: 1639, type: !33)
!4336 = !DILocalVariable(name: "flags", scope: !4328, file: !3, line: 1655, type: !33)
!4337 = !DILocalVariable(name: "senderCurrentEpoch", scope: !4328, file: !3, line: 1656, type: !104)
!4338 = !DILocalVariable(name: "senderConfigEpoch", scope: !4328, file: !3, line: 1656, type: !104)
!4339 = !DILocalVariable(name: "sender", scope: !4328, file: !3, line: 1657, type: !378)
!4340 = !DILocalVariable(name: "count", scope: !4341, file: !3, line: 1662, type: !33)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 1661, column: 5)
!4342 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1659, column: 9)
!4343 = !DILocalVariable(name: "explen", scope: !4341, file: !3, line: 1663, type: !43)
!4344 = !DILocalVariable(name: "explen", scope: !4345, file: !3, line: 1669, type: !43)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1668, column: 46)
!4346 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 1668, column: 16)
!4347 = !DILocalVariable(name: "explen", scope: !4348, file: !3, line: 1674, type: !43)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1673, column: 49)
!4349 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1673, column: 16)
!4350 = !DILocalVariable(name: "explen", scope: !4351, file: !3, line: 1685, type: !43)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 1684, column: 5)
!4352 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 1681, column: 16)
!4353 = !DILocalVariable(name: "explen", scope: !4354, file: !3, line: 1689, type: !43)
!4354 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 1688, column: 48)
!4355 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 1688, column: 16)
!4356 = !DILocalVariable(name: "explen", scope: !4357, file: !3, line: 1694, type: !43)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !3, line: 1693, column: 48)
!4358 = distinct !DILexicalBlock(scope: !4355, file: !3, line: 1693, column: 16)
!4359 = !DILocalVariable(name: "ip", scope: !4360, file: !3, line: 1752, type: !85)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 1751, column: 9)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1749, column: 13)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1735, column: 71)
!4363 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1735, column: 9)
!4364 = !DILocalVariable(name: "node", scope: !4365, file: !3, line: 1769, type: !378)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 1768, column: 54)
!4366 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1768, column: 13)
!4367 = !DILocalVariable(name: "nofailover", scope: !4368, file: !3, line: 1850, type: !177)
!4368 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 1849, column: 21)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1849, column: 13)
!4370 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1792, column: 5)
!4371 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1790, column: 9)
!4372 = !DILocalVariable(name: "master", scope: !4373, file: !3, line: 1893, type: !378)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 1891, column: 20)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1886, column: 17)
!4375 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 1885, column: 21)
!4376 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1885, column: 13)
!4377 = !DILocalVariable(name: "sender_master", scope: !4370, file: !3, line: 1929, type: !378)
!4378 = !DILocalVariable(name: "dirty_slots", scope: !4370, file: !3, line: 1930, type: !177)
!4379 = !DILocalVariable(name: "j", scope: !4380, file: !3, line: 1965, type: !177)
!4380 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 1964, column: 36)
!4381 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1964, column: 13)
!4382 = !DILocalVariable(name: "failing", scope: !4383, file: !3, line: 2002, type: !378)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 2001, column: 46)
!4384 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 2001, column: 16)
!4385 = !DILocalVariable(name: "channel", scope: !4386, file: !3, line: 2024, type: !4388)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 2023, column: 49)
!4387 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 2023, column: 16)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = !DIDerivedType(tag: DW_TAG_typedef, name: "robj", file: !185, line: 622, baseType: !4390)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisObject", file: !185, line: 614, size: 128, elements: !4391)
!4391 = !{!4392, !4393, !4394, !4395, !4396}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4390, file: !185, line: 615, baseType: !45, size: 4, flags: DIFlagBitField, extraData: i64 0)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !4390, file: !185, line: 616, baseType: !45, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4390, file: !185, line: 617, baseType: !45, size: 24, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4390, file: !185, line: 620, baseType: !177, size: 32, offset: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4390, file: !185, line: 621, baseType: !6, size: 64, offset: 64)
!4397 = !DILocalVariable(name: "message", scope: !4386, file: !3, line: 2024, type: !4388)
!4398 = !DILocalVariable(name: "channel_len", scope: !4386, file: !3, line: 2025, type: !43)
!4399 = !DILocalVariable(name: "message_len", scope: !4386, file: !3, line: 2025, type: !43)
!4400 = !DILocalVariable(name: "n", scope: !4401, file: !3, line: 2072, type: !378)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 2071, column: 48)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 2071, column: 16)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 2059, column: 16)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 2046, column: 16)
!4405 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 2043, column: 16)
!4406 = !DILocalVariable(name: "reportedConfigEpoch", scope: !4401, file: !3, line: 2073, type: !104)
!4407 = !DILocalVariable(name: "module_id", scope: !4408, file: !3, line: 2097, type: !104)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2093, column: 48)
!4409 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 2093, column: 16)
!4410 = !DILocalVariable(name: "len", scope: !4408, file: !3, line: 2098, type: !43)
!4411 = !DILocalVariable(name: "type", scope: !4408, file: !3, line: 2099, type: !23)
!4412 = !DILocalVariable(name: "payload", scope: !4408, file: !3, line: 2100, type: !246)
!4413 = !DILocation(line: 1636, column: 39, scope: !4328)
!4414 = !DILocation(line: 1637, column: 43, scope: !4328)
!4415 = !DILocation(line: 1637, column: 17, scope: !4328)
!4416 = !DILocation(line: 1638, column: 23, scope: !4328)
!4417 = !DILocation(line: 1638, column: 14, scope: !4328)
!4418 = !DILocation(line: 1639, column: 21, scope: !4328)
!4419 = !{!2759, !728, i64 12}
!4420 = !DILocation(line: 1639, column: 14, scope: !4328)
!4421 = !DILocation(line: 1641, column: 9, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1641, column: 9)
!4423 = !DILocation(line: 1641, column: 14, scope: !4422)
!4424 = !DILocation(line: 1641, column: 9, scope: !4328)
!4425 = !DILocation(line: 1642, column: 16, scope: !4422)
!4426 = !DILocation(line: 1642, column: 9, scope: !4422)
!4427 = !DILocation(line: 1642, column: 58, scope: !4422)
!4428 = !DILocation(line: 1644, column: 15, scope: !4328)
!4429 = !DILocation(line: 1643, column: 5, scope: !4328)
!4430 = !DILocation(line: 1647, column: 16, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1647, column: 9)
!4432 = !DILocation(line: 1647, column: 9, scope: !4328)
!4433 = !DILocation(line: 1648, column: 31, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1648, column: 9)
!4435 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !4436)
!4436 = distinct !DILocation(line: 1648, column: 18, scope: !4434)
!4437 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !4436)
!4438 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !4436)
!4439 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !4436)
!4440 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !4436)
!4441 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !4436)
!4442 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !4436)
!4443 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !4436)
!4444 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !4436)
!4445 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !4436)
!4446 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !4436)
!4447 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !4436)
!4448 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !4436)
!4449 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !4436)
!4450 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !4436)
!4451 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !4436)
!4452 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !4436)
!4453 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !4436)
!4454 = !DILocation(line: 0, scope: !1496, inlinedAt: !4436)
!4455 = !DILocation(line: 0, scope: !4434)
!4456 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !4436)
!4457 = !DILocation(line: 1648, column: 16, scope: !4434)
!4458 = !DILocation(line: 1648, column: 9, scope: !4328)
!4459 = !DILocation(line: 1650, column: 9, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1650, column: 9)
!4461 = !{!2759, !728, i64 8}
!4462 = !DILocation(line: 1650, column: 25, scope: !4460)
!4463 = !DILocation(line: 1650, column: 9, scope: !4328)
!4464 = !DILocation(line: 1655, column: 22, scope: !4328)
!4465 = !{!2759, !728, i64 2250}
!4466 = !DILocation(line: 1655, column: 14, scope: !4328)
!4467 = !DILocation(line: 1656, column: 14, scope: !4328)
!4468 = !DILocation(line: 1656, column: 38, scope: !4328)
!4469 = !DILocation(line: 1659, column: 14, scope: !4342)
!4470 = !DILocation(line: 1659, column: 38, scope: !4342)
!4471 = !DILocation(line: 1659, column: 46, scope: !4342)
!4472 = !DILocation(line: 1659, column: 70, scope: !4342)
!4473 = !DILocation(line: 1660, column: 14, scope: !4342)
!4474 = !DILocation(line: 1659, column: 9, scope: !4328)
!4475 = !DILocation(line: 1662, column: 26, scope: !4341)
!4476 = !DILocation(line: 1662, column: 18, scope: !4341)
!4477 = !DILocation(line: 1663, column: 18, scope: !4341)
!4478 = !DILocation(line: 1666, column: 49, scope: !4341)
!4479 = !DILocation(line: 1666, column: 48, scope: !4341)
!4480 = !DILocation(line: 1666, column: 16, scope: !4341)
!4481 = !DILocation(line: 1667, column: 20, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1667, column: 13)
!4483 = !DILocation(line: 1667, column: 13, scope: !4341)
!4484 = !DILocation(line: 0, scope: !4482)
!4485 = !DILocation(line: 1668, column: 21, scope: !4346)
!4486 = !DILocation(line: 1668, column: 16, scope: !4342)
!4487 = !DILocation(line: 1669, column: 18, scope: !4345)
!4488 = !DILocation(line: 1672, column: 20, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 1672, column: 13)
!4490 = !DILocation(line: 1672, column: 13, scope: !4345)
!4491 = !DILocation(line: 0, scope: !4489)
!4492 = !DILocation(line: 1673, column: 21, scope: !4349)
!4493 = !DILocation(line: 1673, column: 16, scope: !4346)
!4494 = !DILocation(line: 1674, column: 18, scope: !4348)
!4495 = !DILocation(line: 1678, column: 17, scope: !4348)
!4496 = !DILocation(line: 1679, column: 17, scope: !4348)
!4497 = !DILocation(line: 1678, column: 58, scope: !4348)
!4498 = !DILocation(line: 1676, column: 16, scope: !4348)
!4499 = !DILocation(line: 1680, column: 20, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 1680, column: 13)
!4501 = !DILocation(line: 1680, column: 13, scope: !4348)
!4502 = !DILocation(line: 0, scope: !4500)
!4503 = !DILocation(line: 1681, column: 21, scope: !4352)
!4504 = !DILocation(line: 1681, column: 62, scope: !4352)
!4505 = !DILocation(line: 1682, column: 21, scope: !4352)
!4506 = !DILocation(line: 1682, column: 58, scope: !4352)
!4507 = !DILocation(line: 1683, column: 21, scope: !4352)
!4508 = !DILocation(line: 1681, column: 16, scope: !4349)
!4509 = !DILocation(line: 1685, column: 18, scope: !4351)
!4510 = !DILocation(line: 1687, column: 20, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 1687, column: 13)
!4512 = !DILocation(line: 1687, column: 13, scope: !4351)
!4513 = !DILocation(line: 0, scope: !4511)
!4514 = !DILocation(line: 1688, column: 21, scope: !4355)
!4515 = !DILocation(line: 1688, column: 16, scope: !4352)
!4516 = !DILocation(line: 1689, column: 18, scope: !4354)
!4517 = !DILocation(line: 1692, column: 20, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 1692, column: 13)
!4519 = !DILocation(line: 1692, column: 13, scope: !4354)
!4520 = !DILocation(line: 0, scope: !4518)
!4521 = !DILocation(line: 1693, column: 21, scope: !4358)
!4522 = !DILocation(line: 1693, column: 16, scope: !4355)
!4523 = !DILocation(line: 1694, column: 18, scope: !4357)
!4524 = !DILocation(line: 1697, column: 21, scope: !4357)
!4525 = !DILocation(line: 1696, column: 16, scope: !4357)
!4526 = !DILocation(line: 1698, column: 20, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 1698, column: 13)
!4528 = !DILocation(line: 1698, column: 13, scope: !4357)
!4529 = !DILocation(line: 0, scope: !4527)
!4530 = !DILocation(line: 1702, column: 32, scope: !4328)
!4531 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !4532)
!4532 = distinct !DILocation(line: 1702, column: 14, scope: !4328)
!4533 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !4532)
!4534 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !4532)
!4535 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !4532)
!4536 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !4532)
!4537 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !4532)
!4538 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !4532)
!4539 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !4532)
!4540 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !4532)
!4541 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !4532)
!4542 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !4532)
!4543 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !4532)
!4544 = !DILocation(line: 1657, column: 18, scope: !4328)
!4545 = !DILocation(line: 1703, column: 16, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1703, column: 9)
!4547 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !4532)
!4548 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !4532)
!4549 = !DILocation(line: 1703, column: 9, scope: !4546)
!4550 = !DILocation(line: 1703, column: 20, scope: !4546)
!4551 = !DILocation(line: 1703, column: 9, scope: !4328)
!4552 = !DILocation(line: 1705, column: 30, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 1703, column: 45)
!4554 = !{!2759, !729, i64 16}
!4555 = !DILocation(line: 1706, column: 29, scope: !4553)
!4556 = !{!2759, !729, i64 24}
!4557 = !DILocation(line: 1707, column: 41, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 1707, column: 13)
!4559 = !DILocation(line: 1707, column: 50, scope: !4558)
!4560 = !DILocation(line: 1707, column: 32, scope: !4558)
!4561 = !DILocation(line: 1707, column: 13, scope: !4553)
!4562 = !DILocation(line: 1708, column: 42, scope: !4558)
!4563 = !DILocation(line: 1708, column: 13, scope: !4558)
!4564 = !DILocation(line: 1710, column: 41, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 1710, column: 13)
!4566 = !DILocation(line: 1710, column: 31, scope: !4565)
!4567 = !DILocation(line: 1710, column: 13, scope: !4553)
!4568 = !DILocation(line: 1711, column: 33, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4565, file: !3, line: 1710, column: 54)
!4570 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4571)
!4571 = distinct !DILocation(line: 1712, column: 13, scope: !4569)
!4572 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4571)
!4573 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4571)
!4574 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4571)
!4575 = !DILocation(line: 1714, column: 9, scope: !4569)
!4576 = !DILocation(line: 1716, column: 31, scope: !4553)
!4577 = !{!2759, !729, i64 32}
!4578 = !DILocation(line: 1716, column: 17, scope: !4553)
!4579 = !DILocation(line: 1716, column: 29, scope: !4553)
!4580 = !DILocation(line: 1717, column: 36, scope: !4553)
!4581 = !DILocation(line: 1717, column: 17, scope: !4553)
!4582 = !DILocation(line: 1717, column: 34, scope: !4553)
!4583 = !DILocation(line: 1720, column: 20, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 1720, column: 13)
!4585 = !DILocation(line: 1720, column: 29, scope: !4584)
!4586 = !DILocation(line: 1720, column: 13, scope: !4584)
!4587 = !DILocation(line: 1720, column: 36, scope: !4584)
!4588 = !DILocation(line: 1721, column: 13, scope: !4584)
!4589 = !DILocation(line: 1721, column: 33, scope: !4584)
!4590 = !DILocation(line: 1722, column: 21, scope: !4584)
!4591 = !DILocation(line: 1722, column: 29, scope: !4584)
!4592 = !DILocation(line: 1722, column: 39, scope: !4584)
!4593 = !DILocation(line: 1723, column: 13, scope: !4584)
!4594 = !DILocation(line: 1723, column: 28, scope: !4584)
!4595 = !DILocation(line: 1723, column: 54, scope: !4584)
!4596 = !DILocation(line: 1724, column: 29, scope: !4584)
!4597 = !DILocation(line: 1724, column: 46, scope: !4584)
!4598 = !DILocation(line: 1720, column: 13, scope: !4553)
!4599 = !DILocation(line: 1726, column: 56, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 1725, column: 9)
!4601 = !DILocation(line: 1726, column: 46, scope: !4600)
!4602 = !DILocation(line: 1727, column: 13, scope: !4600)
!4603 = !DILocation(line: 1731, column: 9, scope: !4600)
!4604 = !DILocation(line: 0, scope: !4328)
!4605 = !DILocation(line: 1735, column: 38, scope: !4363)
!4606 = !DILocation(line: 1735, column: 46, scope: !4363)
!4607 = !DILocation(line: 1735, column: 9, scope: !4328)
!4608 = !DILocation(line: 1790, column: 38, scope: !4371)
!4609 = !DILocation(line: 1736, column: 69, scope: !4362)
!4610 = !DILocation(line: 1736, column: 9, scope: !4362)
!4611 = !DILocation(line: 1749, column: 19, scope: !4361)
!4612 = !DILocation(line: 1749, column: 43, scope: !4361)
!4613 = !DILocation(line: 1749, column: 46, scope: !4361)
!4614 = !DILocation(line: 1749, column: 60, scope: !4361)
!4615 = !DILocation(line: 1750, column: 20, scope: !4361)
!4616 = !DILocation(line: 1750, column: 40, scope: !4361)
!4617 = !DILocation(line: 1749, column: 69, scope: !4361)
!4618 = !{!789, !761, i64 2968}
!4619 = !DILocation(line: 1749, column: 13, scope: !4362)
!4620 = !DILocation(line: 1752, column: 13, scope: !4360)
!4621 = !DILocation(line: 1752, column: 18, scope: !4360)
!4622 = !DILocation(line: 1754, column: 36, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 1754, column: 17)
!4624 = !DILocation(line: 1754, column: 17, scope: !4623)
!4625 = !DILocation(line: 1754, column: 59, scope: !4623)
!4626 = !DILocation(line: 1754, column: 65, scope: !4623)
!4627 = !DILocation(line: 1755, column: 27, scope: !4623)
!4628 = !DILocation(line: 1755, column: 17, scope: !4623)
!4629 = !DILocation(line: 1754, column: 17, scope: !4360)
!4630 = !DILocation(line: 1757, column: 24, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 1756, column: 13)
!4632 = !DILocation(line: 1757, column: 17, scope: !4631)
!4633 = !DILocation(line: 1759, column: 21, scope: !4631)
!4634 = !DILocation(line: 1758, column: 17, scope: !4631)
!4635 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4636)
!4636 = distinct !DILocation(line: 1760, column: 17, scope: !4631)
!4637 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4636)
!4638 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4636)
!4639 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4636)
!4640 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4636)
!4641 = !DILocation(line: 1761, column: 13, scope: !4631)
!4642 = !DILocation(line: 1762, column: 9, scope: !4361)
!4643 = !DILocation(line: 1762, column: 9, scope: !4360)
!4644 = !DILocation(line: 1768, column: 21, scope: !4366)
!4645 = !DILocation(line: 0, scope: !4362)
!4646 = !DILocation(line: 1768, column: 13, scope: !4362)
!4647 = !DILocation(line: 695, column: 38, scope: !1136, inlinedAt: !4648)
!4648 = distinct !DILocation(line: 1771, column: 20, scope: !4365)
!4649 = !DILocation(line: 695, column: 52, scope: !1136, inlinedAt: !4648)
!4650 = !DILocation(line: 696, column: 25, scope: !1136, inlinedAt: !4648)
!4651 = !DILocation(line: 696, column: 18, scope: !1136, inlinedAt: !4648)
!4652 = !DILocation(line: 0, scope: !1149, inlinedAt: !4648)
!4653 = !DILocation(line: 698, column: 9, scope: !1136, inlinedAt: !4648)
!4654 = !DILocation(line: 701, column: 9, scope: !1149, inlinedAt: !4648)
!4655 = !DILocation(line: 702, column: 19, scope: !1136, inlinedAt: !4648)
!4656 = !DILocation(line: 702, column: 11, scope: !1136, inlinedAt: !4648)
!4657 = !DILocation(line: 702, column: 17, scope: !1136, inlinedAt: !4648)
!4658 = !DILocation(line: 703, column: 11, scope: !1136, inlinedAt: !4648)
!4659 = !DILocation(line: 703, column: 23, scope: !1136, inlinedAt: !4648)
!4660 = !DILocation(line: 704, column: 11, scope: !1136, inlinedAt: !4648)
!4661 = !DILocation(line: 704, column: 17, scope: !1136, inlinedAt: !4648)
!4662 = !DILocation(line: 705, column: 18, scope: !1136, inlinedAt: !4648)
!4663 = !DILocation(line: 705, column: 5, scope: !1136, inlinedAt: !4648)
!4664 = !DILocation(line: 706, column: 11, scope: !1136, inlinedAt: !4648)
!4665 = !DILocation(line: 706, column: 20, scope: !1136, inlinedAt: !4648)
!4666 = !DILocation(line: 707, column: 11, scope: !1136, inlinedAt: !4648)
!4667 = !DILocation(line: 707, column: 21, scope: !1136, inlinedAt: !4648)
!4668 = !DILocation(line: 708, column: 11, scope: !1136, inlinedAt: !4648)
!4669 = !DILocation(line: 708, column: 18, scope: !1136, inlinedAt: !4648)
!4670 = !DILocation(line: 709, column: 11, scope: !1136, inlinedAt: !4648)
!4671 = !DILocation(line: 709, column: 19, scope: !1136, inlinedAt: !4648)
!4672 = !DILocation(line: 710, column: 11, scope: !1136, inlinedAt: !4648)
!4673 = !DILocation(line: 710, column: 21, scope: !1136, inlinedAt: !4648)
!4674 = !DILocation(line: 711, column: 11, scope: !1136, inlinedAt: !4648)
!4675 = !DILocation(line: 711, column: 21, scope: !1136, inlinedAt: !4648)
!4676 = !DILocation(line: 712, column: 11, scope: !1136, inlinedAt: !4648)
!4677 = !DILocation(line: 712, column: 16, scope: !1136, inlinedAt: !4648)
!4678 = !DILocation(line: 713, column: 18, scope: !1136, inlinedAt: !4648)
!4679 = !DILocation(line: 713, column: 5, scope: !1136, inlinedAt: !4648)
!4680 = !DILocation(line: 714, column: 11, scope: !1136, inlinedAt: !4648)
!4681 = !DILocation(line: 714, column: 16, scope: !1136, inlinedAt: !4648)
!4682 = !DILocation(line: 715, column: 11, scope: !1136, inlinedAt: !4648)
!4683 = !DILocation(line: 715, column: 17, scope: !1136, inlinedAt: !4648)
!4684 = !DILocation(line: 716, column: 26, scope: !1136, inlinedAt: !4648)
!4685 = !DILocation(line: 716, column: 11, scope: !1136, inlinedAt: !4648)
!4686 = !DILocation(line: 716, column: 24, scope: !1136, inlinedAt: !4648)
!4687 = !DILocation(line: 717, column: 11, scope: !1136, inlinedAt: !4648)
!4688 = !DILocation(line: 717, column: 22, scope: !1136, inlinedAt: !4648)
!4689 = !DILocation(line: 718, column: 11, scope: !1136, inlinedAt: !4648)
!4690 = !DILocation(line: 718, column: 25, scope: !1136, inlinedAt: !4648)
!4691 = !DILocation(line: 719, column: 11, scope: !1136, inlinedAt: !4648)
!4692 = !DILocation(line: 719, column: 28, scope: !1136, inlinedAt: !4648)
!4693 = !DILocation(line: 720, column: 11, scope: !1136, inlinedAt: !4648)
!4694 = !DILocation(line: 720, column: 23, scope: !1136, inlinedAt: !4648)
!4695 = !DILocation(line: 721, column: 5, scope: !1136, inlinedAt: !4648)
!4696 = !DILocation(line: 722, column: 5, scope: !1136, inlinedAt: !4648)
!4697 = !DILocation(line: 1769, column: 26, scope: !4365)
!4698 = !DILocation(line: 1772, column: 41, scope: !4365)
!4699 = !DILocation(line: 1445, column: 26, scope: !3915, inlinedAt: !4700)
!4700 = distinct !DILocation(line: 1772, column: 13, scope: !4365)
!4701 = !DILocation(line: 1445, column: 44, scope: !3915, inlinedAt: !4700)
!4702 = !DILocation(line: 1445, column: 56, scope: !3915, inlinedAt: !4700)
!4703 = !DILocation(line: 1446, column: 9, scope: !3926, inlinedAt: !4700)
!4704 = !DILocation(line: 1446, column: 25, scope: !3926, inlinedAt: !4700)
!4705 = !DILocation(line: 1446, column: 9, scope: !3915, inlinedAt: !4700)
!4706 = !DILocation(line: 1447, column: 9, scope: !3930, inlinedAt: !4700)
!4707 = !DILocation(line: 1448, column: 9, scope: !3930, inlinedAt: !4700)
!4708 = !DILocation(line: 1448, column: 31, scope: !3930, inlinedAt: !4700)
!4709 = !DILocation(line: 1449, column: 5, scope: !3930, inlinedAt: !4700)
!4710 = !DILocation(line: 1450, column: 32, scope: !3935, inlinedAt: !4700)
!4711 = !DILocation(line: 1450, column: 9, scope: !3935, inlinedAt: !4700)
!4712 = !DILocation(line: 1782, column: 21, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 1782, column: 13)
!4714 = !DILocation(line: 1452, column: 1, scope: !3915, inlinedAt: !4700)
!4715 = !DILocation(line: 1773, column: 26, scope: !4365)
!4716 = !DILocation(line: 1773, column: 24, scope: !4365)
!4717 = !DILocation(line: 1774, column: 27, scope: !4365)
!4718 = !DILocation(line: 1774, column: 25, scope: !4365)
!4719 = !DILocation(line: 887, column: 33, scope: !856, inlinedAt: !4720)
!4720 = distinct !DILocation(line: 1775, column: 13, scope: !4365)
!4721 = !DILocation(line: 890, column: 29, scope: !856, inlinedAt: !4720)
!4722 = !DILocation(line: 890, column: 38, scope: !856, inlinedAt: !4720)
!4723 = !DILocation(line: 891, column: 13, scope: !856, inlinedAt: !4720)
!4724 = !DILocation(line: 890, column: 14, scope: !856, inlinedAt: !4720)
!4725 = !DILocation(line: 888, column: 9, scope: !856, inlinedAt: !4720)
!4726 = !DILocation(line: 892, column: 5, scope: !856, inlinedAt: !4720)
!4727 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4728)
!4728 = distinct !DILocation(line: 1776, column: 13, scope: !4365)
!4729 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4728)
!4730 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4728)
!4731 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4728)
!4732 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4728)
!4733 = !DILocation(line: 1777, column: 9, scope: !4365)
!4734 = !DILocation(line: 1782, column: 13, scope: !4362)
!4735 = !DILocation(line: 1783, column: 13, scope: !4713)
!4736 = !DILocation(line: 1786, column: 9, scope: !4362)
!4737 = !DILocation(line: 1787, column: 5, scope: !4362)
!4738 = !DILocation(line: 1790, column: 46, scope: !4371)
!4739 = !DILocation(line: 1790, column: 70, scope: !4371)
!4740 = !DILocation(line: 1791, column: 14, scope: !4371)
!4741 = !DILocation(line: 1790, column: 9, scope: !4328)
!4742 = !DILocation(line: 1794, column: 13, scope: !4370)
!4743 = !DILocation(line: 1795, column: 26, scope: !4370)
!4744 = !DILocation(line: 1793, column: 9, scope: !4370)
!4745 = !DILocation(line: 1796, column: 19, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1796, column: 13)
!4747 = !DILocation(line: 1796, column: 13, scope: !4746)
!4748 = !DILocation(line: 1796, column: 13, scope: !4370)
!4749 = !DILocation(line: 1797, column: 17, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 1797, column: 17)
!4751 = distinct !DILexicalBlock(scope: !4746, file: !3, line: 1796, column: 25)
!4752 = !DILocation(line: 1797, column: 17, scope: !4751)
!4753 = !DILocation(line: 1800, column: 21, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 1797, column: 46)
!4755 = !DILocation(line: 1803, column: 60, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 1800, column: 29)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 1800, column: 21)
!4758 = !DILocation(line: 1801, column: 21, scope: !4756)
!4759 = !DILocation(line: 1804, column: 25, scope: !4760)
!4760 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 1804, column: 25)
!4761 = !DILocation(line: 1804, column: 25, scope: !4756)
!4762 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4763)
!4763 = distinct !DILocation(line: 1806, column: 25, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4760, file: !3, line: 1805, column: 21)
!4765 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4763)
!4766 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4763)
!4767 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4763)
!4768 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4763)
!4769 = !DILocation(line: 1808, column: 21, scope: !4764)
!4770 = !DILocation(line: 1811, column: 42, scope: !4756)
!4771 = !DILocation(line: 1811, column: 21, scope: !4756)
!4772 = !DILocation(line: 1812, column: 21, scope: !4756)
!4773 = !DILocation(line: 1817, column: 17, scope: !4754)
!4774 = !DILocation(line: 1819, column: 27, scope: !4754)
!4775 = !DILocation(line: 1819, column: 21, scope: !4754)
!4776 = !DILocation(line: 1818, column: 17, scope: !4754)
!4777 = !DILocation(line: 1820, column: 23, scope: !4754)
!4778 = !DILocation(line: 1820, column: 29, scope: !4754)
!4779 = !DILocation(line: 1820, column: 35, scope: !4754)
!4780 = !DILocation(line: 1821, column: 43, scope: !4754)
!4781 = !DILocation(line: 1821, column: 35, scope: !4754)
!4782 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4783)
!4783 = distinct !DILocation(line: 1822, column: 17, scope: !4754)
!4784 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4783)
!4785 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4783)
!4786 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4783)
!4787 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4783)
!4788 = !DILocation(line: 1823, column: 13, scope: !4754)
!4789 = !DILocation(line: 1849, column: 13, scope: !4370)
!4790 = !DILocation(line: 1823, column: 31, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 1823, column: 24)
!4792 = !DILocation(line: 1823, column: 24, scope: !4791)
!4793 = !DILocation(line: 1824, column: 42, scope: !4791)
!4794 = !DILocation(line: 1823, column: 24, scope: !4750)
!4795 = !DILocation(line: 1830, column: 27, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 1825, column: 13)
!4797 = !DILocation(line: 1830, column: 21, scope: !4796)
!4798 = !DILocation(line: 1831, column: 27, scope: !4796)
!4799 = !DILocation(line: 1831, column: 43, scope: !4796)
!4800 = !DILocation(line: 1831, column: 49, scope: !4796)
!4801 = !DILocation(line: 1831, column: 35, scope: !4796)
!4802 = !DILocation(line: 1831, column: 21, scope: !4796)
!4803 = !DILocation(line: 1832, column: 33, scope: !4796)
!4804 = !DILocation(line: 1829, column: 17, scope: !4796)
!4805 = !DILocation(line: 1833, column: 23, scope: !4796)
!4806 = !DILocation(line: 1833, column: 29, scope: !4796)
!4807 = !DILocation(line: 1833, column: 35, scope: !4796)
!4808 = !DILocation(line: 1834, column: 17, scope: !4796)
!4809 = !DILocation(line: 1834, column: 35, scope: !4796)
!4810 = !DILocation(line: 1835, column: 23, scope: !4796)
!4811 = !DILocation(line: 1835, column: 29, scope: !4796)
!4812 = !DILocation(line: 1835, column: 34, scope: !4796)
!4813 = !DILocation(line: 1836, column: 29, scope: !4796)
!4814 = !DILocation(line: 1836, column: 35, scope: !4796)
!4815 = !DILocation(line: 1837, column: 17, scope: !4796)
!4816 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4817)
!4817 = distinct !DILocation(line: 1838, column: 17, scope: !4796)
!4818 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4817)
!4819 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4817)
!4820 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4817)
!4821 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4817)
!4822 = !DILocation(line: 1839, column: 17, scope: !4796)
!4823 = !DILocation(line: 1850, column: 36, scope: !4368)
!4824 = !DILocation(line: 1850, column: 17, scope: !4368)
!4825 = !DILocation(line: 1851, column: 21, scope: !4368)
!4826 = !DILocation(line: 1851, column: 27, scope: !4368)
!4827 = !DILocation(line: 1852, column: 27, scope: !4368)
!4828 = !DILocation(line: 1853, column: 9, scope: !4368)
!4829 = !DILocation(line: 1856, column: 20, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1856, column: 13)
!4831 = !DILocation(line: 1856, column: 52, scope: !4830)
!4832 = !DILocation(line: 1857, column: 14, scope: !4830)
!4833 = !DILocation(line: 1857, column: 38, scope: !4830)
!4834 = !DILocation(line: 1858, column: 13, scope: !4830)
!4835 = !DILocation(line: 1856, column: 13, scope: !4370)
!4836 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4837)
!4837 = distinct !DILocation(line: 1860, column: 13, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 1859, column: 9)
!4839 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4837)
!4840 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4837)
!4841 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4837)
!4842 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4837)
!4843 = !DILocation(line: 1862, column: 9, scope: !4838)
!4844 = !DILocation(line: 1865, column: 19, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1865, column: 13)
!4846 = !DILocation(line: 1865, column: 13, scope: !4845)
!4847 = !DILocation(line: 1865, column: 24, scope: !4845)
!4848 = !DILocation(line: 1865, column: 32, scope: !4845)
!4849 = !DILocation(line: 1865, column: 13, scope: !4370)
!4850 = !DILocation(line: 1866, column: 41, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 1865, column: 57)
!4852 = !DILocation(line: 1866, column: 19, scope: !4851)
!4853 = !DILocation(line: 1866, column: 25, scope: !4851)
!4854 = !DILocation(line: 1866, column: 39, scope: !4851)
!4855 = !DILocation(line: 1867, column: 25, scope: !4851)
!4856 = !DILocation(line: 1867, column: 35, scope: !4851)
!4857 = !DILocation(line: 1875, column: 17, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 1875, column: 17)
!4859 = !DILocation(line: 1875, column: 17, scope: !4851)
!4860 = !DILocation(line: 1876, column: 35, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 1875, column: 43)
!4862 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4863)
!4863 = distinct !DILocation(line: 1877, column: 17, scope: !4861)
!4864 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4863)
!4865 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4863)
!4866 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4863)
!4867 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4863)
!4868 = !DILocation(line: 1879, column: 13, scope: !4861)
!4869 = !DILocation(line: 1879, column: 24, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 1879, column: 24)
!4871 = !DILocation(line: 1879, column: 24, scope: !4858)
!4872 = !DILocation(line: 1880, column: 17, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 1879, column: 48)
!4874 = !DILocation(line: 1881, column: 13, scope: !4873)
!4875 = !DILocation(line: 1885, column: 13, scope: !4370)
!4876 = !DILocation(line: 1886, column: 25, scope: !4374)
!4877 = !DILocation(line: 1886, column: 18, scope: !4374)
!4878 = !DILocation(line: 1886, column: 17, scope: !4375)
!4879 = !DILocation(line: 1890, column: 17, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 1888, column: 13)
!4881 = !DILocation(line: 1891, column: 13, scope: !4880)
!4882 = !DILocation(line: 1933, column: 29, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 1932, column: 21)
!4884 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1932, column: 13)
!4885 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !4886)
!4886 = distinct !DILocation(line: 1893, column: 39, scope: !4373)
!4887 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !4886)
!4888 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !4886)
!4889 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !4886)
!4890 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !4886)
!4891 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !4886)
!4892 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !4886)
!4893 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !4886)
!4894 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !4886)
!4895 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !4886)
!4896 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !4886)
!4897 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !4886)
!4898 = !DILocation(line: 0, scope: !825, inlinedAt: !4886)
!4899 = !DILocation(line: 0, scope: !4373)
!4900 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !4886)
!4901 = !DILocation(line: 1893, column: 30, scope: !4373)
!4902 = !DILocation(line: 1895, column: 21, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 1895, column: 21)
!4904 = !DILocation(line: 1895, column: 21, scope: !4373)
!4905 = !DILocation(line: 1897, column: 21, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 1895, column: 43)
!4907 = !DILocation(line: 1898, column: 35, scope: !4906)
!4908 = !DILocation(line: 1900, column: 35, scope: !4906)
!4909 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4910)
!4910 = distinct !DILocation(line: 1903, column: 21, scope: !4906)
!4911 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4910)
!4912 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4910)
!4913 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4910)
!4914 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4910)
!4915 = !DILocation(line: 1905, column: 17, scope: !4906)
!4916 = !DILocation(line: 1908, column: 21, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 1908, column: 21)
!4918 = !DILocation(line: 1908, column: 28, scope: !4917)
!4919 = !DILocation(line: 1908, column: 39, scope: !4917)
!4920 = !DILocation(line: 1908, column: 47, scope: !4917)
!4921 = !DILocation(line: 1908, column: 21, scope: !4373)
!4922 = !DILocation(line: 1909, column: 25, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !3, line: 1909, column: 25)
!4924 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 1908, column: 58)
!4925 = !DILocation(line: 1909, column: 25, scope: !4924)
!4926 = !DILocation(line: 820, column: 41, scope: !2387, inlinedAt: !4927)
!4927 = distinct !DILocation(line: 1910, column: 25, scope: !4923)
!4928 = !DILocation(line: 820, column: 62, scope: !2387, inlinedAt: !4927)
!4929 = !DILocation(line: 821, column: 9, scope: !2387, inlinedAt: !4927)
!4930 = !DILocation(line: 823, column: 10, scope: !2398, inlinedAt: !4927)
!4931 = !DILocation(line: 823, column: 29, scope: !2397, inlinedAt: !4927)
!4932 = !DILocation(line: 823, column: 19, scope: !2397, inlinedAt: !4927)
!4933 = !DILocation(line: 823, column: 5, scope: !2398, inlinedAt: !4927)
!4934 = !DILocation(line: 824, column: 13, scope: !2395, inlinedAt: !4927)
!4935 = !DILocation(line: 824, column: 31, scope: !2395, inlinedAt: !4927)
!4936 = !DILocation(line: 0, scope: !2397, inlinedAt: !4927)
!4937 = !DILocation(line: 824, column: 13, scope: !2396, inlinedAt: !4927)
!4938 = !DILocation(line: 825, column: 23, scope: !2393, inlinedAt: !4927)
!4939 = !DILocation(line: 825, column: 17, scope: !2394, inlinedAt: !4927)
!4940 = !DILocation(line: 826, column: 64, scope: !2392, inlinedAt: !4927)
!4941 = !DILocation(line: 826, column: 21, scope: !2392, inlinedAt: !4927)
!4942 = !DILocation(line: 827, column: 25, scope: !2392, inlinedAt: !4927)
!4943 = !DILocation(line: 827, column: 56, scope: !2392, inlinedAt: !4927)
!4944 = !DILocation(line: 827, column: 42, scope: !2392, inlinedAt: !4927)
!4945 = !DILocation(line: 828, column: 52, scope: !2392, inlinedAt: !4927)
!4946 = !DILocation(line: 828, column: 50, scope: !2392, inlinedAt: !4927)
!4947 = !DILocation(line: 827, column: 17, scope: !2392, inlinedAt: !4927)
!4948 = !DILocation(line: 829, column: 13, scope: !2392, inlinedAt: !4927)
!4949 = !DILocation(line: 830, column: 30, scope: !2394, inlinedAt: !4927)
!4950 = !DILocation(line: 831, column: 35, scope: !2425, inlinedAt: !4927)
!4951 = !DILocation(line: 831, column: 17, scope: !2394, inlinedAt: !4927)
!4952 = !DILocation(line: 832, column: 25, scope: !2425, inlinedAt: !4927)
!4953 = !DILocation(line: 832, column: 31, scope: !2425, inlinedAt: !4927)
!4954 = !DILocation(line: 832, column: 17, scope: !2425, inlinedAt: !4927)
!4955 = !DILocation(line: 823, column: 5, scope: !2397, inlinedAt: !4927)
!4956 = !DILocation(line: 0, scope: !4923)
!4957 = !DILocation(line: 837, column: 1, scope: !2387, inlinedAt: !4927)
!4958 = !DILocation(line: 1910, column: 25, scope: !4923)
!4959 = !DILocation(line: 839, column: 38, scope: !1027, inlinedAt: !4960)
!4960 = distinct !DILocation(line: 1911, column: 21, scope: !4924)
!4961 = !DILocation(line: 839, column: 59, scope: !1027, inlinedAt: !4960)
!4962 = !DILocation(line: 840, column: 9, scope: !1027, inlinedAt: !4960)
!4963 = !DILocation(line: 843, column: 10, scope: !1038, inlinedAt: !4960)
!4964 = !DILocation(line: 843, column: 29, scope: !1040, inlinedAt: !4960)
!4965 = !DILocation(line: 843, column: 19, scope: !1040, inlinedAt: !4960)
!4966 = !DILocation(line: 0, scope: !1027, inlinedAt: !4960)
!4967 = !DILocation(line: 843, column: 5, scope: !1038, inlinedAt: !4960)
!4968 = !DILocation(line: 844, column: 13, scope: !1047, inlinedAt: !4960)
!4969 = !DILocation(line: 844, column: 31, scope: !1047, inlinedAt: !4960)
!4970 = !DILocation(line: 844, column: 13, scope: !1040, inlinedAt: !4960)
!4971 = !DILocation(line: 843, column: 41, scope: !1040, inlinedAt: !4960)
!4972 = !DILocation(line: 843, column: 5, scope: !1040, inlinedAt: !4960)
!4973 = !DILocation(line: 845, column: 31, scope: !1027, inlinedAt: !4960)
!4974 = !DILocation(line: 846, column: 48, scope: !1027, inlinedAt: !4960)
!4975 = !DILocation(line: 846, column: 30, scope: !1027, inlinedAt: !4960)
!4976 = !DILocation(line: 846, column: 29, scope: !1027, inlinedAt: !4960)
!4977 = !DILocation(line: 845, column: 22, scope: !1027, inlinedAt: !4960)
!4978 = !DILocation(line: 845, column: 20, scope: !1027, inlinedAt: !4960)
!4979 = !DILocation(line: 847, column: 28, scope: !1027, inlinedAt: !4960)
!4980 = !DILocation(line: 847, column: 5, scope: !1027, inlinedAt: !4960)
!4981 = !DILocation(line: 847, column: 39, scope: !1027, inlinedAt: !4960)
!4982 = !DILocation(line: 848, column: 22, scope: !1027, inlinedAt: !4960)
!4983 = !DILocation(line: 849, column: 13, scope: !1027, inlinedAt: !4960)
!4984 = !DILocation(line: 849, column: 19, scope: !1027, inlinedAt: !4960)
!4985 = !DILocation(line: 850, column: 5, scope: !1027, inlinedAt: !4960)
!4986 = !DILocation(line: 0, scope: !4924)
!4987 = !DILocation(line: 851, column: 1, scope: !1027, inlinedAt: !4960)
!4988 = !DILocation(line: 1912, column: 37, scope: !4924)
!4989 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !4990)
!4990 = distinct !DILocation(line: 1915, column: 21, scope: !4924)
!4991 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !4990)
!4992 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !4990)
!4993 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !4990)
!4994 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !4990)
!4995 = !DILocation(line: 1916, column: 17, scope: !4924)
!4996 = !DILocation(line: 1929, column: 22, scope: !4370)
!4997 = !DILocation(line: 1930, column: 13, scope: !4370)
!4998 = !DILocation(line: 1932, column: 13, scope: !4370)
!4999 = !DILocation(line: 1934, column: 17, scope: !4883)
!5000 = !DILocation(line: 1933, column: 69, scope: !4883)
!5001 = !DILocation(line: 1934, column: 17, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 1934, column: 17)
!5003 = !DILocation(line: 1935, column: 38, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 1934, column: 32)
!5005 = !DILocation(line: 1936, column: 25, scope: !5004)
!5006 = !DILocation(line: 1935, column: 31, scope: !5004)
!5007 = !DILocation(line: 1936, column: 60, scope: !5004)
!5008 = !DILocation(line: 1937, column: 13, scope: !5004)
!5009 = !DILocation(line: 0, scope: !4370)
!5010 = !DILocation(line: 1943, column: 20, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1943, column: 13)
!5012 = !DILocation(line: 1943, column: 23, scope: !5011)
!5013 = !DILocation(line: 1943, column: 47, scope: !5011)
!5014 = !DILocation(line: 1943, column: 44, scope: !5011)
!5015 = !DILocation(line: 1944, column: 67, scope: !5011)
!5016 = !DILocation(line: 1944, column: 13, scope: !5011)
!5017 = !DILocation(line: 1964, column: 20, scope: !4381)
!5018 = !DILocation(line: 0, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1992, column: 13)
!5020 = !DILocation(line: 1964, column: 23, scope: !4381)
!5021 = !DILocation(line: 1965, column: 17, scope: !4380)
!5022 = !DILocation(line: 1967, column: 13, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 1967, column: 13)
!5024 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !5025)
!5025 = distinct !DILocation(line: 1968, column: 21, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 1968, column: 21)
!5027 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1967, column: 49)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 1967, column: 13)
!5029 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !5025)
!5030 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !5025)
!5031 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !5025)
!5032 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !5025)
!5033 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !5025)
!5034 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !5025)
!5035 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !5025)
!5036 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !5025)
!5037 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !5025)
!5038 = !DILocation(line: 1968, column: 21, scope: !5027)
!5039 = !DILocation(line: 1969, column: 25, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 1969, column: 25)
!5041 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 1968, column: 52)
!5042 = !DILocation(line: 1969, column: 50, scope: !5040)
!5043 = !DILocation(line: 1969, column: 60, scope: !5040)
!5044 = !DILocation(line: 1970, column: 50, scope: !5040)
!5045 = !DILocation(line: 1969, column: 25, scope: !5041)
!5046 = !DILocation(line: 1971, column: 51, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 1971, column: 25)
!5048 = !DILocation(line: 1971, column: 63, scope: !5047)
!5049 = !DILocation(line: 1971, column: 25, scope: !5041)
!5050 = !DILocation(line: 1977, column: 33, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 1973, column: 21)
!5052 = !DILocation(line: 1977, column: 47, scope: !5051)
!5053 = !DILocation(line: 1974, column: 25, scope: !5051)
!5054 = !DILocation(line: 1978, column: 51, scope: !5051)
!5055 = !DILocation(line: 1979, column: 36, scope: !5051)
!5056 = !DILocation(line: 1979, column: 29, scope: !5051)
!5057 = !DILocation(line: 1978, column: 25, scope: !5051)
!5058 = !DILocation(line: 1984, column: 25, scope: !5051)
!5059 = !DILocation(line: 1967, column: 45, scope: !5028)
!5060 = !DILocation(line: 1967, column: 13, scope: !5028)
!5061 = !DILocation(line: 1967, column: 27, scope: !5028)
!5062 = distinct !{!5062, !5022, !5063}
!5063 = !DILocation(line: 1987, column: 13, scope: !5023)
!5064 = !DILocation(line: 1988, column: 9, scope: !4380)
!5065 = !DILocation(line: 1992, column: 20, scope: !5019)
!5066 = !DILocation(line: 1993, column: 13, scope: !5019)
!5067 = !DILocation(line: 1993, column: 34, scope: !5019)
!5068 = !DILocation(line: 1993, column: 37, scope: !5019)
!5069 = !DILocation(line: 1993, column: 58, scope: !5019)
!5070 = !DILocation(line: 1994, column: 42, scope: !5019)
!5071 = !DILocation(line: 1994, column: 31, scope: !5019)
!5072 = !DILocation(line: 1992, column: 13, scope: !4370)
!5073 = !DILocation(line: 1996, column: 13, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1995, column: 9)
!5075 = !DILocation(line: 1997, column: 9, scope: !5074)
!5076 = !DILocation(line: 2000, column: 13, scope: !4370)
!5077 = !DILocation(line: 2000, column: 21, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 2000, column: 13)
!5079 = !DILocation(line: 0, scope: !5078)
!5080 = !DILocation(line: 2001, column: 5, scope: !4370)
!5081 = !DILocation(line: 2001, column: 21, scope: !4384)
!5082 = !DILocation(line: 2001, column: 16, scope: !4371)
!5083 = !DILocation(line: 2004, column: 13, scope: !4383)
!5084 = !DILocation(line: 0, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 2018, column: 16)
!5086 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 2004, column: 13)
!5087 = !DILocation(line: 2005, column: 41, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 2004, column: 21)
!5089 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !5090)
!5090 = distinct !DILocation(line: 2005, column: 23, scope: !5088)
!5091 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !5090)
!5092 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !5090)
!5093 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !5090)
!5094 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !5090)
!5095 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !5090)
!5096 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !5090)
!5097 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !5090)
!5098 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !5090)
!5099 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !5090)
!5100 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !5090)
!5101 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !5090)
!5102 = !DILocation(line: 2002, column: 22, scope: !4383)
!5103 = !DILocation(line: 2006, column: 25, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 2006, column: 17)
!5105 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !5090)
!5106 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !5090)
!5107 = !DILocation(line: 2006, column: 17, scope: !5104)
!5108 = !DILocation(line: 2007, column: 28, scope: !5104)
!5109 = !DILocation(line: 2007, column: 34, scope: !5104)
!5110 = !DILocation(line: 2006, column: 17, scope: !5088)
!5111 = !DILocation(line: 2009, column: 17, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 2008, column: 13)
!5113 = !DILocation(line: 2012, column: 32, scope: !5112)
!5114 = !DILocation(line: 2013, column: 38, scope: !5112)
!5115 = !DILocation(line: 2013, column: 26, scope: !5112)
!5116 = !DILocation(line: 2013, column: 36, scope: !5112)
!5117 = !DILocation(line: 2014, column: 32, scope: !5112)
!5118 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !5119)
!5119 = distinct !DILocation(line: 2015, column: 17, scope: !5112)
!5120 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !5119)
!5121 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !5119)
!5122 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !5119)
!5123 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !5119)
!5124 = !DILocation(line: 2017, column: 13, scope: !5112)
!5125 = !DILocation(line: 2019, column: 13, scope: !5085)
!5126 = !DILocation(line: 2023, column: 5, scope: !4383)
!5127 = !DILocation(line: 2023, column: 21, scope: !4387)
!5128 = !DILocation(line: 2023, column: 16, scope: !4384)
!5129 = !DILocation(line: 2029, column: 13, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 2029, column: 13)
!5131 = !{!789, !761, i64 2904}
!5132 = !{!5133, !729, i64 24}
!5133 = !{!"dictht", !761, i64 0, !729, i64 8, !729, i64 16, !729, i64 24}
!5134 = !DILocation(line: 2029, column: 46, scope: !5130)
!5135 = !DILocation(line: 2030, column: 12, scope: !5130)
!5136 = !{!789, !761, i64 2912}
!5137 = !DILocation(line: 2029, column: 13, scope: !4386)
!5138 = !DILocation(line: 2032, column: 27, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5130, file: !3, line: 2031, column: 9)
!5140 = !DILocation(line: 2025, column: 18, scope: !4386)
!5141 = !DILocation(line: 2033, column: 27, scope: !5139)
!5142 = !DILocation(line: 2025, column: 31, scope: !4386)
!5143 = !DILocation(line: 2035, column: 32, scope: !5139)
!5144 = !DILocation(line: 2035, column: 64, scope: !5139)
!5145 = !DILocation(line: 2034, column: 23, scope: !5139)
!5146 = !DILocation(line: 2024, column: 15, scope: !4386)
!5147 = !DILocation(line: 2037, column: 63, scope: !5139)
!5148 = !DILocation(line: 2038, column: 25, scope: !5139)
!5149 = !DILocation(line: 2036, column: 23, scope: !5139)
!5150 = !DILocation(line: 2024, column: 25, scope: !4386)
!5151 = !DILocation(line: 2039, column: 13, scope: !5139)
!5152 = !DILocation(line: 2040, column: 13, scope: !5139)
!5153 = !DILocation(line: 2041, column: 13, scope: !5139)
!5154 = !DILocation(line: 2042, column: 9, scope: !5139)
!5155 = !DILocation(line: 2043, column: 5, scope: !4386)
!5156 = !DILocation(line: 2043, column: 21, scope: !4405)
!5157 = !DILocation(line: 2043, column: 16, scope: !4387)
!5158 = !DILocation(line: 2044, column: 13, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !4405, file: !3, line: 2043, column: 63)
!5160 = !DILocation(line: 2044, column: 22, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 2044, column: 13)
!5162 = !DILocation(line: 2045, column: 9, scope: !5159)
!5163 = !DILocation(line: 2046, column: 5, scope: !5159)
!5164 = !DILocation(line: 2046, column: 21, scope: !4404)
!5165 = !DILocation(line: 2046, column: 16, scope: !4405)
!5166 = !DILocation(line: 2047, column: 13, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 2046, column: 59)
!5168 = !DILocation(line: 2047, column: 22, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 2047, column: 13)
!5170 = !DILocation(line: 2051, column: 13, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 2051, column: 13)
!5172 = !DILocation(line: 2051, column: 34, scope: !5171)
!5173 = !DILocation(line: 2051, column: 45, scope: !5171)
!5174 = !DILocation(line: 2051, column: 54, scope: !5171)
!5175 = !DILocation(line: 2051, column: 58, scope: !5171)
!5176 = !DILocation(line: 2052, column: 42, scope: !5171)
!5177 = !DILocation(line: 2052, column: 51, scope: !5171)
!5178 = !DILocation(line: 2052, column: 32, scope: !5171)
!5179 = !DILocation(line: 2051, column: 13, scope: !5167)
!5180 = !DILocation(line: 2054, column: 29, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 2053, column: 9)
!5182 = !DILocation(line: 2054, column: 48, scope: !5181)
!5183 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !5184)
!5184 = distinct !DILocation(line: 2057, column: 13, scope: !5181)
!5185 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !5184)
!5186 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !5184)
!5187 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !5184)
!5188 = !DILocation(line: 2058, column: 9, scope: !5181)
!5189 = !DILocation(line: 2059, column: 21, scope: !4403)
!5190 = !DILocation(line: 2059, column: 16, scope: !4404)
!5191 = !DILocation(line: 2062, column: 21, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 2062, column: 13)
!5193 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 2059, column: 49)
!5194 = !DILocation(line: 2062, column: 32, scope: !5192)
!5195 = !DILocation(line: 2062, column: 43, scope: !5192)
!5196 = !DILocation(line: 2062, column: 40, scope: !5192)
!5197 = !DILocation(line: 2062, column: 13, scope: !5193)
!5198 = !DILocation(line: 2062, column: 51, scope: !5192)
!5199 = !DILocation(line: 3265, column: 16, scope: !1983, inlinedAt: !5200)
!5200 = distinct !DILocation(line: 2065, column: 9, scope: !5193)
!5201 = !DILocation(line: 3265, column: 25, scope: !1983, inlinedAt: !5200)
!5202 = !DILocation(line: 3265, column: 9, scope: !1983, inlinedAt: !5200)
!5203 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !5200)
!5204 = !DILocation(line: 3265, column: 35, scope: !1983, inlinedAt: !5200)
!5205 = !DILocation(line: 3265, column: 9, scope: !1984, inlinedAt: !5200)
!5206 = !DILocation(line: 3266, column: 39, scope: !2175, inlinedAt: !5200)
!5207 = !DILocation(line: 3267, column: 9, scope: !2175, inlinedAt: !5200)
!5208 = !DILocation(line: 3268, column: 5, scope: !2175, inlinedAt: !5200)
!5209 = !DILocation(line: 3269, column: 12, scope: !1984, inlinedAt: !5200)
!5210 = !DILocation(line: 3269, column: 21, scope: !1984, inlinedAt: !5200)
!5211 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !5200)
!5212 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !5200)
!5213 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !5200)
!5214 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !5200)
!5215 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !5200)
!5216 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !5200)
!5217 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !5200)
!5218 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !5200)
!5219 = !DILocation(line: 2066, column: 34, scope: !5193)
!5220 = !DILocation(line: 2066, column: 43, scope: !5193)
!5221 = !DILocation(line: 2066, column: 16, scope: !5193)
!5222 = !DILocation(line: 2066, column: 25, scope: !5193)
!5223 = !DILocation(line: 2066, column: 32, scope: !5193)
!5224 = !DILocation(line: 2067, column: 25, scope: !5193)
!5225 = !DILocation(line: 2067, column: 34, scope: !5193)
!5226 = !DILocation(line: 2068, column: 22, scope: !5193)
!5227 = !DILocation(line: 2068, column: 30, scope: !5193)
!5228 = !DILocation(line: 2068, column: 9, scope: !5193)
!5229 = !DILocation(line: 2070, column: 13, scope: !5193)
!5230 = !DILocation(line: 2069, column: 9, scope: !5193)
!5231 = !DILocation(line: 2071, column: 5, scope: !5193)
!5232 = !DILocation(line: 2071, column: 21, scope: !4402)
!5233 = !DILocation(line: 2071, column: 16, scope: !4403)
!5234 = !DILocation(line: 2074, column: 21, scope: !4401)
!5235 = !DILocation(line: 2073, column: 18, scope: !4401)
!5236 = !DILocation(line: 2076, column: 13, scope: !4401)
!5237 = !DILocation(line: 2077, column: 31, scope: !4401)
!5238 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !5239)
!5239 = distinct !DILocation(line: 2077, column: 13, scope: !4401)
!5240 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !5239)
!5241 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !5239)
!5242 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !5239)
!5243 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !5239)
!5244 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !5239)
!5245 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !5239)
!5246 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !5239)
!5247 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !5239)
!5248 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !5239)
!5249 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !5239)
!5250 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !5239)
!5251 = !DILocation(line: 2072, column: 22, scope: !4401)
!5252 = !DILocation(line: 2078, column: 13, scope: !4401)
!5253 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !5239)
!5254 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !5239)
!5255 = !DILocation(line: 2078, column: 14, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 2078, column: 13)
!5257 = !DILocation(line: 2079, column: 16, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 2079, column: 13)
!5259 = !DILocation(line: 2079, column: 28, scope: !5258)
!5260 = !DILocation(line: 2079, column: 13, scope: !4401)
!5261 = !DILocation(line: 2079, column: 52, scope: !5258)
!5262 = !DILocation(line: 2082, column: 13, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 2082, column: 13)
!5264 = !DILocation(line: 2082, column: 13, scope: !4401)
!5265 = !DILocation(line: 2082, column: 29, scope: !5263)
!5266 = !DILocation(line: 2085, column: 24, scope: !4401)
!5267 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !5268)
!5268 = distinct !DILocation(line: 2086, column: 9, scope: !4401)
!5269 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !5268)
!5270 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !5268)
!5271 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !5268)
!5272 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !5268)
!5273 = !DILocation(line: 2092, column: 13, scope: !4401)
!5274 = !DILocation(line: 2091, column: 9, scope: !4401)
!5275 = !DILocation(line: 2093, column: 5, scope: !4402)
!5276 = !DILocation(line: 0, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 2076, column: 13)
!5278 = !DILocation(line: 2093, column: 21, scope: !4409)
!5279 = !DILocation(line: 2093, column: 16, scope: !4402)
!5280 = !DILocation(line: 2094, column: 13, scope: !4408)
!5281 = !DILocation(line: 2094, column: 22, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 2094, column: 13)
!5283 = !DILocation(line: 2097, column: 51, scope: !4408)
!5284 = !DILocation(line: 2097, column: 18, scope: !4408)
!5285 = !DILocation(line: 2098, column: 24, scope: !4408)
!5286 = !DILocation(line: 2098, column: 18, scope: !4408)
!5287 = !DILocation(line: 2099, column: 45, scope: !4408)
!5288 = !DILocation(line: 2099, column: 17, scope: !4408)
!5289 = !DILocation(line: 2100, column: 55, scope: !4408)
!5290 = !DILocation(line: 2100, column: 24, scope: !4408)
!5291 = !DILocation(line: 2101, column: 36, scope: !4408)
!5292 = !DILocation(line: 2101, column: 9, scope: !4408)
!5293 = !DILocation(line: 2102, column: 5, scope: !4408)
!5294 = !DILocation(line: 2103, column: 9, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 2102, column: 12)
!5296 = !DILocation(line: 2105, column: 5, scope: !4328)
!5297 = !DILocation(line: 0, scope: !4756)
!5298 = !DILocation(line: 2106, column: 1, scope: !4328)
!5299 = distinct !DISubprogram(name: "clusterSendPing", scope: !3, file: !3, line: 2351, type: !5300, isLocal: false, isDefinition: true, scopeLine: 2351, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5302)
!5300 = !DISubroutineType(types: !5301)
!5301 = !{null, !179, !177}
!5302 = !{!5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5315, !5316, !5319, !5320}
!5303 = !DILocalVariable(name: "link", arg: 1, scope: !5299, file: !3, line: 2351, type: !179)
!5304 = !DILocalVariable(name: "type", arg: 2, scope: !5299, file: !3, line: 2351, type: !177)
!5305 = !DILocalVariable(name: "buf", scope: !5299, file: !3, line: 2352, type: !246)
!5306 = !DILocalVariable(name: "hdr", scope: !5299, file: !3, line: 2353, type: !92)
!5307 = !DILocalVariable(name: "gossipcount", scope: !5299, file: !3, line: 2354, type: !177)
!5308 = !DILocalVariable(name: "wanted", scope: !5299, file: !3, line: 2355, type: !177)
!5309 = !DILocalVariable(name: "totlen", scope: !5299, file: !3, line: 2356, type: !177)
!5310 = !DILocalVariable(name: "freshnodes", scope: !5299, file: !3, line: 2361, type: !177)
!5311 = !DILocalVariable(name: "pfail_wanted", scope: !5299, file: !3, line: 2395, type: !177)
!5312 = !DILocalVariable(name: "maxiterations", scope: !5299, file: !3, line: 2414, type: !177)
!5313 = !DILocalVariable(name: "de", scope: !5314, file: !3, line: 2416, type: !340)
!5314 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2415, column: 70)
!5315 = !DILocalVariable(name: "this", scope: !5314, file: !3, line: 2417, type: !378)
!5316 = !DILocalVariable(name: "di", scope: !5317, file: !3, line: 2449, type: !297)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2448, column: 23)
!5318 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2448, column: 9)
!5319 = !DILocalVariable(name: "de", scope: !5317, file: !3, line: 2450, type: !340)
!5320 = !DILocalVariable(name: "node", scope: !5321, file: !3, line: 2454, type: !378)
!5321 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 2453, column: 64)
!5322 = !DILocation(line: 2351, column: 35, scope: !5299)
!5323 = !DILocation(line: 2351, column: 45, scope: !5299)
!5324 = !DILocation(line: 2354, column: 9, scope: !5299)
!5325 = !DILocation(line: 2361, column: 22, scope: !5299)
!5326 = !DILocation(line: 2361, column: 9, scope: !5299)
!5327 = !DILocation(line: 2389, column: 51, scope: !5299)
!5328 = !DILocation(line: 2389, column: 20, scope: !5299)
!5329 = !DILocation(line: 2389, column: 14, scope: !5299)
!5330 = !DILocation(line: 2355, column: 9, scope: !5299)
!5331 = !DILocation(line: 2390, column: 9, scope: !5299)
!5332 = !DILocation(line: 2391, column: 16, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2391, column: 9)
!5334 = !DILocation(line: 2391, column: 9, scope: !5299)
!5335 = !DILocation(line: 2391, column: 30, scope: !5333)
!5336 = !DILocation(line: 0, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2390, column: 9)
!5338 = !DILocation(line: 2395, column: 31, scope: !5299)
!5339 = !DILocation(line: 2395, column: 40, scope: !5299)
!5340 = !DILocation(line: 2395, column: 24, scope: !5299)
!5341 = !DILocation(line: 2395, column: 9, scope: !5299)
!5342 = !DILocation(line: 2356, column: 9, scope: !5299)
!5343 = !DILocation(line: 2401, column: 52, scope: !5299)
!5344 = !DILocation(line: 2401, column: 44, scope: !5299)
!5345 = !DILocation(line: 2401, column: 12, scope: !5299)
!5346 = !DILocation(line: 2404, column: 9, scope: !5299)
!5347 = !DILocation(line: 2405, column: 19, scope: !5299)
!5348 = !DILocation(line: 2405, column: 11, scope: !5299)
!5349 = !DILocation(line: 2352, column: 20, scope: !5299)
!5350 = !DILocation(line: 2406, column: 11, scope: !5299)
!5351 = !DILocation(line: 2353, column: 17, scope: !5299)
!5352 = !DILocation(line: 2409, column: 15, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2409, column: 9)
!5354 = !DILocation(line: 2409, column: 9, scope: !5353)
!5355 = !DILocation(line: 2409, column: 28, scope: !5353)
!5356 = !DILocation(line: 2409, column: 20, scope: !5353)
!5357 = !DILocation(line: 2410, column: 33, scope: !5353)
!5358 = !DILocation(line: 2410, column: 15, scope: !5353)
!5359 = !DILocation(line: 2410, column: 21, scope: !5353)
!5360 = !DILocation(line: 2410, column: 31, scope: !5353)
!5361 = !DILocation(line: 2410, column: 9, scope: !5353)
!5362 = !DILocation(line: 2411, column: 5, scope: !5299)
!5363 = !DILocation(line: 2415, column: 5, scope: !5299)
!5364 = !DILocation(line: 2415, column: 22, scope: !5299)
!5365 = !DILocation(line: 2415, column: 26, scope: !5299)
!5366 = !DILocation(line: 2414, column: 31, scope: !5299)
!5367 = !DILocation(line: 2414, column: 9, scope: !5299)
!5368 = !DILocation(line: 2415, column: 41, scope: !5299)
!5369 = !DILocation(line: 2415, column: 50, scope: !5299)
!5370 = !DILocation(line: 2415, column: 66, scope: !5299)
!5371 = !DILocation(line: 2416, column: 49, scope: !5314)
!5372 = !DILocation(line: 2416, column: 58, scope: !5314)
!5373 = !DILocation(line: 2416, column: 25, scope: !5314)
!5374 = !DILocation(line: 2416, column: 20, scope: !5314)
!5375 = !DILocation(line: 2417, column: 29, scope: !5314)
!5376 = !DILocation(line: 2417, column: 22, scope: !5314)
!5377 = !DILocation(line: 2421, column: 21, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 2421, column: 13)
!5379 = !DILocation(line: 2421, column: 18, scope: !5378)
!5380 = !DILocation(line: 2421, column: 13, scope: !5314)
!5381 = distinct !{!5381, !5363, !5382}
!5382 = !DILocation(line: 2445, column: 5, scope: !5299)
!5383 = !DILocation(line: 2424, column: 19, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 2424, column: 13)
!5385 = !DILocation(line: 2424, column: 25, scope: !5384)
!5386 = !DILocation(line: 2424, column: 13, scope: !5314)
!5387 = !DILocation(line: 2431, column: 25, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 2431, column: 13)
!5389 = !DILocation(line: 2431, column: 72, scope: !5388)
!5390 = !DILocation(line: 2432, column: 20, scope: !5388)
!5391 = !DILocation(line: 2432, column: 25, scope: !5388)
!5392 = !DILocation(line: 2432, column: 33, scope: !5388)
!5393 = !DILocation(line: 2432, column: 42, scope: !5388)
!5394 = !DILocation(line: 2432, column: 51, scope: !5388)
!5395 = !DILocation(line: 2431, column: 13, scope: !5314)
!5396 = !DILocation(line: 2434, column: 23, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 2433, column: 9)
!5398 = !DILocation(line: 2435, column: 13, scope: !5397)
!5399 = !DILocalVariable(name: "hdr", arg: 1, scope: !5400, file: !3, line: 2325, type: !92)
!5400 = distinct !DISubprogram(name: "clusterNodeIsInGossipSection", scope: !3, file: !3, line: 2325, type: !5401, isLocal: false, isDefinition: true, scopeLine: 2325, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5403)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!177, !92, !177, !378}
!5403 = !{!5399, !5404, !5405, !5406}
!5404 = !DILocalVariable(name: "count", arg: 2, scope: !5400, file: !3, line: 2325, type: !177)
!5405 = !DILocalVariable(name: "n", arg: 3, scope: !5400, file: !3, line: 2325, type: !378)
!5406 = !DILocalVariable(name: "j", scope: !5400, file: !3, line: 2326, type: !177)
!5407 = !DILocation(line: 2325, column: 46, scope: !5400, inlinedAt: !5408)
!5408 = distinct !DILocation(line: 2439, column: 13, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 2439, column: 13)
!5410 = !DILocation(line: 2325, column: 55, scope: !5400, inlinedAt: !5408)
!5411 = !DILocation(line: 2325, column: 75, scope: !5400, inlinedAt: !5408)
!5412 = !DILocation(line: 2326, column: 9, scope: !5400, inlinedAt: !5408)
!5413 = !DILocation(line: 2327, column: 10, scope: !5414, inlinedAt: !5408)
!5414 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 2327, column: 5)
!5415 = !DILocation(line: 2327, column: 19, scope: !5416, inlinedAt: !5408)
!5416 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 2327, column: 5)
!5417 = !DILocation(line: 2327, column: 5, scope: !5414, inlinedAt: !5408)
!5418 = !DILocation(line: 2328, column: 20, scope: !5419, inlinedAt: !5408)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !3, line: 2328, column: 13)
!5420 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 2327, column: 33)
!5421 = !DILocation(line: 2328, column: 13, scope: !5419, inlinedAt: !5408)
!5422 = !DILocation(line: 2329, column: 34, scope: !5419, inlinedAt: !5408)
!5423 = !DILocation(line: 2328, column: 13, scope: !5420, inlinedAt: !5408)
!5424 = !DILocation(line: 2327, column: 29, scope: !5416, inlinedAt: !5408)
!5425 = !DILocation(line: 2327, column: 5, scope: !5416, inlinedAt: !5408)
!5426 = distinct !{!5426, !5427, !5428}
!5427 = !DILocation(line: 2327, column: 5, scope: !5414)
!5428 = !DILocation(line: 2330, column: 5, scope: !5414)
!5429 = !DILocation(line: 2331, column: 14, scope: !5400, inlinedAt: !5408)
!5430 = !DILocation(line: 0, scope: !5416, inlinedAt: !5408)
!5431 = !DILocation(line: 2331, column: 5, scope: !5400, inlinedAt: !5408)
!5432 = !DILocation(line: 2439, column: 13, scope: !5314)
!5433 = !DILocalVariable(name: "hdr", arg: 1, scope: !5434, file: !3, line: 2336, type: !92)
!5434 = distinct !DISubprogram(name: "clusterSetGossipEntry", scope: !3, file: !3, line: 2336, type: !5435, isLocal: false, isDefinition: true, scopeLine: 2336, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5437)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{null, !92, !177, !378}
!5437 = !{!5433, !5438, !5439, !5440}
!5438 = !DILocalVariable(name: "i", arg: 2, scope: !5434, file: !3, line: 2336, type: !177)
!5439 = !DILocalVariable(name: "n", arg: 3, scope: !5434, file: !3, line: 2336, type: !378)
!5440 = !DILocalVariable(name: "gossip", scope: !5434, file: !3, line: 2337, type: !73)
!5441 = !DILocation(line: 2336, column: 40, scope: !5434, inlinedAt: !5442)
!5442 = distinct !DILocation(line: 2442, column: 9, scope: !5314)
!5443 = !DILocation(line: 2336, column: 49, scope: !5434, inlinedAt: !5442)
!5444 = !DILocation(line: 2336, column: 65, scope: !5434, inlinedAt: !5442)
!5445 = !DILocation(line: 2338, column: 16, scope: !5434, inlinedAt: !5442)
!5446 = !DILocation(line: 2339, column: 12, scope: !5434, inlinedAt: !5442)
!5447 = !DILocation(line: 2339, column: 29, scope: !5434, inlinedAt: !5442)
!5448 = !DILocation(line: 2339, column: 5, scope: !5434, inlinedAt: !5442)
!5449 = !DILocation(line: 2340, column: 25, scope: !5434, inlinedAt: !5442)
!5450 = !DILocation(line: 2340, column: 13, scope: !5434, inlinedAt: !5442)
!5451 = !DILocation(line: 2340, column: 23, scope: !5434, inlinedAt: !5442)
!5452 = !{!3655, !709, i64 40}
!5453 = !DILocation(line: 2341, column: 29, scope: !5434, inlinedAt: !5442)
!5454 = !DILocation(line: 2341, column: 13, scope: !5434, inlinedAt: !5442)
!5455 = !DILocation(line: 2341, column: 27, scope: !5434, inlinedAt: !5442)
!5456 = !DILocation(line: 2342, column: 12, scope: !5434, inlinedAt: !5442)
!5457 = !DILocation(line: 2342, column: 23, scope: !5434, inlinedAt: !5442)
!5458 = !DILocation(line: 2342, column: 5, scope: !5434, inlinedAt: !5442)
!5459 = !DILocation(line: 2343, column: 20, scope: !5434, inlinedAt: !5442)
!5460 = !DILocation(line: 2343, column: 13, scope: !5434, inlinedAt: !5442)
!5461 = !DILocation(line: 2343, column: 18, scope: !5434, inlinedAt: !5442)
!5462 = !DILocation(line: 2344, column: 21, scope: !5434, inlinedAt: !5442)
!5463 = !DILocation(line: 2344, column: 13, scope: !5434, inlinedAt: !5442)
!5464 = !DILocation(line: 2344, column: 19, scope: !5434, inlinedAt: !5442)
!5465 = !DILocation(line: 2345, column: 21, scope: !5434, inlinedAt: !5442)
!5466 = !DILocation(line: 2345, column: 13, scope: !5434, inlinedAt: !5442)
!5467 = !DILocation(line: 2345, column: 19, scope: !5434, inlinedAt: !5442)
!5468 = !DILocation(line: 2346, column: 13, scope: !5434, inlinedAt: !5442)
!5469 = !DILocation(line: 2346, column: 22, scope: !5434, inlinedAt: !5442)
!5470 = !{!3655, !709, i64 100}
!5471 = !DILocation(line: 2347, column: 1, scope: !5434, inlinedAt: !5442)
!5472 = !DILocation(line: 2443, column: 19, scope: !5314)
!5473 = !DILocation(line: 2444, column: 20, scope: !5314)
!5474 = !DILocation(line: 0, scope: !5314)
!5475 = !DILocation(line: 0, scope: !5378)
!5476 = !DILocation(line: 2448, column: 9, scope: !5318)
!5477 = !DILocation(line: 2448, column: 9, scope: !5299)
!5478 = !DILocation(line: 2452, column: 41, scope: !5317)
!5479 = !DILocation(line: 2452, column: 50, scope: !5317)
!5480 = !DILocation(line: 2452, column: 14, scope: !5317)
!5481 = !DILocation(line: 2449, column: 23, scope: !5317)
!5482 = !DILocation(line: 2453, column: 9, scope: !5317)
!5483 = !DILocation(line: 2453, column: 21, scope: !5317)
!5484 = !DILocation(line: 2450, column: 20, scope: !5317)
!5485 = !DILocation(line: 2453, column: 35, scope: !5317)
!5486 = !DILocation(line: 2453, column: 59, scope: !5317)
!5487 = !DILocation(line: 2453, column: 43, scope: !5317)
!5488 = !DILocation(line: 2454, column: 33, scope: !5321)
!5489 = !DILocation(line: 2454, column: 26, scope: !5321)
!5490 = !DILocation(line: 2455, column: 23, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 2455, column: 17)
!5492 = !DILocation(line: 2455, column: 29, scope: !5491)
!5493 = !DILocation(line: 2455, column: 17, scope: !5321)
!5494 = distinct !{!5494, !5482, !5495}
!5495 = !DILocation(line: 2465, column: 9, scope: !5317)
!5496 = !DILocation(line: 2456, column: 29, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 2456, column: 17)
!5498 = !DILocation(line: 2456, column: 17, scope: !5321)
!5499 = !DILocation(line: 2457, column: 31, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5321, file: !3, line: 2457, column: 17)
!5501 = !DILocation(line: 2457, column: 17, scope: !5321)
!5502 = !DILocation(line: 2336, column: 40, scope: !5434, inlinedAt: !5503)
!5503 = distinct !DILocation(line: 2458, column: 13, scope: !5321)
!5504 = !DILocation(line: 2336, column: 49, scope: !5434, inlinedAt: !5503)
!5505 = !DILocation(line: 2336, column: 65, scope: !5434, inlinedAt: !5503)
!5506 = !DILocation(line: 2338, column: 16, scope: !5434, inlinedAt: !5503)
!5507 = !DILocation(line: 2339, column: 12, scope: !5434, inlinedAt: !5503)
!5508 = !DILocation(line: 2339, column: 29, scope: !5434, inlinedAt: !5503)
!5509 = !DILocation(line: 2339, column: 5, scope: !5434, inlinedAt: !5503)
!5510 = !DILocation(line: 2340, column: 25, scope: !5434, inlinedAt: !5503)
!5511 = !DILocation(line: 2340, column: 13, scope: !5434, inlinedAt: !5503)
!5512 = !DILocation(line: 2340, column: 23, scope: !5434, inlinedAt: !5503)
!5513 = !DILocation(line: 2341, column: 29, scope: !5434, inlinedAt: !5503)
!5514 = !DILocation(line: 2341, column: 13, scope: !5434, inlinedAt: !5503)
!5515 = !DILocation(line: 2341, column: 27, scope: !5434, inlinedAt: !5503)
!5516 = !DILocation(line: 2342, column: 12, scope: !5434, inlinedAt: !5503)
!5517 = !DILocation(line: 2342, column: 23, scope: !5434, inlinedAt: !5503)
!5518 = !DILocation(line: 2342, column: 5, scope: !5434, inlinedAt: !5503)
!5519 = !DILocation(line: 2343, column: 20, scope: !5434, inlinedAt: !5503)
!5520 = !DILocation(line: 2343, column: 13, scope: !5434, inlinedAt: !5503)
!5521 = !DILocation(line: 2343, column: 18, scope: !5434, inlinedAt: !5503)
!5522 = !DILocation(line: 2344, column: 21, scope: !5434, inlinedAt: !5503)
!5523 = !DILocation(line: 2344, column: 13, scope: !5434, inlinedAt: !5503)
!5524 = !DILocation(line: 2344, column: 19, scope: !5434, inlinedAt: !5503)
!5525 = !DILocation(line: 2345, column: 21, scope: !5434, inlinedAt: !5503)
!5526 = !DILocation(line: 2345, column: 13, scope: !5434, inlinedAt: !5503)
!5527 = !DILocation(line: 2345, column: 19, scope: !5434, inlinedAt: !5503)
!5528 = !DILocation(line: 2346, column: 13, scope: !5434, inlinedAt: !5503)
!5529 = !DILocation(line: 2346, column: 22, scope: !5434, inlinedAt: !5503)
!5530 = !DILocation(line: 2347, column: 1, scope: !5434, inlinedAt: !5503)
!5531 = !DILocation(line: 2460, column: 24, scope: !5321)
!5532 = !DILocation(line: 2464, column: 25, scope: !5321)
!5533 = !DILocation(line: 0, scope: !5299)
!5534 = !DILocation(line: 0, scope: !5491)
!5535 = !DILocation(line: 2466, column: 9, scope: !5317)
!5536 = !DILocation(line: 2467, column: 5, scope: !5317)
!5537 = !DILocation(line: 2472, column: 44, scope: !5299)
!5538 = !DILocation(line: 2472, column: 12, scope: !5299)
!5539 = !DILocation(line: 2473, column: 18, scope: !5299)
!5540 = !DILocation(line: 2473, column: 10, scope: !5299)
!5541 = !DILocation(line: 2473, column: 16, scope: !5299)
!5542 = !DILocation(line: 2474, column: 19, scope: !5299)
!5543 = !DILocation(line: 2474, column: 10, scope: !5299)
!5544 = !DILocation(line: 2474, column: 17, scope: !5299)
!5545 = !DILocation(line: 2475, column: 33, scope: !5299)
!5546 = !DILocation(line: 2475, column: 5, scope: !5299)
!5547 = !DILocation(line: 2476, column: 5, scope: !5299)
!5548 = !DILocation(line: 2477, column: 1, scope: !5299)
!5549 = distinct !DISubprogram(name: "clusterDelNodeSlots", scope: !3, file: !3, line: 3727, type: !857, isLocal: false, isDefinition: true, scopeLine: 3727, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5550)
!5550 = !{!5551, !5552, !5553}
!5551 = !DILocalVariable(name: "node", arg: 1, scope: !5549, file: !3, line: 3727, type: !378)
!5552 = !DILocalVariable(name: "deleted", scope: !5549, file: !3, line: 3728, type: !177)
!5553 = !DILocalVariable(name: "j", scope: !5549, file: !3, line: 3728, type: !177)
!5554 = !DILocation(line: 3727, column: 38, scope: !5549)
!5555 = !DILocation(line: 3728, column: 9, scope: !5549)
!5556 = !DILocation(line: 3728, column: 22, scope: !5549)
!5557 = !DILocation(line: 3730, column: 10, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 3730, column: 5)
!5559 = !DILocation(line: 3730, column: 5, scope: !5558)
!5560 = !DILocalVariable(name: "n", arg: 1, scope: !5561, file: !3, line: 3698, type: !378)
!5561 = distinct !DISubprogram(name: "clusterNodeGetSlotBit", scope: !3, file: !3, line: 3698, type: !1247, isLocal: false, isDefinition: true, scopeLine: 3698, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5562)
!5562 = !{!5560, !5563}
!5563 = !DILocalVariable(name: "slot", arg: 2, scope: !5561, file: !3, line: 3698, type: !177)
!5564 = !DILocation(line: 3698, column: 40, scope: !5561, inlinedAt: !5565)
!5565 = distinct !DILocation(line: 3731, column: 13, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 3731, column: 13)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 3730, column: 41)
!5568 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 3730, column: 5)
!5569 = !DILocation(line: 3698, column: 47, scope: !5561, inlinedAt: !5565)
!5570 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !5571)
!5571 = distinct !DILocation(line: 3699, column: 12, scope: !5561, inlinedAt: !5565)
!5572 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !5571)
!5573 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !5571)
!5574 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !5571)
!5575 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !5571)
!5576 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !5571)
!5577 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !5571)
!5578 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !5571)
!5579 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !5571)
!5580 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !5571)
!5581 = !DILocation(line: 3699, column: 5, scope: !5561, inlinedAt: !5565)
!5582 = !DILocation(line: 3731, column: 13, scope: !5567)
!5583 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !5584)
!5584 = distinct !DILocation(line: 3732, column: 13, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 3731, column: 44)
!5586 = !DILocation(line: 3717, column: 29, scope: !2242, inlinedAt: !5584)
!5587 = !DILocation(line: 3717, column: 22, scope: !2242, inlinedAt: !5584)
!5588 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !5584)
!5589 = !DILocation(line: 3719, column: 10, scope: !2251, inlinedAt: !5584)
!5590 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !5584)
!5591 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !5592)
!5592 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !5584)
!5593 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !5592)
!5594 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !5595)
!5595 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !5592)
!5596 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !5595)
!5597 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !5595)
!5598 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !5595)
!5599 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !5595)
!5600 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !5595)
!5601 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !5595)
!5602 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !5595)
!5603 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !5604)
!5604 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !5592)
!5605 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !5604)
!5606 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !5604)
!5607 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !5604)
!5608 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !5604)
!5609 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !5604)
!5610 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !5592)
!5611 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !5592)
!5612 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !5584)
!5613 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !5592)
!5614 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !5592)
!5615 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !5592)
!5616 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !5584)
!5617 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !5584)
!5618 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !5584)
!5619 = !DILocation(line: 3722, column: 5, scope: !2242, inlinedAt: !5584)
!5620 = !DILocation(line: 0, scope: !5585)
!5621 = !DILocation(line: 3723, column: 1, scope: !2242, inlinedAt: !5584)
!5622 = !DILocation(line: 3733, column: 20, scope: !5585)
!5623 = !DILocation(line: 3734, column: 9, scope: !5585)
!5624 = !DILocation(line: 0, scope: !5549)
!5625 = !DILocation(line: 3730, column: 37, scope: !5568)
!5626 = !DILocation(line: 3730, column: 5, scope: !5568)
!5627 = !DILocation(line: 3730, column: 19, scope: !5568)
!5628 = distinct !{!5628, !5559, !5629}
!5629 = !DILocation(line: 3735, column: 5, scope: !5558)
!5630 = !DILocation(line: 3736, column: 5, scope: !5549)
!5631 = distinct !DISubprogram(name: "clusterSendUpdate", scope: !3, file: !3, line: 2577, type: !5632, isLocal: false, isDefinition: true, scopeLine: 2577, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5634)
!5632 = !DISubroutineType(types: !5633)
!5633 = !{null, !179, !378}
!5634 = !{!5635, !5636, !5637, !5638}
!5635 = !DILocalVariable(name: "link", arg: 1, scope: !5631, file: !3, line: 2577, type: !179)
!5636 = !DILocalVariable(name: "node", arg: 2, scope: !5631, file: !3, line: 2577, type: !378)
!5637 = !DILocalVariable(name: "buf", scope: !5631, file: !3, line: 2578, type: !3352)
!5638 = !DILocalVariable(name: "hdr", scope: !5631, file: !3, line: 2579, type: !92)
!5639 = !DILocation(line: 2577, column: 37, scope: !5631)
!5640 = !DILocation(line: 2577, column: 56, scope: !5631)
!5641 = !DILocation(line: 2578, column: 5, scope: !5631)
!5642 = !DILocation(line: 2579, column: 17, scope: !5631)
!5643 = !DILocation(line: 2581, column: 14, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 2581, column: 9)
!5645 = !DILocation(line: 2581, column: 9, scope: !5631)
!5646 = !DILocation(line: 2578, column: 19, scope: !5631)
!5647 = !DILocation(line: 2582, column: 5, scope: !5631)
!5648 = !DILocation(line: 2583, column: 12, scope: !5631)
!5649 = !DILocation(line: 2583, column: 46, scope: !5631)
!5650 = !DILocation(line: 2583, column: 5, scope: !5631)
!5651 = !DILocation(line: 2584, column: 44, scope: !5631)
!5652 = !DILocation(line: 2584, column: 30, scope: !5631)
!5653 = !DILocation(line: 2584, column: 42, scope: !5631)
!5654 = !DILocation(line: 2585, column: 12, scope: !5631)
!5655 = !DILocation(line: 2585, column: 43, scope: !5631)
!5656 = !DILocation(line: 2585, column: 5, scope: !5631)
!5657 = !DILocation(line: 2586, column: 33, scope: !5631)
!5658 = !DILocation(line: 2586, column: 5, scope: !5631)
!5659 = !DILocation(line: 2587, column: 1, scope: !5631)
!5660 = !DILocation(line: 0, scope: !5644)
!5661 = distinct !DISubprogram(name: "clusterSendFailoverAuthIfNeeded", scope: !3, file: !3, line: 2707, type: !5662, isLocal: false, isDefinition: true, scopeLine: 2707, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5664)
!5662 = !DISubroutineType(types: !5663)
!5663 = !{null, !378, !92}
!5664 = !{!5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672}
!5665 = !DILocalVariable(name: "node", arg: 1, scope: !5661, file: !3, line: 2707, type: !378)
!5666 = !DILocalVariable(name: "request", arg: 2, scope: !5661, file: !3, line: 2707, type: !92)
!5667 = !DILocalVariable(name: "master", scope: !5661, file: !3, line: 2708, type: !378)
!5668 = !DILocalVariable(name: "requestCurrentEpoch", scope: !5661, file: !3, line: 2709, type: !104)
!5669 = !DILocalVariable(name: "requestConfigEpoch", scope: !5661, file: !3, line: 2710, type: !104)
!5670 = !DILocalVariable(name: "claimed_slots", scope: !5661, file: !3, line: 2711, type: !246)
!5671 = !DILocalVariable(name: "force_ack", scope: !5661, file: !3, line: 2712, type: !177)
!5672 = !DILocalVariable(name: "j", scope: !5661, file: !3, line: 2713, type: !177)
!5673 = !DILocation(line: 2707, column: 51, scope: !5661)
!5674 = !DILocation(line: 2707, column: 69, scope: !5661)
!5675 = !DILocation(line: 2708, column: 33, scope: !5661)
!5676 = !DILocation(line: 2708, column: 18, scope: !5661)
!5677 = !DILocation(line: 2709, column: 36, scope: !5661)
!5678 = !DILocation(line: 2709, column: 14, scope: !5661)
!5679 = !DILocation(line: 2710, column: 35, scope: !5661)
!5680 = !DILocation(line: 2710, column: 14, scope: !5661)
!5681 = !DILocation(line: 2711, column: 20, scope: !5661)
!5682 = !DILocation(line: 2712, column: 21, scope: !5661)
!5683 = !DILocation(line: 2712, column: 40, scope: !5661)
!5684 = !DILocation(line: 2719, column: 9, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2719, column: 9)
!5686 = !DILocation(line: 2719, column: 29, scope: !5685)
!5687 = !DILocation(line: 2719, column: 40, scope: !5685)
!5688 = !DILocation(line: 2719, column: 49, scope: !5685)
!5689 = !DILocation(line: 2719, column: 9, scope: !5661)
!5690 = !DILocation(line: 2725, column: 38, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2725, column: 9)
!5692 = !DILocation(line: 2725, column: 47, scope: !5691)
!5693 = !DILocation(line: 2725, column: 29, scope: !5691)
!5694 = !DILocation(line: 2725, column: 9, scope: !5661)
!5695 = !DILocation(line: 2728, column: 13, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 2725, column: 61)
!5697 = !DILocation(line: 2726, column: 9, scope: !5696)
!5698 = !DILocation(line: 2731, column: 9, scope: !5696)
!5699 = !DILocation(line: 2735, column: 25, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2735, column: 9)
!5701 = !DILocation(line: 2735, column: 39, scope: !5700)
!5702 = !DILocation(line: 2735, column: 9, scope: !5661)
!5703 = !DILocation(line: 2738, column: 17, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 2735, column: 72)
!5705 = !DILocation(line: 2736, column: 9, scope: !5704)
!5706 = !DILocation(line: 2740, column: 9, scope: !5704)
!5707 = !DILocation(line: 2746, column: 9, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2746, column: 9)
!5709 = !DILocation(line: 2746, column: 38, scope: !5708)
!5710 = !DILocation(line: 2746, column: 28, scope: !5708)
!5711 = !DILocation(line: 2747, column: 11, scope: !5708)
!5712 = !DILocation(line: 2747, column: 34, scope: !5708)
!5713 = !DILocation(line: 2747, column: 30, scope: !5708)
!5714 = !DILocation(line: 2749, column: 13, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 2748, column: 5)
!5716 = !DILocation(line: 2749, column: 13, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 2749, column: 13)
!5718 = !DILocation(line: 2752, column: 21, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 2749, column: 33)
!5720 = !DILocation(line: 2750, column: 13, scope: !5719)
!5721 = !DILocation(line: 2753, column: 9, scope: !5719)
!5722 = !DILocation(line: 2753, column: 20, scope: !5717)
!5723 = !DILocation(line: 2756, column: 21, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 2753, column: 36)
!5725 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 2753, column: 20)
!5726 = !DILocation(line: 2754, column: 13, scope: !5724)
!5727 = !DILocation(line: 2757, column: 9, scope: !5724)
!5728 = !DILocation(line: 2757, column: 21, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 2757, column: 20)
!5730 = !DILocation(line: 2757, column: 20, scope: !5725)
!5731 = !DILocation(line: 2760, column: 21, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 2757, column: 41)
!5733 = !DILocation(line: 2758, column: 13, scope: !5732)
!5734 = !DILocation(line: 2761, column: 9, scope: !5732)
!5735 = !DILocation(line: 0, scope: !5719)
!5736 = !DILocation(line: 2762, column: 9, scope: !5715)
!5737 = !DILocation(line: 2768, column: 9, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2768, column: 9)
!5739 = !DILocation(line: 2768, column: 26, scope: !5738)
!5740 = !DILocation(line: 2768, column: 35, scope: !5738)
!5741 = !DILocation(line: 2768, column: 18, scope: !5738)
!5742 = !DILocation(line: 2768, column: 55, scope: !5738)
!5743 = !DILocation(line: 2768, column: 76, scope: !5738)
!5744 = !DILocation(line: 2768, column: 46, scope: !5738)
!5745 = !DILocation(line: 2768, column: 9, scope: !5661)
!5746 = !DILocation(line: 2773, column: 17, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 2769, column: 5)
!5748 = !DILocation(line: 2775, column: 31, scope: !5747)
!5749 = !DILocation(line: 2775, column: 48, scope: !5747)
!5750 = !DILocation(line: 2775, column: 57, scope: !5747)
!5751 = !DILocation(line: 2774, column: 61, scope: !5747)
!5752 = !DILocation(line: 2770, column: 9, scope: !5747)
!5753 = !DILocation(line: 2776, column: 9, scope: !5747)
!5754 = !DILocation(line: 2713, column: 9, scope: !5661)
!5755 = !DILocation(line: 2782, column: 10, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5661, file: !3, line: 2782, column: 5)
!5757 = !DILocation(line: 2782, column: 5, scope: !5756)
!5758 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !5759)
!5759 = distinct !DILocation(line: 2783, column: 13, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 2783, column: 13)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 2782, column: 41)
!5762 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 2782, column: 5)
!5763 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !5759)
!5764 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !5759)
!5765 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !5759)
!5766 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !5759)
!5767 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !5759)
!5768 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !5759)
!5769 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !5759)
!5770 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !5759)
!5771 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !5759)
!5772 = !DILocation(line: 2783, column: 13, scope: !5761)
!5773 = !DILocation(line: 2784, column: 13, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 2784, column: 13)
!5775 = !DILocation(line: 2784, column: 38, scope: !5774)
!5776 = !DILocation(line: 2784, column: 46, scope: !5774)
!5777 = !DILocation(line: 2785, column: 39, scope: !5774)
!5778 = !DILocation(line: 2785, column: 51, scope: !5774)
!5779 = !DILocation(line: 2784, column: 13, scope: !5761)
!5780 = !DILocation(line: 2795, column: 17, scope: !5761)
!5781 = !DILocation(line: 2792, column: 9, scope: !5761)
!5782 = !DILocation(line: 2798, column: 9, scope: !5761)
!5783 = !DILocation(line: 2782, column: 37, scope: !5762)
!5784 = !DILocation(line: 2782, column: 5, scope: !5762)
!5785 = !DILocation(line: 2782, column: 19, scope: !5762)
!5786 = distinct !{!5786, !5757, !5787}
!5787 = !DILocation(line: 2799, column: 5, scope: !5756)
!5788 = !DILocation(line: 2802, column: 53, scope: !5661)
!5789 = !DILocation(line: 2802, column: 21, scope: !5661)
!5790 = !DILocation(line: 2802, column: 35, scope: !5661)
!5791 = !DILocation(line: 2803, column: 33, scope: !5661)
!5792 = !DILocation(line: 2803, column: 11, scope: !5661)
!5793 = !DILocation(line: 2803, column: 20, scope: !5661)
!5794 = !DILocation(line: 2803, column: 31, scope: !5661)
!5795 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !5796)
!5796 = distinct !DILocation(line: 2804, column: 5, scope: !5661)
!5797 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !5796)
!5798 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !5796)
!5799 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !5796)
!5800 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !5796)
!5801 = !DILocalVariable(name: "node", arg: 1, scope: !5802, file: !3, line: 2681, type: !378)
!5802 = distinct !DISubprogram(name: "clusterSendFailoverAuth", scope: !3, file: !3, line: 2681, type: !2374, isLocal: false, isDefinition: true, scopeLine: 2681, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5803)
!5803 = !{!5801, !5804, !5805, !5806}
!5804 = !DILocalVariable(name: "buf", scope: !5802, file: !3, line: 2682, type: !3352)
!5805 = !DILocalVariable(name: "hdr", scope: !5802, file: !3, line: 2683, type: !92)
!5806 = !DILocalVariable(name: "totlen", scope: !5802, file: !3, line: 2684, type: !43)
!5807 = !DILocation(line: 2681, column: 43, scope: !5802, inlinedAt: !5808)
!5808 = distinct !DILocation(line: 2805, column: 5, scope: !5661)
!5809 = !DILocation(line: 2682, column: 5, scope: !5802, inlinedAt: !5808)
!5810 = !DILocation(line: 2683, column: 17, scope: !5802, inlinedAt: !5808)
!5811 = !DILocation(line: 2686, column: 16, scope: !5812, inlinedAt: !5808)
!5812 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 2686, column: 9)
!5813 = !DILocation(line: 2686, column: 10, scope: !5812, inlinedAt: !5808)
!5814 = !DILocation(line: 2686, column: 9, scope: !5802, inlinedAt: !5808)
!5815 = !DILocation(line: 2686, column: 22, scope: !5812, inlinedAt: !5808)
!5816 = !DILocation(line: 2682, column: 19, scope: !5802, inlinedAt: !5808)
!5817 = !DILocation(line: 2687, column: 5, scope: !5802, inlinedAt: !5808)
!5818 = !DILocation(line: 2684, column: 14, scope: !5802, inlinedAt: !5808)
!5819 = !DILocation(line: 2689, column: 19, scope: !5802, inlinedAt: !5808)
!5820 = !DILocation(line: 2689, column: 10, scope: !5802, inlinedAt: !5808)
!5821 = !DILocation(line: 2689, column: 17, scope: !5802, inlinedAt: !5808)
!5822 = !DILocation(line: 2690, column: 30, scope: !5802, inlinedAt: !5808)
!5823 = !DILocation(line: 2690, column: 5, scope: !5802, inlinedAt: !5808)
!5824 = !DILocation(line: 2691, column: 1, scope: !5802, inlinedAt: !5808)
!5825 = !DILocation(line: 2807, column: 49, scope: !5661)
!5826 = !DILocation(line: 2807, column: 9, scope: !5661)
!5827 = !DILocation(line: 2807, column: 58, scope: !5661)
!5828 = !DILocation(line: 2806, column: 5, scope: !5661)
!5829 = !DILocation(line: 2808, column: 1, scope: !5661)
!5830 = !DILocation(line: 0, scope: !5685)
!5831 = !DILocation(line: 2114, column: 37, scope: !2765)
!5832 = !DILocation(line: 2115, column: 5, scope: !2765)
!5833 = !DILocation(line: 2116, column: 1, scope: !2765)
!5834 = distinct !DISubprogram(name: "clusterWriteHandler", scope: !3, file: !3, line: 2121, type: !2024, isLocal: false, isDefinition: true, scopeLine: 2121, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5835)
!5835 = !{!5836, !5837, !5838, !5839, !5840, !5841}
!5836 = !DILocalVariable(name: "el", arg: 1, scope: !5834, file: !3, line: 2121, type: !2026)
!5837 = !DILocalVariable(name: "fd", arg: 2, scope: !5834, file: !3, line: 2121, type: !177)
!5838 = !DILocalVariable(name: "privdata", arg: 3, scope: !5834, file: !3, line: 2121, type: !6)
!5839 = !DILocalVariable(name: "mask", arg: 4, scope: !5834, file: !3, line: 2121, type: !177)
!5840 = !DILocalVariable(name: "link", scope: !5834, file: !3, line: 2122, type: !179)
!5841 = !DILocalVariable(name: "nwritten", scope: !5834, file: !3, line: 2123, type: !14)
!5842 = !DILocation(line: 2121, column: 39, scope: !5834)
!5843 = !DILocation(line: 2121, column: 47, scope: !5834)
!5844 = !DILocation(line: 2121, column: 57, scope: !5834)
!5845 = !DILocation(line: 2121, column: 71, scope: !5834)
!5846 = !DILocation(line: 2122, column: 25, scope: !5834)
!5847 = !DILocation(line: 2122, column: 18, scope: !5834)
!5848 = !DILocation(line: 2127, column: 32, scope: !5834)
!5849 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !5850)
!5850 = distinct !DILocation(line: 2127, column: 40, scope: !5834)
!5851 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !5850)
!5852 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !5850)
!5853 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !5850)
!5854 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !5850)
!5855 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !5850)
!5856 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !5850)
!5857 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !5850)
!5858 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !5850)
!5859 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !5850)
!5860 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !5850)
!5861 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !5850)
!5862 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !5850)
!5863 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !5850)
!5864 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !5850)
!5865 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !5850)
!5866 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !5850)
!5867 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !5850)
!5868 = !DILocation(line: 0, scope: !1496, inlinedAt: !5850)
!5869 = !DILocation(line: 0, scope: !5834)
!5870 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !5850)
!5871 = !DILocation(line: 2127, column: 16, scope: !5834)
!5872 = !DILocation(line: 2123, column: 13, scope: !5834)
!5873 = !DILocation(line: 2128, column: 18, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2128, column: 9)
!5875 = !DILocation(line: 2128, column: 9, scope: !5834)
!5876 = !DILocation(line: 2130, column: 23, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 2128, column: 24)
!5878 = !DILocation(line: 2130, column: 13, scope: !5877)
!5879 = !DILocation(line: 2130, column: 41, scope: !5877)
!5880 = !DILocation(line: 2130, column: 32, scope: !5877)
!5881 = !DILocation(line: 2129, column: 9, scope: !5877)
!5882 = !DILocation(line: 2114, column: 37, scope: !2765, inlinedAt: !5883)
!5883 = distinct !DILocation(line: 2131, column: 9, scope: !5877)
!5884 = !DILocation(line: 2115, column: 5, scope: !2765, inlinedAt: !5883)
!5885 = !DILocation(line: 2132, column: 9, scope: !5877)
!5886 = !DILocation(line: 2134, column: 20, scope: !5834)
!5887 = !DILocation(line: 2134, column: 5, scope: !5834)
!5888 = !DILocation(line: 2135, column: 22, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 2135, column: 9)
!5890 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !5891)
!5891 = distinct !DILocation(line: 2135, column: 9, scope: !5889)
!5892 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !5891)
!5893 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !5891)
!5894 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !5891)
!5895 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !5891)
!5896 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !5891)
!5897 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !5891)
!5898 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !5891)
!5899 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !5891)
!5900 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !5891)
!5901 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !5891)
!5902 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !5891)
!5903 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !5891)
!5904 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !5891)
!5905 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !5891)
!5906 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !5891)
!5907 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !5891)
!5908 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !5891)
!5909 = !DILocation(line: 101, column: 5, scope: !1483, inlinedAt: !5891)
!5910 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !5891)
!5911 = !DILocation(line: 2135, column: 9, scope: !5834)
!5912 = !DILocation(line: 0, scope: !1496, inlinedAt: !5891)
!5913 = !DILocation(line: 0, scope: !5889)
!5914 = !DILocation(line: 2135, column: 30, scope: !5889)
!5915 = !DILocation(line: 2136, column: 34, scope: !5889)
!5916 = !DILocation(line: 2136, column: 44, scope: !5889)
!5917 = !DILocation(line: 2136, column: 9, scope: !5889)
!5918 = !DILocation(line: 0, scope: !5877)
!5919 = !DILocation(line: 2137, column: 1, scope: !5834)
!5920 = distinct !DISubprogram(name: "clusterSendMessage", scope: !3, file: !3, line: 2210, type: !5921, isLocal: false, isDefinition: true, scopeLine: 2210, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5923)
!5921 = !DISubroutineType(types: !5922)
!5922 = !{null, !179, !246, !1465}
!5923 = !{!5924, !5925, !5926, !5927, !5928}
!5924 = !DILocalVariable(name: "link", arg: 1, scope: !5920, file: !3, line: 2210, type: !179)
!5925 = !DILocalVariable(name: "msg", arg: 2, scope: !5920, file: !3, line: 2210, type: !246)
!5926 = !DILocalVariable(name: "msglen", arg: 3, scope: !5920, file: !3, line: 2210, type: !1465)
!5927 = !DILocalVariable(name: "hdr", scope: !5920, file: !3, line: 2218, type: !92)
!5928 = !DILocalVariable(name: "type", scope: !5920, file: !3, line: 2219, type: !33)
!5929 = !DILocation(line: 2210, column: 38, scope: !5920)
!5930 = !DILocation(line: 2210, column: 59, scope: !5920)
!5931 = !DILocation(line: 2210, column: 71, scope: !5920)
!5932 = !DILocation(line: 2211, column: 22, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2211, column: 9)
!5934 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !5935)
!5935 = distinct !DILocation(line: 2211, column: 9, scope: !5933)
!5936 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !5935)
!5937 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !5935)
!5938 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !5935)
!5939 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !5935)
!5940 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !5935)
!5941 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !5935)
!5942 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !5935)
!5943 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !5935)
!5944 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !5935)
!5945 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !5935)
!5946 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !5935)
!5947 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !5935)
!5948 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !5935)
!5949 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !5935)
!5950 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !5935)
!5951 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !5935)
!5952 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !5935)
!5953 = !DILocation(line: 0, scope: !1496, inlinedAt: !5935)
!5954 = !DILocation(line: 0, scope: !5933)
!5955 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !5935)
!5956 = !DILocation(line: 2211, column: 30, scope: !5933)
!5957 = !DILocation(line: 2211, column: 45, scope: !5933)
!5958 = !DILocation(line: 2211, column: 35, scope: !5933)
!5959 = !DILocation(line: 2212, column: 34, scope: !5933)
!5960 = !DILocation(line: 2212, column: 43, scope: !5933)
!5961 = !DILocation(line: 2213, column: 41, scope: !5933)
!5962 = !DILocation(line: 2212, column: 9, scope: !5933)
!5963 = !DILocation(line: 2215, column: 36, scope: !5920)
!5964 = !DILocation(line: 2215, column: 20, scope: !5920)
!5965 = !DILocation(line: 2215, column: 18, scope: !5920)
!5966 = !DILocation(line: 2218, column: 17, scope: !5920)
!5967 = !DILocation(line: 2219, column: 21, scope: !5920)
!5968 = !DILocation(line: 2219, column: 14, scope: !5920)
!5969 = !DILocation(line: 2220, column: 14, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2220, column: 9)
!5971 = !DILocation(line: 2220, column: 9, scope: !5920)
!5972 = !DILocation(line: 2221, column: 16, scope: !5970)
!5973 = !DILocation(line: 2221, column: 9, scope: !5970)
!5974 = !DILocation(line: 2221, column: 54, scope: !5970)
!5975 = !DILocation(line: 2222, column: 1, scope: !5920)
!5976 = distinct !DISubprogram(name: "clusterBroadcastMessage", scope: !3, file: !3, line: 2230, type: !5977, isLocal: false, isDefinition: true, scopeLine: 2230, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !5979)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{null, !6, !1465}
!5979 = !{!5980, !5981, !5982, !5983, !5984}
!5980 = !DILocalVariable(name: "buf", arg: 1, scope: !5976, file: !3, line: 2230, type: !6)
!5981 = !DILocalVariable(name: "len", arg: 2, scope: !5976, file: !3, line: 2230, type: !1465)
!5982 = !DILocalVariable(name: "di", scope: !5976, file: !3, line: 2231, type: !297)
!5983 = !DILocalVariable(name: "de", scope: !5976, file: !3, line: 2232, type: !340)
!5984 = !DILocalVariable(name: "node", scope: !5985, file: !3, line: 2236, type: !378)
!5985 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 2235, column: 40)
!5986 = !DILocation(line: 2230, column: 36, scope: !5976)
!5987 = !DILocation(line: 2230, column: 48, scope: !5976)
!5988 = !DILocation(line: 2234, column: 37, scope: !5976)
!5989 = !DILocation(line: 2234, column: 46, scope: !5976)
!5990 = !DILocation(line: 2234, column: 10, scope: !5976)
!5991 = !DILocation(line: 2231, column: 19, scope: !5976)
!5992 = !DILocation(line: 2235, column: 5, scope: !5976)
!5993 = !DILocation(line: 2235, column: 17, scope: !5976)
!5994 = !DILocation(line: 2232, column: 16, scope: !5976)
!5995 = !DILocation(line: 2235, column: 31, scope: !5976)
!5996 = !DILocation(line: 2236, column: 29, scope: !5985)
!5997 = !DILocation(line: 2236, column: 22, scope: !5985)
!5998 = !DILocation(line: 2238, column: 20, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2238, column: 13)
!6000 = !DILocation(line: 2238, column: 14, scope: !5999)
!6001 = !DILocation(line: 2238, column: 13, scope: !5985)
!6002 = distinct !{!6002, !5992, !6003}
!6003 = !DILocation(line: 2242, column: 5, scope: !5976)
!6004 = !DILocation(line: 2239, column: 19, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2239, column: 13)
!6006 = !DILocation(line: 2239, column: 25, scope: !6005)
!6007 = !DILocation(line: 2239, column: 13, scope: !5985)
!6008 = !DILocation(line: 2241, column: 9, scope: !5985)
!6009 = !DILocation(line: 0, scope: !5999)
!6010 = !DILocation(line: 2243, column: 5, scope: !5976)
!6011 = !DILocation(line: 2244, column: 1, scope: !5976)
!6012 = distinct !DISubprogram(name: "clusterBuildMessageHdr", scope: !3, file: !3, line: 2248, type: !6013, isLocal: false, isDefinition: true, scopeLine: 2248, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6015)
!6013 = !DISubroutineType(types: !6014)
!6014 = !{null, !92, !177}
!6015 = !{!6016, !6017, !6018, !6019, !6020, !6021, !6022}
!6016 = !DILocalVariable(name: "hdr", arg: 1, scope: !6012, file: !3, line: 2248, type: !92)
!6017 = !DILocalVariable(name: "type", arg: 2, scope: !6012, file: !3, line: 2248, type: !177)
!6018 = !DILocalVariable(name: "totlen", scope: !6012, file: !3, line: 2249, type: !177)
!6019 = !DILocalVariable(name: "offset", scope: !6012, file: !3, line: 2250, type: !104)
!6020 = !DILocalVariable(name: "master", scope: !6012, file: !3, line: 2251, type: !378)
!6021 = !DILocalVariable(name: "announced_port", scope: !6012, file: !3, line: 2279, type: !177)
!6022 = !DILocalVariable(name: "announced_cport", scope: !6012, file: !3, line: 2281, type: !177)
!6023 = !DILocation(line: 2248, column: 41, scope: !6012)
!6024 = !DILocation(line: 2248, column: 50, scope: !6012)
!6025 = !DILocation(line: 2249, column: 9, scope: !6012)
!6026 = !DILocation(line: 2257, column: 15, scope: !6012)
!6027 = !DILocation(line: 2257, column: 35, scope: !6012)
!6028 = !DILocation(line: 2257, column: 46, scope: !6012)
!6029 = !DILocation(line: 2257, column: 38, scope: !6012)
!6030 = !DILocation(line: 2257, column: 14, scope: !6012)
!6031 = !DILocation(line: 2251, column: 18, scope: !6012)
!6032 = !DILocation(line: 2260, column: 12, scope: !6012)
!6033 = !DILocation(line: 2260, column: 5, scope: !6012)
!6034 = !DILocation(line: 2261, column: 16, scope: !6012)
!6035 = !DILocation(line: 2261, column: 10, scope: !6012)
!6036 = !DILocation(line: 2261, column: 14, scope: !6012)
!6037 = !DILocation(line: 2262, column: 17, scope: !6012)
!6038 = !DILocation(line: 2263, column: 5, scope: !6012)
!6039 = !DILocation(line: 2263, column: 17, scope: !6012)
!6040 = !DILocation(line: 2264, column: 5, scope: !6012)
!6041 = !DILocation(line: 2264, column: 17, scope: !6012)
!6042 = !DILocation(line: 2265, column: 5, scope: !6012)
!6043 = !DILocation(line: 2265, column: 17, scope: !6012)
!6044 = !DILocation(line: 2266, column: 17, scope: !6012)
!6045 = !DILocation(line: 2266, column: 10, scope: !6012)
!6046 = !DILocation(line: 2266, column: 15, scope: !6012)
!6047 = !DILocation(line: 2267, column: 12, scope: !6012)
!6048 = !DILocation(line: 2267, column: 24, scope: !6012)
!6049 = !DILocation(line: 2267, column: 5, scope: !6012)
!6050 = !DILocation(line: 2272, column: 12, scope: !6012)
!6051 = !DILocation(line: 2272, column: 5, scope: !6012)
!6052 = !DILocation(line: 2273, column: 16, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2273, column: 9)
!6054 = !DILocation(line: 2273, column: 9, scope: !6053)
!6055 = !DILocation(line: 2273, column: 9, scope: !6012)
!6056 = !DILocation(line: 2274, column: 9, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 2273, column: 37)
!6058 = !DILocation(line: 2275, column: 9, scope: !6057)
!6059 = !DILocation(line: 2275, column: 37, scope: !6057)
!6060 = !DILocation(line: 2276, column: 5, scope: !6057)
!6061 = !DILocation(line: 2279, column: 33, scope: !6012)
!6062 = !DILocation(line: 2279, column: 26, scope: !6012)
!6063 = !DILocation(line: 2280, column: 64, scope: !6012)
!6064 = !DILocation(line: 2279, column: 9, scope: !6012)
!6065 = !DILocation(line: 2281, column: 34, scope: !6012)
!6066 = !DILocation(line: 2281, column: 27, scope: !6012)
!6067 = !DILocation(line: 2283, column: 40, scope: !6012)
!6068 = !DILocation(line: 2281, column: 9, scope: !6012)
!6069 = !DILocation(line: 2285, column: 12, scope: !6012)
!6070 = !DILocation(line: 2285, column: 25, scope: !6012)
!6071 = !DILocation(line: 2285, column: 5, scope: !6012)
!6072 = !DILocation(line: 2286, column: 12, scope: !6012)
!6073 = !DILocation(line: 2286, column: 5, scope: !6012)
!6074 = !DILocation(line: 2287, column: 9, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2287, column: 9)
!6076 = !DILocation(line: 2287, column: 17, scope: !6075)
!6077 = !DILocation(line: 2287, column: 25, scope: !6075)
!6078 = !DILocation(line: 2287, column: 9, scope: !6012)
!6079 = !DILocation(line: 2288, column: 29, scope: !6075)
!6080 = !DILocation(line: 2288, column: 9, scope: !6075)
!6081 = !DILocation(line: 2289, column: 17, scope: !6012)
!6082 = !DILocation(line: 2289, column: 10, scope: !6012)
!6083 = !DILocation(line: 2289, column: 15, scope: !6012)
!6084 = !DILocation(line: 2290, column: 18, scope: !6012)
!6085 = !DILocation(line: 2290, column: 10, scope: !6012)
!6086 = !DILocation(line: 2290, column: 16, scope: !6012)
!6087 = !DILocation(line: 2291, column: 18, scope: !6012)
!6088 = !DILocation(line: 2291, column: 10, scope: !6012)
!6089 = !DILocation(line: 2291, column: 16, scope: !6012)
!6090 = !DILocation(line: 2292, column: 25, scope: !6012)
!6091 = !DILocation(line: 2292, column: 34, scope: !6012)
!6092 = !DILocation(line: 2292, column: 18, scope: !6012)
!6093 = !DILocation(line: 2292, column: 10, scope: !6012)
!6094 = !DILocation(line: 2292, column: 16, scope: !6012)
!6095 = !{!2759, !710, i64 2252}
!6096 = !DILocation(line: 2295, column: 25, scope: !6012)
!6097 = !DILocation(line: 2295, column: 10, scope: !6012)
!6098 = !DILocation(line: 2295, column: 23, scope: !6012)
!6099 = !DILocation(line: 2296, column: 24, scope: !6012)
!6100 = !DILocation(line: 2296, column: 10, scope: !6012)
!6101 = !DILocation(line: 2296, column: 22, scope: !6012)
!6102 = !DILocation(line: 2299, column: 9, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2299, column: 9)
!6104 = !DILocation(line: 2299, column: 9, scope: !6012)
!6105 = !DILocation(line: 2300, column: 18, scope: !6103)
!6106 = !DILocation(line: 2250, column: 14, scope: !6012)
!6107 = !DILocation(line: 2300, column: 9, scope: !6103)
!6108 = !DILocation(line: 2302, column: 25, scope: !6103)
!6109 = !{!789, !790, i64 2352}
!6110 = !DILocation(line: 0, scope: !6103)
!6111 = !DILocation(line: 2303, column: 19, scope: !6012)
!6112 = !DILocation(line: 2303, column: 10, scope: !6012)
!6113 = !DILocation(line: 2303, column: 17, scope: !6012)
!6114 = !DILocation(line: 2306, column: 9, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2306, column: 9)
!6116 = !DILocation(line: 2306, column: 30, scope: !6115)
!6117 = !DILocation(line: 2306, column: 40, scope: !6115)
!6118 = !DILocation(line: 2306, column: 49, scope: !6115)
!6119 = !DILocation(line: 2306, column: 33, scope: !6115)
!6120 = !DILocation(line: 2306, column: 9, scope: !6012)
!6121 = !DILocation(line: 2307, column: 9, scope: !6115)
!6122 = !DILocation(line: 2307, column: 24, scope: !6115)
!6123 = !DILocation(line: 2311, column: 14, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 2311, column: 9)
!6125 = !DILocation(line: 2311, column: 9, scope: !6012)
!6126 = !DILocation(line: 2314, column: 21, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 2314, column: 16)
!6128 = !DILocation(line: 2314, column: 16, scope: !6124)
!6129 = !DILocation(line: 0, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 2311, column: 39)
!6131 = !DILocation(line: 2318, column: 19, scope: !6012)
!6132 = !DILocation(line: 0, scope: !6012)
!6133 = !DILocation(line: 2318, column: 10, scope: !6012)
!6134 = !DILocation(line: 2318, column: 17, scope: !6012)
!6135 = !DILocation(line: 2320, column: 1, scope: !6012)
!6136 = !DILocation(line: 2325, column: 46, scope: !5400)
!6137 = !DILocation(line: 2325, column: 55, scope: !5400)
!6138 = !DILocation(line: 2325, column: 75, scope: !5400)
!6139 = !DILocation(line: 2326, column: 9, scope: !5400)
!6140 = !DILocation(line: 2327, column: 10, scope: !5414)
!6141 = !DILocation(line: 2328, column: 25, scope: !5419)
!6142 = !DILocation(line: 2328, column: 35, scope: !5419)
!6143 = !DILocation(line: 2327, column: 19, scope: !5416)
!6144 = !DILocation(line: 2328, column: 20, scope: !5419)
!6145 = !DILocation(line: 2328, column: 13, scope: !5419)
!6146 = !DILocation(line: 2329, column: 34, scope: !5419)
!6147 = !DILocation(line: 2328, column: 13, scope: !5420)
!6148 = !DILocation(line: 2327, column: 29, scope: !5416)
!6149 = !DILocation(line: 2327, column: 5, scope: !5416)
!6150 = !DILocation(line: 2331, column: 14, scope: !5400)
!6151 = !DILocation(line: 0, scope: !5416)
!6152 = !DILocation(line: 2331, column: 5, scope: !5400)
!6153 = !DILocation(line: 2336, column: 40, scope: !5434)
!6154 = !DILocation(line: 2336, column: 49, scope: !5434)
!6155 = !DILocation(line: 2336, column: 65, scope: !5434)
!6156 = !DILocation(line: 2338, column: 21, scope: !5434)
!6157 = !DILocation(line: 2338, column: 31, scope: !5434)
!6158 = !DILocation(line: 2338, column: 16, scope: !5434)
!6159 = !DILocation(line: 2339, column: 12, scope: !5434)
!6160 = !DILocation(line: 2339, column: 29, scope: !5434)
!6161 = !DILocation(line: 2339, column: 5, scope: !5434)
!6162 = !DILocation(line: 2340, column: 25, scope: !5434)
!6163 = !DILocation(line: 2340, column: 13, scope: !5434)
!6164 = !DILocation(line: 2340, column: 23, scope: !5434)
!6165 = !DILocation(line: 2341, column: 29, scope: !5434)
!6166 = !DILocation(line: 2341, column: 13, scope: !5434)
!6167 = !DILocation(line: 2341, column: 27, scope: !5434)
!6168 = !DILocation(line: 2342, column: 12, scope: !5434)
!6169 = !DILocation(line: 2342, column: 23, scope: !5434)
!6170 = !DILocation(line: 2342, column: 5, scope: !5434)
!6171 = !DILocation(line: 2343, column: 20, scope: !5434)
!6172 = !DILocation(line: 2343, column: 13, scope: !5434)
!6173 = !DILocation(line: 2343, column: 18, scope: !5434)
!6174 = !DILocation(line: 2344, column: 21, scope: !5434)
!6175 = !DILocation(line: 2344, column: 13, scope: !5434)
!6176 = !DILocation(line: 2344, column: 19, scope: !5434)
!6177 = !DILocation(line: 2345, column: 21, scope: !5434)
!6178 = !DILocation(line: 2345, column: 13, scope: !5434)
!6179 = !DILocation(line: 2345, column: 19, scope: !5434)
!6180 = !DILocation(line: 2346, column: 13, scope: !5434)
!6181 = !DILocation(line: 2346, column: 22, scope: !5434)
!6182 = !DILocation(line: 2347, column: 1, scope: !5434)
!6183 = distinct !DISubprogram(name: "clusterBroadcastPong", scope: !3, file: !3, line: 2495, type: !282, isLocal: false, isDefinition: true, scopeLine: 2495, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6184)
!6184 = !{!6185, !6186, !6187, !6188, !6190}
!6185 = !DILocalVariable(name: "target", arg: 1, scope: !6183, file: !3, line: 2495, type: !177)
!6186 = !DILocalVariable(name: "di", scope: !6183, file: !3, line: 2496, type: !297)
!6187 = !DILocalVariable(name: "de", scope: !6183, file: !3, line: 2497, type: !340)
!6188 = !DILocalVariable(name: "node", scope: !6189, file: !3, line: 2501, type: !378)
!6189 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 2500, column: 40)
!6190 = !DILocalVariable(name: "local_slave", scope: !6191, file: !3, line: 2506, type: !177)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 2505, column: 55)
!6192 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2505, column: 13)
!6193 = !DILocation(line: 2495, column: 31, scope: !6183)
!6194 = !DILocation(line: 2499, column: 37, scope: !6183)
!6195 = !DILocation(line: 2499, column: 46, scope: !6183)
!6196 = !DILocation(line: 2499, column: 10, scope: !6183)
!6197 = !DILocation(line: 2496, column: 19, scope: !6183)
!6198 = !DILocation(line: 2500, column: 5, scope: !6183)
!6199 = !DILocation(line: 2500, column: 17, scope: !6183)
!6200 = !DILocation(line: 2497, column: 16, scope: !6183)
!6201 = !DILocation(line: 2500, column: 31, scope: !6183)
!6202 = !DILocation(line: 2501, column: 29, scope: !6189)
!6203 = !DILocation(line: 2501, column: 22, scope: !6189)
!6204 = !DILocation(line: 2503, column: 20, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2503, column: 13)
!6206 = !DILocation(line: 2503, column: 14, scope: !6205)
!6207 = !DILocation(line: 2503, column: 13, scope: !6189)
!6208 = distinct !{!6208, !6198, !6209}
!6209 = !DILocation(line: 2512, column: 5, scope: !6183)
!6210 = !DILocation(line: 2504, column: 21, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 2504, column: 13)
!6212 = !DILocation(line: 2504, column: 18, scope: !6211)
!6213 = !DILocation(line: 2504, column: 28, scope: !6211)
!6214 = !DILocation(line: 2504, column: 31, scope: !6211)
!6215 = !DILocation(line: 2504, column: 13, scope: !6189)
!6216 = !DILocation(line: 2505, column: 13, scope: !6189)
!6217 = !DILocation(line: 2507, column: 17, scope: !6191)
!6218 = !DILocation(line: 2507, column: 35, scope: !6191)
!6219 = !DILocation(line: 2507, column: 44, scope: !6191)
!6220 = !DILocation(line: 2507, column: 38, scope: !6191)
!6221 = !DILocation(line: 2507, column: 52, scope: !6191)
!6222 = !DILocation(line: 2508, column: 32, scope: !6191)
!6223 = !DILocation(line: 2508, column: 42, scope: !6191)
!6224 = !DILocation(line: 2509, column: 17, scope: !6191)
!6225 = !DILocation(line: 0, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2509, column: 17)
!6227 = !DILocation(line: 2510, column: 9, scope: !6192)
!6228 = !DILocation(line: 2508, column: 70, scope: !6191)
!6229 = !DILocation(line: 2508, column: 59, scope: !6191)
!6230 = !DILocation(line: 2511, column: 9, scope: !6189)
!6231 = !DILocation(line: 2513, column: 5, scope: !6183)
!6232 = !DILocation(line: 2514, column: 1, scope: !6183)
!6233 = distinct !DISubprogram(name: "clusterSendPublish", scope: !3, file: !3, line: 2519, type: !6234, isLocal: false, isDefinition: true, scopeLine: 2519, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{null, !179, !4388, !4388}
!6236 = !{!6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244, !6245}
!6237 = !DILocalVariable(name: "link", arg: 1, scope: !6233, file: !3, line: 2519, type: !179)
!6238 = !DILocalVariable(name: "channel", arg: 2, scope: !6233, file: !3, line: 2519, type: !4388)
!6239 = !DILocalVariable(name: "message", arg: 3, scope: !6233, file: !3, line: 2519, type: !4388)
!6240 = !DILocalVariable(name: "buf", scope: !6233, file: !3, line: 2520, type: !3352)
!6241 = !DILocalVariable(name: "payload", scope: !6233, file: !3, line: 2520, type: !246)
!6242 = !DILocalVariable(name: "hdr", scope: !6233, file: !3, line: 2521, type: !92)
!6243 = !DILocalVariable(name: "totlen", scope: !6233, file: !3, line: 2522, type: !43)
!6244 = !DILocalVariable(name: "channel_len", scope: !6233, file: !3, line: 2523, type: !43)
!6245 = !DILocalVariable(name: "message_len", scope: !6233, file: !3, line: 2523, type: !43)
!6246 = !DILocation(line: 2519, column: 38, scope: !6233)
!6247 = !DILocation(line: 2519, column: 50, scope: !6233)
!6248 = !DILocation(line: 2519, column: 65, scope: !6233)
!6249 = !DILocation(line: 2520, column: 5, scope: !6233)
!6250 = !DILocation(line: 2521, column: 17, scope: !6233)
!6251 = !DILocation(line: 2525, column: 15, scope: !6233)
!6252 = !DILocation(line: 2526, column: 15, scope: !6233)
!6253 = !DILocation(line: 2527, column: 35, scope: !6233)
!6254 = !{!6255, !761, i64 8}
!6255 = !{!"redisObject", !709, i64 0, !709, i64 0, !709, i64 1, !709, i64 4, !761, i64 8}
!6256 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !6257)
!6257 = distinct !DILocation(line: 2527, column: 19, scope: !6233)
!6258 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !6257)
!6259 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !6257)
!6260 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !6257)
!6261 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !6257)
!6262 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !6257)
!6263 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !6257)
!6264 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !6257)
!6265 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !6257)
!6266 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !6257)
!6267 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !6257)
!6268 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !6257)
!6269 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !6257)
!6270 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !6257)
!6271 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !6257)
!6272 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !6257)
!6273 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !6257)
!6274 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !6257)
!6275 = !DILocation(line: 0, scope: !1496, inlinedAt: !6257)
!6276 = !DILocation(line: 0, scope: !6233)
!6277 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !6257)
!6278 = !DILocation(line: 2527, column: 19, scope: !6233)
!6279 = !DILocation(line: 2523, column: 14, scope: !6233)
!6280 = !DILocation(line: 2528, column: 35, scope: !6233)
!6281 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !6282)
!6282 = distinct !DILocation(line: 2528, column: 19, scope: !6233)
!6283 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !6282)
!6284 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !6282)
!6285 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !6282)
!6286 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !6282)
!6287 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !6282)
!6288 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !6282)
!6289 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !6282)
!6290 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !6282)
!6291 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !6282)
!6292 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !6282)
!6293 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !6282)
!6294 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !6282)
!6295 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !6282)
!6296 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !6282)
!6297 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !6282)
!6298 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !6282)
!6299 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !6282)
!6300 = !DILocation(line: 0, scope: !1496, inlinedAt: !6282)
!6301 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !6282)
!6302 = !DILocation(line: 2528, column: 19, scope: !6233)
!6303 = !DILocation(line: 2523, column: 27, scope: !6233)
!6304 = !DILocation(line: 2520, column: 19, scope: !6233)
!6305 = !DILocation(line: 2530, column: 5, scope: !6233)
!6306 = !DILocation(line: 2522, column: 14, scope: !6233)
!6307 = !DILocation(line: 2532, column: 49, scope: !6233)
!6308 = !DILocation(line: 2532, column: 63, scope: !6233)
!6309 = !DILocation(line: 2532, column: 12, scope: !6233)
!6310 = !DILocation(line: 2534, column: 41, scope: !6233)
!6311 = !DILocation(line: 2534, column: 10, scope: !6233)
!6312 = !DILocation(line: 2534, column: 23, scope: !6233)
!6313 = !DILocation(line: 2534, column: 27, scope: !6233)
!6314 = !DILocation(line: 2534, column: 39, scope: !6233)
!6315 = !DILocation(line: 2535, column: 41, scope: !6233)
!6316 = !DILocation(line: 2535, column: 27, scope: !6233)
!6317 = !DILocation(line: 2535, column: 39, scope: !6233)
!6318 = !DILocation(line: 2536, column: 19, scope: !6233)
!6319 = !DILocation(line: 2536, column: 10, scope: !6233)
!6320 = !DILocation(line: 2536, column: 17, scope: !6233)
!6321 = !DILocation(line: 2539, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2539, column: 9)
!6323 = !DILocation(line: 2539, column: 16, scope: !6322)
!6324 = !DILocation(line: 2539, column: 9, scope: !6233)
!6325 = !DILocation(line: 2542, column: 19, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 2541, column: 12)
!6327 = !DILocation(line: 2520, column: 45, scope: !6233)
!6328 = !DILocation(line: 2543, column: 9, scope: !6326)
!6329 = !DILocation(line: 2544, column: 15, scope: !6326)
!6330 = !DILocation(line: 0, scope: !6326)
!6331 = !DILocation(line: 2546, column: 12, scope: !6233)
!6332 = !DILocation(line: 2546, column: 53, scope: !6233)
!6333 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !6334)
!6334 = distinct !DILocation(line: 2546, column: 57, scope: !6233)
!6335 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !6334)
!6336 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !6334)
!6337 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !6334)
!6338 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !6334)
!6339 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !6334)
!6340 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !6334)
!6341 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !6334)
!6342 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !6334)
!6343 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !6334)
!6344 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !6334)
!6345 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !6334)
!6346 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !6334)
!6347 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !6334)
!6348 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !6334)
!6349 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !6334)
!6350 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !6334)
!6351 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !6334)
!6352 = !DILocation(line: 0, scope: !1496, inlinedAt: !6334)
!6353 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !6334)
!6354 = !DILocation(line: 2546, column: 5, scope: !6233)
!6355 = !DILocation(line: 2547, column: 60, scope: !6233)
!6356 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !6357)
!6357 = distinct !DILocation(line: 2547, column: 44, scope: !6233)
!6358 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !6357)
!6359 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !6357)
!6360 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !6357)
!6361 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !6357)
!6362 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !6357)
!6363 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !6357)
!6364 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !6357)
!6365 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !6357)
!6366 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !6357)
!6367 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !6357)
!6368 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !6357)
!6369 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !6357)
!6370 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !6357)
!6371 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !6357)
!6372 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !6357)
!6373 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !6357)
!6374 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !6357)
!6375 = !DILocation(line: 0, scope: !1496, inlinedAt: !6357)
!6376 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !6357)
!6377 = !DILocation(line: 2547, column: 43, scope: !6233)
!6378 = !DILocation(line: 2548, column: 18, scope: !6233)
!6379 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !6380)
!6380 = distinct !DILocation(line: 2548, column: 22, scope: !6233)
!6381 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !6380)
!6382 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !6380)
!6383 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !6380)
!6384 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !6380)
!6385 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !6380)
!6386 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !6380)
!6387 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !6380)
!6388 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !6380)
!6389 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !6380)
!6390 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !6380)
!6391 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !6380)
!6392 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !6380)
!6393 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !6380)
!6394 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !6380)
!6395 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !6380)
!6396 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !6380)
!6397 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !6380)
!6398 = !DILocation(line: 0, scope: !1496, inlinedAt: !6380)
!6399 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !6380)
!6400 = !DILocation(line: 2547, column: 5, scope: !6233)
!6401 = !DILocation(line: 2550, column: 9, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2550, column: 9)
!6403 = !DILocation(line: 2550, column: 9, scope: !6233)
!6404 = !DILocation(line: 2551, column: 9, scope: !6402)
!6405 = !DILocation(line: 2553, column: 9, scope: !6402)
!6406 = !DILocation(line: 2555, column: 5, scope: !6233)
!6407 = !DILocation(line: 2556, column: 5, scope: !6233)
!6408 = !DILocation(line: 2557, column: 17, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2557, column: 9)
!6410 = !DILocation(line: 2557, column: 9, scope: !6233)
!6411 = !DILocation(line: 2557, column: 25, scope: !6409)
!6412 = !DILocation(line: 2558, column: 1, scope: !6233)
!6413 = distinct !DISubprogram(name: "clusterSendModule", scope: !3, file: !3, line: 2592, type: !6414, isLocal: false, isDefinition: true, scopeLine: 2593, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6416)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{null, !179, !104, !23, !246, !43}
!6416 = !{!6417, !6418, !6419, !6420, !6421, !6422, !6423, !6424, !6425}
!6417 = !DILocalVariable(name: "link", arg: 1, scope: !6413, file: !3, line: 2592, type: !179)
!6418 = !DILocalVariable(name: "module_id", arg: 2, scope: !6413, file: !3, line: 2592, type: !104)
!6419 = !DILocalVariable(name: "type", arg: 3, scope: !6413, file: !3, line: 2592, type: !23)
!6420 = !DILocalVariable(name: "payload", arg: 4, scope: !6413, file: !3, line: 2593, type: !246)
!6421 = !DILocalVariable(name: "len", arg: 5, scope: !6413, file: !3, line: 2593, type: !43)
!6422 = !DILocalVariable(name: "buf", scope: !6413, file: !3, line: 2594, type: !3352)
!6423 = !DILocalVariable(name: "heapbuf", scope: !6413, file: !3, line: 2594, type: !246)
!6424 = !DILocalVariable(name: "hdr", scope: !6413, file: !3, line: 2595, type: !92)
!6425 = !DILocalVariable(name: "totlen", scope: !6413, file: !3, line: 2596, type: !43)
!6426 = !DILocation(line: 2592, column: 37, scope: !6413)
!6427 = !DILocation(line: 2592, column: 52, scope: !6413)
!6428 = !DILocation(line: 2592, column: 71, scope: !6413)
!6429 = !DILocation(line: 2593, column: 39, scope: !6413)
!6430 = !DILocation(line: 2593, column: 57, scope: !6413)
!6431 = !DILocation(line: 2594, column: 5, scope: !6413)
!6432 = !DILocation(line: 2595, column: 17, scope: !6413)
!6433 = !DILocation(line: 2594, column: 19, scope: !6413)
!6434 = !DILocation(line: 2598, column: 5, scope: !6413)
!6435 = !DILocation(line: 2596, column: 14, scope: !6413)
!6436 = !DILocation(line: 2600, column: 46, scope: !6413)
!6437 = !DILocation(line: 2600, column: 12, scope: !6413)
!6438 = !DILocation(line: 2602, column: 26, scope: !6413)
!6439 = !DILocation(line: 2602, column: 36, scope: !6413)
!6440 = !DILocation(line: 2603, column: 26, scope: !6413)
!6441 = !DILocation(line: 2603, column: 31, scope: !6413)
!6442 = !DILocation(line: 2604, column: 32, scope: !6413)
!6443 = !DILocation(line: 2604, column: 26, scope: !6413)
!6444 = !DILocation(line: 2604, column: 30, scope: !6413)
!6445 = !DILocation(line: 2605, column: 19, scope: !6413)
!6446 = !DILocation(line: 2605, column: 10, scope: !6413)
!6447 = !DILocation(line: 2605, column: 17, scope: !6413)
!6448 = !DILocation(line: 2608, column: 9, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2608, column: 9)
!6450 = !DILocation(line: 2608, column: 16, scope: !6449)
!6451 = !DILocation(line: 2608, column: 9, scope: !6413)
!6452 = !DILocation(line: 2611, column: 19, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 2610, column: 12)
!6454 = !DILocation(line: 2594, column: 45, scope: !6413)
!6455 = !DILocation(line: 2612, column: 9, scope: !6453)
!6456 = !DILocation(line: 2613, column: 15, scope: !6453)
!6457 = !DILocation(line: 0, scope: !6453)
!6458 = !DILocation(line: 2615, column: 33, scope: !6413)
!6459 = !DILocation(line: 2615, column: 5, scope: !6413)
!6460 = !DILocation(line: 2617, column: 9, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2617, column: 9)
!6462 = !DILocation(line: 2617, column: 9, scope: !6413)
!6463 = !DILocation(line: 2618, column: 9, scope: !6461)
!6464 = !DILocation(line: 2620, column: 9, scope: !6461)
!6465 = !DILocation(line: 2622, column: 17, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2622, column: 9)
!6467 = !DILocation(line: 2622, column: 9, scope: !6413)
!6468 = !DILocation(line: 2622, column: 25, scope: !6466)
!6469 = !DILocation(line: 2623, column: 1, scope: !6413)
!6470 = distinct !DISubprogram(name: "clusterSendModuleMessageToTarget", scope: !3, file: !3, line: 2631, type: !6471, isLocal: false, isDefinition: true, scopeLine: 2631, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6473)
!6471 = !DISubroutineType(types: !6472)
!6472 = !{!177, !611, !104, !23, !246, !43}
!6473 = !{!6474, !6475, !6476, !6477, !6478, !6479}
!6474 = !DILocalVariable(name: "target", arg: 1, scope: !6470, file: !3, line: 2631, type: !611)
!6475 = !DILocalVariable(name: "module_id", arg: 2, scope: !6470, file: !3, line: 2631, type: !104)
!6476 = !DILocalVariable(name: "type", arg: 3, scope: !6470, file: !3, line: 2631, type: !23)
!6477 = !DILocalVariable(name: "payload", arg: 4, scope: !6470, file: !3, line: 2631, type: !246)
!6478 = !DILocalVariable(name: "len", arg: 5, scope: !6470, file: !3, line: 2631, type: !43)
!6479 = !DILocalVariable(name: "node", scope: !6470, file: !3, line: 2632, type: !378)
!6480 = !DILocation(line: 2631, column: 50, scope: !6470)
!6481 = !DILocation(line: 2631, column: 67, scope: !6470)
!6482 = !DILocation(line: 2631, column: 86, scope: !6470)
!6483 = !DILocation(line: 2631, column: 107, scope: !6470)
!6484 = !DILocation(line: 2631, column: 125, scope: !6470)
!6485 = !DILocation(line: 2632, column: 18, scope: !6470)
!6486 = !DILocation(line: 2634, column: 16, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 2634, column: 9)
!6488 = !DILocation(line: 2634, column: 9, scope: !6470)
!6489 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !6490)
!6490 = distinct !DILocation(line: 2635, column: 16, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 2634, column: 25)
!6492 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !6490)
!6493 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !6490)
!6494 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !6490)
!6495 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !6490)
!6496 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !6490)
!6497 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !6490)
!6498 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !6490)
!6499 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !6490)
!6500 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !6490)
!6501 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !6490)
!6502 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !6490)
!6503 = !DILocation(line: 2636, column: 26, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 2636, column: 13)
!6505 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !6490)
!6506 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !6490)
!6507 = !DILocation(line: 2636, column: 18, scope: !6504)
!6508 = !DILocation(line: 2636, column: 35, scope: !6504)
!6509 = !DILocation(line: 2636, column: 40, scope: !6504)
!6510 = !DILocation(line: 2636, column: 13, scope: !6491)
!6511 = !DILocation(line: 2639, column: 23, scope: !6470)
!6512 = !DILocation(line: 2639, column: 5, scope: !6470)
!6513 = !DILocation(line: 2641, column: 5, scope: !6470)
!6514 = !DILocation(line: 0, scope: !6470)
!6515 = !DILocation(line: 0, scope: !6504)
!6516 = !DILocation(line: 2642, column: 1, scope: !6470)
!6517 = distinct !DISubprogram(name: "clusterPropagatePublish", scope: !3, file: !3, line: 2651, type: !6518, isLocal: false, isDefinition: true, scopeLine: 2651, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6520)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{null, !4388, !4388}
!6520 = !{!6521, !6522}
!6521 = !DILocalVariable(name: "channel", arg: 1, scope: !6517, file: !3, line: 2651, type: !4388)
!6522 = !DILocalVariable(name: "message", arg: 2, scope: !6517, file: !3, line: 2651, type: !4388)
!6523 = !DILocation(line: 2651, column: 36, scope: !6517)
!6524 = !DILocation(line: 2651, column: 51, scope: !6517)
!6525 = !DILocation(line: 2652, column: 5, scope: !6517)
!6526 = !DILocation(line: 2653, column: 1, scope: !6517)
!6527 = distinct !DISubprogram(name: "clusterRequestFailoverAuth", scope: !3, file: !3, line: 2665, type: !293, isLocal: false, isDefinition: true, scopeLine: 2665, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6528)
!6528 = !{!6529, !6530, !6531}
!6529 = !DILocalVariable(name: "buf", scope: !6527, file: !3, line: 2666, type: !3352)
!6530 = !DILocalVariable(name: "hdr", scope: !6527, file: !3, line: 2667, type: !92)
!6531 = !DILocalVariable(name: "totlen", scope: !6527, file: !3, line: 2668, type: !43)
!6532 = !DILocation(line: 2666, column: 5, scope: !6527)
!6533 = !DILocation(line: 2667, column: 17, scope: !6527)
!6534 = !DILocation(line: 2666, column: 19, scope: !6527)
!6535 = !DILocation(line: 2670, column: 5, scope: !6527)
!6536 = !DILocation(line: 2674, column: 16, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2674, column: 9)
!6538 = !DILocation(line: 2674, column: 25, scope: !6537)
!6539 = !DILocation(line: 2674, column: 9, scope: !6537)
!6540 = !DILocation(line: 2674, column: 9, scope: !6527)
!6541 = !DILocation(line: 2674, column: 33, scope: !6537)
!6542 = !DILocation(line: 2674, column: 48, scope: !6537)
!6543 = !DILocation(line: 2668, column: 14, scope: !6527)
!6544 = !DILocation(line: 2676, column: 19, scope: !6527)
!6545 = !DILocation(line: 2676, column: 10, scope: !6527)
!6546 = !DILocation(line: 2676, column: 17, scope: !6527)
!6547 = !DILocation(line: 2677, column: 5, scope: !6527)
!6548 = !DILocation(line: 2678, column: 1, scope: !6527)
!6549 = !DILocation(line: 2681, column: 43, scope: !5802)
!6550 = !DILocation(line: 2682, column: 5, scope: !5802)
!6551 = !DILocation(line: 2683, column: 17, scope: !5802)
!6552 = !DILocation(line: 2686, column: 16, scope: !5812)
!6553 = !DILocation(line: 2686, column: 10, scope: !5812)
!6554 = !DILocation(line: 2686, column: 9, scope: !5802)
!6555 = !DILocation(line: 2682, column: 19, scope: !5802)
!6556 = !DILocation(line: 2687, column: 5, scope: !5802)
!6557 = !DILocation(line: 2684, column: 14, scope: !5802)
!6558 = !DILocation(line: 2689, column: 19, scope: !5802)
!6559 = !DILocation(line: 2689, column: 10, scope: !5802)
!6560 = !DILocation(line: 2689, column: 17, scope: !5802)
!6561 = !DILocation(line: 2690, column: 30, scope: !5802)
!6562 = !DILocation(line: 2690, column: 5, scope: !5802)
!6563 = !DILocation(line: 2691, column: 1, scope: !5802)
!6564 = !DILocation(line: 0, scope: !5812)
!6565 = distinct !DISubprogram(name: "clusterSendMFStart", scope: !3, file: !3, line: 2694, type: !2374, isLocal: false, isDefinition: true, scopeLine: 2694, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6566)
!6566 = !{!6567, !6568, !6569, !6570}
!6567 = !DILocalVariable(name: "node", arg: 1, scope: !6565, file: !3, line: 2694, type: !378)
!6568 = !DILocalVariable(name: "buf", scope: !6565, file: !3, line: 2695, type: !3352)
!6569 = !DILocalVariable(name: "hdr", scope: !6565, file: !3, line: 2696, type: !92)
!6570 = !DILocalVariable(name: "totlen", scope: !6565, file: !3, line: 2697, type: !43)
!6571 = !DILocation(line: 2694, column: 38, scope: !6565)
!6572 = !DILocation(line: 2695, column: 5, scope: !6565)
!6573 = !DILocation(line: 2696, column: 17, scope: !6565)
!6574 = !DILocation(line: 2699, column: 16, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 2699, column: 9)
!6576 = !DILocation(line: 2699, column: 10, scope: !6575)
!6577 = !DILocation(line: 2699, column: 9, scope: !6565)
!6578 = !DILocation(line: 2695, column: 19, scope: !6565)
!6579 = !DILocation(line: 2700, column: 5, scope: !6565)
!6580 = !DILocation(line: 2697, column: 14, scope: !6565)
!6581 = !DILocation(line: 2702, column: 19, scope: !6565)
!6582 = !DILocation(line: 2702, column: 10, scope: !6565)
!6583 = !DILocation(line: 2702, column: 17, scope: !6565)
!6584 = !DILocation(line: 2703, column: 30, scope: !6565)
!6585 = !DILocation(line: 2703, column: 5, scope: !6565)
!6586 = !DILocation(line: 2704, column: 1, scope: !6565)
!6587 = !DILocation(line: 0, scope: !6575)
!6588 = distinct !DISubprogram(name: "clusterGetSlaveRank", scope: !3, file: !3, line: 2822, type: !3163, isLocal: false, isDefinition: true, scopeLine: 2822, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6589)
!6589 = !{!6590, !6591, !6592, !6593}
!6590 = !DILocalVariable(name: "myoffset", scope: !6588, file: !3, line: 2823, type: !186)
!6591 = !DILocalVariable(name: "j", scope: !6588, file: !3, line: 2824, type: !177)
!6592 = !DILocalVariable(name: "rank", scope: !6588, file: !3, line: 2824, type: !177)
!6593 = !DILocalVariable(name: "master", scope: !6588, file: !3, line: 2825, type: !378)
!6594 = !DILocation(line: 2824, column: 12, scope: !6588)
!6595 = !DILocation(line: 2827, column: 5, scope: !6588)
!6596 = !DILocation(line: 2828, column: 22, scope: !6588)
!6597 = !DILocation(line: 2825, column: 18, scope: !6588)
!6598 = !DILocation(line: 2829, column: 16, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 2829, column: 9)
!6600 = !DILocation(line: 2829, column: 9, scope: !6588)
!6601 = !DILocation(line: 2831, column: 16, scope: !6588)
!6602 = !DILocation(line: 2823, column: 15, scope: !6588)
!6603 = !DILocation(line: 2824, column: 9, scope: !6588)
!6604 = !DILocation(line: 2832, column: 10, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 2832, column: 5)
!6606 = !DILocation(line: 2832, column: 29, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2832, column: 5)
!6608 = !DILocation(line: 2832, column: 19, scope: !6607)
!6609 = !DILocation(line: 2832, column: 5, scope: !6605)
!6610 = !DILocation(line: 2833, column: 13, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2833, column: 13)
!6612 = !DILocation(line: 2833, column: 31, scope: !6611)
!6613 = !DILocation(line: 2833, column: 41, scope: !6611)
!6614 = !DILocation(line: 2834, column: 14, scope: !6611)
!6615 = !DILocation(line: 2834, column: 50, scope: !6611)
!6616 = !DILocation(line: 2835, column: 32, scope: !6611)
!6617 = !DILocation(line: 2835, column: 44, scope: !6611)
!6618 = !DILocation(line: 2833, column: 13, scope: !6607)
!6619 = !DILocation(line: 2835, column: 60, scope: !6611)
!6620 = !DILocation(line: 2835, column: 56, scope: !6611)
!6621 = !DILocation(line: 0, scope: !6588)
!6622 = !DILocation(line: 2832, column: 41, scope: !6607)
!6623 = !DILocation(line: 2832, column: 5, scope: !6607)
!6624 = distinct !{!6624, !6609, !6625}
!6625 = !DILocation(line: 2835, column: 60, scope: !6605)
!6626 = !DILocation(line: 0, scope: !6599)
!6627 = !DILocation(line: 2837, column: 1, scope: !6588)
!6628 = !DILocation(line: 2861, column: 33, scope: !281)
!6629 = !DILocation(line: 2864, column: 39, scope: !281)
!6630 = !DILocation(line: 2864, column: 60, scope: !281)
!6631 = !DILocation(line: 2864, column: 14, scope: !281)
!6632 = !DILocation(line: 2867, column: 26, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !281, file: !3, line: 2867, column: 9)
!6634 = !DILocation(line: 2867, column: 35, scope: !6633)
!6635 = !DILocation(line: 2867, column: 16, scope: !6633)
!6636 = !DILocation(line: 2867, column: 56, scope: !6633)
!6637 = !DILocation(line: 2868, column: 9, scope: !6633)
!6638 = !DILocation(line: 2868, column: 20, scope: !6633)
!6639 = !DILocation(line: 2868, column: 19, scope: !6633)
!6640 = !DILocation(line: 2868, column: 33, scope: !6633)
!6641 = !DILocation(line: 2867, column: 9, scope: !281)
!6642 = !DILocation(line: 2871, column: 12, scope: !281)
!6643 = !DILocation(line: 2871, column: 21, scope: !281)
!6644 = !DILocation(line: 2871, column: 42, scope: !281)
!6645 = !DILocation(line: 2876, column: 9, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !281, file: !3, line: 2876, column: 9)
!6647 = !DILocation(line: 2876, column: 17, scope: !6646)
!6648 = !DILocation(line: 2876, column: 25, scope: !6646)
!6649 = !DILocation(line: 2877, column: 9, scope: !6646)
!6650 = !DILocation(line: 2877, column: 37, scope: !6646)
!6651 = !DILocation(line: 2878, column: 10, scope: !6646)
!6652 = !DILocation(line: 2878, column: 21, scope: !6646)
!6653 = !DILocation(line: 2878, column: 29, scope: !6646)
!6654 = !DILocation(line: 2878, column: 38, scope: !6646)
!6655 = !DILocation(line: 2878, column: 19, scope: !6646)
!6656 = !DILocation(line: 2878, column: 49, scope: !6646)
!6657 = !DILocation(line: 2876, column: 9, scope: !281)
!6658 = !DILocation(line: 2880, column: 5, scope: !281)
!6659 = !DILocation(line: 0, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !281, file: !3, line: 2880, column: 20)
!6661 = !DILocation(line: 2862, column: 11, scope: !281)
!6662 = !DILocation(line: 2899, column: 20, scope: !281)
!6663 = !DILocation(line: 2899, column: 18, scope: !281)
!6664 = !DILocation(line: 2900, column: 5, scope: !281)
!6665 = !DILocation(line: 2901, column: 1, scope: !281)
!6666 = !DILocation(line: 0, scope: !6633)
!6667 = distinct !DISubprogram(name: "clusterFailoverReplaceYourMaster", scope: !3, file: !3, line: 2909, type: !293, isLocal: false, isDefinition: true, scopeLine: 2909, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6668)
!6668 = !{!6669, !6670}
!6669 = !DILocalVariable(name: "j", scope: !6667, file: !3, line: 2910, type: !177)
!6670 = !DILocalVariable(name: "oldmaster", scope: !6667, file: !3, line: 2911, type: !378)
!6671 = !DILocation(line: 2911, column: 30, scope: !6667)
!6672 = !DILocation(line: 2911, column: 38, scope: !6667)
!6673 = !DILocation(line: 2911, column: 18, scope: !6667)
!6674 = !DILocation(line: 2913, column: 9, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 2913, column: 9)
!6676 = !DILocation(line: 2913, column: 43, scope: !6675)
!6677 = !DILocation(line: 2913, column: 30, scope: !6675)
!6678 = !DILocation(line: 2916, column: 5, scope: !6667)
!6679 = !DILocation(line: 2917, column: 5, scope: !6667)
!6680 = !DILocation(line: 2910, column: 9, scope: !6667)
!6681 = !DILocation(line: 2920, column: 10, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6667, file: !3, line: 2920, column: 5)
!6683 = !DILocation(line: 2920, column: 5, scope: !6682)
!6684 = !DILocation(line: 3698, column: 40, scope: !5561, inlinedAt: !6685)
!6685 = distinct !DILocation(line: 2921, column: 13, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 2921, column: 13)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 2920, column: 41)
!6688 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 2920, column: 5)
!6689 = !DILocation(line: 3698, column: 47, scope: !5561, inlinedAt: !6685)
!6690 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !6691)
!6691 = distinct !DILocation(line: 3699, column: 12, scope: !5561, inlinedAt: !6685)
!6692 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !6691)
!6693 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !6691)
!6694 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !6691)
!6695 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !6691)
!6696 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !6691)
!6697 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !6691)
!6698 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !6691)
!6699 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !6691)
!6700 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !6691)
!6701 = !DILocation(line: 3699, column: 5, scope: !5561, inlinedAt: !6685)
!6702 = !DILocation(line: 2921, column: 13, scope: !6687)
!6703 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !6704)
!6704 = distinct !DILocation(line: 2922, column: 13, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2921, column: 49)
!6706 = !DILocation(line: 3717, column: 29, scope: !2242, inlinedAt: !6704)
!6707 = !DILocation(line: 3717, column: 22, scope: !2242, inlinedAt: !6704)
!6708 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !6704)
!6709 = !DILocation(line: 3719, column: 10, scope: !2251, inlinedAt: !6704)
!6710 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !6704)
!6711 = !DILocation(line: 3719, column: 13, scope: !2251, inlinedAt: !6704)
!6712 = !DILocation(line: 3723, column: 1, scope: !2242, inlinedAt: !6704)
!6713 = !DILocation(line: 2923, column: 28, scope: !6705)
!6714 = !DILocation(line: 3706, column: 33, scope: !1246, inlinedAt: !6715)
!6715 = distinct !DILocation(line: 2923, column: 13, scope: !6705)
!6716 = !DILocation(line: 3706, column: 40, scope: !1246, inlinedAt: !6715)
!6717 = !DILocation(line: 3707, column: 9, scope: !1246, inlinedAt: !6715)
!6718 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !6719)
!6719 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !6704)
!6720 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !6719)
!6721 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !6722)
!6722 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !6719)
!6723 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !6722)
!6724 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !6722)
!6725 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !6722)
!6726 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !6722)
!6727 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !6722)
!6728 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !6722)
!6729 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !6722)
!6730 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !6731)
!6731 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !6719)
!6732 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !6731)
!6733 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !6731)
!6734 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !6731)
!6735 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !6731)
!6736 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !6731)
!6737 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !6719)
!6738 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !6719)
!6739 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !6704)
!6740 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !6719)
!6741 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !6719)
!6742 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !6719)
!6743 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !6704)
!6744 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !6704)
!6745 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !6704)
!6746 = !DILocation(line: 3722, column: 5, scope: !2242, inlinedAt: !6704)
!6747 = !DILocation(line: 3707, column: 16, scope: !1255, inlinedAt: !6715)
!6748 = !DILocation(line: 3707, column: 9, scope: !1255, inlinedAt: !6715)
!6749 = !DILocation(line: 3708, column: 5, scope: !1246, inlinedAt: !6715)
!6750 = !DILocation(line: 3709, column: 12, scope: !1246, inlinedAt: !6715)
!6751 = !DILocation(line: 3709, column: 5, scope: !1246, inlinedAt: !6715)
!6752 = !DILocation(line: 3709, column: 33, scope: !1246, inlinedAt: !6715)
!6753 = !DILocation(line: 3710, column: 5, scope: !1246, inlinedAt: !6715)
!6754 = !DILocation(line: 0, scope: !6705)
!6755 = !DILocation(line: 3711, column: 1, scope: !1246, inlinedAt: !6715)
!6756 = !DILocation(line: 2924, column: 9, scope: !6705)
!6757 = !DILocation(line: 2920, column: 37, scope: !6688)
!6758 = !DILocation(line: 2920, column: 5, scope: !6688)
!6759 = !DILocation(line: 2920, column: 19, scope: !6688)
!6760 = distinct !{!6760, !6683, !6761}
!6761 = !DILocation(line: 2925, column: 5, scope: !6682)
!6762 = !DILocation(line: 2928, column: 5, scope: !6667)
!6763 = !DILocation(line: 360, column: 33, scope: !1672, inlinedAt: !6764)
!6764 = distinct !DILocation(line: 2929, column: 5, scope: !6667)
!6765 = !DILocation(line: 361, column: 9, scope: !1677, inlinedAt: !6764)
!6766 = !DILocation(line: 361, column: 37, scope: !1677, inlinedAt: !6764)
!6767 = !DILocation(line: 361, column: 9, scope: !1672, inlinedAt: !6764)
!6768 = !DILocation(line: 362, column: 9, scope: !1681, inlinedAt: !6764)
!6769 = !DILocation(line: 363, column: 9, scope: !1681, inlinedAt: !6764)
!6770 = !DILocation(line: 365, column: 1, scope: !1672, inlinedAt: !6764)
!6771 = !DILocation(line: 2933, column: 5, scope: !6667)
!6772 = !DILocation(line: 3265, column: 16, scope: !1983, inlinedAt: !6773)
!6773 = distinct !DILocation(line: 2936, column: 5, scope: !6667)
!6774 = !DILocation(line: 3265, column: 25, scope: !1983, inlinedAt: !6773)
!6775 = !DILocation(line: 3265, column: 9, scope: !1983, inlinedAt: !6773)
!6776 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !6773)
!6777 = !DILocation(line: 3265, column: 35, scope: !1983, inlinedAt: !6773)
!6778 = !DILocation(line: 3265, column: 9, scope: !1984, inlinedAt: !6773)
!6779 = !DILocation(line: 3266, column: 39, scope: !2175, inlinedAt: !6773)
!6780 = !DILocation(line: 3267, column: 9, scope: !2175, inlinedAt: !6773)
!6781 = !DILocation(line: 3268, column: 5, scope: !2175, inlinedAt: !6773)
!6782 = !DILocation(line: 3269, column: 12, scope: !1984, inlinedAt: !6773)
!6783 = !DILocation(line: 3269, column: 21, scope: !1984, inlinedAt: !6773)
!6784 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !6773)
!6785 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !6773)
!6786 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !6773)
!6787 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !6773)
!6788 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !6773)
!6789 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !6773)
!6790 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !6773)
!6791 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !6773)
!6792 = !DILocation(line: 2937, column: 1, scope: !6667)
!6793 = !DILocation(line: 0, scope: !6675)
!6794 = !DILocation(line: 3698, column: 40, scope: !5561)
!6795 = !DILocation(line: 3698, column: 47, scope: !5561)
!6796 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !6797)
!6797 = distinct !DILocation(line: 3699, column: 12, scope: !5561)
!6798 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !6797)
!6799 = !DILocation(line: 3628, column: 21, scope: !2263, inlinedAt: !6797)
!6800 = !DILocation(line: 3628, column: 18, scope: !2263, inlinedAt: !6797)
!6801 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !6797)
!6802 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !6797)
!6803 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !6797)
!6804 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !6797)
!6805 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !6797)
!6806 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !6797)
!6807 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !6797)
!6808 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !6797)
!6809 = !DILocation(line: 3699, column: 5, scope: !5561)
!6810 = !DILocation(line: 3762, column: 9, scope: !408)
!6811 = !DILocation(line: 3766, column: 12, scope: !408)
!6812 = !DILocation(line: 3766, column: 21, scope: !408)
!6813 = !DILocation(line: 3766, column: 39, scope: !408)
!6814 = !DILocation(line: 3774, column: 9, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3774, column: 9)
!6816 = !DILocation(line: 3774, column: 25, scope: !6815)
!6817 = !DILocation(line: 3774, column: 9, scope: !408)
!6818 = !DILocation(line: 3774, column: 49, scope: !6815)
!6819 = !DILocation(line: 3774, column: 47, scope: !6815)
!6820 = !DILocation(line: 3774, column: 31, scope: !6815)
!6821 = !DILocation(line: 3775, column: 9, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3775, column: 9)
!6823 = !DILocation(line: 3775, column: 30, scope: !6822)
!6824 = !DILocation(line: 3776, column: 16, scope: !6822)
!6825 = !DILocation(line: 3776, column: 25, scope: !6822)
!6826 = !DILocation(line: 3776, column: 31, scope: !6822)
!6827 = !DILocation(line: 3776, column: 47, scope: !6822)
!6828 = !DILocation(line: 3777, column: 9, scope: !6822)
!6829 = !DILocation(line: 3777, column: 20, scope: !6822)
!6830 = !DILocation(line: 3777, column: 18, scope: !6822)
!6831 = !DILocation(line: 3777, column: 36, scope: !6822)
!6832 = !DILocation(line: 3775, column: 9, scope: !408)
!6833 = !DILocation(line: 3761, column: 12, scope: !408)
!6834 = !DILocation(line: 3784, column: 16, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !408, file: !3, line: 3784, column: 9)
!6836 = !{!789, !709, i64 2960}
!6837 = !DILocation(line: 3784, column: 9, scope: !6835)
!6838 = !DILocation(line: 3784, column: 9, scope: !408)
!6839 = !DILocation(line: 3804, column: 16, scope: !414)
!6840 = !DILocation(line: 3761, column: 9, scope: !408)
!6841 = !DILocation(line: 3785, column: 14, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 3785, column: 9)
!6843 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 3784, column: 47)
!6844 = !DILocation(line: 3785, column: 9, scope: !6842)
!6845 = !DILocation(line: 3786, column: 17, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 3786, column: 17)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 3785, column: 45)
!6848 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 3785, column: 9)
!6849 = !DILocation(line: 3786, column: 42, scope: !6846)
!6850 = !DILocation(line: 3786, column: 50, scope: !6846)
!6851 = !DILocation(line: 3787, column: 43, scope: !6846)
!6852 = !DILocation(line: 3787, column: 49, scope: !6846)
!6853 = !DILocation(line: 3786, column: 17, scope: !6847)
!6854 = !DILocation(line: 3790, column: 17, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 3788, column: 13)
!6856 = !DILocation(line: 3785, column: 41, scope: !6848)
!6857 = !DILocation(line: 3785, column: 9, scope: !6848)
!6858 = !DILocation(line: 0, scope: !408)
!6859 = !DILocation(line: 3804, column: 25, scope: !414)
!6860 = !DILocation(line: 3804, column: 30, scope: !414)
!6861 = !DILocation(line: 3805, column: 50, scope: !414)
!6862 = !DILocation(line: 3805, column: 14, scope: !414)
!6863 = !DILocation(line: 3801, column: 23, scope: !414)
!6864 = !DILocation(line: 3806, column: 9, scope: !414)
!6865 = !DILocation(line: 3806, column: 21, scope: !414)
!6866 = !DILocation(line: 3802, column: 20, scope: !414)
!6867 = !DILocation(line: 3806, column: 35, scope: !414)
!6868 = !DILocation(line: 3807, column: 33, scope: !417)
!6869 = !DILocation(line: 3807, column: 26, scope: !417)
!6870 = !DILocation(line: 3809, column: 17, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !417, file: !3, line: 3809, column: 17)
!6872 = !DILocation(line: 3809, column: 36, scope: !6871)
!6873 = !DILocation(line: 3809, column: 45, scope: !6871)
!6874 = !DILocation(line: 3809, column: 39, scope: !6871)
!6875 = !DILocation(line: 3809, column: 17, scope: !417)
!6876 = !DILocation(line: 3810, column: 24, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 3809, column: 55)
!6878 = !DILocation(line: 3810, column: 33, scope: !6877)
!6879 = !DILocation(line: 3810, column: 37, scope: !6877)
!6880 = !DILocation(line: 3811, column: 34, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 3811, column: 21)
!6882 = !DILocation(line: 3811, column: 76, scope: !6881)
!6883 = !DILocation(line: 3811, column: 21, scope: !6877)
!6884 = !DILocation(line: 3812, column: 38, scope: !6881)
!6885 = !DILocation(line: 3812, column: 21, scope: !6881)
!6886 = distinct !{!6886, !6864, !6887}
!6887 = !DILocation(line: 3814, column: 9, scope: !414)
!6888 = !DILocation(line: 0, scope: !6881)
!6889 = !DILocation(line: 3815, column: 9, scope: !414)
!6890 = !DILocation(line: 3821, column: 37, scope: !419)
!6891 = !DILocation(line: 3821, column: 46, scope: !419)
!6892 = !DILocation(line: 3821, column: 51, scope: !419)
!6893 = !DILocation(line: 3821, column: 13, scope: !419)
!6894 = !DILocation(line: 3823, column: 31, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !419, file: !3, line: 3823, column: 13)
!6896 = !DILocation(line: 3823, column: 13, scope: !419)
!6897 = !DILocation(line: 3825, column: 35, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 3823, column: 48)
!6899 = !DILocation(line: 3825, column: 33, scope: !6898)
!6900 = !DILocation(line: 3826, column: 9, scope: !6898)
!6901 = !DILocation(line: 3830, column: 29, scope: !422)
!6902 = !DILocation(line: 0, scope: !6855)
!6903 = !DILocation(line: 3830, column: 38, scope: !422)
!6904 = !DILocation(line: 3830, column: 19, scope: !422)
!6905 = !DILocation(line: 3830, column: 9, scope: !408)
!6906 = !DILocation(line: 3831, column: 40, scope: !421)
!6907 = !DILocation(line: 3831, column: 18, scope: !421)
!6908 = !DILocation(line: 3837, column: 13, scope: !421)
!6909 = !DILocation(line: 3839, column: 13, scope: !421)
!6910 = !DILocation(line: 3842, column: 23, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !421, file: !3, line: 3842, column: 13)
!6912 = !DILocation(line: 3842, column: 37, scope: !6911)
!6913 = !DILocation(line: 3843, column: 13, scope: !6911)
!6914 = !DILocation(line: 3843, column: 34, scope: !6911)
!6915 = !DILocation(line: 3844, column: 13, scope: !6911)
!6916 = !DILocation(line: 3844, column: 24, scope: !6911)
!6917 = !DILocation(line: 3844, column: 22, scope: !6911)
!6918 = !DILocation(line: 3844, column: 44, scope: !6911)
!6919 = !DILocation(line: 3842, column: 13, scope: !421)
!6920 = !DILocation(line: 3846, column: 13, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6911, file: !3, line: 3845, column: 9)
!6922 = !DILocation(line: 3851, column: 13, scope: !421)
!6923 = !DILocation(line: 3850, column: 9, scope: !421)
!6924 = !DILocation(line: 3852, column: 16, scope: !421)
!6925 = !DILocation(line: 3852, column: 25, scope: !421)
!6926 = !DILocation(line: 3852, column: 31, scope: !421)
!6927 = !DILocation(line: 3853, column: 5, scope: !422)
!6928 = !DILocation(line: 3854, column: 1, scope: !408)
!6929 = !DILocation(line: 3785, column: 23, scope: !6848)
!6930 = distinct !{!6930, !6844, !6931}
!6931 = !DILocation(line: 3792, column: 9, scope: !6842)
!6932 = distinct !DISubprogram(name: "clusterHandleSlaveFailover", scope: !3, file: !3, line: 2947, type: !293, isLocal: false, isDefinition: true, scopeLine: 2947, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !6933)
!6933 = !{!6934, !6935, !6936, !6937, !6938, !6939, !6940, !6943}
!6934 = !DILocalVariable(name: "data_age", scope: !6932, file: !3, line: 2948, type: !184)
!6935 = !DILocalVariable(name: "auth_age", scope: !6932, file: !3, line: 2949, type: !184)
!6936 = !DILocalVariable(name: "needed_quorum", scope: !6932, file: !3, line: 2950, type: !177)
!6937 = !DILocalVariable(name: "manual_failover", scope: !6932, file: !3, line: 2951, type: !177)
!6938 = !DILocalVariable(name: "auth_timeout", scope: !6932, file: !3, line: 2953, type: !184)
!6939 = !DILocalVariable(name: "auth_retry_time", scope: !6932, file: !3, line: 2953, type: !184)
!6940 = !DILocalVariable(name: "newrank", scope: !6941, file: !3, line: 3058, type: !177)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3057, column: 5)
!6942 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3055, column: 9)
!6943 = !DILocalVariable(name: "added_delay", scope: !6944, file: !3, line: 3060, type: !186)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 3059, column: 59)
!6945 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 3059, column: 13)
!6946 = !DILocation(line: 2949, column: 25, scope: !6932)
!6947 = !DILocation(line: 2949, column: 43, scope: !6932)
!6948 = !DILocation(line: 2949, column: 52, scope: !6932)
!6949 = !DILocation(line: 2949, column: 34, scope: !6932)
!6950 = !DILocation(line: 2949, column: 14, scope: !6932)
!6951 = !DILocation(line: 2950, column: 42, scope: !6932)
!6952 = !DILocation(line: 2950, column: 47, scope: !6932)
!6953 = !DILocation(line: 2950, column: 9, scope: !6932)
!6954 = !DILocation(line: 2951, column: 43, scope: !6932)
!6955 = !DILocation(line: 2951, column: 50, scope: !6932)
!6956 = !DILocation(line: 2951, column: 55, scope: !6932)
!6957 = !DILocation(line: 2952, column: 43, scope: !6932)
!6958 = !DILocation(line: 0, scope: !6932)
!6959 = !DILocation(line: 2955, column: 21, scope: !6932)
!6960 = !DILocation(line: 2955, column: 39, scope: !6932)
!6961 = !DILocation(line: 2964, column: 27, scope: !6932)
!6962 = !DILocation(line: 2964, column: 47, scope: !6932)
!6963 = !DILocation(line: 2953, column: 14, scope: !6932)
!6964 = !DILocation(line: 2965, column: 9, scope: !6932)
!6965 = !DILocation(line: 2966, column: 35, scope: !6932)
!6966 = !DILocation(line: 2953, column: 28, scope: !6932)
!6967 = !DILocation(line: 2975, column: 9, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 2975, column: 9)
!6969 = !DILocation(line: 2975, column: 30, scope: !6968)
!6970 = !DILocation(line: 2976, column: 17, scope: !6968)
!6971 = !DILocation(line: 2976, column: 25, scope: !6968)
!6972 = !DILocation(line: 2976, column: 33, scope: !6968)
!6973 = !DILocation(line: 2977, column: 11, scope: !6968)
!6974 = !DILocation(line: 2977, column: 39, scope: !6968)
!6975 = !DILocation(line: 2978, column: 17, scope: !6968)
!6976 = !DILocation(line: 2978, column: 10, scope: !6968)
!6977 = !DILocation(line: 2978, column: 43, scope: !6968)
!6978 = !DILocation(line: 2979, column: 26, scope: !6968)
!6979 = !DILocation(line: 2979, column: 35, scope: !6968)
!6980 = !DILocation(line: 2975, column: 9, scope: !6932)
!6981 = !DILocation(line: 2983, column: 25, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 2980, column: 5)
!6983 = !DILocation(line: 2983, column: 46, scope: !6982)
!6984 = !DILocation(line: 2984, column: 9, scope: !6982)
!6985 = !DILocation(line: 2989, column: 16, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 2989, column: 9)
!6987 = !{!789, !709, i64 2500}
!6988 = !DILocation(line: 2989, column: 27, scope: !6986)
!6989 = !DILocation(line: 0, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 2992, column: 12)
!6991 = !DILocation(line: 2989, column: 9, scope: !6932)
!6992 = !DILocation(line: 2990, column: 56, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 2989, column: 52)
!6994 = !DILocation(line: 2990, column: 64, scope: !6993)
!6995 = !DILocation(line: 0, scope: !6993)
!6996 = !DILocation(line: 2948, column: 14, scope: !6932)
!6997 = !DILocation(line: 2999, column: 18, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 2999, column: 9)
!6999 = !DILocation(line: 2999, column: 9, scope: !6932)
!7000 = !DILocation(line: 3000, column: 18, scope: !6998)
!7001 = !DILocation(line: 3000, column: 9, scope: !6998)
!7002 = !DILocation(line: 3006, column: 16, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3006, column: 9)
!7004 = !{!789, !709, i64 2956}
!7005 = !DILocation(line: 3006, column: 9, scope: !7003)
!7006 = !DILocation(line: 3006, column: 46, scope: !7003)
!7007 = !DILocation(line: 3008, column: 28, scope: !7003)
!7008 = !{!789, !709, i64 2372}
!7009 = !DILocation(line: 3008, column: 11, scope: !7003)
!7010 = !DILocation(line: 3008, column: 51, scope: !7003)
!7011 = !DILocation(line: 3009, column: 41, scope: !7003)
!7012 = !DILocation(line: 3009, column: 39, scope: !7003)
!7013 = !DILocation(line: 3008, column: 59, scope: !7003)
!7014 = !DILocation(line: 3007, column: 18, scope: !7003)
!7015 = !DILocation(line: 3006, column: 9, scope: !6932)
!7016 = !DILocation(line: 3012, column: 13, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 3011, column: 31)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 3011, column: 13)
!7019 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 3010, column: 5)
!7020 = !DILocation(line: 3013, column: 13, scope: !7017)
!7021 = !DILocation(line: 3019, column: 18, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3019, column: 9)
!7023 = !DILocation(line: 3019, column: 9, scope: !6932)
!7024 = !DILocation(line: 3020, column: 46, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 3019, column: 37)
!7026 = !DILocation(line: 3020, column: 55, scope: !7025)
!7027 = !DILocation(line: 3022, column: 13, scope: !7025)
!7028 = !DILocation(line: 3022, column: 22, scope: !7025)
!7029 = !DILocation(line: 3021, column: 17, scope: !7025)
!7030 = !DILocation(line: 3020, column: 16, scope: !7025)
!7031 = !DILocation(line: 3020, column: 25, scope: !7025)
!7032 = !DILocation(line: 3020, column: 44, scope: !7025)
!7033 = !DILocation(line: 3023, column: 25, scope: !7025)
!7034 = !DILocation(line: 3023, column: 45, scope: !7025)
!7035 = !DILocation(line: 3024, column: 25, scope: !7025)
!7036 = !DILocation(line: 3024, column: 44, scope: !7025)
!7037 = !{!798, !709, i64 524348}
!7038 = !DILocation(line: 3025, column: 46, scope: !7025)
!7039 = !DILocation(line: 3025, column: 16, scope: !7025)
!7040 = !DILocation(line: 3025, column: 25, scope: !7025)
!7041 = !DILocation(line: 3025, column: 44, scope: !7025)
!7042 = !DILocation(line: 3030, column: 48, scope: !7025)
!7043 = !DILocation(line: 3030, column: 13, scope: !7025)
!7044 = !DILocation(line: 3029, column: 25, scope: !7025)
!7045 = !DILocation(line: 3029, column: 44, scope: !7025)
!7046 = !DILocation(line: 3032, column: 29, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 3032, column: 13)
!7048 = !DILocation(line: 3032, column: 13, scope: !7047)
!7049 = !DILocation(line: 3032, column: 13, scope: !7025)
!7050 = !DILocation(line: 3033, column: 50, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 3032, column: 37)
!7052 = !DILocation(line: 3033, column: 20, scope: !7051)
!7053 = !DILocation(line: 3033, column: 29, scope: !7051)
!7054 = !DILocation(line: 3033, column: 48, scope: !7051)
!7055 = !DILocation(line: 3034, column: 29, scope: !7051)
!7056 = !DILocation(line: 3034, column: 48, scope: !7051)
!7057 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !7058)
!7058 = distinct !DILocation(line: 3035, column: 6, scope: !7051)
!7059 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !7058)
!7060 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !7058)
!7061 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !7058)
!7062 = !DILocation(line: 3036, column: 9, scope: !7051)
!7063 = !DILocation(line: 3040, column: 29, scope: !7025)
!7064 = !DILocation(line: 3040, column: 50, scope: !7025)
!7065 = !DILocation(line: 3040, column: 48, scope: !7025)
!7066 = !DILocation(line: 3041, column: 20, scope: !7025)
!7067 = !DILocation(line: 3041, column: 29, scope: !7025)
!7068 = !DILocation(line: 3042, column: 13, scope: !7025)
!7069 = !DILocation(line: 3037, column: 9, scope: !7025)
!7070 = !DILocation(line: 3046, column: 9, scope: !7025)
!7071 = !DILocation(line: 3047, column: 9, scope: !7025)
!7072 = !DILocation(line: 3055, column: 25, scope: !6942)
!7073 = !DILocation(line: 3055, column: 44, scope: !6942)
!7074 = !DILocation(line: 3055, column: 49, scope: !6942)
!7075 = !DILocation(line: 3055, column: 9, scope: !6932)
!7076 = !DILocation(line: 3058, column: 23, scope: !6941)
!7077 = !DILocation(line: 3058, column: 13, scope: !6941)
!7078 = !DILocation(line: 3059, column: 30, scope: !6945)
!7079 = !DILocation(line: 3059, column: 39, scope: !6945)
!7080 = !DILocation(line: 3059, column: 21, scope: !6945)
!7081 = !DILocation(line: 3059, column: 13, scope: !6941)
!7082 = !DILocation(line: 3061, column: 26, scope: !6944)
!7083 = !DILocation(line: 3061, column: 64, scope: !6944)
!7084 = !DILocation(line: 3061, column: 17, scope: !6944)
!7085 = !DILocation(line: 3060, column: 23, scope: !6944)
!7086 = !DILocation(line: 3062, column: 29, scope: !6944)
!7087 = !DILocation(line: 3062, column: 48, scope: !6944)
!7088 = !DILocation(line: 3063, column: 48, scope: !6944)
!7089 = !DILocation(line: 3064, column: 13, scope: !6944)
!7090 = !DILocation(line: 3067, column: 9, scope: !6944)
!7091 = !DILocation(line: 3068, column: 5, scope: !6941)
!7092 = !DILocation(line: 3071, column: 9, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3071, column: 9)
!7094 = !DILocation(line: 3071, column: 27, scope: !7093)
!7095 = !DILocation(line: 3071, column: 36, scope: !7093)
!7096 = !DILocation(line: 3071, column: 18, scope: !7093)
!7097 = !DILocation(line: 3071, column: 9, scope: !6932)
!7098 = !DILocation(line: 3072, column: 9, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 3071, column: 56)
!7100 = !DILocation(line: 3073, column: 9, scope: !7099)
!7101 = !DILocation(line: 3077, column: 18, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3077, column: 9)
!7103 = !DILocation(line: 3077, column: 9, scope: !6932)
!7104 = !DILocation(line: 3078, column: 9, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3077, column: 34)
!7106 = !DILocation(line: 3079, column: 9, scope: !7105)
!7107 = !DILocation(line: 3083, column: 25, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3083, column: 9)
!7109 = !DILocation(line: 3083, column: 44, scope: !7108)
!7110 = !DILocation(line: 3083, column: 9, scope: !6932)
!7111 = !DILocation(line: 3084, column: 25, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 3083, column: 50)
!7113 = !DILocation(line: 3084, column: 37, scope: !7112)
!7114 = !DILocation(line: 3085, column: 25, scope: !7112)
!7115 = !DILocation(line: 3085, column: 45, scope: !7112)
!7116 = !DILocation(line: 3086, column: 9, scope: !7112)
!7117 = !DILocation(line: 2666, column: 5, scope: !6527, inlinedAt: !7118)
!7118 = distinct !DILocation(line: 3088, column: 9, scope: !7112)
!7119 = !DILocation(line: 2667, column: 17, scope: !6527, inlinedAt: !7118)
!7120 = !DILocation(line: 2666, column: 19, scope: !6527, inlinedAt: !7118)
!7121 = !DILocation(line: 2670, column: 5, scope: !6527, inlinedAt: !7118)
!7122 = !DILocation(line: 2674, column: 16, scope: !6537, inlinedAt: !7118)
!7123 = !DILocation(line: 2674, column: 25, scope: !6537, inlinedAt: !7118)
!7124 = !DILocation(line: 2674, column: 9, scope: !6537, inlinedAt: !7118)
!7125 = !DILocation(line: 2674, column: 9, scope: !6527, inlinedAt: !7118)
!7126 = !DILocation(line: 2674, column: 33, scope: !6537, inlinedAt: !7118)
!7127 = !DILocation(line: 2674, column: 48, scope: !6537, inlinedAt: !7118)
!7128 = !DILocation(line: 2668, column: 14, scope: !6527, inlinedAt: !7118)
!7129 = !DILocation(line: 2676, column: 19, scope: !6527, inlinedAt: !7118)
!7130 = !DILocation(line: 2676, column: 10, scope: !6527, inlinedAt: !7118)
!7131 = !DILocation(line: 2676, column: 17, scope: !6527, inlinedAt: !7118)
!7132 = !DILocation(line: 2677, column: 5, scope: !6527, inlinedAt: !7118)
!7133 = !DILocation(line: 2678, column: 1, scope: !6527, inlinedAt: !7118)
!7134 = !DILocation(line: 3089, column: 16, scope: !7112)
!7135 = !DILocation(line: 3089, column: 25, scope: !7112)
!7136 = !DILocation(line: 3089, column: 44, scope: !7112)
!7137 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !7138)
!7138 = distinct !DILocation(line: 3090, column: 9, scope: !7112)
!7139 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !7138)
!7140 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !7138)
!7141 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !7138)
!7142 = !DILocation(line: 3093, column: 9, scope: !7112)
!7143 = !DILocation(line: 3097, column: 25, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3097, column: 9)
!7145 = !DILocation(line: 3097, column: 45, scope: !7144)
!7146 = !DILocation(line: 3097, column: 9, scope: !6932)
!7147 = !DILocation(line: 3100, column: 9, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 3097, column: 63)
!7149 = !DILocation(line: 3104, column: 13, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 3104, column: 13)
!7151 = !DILocation(line: 3104, column: 21, scope: !7150)
!7152 = !DILocation(line: 3104, column: 42, scope: !7150)
!7153 = !DILocation(line: 3104, column: 51, scope: !7150)
!7154 = !DILocation(line: 3104, column: 33, scope: !7150)
!7155 = !DILocation(line: 3104, column: 13, scope: !7148)
!7156 = !DILocation(line: 3105, column: 33, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 3104, column: 72)
!7158 = !DILocation(line: 3106, column: 13, scope: !7157)
!7159 = !DILocation(line: 3109, column: 9, scope: !7157)
!7160 = !DILocation(line: 3112, column: 9, scope: !7148)
!7161 = !DILocation(line: 3113, column: 5, scope: !7148)
!7162 = !DILocation(line: 3114, column: 9, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 3113, column: 12)
!7164 = !DILocation(line: 3116, column: 1, scope: !6932)
!7165 = !DILocation(line: 0, scope: !6982)
!7166 = distinct !DISubprogram(name: "clusterHandleSlaveMigration", scope: !3, file: !3, line: 3145, type: !282, isLocal: false, isDefinition: true, scopeLine: 3145, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7167)
!7167 = !{!7168, !7169, !7170, !7171, !7172, !7173, !7174, !7175, !7176, !7178, !7179}
!7168 = !DILocalVariable(name: "max_slaves", arg: 1, scope: !7166, file: !3, line: 3145, type: !177)
!7169 = !DILocalVariable(name: "j", scope: !7166, file: !3, line: 3146, type: !177)
!7170 = !DILocalVariable(name: "okslaves", scope: !7166, file: !3, line: 3146, type: !177)
!7171 = !DILocalVariable(name: "mymaster", scope: !7166, file: !3, line: 3147, type: !378)
!7172 = !DILocalVariable(name: "target", scope: !7166, file: !3, line: 3147, type: !378)
!7173 = !DILocalVariable(name: "candidate", scope: !7166, file: !3, line: 3147, type: !378)
!7174 = !DILocalVariable(name: "di", scope: !7166, file: !3, line: 3148, type: !297)
!7175 = !DILocalVariable(name: "de", scope: !7166, file: !3, line: 3149, type: !340)
!7176 = !DILocalVariable(name: "node", scope: !7177, file: !3, line: 3175, type: !378)
!7177 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3174, column: 40)
!7178 = !DILocalVariable(name: "okslaves", scope: !7177, file: !3, line: 3176, type: !177)
!7179 = !DILocalVariable(name: "is_orphaned", scope: !7177, file: !3, line: 3176, type: !177)
!7180 = !DILocation(line: 3145, column: 38, scope: !7166)
!7181 = !DILocation(line: 3146, column: 12, scope: !7166)
!7182 = !DILocation(line: 3147, column: 29, scope: !7166)
!7183 = !DILocation(line: 3147, column: 37, scope: !7166)
!7184 = !DILocation(line: 3147, column: 18, scope: !7166)
!7185 = !DILocation(line: 3147, column: 47, scope: !7166)
!7186 = !DILocation(line: 3147, column: 63, scope: !7166)
!7187 = !DILocation(line: 3152, column: 16, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3152, column: 9)
!7189 = !DILocation(line: 3152, column: 25, scope: !7188)
!7190 = !DILocation(line: 3152, column: 31, scope: !7188)
!7191 = !DILocation(line: 3152, column: 9, scope: !7166)
!7192 = !DILocation(line: 3156, column: 18, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3156, column: 9)
!7194 = !DILocation(line: 3156, column: 9, scope: !7166)
!7195 = !DILocation(line: 0, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3157, column: 5)
!7197 = !DILocation(line: 3146, column: 9, scope: !7166)
!7198 = !DILocation(line: 3157, column: 31, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 3157, column: 5)
!7200 = !DILocation(line: 3157, column: 19, scope: !7199)
!7201 = !DILocation(line: 3157, column: 5, scope: !7196)
!7202 = !DILocation(line: 3158, column: 14, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7199, file: !3, line: 3158, column: 13)
!7204 = !DILocation(line: 3158, column: 46, scope: !7203)
!7205 = !DILocation(line: 3159, column: 14, scope: !7203)
!7206 = !DILocation(line: 3158, column: 13, scope: !7199)
!7207 = !DILocation(line: 3159, column: 57, scope: !7203)
!7208 = !DILocation(line: 3159, column: 49, scope: !7203)
!7209 = !DILocation(line: 0, scope: !7203)
!7210 = !DILocation(line: 3157, column: 43, scope: !7199)
!7211 = !DILocation(line: 3157, column: 5, scope: !7199)
!7212 = distinct !{!7212, !7201, !7213}
!7213 = !DILocation(line: 3159, column: 57, scope: !7196)
!7214 = !DILocation(line: 3160, column: 28, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3160, column: 9)
!7216 = !{!789, !709, i64 2952}
!7217 = !DILocation(line: 3160, column: 18, scope: !7215)
!7218 = !DILocation(line: 3160, column: 9, scope: !7166)
!7219 = !DILocation(line: 3173, column: 46, scope: !7166)
!7220 = !DILocation(line: 3173, column: 10, scope: !7166)
!7221 = !DILocation(line: 3148, column: 19, scope: !7166)
!7222 = !DILocation(line: 3174, column: 5, scope: !7166)
!7223 = !DILocation(line: 3174, column: 17, scope: !7166)
!7224 = !DILocation(line: 3149, column: 16, scope: !7166)
!7225 = !DILocation(line: 3174, column: 31, scope: !7166)
!7226 = !DILocation(line: 3213, column: 5, scope: !7166)
!7227 = !DILocation(line: 3220, column: 16, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3220, column: 9)
!7229 = !DILocation(line: 3175, column: 29, scope: !7177)
!7230 = !DILocation(line: 3175, column: 22, scope: !7177)
!7231 = !DILocation(line: 3176, column: 13, scope: !7177)
!7232 = !DILocation(line: 3176, column: 27, scope: !7177)
!7233 = !DILocation(line: 3182, column: 13, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3182, column: 13)
!7235 = !DILocation(line: 3182, column: 31, scope: !7234)
!7236 = !DILocation(line: 3182, column: 34, scope: !7234)
!7237 = !DILocation(line: 3182, column: 13, scope: !7177)
!7238 = !DILocation(line: 3182, column: 52, scope: !7234)
!7239 = !DILocation(line: 0, scope: !7177)
!7240 = !DILocation(line: 3183, column: 27, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3183, column: 13)
!7242 = !DILocation(line: 3183, column: 13, scope: !7177)
!7243 = !DILocation(line: 3183, column: 55, scope: !7241)
!7244 = !DILocation(line: 0, scope: !7241)
!7245 = !DILocation(line: 3186, column: 13, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3186, column: 13)
!7247 = !DILocation(line: 3186, column: 13, scope: !7177)
!7248 = !DILocation(line: 0, scope: !7246)
!7249 = !DILocation(line: 853, column: 47, scope: !3027, inlinedAt: !7250)
!7250 = distinct !DILocation(line: 3186, column: 44, scope: !7246)
!7251 = !DILocation(line: 854, column: 12, scope: !3027, inlinedAt: !7250)
!7252 = !DILocation(line: 854, column: 9, scope: !3027, inlinedAt: !7250)
!7253 = !DILocation(line: 856, column: 24, scope: !3038, inlinedAt: !7250)
!7254 = !DILocation(line: 856, column: 19, scope: !3038, inlinedAt: !7250)
!7255 = !DILocation(line: 856, column: 5, scope: !3036, inlinedAt: !7250)
!7256 = !DILocation(line: 858, column: 5, scope: !3027, inlinedAt: !7250)
!7257 = !DILocation(line: 3186, column: 33, scope: !7246)
!7258 = !DILocation(line: 3187, column: 13, scope: !7177)
!7259 = !DILocation(line: 857, column: 14, scope: !3042, inlinedAt: !7250)
!7260 = !DILocation(line: 857, column: 13, scope: !3038, inlinedAt: !7250)
!7261 = !DILocation(line: 857, column: 48, scope: !3042, inlinedAt: !7250)
!7262 = !DILocation(line: 857, column: 40, scope: !3042, inlinedAt: !7250)
!7263 = !DILocation(line: 0, scope: !3042, inlinedAt: !7250)
!7264 = !DILocation(line: 856, column: 36, scope: !3038, inlinedAt: !7250)
!7265 = !DILocation(line: 856, column: 5, scope: !3038, inlinedAt: !7250)
!7266 = !DILocation(line: 3187, column: 22, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3187, column: 13)
!7268 = !DILocation(line: 3187, column: 27, scope: !7267)
!7269 = !DILocation(line: 3189, column: 13, scope: !7177)
!7270 = !DILocation(line: 3189, column: 13, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3189, column: 13)
!7272 = !DILocation(line: 3190, column: 18, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 3190, column: 17)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 3189, column: 26)
!7275 = !DILocation(line: 3190, column: 25, scope: !7273)
!7276 = !DILocation(line: 3190, column: 34, scope: !7273)
!7277 = !DILocation(line: 3190, column: 43, scope: !7273)
!7278 = !DILocation(line: 3190, column: 17, scope: !7274)
!7279 = !DILocation(line: 3190, column: 48, scope: !7273)
!7280 = !DILocation(line: 0, scope: !7166)
!7281 = !DILocation(line: 3194, column: 24, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 3194, column: 17)
!7283 = !DILocation(line: 3194, column: 18, scope: !7282)
!7284 = !DILocation(line: 3194, column: 17, scope: !7274)
!7285 = !DILocation(line: 3194, column: 61, scope: !7282)
!7286 = !DILocation(line: 3194, column: 59, scope: !7282)
!7287 = !DILocation(line: 3194, column: 39, scope: !7282)
!7288 = !DILocation(line: 3196, column: 19, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 3195, column: 16)
!7290 = !DILocation(line: 3196, column: 33, scope: !7289)
!7291 = !DILocation(line: 3202, column: 22, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3202, column: 13)
!7293 = !DILocation(line: 3202, column: 13, scope: !7177)
!7294 = !DILocation(line: 3203, column: 18, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 3203, column: 13)
!7296 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 3202, column: 37)
!7297 = !DILocation(line: 3203, column: 35, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 3203, column: 13)
!7299 = !DILocation(line: 3203, column: 27, scope: !7298)
!7300 = !DILocation(line: 3203, column: 13, scope: !7295)
!7301 = !DILocation(line: 3204, column: 34, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 3204, column: 21)
!7303 = distinct !DILexicalBlock(scope: !7298, file: !3, line: 3203, column: 51)
!7304 = !DILocation(line: 3204, column: 28, scope: !7302)
!7305 = !DILocation(line: 3205, column: 28, scope: !7302)
!7306 = !DILocation(line: 3204, column: 21, scope: !7302)
!7307 = !DILocation(line: 3206, column: 45, scope: !7302)
!7308 = !DILocation(line: 3204, column: 21, scope: !7303)
!7309 = !DILocation(line: 3208, column: 39, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7302, file: !3, line: 3207, column: 17)
!7311 = !DILocation(line: 3208, column: 33, scope: !7310)
!7312 = !DILocation(line: 3209, column: 17, scope: !7310)
!7313 = !DILocation(line: 3203, column: 47, scope: !7298)
!7314 = !DILocation(line: 3203, column: 13, scope: !7298)
!7315 = distinct !{!7315, !7300, !7316}
!7316 = !DILocation(line: 3210, column: 13, scope: !7295)
!7317 = !DILocation(line: 3172, column: 15, scope: !7166)
!7318 = distinct !{!7318, !7222, !7319}
!7319 = !DILocation(line: 3212, column: 5, scope: !7166)
!7320 = !DILocation(line: 3220, column: 9, scope: !7228)
!7321 = !DILocation(line: 3220, column: 32, scope: !7228)
!7322 = !DILocation(line: 3220, column: 29, scope: !7228)
!7323 = !DILocation(line: 3220, column: 39, scope: !7228)
!7324 = !DILocation(line: 3221, column: 10, scope: !7228)
!7325 = !DILocation(line: 3221, column: 27, scope: !7228)
!7326 = !DILocation(line: 3221, column: 18, scope: !7228)
!7327 = !DILocation(line: 3221, column: 42, scope: !7228)
!7328 = !DILocation(line: 3221, column: 74, scope: !7228)
!7329 = !DILocation(line: 3222, column: 17, scope: !7228)
!7330 = !DILocation(line: 3222, column: 38, scope: !7228)
!7331 = !DILocation(line: 3220, column: 9, scope: !7166)
!7332 = !DILocation(line: 3225, column: 13, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 3223, column: 5)
!7334 = !DILocation(line: 3224, column: 9, scope: !7333)
!7335 = !DILocation(line: 3226, column: 9, scope: !7333)
!7336 = !DILocation(line: 3227, column: 5, scope: !7333)
!7337 = !DILocation(line: 0, scope: !7188)
!7338 = !DILocation(line: 3228, column: 1, scope: !7166)
!7339 = distinct !DISubprogram(name: "manualFailoverCheckTimeout", scope: !3, file: !3, line: 3276, type: !293, isLocal: false, isDefinition: true, scopeLine: 3276, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7340 = !DILocation(line: 3277, column: 16, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 3277, column: 9)
!7342 = !DILocation(line: 3277, column: 25, scope: !7341)
!7343 = !DILocation(line: 3277, column: 9, scope: !7341)
!7344 = !DILocation(line: 3277, column: 32, scope: !7341)
!7345 = !DILocation(line: 3277, column: 60, scope: !7341)
!7346 = !DILocation(line: 3277, column: 58, scope: !7341)
!7347 = !DILocation(line: 3277, column: 9, scope: !7339)
!7348 = !DILocation(line: 3278, column: 9, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 3277, column: 70)
!7350 = !DILocation(line: 3265, column: 16, scope: !1983, inlinedAt: !7351)
!7351 = distinct !DILocation(line: 3279, column: 9, scope: !7349)
!7352 = !DILocation(line: 3265, column: 25, scope: !1983, inlinedAt: !7351)
!7353 = !DILocation(line: 3265, column: 9, scope: !1983, inlinedAt: !7351)
!7354 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !7351)
!7355 = !DILocation(line: 3265, column: 35, scope: !1983, inlinedAt: !7351)
!7356 = !DILocation(line: 3265, column: 9, scope: !1984, inlinedAt: !7351)
!7357 = !DILocation(line: 3266, column: 39, scope: !2175, inlinedAt: !7351)
!7358 = !DILocation(line: 3267, column: 9, scope: !2175, inlinedAt: !7351)
!7359 = !DILocation(line: 3268, column: 5, scope: !2175, inlinedAt: !7351)
!7360 = !DILocation(line: 3269, column: 12, scope: !1984, inlinedAt: !7351)
!7361 = !DILocation(line: 3269, column: 21, scope: !1984, inlinedAt: !7351)
!7362 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !7351)
!7363 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !7351)
!7364 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !7351)
!7365 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !7351)
!7366 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !7351)
!7367 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !7351)
!7368 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !7351)
!7369 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !7351)
!7370 = !DILocation(line: 3280, column: 5, scope: !7349)
!7371 = !DILocation(line: 3281, column: 1, scope: !7339)
!7372 = distinct !DISubprogram(name: "clusterHandleManualFailover", scope: !3, file: !3, line: 3285, type: !293, isLocal: false, isDefinition: true, scopeLine: 3285, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !4)
!7373 = !DILocation(line: 3287, column: 16, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 3287, column: 9)
!7375 = !DILocation(line: 3287, column: 25, scope: !7374)
!7376 = !DILocation(line: 3287, column: 32, scope: !7374)
!7377 = !DILocation(line: 3287, column: 9, scope: !7372)
!7378 = !DILocation(line: 3291, column: 25, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 3291, column: 9)
!7380 = !DILocation(line: 3291, column: 9, scope: !7379)
!7381 = !DILocation(line: 3291, column: 9, scope: !7372)
!7382 = !DILocation(line: 3293, column: 25, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 3293, column: 9)
!7384 = !DILocation(line: 3293, column: 42, scope: !7383)
!7385 = !DILocation(line: 3293, column: 9, scope: !7372)
!7386 = !DILocation(line: 3295, column: 45, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 3295, column: 9)
!7388 = !DILocation(line: 3295, column: 42, scope: !7387)
!7389 = !DILocation(line: 3295, column: 9, scope: !7372)
!7390 = !DILocation(line: 3298, column: 16, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 3295, column: 74)
!7392 = !DILocation(line: 3298, column: 25, scope: !7391)
!7393 = !DILocation(line: 3298, column: 38, scope: !7391)
!7394 = !DILocation(line: 3299, column: 9, scope: !7391)
!7395 = !DILocation(line: 3302, column: 5, scope: !7391)
!7396 = !DILocation(line: 3303, column: 1, scope: !7372)
!7397 = !DILocation(line: 3313, column: 9, scope: !292)
!7398 = !DILocation(line: 3317, column: 14, scope: !292)
!7399 = !DILocation(line: 3317, column: 34, scope: !292)
!7400 = !DILocation(line: 3317, column: 28, scope: !292)
!7401 = !DILocation(line: 3318, column: 18, scope: !292)
!7402 = !DILocation(line: 3322, column: 14, scope: !292)
!7403 = !DILocation(line: 3329, column: 32, scope: !382)
!7404 = !DILocation(line: 3329, column: 15, scope: !382)
!7405 = !DILocation(line: 3330, column: 13, scope: !382)
!7406 = !DILocation(line: 3332, column: 13, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !382, file: !3, line: 3332, column: 13)
!7408 = !DILocation(line: 3332, column: 21, scope: !7407)
!7409 = !DILocation(line: 3332, column: 40, scope: !7407)
!7410 = !DILocation(line: 3332, column: 29, scope: !7407)
!7411 = !DILocation(line: 3332, column: 49, scope: !7407)
!7412 = !DILocation(line: 3336, column: 13, scope: !382)
!7413 = !DILocation(line: 3337, column: 17, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 3336, column: 22)
!7415 = distinct !DILexicalBlock(scope: !382, file: !3, line: 3336, column: 13)
!7416 = !DILocation(line: 3333, column: 26, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 3333, column: 18)
!7418 = !DILocation(line: 3333, column: 45, scope: !7417)
!7419 = !DILocation(line: 3333, column: 34, scope: !7417)
!7420 = !DILocation(line: 3333, column: 54, scope: !7417)
!7421 = !DILocation(line: 3334, column: 26, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 3334, column: 18)
!7423 = !DILocation(line: 3334, column: 40, scope: !7422)
!7424 = !DILocation(line: 3334, column: 18, scope: !7417)
!7425 = !DILocation(line: 419, column: 20, scope: !1720, inlinedAt: !7426)
!7426 = distinct !DILocation(line: 3361, column: 5, scope: !292)
!7427 = !DILocation(line: 3334, column: 65, scope: !7422)
!7428 = !DILocation(line: 3337, column: 17, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 3337, column: 17)
!7430 = !DILocation(line: 3337, column: 26, scope: !7429)
!7431 = !DILocation(line: 0, scope: !7429)
!7432 = !DILocation(line: 3338, column: 21, scope: !7414)
!7433 = !DILocation(line: 3340, column: 17, scope: !7414)
!7434 = !DILocation(line: 3344, column: 27, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 3340, column: 26)
!7436 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 3340, column: 17)
!7437 = !DILocation(line: 3344, column: 25, scope: !7435)
!7438 = !DILocation(line: 3345, column: 25, scope: !7435)
!7439 = !DILocation(line: 3345, column: 43, scope: !7435)
!7440 = !DILocation(line: 3345, column: 17, scope: !7435)
!7441 = !DILocation(line: 3346, column: 17, scope: !7435)
!7442 = !DILocation(line: 3346, column: 46, scope: !7435)
!7443 = !DILocation(line: 3347, column: 13, scope: !7435)
!7444 = !DILocation(line: 3348, column: 17, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 3347, column: 20)
!7446 = !DILocation(line: 3348, column: 31, scope: !7445)
!7447 = !DILocation(line: 3357, column: 32, scope: !292)
!7448 = !DILocation(line: 3320, column: 14, scope: !292)
!7449 = !DILocation(line: 3358, column: 9, scope: !292)
!7450 = !DILocation(line: 419, column: 28, scope: !1720, inlinedAt: !7426)
!7451 = !DILocation(line: 419, column: 9, scope: !1720, inlinedAt: !7426)
!7452 = !DILocation(line: 420, column: 29, scope: !1720, inlinedAt: !7426)
!7453 = !DILocation(line: 420, column: 22, scope: !1720, inlinedAt: !7426)
!7454 = !DILocation(line: 420, column: 9, scope: !1720, inlinedAt: !7426)
!7455 = !DILocation(line: 422, column: 19, scope: !1720, inlinedAt: !7426)
!7456 = !DILocation(line: 423, column: 19, scope: !1720, inlinedAt: !7426)
!7457 = !DILocation(line: 424, column: 23, scope: !1734, inlinedAt: !7426)
!7458 = !DILocation(line: 424, column: 9, scope: !1720, inlinedAt: !7426)
!7459 = !DILocation(line: 0, scope: !292)
!7460 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !7461)
!7461 = distinct !DILocation(line: 425, column: 9, scope: !1741, inlinedAt: !7426)
!7462 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !7461)
!7463 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !7461)
!7464 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !7461)
!7465 = !DILocation(line: 427, column: 5, scope: !1741, inlinedAt: !7426)
!7466 = !DILocation(line: 428, column: 1, scope: !1720, inlinedAt: !7426)
!7467 = !DILocation(line: 3366, column: 46, scope: !292)
!7468 = !DILocation(line: 3366, column: 10, scope: !292)
!7469 = !DILocation(line: 3311, column: 19, scope: !292)
!7470 = !DILocation(line: 3367, column: 12, scope: !292)
!7471 = !DILocation(line: 3367, column: 21, scope: !292)
!7472 = !DILocation(line: 3367, column: 39, scope: !292)
!7473 = !DILocation(line: 3368, column: 5, scope: !292)
!7474 = !DILocation(line: 3368, column: 17, scope: !292)
!7475 = !DILocation(line: 3312, column: 16, scope: !292)
!7476 = !DILocation(line: 3368, column: 31, scope: !292)
!7477 = !DILocation(line: 3369, column: 29, scope: !385)
!7478 = !DILocation(line: 3369, column: 22, scope: !385)
!7479 = !DILocation(line: 3373, column: 19, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3373, column: 13)
!7481 = !DILocation(line: 3373, column: 25, scope: !7480)
!7482 = !DILocation(line: 3373, column: 13, scope: !385)
!7483 = distinct !{!7483, !7473, !7484}
!7484 = !DILocation(line: 3434, column: 5, scope: !292)
!7485 = !DILocation(line: 3375, column: 25, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3375, column: 13)
!7487 = !DILocation(line: 3375, column: 13, scope: !385)
!7488 = !DILocation(line: 3376, column: 20, scope: !7486)
!7489 = !DILocation(line: 3376, column: 29, scope: !7486)
!7490 = !DILocation(line: 3376, column: 46, scope: !7486)
!7491 = !DILocation(line: 3376, column: 13, scope: !7486)
!7492 = !DILocation(line: 3380, column: 13, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !385, file: !3, line: 3380, column: 13)
!7494 = !DILocation(line: 3380, column: 35, scope: !7493)
!7495 = !DILocation(line: 3380, column: 50, scope: !7493)
!7496 = !DILocation(line: 3380, column: 42, scope: !7493)
!7497 = !DILocation(line: 3380, column: 56, scope: !7493)
!7498 = !DILocation(line: 3380, column: 13, scope: !385)
!7499 = !DILocation(line: 3381, column: 13, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3380, column: 77)
!7501 = !DILocation(line: 3382, column: 13, scope: !7500)
!7502 = !DILocation(line: 3385, column: 19, scope: !388)
!7503 = !DILocation(line: 3385, column: 24, scope: !388)
!7504 = !DILocation(line: 3385, column: 13, scope: !385)
!7505 = !DILocation(line: 3390, column: 60, scope: !387)
!7506 = !DILocation(line: 3391, column: 23, scope: !387)
!7507 = !DILocation(line: 3391, column: 30, scope: !387)
!7508 = !{!789, !709, i64 352}
!7509 = !DILocation(line: 3390, column: 18, scope: !387)
!7510 = !DILocation(line: 3386, column: 17, scope: !387)
!7511 = !DILocation(line: 3392, column: 20, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !387, file: !3, line: 3392, column: 17)
!7513 = !DILocation(line: 3392, column: 17, scope: !387)
!7514 = !DILocation(line: 3398, column: 27, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 3398, column: 21)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 3392, column: 27)
!7517 = !DILocation(line: 3398, column: 37, scope: !7515)
!7518 = !DILocation(line: 3398, column: 21, scope: !7516)
!7519 = !DILocation(line: 3398, column: 61, scope: !7515)
!7520 = !DILocation(line: 3398, column: 59, scope: !7515)
!7521 = !DILocation(line: 3398, column: 43, scope: !7515)
!7522 = !DILocation(line: 3401, column: 27, scope: !7516)
!7523 = !DILocation(line: 3399, column: 17, scope: !7516)
!7524 = !DILocation(line: 3402, column: 17, scope: !7516)
!7525 = !DILocation(line: 590, column: 45, scope: !2130, inlinedAt: !7526)
!7526 = distinct !DILocation(line: 3404, column: 20, scope: !387)
!7527 = !DILocation(line: 591, column: 25, scope: !2130, inlinedAt: !7526)
!7528 = !DILocation(line: 591, column: 18, scope: !2130, inlinedAt: !7526)
!7529 = !DILocation(line: 592, column: 19, scope: !2130, inlinedAt: !7526)
!7530 = !DILocation(line: 592, column: 11, scope: !2130, inlinedAt: !7526)
!7531 = !DILocation(line: 592, column: 17, scope: !2130, inlinedAt: !7526)
!7532 = !DILocation(line: 593, column: 20, scope: !2130, inlinedAt: !7526)
!7533 = !DILocation(line: 593, column: 11, scope: !2130, inlinedAt: !7526)
!7534 = !DILocation(line: 593, column: 18, scope: !2130, inlinedAt: !7526)
!7535 = !DILocation(line: 594, column: 20, scope: !2130, inlinedAt: !7526)
!7536 = !DILocation(line: 594, column: 11, scope: !2130, inlinedAt: !7526)
!7537 = !DILocation(line: 594, column: 18, scope: !2130, inlinedAt: !7526)
!7538 = !DILocation(line: 595, column: 11, scope: !2130, inlinedAt: !7526)
!7539 = !DILocation(line: 595, column: 16, scope: !2130, inlinedAt: !7526)
!7540 = !DILocation(line: 596, column: 11, scope: !2130, inlinedAt: !7526)
!7541 = !DILocation(line: 597, column: 5, scope: !2130, inlinedAt: !7526)
!7542 = !DILocation(line: 3388, column: 26, scope: !387)
!7543 = !DILocation(line: 3405, column: 22, scope: !387)
!7544 = !DILocation(line: 3406, column: 24, scope: !387)
!7545 = !DILocation(line: 3407, column: 38, scope: !387)
!7546 = !DILocation(line: 3407, column: 13, scope: !387)
!7547 = !DILocation(line: 3415, column: 35, scope: !387)
!7548 = !DILocation(line: 3387, column: 22, scope: !387)
!7549 = !DILocation(line: 3416, column: 41, scope: !387)
!7550 = !DILocation(line: 3416, column: 35, scope: !387)
!7551 = !DILocation(line: 3416, column: 13, scope: !387)
!7552 = !DILocation(line: 3418, column: 17, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !387, file: !3, line: 3418, column: 17)
!7554 = !DILocation(line: 3418, column: 17, scope: !387)
!7555 = !DILocation(line: 3422, column: 33, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 3418, column: 32)
!7557 = !DILocation(line: 3423, column: 13, scope: !7556)
!7558 = !DILocation(line: 3429, column: 25, scope: !387)
!7559 = !DILocation(line: 3432, column: 21, scope: !387)
!7560 = !DILocation(line: 3432, column: 49, scope: !387)
!7561 = !DILocation(line: 3431, column: 13, scope: !387)
!7562 = !DILocation(line: 3433, column: 9, scope: !388)
!7563 = !DILocation(line: 3435, column: 5, scope: !292)
!7564 = !DILocation(line: 3439, column: 11, scope: !393)
!7565 = !DILocation(line: 3439, column: 21, scope: !393)
!7566 = !DILocation(line: 3439, column: 9, scope: !292)
!7567 = !DILocation(line: 3440, column: 13, scope: !392)
!7568 = !DILocation(line: 3444, column: 14, scope: !397)
!7569 = !DILocation(line: 3444, column: 9, scope: !397)
!7570 = !DILocation(line: 3445, column: 42, scope: !395)
!7571 = !DILocation(line: 3445, column: 51, scope: !395)
!7572 = !DILocation(line: 3445, column: 18, scope: !395)
!7573 = !DILocation(line: 3446, column: 33, scope: !395)
!7574 = !DILocation(line: 3446, column: 26, scope: !395)
!7575 = !DILocation(line: 3449, column: 23, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !395, file: !3, line: 3449, column: 17)
!7577 = !DILocation(line: 3449, column: 28, scope: !7576)
!7578 = !DILocation(line: 3449, column: 36, scope: !7576)
!7579 = !DILocation(line: 3449, column: 45, scope: !7576)
!7580 = !DILocation(line: 3449, column: 55, scope: !7576)
!7581 = !DILocation(line: 3449, column: 17, scope: !395)
!7582 = !DILocation(line: 3450, column: 23, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !395, file: !3, line: 3450, column: 17)
!7584 = !DILocation(line: 3450, column: 29, scope: !7583)
!7585 = !DILocation(line: 3450, column: 17, scope: !395)
!7586 = !DILocation(line: 3452, column: 31, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !395, file: !3, line: 3452, column: 17)
!7588 = !DILocation(line: 3452, column: 39, scope: !7587)
!7589 = !DILocation(line: 0, scope: !7587)
!7590 = !DILocation(line: 3452, column: 51, scope: !7587)
!7591 = !DILocation(line: 3452, column: 17, scope: !395)
!7592 = !DILocation(line: 3455, column: 13, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 3452, column: 74)
!7594 = !DILocation(line: 0, scope: !7593)
!7595 = !DILocation(line: 0, scope: !7576)
!7596 = !DILocation(line: 3444, column: 29, scope: !396)
!7597 = !DILocation(line: 3444, column: 9, scope: !396)
!7598 = !DILocation(line: 3444, column: 23, scope: !396)
!7599 = distinct !{!7599, !7569, !7600}
!7600 = !DILocation(line: 3456, column: 9, scope: !397)
!7601 = !DILocation(line: 3457, column: 13, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !392, file: !3, line: 3457, column: 13)
!7603 = !DILocation(line: 3457, column: 13, scope: !392)
!7604 = !DILocation(line: 3458, column: 54, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 3457, column: 28)
!7606 = !DILocation(line: 3458, column: 13, scope: !7605)
!7607 = !DILocation(line: 3459, column: 44, scope: !7605)
!7608 = !DILocation(line: 3459, column: 13, scope: !7605)
!7609 = !DILocation(line: 3460, column: 9, scope: !7605)
!7610 = !DILocation(line: 3461, column: 5, scope: !392)
!7611 = !DILocation(line: 3314, column: 9, scope: !292)
!7612 = !DILocation(line: 3315, column: 9, scope: !292)
!7613 = !DILocation(line: 3316, column: 9, scope: !292)
!7614 = !DILocation(line: 3472, column: 37, scope: !292)
!7615 = !DILocation(line: 3472, column: 46, scope: !292)
!7616 = !DILocation(line: 3472, column: 10, scope: !292)
!7617 = !DILocation(line: 3473, column: 5, scope: !292)
!7618 = !DILocation(line: 3473, column: 17, scope: !292)
!7619 = !DILocation(line: 3473, column: 31, scope: !292)
!7620 = !DILocation(line: 3474, column: 29, scope: !399)
!7621 = !DILocation(line: 3474, column: 22, scope: !399)
!7622 = !DILocation(line: 3475, column: 15, scope: !399)
!7623 = !DILocation(line: 3478, column: 19, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3478, column: 13)
!7625 = !DILocation(line: 3478, column: 25, scope: !7624)
!7626 = !DILocation(line: 3478, column: 13, scope: !399)
!7627 = distinct !{!7627, !7617, !7628}
!7628 = !DILocation(line: 3556, column: 5, scope: !292)
!7629 = !DILocation(line: 3484, column: 13, scope: !403)
!7630 = !DILocation(line: 3484, column: 33, scope: !403)
!7631 = !DILocation(line: 3484, column: 36, scope: !403)
!7632 = !DILocation(line: 3484, column: 55, scope: !403)
!7633 = !DILocation(line: 3484, column: 59, scope: !403)
!7634 = !DILocation(line: 3484, column: 13, scope: !399)
!7635 = !DILocation(line: 853, column: 47, scope: !3027, inlinedAt: !7636)
!7636 = distinct !DILocation(line: 3485, column: 28, scope: !402)
!7637 = !DILocation(line: 854, column: 12, scope: !3027, inlinedAt: !7636)
!7638 = !DILocation(line: 854, column: 9, scope: !3027, inlinedAt: !7636)
!7639 = !DILocation(line: 856, column: 10, scope: !3036, inlinedAt: !7636)
!7640 = !DILocation(line: 856, column: 24, scope: !3038, inlinedAt: !7636)
!7641 = !DILocation(line: 856, column: 19, scope: !3038, inlinedAt: !7636)
!7642 = !DILocation(line: 856, column: 5, scope: !3036, inlinedAt: !7636)
!7643 = !DILocation(line: 858, column: 5, scope: !3027, inlinedAt: !7636)
!7644 = !DILocation(line: 3485, column: 17, scope: !402)
!7645 = !DILocation(line: 3490, column: 31, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !402, file: !3, line: 3490, column: 17)
!7647 = !DILocation(line: 857, column: 14, scope: !3042, inlinedAt: !7636)
!7648 = !DILocation(line: 857, column: 13, scope: !3038, inlinedAt: !7636)
!7649 = !DILocation(line: 857, column: 48, scope: !3042, inlinedAt: !7636)
!7650 = !DILocation(line: 857, column: 40, scope: !3042, inlinedAt: !7636)
!7651 = !DILocation(line: 0, scope: !3042, inlinedAt: !7636)
!7652 = !DILocation(line: 856, column: 36, scope: !3038, inlinedAt: !7636)
!7653 = !DILocation(line: 856, column: 5, scope: !3038, inlinedAt: !7636)
!7654 = !DILocation(line: 3490, column: 26, scope: !7646)
!7655 = !DILocation(line: 3490, column: 40, scope: !7646)
!7656 = !DILocation(line: 3490, column: 49, scope: !7646)
!7657 = !DILocation(line: 3490, column: 53, scope: !7646)
!7658 = !DILocation(line: 3491, column: 29, scope: !7646)
!7659 = !DILocation(line: 3490, column: 17, scope: !402)
!7660 = !DILocation(line: 3493, column: 33, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7646, file: !3, line: 3492, column: 13)
!7662 = !DILocation(line: 3494, column: 13, scope: !7661)
!7663 = !DILocation(line: 3495, column: 26, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !402, file: !3, line: 3495, column: 17)
!7665 = !DILocation(line: 3495, column: 17, scope: !402)
!7666 = !DILocation(line: 3495, column: 40, scope: !7664)
!7667 = !DILocation(line: 3496, column: 37, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !402, file: !3, line: 3496, column: 17)
!7669 = !DILocation(line: 3496, column: 48, scope: !7668)
!7670 = !DILocation(line: 3496, column: 56, scope: !7668)
!7671 = !DILocation(line: 3496, column: 17, scope: !402)
!7672 = !DILocation(line: 3497, column: 17, scope: !7668)
!7673 = !DILocation(line: 3498, column: 9, scope: !402)
!7674 = !DILocation(line: 3503, column: 19, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3503, column: 13)
!7676 = !DILocation(line: 3503, column: 13, scope: !7675)
!7677 = !DILocation(line: 3503, column: 24, scope: !7675)
!7678 = !DILocation(line: 3519, column: 24, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3519, column: 13)
!7680 = !DILocation(line: 3504, column: 31, scope: !7675)
!7681 = !DILocation(line: 3504, column: 17, scope: !7675)
!7682 = !DILocation(line: 3505, column: 20, scope: !7675)
!7683 = !DILocation(line: 3504, column: 37, scope: !7675)
!7684 = !DILocation(line: 3505, column: 41, scope: !7675)
!7685 = !DILocation(line: 3506, column: 19, scope: !7675)
!7686 = !DILocation(line: 3506, column: 13, scope: !7675)
!7687 = !DILocation(line: 3506, column: 29, scope: !7675)
!7688 = !DILocation(line: 3507, column: 19, scope: !7675)
!7689 = !DILocation(line: 3507, column: 33, scope: !7675)
!7690 = !DILocation(line: 3507, column: 51, scope: !7675)
!7691 = !DILocation(line: 3509, column: 17, scope: !7675)
!7692 = !DILocation(line: 3509, column: 64, scope: !7675)
!7693 = !DILocation(line: 3509, column: 35, scope: !7675)
!7694 = !DILocation(line: 3503, column: 13, scope: !399)
!7695 = !DILocation(line: 3512, column: 13, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 3510, column: 9)
!7697 = !DILocation(line: 3513, column: 9, scope: !7696)
!7698 = !DILocation(line: 3519, column: 19, scope: !7679)
!7699 = !DILocation(line: 3519, column: 13, scope: !7679)
!7700 = !DILocation(line: 3520, column: 19, scope: !7679)
!7701 = !DILocation(line: 3520, column: 29, scope: !7679)
!7702 = !DILocation(line: 3520, column: 34, scope: !7679)
!7703 = !DILocation(line: 3521, column: 26, scope: !7679)
!7704 = !DILocation(line: 3521, column: 18, scope: !7679)
!7705 = !DILocation(line: 3521, column: 50, scope: !7679)
!7706 = !DILocation(line: 3521, column: 70, scope: !7679)
!7707 = !DILocation(line: 3521, column: 41, scope: !7679)
!7708 = !DILocation(line: 3519, column: 13, scope: !399)
!7709 = !DILocation(line: 3523, column: 13, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 3522, column: 9)
!7711 = !DILocation(line: 3524, column: 13, scope: !7710)
!7712 = !DILocation(line: 3529, column: 20, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3529, column: 13)
!7714 = !DILocation(line: 3529, column: 29, scope: !7713)
!7715 = !DILocation(line: 3529, column: 13, scope: !7713)
!7716 = !DILocation(line: 3529, column: 36, scope: !7713)
!7717 = !DILocation(line: 3530, column: 13, scope: !7713)
!7718 = !DILocation(line: 3530, column: 34, scope: !7713)
!7719 = !DILocation(line: 3531, column: 29, scope: !7713)
!7720 = !DILocation(line: 3531, column: 38, scope: !7713)
!7721 = !DILocation(line: 3531, column: 46, scope: !7713)
!7722 = !DILocation(line: 3529, column: 13, scope: !399)
!7723 = !DILocation(line: 3534, column: 13, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 3533, column: 9)
!7725 = !DILocation(line: 3535, column: 13, scope: !7724)
!7726 = !DILocation(line: 3539, column: 19, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3539, column: 13)
!7728 = !DILocation(line: 3539, column: 29, scope: !7727)
!7729 = !DILocation(line: 3539, column: 13, scope: !399)
!7730 = !DILocation(line: 3544, column: 21, scope: !399)
!7731 = !DILocation(line: 3476, column: 18, scope: !399)
!7732 = !DILocation(line: 3546, column: 28, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !399, file: !3, line: 3546, column: 13)
!7734 = !DILocation(line: 3546, column: 19, scope: !7733)
!7735 = !DILocation(line: 3546, column: 13, scope: !399)
!7736 = !DILocation(line: 3549, column: 25, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 3549, column: 17)
!7738 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 3546, column: 50)
!7739 = !DILocation(line: 3549, column: 31, scope: !7737)
!7740 = !DILocation(line: 3549, column: 17, scope: !7738)
!7741 = !DILocation(line: 3551, column: 21, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 3549, column: 74)
!7743 = !DILocation(line: 3550, column: 17, scope: !7742)
!7744 = !DILocation(line: 3552, column: 29, scope: !7742)
!7745 = !DILocation(line: 3554, column: 13, scope: !7742)
!7746 = !DILocation(line: 3471, column: 17, scope: !292)
!7747 = !DILocation(line: 3470, column: 16, scope: !292)
!7748 = !DILocation(line: 3469, column: 22, scope: !292)
!7749 = !DILocation(line: 0, scope: !7624)
!7750 = !DILocation(line: 3557, column: 5, scope: !292)
!7751 = !DILocation(line: 3562, column: 9, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3562, column: 9)
!7753 = !DILocation(line: 3563, column: 16, scope: !7752)
!7754 = !DILocation(line: 3563, column: 27, scope: !7752)
!7755 = !DILocation(line: 3562, column: 29, scope: !7752)
!7756 = !DILocation(line: 3564, column: 17, scope: !7752)
!7757 = !DILocation(line: 3564, column: 9, scope: !7752)
!7758 = !DILocation(line: 3564, column: 25, scope: !7752)
!7759 = !DILocation(line: 3565, column: 9, scope: !7752)
!7760 = !DILocation(line: 3562, column: 9, scope: !292)
!7761 = !DILocation(line: 3567, column: 30, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 3566, column: 5)
!7763 = !DILocation(line: 3567, column: 68, scope: !7762)
!7764 = !DILocation(line: 3567, column: 9, scope: !7762)
!7765 = !DILocation(line: 3568, column: 5, scope: !7762)
!7766 = !DILocation(line: 3571, column: 5, scope: !292)
!7767 = !DILocation(line: 3573, column: 9, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3573, column: 9)
!7769 = !DILocation(line: 3573, column: 9, scope: !292)
!7770 = !DILocation(line: 3287, column: 16, scope: !7374, inlinedAt: !7771)
!7771 = distinct !DILocation(line: 3574, column: 9, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 3573, column: 30)
!7773 = !DILocation(line: 3287, column: 25, scope: !7374, inlinedAt: !7771)
!7774 = !DILocation(line: 3287, column: 32, scope: !7374, inlinedAt: !7771)
!7775 = !DILocation(line: 3287, column: 9, scope: !7372, inlinedAt: !7771)
!7776 = !DILocation(line: 3291, column: 25, scope: !7379, inlinedAt: !7771)
!7777 = !DILocation(line: 3291, column: 9, scope: !7379, inlinedAt: !7771)
!7778 = !DILocation(line: 3291, column: 9, scope: !7372, inlinedAt: !7771)
!7779 = !DILocation(line: 3293, column: 25, scope: !7383, inlinedAt: !7771)
!7780 = !DILocation(line: 3293, column: 42, scope: !7383, inlinedAt: !7771)
!7781 = !DILocation(line: 3293, column: 9, scope: !7372, inlinedAt: !7771)
!7782 = !DILocation(line: 3295, column: 45, scope: !7387, inlinedAt: !7771)
!7783 = !DILocation(line: 3295, column: 42, scope: !7387, inlinedAt: !7771)
!7784 = !DILocation(line: 3295, column: 9, scope: !7372, inlinedAt: !7771)
!7785 = !DILocation(line: 3298, column: 16, scope: !7391, inlinedAt: !7771)
!7786 = !DILocation(line: 3298, column: 25, scope: !7391, inlinedAt: !7771)
!7787 = !DILocation(line: 3298, column: 38, scope: !7391, inlinedAt: !7771)
!7788 = !DILocation(line: 3299, column: 9, scope: !7391, inlinedAt: !7771)
!7789 = !DILocation(line: 3302, column: 5, scope: !7391, inlinedAt: !7771)
!7790 = !DILocation(line: 3303, column: 1, scope: !7372, inlinedAt: !7771)
!7791 = !DILocation(line: 3575, column: 22, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 3575, column: 13)
!7793 = !DILocation(line: 3575, column: 43, scope: !7792)
!7794 = !DILocation(line: 3575, column: 13, scope: !7772)
!7795 = !DILocation(line: 3576, column: 13, scope: !7792)
!7796 = !DILocation(line: 3582, column: 13, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 3582, column: 13)
!7798 = !DILocation(line: 3582, column: 44, scope: !7797)
!7799 = !DILocation(line: 3582, column: 30, scope: !7797)
!7800 = !DILocation(line: 3582, column: 64, scope: !7797)
!7801 = !DILocation(line: 3582, column: 13, scope: !7772)
!7802 = !DILocation(line: 3583, column: 13, scope: !7797)
!7803 = !DILocation(line: 3586, column: 9, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !292, file: !3, line: 3586, column: 9)
!7805 = !DILocation(line: 3586, column: 22, scope: !7804)
!7806 = !DILocation(line: 3586, column: 32, scope: !7804)
!7807 = !DILocation(line: 3586, column: 41, scope: !7804)
!7808 = !DILocation(line: 3586, column: 47, scope: !7804)
!7809 = !DILocation(line: 3586, column: 9, scope: !292)
!7810 = !DILocation(line: 3587, column: 9, scope: !7804)
!7811 = !DILocation(line: 3588, column: 1, scope: !292)
!7812 = distinct !DISubprogram(name: "clusterBeforeSleep", scope: !3, file: !3, line: 3595, type: !293, isLocal: false, isDefinition: true, scopeLine: 3595, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7813)
!7813 = !{!7814}
!7814 = !DILocalVariable(name: "fsync", scope: !7815, file: !3, line: 3607, type: !177)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 3606, column: 71)
!7816 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 3606, column: 9)
!7817 = !DILocation(line: 3598, column: 16, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 3598, column: 9)
!7819 = !DILocation(line: 3598, column: 25, scope: !7818)
!7820 = !DILocation(line: 3598, column: 43, scope: !7818)
!7821 = !DILocation(line: 3598, column: 9, scope: !7812)
!7822 = !DILocation(line: 3599, column: 9, scope: !7818)
!7823 = !DILocation(line: 3602, column: 16, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 3602, column: 9)
!7825 = !DILocation(line: 3602, column: 25, scope: !7824)
!7826 = !DILocation(line: 3602, column: 43, scope: !7824)
!7827 = !DILocation(line: 3602, column: 9, scope: !7812)
!7828 = !DILocation(line: 3603, column: 9, scope: !7824)
!7829 = !DILocation(line: 3606, column: 16, scope: !7816)
!7830 = !DILocation(line: 3606, column: 25, scope: !7816)
!7831 = !DILocation(line: 3606, column: 43, scope: !7816)
!7832 = !DILocation(line: 3606, column: 9, scope: !7812)
!7833 = !DILocation(line: 3607, column: 55, scope: !7815)
!7834 = !DILocation(line: 3607, column: 13, scope: !7815)
!7835 = !DILocation(line: 360, column: 33, scope: !1672, inlinedAt: !7836)
!7836 = distinct !DILocation(line: 3609, column: 9, scope: !7815)
!7837 = !DILocation(line: 361, column: 9, scope: !1677, inlinedAt: !7836)
!7838 = !DILocation(line: 361, column: 37, scope: !1677, inlinedAt: !7836)
!7839 = !DILocation(line: 361, column: 9, scope: !1672, inlinedAt: !7836)
!7840 = !DILocation(line: 362, column: 9, scope: !1681, inlinedAt: !7836)
!7841 = !DILocation(line: 363, column: 9, scope: !1681, inlinedAt: !7836)
!7842 = !DILocation(line: 365, column: 1, scope: !1672, inlinedAt: !7836)
!7843 = !DILocation(line: 3610, column: 5, scope: !7815)
!7844 = !DILocation(line: 3614, column: 12, scope: !7812)
!7845 = !DILocation(line: 3614, column: 21, scope: !7812)
!7846 = !DILocation(line: 3614, column: 39, scope: !7812)
!7847 = !DILocation(line: 3615, column: 1, scope: !7812)
!7848 = distinct !DISubprogram(name: "bitmapSetBit", scope: !3, file: !3, line: 3634, type: !2283, isLocal: false, isDefinition: true, scopeLine: 3634, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7849)
!7849 = !{!7850, !7851, !7852, !7853}
!7850 = !DILocalVariable(name: "bitmap", arg: 1, scope: !7848, file: !3, line: 3634, type: !246)
!7851 = !DILocalVariable(name: "pos", arg: 2, scope: !7848, file: !3, line: 3634, type: !177)
!7852 = !DILocalVariable(name: "byte", scope: !7848, file: !3, line: 3635, type: !8)
!7853 = !DILocalVariable(name: "bit", scope: !7848, file: !3, line: 3636, type: !177)
!7854 = !DILocation(line: 3634, column: 34, scope: !7848)
!7855 = !DILocation(line: 3634, column: 46, scope: !7848)
!7856 = !DILocation(line: 3635, column: 21, scope: !7848)
!7857 = !DILocation(line: 3635, column: 18, scope: !7848)
!7858 = !DILocation(line: 3635, column: 11, scope: !7848)
!7859 = !DILocation(line: 3636, column: 18, scope: !7848)
!7860 = !DILocation(line: 3636, column: 9, scope: !7848)
!7861 = !DILocation(line: 3637, column: 22, scope: !7848)
!7862 = !DILocation(line: 3637, column: 5, scope: !7848)
!7863 = !DILocation(line: 3637, column: 18, scope: !7848)
!7864 = !DILocation(line: 3638, column: 1, scope: !7848)
!7865 = !DILocation(line: 3641, column: 36, scope: !2282)
!7866 = !DILocation(line: 3641, column: 48, scope: !2282)
!7867 = !DILocation(line: 3642, column: 21, scope: !2282)
!7868 = !DILocation(line: 3642, column: 18, scope: !2282)
!7869 = !DILocation(line: 3642, column: 11, scope: !2282)
!7870 = !DILocation(line: 3643, column: 18, scope: !2282)
!7871 = !DILocation(line: 3643, column: 9, scope: !2282)
!7872 = !DILocation(line: 3644, column: 24, scope: !2282)
!7873 = !DILocation(line: 3644, column: 5, scope: !2282)
!7874 = !DILocation(line: 3644, column: 18, scope: !2282)
!7875 = !DILocation(line: 3645, column: 1, scope: !2282)
!7876 = distinct !DISubprogram(name: "clusterMastersHaveSlaves", scope: !3, file: !3, line: 3650, type: !3163, isLocal: false, isDefinition: true, scopeLine: 3650, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7877)
!7877 = !{!7878, !7879, !7880, !7881}
!7878 = !DILocalVariable(name: "di", scope: !7876, file: !3, line: 3651, type: !297)
!7879 = !DILocalVariable(name: "de", scope: !7876, file: !3, line: 3652, type: !340)
!7880 = !DILocalVariable(name: "slaves", scope: !7876, file: !3, line: 3653, type: !177)
!7881 = !DILocalVariable(name: "node", scope: !7882, file: !3, line: 3655, type: !378)
!7882 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 3654, column: 40)
!7883 = !DILocation(line: 3651, column: 51, scope: !7876)
!7884 = !DILocation(line: 3651, column: 60, scope: !7876)
!7885 = !DILocation(line: 3651, column: 24, scope: !7876)
!7886 = !DILocation(line: 3651, column: 19, scope: !7876)
!7887 = !DILocation(line: 3653, column: 9, scope: !7876)
!7888 = !DILocation(line: 3654, column: 5, scope: !7876)
!7889 = !DILocation(line: 3654, column: 17, scope: !7876)
!7890 = !DILocation(line: 3652, column: 16, scope: !7876)
!7891 = !DILocation(line: 3654, column: 31, scope: !7876)
!7892 = !DILocation(line: 3655, column: 29, scope: !7882)
!7893 = !DILocation(line: 3655, column: 22, scope: !7882)
!7894 = !DILocation(line: 3657, column: 13, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 3657, column: 13)
!7896 = !DILocation(line: 3657, column: 13, scope: !7882)
!7897 = distinct !{!7897, !7888, !7898}
!7898 = !DILocation(line: 3659, column: 5, scope: !7876)
!7899 = !DILocation(line: 3658, column: 25, scope: !7882)
!7900 = !DILocation(line: 3658, column: 16, scope: !7882)
!7901 = !DILocation(line: 0, scope: !7882)
!7902 = !DILocation(line: 0, scope: !7895)
!7903 = !DILocation(line: 3660, column: 5, scope: !7876)
!7904 = !DILocation(line: 3661, column: 19, scope: !7876)
!7905 = !DILocation(line: 3661, column: 5, scope: !7876)
!7906 = distinct !DISubprogram(name: "clusterNodeSetSlotBit", scope: !3, file: !3, line: 3665, type: !1247, isLocal: false, isDefinition: true, scopeLine: 3665, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7907)
!7907 = !{!7908, !7909, !7910}
!7908 = !DILocalVariable(name: "n", arg: 1, scope: !7906, file: !3, line: 3665, type: !378)
!7909 = !DILocalVariable(name: "slot", arg: 2, scope: !7906, file: !3, line: 3665, type: !177)
!7910 = !DILocalVariable(name: "old", scope: !7906, file: !3, line: 3666, type: !177)
!7911 = !DILocation(line: 3665, column: 40, scope: !7906)
!7912 = !DILocation(line: 3665, column: 47, scope: !7906)
!7913 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !7914)
!7914 = distinct !DILocation(line: 3666, column: 15, scope: !7906)
!7915 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !7914)
!7916 = !DILocation(line: 3628, column: 21, scope: !2263, inlinedAt: !7914)
!7917 = !DILocation(line: 3628, column: 18, scope: !2263, inlinedAt: !7914)
!7918 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !7914)
!7919 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !7914)
!7920 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !7914)
!7921 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !7914)
!7922 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !7914)
!7923 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !7914)
!7924 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !7914)
!7925 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !7914)
!7926 = !DILocation(line: 3666, column: 9, scope: !7906)
!7927 = !DILocation(line: 3634, column: 34, scope: !7848, inlinedAt: !7928)
!7928 = distinct !DILocation(line: 3667, column: 5, scope: !7906)
!7929 = !DILocation(line: 3634, column: 46, scope: !7848, inlinedAt: !7928)
!7930 = !DILocation(line: 3635, column: 11, scope: !7848, inlinedAt: !7928)
!7931 = !DILocation(line: 3636, column: 9, scope: !7848, inlinedAt: !7928)
!7932 = !DILocation(line: 3637, column: 18, scope: !7848, inlinedAt: !7928)
!7933 = !DILocation(line: 3638, column: 1, scope: !7848, inlinedAt: !7928)
!7934 = !DILocation(line: 3668, column: 9, scope: !7906)
!7935 = !DILocation(line: 3669, column: 12, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 3668, column: 15)
!7937 = distinct !DILexicalBlock(scope: !7906, file: !3, line: 3668, column: 9)
!7938 = !DILocation(line: 3669, column: 20, scope: !7936)
!7939 = !DILocation(line: 3683, column: 25, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 3683, column: 13)
!7941 = !DILocation(line: 3683, column: 30, scope: !7940)
!7942 = !DILocation(line: 3651, column: 51, scope: !7876, inlinedAt: !7943)
!7943 = distinct !DILocation(line: 3683, column: 33, scope: !7940)
!7944 = !DILocation(line: 3651, column: 60, scope: !7876, inlinedAt: !7943)
!7945 = !DILocation(line: 3651, column: 24, scope: !7876, inlinedAt: !7943)
!7946 = !DILocation(line: 3651, column: 19, scope: !7876, inlinedAt: !7943)
!7947 = !DILocation(line: 3653, column: 9, scope: !7876, inlinedAt: !7943)
!7948 = !DILocation(line: 3654, column: 5, scope: !7876, inlinedAt: !7943)
!7949 = !DILocation(line: 3654, column: 17, scope: !7876, inlinedAt: !7943)
!7950 = !DILocation(line: 3652, column: 16, scope: !7876, inlinedAt: !7943)
!7951 = !DILocation(line: 3654, column: 31, scope: !7876, inlinedAt: !7943)
!7952 = !DILocation(line: 3655, column: 29, scope: !7882, inlinedAt: !7943)
!7953 = !DILocation(line: 3655, column: 22, scope: !7882, inlinedAt: !7943)
!7954 = !DILocation(line: 3657, column: 13, scope: !7895, inlinedAt: !7943)
!7955 = !DILocation(line: 3657, column: 13, scope: !7882, inlinedAt: !7943)
!7956 = !DILocation(line: 3658, column: 25, scope: !7882, inlinedAt: !7943)
!7957 = !DILocation(line: 3658, column: 16, scope: !7882, inlinedAt: !7943)
!7958 = !DILocation(line: 3659, column: 5, scope: !7876, inlinedAt: !7943)
!7959 = !DILocation(line: 0, scope: !7882, inlinedAt: !7943)
!7960 = !DILocation(line: 0, scope: !7940)
!7961 = !DILocation(line: 3660, column: 5, scope: !7876, inlinedAt: !7943)
!7962 = !DILocation(line: 3661, column: 19, scope: !7876, inlinedAt: !7943)
!7963 = !DILocation(line: 3661, column: 5, scope: !7876, inlinedAt: !7943)
!7964 = !DILocation(line: 3683, column: 13, scope: !7936)
!7965 = !DILocation(line: 3684, column: 16, scope: !7940)
!7966 = !DILocation(line: 3684, column: 22, scope: !7940)
!7967 = !DILocation(line: 3684, column: 13, scope: !7940)
!7968 = !DILocation(line: 3686, column: 5, scope: !7906)
!7969 = !DILocation(line: 3690, column: 42, scope: !2255)
!7970 = !DILocation(line: 3690, column: 49, scope: !2255)
!7971 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !7972)
!7972 = distinct !DILocation(line: 3691, column: 15, scope: !2255)
!7973 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !7972)
!7974 = !DILocation(line: 3628, column: 21, scope: !2263, inlinedAt: !7972)
!7975 = !DILocation(line: 3628, column: 18, scope: !2263, inlinedAt: !7972)
!7976 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !7972)
!7977 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !7972)
!7978 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !7972)
!7979 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !7972)
!7980 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !7972)
!7981 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !7972)
!7982 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !7972)
!7983 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !7972)
!7984 = !DILocation(line: 3691, column: 9, scope: !2255)
!7985 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !7986)
!7986 = distinct !DILocation(line: 3692, column: 5, scope: !2255)
!7987 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !7986)
!7988 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !7986)
!7989 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !7986)
!7990 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !7986)
!7991 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !7986)
!7992 = !DILocation(line: 3693, column: 9, scope: !2255)
!7993 = !DILocation(line: 3693, column: 17, scope: !2300)
!7994 = !DILocation(line: 3693, column: 25, scope: !2300)
!7995 = !DILocation(line: 3693, column: 14, scope: !2300)
!7996 = !DILocation(line: 3694, column: 5, scope: !2255)
!7997 = distinct !DISubprogram(name: "verifyClusterConfigWithData", scope: !3, file: !3, line: 3878, type: !3163, isLocal: false, isDefinition: true, scopeLine: 3878, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !7998)
!7998 = !{!7999, !8000}
!7999 = !DILocalVariable(name: "j", scope: !7997, file: !3, line: 3879, type: !177)
!8000 = !DILocalVariable(name: "update_config", scope: !7997, file: !3, line: 3880, type: !177)
!8001 = !DILocation(line: 3880, column: 9, scope: !7997)
!8002 = !DILocation(line: 3884, column: 16, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 3884, column: 9)
!8004 = !DILocation(line: 3884, column: 37, scope: !8003)
!8005 = !DILocation(line: 3884, column: 9, scope: !7997)
!8006 = !DILocation(line: 3889, column: 9, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 3889, column: 9)
!8008 = !DILocation(line: 3889, column: 9, scope: !7997)
!8009 = !DILocation(line: 0, scope: !8007)
!8010 = !DILocation(line: 3879, column: 9, scope: !7997)
!8011 = !DILocation(line: 3892, column: 28, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 3892, column: 5)
!8013 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 3892, column: 5)
!8014 = !{!789, !709, i64 1792}
!8015 = !DILocation(line: 3892, column: 19, scope: !8012)
!8016 = !DILocation(line: 3892, column: 5, scope: !8013)
!8017 = !{!789, !761, i64 48}
!8018 = !DILocation(line: 3893, column: 13, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 3893, column: 13)
!8020 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 3892, column: 40)
!8021 = !{!8022, !761, i64 0}
!8022 = !{!"redisDb", !761, i64 0, !761, i64 8, !761, i64 16, !761, i64 24, !761, i64 32, !709, i64 40, !790, i64 48, !761, i64 56}
!8023 = !DILocation(line: 3893, column: 13, scope: !8020)
!8024 = !DILocation(line: 3892, column: 36, scope: !8012)
!8025 = !DILocation(line: 3892, column: 5, scope: !8012)
!8026 = distinct !{!8026, !8016, !8027}
!8027 = !DILocation(line: 3894, column: 5, scope: !8013)
!8028 = !DILocation(line: 3898, column: 10, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 3898, column: 5)
!8030 = !DILocation(line: 3898, column: 5, scope: !8029)
!8031 = !DILocation(line: 3899, column: 14, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 3899, column: 13)
!8033 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 3898, column: 41)
!8034 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 3898, column: 5)
!8035 = !DILocation(line: 3899, column: 13, scope: !8033)
!8036 = !DILocation(line: 3903, column: 20, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 3903, column: 13)
!8038 = !DILocation(line: 3903, column: 13, scope: !8037)
!8039 = !DILocation(line: 3903, column: 41, scope: !8037)
!8040 = !DILocation(line: 3903, column: 38, scope: !8037)
!8041 = !DILocation(line: 3903, column: 48, scope: !8037)
!8042 = !DILocation(line: 3904, column: 13, scope: !8037)
!8043 = !DILocation(line: 3904, column: 53, scope: !8037)
!8044 = !DILocation(line: 3903, column: 13, scope: !8033)
!8045 = !DILocation(line: 3910, column: 22, scope: !8033)
!8046 = !DILocation(line: 3912, column: 38, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 3912, column: 13)
!8048 = !DILocation(line: 3912, column: 13, scope: !8033)
!8049 = !DILocation(line: 3913, column: 13, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 3912, column: 47)
!8051 = !DILocation(line: 3915, column: 28, scope: !8050)
!8052 = !DILocation(line: 3706, column: 33, scope: !1246, inlinedAt: !8053)
!8053 = distinct !DILocation(line: 3915, column: 13, scope: !8050)
!8054 = !DILocation(line: 3706, column: 40, scope: !1246, inlinedAt: !8053)
!8055 = !DILocation(line: 3707, column: 16, scope: !1255, inlinedAt: !8053)
!8056 = !DILocation(line: 3707, column: 9, scope: !1255, inlinedAt: !8053)
!8057 = !DILocation(line: 3707, column: 9, scope: !1246, inlinedAt: !8053)
!8058 = !DILocation(line: 3708, column: 5, scope: !1246, inlinedAt: !8053)
!8059 = !DILocation(line: 3709, column: 12, scope: !1246, inlinedAt: !8053)
!8060 = !DILocation(line: 3709, column: 5, scope: !1246, inlinedAt: !8053)
!8061 = !DILocation(line: 3709, column: 33, scope: !1246, inlinedAt: !8053)
!8062 = !DILocation(line: 3710, column: 5, scope: !1246, inlinedAt: !8053)
!8063 = !DILocation(line: 0, scope: !8050)
!8064 = !DILocation(line: 3711, column: 1, scope: !1246, inlinedAt: !8053)
!8065 = !DILocation(line: 3916, column: 9, scope: !8050)
!8066 = !DILocation(line: 3917, column: 13, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 3916, column: 16)
!8068 = !DILocation(line: 3920, column: 62, scope: !8067)
!8069 = !DILocation(line: 3920, column: 55, scope: !8067)
!8070 = !DILocation(line: 3920, column: 13, scope: !8067)
!8071 = !DILocation(line: 3920, column: 53, scope: !8067)
!8072 = !DILocation(line: 0, scope: !7997)
!8073 = !DILocation(line: 3898, column: 37, scope: !8034)
!8074 = !DILocation(line: 3898, column: 5, scope: !8034)
!8075 = !DILocation(line: 3898, column: 19, scope: !8034)
!8076 = distinct !{!8076, !8030, !8077}
!8077 = !DILocation(line: 3922, column: 5, scope: !8029)
!8078 = !DILocation(line: 3923, column: 9, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 3923, column: 9)
!8080 = !DILocation(line: 3923, column: 9, scope: !7997)
!8081 = !DILocation(line: 360, column: 33, scope: !1672, inlinedAt: !8082)
!8082 = distinct !DILocation(line: 3923, column: 24, scope: !8079)
!8083 = !DILocation(line: 361, column: 9, scope: !1677, inlinedAt: !8082)
!8084 = !DILocation(line: 361, column: 37, scope: !1677, inlinedAt: !8082)
!8085 = !DILocation(line: 361, column: 9, scope: !1672, inlinedAt: !8082)
!8086 = !DILocation(line: 362, column: 9, scope: !1681, inlinedAt: !8082)
!8087 = !DILocation(line: 363, column: 9, scope: !1681, inlinedAt: !8082)
!8088 = !DILocation(line: 365, column: 1, scope: !1672, inlinedAt: !8082)
!8089 = !DILocation(line: 3923, column: 24, scope: !8079)
!8090 = !DILocation(line: 0, scope: !8003)
!8091 = !DILocation(line: 3925, column: 1, scope: !7997)
!8092 = distinct !DISubprogram(name: "clusterGenNodeDescription", scope: !3, file: !3, line: 3990, type: !8093, isLocal: false, isDefinition: true, scopeLine: 3990, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8095)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!189, !378}
!8095 = !{!8096, !8097, !8098, !8099, !8100}
!8096 = !DILocalVariable(name: "node", arg: 1, scope: !8092, file: !3, line: 3990, type: !378)
!8097 = !DILocalVariable(name: "j", scope: !8092, file: !3, line: 3991, type: !177)
!8098 = !DILocalVariable(name: "start", scope: !8092, file: !3, line: 3991, type: !177)
!8099 = !DILocalVariable(name: "ci", scope: !8092, file: !3, line: 3992, type: !189)
!8100 = !DILocalVariable(name: "bit", scope: !8101, file: !3, line: 4021, type: !177)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 4020, column: 41)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 4020, column: 5)
!8103 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 4020, column: 5)
!8104 = !DILocation(line: 3990, column: 44, scope: !8092)
!8105 = !DILocation(line: 3995, column: 23, scope: !8092)
!8106 = !DILocation(line: 3996, column: 9, scope: !8092)
!8107 = !DILocation(line: 3997, column: 9, scope: !8092)
!8108 = !DILocation(line: 3998, column: 15, scope: !8092)
!8109 = !DILocation(line: 3999, column: 15, scope: !8092)
!8110 = !DILocation(line: 3995, column: 10, scope: !8092)
!8111 = !DILocation(line: 3992, column: 9, scope: !8092)
!8112 = !DILocation(line: 4002, column: 46, scope: !8092)
!8113 = !DILocation(line: 4002, column: 40, scope: !8092)
!8114 = !DILocation(line: 4002, column: 10, scope: !8092)
!8115 = !DILocation(line: 4005, column: 15, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 4005, column: 9)
!8117 = !DILocation(line: 4005, column: 9, scope: !8116)
!8118 = !DILocation(line: 4005, column: 9, scope: !8092)
!8119 = !DILocation(line: 4006, column: 40, scope: !8116)
!8120 = !DILocation(line: 4006, column: 14, scope: !8116)
!8121 = !DILocation(line: 4006, column: 9, scope: !8116)
!8122 = !DILocation(line: 4008, column: 14, scope: !8116)
!8123 = !DILocation(line: 0, scope: !8116)
!8124 = !DILocation(line: 4012, column: 27, scope: !8092)
!8125 = !DILocation(line: 4013, column: 27, scope: !8092)
!8126 = !DILocation(line: 4014, column: 36, scope: !8092)
!8127 = !DILocation(line: 4015, column: 16, scope: !8092)
!8128 = !DILocation(line: 4015, column: 10, scope: !8092)
!8129 = !DILocation(line: 4015, column: 21, scope: !8092)
!8130 = !DILocation(line: 4015, column: 30, scope: !8092)
!8131 = !DILocation(line: 4015, column: 36, scope: !8092)
!8132 = !DILocation(line: 4011, column: 10, scope: !8092)
!8133 = !DILocation(line: 3991, column: 12, scope: !8092)
!8134 = !DILocation(line: 3991, column: 9, scope: !8092)
!8135 = !DILocation(line: 4020, column: 10, scope: !8103)
!8136 = !DILocation(line: 4020, column: 5, scope: !8103)
!8137 = !DILocation(line: 3698, column: 40, scope: !5561, inlinedAt: !8138)
!8138 = distinct !DILocation(line: 4023, column: 20, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 4023, column: 13)
!8140 = !DILocation(line: 3698, column: 47, scope: !5561, inlinedAt: !8138)
!8141 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !8142)
!8142 = distinct !DILocation(line: 3699, column: 12, scope: !5561, inlinedAt: !8138)
!8143 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !8142)
!8144 = !DILocation(line: 3628, column: 21, scope: !2263, inlinedAt: !8142)
!8145 = !DILocation(line: 3628, column: 18, scope: !2263, inlinedAt: !8142)
!8146 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !8142)
!8147 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !8142)
!8148 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !8142)
!8149 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !8142)
!8150 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !8142)
!8151 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !8142)
!8152 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !8142)
!8153 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !8142)
!8154 = !DILocation(line: 3699, column: 5, scope: !5561, inlinedAt: !8138)
!8155 = !DILocation(line: 4024, column: 23, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 4024, column: 17)
!8157 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 4023, column: 57)
!8158 = !DILocation(line: 4023, column: 13, scope: !8101)
!8159 = !DILocation(line: 4024, column: 30, scope: !8156)
!8160 = !DILocation(line: 0, scope: !8092)
!8161 = !DILocation(line: 4026, column: 19, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 4026, column: 13)
!8163 = !DILocation(line: 4026, column: 25, scope: !8162)
!8164 = !DILocation(line: 4026, column: 30, scope: !8162)
!8165 = !DILocation(line: 4026, column: 39, scope: !8162)
!8166 = !DILocation(line: 4026, column: 34, scope: !8162)
!8167 = !DILocation(line: 4027, column: 21, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4027, column: 17)
!8169 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 4026, column: 60)
!8170 = !DILocation(line: 4027, column: 46, scope: !8168)
!8171 = !DILocation(line: 0, scope: !8103)
!8172 = !DILocation(line: 4029, column: 27, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4029, column: 17)
!8174 = !DILocation(line: 4029, column: 23, scope: !8173)
!8175 = !DILocation(line: 4029, column: 17, scope: !8169)
!8176 = !DILocation(line: 4030, column: 22, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 4029, column: 31)
!8178 = !DILocation(line: 4031, column: 13, scope: !8177)
!8179 = !DILocation(line: 4032, column: 22, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 4031, column: 20)
!8181 = !DILocation(line: 0, scope: !8180)
!8182 = !DILocation(line: 4035, column: 9, scope: !8169)
!8183 = !DILocation(line: 0, scope: !8156)
!8184 = !DILocation(line: 4020, column: 37, scope: !8102)
!8185 = !DILocation(line: 4020, column: 5, scope: !8102)
!8186 = !DILocation(line: 4020, column: 19, scope: !8102)
!8187 = distinct !{!8187, !8136, !8188}
!8188 = !DILocation(line: 4036, column: 5, scope: !8103)
!8189 = !DILocation(line: 4041, column: 15, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 4041, column: 9)
!8191 = !DILocation(line: 4041, column: 21, scope: !8190)
!8192 = !DILocation(line: 4041, column: 9, scope: !8092)
!8193 = !DILocation(line: 4042, column: 14, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4042, column: 9)
!8195 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 4041, column: 44)
!8196 = !DILocation(line: 4042, column: 9, scope: !8194)
!8197 = !DILocation(line: 4043, column: 24, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !3, line: 4043, column: 17)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 4042, column: 45)
!8200 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 4042, column: 9)
!8201 = !DILocation(line: 4043, column: 17, scope: !8198)
!8202 = !DILocation(line: 4043, column: 17, scope: !8199)
!8203 = !DILocation(line: 4046, column: 24, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 4046, column: 24)
!8205 = !DILocation(line: 4046, column: 24, scope: !8198)
!8206 = !DILocation(line: 0, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 4046, column: 65)
!8208 = !DILocation(line: 4042, column: 41, scope: !8200)
!8209 = !DILocation(line: 4042, column: 9, scope: !8200)
!8210 = !DILocation(line: 4042, column: 23, scope: !8200)
!8211 = distinct !{!8211, !8196, !8212}
!8212 = !DILocation(line: 4050, column: 9, scope: !8194)
!8213 = !DILocation(line: 4011, column: 8, scope: !8092)
!8214 = !DILocation(line: 4052, column: 5, scope: !8092)
!8215 = distinct !DISubprogram(name: "clusterGetMessageTypeString", scope: !3, file: !3, line: 4090, type: !8216, isLocal: false, isDefinition: true, scopeLine: 4090, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8218)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!611, !177}
!8218 = !{!8219}
!8219 = !DILocalVariable(name: "type", arg: 1, scope: !8215, file: !3, line: 4090, type: !177)
!8220 = !DILocation(line: 4090, column: 45, scope: !8215)
!8221 = !DILocation(line: 4091, column: 5, scope: !8215)
!8222 = !DILocation(line: 0, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4091, column: 18)
!8224 = !DILocation(line: 4104, column: 1, scope: !8215)
!8225 = distinct !DISubprogram(name: "getSlotOrReply", scope: !3, file: !3, line: 4106, type: !8226, isLocal: false, isDefinition: true, scopeLine: 4106, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8351)
!8226 = !DISubroutineType(types: !8227)
!8227 = !{!177, !8228, !4388}
!8228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8229, size: 64)
!8229 = !DIDerivedType(tag: DW_TAG_typedef, name: "client", file: !185, line: 780, baseType: !8230)
!8230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "client", file: !185, line: 723, size: 135360, elements: !8231)
!8231 = !{!8232, !8233, !8234, !8247, !8248, !8249, !8250, !8251, !8252, !8253, !8255, !8279, !8280, !8281, !8282, !8283, !8284, !8285, !8286, !8287, !8288, !8289, !8290, !8291, !8292, !8293, !8294, !8295, !8296, !8297, !8298, !8299, !8300, !8301, !8302, !8306, !8307, !8308, !8309, !8325, !8326, !8342, !8343, !8344, !8345, !8346, !8347, !8348, !8349}
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8230, file: !185, line: 724, baseType: !104, size: 64)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8230, file: !185, line: 725, baseType: !177, size: 32, offset: 64)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "db", scope: !8230, file: !185, line: 726, baseType: !8235, size: 64, offset: 128)
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 64)
!8236 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisDb", file: !185, line: 656, baseType: !8237)
!8237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisDb", file: !185, line: 647, size: 512, elements: !8238)
!8238 = !{!8239, !8240, !8241, !8242, !8243, !8244, !8245, !8246}
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "dict", scope: !8237, file: !185, line: 648, baseType: !303, size: 64)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !8237, file: !185, line: 649, baseType: !303, size: 64, offset: 64)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "blocking_keys", scope: !8237, file: !185, line: 650, baseType: !303, size: 64, offset: 128)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "ready_keys", scope: !8237, file: !185, line: 651, baseType: !303, size: 64, offset: 192)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !8237, file: !185, line: 652, baseType: !303, size: 64, offset: 256)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8237, file: !185, line: 653, baseType: !177, size: 32, offset: 320)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "avg_ttl", scope: !8237, file: !185, line: 654, baseType: !186, size: 64, offset: 384)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "defrag_later", scope: !8237, file: !185, line: 655, baseType: !218, size: 64, offset: 448)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8230, file: !185, line: 727, baseType: !4388, size: 64, offset: 192)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf", scope: !8230, file: !185, line: 728, baseType: !189, size: 64, offset: 256)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "qb_pos", scope: !8230, file: !185, line: 729, baseType: !1465, size: 64, offset: 320)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "pending_querybuf", scope: !8230, file: !185, line: 730, baseType: !189, size: 64, offset: 384)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "querybuf_peak", scope: !8230, file: !185, line: 734, baseType: !1465, size: 64, offset: 448)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !8230, file: !185, line: 735, baseType: !177, size: 32, offset: 512)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !8230, file: !185, line: 736, baseType: !8254, size: 64, offset: 576)
!8254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8230, file: !185, line: 737, baseType: !8256, size: 64, offset: 640)
!8256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8257, size: 64)
!8257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "redisCommand", file: !185, line: 1307, size: 640, elements: !8258)
!8258 = !{!8259, !8260, !8265, !8266, !8267, !8268, !8274, !8275, !8276, !8277, !8278}
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8257, file: !185, line: 1308, baseType: !178, size: 64)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "proc", scope: !8257, file: !185, line: 1309, baseType: !8261, size: 64, offset: 64)
!8261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8262, size: 64)
!8262 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisCommandProc", file: !185, line: 1305, baseType: !8263)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{null, !8228}
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !8257, file: !185, line: 1310, baseType: !177, size: 32, offset: 128)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "sflags", scope: !8257, file: !185, line: 1311, baseType: !178, size: 64, offset: 192)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8257, file: !185, line: 1312, baseType: !177, size: 32, offset: 256)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "getkeys_proc", scope: !8257, file: !185, line: 1315, baseType: !8269, size: 64, offset: 320)
!8269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8270, size: 64)
!8270 = !DIDerivedType(tag: DW_TAG_typedef, name: "redisGetKeysProc", file: !185, line: 1306, baseType: !8271)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!8273, !8256, !8254, !177, !8273}
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "firstkey", scope: !8257, file: !185, line: 1317, baseType: !177, size: 32, offset: 384)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "lastkey", scope: !8257, file: !185, line: 1318, baseType: !177, size: 32, offset: 416)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "keystep", scope: !8257, file: !185, line: 1319, baseType: !177, size: 32, offset: 448)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "microseconds", scope: !8257, file: !185, line: 1320, baseType: !186, size: 64, offset: 512)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "calls", scope: !8257, file: !185, line: 1320, baseType: !186, size: 64, offset: 576)
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "lastcmd", scope: !8230, file: !185, line: 737, baseType: !8256, size: 64, offset: 704)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "reqtype", scope: !8230, file: !185, line: 738, baseType: !177, size: 32, offset: 768)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "multibulklen", scope: !8230, file: !185, line: 739, baseType: !177, size: 32, offset: 800)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "bulklen", scope: !8230, file: !185, line: 740, baseType: !13, size: 64, offset: 832)
!8283 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !8230, file: !185, line: 741, baseType: !218, size: 64, offset: 896)
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "reply_bytes", scope: !8230, file: !185, line: 742, baseType: !7, size: 64, offset: 960)
!8285 = !DIDerivedType(tag: DW_TAG_member, name: "sentlen", scope: !8230, file: !185, line: 743, baseType: !1465, size: 64, offset: 1024)
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !8230, file: !185, line: 745, baseType: !288, size: 64, offset: 1088)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "lastinteraction", scope: !8230, file: !185, line: 746, baseType: !288, size: 64, offset: 1152)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "obuf_soft_limit_reached_time", scope: !8230, file: !185, line: 747, baseType: !288, size: 64, offset: 1216)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8230, file: !185, line: 748, baseType: !177, size: 32, offset: 1280)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !8230, file: !185, line: 749, baseType: !177, size: 32, offset: 1312)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "replstate", scope: !8230, file: !185, line: 750, baseType: !177, size: 32, offset: 1344)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "repl_put_online_on_ack", scope: !8230, file: !185, line: 751, baseType: !177, size: 32, offset: 1376)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "repldbfd", scope: !8230, file: !185, line: 752, baseType: !177, size: 32, offset: 1408)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "repldboff", scope: !8230, file: !185, line: 753, baseType: !8, size: 64, offset: 1472)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "repldbsize", scope: !8230, file: !185, line: 754, baseType: !8, size: 64, offset: 1536)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "replpreamble", scope: !8230, file: !185, line: 755, baseType: !189, size: 64, offset: 1600)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "read_reploff", scope: !8230, file: !185, line: 756, baseType: !186, size: 64, offset: 1664)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "reploff", scope: !8230, file: !185, line: 757, baseType: !186, size: 64, offset: 1728)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_off", scope: !8230, file: !185, line: 758, baseType: !186, size: 64, offset: 1792)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "repl_ack_time", scope: !8230, file: !185, line: 759, baseType: !186, size: 64, offset: 1856)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "psync_initial_offset", scope: !8230, file: !185, line: 760, baseType: !186, size: 64, offset: 1920)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "replid", scope: !8230, file: !185, line: 763, baseType: !8303, size: 328, offset: 1984)
!8303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 328, elements: !8304)
!8304 = !{!8305}
!8305 = !DISubrange(count: 41)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "slave_listening_port", scope: !8230, file: !185, line: 764, baseType: !177, size: 32, offset: 2336)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "slave_ip", scope: !8230, file: !185, line: 765, baseType: !85, size: 368, offset: 2368)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "slave_capa", scope: !8230, file: !185, line: 766, baseType: !177, size: 32, offset: 2752)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "mstate", scope: !8230, file: !185, line: 767, baseType: !8310, size: 256, offset: 2816)
!8310 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiState", file: !185, line: 673, baseType: !8311)
!8311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiState", file: !185, line: 665, size: 256, elements: !8312)
!8312 = !{!8313, !8321, !8322, !8323, !8324}
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "commands", scope: !8311, file: !185, line: 666, baseType: !8314, size: 64)
!8314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8315, size: 64)
!8315 = !DIDerivedType(tag: DW_TAG_typedef, name: "multiCmd", file: !185, line: 663, baseType: !8316)
!8316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "multiCmd", file: !185, line: 659, size: 192, elements: !8317)
!8317 = !{!8318, !8319, !8320}
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !8316, file: !185, line: 660, baseType: !8254, size: 64)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "argc", scope: !8316, file: !185, line: 661, baseType: !177, size: 32, offset: 64)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8316, file: !185, line: 662, baseType: !8256, size: 64, offset: 128)
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8311, file: !185, line: 667, baseType: !177, size: 32, offset: 64)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !8311, file: !185, line: 668, baseType: !177, size: 32, offset: 96)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas", scope: !8311, file: !185, line: 671, baseType: !177, size: 32, offset: 128)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "minreplicas_timeout", scope: !8311, file: !185, line: 672, baseType: !288, size: 64, offset: 192)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "btype", scope: !8230, file: !185, line: 768, baseType: !177, size: 32, offset: 3072)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "bpop", scope: !8230, file: !185, line: 769, baseType: !8327, size: 704, offset: 3136)
!8327 = !DIDerivedType(tag: DW_TAG_typedef, name: "blockingState", file: !185, line: 703, baseType: !8328)
!8328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blockingState", file: !185, line: 677, size: 704, elements: !8329)
!8329 = !{!8330, !8331, !8332, !8333, !8334, !8335, !8336, !8337, !8338, !8339, !8340, !8341}
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8328, file: !185, line: 679, baseType: !184, size: 64)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !8328, file: !185, line: 683, baseType: !303, size: 64, offset: 64)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !8328, file: !185, line: 685, baseType: !4388, size: 64, offset: 128)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "xread_count", scope: !8328, file: !185, line: 689, baseType: !1465, size: 64, offset: 192)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group", scope: !8328, file: !185, line: 690, baseType: !4388, size: 64, offset: 256)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "xread_consumer", scope: !8328, file: !185, line: 691, baseType: !4388, size: 64, offset: 320)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_time", scope: !8328, file: !185, line: 692, baseType: !184, size: 64, offset: 384)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "xread_retry_ttl", scope: !8328, file: !185, line: 692, baseType: !184, size: 64, offset: 448)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "xread_group_noack", scope: !8328, file: !185, line: 693, baseType: !177, size: 32, offset: 512)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "numreplicas", scope: !8328, file: !185, line: 696, baseType: !177, size: 32, offset: 544)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "reploffset", scope: !8328, file: !185, line: 697, baseType: !186, size: 64, offset: 576)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "module_blocked_handle", scope: !8328, file: !185, line: 700, baseType: !6, size: 64, offset: 640)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "woff", scope: !8230, file: !185, line: 770, baseType: !186, size: 64, offset: 3840)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "watched_keys", scope: !8230, file: !185, line: 771, baseType: !218, size: 64, offset: 3904)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_channels", scope: !8230, file: !185, line: 772, baseType: !303, size: 64, offset: 3968)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "pubsub_patterns", scope: !8230, file: !185, line: 773, baseType: !218, size: 64, offset: 4032)
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "peerid", scope: !8230, file: !185, line: 774, baseType: !189, size: 64, offset: 4096)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "client_list_node", scope: !8230, file: !185, line: 775, baseType: !224, size: 64, offset: 4160)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "bufpos", scope: !8230, file: !185, line: 778, baseType: !177, size: 32, offset: 4224)
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !8230, file: !185, line: 779, baseType: !8350, size: 131072, offset: 4256)
!8350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 131072, elements: !4026)
!8351 = !{!8352, !8353, !8354}
!8352 = !DILocalVariable(name: "c", arg: 1, scope: !8225, file: !3, line: 4106, type: !8228)
!8353 = !DILocalVariable(name: "o", arg: 2, scope: !8225, file: !3, line: 4106, type: !4388)
!8354 = !DILocalVariable(name: "slot", scope: !8225, file: !3, line: 4107, type: !186)
!8355 = !DILocation(line: 4106, column: 28, scope: !8225)
!8356 = !DILocation(line: 4106, column: 37, scope: !8225)
!8357 = !DILocation(line: 4107, column: 5, scope: !8225)
!8358 = !DILocation(line: 4107, column: 15, scope: !8225)
!8359 = !DILocation(line: 4109, column: 9, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 4109, column: 9)
!8361 = !DILocation(line: 4109, column: 40, scope: !8360)
!8362 = !DILocation(line: 4110, column: 9, scope: !8360)
!8363 = !DILocation(line: 4109, column: 48, scope: !8360)
!8364 = !DILocation(line: 4112, column: 9, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 4111, column: 5)
!8366 = !DILocation(line: 4113, column: 9, scope: !8365)
!8367 = !DILocation(line: 4115, column: 12, scope: !8225)
!8368 = !DILocation(line: 4115, column: 5, scope: !8225)
!8369 = !DILocation(line: 0, scope: !8225)
!8370 = !DILocation(line: 0, scope: !8365)
!8371 = !DILocation(line: 4116, column: 1, scope: !8225)
!8372 = distinct !DISubprogram(name: "clusterReplyMultiBulkSlots", scope: !3, file: !3, line: 4118, type: !8263, isLocal: false, isDefinition: true, scopeLine: 4118, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8373)
!8373 = !{!8374, !8375, !8376, !8377, !8378, !8379, !8381, !8382, !8383, !8387, !8388, !8391}
!8374 = !DILocalVariable(name: "c", arg: 1, scope: !8372, file: !3, line: 4118, type: !8228)
!8375 = !DILocalVariable(name: "num_masters", scope: !8372, file: !3, line: 4130, type: !177)
!8376 = !DILocalVariable(name: "slot_replylen", scope: !8372, file: !3, line: 4131, type: !6)
!8377 = !DILocalVariable(name: "de", scope: !8372, file: !3, line: 4133, type: !340)
!8378 = !DILocalVariable(name: "di", scope: !8372, file: !3, line: 4134, type: !297)
!8379 = !DILocalVariable(name: "node", scope: !8380, file: !3, line: 4136, type: !378)
!8380 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 4135, column: 40)
!8381 = !DILocalVariable(name: "j", scope: !8380, file: !3, line: 4137, type: !177)
!8382 = !DILocalVariable(name: "start", scope: !8380, file: !3, line: 4137, type: !177)
!8383 = !DILocalVariable(name: "bit", scope: !8384, file: !3, line: 4144, type: !177)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 4143, column: 45)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 4143, column: 9)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 4143, column: 9)
!8387 = !DILocalVariable(name: "i", scope: !8384, file: !3, line: 4144, type: !177)
!8388 = !DILocalVariable(name: "nested_elements", scope: !8389, file: !3, line: 4150, type: !177)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 4149, column: 64)
!8390 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 4149, column: 17)
!8391 = !DILocalVariable(name: "nested_replylen", scope: !8389, file: !3, line: 4151, type: !6)
!8392 = !DILocation(line: 4118, column: 41, scope: !8372)
!8393 = !DILocation(line: 4130, column: 9, scope: !8372)
!8394 = !DILocation(line: 4131, column: 27, scope: !8372)
!8395 = !DILocation(line: 4131, column: 11, scope: !8372)
!8396 = !DILocation(line: 4134, column: 51, scope: !8372)
!8397 = !DILocation(line: 4134, column: 60, scope: !8372)
!8398 = !DILocation(line: 4134, column: 24, scope: !8372)
!8399 = !DILocation(line: 4134, column: 19, scope: !8372)
!8400 = !DILocation(line: 4135, column: 5, scope: !8372)
!8401 = !DILocation(line: 4135, column: 17, scope: !8372)
!8402 = !DILocation(line: 4133, column: 16, scope: !8372)
!8403 = !DILocation(line: 4135, column: 31, scope: !8372)
!8404 = !DILocation(line: 4136, column: 29, scope: !8380)
!8405 = !DILocation(line: 4136, column: 22, scope: !8380)
!8406 = !DILocation(line: 4137, column: 13, scope: !8380)
!8407 = !DILocation(line: 4137, column: 20, scope: !8380)
!8408 = !DILocation(line: 4141, column: 14, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 4141, column: 13)
!8410 = !DILocation(line: 4141, column: 33, scope: !8409)
!8411 = distinct !{!8411, !8400, !8412}
!8412 = !DILocation(line: 4187, column: 5, scope: !8372)
!8413 = !DILocation(line: 4141, column: 42, scope: !8409)
!8414 = !DILocation(line: 4141, column: 51, scope: !8409)
!8415 = !DILocation(line: 4141, column: 13, scope: !8380)
!8416 = !DILocation(line: 4143, column: 14, scope: !8386)
!8417 = !DILocation(line: 4143, column: 9, scope: !8386)
!8418 = !DILocation(line: 3698, column: 40, scope: !5561, inlinedAt: !8419)
!8419 = distinct !DILocation(line: 4146, column: 24, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 4146, column: 17)
!8421 = !DILocation(line: 3698, column: 47, scope: !5561, inlinedAt: !8419)
!8422 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !8423)
!8423 = distinct !DILocation(line: 3699, column: 12, scope: !5561, inlinedAt: !8419)
!8424 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !8423)
!8425 = !DILocation(line: 3628, column: 21, scope: !2263, inlinedAt: !8423)
!8426 = !DILocation(line: 3628, column: 18, scope: !2263, inlinedAt: !8423)
!8427 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !8423)
!8428 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !8423)
!8429 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !8423)
!8430 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !8423)
!8431 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !8423)
!8432 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !8423)
!8433 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !8423)
!8434 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !8423)
!8435 = !DILocation(line: 3699, column: 5, scope: !5561, inlinedAt: !8419)
!8436 = !DILocation(line: 4147, column: 27, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 4147, column: 21)
!8438 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 4146, column: 61)
!8439 = !DILocation(line: 4146, column: 17, scope: !8384)
!8440 = !DILocation(line: 4147, column: 34, scope: !8437)
!8441 = !DILocation(line: 0, scope: !8380)
!8442 = !DILocation(line: 4149, column: 23, scope: !8390)
!8443 = !DILocation(line: 4149, column: 29, scope: !8390)
!8444 = !DILocation(line: 4149, column: 34, scope: !8390)
!8445 = !DILocation(line: 4149, column: 43, scope: !8390)
!8446 = !DILocation(line: 4149, column: 38, scope: !8390)
!8447 = !DILocation(line: 4150, column: 21, scope: !8389)
!8448 = !DILocation(line: 4151, column: 41, scope: !8389)
!8449 = !DILocation(line: 4151, column: 23, scope: !8389)
!8450 = !DILocation(line: 4153, column: 25, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 4153, column: 21)
!8452 = !DILocation(line: 4153, column: 50, scope: !8451)
!8453 = !DILocation(line: 0, scope: !8386)
!8454 = !DILocation(line: 4157, column: 31, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 4157, column: 21)
!8456 = !DILocation(line: 4157, column: 27, scope: !8455)
!8457 = !DILocation(line: 0, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 4160, column: 24)
!8459 = !DILocation(line: 4157, column: 21, scope: !8389)
!8460 = !DILocation(line: 4159, column: 21, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 4157, column: 35)
!8462 = !DILocation(line: 4160, column: 17, scope: !8461)
!8463 = !DILocation(line: 4162, column: 41, scope: !8458)
!8464 = !DILocation(line: 4162, column: 21, scope: !8458)
!8465 = !DILocation(line: 4167, column: 17, scope: !8389)
!8466 = !DILocation(line: 4168, column: 17, scope: !8389)
!8467 = !DILocation(line: 4169, column: 43, scope: !8389)
!8468 = !DILocation(line: 4169, column: 37, scope: !8389)
!8469 = !DILocation(line: 4169, column: 17, scope: !8389)
!8470 = !DILocation(line: 4170, column: 17, scope: !8389)
!8471 = !DILocation(line: 4144, column: 22, scope: !8384)
!8472 = !DILocation(line: 4173, column: 22, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 4173, column: 17)
!8474 = !DILocation(line: 4173, column: 39, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 4173, column: 17)
!8476 = !DILocation(line: 4173, column: 31, scope: !8475)
!8477 = !DILocation(line: 4173, column: 17, scope: !8473)
!8478 = !DILocation(line: 4176, column: 25, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 4176, column: 25)
!8480 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 4173, column: 55)
!8481 = !DILocation(line: 4176, column: 25, scope: !8480)
!8482 = !DILocation(line: 4177, column: 21, scope: !8480)
!8483 = !DILocation(line: 4178, column: 50, scope: !8480)
!8484 = !DILocation(line: 4178, column: 44, scope: !8480)
!8485 = !DILocation(line: 4178, column: 21, scope: !8480)
!8486 = !DILocation(line: 4179, column: 47, scope: !8480)
!8487 = !DILocation(line: 4179, column: 41, scope: !8480)
!8488 = !DILocation(line: 4179, column: 58, scope: !8480)
!8489 = !DILocation(line: 4179, column: 21, scope: !8480)
!8490 = !DILocation(line: 4180, column: 50, scope: !8480)
!8491 = !DILocation(line: 4180, column: 44, scope: !8480)
!8492 = !DILocation(line: 4180, column: 21, scope: !8480)
!8493 = !DILocation(line: 4181, column: 36, scope: !8480)
!8494 = !DILocation(line: 4182, column: 17, scope: !8480)
!8495 = !DILocation(line: 0, scope: !8480)
!8496 = !DILocation(line: 4173, column: 51, scope: !8475)
!8497 = !DILocation(line: 4173, column: 17, scope: !8475)
!8498 = distinct !{!8498, !8477, !8499}
!8499 = !DILocation(line: 4182, column: 17, scope: !8473)
!8500 = !DILocation(line: 4183, column: 64, scope: !8389)
!8501 = !DILocation(line: 4183, column: 17, scope: !8389)
!8502 = !DILocation(line: 4184, column: 28, scope: !8389)
!8503 = !DILocation(line: 4185, column: 13, scope: !8389)
!8504 = !DILocation(line: 0, scope: !8437)
!8505 = !DILocation(line: 0, scope: !8372)
!8506 = !DILocation(line: 4143, column: 41, scope: !8385)
!8507 = !DILocation(line: 4143, column: 9, scope: !8385)
!8508 = !DILocation(line: 4143, column: 23, scope: !8385)
!8509 = distinct !{!8509, !8417, !8510}
!8510 = !DILocation(line: 4186, column: 9, scope: !8386)
!8511 = !DILocation(line: 0, scope: !8409)
!8512 = !DILocation(line: 4188, column: 5, scope: !8372)
!8513 = !DILocation(line: 4189, column: 50, scope: !8372)
!8514 = !DILocation(line: 4189, column: 5, scope: !8372)
!8515 = !DILocation(line: 4190, column: 1, scope: !8372)
!8516 = distinct !DISubprogram(name: "clusterCommand", scope: !3, file: !3, line: 4192, type: !8263, isLocal: false, isDefinition: true, scopeLine: 4192, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !8517)
!8517 = !{!8518, !8519, !8525, !8528, !8529, !8532, !8533, !8539, !8540, !8541, !8542, !8548, !8551, !8552, !8558, !8561, !8562, !8566, !8567, !8568, !8569, !8570, !8571, !8572, !8576, !8577, !8578, !8579, !8581, !8583, !8586, !8589, !8592, !8595, !8596, !8597, !8598, !8599, !8600, !8603, !8606, !8609, !8610, !8614, !8617, !8620, !8621, !8624}
!8518 = !DILocalVariable(name: "c", arg: 1, scope: !8516, file: !3, line: 4192, type: !8228)
!8519 = !DILocalVariable(name: "help", scope: !8520, file: !3, line: 4199, type: !8522)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 4198, column: 62)
!8521 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 4198, column: 9)
!8522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 1472, elements: !8523)
!8523 = !{!8524}
!8524 = !DISubrange(count: 23)
!8525 = !DILocalVariable(name: "port", scope: !8526, file: !3, line: 4227, type: !186)
!8526 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 4225, column: 87)
!8527 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 4225, column: 16)
!8528 = !DILocalVariable(name: "cport", scope: !8526, file: !3, line: 4227, type: !186)
!8529 = !DILocalVariable(name: "o", scope: !8530, file: !3, line: 4255, type: !4388)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 4253, column: 70)
!8531 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 4253, column: 16)
!8532 = !DILocalVariable(name: "ci", scope: !8530, file: !3, line: 4256, type: !189)
!8533 = !DILocalVariable(name: "j", scope: !8534, file: !3, line: 4281, type: !177)
!8534 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 4278, column: 5)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4276, column: 16)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 4267, column: 16)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 4264, column: 16)
!8538 = distinct !DILexicalBlock(scope: !8531, file: !3, line: 4261, column: 16)
!8539 = !DILocalVariable(name: "slot", scope: !8534, file: !3, line: 4281, type: !177)
!8540 = !DILocalVariable(name: "slots", scope: !8534, file: !3, line: 4282, type: !246)
!8541 = !DILocalVariable(name: "del", scope: !8534, file: !3, line: 4283, type: !177)
!8542 = !DILocalVariable(name: "retval", scope: !8543, file: !3, line: 4311, type: !177)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 4310, column: 27)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 4310, column: 17)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 4309, column: 45)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 4309, column: 9)
!8547 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4309, column: 9)
!8548 = !DILocalVariable(name: "slot", scope: !8549, file: !3, line: 4331, type: !177)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4326, column: 72)
!8550 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 4326, column: 16)
!8551 = !DILocalVariable(name: "n", scope: !8549, file: !3, line: 4332, type: !378)
!8552 = !DILocalVariable(name: "n", scope: !8553, file: !3, line: 4370, type: !378)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 4368, column: 73)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 4368, column: 20)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 4364, column: 20)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 4352, column: 20)
!8557 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 4341, column: 13)
!8558 = !DILocalVariable(name: "retval", scope: !8559, file: !3, line: 4425, type: !177)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 4423, column: 74)
!8560 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 4423, column: 16)
!8561 = !DILocalVariable(name: "reply", scope: !8559, file: !3, line: 4426, type: !189)
!8562 = !DILocalVariable(name: "statestr", scope: !8563, file: !3, line: 4432, type: !8565)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 4430, column: 69)
!8564 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 4430, column: 16)
!8565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 192, elements: !125)
!8566 = !DILocalVariable(name: "slots_assigned", scope: !8563, file: !3, line: 4433, type: !177)
!8567 = !DILocalVariable(name: "slots_ok", scope: !8563, file: !3, line: 4433, type: !177)
!8568 = !DILocalVariable(name: "slots_pfail", scope: !8563, file: !3, line: 4433, type: !177)
!8569 = !DILocalVariable(name: "slots_fail", scope: !8563, file: !3, line: 4433, type: !177)
!8570 = !DILocalVariable(name: "myepoch", scope: !8563, file: !3, line: 4434, type: !104)
!8571 = !DILocalVariable(name: "j", scope: !8563, file: !3, line: 4435, type: !177)
!8572 = !DILocalVariable(name: "n", scope: !8573, file: !3, line: 4438, type: !378)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 4437, column: 45)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 4437, column: 9)
!8575 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 4437, column: 9)
!8576 = !DILocalVariable(name: "info", scope: !8563, file: !3, line: 4454, type: !189)
!8577 = !DILocalVariable(name: "tot_msg_sent", scope: !8563, file: !3, line: 4476, type: !186)
!8578 = !DILocalVariable(name: "tot_msg_received", scope: !8563, file: !3, line: 4477, type: !186)
!8579 = !DILocalVariable(name: "i", scope: !8580, file: !3, line: 4479, type: !177)
!8580 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 4479, column: 9)
!8581 = !DILocalVariable(name: "i", scope: !8582, file: !3, line: 4490, type: !177)
!8582 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 4490, column: 9)
!8583 = !DILocalVariable(name: "retval", scope: !8584, file: !3, line: 4507, type: !177)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4506, column: 75)
!8585 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 4506, column: 16)
!8586 = !DILocalVariable(name: "key", scope: !8587, file: !3, line: 4516, type: !189)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 4514, column: 72)
!8588 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 4514, column: 16)
!8589 = !DILocalVariable(name: "slot", scope: !8590, file: !3, line: 4521, type: !186)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 4519, column: 80)
!8591 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 4519, column: 16)
!8592 = !DILocalVariable(name: "maxkeys", scope: !8593, file: !3, line: 4532, type: !186)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 4530, column: 78)
!8594 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 4530, column: 16)
!8595 = !DILocalVariable(name: "slot", scope: !8593, file: !3, line: 4532, type: !186)
!8596 = !DILocalVariable(name: "numkeys", scope: !8593, file: !3, line: 4533, type: !45)
!8597 = !DILocalVariable(name: "j", scope: !8593, file: !3, line: 4533, type: !45)
!8598 = !DILocalVariable(name: "keys", scope: !8593, file: !3, line: 4534, type: !8254)
!8599 = !DILocalVariable(name: "keys_in_slot", scope: !8593, file: !3, line: 4548, type: !45)
!8600 = !DILocalVariable(name: "n", scope: !8601, file: !3, line: 4561, type: !378)
!8601 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4559, column: 71)
!8602 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 4559, column: 16)
!8603 = !DILocalVariable(name: "n", scope: !8604, file: !3, line: 4580, type: !378)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 4578, column: 74)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 4578, column: 16)
!8606 = !DILocalVariable(name: "n", scope: !8607, file: !3, line: 4618, type: !378)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 4616, column: 75)
!8608 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 4615, column: 16)
!8609 = !DILocalVariable(name: "j", scope: !8607, file: !3, line: 4619, type: !177)
!8610 = !DILocalVariable(name: "ni", scope: !8611, file: !3, line: 4634, type: !189)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !3, line: 4633, column: 44)
!8612 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 4633, column: 9)
!8613 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 4633, column: 9)
!8614 = !DILocalVariable(name: "n", scope: !8615, file: !3, line: 4642, type: !378)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 4640, column: 5)
!8616 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 4638, column: 16)
!8617 = !DILocalVariable(name: "force", scope: !8618, file: !3, line: 4654, type: !177)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 4652, column: 5)
!8619 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 4650, column: 16)
!8620 = !DILocalVariable(name: "takeover", scope: !8618, file: !3, line: 4654, type: !177)
!8621 = !DILocalVariable(name: "epoch", scope: !8622, file: !3, line: 4714, type: !186)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 4706, column: 5)
!8623 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 4705, column: 16)
!8624 = !DILocalVariable(name: "hard", scope: !8625, file: !3, line: 4745, type: !177)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 4743, column: 5)
!8626 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 4741, column: 16)
!8627 = !DILocation(line: 4192, column: 29, scope: !8516)
!8628 = !DILocation(line: 4193, column: 16, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 4193, column: 9)
!8630 = !{!789, !709, i64 2924}
!8631 = !DILocation(line: 4193, column: 32, scope: !8629)
!8632 = !DILocation(line: 4193, column: 9, scope: !8516)
!8633 = !DILocation(line: 4194, column: 9, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 4193, column: 38)
!8635 = !DILocation(line: 4195, column: 9, scope: !8634)
!8636 = !DILocation(line: 4198, column: 12, scope: !8521)
!8637 = !{!8638, !709, i64 64}
!8638 = !{!"client", !729, i64 0, !709, i64 8, !761, i64 16, !761, i64 24, !761, i64 32, !729, i64 40, !761, i64 48, !729, i64 56, !709, i64 64, !761, i64 72, !761, i64 80, !761, i64 88, !709, i64 96, !709, i64 100, !729, i64 104, !761, i64 112, !790, i64 120, !729, i64 128, !729, i64 136, !729, i64 144, !729, i64 152, !709, i64 160, !709, i64 164, !709, i64 168, !709, i64 172, !709, i64 176, !729, i64 184, !729, i64 192, !761, i64 200, !790, i64 208, !790, i64 216, !790, i64 224, !790, i64 232, !790, i64 240, !710, i64 248, !709, i64 292, !710, i64 296, !709, i64 344, !8639, i64 352, !709, i64 384, !8640, i64 392, !790, i64 480, !761, i64 488, !761, i64 496, !761, i64 504, !761, i64 512, !761, i64 520, !709, i64 528, !710, i64 532}
!8639 = !{!"multiState", !761, i64 0, !709, i64 8, !709, i64 12, !709, i64 16, !729, i64 24}
!8640 = !{!"blockingState", !790, i64 0, !761, i64 8, !761, i64 16, !729, i64 24, !761, i64 32, !761, i64 40, !790, i64 48, !790, i64 56, !709, i64 64, !709, i64 68, !790, i64 72, !761, i64 80}
!8641 = !DILocation(line: 4198, column: 17, scope: !8521)
!8642 = !DILocation(line: 4198, column: 22, scope: !8521)
!8643 = !DILocation(line: 0, scope: !8527)
!8644 = !{!8638, !761, i64 72}
!8645 = !DILocation(line: 4198, column: 26, scope: !8521)
!8646 = !DILocation(line: 4198, column: 9, scope: !8516)
!8647 = !DILocation(line: 4199, column: 9, scope: !8520)
!8648 = !DILocation(line: 4199, column: 21, scope: !8520)
!8649 = !DILocation(line: 4224, column: 25, scope: !8520)
!8650 = !DILocation(line: 4224, column: 9, scope: !8520)
!8651 = !DILocation(line: 4225, column: 5, scope: !8521)
!8652 = !DILocation(line: 4225, column: 5, scope: !8520)
!8653 = !DILocation(line: 4225, column: 17, scope: !8527)
!8654 = !DILocation(line: 4225, column: 52, scope: !8527)
!8655 = !DILocation(line: 4225, column: 64, scope: !8527)
!8656 = !DILocation(line: 4225, column: 69, scope: !8527)
!8657 = !DILocation(line: 4225, column: 80, scope: !8527)
!8658 = !DILocation(line: 4225, column: 16, scope: !8521)
!8659 = !DILocation(line: 4227, column: 9, scope: !8526)
!8660 = !DILocation(line: 4229, column: 35, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 4229, column: 13)
!8662 = !DILocation(line: 4227, column: 19, scope: !8526)
!8663 = !DILocation(line: 4229, column: 13, scope: !8661)
!8664 = !DILocation(line: 4229, column: 54, scope: !8661)
!8665 = !DILocation(line: 4229, column: 13, scope: !8526)
!8666 = !DILocation(line: 4231, column: 43, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 4229, column: 63)
!8668 = !DILocation(line: 4231, column: 40, scope: !8667)
!8669 = !DILocation(line: 4231, column: 52, scope: !8667)
!8670 = !DILocation(line: 4230, column: 13, scope: !8667)
!8671 = !DILocation(line: 4232, column: 13, scope: !8667)
!8672 = !DILocation(line: 4235, column: 16, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 4235, column: 13)
!8674 = !DILocation(line: 4235, column: 21, scope: !8673)
!8675 = !DILocation(line: 4235, column: 13, scope: !8526)
!8676 = !DILocation(line: 4236, column: 42, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !3, line: 4236, column: 17)
!8678 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 4235, column: 27)
!8679 = !DILocation(line: 4236, column: 39, scope: !8677)
!8680 = !DILocation(line: 4227, column: 25, scope: !8526)
!8681 = !DILocation(line: 4236, column: 17, scope: !8677)
!8682 = !DILocation(line: 4236, column: 59, scope: !8677)
!8683 = !DILocation(line: 4236, column: 17, scope: !8678)
!8684 = !DILocation(line: 4245, column: 51, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 4245, column: 13)
!8686 = !DILocation(line: 4245, column: 56, scope: !8685)
!8687 = !DILocation(line: 4238, column: 47, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 4236, column: 68)
!8689 = !DILocation(line: 4238, column: 44, scope: !8688)
!8690 = !DILocation(line: 4238, column: 56, scope: !8688)
!8691 = !DILocation(line: 4237, column: 17, scope: !8688)
!8692 = !DILocation(line: 4239, column: 17, scope: !8688)
!8693 = !DILocation(line: 4242, column: 21, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 4241, column: 16)
!8695 = !DILocation(line: 4242, column: 26, scope: !8694)
!8696 = !DILocation(line: 4242, column: 19, scope: !8694)
!8697 = !DILocation(line: 4245, column: 38, scope: !8685)
!8698 = !DILocation(line: 4245, column: 35, scope: !8685)
!8699 = !DILocation(line: 4245, column: 47, scope: !8685)
!8700 = !DILocation(line: 4245, column: 13, scope: !8685)
!8701 = !DILocation(line: 4245, column: 63, scope: !8685)
!8702 = !DILocation(line: 4245, column: 68, scope: !8685)
!8703 = !DILocation(line: 4246, column: 13, scope: !8685)
!8704 = !DILocation(line: 4246, column: 19, scope: !8685)
!8705 = !DILocation(line: 4245, column: 13, scope: !8526)
!8706 = !DILocation(line: 4249, column: 39, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 4247, column: 9)
!8708 = !DILocation(line: 4249, column: 36, scope: !8707)
!8709 = !DILocation(line: 4249, column: 48, scope: !8707)
!8710 = !DILocation(line: 4249, column: 60, scope: !8707)
!8711 = !DILocation(line: 4249, column: 72, scope: !8707)
!8712 = !DILocation(line: 4248, column: 13, scope: !8707)
!8713 = !DILocation(line: 4250, column: 9, scope: !8707)
!8714 = !DILocation(line: 4251, column: 31, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 4250, column: 16)
!8716 = !{!8717, !761, i64 8}
!8717 = !{!"sharedObjectsStruct", !761, i64 0, !761, i64 8, !761, i64 16, !761, i64 24, !761, i64 32, !761, i64 40, !761, i64 48, !761, i64 56, !761, i64 64, !761, i64 72, !761, i64 80, !761, i64 88, !761, i64 96, !761, i64 104, !761, i64 112, !761, i64 120, !761, i64 128, !761, i64 136, !761, i64 144, !761, i64 152, !761, i64 160, !761, i64 168, !761, i64 176, !761, i64 184, !761, i64 192, !761, i64 200, !761, i64 208, !761, i64 216, !761, i64 224, !761, i64 232, !761, i64 240, !761, i64 248, !761, i64 256, !761, i64 264, !761, i64 272, !761, i64 280, !761, i64 288, !761, i64 296, !761, i64 304, !761, i64 312, !761, i64 320, !761, i64 328, !761, i64 336, !761, i64 344, !761, i64 352, !761, i64 360, !710, i64 368, !710, i64 448, !710, i64 80448, !710, i64 80704, !761, i64 80960, !761, i64 80968}
!8718 = !DILocation(line: 4251, column: 13, scope: !8715)
!8719 = !DILocation(line: 4253, column: 5, scope: !8527)
!8720 = !DILocation(line: 0, scope: !8667)
!8721 = !DILocation(line: 4253, column: 17, scope: !8531)
!8722 = !DILocation(line: 4253, column: 53, scope: !8531)
!8723 = !DILocation(line: 4253, column: 16, scope: !8527)
!8724 = !DILocation(line: 4256, column: 18, scope: !8530)
!8725 = !DILocation(line: 4256, column: 13, scope: !8530)
!8726 = !DILocation(line: 4258, column: 13, scope: !8530)
!8727 = !DILocation(line: 4255, column: 15, scope: !8530)
!8728 = !DILocation(line: 4259, column: 9, scope: !8530)
!8729 = !DILocation(line: 4260, column: 9, scope: !8530)
!8730 = !DILocation(line: 4261, column: 5, scope: !8530)
!8731 = !DILocation(line: 4261, column: 17, scope: !8538)
!8732 = !DILocation(line: 4261, column: 52, scope: !8538)
!8733 = !DILocation(line: 4261, column: 16, scope: !8531)
!8734 = !DILocation(line: 4263, column: 31, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 4261, column: 69)
!8736 = !DILocation(line: 4263, column: 9, scope: !8735)
!8737 = !DILocation(line: 4264, column: 5, scope: !8735)
!8738 = !DILocation(line: 4264, column: 17, scope: !8537)
!8739 = !DILocation(line: 4264, column: 53, scope: !8537)
!8740 = !DILocation(line: 4264, column: 16, scope: !8538)
!8741 = !DILocation(line: 4266, column: 9, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 4264, column: 70)
!8743 = !DILocation(line: 4267, column: 5, scope: !8742)
!8744 = !DILocation(line: 4267, column: 17, scope: !8536)
!8745 = !DILocation(line: 4267, column: 58, scope: !8536)
!8746 = !DILocation(line: 4267, column: 16, scope: !8537)
!8747 = !DILocation(line: 4269, column: 13, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 4269, column: 13)
!8749 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 4267, column: 75)
!8750 = !DILocation(line: 4269, column: 41, scope: !8748)
!8751 = !DILocation(line: 4269, column: 13, scope: !8749)
!8752 = !DILocation(line: 4270, column: 13, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 4269, column: 47)
!8754 = !DILocation(line: 4271, column: 13, scope: !8753)
!8755 = !DILocation(line: 4273, column: 29, scope: !8749)
!8756 = !DILocation(line: 4273, column: 9, scope: !8749)
!8757 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !8758)
!8758 = distinct !DILocation(line: 4274, column: 9, scope: !8749)
!8759 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !8758)
!8760 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !8758)
!8761 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !8758)
!8762 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !8758)
!8763 = !DILocation(line: 4275, column: 27, scope: !8749)
!8764 = !DILocation(line: 4275, column: 9, scope: !8749)
!8765 = !DILocation(line: 4276, column: 5, scope: !8749)
!8766 = !DILocation(line: 4276, column: 18, scope: !8535)
!8767 = !DILocation(line: 4276, column: 57, scope: !8535)
!8768 = !DILocation(line: 4277, column: 17, scope: !8535)
!8769 = !DILocation(line: 4277, column: 57, scope: !8535)
!8770 = !DILocation(line: 4277, column: 68, scope: !8535)
!8771 = !DILocation(line: 4276, column: 16, scope: !8536)
!8772 = !DILocation(line: 4282, column: 32, scope: !8534)
!8773 = !DILocation(line: 4282, column: 24, scope: !8534)
!8774 = !DILocation(line: 4283, column: 34, scope: !8534)
!8775 = !DILocation(line: 4283, column: 31, scope: !8534)
!8776 = !DILocation(line: 4283, column: 43, scope: !8534)
!8777 = !DILocation(line: 4283, column: 20, scope: !8534)
!8778 = !DILocation(line: 4283, column: 19, scope: !8534)
!8779 = !DILocation(line: 4285, column: 9, scope: !8534)
!8780 = !DILocation(line: 4281, column: 13, scope: !8534)
!8781 = !DILocation(line: 4288, column: 14, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4288, column: 9)
!8783 = !DILocation(line: 4288, column: 28, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 4288, column: 9)
!8785 = !DILocation(line: 4288, column: 23, scope: !8784)
!8786 = !DILocation(line: 4288, column: 9, scope: !8782)
!8787 = !DILocation(line: 4289, column: 45, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 4289, column: 17)
!8789 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 4288, column: 39)
!8790 = !DILocation(line: 4289, column: 42, scope: !8788)
!8791 = !DILocation(line: 4106, column: 28, scope: !8225, inlinedAt: !8792)
!8792 = distinct !DILocation(line: 4289, column: 25, scope: !8788)
!8793 = !DILocation(line: 4106, column: 37, scope: !8225, inlinedAt: !8792)
!8794 = !DILocation(line: 4107, column: 5, scope: !8225, inlinedAt: !8792)
!8795 = !DILocation(line: 4107, column: 15, scope: !8225, inlinedAt: !8792)
!8796 = !DILocation(line: 4109, column: 9, scope: !8360, inlinedAt: !8792)
!8797 = !DILocation(line: 4109, column: 40, scope: !8360, inlinedAt: !8792)
!8798 = !DILocation(line: 4110, column: 9, scope: !8360, inlinedAt: !8792)
!8799 = !DILocation(line: 4109, column: 48, scope: !8360, inlinedAt: !8792)
!8800 = !DILocation(line: 4112, column: 9, scope: !8365, inlinedAt: !8792)
!8801 = !DILocation(line: 4113, column: 9, scope: !8365, inlinedAt: !8792)
!8802 = !DILocation(line: 4116, column: 1, scope: !8225, inlinedAt: !8792)
!8803 = !DILocation(line: 4281, column: 16, scope: !8534)
!8804 = !DILocation(line: 4289, column: 17, scope: !8789)
!8805 = !DILocation(line: 4115, column: 12, scope: !8225, inlinedAt: !8792)
!8806 = !DILocation(line: 4115, column: 5, scope: !8225, inlinedAt: !8792)
!8807 = !DILocation(line: 4289, column: 55, scope: !8788)
!8808 = !DILocation(line: 4290, column: 17, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 4289, column: 62)
!8810 = !DILocation(line: 4291, column: 17, scope: !8809)
!8811 = !DILocation(line: 4293, column: 21, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 4293, column: 17)
!8813 = !DILocation(line: 4293, column: 31, scope: !8812)
!8814 = !DILocation(line: 4293, column: 24, scope: !8812)
!8815 = !DILocation(line: 4293, column: 52, scope: !8812)
!8816 = !DILocation(line: 4293, column: 17, scope: !8789)
!8817 = !DILocation(line: 4294, column: 17, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 4293, column: 61)
!8819 = !DILocation(line: 4295, column: 17, scope: !8818)
!8820 = !DILocation(line: 4296, column: 17, scope: !8818)
!8821 = !DILocation(line: 4297, column: 29, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 4297, column: 24)
!8823 = !DILocation(line: 4297, column: 39, scope: !8822)
!8824 = !DILocation(line: 4297, column: 32, scope: !8822)
!8825 = !DILocation(line: 4297, column: 24, scope: !8812)
!8826 = !DILocation(line: 4298, column: 17, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 4297, column: 61)
!8828 = !DILocation(line: 4299, column: 17, scope: !8827)
!8829 = !DILocation(line: 4300, column: 17, scope: !8827)
!8830 = !DILocation(line: 4302, column: 17, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 4302, column: 17)
!8832 = !DILocation(line: 4302, column: 28, scope: !8831)
!8833 = !DILocation(line: 4302, column: 31, scope: !8831)
!8834 = !DILocation(line: 4302, column: 17, scope: !8789)
!8835 = !DILocation(line: 4303, column: 17, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 4302, column: 37)
!8837 = !DILocation(line: 4305, column: 17, scope: !8836)
!8838 = !DILocation(line: 4306, column: 17, scope: !8836)
!8839 = !DILocation(line: 4288, column: 35, scope: !8784)
!8840 = !DILocation(line: 4288, column: 9, scope: !8784)
!8841 = distinct !{!8841, !8786, !8842}
!8842 = !DILocation(line: 4308, column: 9, scope: !8782)
!8843 = !DILocation(line: 4309, column: 14, scope: !8547)
!8844 = !DILocation(line: 4309, column: 9, scope: !8547)
!8845 = !DILocation(line: 4310, column: 17, scope: !8544)
!8846 = !DILocation(line: 4310, column: 17, scope: !8545)
!8847 = !DILocation(line: 4315, column: 28, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 4315, column: 21)
!8849 = !DILocation(line: 4315, column: 21, scope: !8848)
!8850 = !DILocation(line: 4315, column: 21, scope: !8543)
!8851 = !DILocation(line: 4316, column: 61, scope: !8848)
!8852 = !DILocation(line: 4316, column: 21, scope: !8848)
!8853 = !DILocation(line: 4318, column: 26, scope: !8543)
!8854 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !8855)
!8855 = distinct !DILocation(line: 4318, column: 32, scope: !8543)
!8856 = !DILocation(line: 3717, column: 29, scope: !2242, inlinedAt: !8855)
!8857 = !DILocation(line: 3717, column: 22, scope: !2242, inlinedAt: !8855)
!8858 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !8855)
!8859 = !DILocation(line: 3719, column: 10, scope: !2251, inlinedAt: !8855)
!8860 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !8855)
!8861 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !8862)
!8862 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !8855)
!8863 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !8862)
!8864 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !8865)
!8865 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !8862)
!8866 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !8865)
!8867 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !8865)
!8868 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !8865)
!8869 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !8865)
!8870 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !8865)
!8871 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !8865)
!8872 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !8865)
!8873 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !8865)
!8874 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !8865)
!8875 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !8876)
!8876 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !8862)
!8877 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !8876)
!8878 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !8876)
!8879 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !8876)
!8880 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !8876)
!8881 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !8876)
!8882 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !8862)
!8883 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !8862)
!8884 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !8855)
!8885 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !8862)
!8886 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !8862)
!8887 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !8862)
!8888 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !8855)
!8889 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !8855)
!8890 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !8855)
!8891 = !DILocation(line: 0, scope: !8543)
!8892 = !DILocation(line: 4320, column: 17, scope: !8543)
!8893 = !DILocation(line: 4319, column: 47, scope: !8543)
!8894 = !DILocation(line: 3706, column: 33, scope: !1246, inlinedAt: !8895)
!8895 = distinct !DILocation(line: 4319, column: 32, scope: !8543)
!8896 = !DILocation(line: 3706, column: 40, scope: !1246, inlinedAt: !8895)
!8897 = !DILocation(line: 3707, column: 16, scope: !1255, inlinedAt: !8895)
!8898 = !DILocation(line: 3707, column: 9, scope: !1255, inlinedAt: !8895)
!8899 = !DILocation(line: 3707, column: 9, scope: !1246, inlinedAt: !8895)
!8900 = !DILocation(line: 3708, column: 5, scope: !1246, inlinedAt: !8895)
!8901 = !DILocation(line: 3709, column: 12, scope: !1246, inlinedAt: !8895)
!8902 = !DILocation(line: 3709, column: 5, scope: !1246, inlinedAt: !8895)
!8903 = !DILocation(line: 3709, column: 33, scope: !1246, inlinedAt: !8895)
!8904 = !DILocation(line: 4321, column: 13, scope: !8543)
!8905 = !DILocation(line: 4309, column: 41, scope: !8546)
!8906 = !DILocation(line: 4309, column: 9, scope: !8546)
!8907 = !DILocation(line: 4309, column: 23, scope: !8546)
!8908 = distinct !{!8908, !8844, !8909}
!8909 = !DILocation(line: 4322, column: 9, scope: !8547)
!8910 = !DILocation(line: 4323, column: 9, scope: !8534)
!8911 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !8912)
!8912 = distinct !DILocation(line: 4324, column: 9, scope: !8534)
!8913 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !8912)
!8914 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !8912)
!8915 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !8912)
!8916 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !8912)
!8917 = !DILocation(line: 4325, column: 27, scope: !8534)
!8918 = !DILocation(line: 4325, column: 9, scope: !8534)
!8919 = !DILocation(line: 4326, column: 5, scope: !8535)
!8920 = !DILocation(line: 0, scope: !8809)
!8921 = !DILocation(line: 4326, column: 17, scope: !8550)
!8922 = !DILocation(line: 4326, column: 55, scope: !8550)
!8923 = !DILocation(line: 4326, column: 66, scope: !8550)
!8924 = !DILocation(line: 4326, column: 16, scope: !8535)
!8925 = !DILocation(line: 4334, column: 13, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 4334, column: 13)
!8927 = !DILocation(line: 4334, column: 13, scope: !8549)
!8928 = !DILocation(line: 4335, column: 13, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 4334, column: 34)
!8930 = !DILocation(line: 4336, column: 13, scope: !8929)
!8931 = !DILocation(line: 4339, column: 38, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 4339, column: 13)
!8933 = !DILocation(line: 4106, column: 28, scope: !8225, inlinedAt: !8934)
!8934 = distinct !DILocation(line: 4339, column: 21, scope: !8932)
!8935 = !DILocation(line: 4106, column: 37, scope: !8225, inlinedAt: !8934)
!8936 = !DILocation(line: 4107, column: 5, scope: !8225, inlinedAt: !8934)
!8937 = !DILocation(line: 4107, column: 15, scope: !8225, inlinedAt: !8934)
!8938 = !DILocation(line: 4109, column: 9, scope: !8360, inlinedAt: !8934)
!8939 = !DILocation(line: 4109, column: 40, scope: !8360, inlinedAt: !8934)
!8940 = !DILocation(line: 4110, column: 9, scope: !8360, inlinedAt: !8934)
!8941 = !DILocation(line: 4109, column: 48, scope: !8360, inlinedAt: !8934)
!8942 = !DILocation(line: 4112, column: 9, scope: !8365, inlinedAt: !8934)
!8943 = !DILocation(line: 4113, column: 9, scope: !8365, inlinedAt: !8934)
!8944 = !DILocation(line: 4116, column: 1, scope: !8225, inlinedAt: !8934)
!8945 = !DILocation(line: 4331, column: 13, scope: !8549)
!8946 = !DILocation(line: 4339, column: 13, scope: !8549)
!8947 = !DILocation(line: 4115, column: 12, scope: !8225, inlinedAt: !8934)
!8948 = !DILocation(line: 4115, column: 5, scope: !8225, inlinedAt: !8934)
!8949 = !DILocation(line: 4339, column: 51, scope: !8932)
!8950 = !DILocation(line: 4341, column: 28, scope: !8557)
!8951 = !DILocation(line: 4341, column: 25, scope: !8557)
!8952 = !DILocation(line: 4341, column: 37, scope: !8557)
!8953 = !DILocation(line: 4341, column: 14, scope: !8557)
!8954 = !DILocation(line: 4341, column: 54, scope: !8557)
!8955 = !DILocation(line: 4341, column: 60, scope: !8557)
!8956 = !DILocation(line: 4341, column: 65, scope: !8557)
!8957 = !DILocation(line: 4341, column: 13, scope: !8549)
!8958 = !DILocation(line: 4342, column: 24, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 4342, column: 17)
!8960 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 4341, column: 71)
!8961 = !DILocation(line: 4342, column: 17, scope: !8959)
!8962 = !DILocation(line: 4342, column: 48, scope: !8959)
!8963 = !DILocation(line: 4342, column: 45, scope: !8959)
!8964 = !DILocation(line: 4342, column: 17, scope: !8960)
!8965 = !DILocation(line: 4343, column: 17, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 4342, column: 56)
!8967 = !DILocation(line: 4344, column: 17, scope: !8966)
!8968 = !DILocation(line: 4346, column: 40, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 4346, column: 17)
!8970 = !DILocation(line: 4346, column: 52, scope: !8969)
!8971 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !8972)
!8972 = distinct !DILocation(line: 4346, column: 22, scope: !8969)
!8973 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !8972)
!8974 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !8972)
!8975 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !8972)
!8976 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !8972)
!8977 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !8972)
!8978 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !8972)
!8979 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !8972)
!8980 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !8972)
!8981 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !8972)
!8982 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !8972)
!8983 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !8972)
!8984 = !DILocation(line: 4332, column: 22, scope: !8549)
!8985 = !DILocation(line: 4346, column: 17, scope: !8960)
!8986 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !8972)
!8987 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !8972)
!8988 = !DILocation(line: 4346, column: 58, scope: !8969)
!8989 = !DILocation(line: 4348, column: 31, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 4346, column: 67)
!8991 = !DILocation(line: 4348, column: 28, scope: !8990)
!8992 = !DILocation(line: 4348, column: 40, scope: !8990)
!8993 = !DILocation(line: 4347, column: 17, scope: !8990)
!8994 = !DILocation(line: 4349, column: 17, scope: !8990)
!8995 = !DILocation(line: 4351, column: 20, scope: !8960)
!8996 = !DILocation(line: 4351, column: 13, scope: !8960)
!8997 = !DILocation(line: 4351, column: 54, scope: !8960)
!8998 = !DILocation(line: 4352, column: 9, scope: !8960)
!8999 = !DILocation(line: 4352, column: 21, scope: !8556)
!9000 = !DILocation(line: 4352, column: 61, scope: !8556)
!9001 = !DILocation(line: 4352, column: 67, scope: !8556)
!9002 = !DILocation(line: 4352, column: 72, scope: !8556)
!9003 = !DILocation(line: 4352, column: 20, scope: !8557)
!9004 = !DILocation(line: 4353, column: 24, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 4353, column: 17)
!9006 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 4352, column: 78)
!9007 = !DILocation(line: 4353, column: 17, scope: !9005)
!9008 = !DILocation(line: 4353, column: 48, scope: !9005)
!9009 = !DILocation(line: 4353, column: 45, scope: !9005)
!9010 = !DILocation(line: 4353, column: 17, scope: !9006)
!9011 = !DILocation(line: 4354, column: 17, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 4353, column: 56)
!9013 = !DILocation(line: 4356, column: 17, scope: !9012)
!9014 = !DILocation(line: 4358, column: 40, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 4358, column: 17)
!9016 = !DILocation(line: 4358, column: 52, scope: !9015)
!9017 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !9018)
!9018 = distinct !DILocation(line: 4358, column: 22, scope: !9015)
!9019 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !9018)
!9020 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !9018)
!9021 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !9018)
!9022 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !9018)
!9023 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !9018)
!9024 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !9018)
!9025 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !9018)
!9026 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !9018)
!9027 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !9018)
!9028 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !9018)
!9029 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !9018)
!9030 = !DILocation(line: 4358, column: 17, scope: !9006)
!9031 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !9018)
!9032 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !9018)
!9033 = !DILocation(line: 4358, column: 58, scope: !9015)
!9034 = !DILocation(line: 4360, column: 31, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 4358, column: 67)
!9036 = !DILocation(line: 4360, column: 28, scope: !9035)
!9037 = !DILocation(line: 4360, column: 40, scope: !9035)
!9038 = !DILocation(line: 4359, column: 17, scope: !9035)
!9039 = !DILocation(line: 4361, column: 17, scope: !9035)
!9040 = !DILocation(line: 4363, column: 20, scope: !9006)
!9041 = !DILocation(line: 4363, column: 13, scope: !9006)
!9042 = !DILocation(line: 4363, column: 56, scope: !9006)
!9043 = !DILocation(line: 4364, column: 9, scope: !9006)
!9044 = !DILocation(line: 4364, column: 21, scope: !8555)
!9045 = !DILocation(line: 4364, column: 58, scope: !8555)
!9046 = !DILocation(line: 4364, column: 64, scope: !8555)
!9047 = !DILocation(line: 4364, column: 69, scope: !8555)
!9048 = !DILocation(line: 4364, column: 20, scope: !8556)
!9049 = !DILocation(line: 4366, column: 20, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 4364, column: 75)
!9051 = !DILocation(line: 4366, column: 13, scope: !9050)
!9052 = !DILocation(line: 4366, column: 56, scope: !9050)
!9053 = !DILocation(line: 4367, column: 20, scope: !9050)
!9054 = !DILocation(line: 4367, column: 13, scope: !9050)
!9055 = !DILocation(line: 4367, column: 54, scope: !9050)
!9056 = !DILocation(line: 4368, column: 9, scope: !9050)
!9057 = !DILocation(line: 4368, column: 21, scope: !8554)
!9058 = !DILocation(line: 4368, column: 56, scope: !8554)
!9059 = !DILocation(line: 4368, column: 62, scope: !8554)
!9060 = !DILocation(line: 4368, column: 67, scope: !8554)
!9061 = !DILocation(line: 4368, column: 20, scope: !8555)
!9062 = !DILocation(line: 4370, column: 48, scope: !8553)
!9063 = !DILocation(line: 4370, column: 60, scope: !8553)
!9064 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !9065)
!9065 = distinct !DILocation(line: 4370, column: 30, scope: !8553)
!9066 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !9065)
!9067 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !9065)
!9068 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !9065)
!9069 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !9065)
!9070 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !9065)
!9071 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !9065)
!9072 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !9065)
!9073 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !9065)
!9074 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !9065)
!9075 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !9065)
!9076 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !9065)
!9077 = !DILocation(line: 4370, column: 26, scope: !8553)
!9078 = !DILocation(line: 4372, column: 17, scope: !8553)
!9079 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !9065)
!9080 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !9065)
!9081 = !DILocation(line: 4372, column: 18, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4372, column: 17)
!9083 = !DILocation(line: 4374, column: 31, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 4372, column: 21)
!9085 = !DILocation(line: 4374, column: 28, scope: !9084)
!9086 = !DILocation(line: 4374, column: 40, scope: !9084)
!9087 = !DILocation(line: 4373, column: 17, scope: !9084)
!9088 = !DILocation(line: 4375, column: 17, scope: !9084)
!9089 = !DILocation(line: 4379, column: 24, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4379, column: 17)
!9091 = !DILocation(line: 4379, column: 17, scope: !9090)
!9092 = !DILocation(line: 4379, column: 48, scope: !9090)
!9093 = !DILocation(line: 4379, column: 45, scope: !9090)
!9094 = !DILocation(line: 4379, column: 55, scope: !9090)
!9095 = !DILocation(line: 4379, column: 60, scope: !9090)
!9096 = !DILocation(line: 4379, column: 17, scope: !8553)
!9097 = !DILocation(line: 4380, column: 21, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 4380, column: 21)
!9099 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 4379, column: 71)
!9100 = !DILocation(line: 4380, column: 43, scope: !9098)
!9101 = !DILocation(line: 4380, column: 21, scope: !9099)
!9102 = !DILocation(line: 4381, column: 21, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4380, column: 49)
!9104 = !DILocation(line: 4384, column: 21, scope: !9103)
!9105 = !DILocation(line: 4390, column: 17, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4390, column: 17)
!9107 = !DILocation(line: 4390, column: 39, scope: !9106)
!9108 = !DILocation(line: 4390, column: 44, scope: !9106)
!9109 = !DILocation(line: 4391, column: 24, scope: !9106)
!9110 = !DILocation(line: 4391, column: 17, scope: !9106)
!9111 = !DILocation(line: 4390, column: 17, scope: !8553)
!9112 = !DILocation(line: 4392, column: 58, scope: !9106)
!9113 = !DILocation(line: 4392, column: 17, scope: !9106)
!9114 = !DILocation(line: 4396, column: 22, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 4396, column: 17)
!9116 = !DILocation(line: 4396, column: 19, scope: !9115)
!9117 = !DILocation(line: 4396, column: 29, scope: !9115)
!9118 = !DILocation(line: 4397, column: 24, scope: !9115)
!9119 = !DILocation(line: 4397, column: 17, scope: !9115)
!9120 = !DILocation(line: 4396, column: 17, scope: !8553)
!9121 = !DILocation(line: 1014, column: 25, scope: !3162, inlinedAt: !9122)
!9122 = distinct !DILocation(line: 4408, column: 21, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 4408, column: 21)
!9124 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 4398, column: 13)
!9125 = !DILocation(line: 1014, column: 14, scope: !3162, inlinedAt: !9122)
!9126 = !DILocation(line: 1016, column: 9, scope: !3170, inlinedAt: !9122)
!9127 = !DILocation(line: 1016, column: 17, scope: !3170, inlinedAt: !9122)
!9128 = !DILocation(line: 1016, column: 29, scope: !3170, inlinedAt: !9122)
!9129 = !DILocation(line: 1016, column: 34, scope: !3170, inlinedAt: !9122)
!9130 = !DILocation(line: 1017, column: 29, scope: !3170, inlinedAt: !9122)
!9131 = !DILocation(line: 1016, column: 9, scope: !3162, inlinedAt: !9122)
!9132 = !DILocation(line: 1028, column: 9, scope: !3189, inlinedAt: !9122)
!9133 = !DILocation(line: 1030, column: 1, scope: !3162, inlinedAt: !9122)
!9134 = !DILocation(line: 4408, column: 21, scope: !9124)
!9135 = !DILocation(line: 1019, column: 16, scope: !3177, inlinedAt: !9122)
!9136 = !DILocation(line: 1019, column: 25, scope: !3177, inlinedAt: !9122)
!9137 = !DILocation(line: 1019, column: 37, scope: !3177, inlinedAt: !9122)
!9138 = !DILocation(line: 1020, column: 29, scope: !3177, inlinedAt: !9122)
!9139 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9140)
!9140 = distinct !DILocation(line: 1021, column: 9, scope: !3177, inlinedAt: !9122)
!9141 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9140)
!9142 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9140)
!9143 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9140)
!9144 = !DILocation(line: 1023, column: 9, scope: !3177, inlinedAt: !9122)
!9145 = !DILocation(line: 1026, column: 9, scope: !3177, inlinedAt: !9122)
!9146 = !DILocation(line: 4409, column: 21, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 4408, column: 71)
!9148 = !DILocation(line: 4411, column: 17, scope: !9147)
!9149 = !DILocation(line: 0, scope: !9147)
!9150 = !DILocation(line: 4412, column: 24, scope: !9124)
!9151 = !DILocation(line: 4412, column: 17, scope: !9124)
!9152 = !DILocation(line: 4412, column: 60, scope: !9124)
!9153 = !DILocation(line: 4413, column: 13, scope: !9124)
!9154 = !DILocation(line: 3716, column: 24, scope: !2242, inlinedAt: !9155)
!9155 = distinct !DILocation(line: 4414, column: 13, scope: !8553)
!9156 = !DILocation(line: 3717, column: 29, scope: !2242, inlinedAt: !9155)
!9157 = !DILocation(line: 3717, column: 22, scope: !2242, inlinedAt: !9155)
!9158 = !DILocation(line: 3717, column: 18, scope: !2242, inlinedAt: !9155)
!9159 = !DILocation(line: 3719, column: 10, scope: !2251, inlinedAt: !9155)
!9160 = !DILocation(line: 3719, column: 9, scope: !2242, inlinedAt: !9155)
!9161 = !DILocation(line: 3719, column: 13, scope: !2251, inlinedAt: !9155)
!9162 = !DILocation(line: 3723, column: 1, scope: !2242, inlinedAt: !9155)
!9163 = !DILocation(line: 3706, column: 33, scope: !1246, inlinedAt: !9164)
!9164 = distinct !DILocation(line: 4415, column: 13, scope: !8553)
!9165 = !DILocation(line: 3706, column: 40, scope: !1246, inlinedAt: !9164)
!9166 = !DILocation(line: 3707, column: 9, scope: !1246, inlinedAt: !9164)
!9167 = !DILocation(line: 3690, column: 42, scope: !2255, inlinedAt: !9168)
!9168 = distinct !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !9155)
!9169 = !DILocation(line: 3690, column: 49, scope: !2255, inlinedAt: !9168)
!9170 = !DILocation(line: 3627, column: 34, scope: !2263, inlinedAt: !9171)
!9171 = distinct !DILocation(line: 3691, column: 15, scope: !2255, inlinedAt: !9168)
!9172 = !DILocation(line: 3627, column: 46, scope: !2263, inlinedAt: !9171)
!9173 = !DILocation(line: 3628, column: 11, scope: !2263, inlinedAt: !9171)
!9174 = !DILocation(line: 3629, column: 18, scope: !2263, inlinedAt: !9171)
!9175 = !DILocation(line: 3629, column: 9, scope: !2263, inlinedAt: !9171)
!9176 = !DILocation(line: 3630, column: 13, scope: !2263, inlinedAt: !9171)
!9177 = !DILocation(line: 3630, column: 30, scope: !2263, inlinedAt: !9171)
!9178 = !DILocation(line: 3630, column: 26, scope: !2263, inlinedAt: !9171)
!9179 = !DILocation(line: 3630, column: 38, scope: !2263, inlinedAt: !9171)
!9180 = !DILocation(line: 3630, column: 5, scope: !2263, inlinedAt: !9171)
!9181 = !DILocation(line: 3641, column: 36, scope: !2282, inlinedAt: !9182)
!9182 = distinct !DILocation(line: 3692, column: 5, scope: !2255, inlinedAt: !9168)
!9183 = !DILocation(line: 3641, column: 48, scope: !2282, inlinedAt: !9182)
!9184 = !DILocation(line: 3642, column: 11, scope: !2282, inlinedAt: !9182)
!9185 = !DILocation(line: 3643, column: 9, scope: !2282, inlinedAt: !9182)
!9186 = !DILocation(line: 3644, column: 18, scope: !2282, inlinedAt: !9182)
!9187 = !DILocation(line: 3645, column: 1, scope: !2282, inlinedAt: !9182)
!9188 = !DILocation(line: 3693, column: 9, scope: !2255, inlinedAt: !9168)
!9189 = !DILocation(line: 3694, column: 5, scope: !2255, inlinedAt: !9168)
!9190 = !DILocation(line: 3720, column: 5, scope: !2242, inlinedAt: !9155)
!9191 = !DILocation(line: 3693, column: 17, scope: !2300, inlinedAt: !9168)
!9192 = !DILocation(line: 3693, column: 25, scope: !2300, inlinedAt: !9168)
!9193 = !DILocation(line: 3693, column: 14, scope: !2300, inlinedAt: !9168)
!9194 = !DILocation(line: 3721, column: 12, scope: !2242, inlinedAt: !9155)
!9195 = !DILocation(line: 3721, column: 5, scope: !2242, inlinedAt: !9155)
!9196 = !DILocation(line: 3721, column: 33, scope: !2242, inlinedAt: !9155)
!9197 = !DILocation(line: 3722, column: 5, scope: !2242, inlinedAt: !9155)
!9198 = !DILocation(line: 3707, column: 16, scope: !1255, inlinedAt: !9164)
!9199 = !DILocation(line: 3707, column: 9, scope: !1255, inlinedAt: !9164)
!9200 = !DILocation(line: 3708, column: 5, scope: !1246, inlinedAt: !9164)
!9201 = !DILocation(line: 3709, column: 12, scope: !1246, inlinedAt: !9164)
!9202 = !DILocation(line: 3709, column: 5, scope: !1246, inlinedAt: !9164)
!9203 = !DILocation(line: 3709, column: 33, scope: !1246, inlinedAt: !9164)
!9204 = !DILocation(line: 3710, column: 5, scope: !1246, inlinedAt: !9164)
!9205 = !DILocation(line: 0, scope: !8553)
!9206 = !DILocation(line: 3711, column: 1, scope: !1246, inlinedAt: !9164)
!9207 = !DILocation(line: 4416, column: 9, scope: !8554)
!9208 = !DILocation(line: 4417, column: 13, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 4416, column: 16)
!9210 = !DILocation(line: 4419, column: 13, scope: !9209)
!9211 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9212)
!9212 = distinct !DILocation(line: 4421, column: 9, scope: !8549)
!9213 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !9212)
!9214 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9212)
!9215 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9212)
!9216 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9212)
!9217 = !DILocation(line: 4422, column: 27, scope: !8549)
!9218 = !DILocation(line: 4422, column: 9, scope: !8549)
!9219 = !DILocation(line: 4423, column: 5, scope: !8550)
!9220 = !DILocation(line: 4423, column: 17, scope: !8560)
!9221 = !DILocation(line: 4423, column: 57, scope: !8560)
!9222 = !DILocation(line: 4423, column: 16, scope: !8550)
!9223 = !DILocation(line: 1014, column: 25, scope: !3162, inlinedAt: !9224)
!9224 = distinct !DILocation(line: 4425, column: 22, scope: !8559)
!9225 = !DILocation(line: 1014, column: 14, scope: !3162, inlinedAt: !9224)
!9226 = !DILocation(line: 1016, column: 9, scope: !3170, inlinedAt: !9224)
!9227 = !DILocation(line: 1016, column: 17, scope: !3170, inlinedAt: !9224)
!9228 = !DILocation(line: 1016, column: 29, scope: !3170, inlinedAt: !9224)
!9229 = !DILocation(line: 1016, column: 34, scope: !3170, inlinedAt: !9224)
!9230 = !DILocation(line: 1017, column: 29, scope: !3170, inlinedAt: !9224)
!9231 = !DILocation(line: 1016, column: 9, scope: !3162, inlinedAt: !9224)
!9232 = !DILocation(line: 1019, column: 16, scope: !3177, inlinedAt: !9224)
!9233 = !DILocation(line: 1019, column: 25, scope: !3177, inlinedAt: !9224)
!9234 = !DILocation(line: 1019, column: 37, scope: !3177, inlinedAt: !9224)
!9235 = !DILocation(line: 1020, column: 29, scope: !3177, inlinedAt: !9224)
!9236 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9237)
!9237 = distinct !DILocation(line: 1021, column: 9, scope: !3177, inlinedAt: !9224)
!9238 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9237)
!9239 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9237)
!9240 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9237)
!9241 = !DILocation(line: 1023, column: 9, scope: !3177, inlinedAt: !9224)
!9242 = !DILocation(line: 4425, column: 13, scope: !8559)
!9243 = !DILocation(line: 4427, column: 17, scope: !8559)
!9244 = !DILocation(line: 0, scope: !8559)
!9245 = !DILocation(line: 1030, column: 1, scope: !3162, inlinedAt: !9224)
!9246 = !DILocation(line: 4426, column: 34, scope: !8559)
!9247 = !DILocation(line: 4428, column: 38, scope: !8559)
!9248 = !DILocation(line: 4428, column: 46, scope: !8559)
!9249 = !DILocation(line: 4426, column: 21, scope: !8559)
!9250 = !DILocation(line: 4426, column: 13, scope: !8559)
!9251 = !DILocation(line: 4429, column: 9, scope: !8559)
!9252 = !DILocation(line: 4430, column: 5, scope: !8559)
!9253 = !DILocation(line: 4430, column: 17, scope: !8564)
!9254 = !DILocation(line: 4430, column: 52, scope: !8564)
!9255 = !DILocation(line: 4430, column: 16, scope: !8560)
!9256 = !DILocation(line: 4432, column: 15, scope: !8563)
!9257 = !DILocation(line: 4433, column: 13, scope: !8563)
!9258 = !DILocation(line: 4433, column: 33, scope: !8563)
!9259 = !DILocation(line: 4433, column: 47, scope: !8563)
!9260 = !DILocation(line: 4433, column: 64, scope: !8563)
!9261 = !DILocation(line: 4435, column: 13, scope: !8563)
!9262 = !DILocation(line: 4437, column: 14, scope: !8575)
!9263 = !DILocation(line: 4437, column: 9, scope: !8575)
!9264 = !DILocation(line: 4438, column: 30, scope: !8573)
!9265 = !DILocation(line: 4438, column: 26, scope: !8573)
!9266 = !DILocation(line: 4440, column: 19, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 4440, column: 17)
!9268 = !DILocation(line: 4440, column: 17, scope: !8573)
!9269 = !DILocation(line: 4441, column: 27, scope: !8573)
!9270 = !DILocation(line: 4442, column: 17, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 4442, column: 17)
!9272 = !DILocation(line: 4442, column: 17, scope: !8573)
!9273 = !DILocation(line: 4443, column: 27, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 4442, column: 32)
!9275 = !DILocation(line: 4444, column: 13, scope: !9274)
!9276 = !DILocation(line: 4444, column: 24, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 4444, column: 24)
!9278 = !DILocation(line: 4444, column: 24, scope: !9271)
!9279 = !DILocation(line: 4445, column: 28, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 4444, column: 41)
!9281 = !DILocation(line: 4446, column: 13, scope: !9280)
!9282 = !DILocation(line: 4447, column: 25, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 4446, column: 20)
!9284 = !DILocation(line: 0, scope: !8563)
!9285 = !DILocation(line: 0, scope: !9283)
!9286 = !DILocation(line: 4449, column: 9, scope: !8574)
!9287 = !DILocation(line: 0, scope: !9274)
!9288 = !DILocation(line: 0, scope: !8573)
!9289 = !DILocation(line: 0, scope: !9267)
!9290 = !DILocation(line: 4437, column: 41, scope: !8574)
!9291 = !DILocation(line: 4437, column: 9, scope: !8574)
!9292 = !DILocation(line: 4437, column: 23, scope: !8574)
!9293 = distinct !{!9293, !9263, !9294}
!9294 = !DILocation(line: 4449, column: 9, scope: !8575)
!9295 = !DILocation(line: 4451, column: 20, scope: !8563)
!9296 = !DILocation(line: 4451, column: 40, scope: !8563)
!9297 = !DILocation(line: 4451, column: 51, scope: !8563)
!9298 = !DILocation(line: 4451, column: 43, scope: !8563)
!9299 = !DILocation(line: 4451, column: 19, scope: !8563)
!9300 = !DILocation(line: 4434, column: 18, scope: !8563)
!9301 = !DILocation(line: 4454, column: 33, scope: !8563)
!9302 = !DILocation(line: 4464, column: 31, scope: !8563)
!9303 = !DILocation(line: 4464, column: 40, scope: !8563)
!9304 = !DILocation(line: 4464, column: 15, scope: !8563)
!9305 = !DILocation(line: 4469, column: 13, scope: !8563)
!9306 = !DILocation(line: 4470, column: 29, scope: !8563)
!9307 = !DILocation(line: 4471, column: 50, scope: !8563)
!9308 = !DILocation(line: 4454, column: 20, scope: !8563)
!9309 = !DILocation(line: 4454, column: 13, scope: !8563)
!9310 = !DILocation(line: 4476, column: 19, scope: !8563)
!9311 = !DILocation(line: 4477, column: 19, scope: !8563)
!9312 = !DILocation(line: 4479, column: 18, scope: !8580)
!9313 = !DILocation(line: 4479, column: 14, scope: !8580)
!9314 = !DILocation(line: 4479, column: 9, scope: !8580)
!9315 = !DILocation(line: 4487, column: 16, scope: !8563)
!9316 = !DILocation(line: 4490, column: 18, scope: !8582)
!9317 = !DILocation(line: 4490, column: 14, scope: !8582)
!9318 = !DILocation(line: 4490, column: 9, scope: !8582)
!9319 = !DILocation(line: 4480, column: 24, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9321, file: !3, line: 4480, column: 17)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 4479, column: 57)
!9322 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 4479, column: 9)
!9323 = !DILocation(line: 4480, column: 17, scope: !9320)
!9324 = !DILocation(line: 4480, column: 60, scope: !9320)
!9325 = !DILocation(line: 4480, column: 17, scope: !9321)
!9326 = !DILocation(line: 4481, column: 26, scope: !9321)
!9327 = !DILocation(line: 4090, column: 45, scope: !8215, inlinedAt: !9328)
!9328 = distinct !DILocation(line: 4484, column: 17, scope: !9321)
!9329 = !DILocation(line: 4091, column: 5, scope: !8215, inlinedAt: !9328)
!9330 = !DILocation(line: 0, scope: !8223, inlinedAt: !9328)
!9331 = !DILocation(line: 0, scope: !9321)
!9332 = !DILocation(line: 4104, column: 1, scope: !8215, inlinedAt: !9328)
!9333 = !DILocation(line: 4482, column: 20, scope: !9321)
!9334 = !DILocation(line: 4486, column: 9, scope: !9321)
!9335 = !DILocation(line: 4479, column: 53, scope: !9322)
!9336 = !DILocation(line: 4479, column: 9, scope: !9322)
!9337 = !DILocation(line: 4479, column: 27, scope: !9322)
!9338 = distinct !{!9338, !9314, !9339}
!9339 = !DILocation(line: 4486, column: 9, scope: !8580)
!9340 = !DILocation(line: 4498, column: 16, scope: !8563)
!9341 = !DILocation(line: 4502, column: 36, scope: !8563)
!9342 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !9343)
!9343 = distinct !DILocation(line: 4503, column: 28, scope: !8563)
!9344 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !9343)
!9345 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !9343)
!9346 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !9343)
!9347 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !9343)
!9348 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !9343)
!9349 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !9343)
!9350 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !9343)
!9351 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !9343)
!9352 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !9343)
!9353 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !9343)
!9354 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !9343)
!9355 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !9343)
!9356 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !9343)
!9357 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !9343)
!9358 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !9343)
!9359 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !9343)
!9360 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !9343)
!9361 = !DILocation(line: 0, scope: !1496, inlinedAt: !9343)
!9362 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !9343)
!9363 = !DILocation(line: 4502, column: 23, scope: !8563)
!9364 = !DILocation(line: 4502, column: 9, scope: !8563)
!9365 = !DILocation(line: 4504, column: 9, scope: !8563)
!9366 = !DILocation(line: 4505, column: 27, scope: !8563)
!9367 = !{!8717, !761, i64 0}
!9368 = !DILocation(line: 4505, column: 9, scope: !8563)
!9369 = !DILocation(line: 4506, column: 5, scope: !8563)
!9370 = !DILocation(line: 4491, column: 24, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 4491, column: 17)
!9372 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 4490, column: 57)
!9373 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 4490, column: 9)
!9374 = !DILocation(line: 4491, column: 17, scope: !9371)
!9375 = !DILocation(line: 4491, column: 64, scope: !9371)
!9376 = !DILocation(line: 4491, column: 17, scope: !9372)
!9377 = !DILocation(line: 4492, column: 30, scope: !9372)
!9378 = !DILocation(line: 4090, column: 45, scope: !8215, inlinedAt: !9379)
!9379 = distinct !DILocation(line: 4495, column: 17, scope: !9372)
!9380 = !DILocation(line: 4091, column: 5, scope: !8215, inlinedAt: !9379)
!9381 = !DILocation(line: 0, scope: !8223, inlinedAt: !9379)
!9382 = !DILocation(line: 0, scope: !9372)
!9383 = !DILocation(line: 4104, column: 1, scope: !8215, inlinedAt: !9379)
!9384 = !DILocation(line: 4493, column: 20, scope: !9372)
!9385 = !DILocation(line: 4497, column: 9, scope: !9372)
!9386 = !DILocation(line: 4490, column: 53, scope: !9373)
!9387 = !DILocation(line: 4490, column: 9, scope: !9373)
!9388 = !DILocation(line: 4490, column: 27, scope: !9373)
!9389 = distinct !{!9389, !9318, !9390}
!9390 = !DILocation(line: 4497, column: 9, scope: !8582)
!9391 = !DILocation(line: 4506, column: 17, scope: !8585)
!9392 = !DILocation(line: 4506, column: 58, scope: !8585)
!9393 = !DILocation(line: 4506, column: 16, scope: !8564)
!9394 = !DILocation(line: 4507, column: 22, scope: !8584)
!9395 = !DILocation(line: 4507, column: 13, scope: !8584)
!9396 = !DILocation(line: 4509, column: 20, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 4509, column: 13)
!9398 = !DILocation(line: 4509, column: 13, scope: !8584)
!9399 = !DILocation(line: 4510, column: 31, scope: !9397)
!9400 = !DILocation(line: 4510, column: 13, scope: !9397)
!9401 = !DILocation(line: 4513, column: 26, scope: !9397)
!9402 = !DILocation(line: 4513, column: 17, scope: !9397)
!9403 = !DILocation(line: 4512, column: 13, scope: !9397)
!9404 = !DILocation(line: 4514, column: 5, scope: !8584)
!9405 = !DILocation(line: 4514, column: 17, scope: !8588)
!9406 = !DILocation(line: 4514, column: 55, scope: !8588)
!9407 = !DILocation(line: 4514, column: 66, scope: !8588)
!9408 = !DILocation(line: 4514, column: 16, scope: !8585)
!9409 = !DILocation(line: 4516, column: 19, scope: !8587)
!9410 = !DILocation(line: 4516, column: 31, scope: !8587)
!9411 = !DILocation(line: 4516, column: 13, scope: !8587)
!9412 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !9413)
!9413 = distinct !DILocation(line: 4518, column: 44, scope: !8587)
!9414 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !9413)
!9415 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !9413)
!9416 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !9413)
!9417 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !9413)
!9418 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !9413)
!9419 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !9413)
!9420 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !9413)
!9421 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !9413)
!9422 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !9413)
!9423 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !9413)
!9424 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !9413)
!9425 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !9413)
!9426 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !9413)
!9427 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !9413)
!9428 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !9413)
!9429 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !9413)
!9430 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !9413)
!9431 = !DILocation(line: 0, scope: !1496, inlinedAt: !9413)
!9432 = !DILocation(line: 0, scope: !8587)
!9433 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !9413)
!9434 = !DILocation(line: 4518, column: 44, scope: !8587)
!9435 = !DILocation(line: 4518, column: 28, scope: !8587)
!9436 = !DILocation(line: 4518, column: 9, scope: !8587)
!9437 = !DILocation(line: 4519, column: 5, scope: !8587)
!9438 = !DILocation(line: 4519, column: 17, scope: !8591)
!9439 = !DILocation(line: 4519, column: 63, scope: !8591)
!9440 = !DILocation(line: 4519, column: 74, scope: !8591)
!9441 = !DILocation(line: 4519, column: 16, scope: !8588)
!9442 = !DILocation(line: 4521, column: 9, scope: !8590)
!9443 = !DILocation(line: 4523, column: 44, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 4523, column: 13)
!9445 = !DILocation(line: 4521, column: 19, scope: !8590)
!9446 = !DILocation(line: 4523, column: 13, scope: !9444)
!9447 = !DILocation(line: 4523, column: 67, scope: !9444)
!9448 = !DILocation(line: 4523, column: 13, scope: !8590)
!9449 = !DILocation(line: 4525, column: 13, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 4525, column: 13)
!9451 = !DILocation(line: 4525, column: 22, scope: !9450)
!9452 = !DILocation(line: 4526, column: 13, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 4525, column: 48)
!9454 = !DILocation(line: 4527, column: 13, scope: !9453)
!9455 = !DILocation(line: 4529, column: 44, scope: !8590)
!9456 = !DILocation(line: 4529, column: 28, scope: !8590)
!9457 = !DILocation(line: 4529, column: 9, scope: !8590)
!9458 = !DILocation(line: 4530, column: 5, scope: !8591)
!9459 = !DILocation(line: 0, scope: !9444)
!9460 = !DILocation(line: 4530, column: 17, scope: !8594)
!9461 = !DILocation(line: 4530, column: 61, scope: !8594)
!9462 = !DILocation(line: 4530, column: 72, scope: !8594)
!9463 = !DILocation(line: 4530, column: 16, scope: !8591)
!9464 = !DILocation(line: 4532, column: 9, scope: !8593)
!9465 = !DILocation(line: 4536, column: 44, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 4536, column: 13)
!9467 = !DILocation(line: 4532, column: 28, scope: !8593)
!9468 = !DILocation(line: 4536, column: 13, scope: !9466)
!9469 = !DILocation(line: 4536, column: 67, scope: !9466)
!9470 = !DILocation(line: 4536, column: 13, scope: !8593)
!9471 = !DILocation(line: 4538, column: 47, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 4538, column: 13)
!9473 = !DILocation(line: 4538, column: 44, scope: !9472)
!9474 = !DILocation(line: 4532, column: 19, scope: !8593)
!9475 = !DILocation(line: 4538, column: 13, scope: !9472)
!9476 = !DILocation(line: 4539, column: 13, scope: !9472)
!9477 = !DILocation(line: 4538, column: 13, scope: !8593)
!9478 = !DILocation(line: 4541, column: 13, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 4541, column: 13)
!9480 = !DILocation(line: 4541, column: 22, scope: !9479)
!9481 = !DILocation(line: 4541, column: 50, scope: !9479)
!9482 = !DILocation(line: 4541, column: 58, scope: !9479)
!9483 = !DILocation(line: 4542, column: 13, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9479, file: !3, line: 4541, column: 63)
!9485 = !DILocation(line: 4543, column: 13, scope: !9484)
!9486 = !DILocation(line: 4548, column: 53, scope: !8593)
!9487 = !DILocation(line: 4548, column: 37, scope: !8593)
!9488 = !DILocation(line: 4548, column: 22, scope: !8593)
!9489 = !DILocation(line: 4549, column: 13, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 4549, column: 13)
!9491 = !DILocation(line: 4549, column: 23, scope: !9490)
!9492 = !DILocation(line: 4549, column: 21, scope: !9490)
!9493 = !DILocation(line: 4549, column: 13, scope: !8593)
!9494 = !DILocation(line: 4549, column: 45, scope: !9490)
!9495 = !DILocation(line: 4549, column: 37, scope: !9490)
!9496 = !DILocation(line: 4551, column: 38, scope: !8593)
!9497 = !DILocation(line: 4551, column: 37, scope: !8593)
!9498 = !DILocation(line: 4551, column: 16, scope: !8593)
!9499 = !DILocation(line: 4534, column: 16, scope: !8593)
!9500 = !DILocation(line: 4552, column: 33, scope: !8593)
!9501 = !DILocation(line: 4552, column: 45, scope: !8593)
!9502 = !DILocation(line: 4552, column: 19, scope: !8593)
!9503 = !DILocation(line: 4533, column: 22, scope: !8593)
!9504 = !DILocation(line: 4553, column: 32, scope: !8593)
!9505 = !DILocation(line: 4553, column: 9, scope: !8593)
!9506 = !DILocation(line: 4533, column: 31, scope: !8593)
!9507 = !DILocation(line: 4554, column: 14, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 4554, column: 9)
!9509 = !DILocation(line: 4554, column: 23, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 4554, column: 9)
!9511 = !DILocation(line: 4554, column: 9, scope: !9508)
!9512 = !DILocation(line: 4555, column: 28, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 4554, column: 39)
!9514 = !DILocation(line: 4555, column: 13, scope: !9513)
!9515 = !DILocation(line: 4556, column: 26, scope: !9513)
!9516 = !DILocation(line: 4556, column: 13, scope: !9513)
!9517 = !DILocation(line: 4554, column: 35, scope: !9510)
!9518 = !DILocation(line: 4554, column: 9, scope: !9510)
!9519 = distinct !{!9519, !9511, !9520}
!9520 = !DILocation(line: 4557, column: 9, scope: !9508)
!9521 = !DILocation(line: 4558, column: 9, scope: !8593)
!9522 = !DILocation(line: 4559, column: 5, scope: !8594)
!9523 = !DILocation(line: 0, scope: !9466)
!9524 = !DILocation(line: 4559, column: 17, scope: !8602)
!9525 = !DILocation(line: 4559, column: 54, scope: !8602)
!9526 = !DILocation(line: 4559, column: 65, scope: !8602)
!9527 = !DILocation(line: 4559, column: 16, scope: !8594)
!9528 = !DILocation(line: 4561, column: 44, scope: !8601)
!9529 = !DILocation(line: 4561, column: 56, scope: !8601)
!9530 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !9531)
!9531 = distinct !DILocation(line: 4561, column: 26, scope: !8601)
!9532 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !9531)
!9533 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !9531)
!9534 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !9531)
!9535 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !9531)
!9536 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !9531)
!9537 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !9531)
!9538 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !9531)
!9539 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !9531)
!9540 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !9531)
!9541 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !9531)
!9542 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !9531)
!9543 = !DILocation(line: 4561, column: 22, scope: !8601)
!9544 = !DILocation(line: 4563, column: 13, scope: !8601)
!9545 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !9531)
!9546 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !9531)
!9547 = !DILocation(line: 4563, column: 14, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4563, column: 13)
!9549 = !DILocation(line: 4564, column: 64, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 4563, column: 17)
!9551 = !DILocation(line: 4564, column: 61, scope: !9550)
!9552 = !DILocation(line: 4564, column: 73, scope: !9550)
!9553 = !DILocation(line: 4564, column: 13, scope: !9550)
!9554 = !DILocation(line: 4565, column: 13, scope: !9550)
!9555 = !DILocation(line: 4566, column: 25, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 4566, column: 20)
!9557 = !DILocation(line: 4566, column: 22, scope: !9556)
!9558 = !DILocation(line: 4566, column: 20, scope: !9548)
!9559 = !DILocation(line: 4567, column: 13, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 4566, column: 33)
!9561 = !DILocation(line: 4568, column: 13, scope: !9560)
!9562 = !DILocation(line: 4569, column: 20, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 4569, column: 20)
!9564 = !DILocation(line: 4569, column: 40, scope: !9563)
!9565 = !DILocation(line: 4569, column: 51, scope: !9563)
!9566 = !DILocation(line: 4569, column: 59, scope: !9563)
!9567 = !DILocation(line: 4569, column: 20, scope: !9556)
!9568 = !DILocation(line: 4570, column: 13, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9563, file: !3, line: 4569, column: 65)
!9570 = !DILocation(line: 4571, column: 13, scope: !9569)
!9571 = !DILocation(line: 4573, column: 9, scope: !8601)
!9572 = !DILocation(line: 4574, column: 9, scope: !8601)
!9573 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9574)
!9574 = distinct !DILocation(line: 4575, column: 9, scope: !8601)
!9575 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !9574)
!9576 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9574)
!9577 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9574)
!9578 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9574)
!9579 = !DILocation(line: 4577, column: 27, scope: !8601)
!9580 = !DILocation(line: 4577, column: 9, scope: !8601)
!9581 = !DILocation(line: 4578, column: 5, scope: !8602)
!9582 = !DILocation(line: 0, scope: !9550)
!9583 = !DILocation(line: 4578, column: 17, scope: !8605)
!9584 = !DILocation(line: 4578, column: 57, scope: !8605)
!9585 = !DILocation(line: 4578, column: 68, scope: !8605)
!9586 = !DILocation(line: 4578, column: 16, scope: !8602)
!9587 = !DILocation(line: 4580, column: 44, scope: !8604)
!9588 = !DILocation(line: 4580, column: 56, scope: !8604)
!9589 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !9590)
!9590 = distinct !DILocation(line: 4580, column: 26, scope: !8604)
!9591 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !9590)
!9592 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !9590)
!9593 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !9590)
!9594 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !9590)
!9595 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !9590)
!9596 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !9590)
!9597 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !9590)
!9598 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !9590)
!9599 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !9590)
!9600 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !9590)
!9601 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !9590)
!9602 = !DILocation(line: 4580, column: 22, scope: !8604)
!9603 = !DILocation(line: 4583, column: 13, scope: !8604)
!9604 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !9590)
!9605 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !9590)
!9606 = !DILocation(line: 4583, column: 14, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 4583, column: 13)
!9608 = !DILocation(line: 4584, column: 64, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 4583, column: 17)
!9610 = !DILocation(line: 4584, column: 61, scope: !9609)
!9611 = !DILocation(line: 4584, column: 73, scope: !9609)
!9612 = !DILocation(line: 4584, column: 13, scope: !9609)
!9613 = !DILocation(line: 4585, column: 13, scope: !9609)
!9614 = !DILocation(line: 4589, column: 18, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 4589, column: 13)
!9616 = !DILocation(line: 4589, column: 15, scope: !9615)
!9617 = !DILocation(line: 4589, column: 13, scope: !8604)
!9618 = !DILocation(line: 4590, column: 13, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9615, file: !3, line: 4589, column: 26)
!9620 = !DILocation(line: 4591, column: 13, scope: !9619)
!9621 = !DILocation(line: 4595, column: 13, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 4595, column: 13)
!9623 = !DILocation(line: 4595, column: 13, scope: !8604)
!9624 = !DILocation(line: 4596, column: 13, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 4595, column: 29)
!9626 = !DILocation(line: 4597, column: 13, scope: !9625)
!9627 = !DILocation(line: 4603, column: 13, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 4603, column: 13)
!9629 = !DILocation(line: 4603, column: 34, scope: !9628)
!9630 = !DILocation(line: 4604, column: 22, scope: !9628)
!9631 = !DILocation(line: 4604, column: 31, scope: !9628)
!9632 = !DILocation(line: 4604, column: 36, scope: !9628)
!9633 = !DILocation(line: 4604, column: 39, scope: !9628)
!9634 = !DILocation(line: 4604, column: 67, scope: !9628)
!9635 = !DILocation(line: 4603, column: 13, scope: !8604)
!9636 = !DILocation(line: 4605, column: 13, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 4604, column: 74)
!9638 = !DILocation(line: 4608, column: 13, scope: !9637)
!9639 = !DILocation(line: 4612, column: 9, scope: !8604)
!9640 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9641)
!9641 = distinct !DILocation(line: 4613, column: 9, scope: !8604)
!9642 = !DILocation(line: 3618, column: 12, scope: !1737, inlinedAt: !9641)
!9643 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9641)
!9644 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9641)
!9645 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9641)
!9646 = !DILocation(line: 4614, column: 27, scope: !8604)
!9647 = !DILocation(line: 4614, column: 9, scope: !8604)
!9648 = !DILocation(line: 4615, column: 5, scope: !8605)
!9649 = !DILocation(line: 0, scope: !9609)
!9650 = !DILocation(line: 4615, column: 18, scope: !8608)
!9651 = !DILocation(line: 4615, column: 55, scope: !8608)
!9652 = !DILocation(line: 4616, column: 18, scope: !8608)
!9653 = !DILocation(line: 4616, column: 58, scope: !8608)
!9654 = !DILocation(line: 4616, column: 69, scope: !8608)
!9655 = !DILocation(line: 4615, column: 16, scope: !8605)
!9656 = !DILocation(line: 4618, column: 44, scope: !8607)
!9657 = !DILocation(line: 4618, column: 56, scope: !8607)
!9658 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !9659)
!9659 = distinct !DILocation(line: 4618, column: 26, scope: !8607)
!9660 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !9659)
!9661 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !9659)
!9662 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !9659)
!9663 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !9659)
!9664 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !9659)
!9665 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !9659)
!9666 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !9659)
!9667 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !9659)
!9668 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !9659)
!9669 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !9659)
!9670 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !9659)
!9671 = !DILocation(line: 4618, column: 22, scope: !8607)
!9672 = !DILocation(line: 4622, column: 13, scope: !8607)
!9673 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !9659)
!9674 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !9659)
!9675 = !DILocation(line: 4622, column: 14, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 4622, column: 13)
!9677 = !DILocation(line: 4623, column: 64, scope: !9678)
!9678 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 4622, column: 17)
!9679 = !DILocation(line: 4623, column: 61, scope: !9678)
!9680 = !DILocation(line: 4623, column: 73, scope: !9678)
!9681 = !DILocation(line: 4623, column: 13, scope: !9678)
!9682 = !DILocation(line: 4624, column: 13, scope: !9678)
!9683 = !DILocation(line: 4627, column: 13, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 4627, column: 13)
!9685 = !DILocation(line: 4627, column: 13, scope: !8607)
!9686 = !DILocation(line: 4628, column: 13, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 4627, column: 29)
!9688 = !DILocation(line: 4629, column: 13, scope: !9687)
!9689 = !DILocation(line: 4632, column: 35, scope: !8607)
!9690 = !DILocation(line: 4632, column: 32, scope: !8607)
!9691 = !DILocation(line: 4632, column: 9, scope: !8607)
!9692 = !DILocation(line: 4619, column: 13, scope: !8607)
!9693 = !DILocation(line: 4633, column: 14, scope: !8613)
!9694 = !DILocation(line: 4633, column: 28, scope: !8612)
!9695 = !DILocation(line: 4633, column: 23, scope: !8612)
!9696 = !DILocation(line: 4633, column: 9, scope: !8613)
!9697 = !DILocation(line: 4634, column: 51, scope: !8611)
!9698 = !DILocation(line: 4634, column: 48, scope: !8611)
!9699 = !DILocation(line: 4634, column: 22, scope: !8611)
!9700 = !DILocation(line: 4634, column: 17, scope: !8611)
!9701 = !DILocation(line: 4635, column: 13, scope: !8611)
!9702 = !DILocation(line: 4636, column: 13, scope: !8611)
!9703 = !DILocation(line: 4633, column: 40, scope: !8612)
!9704 = !DILocation(line: 4633, column: 9, scope: !8612)
!9705 = distinct !{!9705, !9696, !9706}
!9706 = !DILocation(line: 4637, column: 9, scope: !8613)
!9707 = !DILocation(line: 0, scope: !9678)
!9708 = !DILocation(line: 4638, column: 17, scope: !8616)
!9709 = !DILocation(line: 4638, column: 69, scope: !8616)
!9710 = !DILocation(line: 4639, column: 24, scope: !8616)
!9711 = !DILocation(line: 4638, column: 16, scope: !8608)
!9712 = !DILocation(line: 4642, column: 44, scope: !8615)
!9713 = !DILocation(line: 4642, column: 56, scope: !8615)
!9714 = !DILocation(line: 936, column: 44, scope: !825, inlinedAt: !9715)
!9715 = distinct !DILocation(line: 4642, column: 26, scope: !8615)
!9716 = !DILocation(line: 937, column: 13, scope: !825, inlinedAt: !9715)
!9717 = !DILocation(line: 937, column: 9, scope: !825, inlinedAt: !9715)
!9718 = !DILocation(line: 940, column: 26, scope: !825, inlinedAt: !9715)
!9719 = !DILocation(line: 940, column: 35, scope: !825, inlinedAt: !9715)
!9720 = !DILocation(line: 940, column: 10, scope: !825, inlinedAt: !9715)
!9721 = !DILocation(line: 938, column: 16, scope: !825, inlinedAt: !9715)
!9722 = !DILocation(line: 941, column: 5, scope: !825, inlinedAt: !9715)
!9723 = !DILocation(line: 942, column: 12, scope: !842, inlinedAt: !9715)
!9724 = !DILocation(line: 942, column: 9, scope: !825, inlinedAt: !9715)
!9725 = !DILocation(line: 942, column: 21, scope: !842, inlinedAt: !9715)
!9726 = !DILocation(line: 944, column: 1, scope: !825, inlinedAt: !9715)
!9727 = !DILocation(line: 4642, column: 22, scope: !8615)
!9728 = !DILocation(line: 4644, column: 13, scope: !8615)
!9729 = !DILocation(line: 943, column: 12, scope: !825, inlinedAt: !9715)
!9730 = !DILocation(line: 943, column: 5, scope: !825, inlinedAt: !9715)
!9731 = !DILocation(line: 4644, column: 14, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 4644, column: 13)
!9733 = !DILocation(line: 4645, column: 64, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 4644, column: 17)
!9735 = !DILocation(line: 4645, column: 61, scope: !9734)
!9736 = !DILocation(line: 4645, column: 73, scope: !9734)
!9737 = !DILocation(line: 4645, column: 13, scope: !9734)
!9738 = !DILocation(line: 4646, column: 13, scope: !9734)
!9739 = !DILocation(line: 815, column: 49, scope: !2988, inlinedAt: !9740)
!9740 = distinct !DILocation(line: 4648, column: 32, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 4647, column: 16)
!9742 = !DILocation(line: 816, column: 5, scope: !2988, inlinedAt: !9740)
!9743 = !DILocation(line: 817, column: 12, scope: !2988, inlinedAt: !9740)
!9744 = !DILocation(line: 817, column: 5, scope: !2988, inlinedAt: !9740)
!9745 = !DILocation(line: 4648, column: 32, scope: !9741)
!9746 = !DILocation(line: 4648, column: 13, scope: !9741)
!9747 = !DILocation(line: 4650, column: 5, scope: !8616)
!9748 = !DILocation(line: 0, scope: !9734)
!9749 = !DILocation(line: 4650, column: 17, scope: !8619)
!9750 = !DILocation(line: 4650, column: 56, scope: !8619)
!9751 = !DILocation(line: 4651, column: 30, scope: !8619)
!9752 = !DILocation(line: 4651, column: 41, scope: !8619)
!9753 = !DILocation(line: 4650, column: 16, scope: !8616)
!9754 = !DILocation(line: 4654, column: 13, scope: !8618)
!9755 = !DILocation(line: 4654, column: 24, scope: !8618)
!9756 = !DILocation(line: 4656, column: 13, scope: !8618)
!9757 = !DILocation(line: 4657, column: 29, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !3, line: 4657, column: 17)
!9759 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 4656, column: 27)
!9760 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 4656, column: 13)
!9761 = !DILocation(line: 4657, column: 41, scope: !9758)
!9762 = !DILocation(line: 4657, column: 18, scope: !9758)
!9763 = !DILocation(line: 4657, column: 17, scope: !9759)
!9764 = !DILocation(line: 4659, column: 25, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 4659, column: 24)
!9766 = !DILocation(line: 4659, column: 24, scope: !9758)
!9767 = !DILocation(line: 4663, column: 35, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 4662, column: 20)
!9769 = !{!8717, !761, i64 128}
!9770 = !DILocation(line: 4663, column: 17, scope: !9768)
!9771 = !DILocation(line: 4664, column: 17, scope: !9768)
!9772 = !DILocation(line: 0, scope: !8618)
!9773 = !DILocation(line: 4669, column: 13, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 4669, column: 13)
!9775 = !DILocation(line: 4669, column: 13, scope: !8618)
!9776 = !DILocation(line: 4670, column: 13, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 4669, column: 35)
!9778 = !DILocation(line: 4671, column: 13, scope: !9777)
!9779 = !DILocation(line: 4672, column: 28, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 4672, column: 20)
!9781 = !DILocation(line: 4672, column: 36, scope: !9780)
!9782 = !DILocation(line: 4672, column: 20, scope: !9774)
!9783 = !DILocation(line: 4673, column: 13, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 4672, column: 45)
!9785 = !DILocation(line: 4674, column: 13, scope: !9784)
!9786 = !DILocation(line: 4675, column: 21, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 4675, column: 20)
!9788 = !DILocation(line: 4675, column: 27, scope: !9787)
!9789 = !DILocation(line: 4676, column: 21, scope: !9787)
!9790 = !DILocation(line: 4676, column: 49, scope: !9787)
!9791 = !DILocation(line: 4677, column: 38, scope: !9787)
!9792 = !DILocation(line: 4677, column: 43, scope: !9787)
!9793 = !DILocation(line: 4675, column: 20, scope: !9780)
!9794 = !DILocation(line: 4679, column: 13, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 4678, column: 9)
!9796 = !DILocation(line: 4681, column: 13, scope: !9795)
!9797 = !DILocation(line: 3265, column: 16, scope: !1983, inlinedAt: !9798)
!9798 = distinct !DILocation(line: 4683, column: 9, scope: !8618)
!9799 = !DILocation(line: 3265, column: 25, scope: !1983, inlinedAt: !9798)
!9800 = !DILocation(line: 3265, column: 9, scope: !1983, inlinedAt: !9798)
!9801 = !DILocation(line: 3265, column: 32, scope: !1983, inlinedAt: !9798)
!9802 = !DILocation(line: 3265, column: 35, scope: !1983, inlinedAt: !9798)
!9803 = !DILocation(line: 3265, column: 9, scope: !1984, inlinedAt: !9798)
!9804 = !DILocation(line: 3266, column: 39, scope: !2175, inlinedAt: !9798)
!9805 = !DILocation(line: 3267, column: 9, scope: !2175, inlinedAt: !9798)
!9806 = !DILocation(line: 3268, column: 5, scope: !2175, inlinedAt: !9798)
!9807 = !DILocation(line: 3269, column: 12, scope: !1984, inlinedAt: !9798)
!9808 = !DILocation(line: 3269, column: 21, scope: !1984, inlinedAt: !9798)
!9809 = !DILocation(line: 3269, column: 28, scope: !1984, inlinedAt: !9798)
!9810 = !DILocation(line: 3270, column: 21, scope: !1984, inlinedAt: !9798)
!9811 = !DILocation(line: 3270, column: 34, scope: !1984, inlinedAt: !9798)
!9812 = !DILocation(line: 3271, column: 21, scope: !1984, inlinedAt: !9798)
!9813 = !DILocation(line: 3271, column: 30, scope: !1984, inlinedAt: !9798)
!9814 = !DILocation(line: 3272, column: 21, scope: !1984, inlinedAt: !9798)
!9815 = !DILocation(line: 3272, column: 38, scope: !1984, inlinedAt: !9798)
!9816 = !DILocation(line: 3273, column: 1, scope: !1984, inlinedAt: !9798)
!9817 = !DILocation(line: 4684, column: 34, scope: !8618)
!9818 = !DILocation(line: 4684, column: 43, scope: !8618)
!9819 = !DILocation(line: 4684, column: 16, scope: !8618)
!9820 = !DILocation(line: 4684, column: 25, scope: !8618)
!9821 = !DILocation(line: 4684, column: 32, scope: !8618)
!9822 = !DILocation(line: 4686, column: 13, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 4686, column: 13)
!9824 = !DILocation(line: 4686, column: 13, scope: !8618)
!9825 = !DILocation(line: 4691, column: 13, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 4686, column: 23)
!9827 = !DILocation(line: 1014, column: 25, scope: !3162, inlinedAt: !9828)
!9828 = distinct !DILocation(line: 4692, column: 13, scope: !9826)
!9829 = !DILocation(line: 1014, column: 14, scope: !3162, inlinedAt: !9828)
!9830 = !DILocation(line: 1016, column: 9, scope: !3170, inlinedAt: !9828)
!9831 = !DILocation(line: 1016, column: 17, scope: !3170, inlinedAt: !9828)
!9832 = !DILocation(line: 1016, column: 29, scope: !3170, inlinedAt: !9828)
!9833 = !DILocation(line: 1016, column: 34, scope: !3170, inlinedAt: !9828)
!9834 = !DILocation(line: 1017, column: 29, scope: !3170, inlinedAt: !9828)
!9835 = !DILocation(line: 1016, column: 9, scope: !3162, inlinedAt: !9828)
!9836 = !DILocation(line: 1019, column: 16, scope: !3177, inlinedAt: !9828)
!9837 = !DILocation(line: 1019, column: 25, scope: !3177, inlinedAt: !9828)
!9838 = !DILocation(line: 1019, column: 37, scope: !3177, inlinedAt: !9828)
!9839 = !DILocation(line: 1020, column: 29, scope: !3177, inlinedAt: !9828)
!9840 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9841)
!9841 = distinct !DILocation(line: 1021, column: 9, scope: !3177, inlinedAt: !9828)
!9842 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9841)
!9843 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9841)
!9844 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9841)
!9845 = !DILocation(line: 1023, column: 9, scope: !3177, inlinedAt: !9828)
!9846 = !DILocation(line: 1026, column: 9, scope: !3177, inlinedAt: !9828)
!9847 = !DILocation(line: 0, scope: !9826)
!9848 = !DILocation(line: 1030, column: 1, scope: !3162, inlinedAt: !9828)
!9849 = !DILocation(line: 4693, column: 13, scope: !9826)
!9850 = !DILocation(line: 4694, column: 9, scope: !9826)
!9851 = !DILocation(line: 4694, column: 20, scope: !9823)
!9852 = !DILocation(line: 4698, column: 13, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 4694, column: 27)
!9854 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 4694, column: 20)
!9855 = !DILocation(line: 4699, column: 20, scope: !9853)
!9856 = !DILocation(line: 4699, column: 29, scope: !9853)
!9857 = !DILocation(line: 4699, column: 42, scope: !9853)
!9858 = !DILocation(line: 4700, column: 9, scope: !9853)
!9859 = !DILocation(line: 4701, column: 13, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 4700, column: 16)
!9861 = !DILocation(line: 4702, column: 32, scope: !9860)
!9862 = !DILocation(line: 4702, column: 40, scope: !9860)
!9863 = !DILocation(line: 2694, column: 38, scope: !6565, inlinedAt: !9864)
!9864 = distinct !DILocation(line: 4702, column: 13, scope: !9860)
!9865 = !DILocation(line: 2695, column: 5, scope: !6565, inlinedAt: !9864)
!9866 = !DILocation(line: 2696, column: 17, scope: !6565, inlinedAt: !9864)
!9867 = !DILocation(line: 2699, column: 16, scope: !6575, inlinedAt: !9864)
!9868 = !DILocation(line: 2699, column: 10, scope: !6575, inlinedAt: !9864)
!9869 = !DILocation(line: 2699, column: 9, scope: !6565, inlinedAt: !9864)
!9870 = !DILocation(line: 2695, column: 19, scope: !6565, inlinedAt: !9864)
!9871 = !DILocation(line: 2700, column: 5, scope: !6565, inlinedAt: !9864)
!9872 = !DILocation(line: 2697, column: 14, scope: !6565, inlinedAt: !9864)
!9873 = !DILocation(line: 2702, column: 19, scope: !6565, inlinedAt: !9864)
!9874 = !DILocation(line: 2702, column: 10, scope: !6565, inlinedAt: !9864)
!9875 = !DILocation(line: 2702, column: 17, scope: !6565, inlinedAt: !9864)
!9876 = !DILocation(line: 2703, column: 30, scope: !6565, inlinedAt: !9864)
!9877 = !DILocation(line: 2703, column: 5, scope: !6565, inlinedAt: !9864)
!9878 = !DILocation(line: 2704, column: 1, scope: !6565, inlinedAt: !9864)
!9879 = !DILocation(line: 0, scope: !9860)
!9880 = !DILocation(line: 4704, column: 27, scope: !8618)
!9881 = !DILocation(line: 4704, column: 9, scope: !8618)
!9882 = !DILocation(line: 4705, column: 5, scope: !8619)
!9883 = !DILocation(line: 0, scope: !9768)
!9884 = !DILocation(line: 4705, column: 17, scope: !8623)
!9885 = !DILocation(line: 4705, column: 64, scope: !8623)
!9886 = !DILocation(line: 4705, column: 75, scope: !8623)
!9887 = !DILocation(line: 4705, column: 16, scope: !8619)
!9888 = !DILocation(line: 4714, column: 9, scope: !8622)
!9889 = !DILocation(line: 4716, column: 44, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 4716, column: 13)
!9891 = !DILocation(line: 4714, column: 19, scope: !8622)
!9892 = !DILocation(line: 4716, column: 13, scope: !9890)
!9893 = !DILocation(line: 4716, column: 68, scope: !9890)
!9894 = !DILocation(line: 4716, column: 13, scope: !8622)
!9895 = !DILocation(line: 4719, column: 13, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 4719, column: 13)
!9897 = !DILocation(line: 4719, column: 19, scope: !9896)
!9898 = !DILocation(line: 4719, column: 13, scope: !8622)
!9899 = !DILocation(line: 4720, column: 13, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 4719, column: 24)
!9901 = !DILocation(line: 4721, column: 9, scope: !9900)
!9902 = !DILocation(line: 4721, column: 20, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 4721, column: 20)
!9904 = !DILocation(line: 4721, column: 52, scope: !9903)
!9905 = !DILocation(line: 4721, column: 20, scope: !9896)
!9906 = !DILocation(line: 4722, column: 13, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 4721, column: 57)
!9908 = !DILocation(line: 4724, column: 9, scope: !9907)
!9909 = !DILocation(line: 4724, column: 20, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 4724, column: 20)
!9911 = !DILocation(line: 4724, column: 28, scope: !9910)
!9912 = !DILocation(line: 4724, column: 40, scope: !9910)
!9913 = !DILocation(line: 4724, column: 20, scope: !9903)
!9914 = !DILocation(line: 4725, column: 13, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 4724, column: 46)
!9916 = !DILocation(line: 4726, column: 9, scope: !9915)
!9917 = !DILocation(line: 4727, column: 33, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 4726, column: 16)
!9919 = !DILocation(line: 4728, column: 13, scope: !9918)
!9920 = !DILocation(line: 4732, column: 24, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 4732, column: 17)
!9922 = !DILocation(line: 4732, column: 33, scope: !9921)
!9923 = !DILocation(line: 4732, column: 58, scope: !9921)
!9924 = !DILocation(line: 4732, column: 46, scope: !9921)
!9925 = !DILocation(line: 4732, column: 17, scope: !9918)
!9926 = !DILocation(line: 4733, column: 46, scope: !9921)
!9927 = !DILocation(line: 4733, column: 17, scope: !9921)
!9928 = !DILocation(line: 3617, column: 31, scope: !1737, inlinedAt: !9929)
!9929 = distinct !DILocation(line: 4737, column: 13, scope: !9918)
!9930 = !DILocation(line: 3618, column: 21, scope: !1737, inlinedAt: !9929)
!9931 = !DILocation(line: 3618, column: 39, scope: !1737, inlinedAt: !9929)
!9932 = !DILocation(line: 3619, column: 1, scope: !1737, inlinedAt: !9929)
!9933 = !DILocation(line: 4739, column: 31, scope: !9918)
!9934 = !DILocation(line: 4739, column: 13, scope: !9918)
!9935 = !DILocation(line: 4741, column: 5, scope: !8623)
!9936 = !DILocation(line: 0, scope: !9890)
!9937 = !DILocation(line: 4741, column: 17, scope: !8626)
!9938 = !DILocation(line: 4741, column: 53, scope: !8626)
!9939 = !DILocation(line: 4742, column: 30, scope: !8626)
!9940 = !DILocation(line: 4742, column: 41, scope: !8626)
!9941 = !DILocation(line: 4741, column: 16, scope: !8623)
!9942 = !DILocation(line: 4745, column: 13, scope: !8625)
!9943 = !DILocation(line: 4748, column: 13, scope: !8625)
!9944 = !DILocation(line: 4749, column: 29, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 4749, column: 17)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 4748, column: 27)
!9947 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 4748, column: 13)
!9948 = !DILocation(line: 4749, column: 41, scope: !9945)
!9949 = !DILocation(line: 4749, column: 18, scope: !9945)
!9950 = !DILocation(line: 4749, column: 17, scope: !9946)
!9951 = !DILocation(line: 4751, column: 25, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 4751, column: 24)
!9953 = !DILocation(line: 4751, column: 24, scope: !9945)
!9954 = !DILocation(line: 4754, column: 35, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 4753, column: 20)
!9956 = !DILocation(line: 4754, column: 17, scope: !9955)
!9957 = !DILocation(line: 4755, column: 17, scope: !9955)
!9958 = !DILocation(line: 0, scope: !8625)
!9959 = !DILocation(line: 4761, column: 13, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 4761, column: 13)
!9961 = !DILocation(line: 4761, column: 34, scope: !9960)
!9962 = !DILocation(line: 4761, column: 37, scope: !9960)
!9963 = !{!8638, !761, i64 16}
!9964 = !DILocation(line: 4761, column: 59, scope: !9960)
!9965 = !DILocation(line: 4761, column: 13, scope: !8625)
!9966 = !DILocation(line: 4762, column: 13, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 4761, column: 65)
!9968 = !DILocation(line: 4764, column: 13, scope: !9967)
!9969 = !DILocation(line: 4766, column: 9, scope: !8625)
!9970 = !DILocation(line: 4767, column: 27, scope: !8625)
!9971 = !DILocation(line: 4767, column: 9, scope: !8625)
!9972 = !DILocation(line: 4768, column: 5, scope: !8626)
!9973 = !DILocation(line: 0, scope: !9955)
!9974 = !DILocation(line: 4769, column: 9, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 4768, column: 12)
!9976 = !DILocation(line: 4770, column: 9, scope: !9975)
!9977 = !DILocation(line: 4772, column: 1, scope: !8516)
!9978 = distinct !DISubprogram(name: "createDumpPayload", scope: !3, file: !3, line: 4780, type: !9979, isLocal: false, isDefinition: true, scopeLine: 4780, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10032)
!9979 = !DISubroutineType(types: !9980)
!9980 = !{null, !9981, !4388, !4388}
!9981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9982, size: 64)
!9982 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio", file: !9983, line: 87, baseType: !9984)
!9983 = !DIFile(filename: "/root/.unikraft/apps/redis/build/libredis/origin/redis-5.0.6/src/rio.h", directory: "/root/.unikraft/apps/redis/build")
!9984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rio", file: !9983, line: 39, size: 832, elements: !9985)
!9985 = !{!9986, !9991, !9995, !9999, !10003, !10007, !10008, !10009, !10010}
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9984, file: !9983, line: 43, baseType: !9987, size: 64)
!9987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9988, size: 64)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!1486, !9990, !6, !1486}
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9984, size: 64)
!9991 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9984, file: !9983, line: 44, baseType: !9992, size: 64, offset: 64)
!9992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9993, size: 64)
!9993 = !DISubroutineType(types: !9994)
!9994 = !{!1486, !9990, !316, !1486}
!9995 = !DIDerivedType(tag: DW_TAG_member, name: "tell", scope: !9984, file: !9983, line: 45, baseType: !9996, size: 64, offset: 128)
!9996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9997, size: 64)
!9997 = !DISubroutineType(types: !9998)
!9998 = !{!8, !9990}
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !9984, file: !9983, line: 46, baseType: !10000, size: 64, offset: 192)
!10000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10001, size: 64)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!177, !9990}
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "update_cksum", scope: !9984, file: !9983, line: 52, baseType: !10004, size: 64, offset: 256)
!10004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10005, size: 64)
!10005 = !DISubroutineType(types: !10006)
!10006 = !{null, !9990, !316, !1486}
!10007 = !DIDerivedType(tag: DW_TAG_member, name: "cksum", scope: !9984, file: !9983, line: 55, baseType: !104, size: 64, offset: 320)
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "processed_bytes", scope: !9984, file: !9983, line: 58, baseType: !1486, size: 64, offset: 384)
!10009 = !DIDerivedType(tag: DW_TAG_member, name: "max_processing_chunk", scope: !9984, file: !9983, line: 61, baseType: !1486, size: 64, offset: 448)
!10010 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !9984, file: !9983, line: 84, baseType: !10011, size: 320, offset: 512)
!10011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9984, file: !9983, line: 64, size: 320, elements: !10012)
!10012 = !{!10013, !10018, !10024}
!10013 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10011, file: !9983, line: 69, baseType: !10014, size: 128)
!10014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10011, file: !9983, line: 66, size: 128, elements: !10015)
!10015 = !{!10016, !10017}
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !10014, file: !9983, line: 67, baseType: !189, size: 64)
!10017 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !10014, file: !9983, line: 68, baseType: !8, size: 64, offset: 64)
!10018 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !10011, file: !9983, line: 75, baseType: !10019, size: 192)
!10019 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10011, file: !9983, line: 71, size: 192, elements: !10020)
!10020 = !{!10021, !10022, !10023}
!10021 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !10019, file: !9983, line: 72, baseType: !442, size: 64)
!10022 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !10019, file: !9983, line: 73, baseType: !8, size: 64, offset: 64)
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "autosync", scope: !10019, file: !9983, line: 74, baseType: !8, size: 64, offset: 128)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "fdset", scope: !10011, file: !9983, line: 83, baseType: !10025, size: 320)
!10025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10011, file: !9983, line: 77, size: 320, elements: !10026)
!10026 = !{!10027, !10028, !10029, !10030, !10031}
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "fds", scope: !10025, file: !9983, line: 78, baseType: !8273, size: 64)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10025, file: !9983, line: 79, baseType: !8273, size: 64, offset: 64)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "numfds", scope: !10025, file: !9983, line: 80, baseType: !177, size: 32, offset: 128)
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !10025, file: !9983, line: 81, baseType: !8, size: 64, offset: 192)
!10031 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10025, file: !9983, line: 82, baseType: !189, size: 64, offset: 256)
!10032 = !{!10033, !10034, !10035, !10036, !10038}
!10033 = !DILocalVariable(name: "payload", arg: 1, scope: !9978, file: !3, line: 4780, type: !9981)
!10034 = !DILocalVariable(name: "o", arg: 2, scope: !9978, file: !3, line: 4780, type: !4388)
!10035 = !DILocalVariable(name: "key", arg: 3, scope: !9978, file: !3, line: 4780, type: !4388)
!10036 = !DILocalVariable(name: "buf", scope: !9978, file: !3, line: 4781, type: !10037)
!10037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 16, elements: !360)
!10038 = !DILocalVariable(name: "crc", scope: !9978, file: !3, line: 4782, type: !104)
!10039 = !DILocation(line: 4780, column: 29, scope: !9978)
!10040 = !DILocation(line: 4780, column: 44, scope: !9978)
!10041 = !DILocation(line: 4780, column: 53, scope: !9978)
!10042 = !DILocation(line: 4781, column: 5, scope: !9978)
!10043 = !DILocation(line: 4781, column: 19, scope: !9978)
!10044 = !DILocation(line: 4782, column: 5, scope: !9978)
!10045 = !DILocation(line: 4786, column: 31, scope: !9978)
!10046 = !DILocation(line: 4786, column: 5, scope: !9978)
!10047 = !DILocation(line: 4787, column: 5, scope: !9978)
!10048 = !DILocation(line: 4788, column: 5, scope: !9978)
!10049 = !DILocation(line: 4798, column: 12, scope: !9978)
!10050 = !DILocation(line: 4799, column: 5, scope: !9978)
!10051 = !DILocation(line: 4799, column: 12, scope: !9978)
!10052 = !DILocation(line: 4800, column: 49, scope: !9978)
!10053 = !DILocation(line: 4800, column: 59, scope: !9978)
!10054 = !DILocation(line: 4800, column: 30, scope: !9978)
!10055 = !DILocation(line: 4800, column: 28, scope: !9978)
!10056 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10057)
!10057 = distinct !DILocation(line: 4804, column: 17, scope: !9978)
!10058 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10057)
!10059 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10057)
!10060 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10057)
!10061 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10057)
!10062 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10057)
!10063 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10057)
!10064 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10057)
!10065 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10057)
!10066 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10057)
!10067 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10057)
!10068 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10057)
!10069 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10057)
!10070 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10057)
!10071 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10057)
!10072 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10057)
!10073 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10057)
!10074 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10057)
!10075 = !DILocation(line: 0, scope: !1496, inlinedAt: !10057)
!10076 = !DILocation(line: 0, scope: !9978)
!10077 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10057)
!10078 = !DILocation(line: 4803, column: 11, scope: !9978)
!10079 = !DILocation(line: 4782, column: 14, scope: !9978)
!10080 = !DILocation(line: 4803, column: 9, scope: !9978)
!10081 = !DILocation(line: 4806, column: 59, scope: !9978)
!10082 = !DILocation(line: 4806, column: 30, scope: !9978)
!10083 = !DILocation(line: 4806, column: 28, scope: !9978)
!10084 = !DILocation(line: 4807, column: 1, scope: !9978)
!10085 = distinct !DISubprogram(name: "verifyDumpPayload", scope: !3, file: !3, line: 4813, type: !10086, isLocal: false, isDefinition: true, scopeLine: 4813, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10088)
!10086 = !DISubroutineType(types: !10087)
!10087 = !{!177, !246, !1465}
!10088 = !{!10089, !10090, !10091, !10092, !10093}
!10089 = !DILocalVariable(name: "p", arg: 1, scope: !10085, file: !3, line: 4813, type: !246)
!10090 = !DILocalVariable(name: "len", arg: 2, scope: !10085, file: !3, line: 4813, type: !1465)
!10091 = !DILocalVariable(name: "footer", scope: !10085, file: !3, line: 4814, type: !246)
!10092 = !DILocalVariable(name: "rdbver", scope: !10085, file: !3, line: 4815, type: !33)
!10093 = !DILocalVariable(name: "crc", scope: !10085, file: !3, line: 4816, type: !104)
!10094 = !DILocation(line: 4813, column: 38, scope: !10085)
!10095 = !DILocation(line: 4813, column: 48, scope: !10085)
!10096 = !DILocation(line: 4816, column: 5, scope: !10085)
!10097 = !DILocation(line: 4819, column: 13, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 4819, column: 9)
!10099 = !DILocation(line: 4819, column: 9, scope: !10085)
!10100 = !DILocation(line: 4820, column: 20, scope: !10085)
!10101 = !DILocation(line: 4820, column: 15, scope: !10085)
!10102 = !DILocation(line: 4814, column: 20, scope: !10085)
!10103 = !DILocation(line: 4823, column: 15, scope: !10085)
!10104 = !DILocation(line: 4823, column: 25, scope: !10085)
!10105 = !DILocation(line: 4823, column: 33, scope: !10085)
!10106 = !DILocation(line: 4823, column: 31, scope: !10085)
!10107 = !DILocation(line: 4815, column: 14, scope: !10085)
!10108 = !DILocation(line: 4824, column: 16, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 4824, column: 9)
!10110 = !DILocation(line: 4824, column: 9, scope: !10085)
!10111 = !DILocation(line: 4827, column: 24, scope: !10085)
!10112 = !DILocation(line: 4827, column: 11, scope: !10085)
!10113 = !DILocation(line: 4816, column: 14, scope: !10085)
!10114 = !DILocation(line: 4827, column: 9, scope: !10085)
!10115 = !DILocation(line: 4829, column: 31, scope: !10085)
!10116 = !DILocation(line: 4829, column: 13, scope: !10085)
!10117 = !DILocation(line: 4829, column: 37, scope: !10085)
!10118 = !DILocation(line: 4829, column: 12, scope: !10085)
!10119 = !DILocation(line: 4829, column: 5, scope: !10085)
!10120 = !DILocation(line: 0, scope: !10085)
!10121 = !DILocation(line: 0, scope: !10098)
!10122 = !DILocation(line: 4830, column: 1, scope: !10085)
!10123 = distinct !DISubprogram(name: "dumpCommand", scope: !3, file: !3, line: 4835, type: !8263, isLocal: false, isDefinition: true, scopeLine: 4835, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10124)
!10124 = !{!10125, !10126, !10127, !10128}
!10125 = !DILocalVariable(name: "c", arg: 1, scope: !10123, file: !3, line: 4835, type: !8228)
!10126 = !DILocalVariable(name: "o", scope: !10123, file: !3, line: 4836, type: !4388)
!10127 = !DILocalVariable(name: "dumpobj", scope: !10123, file: !3, line: 4836, type: !4388)
!10128 = !DILocalVariable(name: "payload", scope: !10123, file: !3, line: 4837, type: !9982)
!10129 = !DILocation(line: 4835, column: 26, scope: !10123)
!10130 = !DILocation(line: 4837, column: 5, scope: !10123)
!10131 = !DILocation(line: 4840, column: 31, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 4840, column: 9)
!10133 = !DILocation(line: 4840, column: 37, scope: !10132)
!10134 = !DILocation(line: 4840, column: 34, scope: !10132)
!10135 = !DILocation(line: 4840, column: 14, scope: !10132)
!10136 = !DILocation(line: 4836, column: 11, scope: !10123)
!10137 = !DILocation(line: 4840, column: 47, scope: !10132)
!10138 = !DILocation(line: 4840, column: 9, scope: !10123)
!10139 = !DILocation(line: 4841, column: 27, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 4840, column: 56)
!10141 = !{!8717, !761, i64 80}
!10142 = !DILocation(line: 4841, column: 9, scope: !10140)
!10143 = !DILocation(line: 4842, column: 9, scope: !10140)
!10144 = !DILocation(line: 4846, column: 37, scope: !10123)
!10145 = !DILocation(line: 4846, column: 34, scope: !10123)
!10146 = !DILocation(line: 4837, column: 9, scope: !10123)
!10147 = !DILocation(line: 4846, column: 5, scope: !10123)
!10148 = !DILocation(line: 4849, column: 47, scope: !10123)
!10149 = !DILocation(line: 4849, column: 57, scope: !10123)
!10150 = !DILocation(line: 4849, column: 15, scope: !10123)
!10151 = !DILocation(line: 4836, column: 15, scope: !10123)
!10152 = !DILocation(line: 4850, column: 5, scope: !10123)
!10153 = !DILocation(line: 4851, column: 5, scope: !10123)
!10154 = !DILocation(line: 4852, column: 5, scope: !10123)
!10155 = !DILocation(line: 0, scope: !10140)
!10156 = !DILocation(line: 4853, column: 1, scope: !10123)
!10157 = distinct !DISubprogram(name: "restoreCommand", scope: !3, file: !3, line: 4856, type: !8263, isLocal: false, isDefinition: true, scopeLine: 4856, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10158)
!10158 = !{!10159, !10160, !10161, !10162, !10163, !10164, !10165, !10166, !10167, !10168, !10169, !10170}
!10159 = !DILocalVariable(name: "c", arg: 1, scope: !10157, file: !3, line: 4856, type: !8228)
!10160 = !DILocalVariable(name: "ttl", scope: !10157, file: !3, line: 4857, type: !186)
!10161 = !DILocalVariable(name: "lfu_freq", scope: !10157, file: !3, line: 4857, type: !186)
!10162 = !DILocalVariable(name: "lru_idle", scope: !10157, file: !3, line: 4857, type: !186)
!10163 = !DILocalVariable(name: "lru_clock", scope: !10157, file: !3, line: 4857, type: !186)
!10164 = !DILocalVariable(name: "payload", scope: !10157, file: !3, line: 4858, type: !9982)
!10165 = !DILocalVariable(name: "j", scope: !10157, file: !3, line: 4859, type: !177)
!10166 = !DILocalVariable(name: "type", scope: !10157, file: !3, line: 4859, type: !177)
!10167 = !DILocalVariable(name: "replace", scope: !10157, file: !3, line: 4859, type: !177)
!10168 = !DILocalVariable(name: "absttl", scope: !10157, file: !3, line: 4859, type: !177)
!10169 = !DILocalVariable(name: "obj", scope: !10157, file: !3, line: 4860, type: !4388)
!10170 = !DILocalVariable(name: "additional", scope: !10171, file: !3, line: 4864, type: !177)
!10171 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 4863, column: 35)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 4863, column: 5)
!10173 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4863, column: 5)
!10174 = !DILocation(line: 4856, column: 29, scope: !10157)
!10175 = !DILocation(line: 4857, column: 5, scope: !10157)
!10176 = !DILocation(line: 4857, column: 20, scope: !10157)
!10177 = !DILocation(line: 4857, column: 35, scope: !10157)
!10178 = !DILocation(line: 4857, column: 50, scope: !10157)
!10179 = !DILocation(line: 4858, column: 5, scope: !10157)
!10180 = !DILocation(line: 4859, column: 18, scope: !10157)
!10181 = !DILocation(line: 4859, column: 31, scope: !10157)
!10182 = !DILocation(line: 4859, column: 9, scope: !10157)
!10183 = !DILocation(line: 4863, column: 10, scope: !10173)
!10184 = !DILocation(line: 4863, column: 24, scope: !10172)
!10185 = !DILocation(line: 4863, column: 19, scope: !10172)
!10186 = !DILocation(line: 4863, column: 5, scope: !10173)
!10187 = !DILocation(line: 4897, column: 18, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4897, column: 9)
!10189 = !DILocation(line: 4864, column: 35, scope: !10171)
!10190 = !DILocation(line: 4864, column: 13, scope: !10171)
!10191 = !DILocation(line: 4865, column: 28, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4865, column: 13)
!10193 = !DILocation(line: 4865, column: 25, scope: !10192)
!10194 = !DILocation(line: 4865, column: 37, scope: !10192)
!10195 = !DILocation(line: 4865, column: 14, scope: !10192)
!10196 = !DILocation(line: 4865, column: 13, scope: !10171)
!10197 = !DILocation(line: 4867, column: 21, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 4867, column: 20)
!10199 = !DILocation(line: 4867, column: 20, scope: !10192)
!10200 = !DILocation(line: 4869, column: 21, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 4869, column: 20)
!10202 = !DILocation(line: 4869, column: 74, scope: !10201)
!10203 = !DILocation(line: 4869, column: 60, scope: !10201)
!10204 = !DILocation(line: 4870, column: 20, scope: !10201)
!10205 = !DILocation(line: 4870, column: 29, scope: !10201)
!10206 = !DILocation(line: 4872, column: 57, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 4872, column: 17)
!10208 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 4871, column: 9)
!10209 = !DILocation(line: 4872, column: 48, scope: !10207)
!10210 = !DILocation(line: 4872, column: 17, scope: !10207)
!10211 = !DILocation(line: 4873, column: 21, scope: !10207)
!10212 = !DILocation(line: 4872, column: 17, scope: !10208)
!10213 = !DILocation(line: 4874, column: 17, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 4874, column: 17)
!10215 = !DILocation(line: 4874, column: 26, scope: !10214)
!10216 = !DILocation(line: 4874, column: 17, scope: !10208)
!10217 = !DILocation(line: 4875, column: 17, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 4874, column: 31)
!10219 = !DILocation(line: 4876, column: 17, scope: !10218)
!10220 = !DILocation(line: 4878, column: 25, scope: !10208)
!10221 = !DILocation(line: 4880, column: 9, scope: !10208)
!10222 = !DILocation(line: 4880, column: 21, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 4880, column: 20)
!10224 = !DILocation(line: 4880, column: 56, scope: !10223)
!10225 = !DILocation(line: 4881, column: 20, scope: !10223)
!10226 = !DILocation(line: 4881, column: 29, scope: !10223)
!10227 = !DILocation(line: 4883, column: 57, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 4883, column: 17)
!10229 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 4882, column: 9)
!10230 = !DILocation(line: 4883, column: 48, scope: !10228)
!10231 = !DILocation(line: 4883, column: 17, scope: !10228)
!10232 = !DILocation(line: 4884, column: 21, scope: !10228)
!10233 = !DILocation(line: 4883, column: 17, scope: !10229)
!10234 = !DILocation(line: 4885, column: 17, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 4885, column: 17)
!10236 = !DILocation(line: 4885, column: 30, scope: !10235)
!10237 = !DILocation(line: 4886, column: 17, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 4885, column: 49)
!10239 = !DILocation(line: 4887, column: 17, scope: !10238)
!10240 = !DILocation(line: 4891, column: 31, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 4890, column: 16)
!10242 = !DILocation(line: 4891, column: 13, scope: !10241)
!10243 = !DILocation(line: 4892, column: 13, scope: !10241)
!10244 = !DILocation(line: 0, scope: !10241)
!10245 = !DILocation(line: 0, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 4865, column: 53)
!10247 = !DILocation(line: 0, scope: !10157)
!10248 = !DILocation(line: 0, scope: !10173)
!10249 = !DILocation(line: 4894, column: 5, scope: !10172)
!10250 = !DILocation(line: 4863, column: 31, scope: !10172)
!10251 = !DILocation(line: 4863, column: 5, scope: !10172)
!10252 = distinct !{!10252, !10186, !10253}
!10253 = !DILocation(line: 4894, column: 5, scope: !10173)
!10254 = !DILocation(line: 4897, column: 10, scope: !10188)
!10255 = !DILocation(line: 4903, column: 43, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4903, column: 9)
!10257 = !DILocation(line: 4897, column: 39, scope: !10188)
!10258 = !DILocation(line: 4897, column: 45, scope: !10188)
!10259 = !DILocation(line: 4897, column: 42, scope: !10188)
!10260 = !DILocation(line: 4897, column: 21, scope: !10188)
!10261 = !DILocation(line: 4897, column: 54, scope: !10188)
!10262 = !DILocation(line: 4897, column: 9, scope: !10157)
!10263 = !DILocation(line: 4898, column: 27, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4897, column: 63)
!10265 = !{!8717, !761, i64 224}
!10266 = !DILocation(line: 4898, column: 9, scope: !10264)
!10267 = !DILocation(line: 4899, column: 9, scope: !10264)
!10268 = !DILocation(line: 4903, column: 40, scope: !10256)
!10269 = !DILocation(line: 4857, column: 15, scope: !10157)
!10270 = !DILocation(line: 4903, column: 9, scope: !10256)
!10271 = !DILocation(line: 4903, column: 62, scope: !10256)
!10272 = !DILocation(line: 4903, column: 9, scope: !10157)
!10273 = !DILocation(line: 4905, column: 16, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 4905, column: 16)
!10275 = !DILocation(line: 4905, column: 20, scope: !10274)
!10276 = !DILocation(line: 4905, column: 16, scope: !10256)
!10277 = !DILocation(line: 4906, column: 9, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 4905, column: 25)
!10279 = !DILocation(line: 4907, column: 9, scope: !10278)
!10280 = !DILocation(line: 4911, column: 30, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4911, column: 9)
!10282 = !DILocation(line: 4911, column: 27, scope: !10281)
!10283 = !DILocation(line: 4911, column: 39, scope: !10281)
!10284 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10285)
!10285 = distinct !DILocation(line: 4911, column: 43, scope: !10281)
!10286 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10285)
!10287 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10285)
!10288 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10285)
!10289 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10285)
!10290 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10285)
!10291 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10285)
!10292 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10285)
!10293 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10285)
!10294 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10285)
!10295 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10285)
!10296 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10285)
!10297 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10285)
!10298 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10285)
!10299 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10285)
!10300 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10285)
!10301 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10285)
!10302 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10285)
!10303 = !DILocation(line: 101, column: 5, scope: !1483, inlinedAt: !10285)
!10304 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10285)
!10305 = !DILocation(line: 4813, column: 38, scope: !10085, inlinedAt: !10306)
!10306 = distinct !DILocation(line: 4911, column: 9, scope: !10281)
!10307 = !DILocation(line: 4813, column: 48, scope: !10085, inlinedAt: !10306)
!10308 = !DILocation(line: 4816, column: 5, scope: !10085, inlinedAt: !10306)
!10309 = !DILocation(line: 4819, column: 9, scope: !10085, inlinedAt: !10306)
!10310 = !DILocation(line: 0, scope: !1496, inlinedAt: !10285)
!10311 = !DILocation(line: 0, scope: !10281)
!10312 = !DILocation(line: 4819, column: 13, scope: !10098, inlinedAt: !10306)
!10313 = !DILocation(line: 4820, column: 20, scope: !10085, inlinedAt: !10306)
!10314 = !DILocation(line: 4820, column: 15, scope: !10085, inlinedAt: !10306)
!10315 = !DILocation(line: 4814, column: 20, scope: !10085, inlinedAt: !10306)
!10316 = !DILocation(line: 4823, column: 15, scope: !10085, inlinedAt: !10306)
!10317 = !DILocation(line: 4823, column: 25, scope: !10085, inlinedAt: !10306)
!10318 = !DILocation(line: 4823, column: 33, scope: !10085, inlinedAt: !10306)
!10319 = !DILocation(line: 4823, column: 31, scope: !10085, inlinedAt: !10306)
!10320 = !DILocation(line: 4815, column: 14, scope: !10085, inlinedAt: !10306)
!10321 = !DILocation(line: 4824, column: 16, scope: !10109, inlinedAt: !10306)
!10322 = !DILocation(line: 4824, column: 9, scope: !10085, inlinedAt: !10306)
!10323 = !DILocation(line: 4830, column: 1, scope: !10085, inlinedAt: !10306)
!10324 = !DILocation(line: 4911, column: 9, scope: !10157)
!10325 = !DILocation(line: 4827, column: 24, scope: !10085, inlinedAt: !10306)
!10326 = !DILocation(line: 4827, column: 11, scope: !10085, inlinedAt: !10306)
!10327 = !DILocation(line: 4816, column: 14, scope: !10085, inlinedAt: !10306)
!10328 = !DILocation(line: 4827, column: 9, scope: !10085, inlinedAt: !10306)
!10329 = !DILocation(line: 4829, column: 31, scope: !10085, inlinedAt: !10306)
!10330 = !DILocation(line: 4829, column: 13, scope: !10085, inlinedAt: !10306)
!10331 = !DILocation(line: 4829, column: 37, scope: !10085, inlinedAt: !10306)
!10332 = !DILocation(line: 4829, column: 5, scope: !10085, inlinedAt: !10306)
!10333 = !DILocation(line: 4913, column: 9, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10281, file: !3, line: 4912, column: 5)
!10335 = !DILocation(line: 4914, column: 9, scope: !10334)
!10336 = !DILocation(line: 4917, column: 35, scope: !10157)
!10337 = !DILocation(line: 4917, column: 32, scope: !10157)
!10338 = !DILocation(line: 4917, column: 44, scope: !10157)
!10339 = !DILocation(line: 4858, column: 9, scope: !10157)
!10340 = !DILocation(line: 4917, column: 5, scope: !10157)
!10341 = !DILocation(line: 4918, column: 18, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4918, column: 9)
!10343 = !DILocation(line: 4859, column: 12, scope: !10157)
!10344 = !DILocation(line: 4918, column: 47, scope: !10342)
!10345 = !DILocation(line: 4918, column: 54, scope: !10342)
!10346 = !DILocation(line: 4919, column: 48, scope: !10342)
!10347 = !DILocation(line: 4919, column: 45, scope: !10342)
!10348 = !DILocation(line: 4919, column: 17, scope: !10342)
!10349 = !DILocation(line: 4860, column: 11, scope: !10157)
!10350 = !DILocation(line: 4919, column: 58, scope: !10342)
!10351 = !DILocation(line: 4918, column: 9, scope: !10157)
!10352 = !DILocation(line: 4921, column: 9, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 4920, column: 5)
!10354 = !DILocation(line: 4922, column: 9, scope: !10353)
!10355 = !DILocation(line: 4926, column: 9, scope: !10157)
!10356 = !DILocation(line: 4926, column: 30, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4926, column: 9)
!10358 = !DILocation(line: 4926, column: 36, scope: !10357)
!10359 = !DILocation(line: 4926, column: 33, scope: !10357)
!10360 = !DILocation(line: 4926, column: 18, scope: !10357)
!10361 = !DILocation(line: 4929, column: 14, scope: !10157)
!10362 = !DILocation(line: 4929, column: 20, scope: !10157)
!10363 = !DILocation(line: 4929, column: 17, scope: !10157)
!10364 = !DILocation(line: 4929, column: 5, scope: !10157)
!10365 = !DILocation(line: 4930, column: 9, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 4930, column: 9)
!10367 = !DILocation(line: 4930, column: 9, scope: !10157)
!10368 = !DILocation(line: 4931, column: 14, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 4931, column: 13)
!10370 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 4930, column: 14)
!10371 = !DILocation(line: 4931, column: 13, scope: !10370)
!10372 = !DILocation(line: 4931, column: 27, scope: !10369)
!10373 = !DILocation(line: 4931, column: 25, scope: !10369)
!10374 = !DILocation(line: 4931, column: 22, scope: !10369)
!10375 = !DILocation(line: 4932, column: 38, scope: !10370)
!10376 = !DILocation(line: 4932, column: 24, scope: !10370)
!10377 = !DILocation(line: 4932, column: 30, scope: !10370)
!10378 = !DILocation(line: 4932, column: 27, scope: !10370)
!10379 = !DILocation(line: 4932, column: 9, scope: !10370)
!10380 = !DILocation(line: 4933, column: 5, scope: !10370)
!10381 = !DILocation(line: 4934, column: 27, scope: !10157)
!10382 = !DILocation(line: 4934, column: 36, scope: !10157)
!10383 = !DILocation(line: 4934, column: 5, scope: !10157)
!10384 = !DILocation(line: 4935, column: 26, scope: !10157)
!10385 = !DILocation(line: 4935, column: 32, scope: !10157)
!10386 = !DILocation(line: 4935, column: 29, scope: !10157)
!10387 = !DILocation(line: 4935, column: 5, scope: !10157)
!10388 = !DILocation(line: 4936, column: 23, scope: !10157)
!10389 = !DILocation(line: 4936, column: 5, scope: !10157)
!10390 = !DILocation(line: 4937, column: 17, scope: !10157)
!10391 = !{!789, !790, i64 2080}
!10392 = !DILocation(line: 4938, column: 1, scope: !10157)
!10393 = distinct !DISubprogram(name: "migrateGetSocket", scope: !3, file: !3, line: 4966, type: !10394, isLocal: false, isDefinition: true, scopeLine: 4966, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10403)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{!10396, !8228, !4388, !4388, !13}
!10396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10397, size: 64)
!10397 = !DIDerivedType(tag: DW_TAG_typedef, name: "migrateCachedSocket", file: !3, line: 4953, baseType: !10398)
!10398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "migrateCachedSocket", file: !3, line: 4949, size: 192, elements: !10399)
!10399 = !{!10400, !10401, !10402}
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !10398, file: !3, line: 4950, baseType: !177, size: 32)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "last_dbid", scope: !10398, file: !3, line: 4951, baseType: !13, size: 64, offset: 64)
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "last_use_time", scope: !10398, file: !3, line: 4952, baseType: !288, size: 64, offset: 128)
!10403 = !{!10404, !10405, !10406, !10407, !10408, !10409, !10410, !10411}
!10404 = !DILocalVariable(name: "c", arg: 1, scope: !10393, file: !3, line: 4966, type: !8228)
!10405 = !DILocalVariable(name: "host", arg: 2, scope: !10393, file: !3, line: 4966, type: !4388)
!10406 = !DILocalVariable(name: "port", arg: 3, scope: !10393, file: !3, line: 4966, type: !4388)
!10407 = !DILocalVariable(name: "timeout", arg: 4, scope: !10393, file: !3, line: 4966, type: !13)
!10408 = !DILocalVariable(name: "fd", scope: !10393, file: !3, line: 4967, type: !177)
!10409 = !DILocalVariable(name: "name", scope: !10393, file: !3, line: 4968, type: !189)
!10410 = !DILocalVariable(name: "cs", scope: !10393, file: !3, line: 4969, type: !10396)
!10411 = !DILocalVariable(name: "de", scope: !10412, file: !3, line: 4985, type: !340)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 4983, column: 80)
!10413 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4983, column: 9)
!10414 = !DILocation(line: 4966, column: 47, scope: !10393)
!10415 = !DILocation(line: 4966, column: 56, scope: !10393)
!10416 = !DILocation(line: 4966, column: 68, scope: !10393)
!10417 = !DILocation(line: 4966, column: 79, scope: !10393)
!10418 = !DILocation(line: 4968, column: 16, scope: !10393)
!10419 = !DILocation(line: 4968, column: 9, scope: !10393)
!10420 = !DILocation(line: 4972, column: 33, scope: !10393)
!10421 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10422)
!10422 = distinct !DILocation(line: 4972, column: 37, scope: !10393)
!10423 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10422)
!10424 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10422)
!10425 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10422)
!10426 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10422)
!10427 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10422)
!10428 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10422)
!10429 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10422)
!10430 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10422)
!10431 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10422)
!10432 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10422)
!10433 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10422)
!10434 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10422)
!10435 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10422)
!10436 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10422)
!10437 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10422)
!10438 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10422)
!10439 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10422)
!10440 = !DILocation(line: 0, scope: !1496, inlinedAt: !10422)
!10441 = !DILocation(line: 0, scope: !10393)
!10442 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10422)
!10443 = !DILocation(line: 4972, column: 12, scope: !10393)
!10444 = !DILocation(line: 4973, column: 12, scope: !10393)
!10445 = !DILocation(line: 4974, column: 33, scope: !10393)
!10446 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10447)
!10447 = distinct !DILocation(line: 4974, column: 37, scope: !10393)
!10448 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10447)
!10449 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10447)
!10450 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10447)
!10451 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10447)
!10452 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10447)
!10453 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10447)
!10454 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10447)
!10455 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10447)
!10456 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10447)
!10457 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10447)
!10458 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10447)
!10459 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10447)
!10460 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10447)
!10461 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10447)
!10462 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10447)
!10463 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10447)
!10464 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10447)
!10465 = !DILocation(line: 0, scope: !1496, inlinedAt: !10447)
!10466 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10447)
!10467 = !DILocation(line: 4974, column: 12, scope: !10393)
!10468 = !DILocation(line: 4975, column: 32, scope: !10393)
!10469 = !{!789, !761, i64 840}
!10470 = !DILocation(line: 4975, column: 10, scope: !10393)
!10471 = !DILocation(line: 4976, column: 9, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4976, column: 9)
!10473 = !DILocation(line: 4976, column: 9, scope: !10393)
!10474 = !DILocation(line: 4969, column: 26, scope: !10393)
!10475 = !DILocation(line: 4977, column: 9, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 4976, column: 13)
!10477 = !DILocation(line: 4978, column: 36, scope: !10476)
!10478 = !DILocation(line: 4978, column: 13, scope: !10476)
!10479 = !DILocation(line: 4978, column: 27, scope: !10476)
!10480 = !{!10481, !729, i64 16}
!10481 = !{!"migrateCachedSocket", !709, i64 0, !729, i64 8, !729, i64 16}
!10482 = !DILocation(line: 4979, column: 9, scope: !10476)
!10483 = !DILocation(line: 4983, column: 9, scope: !10413)
!10484 = !DILocation(line: 4983, column: 49, scope: !10413)
!10485 = !DILocation(line: 4983, column: 9, scope: !10393)
!10486 = !DILocation(line: 4985, column: 25, scope: !10412)
!10487 = !DILocation(line: 4985, column: 20, scope: !10412)
!10488 = !DILocation(line: 4986, column: 14, scope: !10412)
!10489 = !DILocation(line: 4987, column: 19, scope: !10412)
!10490 = !{!10481, !709, i64 0}
!10491 = !DILocation(line: 4987, column: 9, scope: !10412)
!10492 = !DILocation(line: 4988, column: 9, scope: !10412)
!10493 = !DILocation(line: 4989, column: 27, scope: !10412)
!10494 = !DILocation(line: 4989, column: 50, scope: !10412)
!10495 = !DILocation(line: 4989, column: 9, scope: !10412)
!10496 = !DILocation(line: 4990, column: 5, scope: !10412)
!10497 = !DILocation(line: 4993, column: 50, scope: !10393)
!10498 = !DILocation(line: 4993, column: 47, scope: !10393)
!10499 = !DILocation(line: 4993, column: 59, scope: !10393)
!10500 = !DILocation(line: 4994, column: 38, scope: !10393)
!10501 = !DILocation(line: 4994, column: 50, scope: !10393)
!10502 = !DILocation(line: 4994, column: 33, scope: !10393)
!10503 = !DILocation(line: 4993, column: 10, scope: !10393)
!10504 = !DILocation(line: 4967, column: 9, scope: !10393)
!10505 = !DILocation(line: 4995, column: 12, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4995, column: 9)
!10507 = !DILocation(line: 4995, column: 9, scope: !10393)
!10508 = !DILocation(line: 4996, column: 9, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 4995, column: 19)
!10510 = !DILocation(line: 4997, column: 9, scope: !10509)
!10511 = !DILocation(line: 4999, column: 9, scope: !10509)
!10512 = !DILocation(line: 5001, column: 5, scope: !10393)
!10513 = !DILocation(line: 5004, column: 10, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 5004, column: 9)
!10515 = !DILocation(line: 5004, column: 41, scope: !10514)
!10516 = !DILocation(line: 5004, column: 56, scope: !10514)
!10517 = !DILocation(line: 5004, column: 9, scope: !10393)
!10518 = !DILocation(line: 5005, column: 9, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10514, file: !3, line: 5004, column: 62)
!10520 = !DILocation(line: 5007, column: 13, scope: !10519)
!10521 = !DILocation(line: 5006, column: 9, scope: !10519)
!10522 = !DILocation(line: 5008, column: 9, scope: !10519)
!10523 = !DILocation(line: 5009, column: 9, scope: !10519)
!10524 = !DILocation(line: 5013, column: 10, scope: !10393)
!10525 = !DILocation(line: 5014, column: 9, scope: !10393)
!10526 = !DILocation(line: 5014, column: 12, scope: !10393)
!10527 = !DILocation(line: 5015, column: 9, scope: !10393)
!10528 = !DILocation(line: 5015, column: 19, scope: !10393)
!10529 = !{!10481, !729, i64 8}
!10530 = !DILocation(line: 5016, column: 32, scope: !10393)
!10531 = !DILocation(line: 5016, column: 9, scope: !10393)
!10532 = !DILocation(line: 5016, column: 23, scope: !10393)
!10533 = !DILocation(line: 5017, column: 20, scope: !10393)
!10534 = !DILocation(line: 5017, column: 5, scope: !10393)
!10535 = !DILocation(line: 5018, column: 5, scope: !10393)
!10536 = !DILocation(line: 0, scope: !10476)
!10537 = !DILocation(line: 5019, column: 1, scope: !10393)
!10538 = distinct !DISubprogram(name: "migrateCloseSocket", scope: !3, file: !3, line: 5022, type: !6518, isLocal: false, isDefinition: true, scopeLine: 5022, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542, !10543}
!10540 = !DILocalVariable(name: "host", arg: 1, scope: !10538, file: !3, line: 5022, type: !4388)
!10541 = !DILocalVariable(name: "port", arg: 2, scope: !10538, file: !3, line: 5022, type: !4388)
!10542 = !DILocalVariable(name: "name", scope: !10538, file: !3, line: 5023, type: !189)
!10543 = !DILocalVariable(name: "cs", scope: !10538, file: !3, line: 5024, type: !10396)
!10544 = !DILocation(line: 5022, column: 31, scope: !10538)
!10545 = !DILocation(line: 5022, column: 43, scope: !10538)
!10546 = !DILocation(line: 5023, column: 16, scope: !10538)
!10547 = !DILocation(line: 5023, column: 9, scope: !10538)
!10548 = !DILocation(line: 5026, column: 33, scope: !10538)
!10549 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10550)
!10550 = distinct !DILocation(line: 5026, column: 37, scope: !10538)
!10551 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10550)
!10552 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10550)
!10553 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10550)
!10554 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10550)
!10555 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10550)
!10556 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10550)
!10557 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10550)
!10558 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10550)
!10559 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10550)
!10560 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10550)
!10561 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10550)
!10562 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10550)
!10563 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10550)
!10564 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10550)
!10565 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10550)
!10566 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10550)
!10567 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10550)
!10568 = !DILocation(line: 0, scope: !1496, inlinedAt: !10550)
!10569 = !DILocation(line: 0, scope: !10538)
!10570 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10550)
!10571 = !DILocation(line: 5026, column: 12, scope: !10538)
!10572 = !DILocation(line: 5027, column: 12, scope: !10538)
!10573 = !DILocation(line: 5028, column: 33, scope: !10538)
!10574 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10575)
!10575 = distinct !DILocation(line: 5028, column: 37, scope: !10538)
!10576 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10575)
!10577 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10575)
!10578 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10575)
!10579 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10575)
!10580 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10575)
!10581 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10575)
!10582 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10575)
!10583 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10575)
!10584 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10575)
!10585 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10575)
!10586 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10575)
!10587 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10575)
!10588 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10575)
!10589 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10575)
!10590 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10575)
!10591 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10575)
!10592 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10575)
!10593 = !DILocation(line: 0, scope: !1496, inlinedAt: !10575)
!10594 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10575)
!10595 = !DILocation(line: 5028, column: 12, scope: !10538)
!10596 = !DILocation(line: 5029, column: 32, scope: !10538)
!10597 = !DILocation(line: 5029, column: 10, scope: !10538)
!10598 = !DILocation(line: 5030, column: 10, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 5030, column: 9)
!10600 = !DILocation(line: 5030, column: 9, scope: !10538)
!10601 = !DILocation(line: 5031, column: 9, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 5030, column: 14)
!10603 = !DILocation(line: 5032, column: 9, scope: !10602)
!10604 = !DILocation(line: 5024, column: 26, scope: !10538)
!10605 = !DILocation(line: 5035, column: 15, scope: !10538)
!10606 = !DILocation(line: 5035, column: 5, scope: !10538)
!10607 = !DILocation(line: 5036, column: 5, scope: !10538)
!10608 = !DILocation(line: 5037, column: 23, scope: !10538)
!10609 = !DILocation(line: 5037, column: 5, scope: !10538)
!10610 = !DILocation(line: 5038, column: 5, scope: !10538)
!10611 = !DILocation(line: 5039, column: 1, scope: !10538)
!10612 = !DILocation(line: 0, scope: !10602)
!10613 = distinct !DISubprogram(name: "migrateCloseTimedoutSockets", scope: !3, file: !3, line: 5041, type: !293, isLocal: false, isDefinition: true, scopeLine: 5041, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10614)
!10614 = !{!10615, !10616, !10617}
!10615 = !DILocalVariable(name: "di", scope: !10613, file: !3, line: 5042, type: !297)
!10616 = !DILocalVariable(name: "de", scope: !10613, file: !3, line: 5043, type: !340)
!10617 = !DILocalVariable(name: "cs", scope: !10618, file: !3, line: 5046, type: !10396)
!10618 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 5045, column: 40)
!10619 = !DILocation(line: 5042, column: 51, scope: !10613)
!10620 = !DILocation(line: 5042, column: 24, scope: !10613)
!10621 = !DILocation(line: 5042, column: 19, scope: !10613)
!10622 = !DILocation(line: 5045, column: 5, scope: !10613)
!10623 = !DILocation(line: 5045, column: 17, scope: !10613)
!10624 = !DILocation(line: 5043, column: 16, scope: !10613)
!10625 = !DILocation(line: 5045, column: 31, scope: !10613)
!10626 = !DILocation(line: 5046, column: 35, scope: !10618)
!10627 = !DILocation(line: 5048, column: 21, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 5048, column: 13)
!10629 = !DILocation(line: 5048, column: 36, scope: !10628)
!10630 = !DILocation(line: 5048, column: 30, scope: !10628)
!10631 = !DILocation(line: 5048, column: 51, scope: !10628)
!10632 = !DILocation(line: 5048, column: 13, scope: !10618)
!10633 = !DILocation(line: 5046, column: 30, scope: !10618)
!10634 = !DILocation(line: 5049, column: 23, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 5048, column: 79)
!10636 = !DILocation(line: 5049, column: 13, scope: !10635)
!10637 = !DILocation(line: 5050, column: 13, scope: !10635)
!10638 = !DILocation(line: 5051, column: 31, scope: !10635)
!10639 = !DILocation(line: 5051, column: 54, scope: !10635)
!10640 = !DILocation(line: 5051, column: 13, scope: !10635)
!10641 = !DILocation(line: 5052, column: 9, scope: !10635)
!10642 = distinct !{!10642, !10622, !10643}
!10643 = !DILocation(line: 5053, column: 5, scope: !10613)
!10644 = !DILocation(line: 5054, column: 5, scope: !10613)
!10645 = !DILocation(line: 5055, column: 1, scope: !10613)
!10646 = distinct !DISubprogram(name: "migrateCommand", scope: !3, file: !3, line: 5063, type: !8263, isLocal: false, isDefinition: true, scopeLine: 5063, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !10647)
!10647 = !{!10648, !10649, !10650, !10651, !10652, !10653, !10654, !10655, !10656, !10657, !10658, !10659, !10660, !10661, !10662, !10663, !10664, !10665, !10666, !10670, !10671, !10672, !10673, !10677, !10678, !10680, !10681, !10682, !10683, !10687, !10688, !10689, !10690, !10691, !10692}
!10648 = !DILocalVariable(name: "c", arg: 1, scope: !10646, file: !3, line: 5063, type: !8228)
!10649 = !DILocalVariable(name: "cs", scope: !10646, file: !3, line: 5064, type: !10396)
!10650 = !DILocalVariable(name: "copy", scope: !10646, file: !3, line: 5065, type: !177)
!10651 = !DILocalVariable(name: "replace", scope: !10646, file: !3, line: 5065, type: !177)
!10652 = !DILocalVariable(name: "j", scope: !10646, file: !3, line: 5065, type: !177)
!10653 = !DILocalVariable(name: "password", scope: !10646, file: !3, line: 5066, type: !178)
!10654 = !DILocalVariable(name: "timeout", scope: !10646, file: !3, line: 5067, type: !13)
!10655 = !DILocalVariable(name: "dbid", scope: !10646, file: !3, line: 5068, type: !13)
!10656 = !DILocalVariable(name: "ov", scope: !10646, file: !3, line: 5069, type: !8254)
!10657 = !DILocalVariable(name: "kv", scope: !10646, file: !3, line: 5070, type: !8254)
!10658 = !DILocalVariable(name: "newargv", scope: !10646, file: !3, line: 5071, type: !8254)
!10659 = !DILocalVariable(name: "cmd", scope: !10646, file: !3, line: 5072, type: !9982)
!10660 = !DILocalVariable(name: "payload", scope: !10646, file: !3, line: 5072, type: !9982)
!10661 = !DILocalVariable(name: "may_retry", scope: !10646, file: !3, line: 5073, type: !177)
!10662 = !DILocalVariable(name: "write_error", scope: !10646, file: !3, line: 5074, type: !177)
!10663 = !DILocalVariable(name: "argv_rewritten", scope: !10646, file: !3, line: 5075, type: !177)
!10664 = !DILocalVariable(name: "first_key", scope: !10646, file: !3, line: 5078, type: !177)
!10665 = !DILocalVariable(name: "num_keys", scope: !10646, file: !3, line: 5079, type: !177)
!10666 = !DILocalVariable(name: "moreargs", scope: !10667, file: !3, line: 5083, type: !177)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 5082, column: 35)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 5082, column: 5)
!10669 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5082, column: 5)
!10670 = !DILocalVariable(name: "oi", scope: !10646, file: !3, line: 5126, type: !177)
!10671 = !DILocalVariable(name: "select", scope: !10646, file: !3, line: 5162, type: !177)
!10672 = !DILocalVariable(name: "non_expired", scope: !10646, file: !3, line: 5169, type: !177)
!10673 = !DILocalVariable(name: "ttl", scope: !10674, file: !3, line: 5176, type: !186)
!10674 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 5175, column: 36)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 5175, column: 5)
!10676 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5175, column: 5)
!10677 = !DILocalVariable(name: "expireat", scope: !10674, file: !3, line: 5177, type: !186)
!10678 = !DILocalVariable(name: "buf", scope: !10679, file: !3, line: 5225, type: !189)
!10679 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5224, column: 5)
!10680 = !DILocalVariable(name: "pos", scope: !10679, file: !3, line: 5226, type: !1465)
!10681 = !DILocalVariable(name: "towrite", scope: !10679, file: !3, line: 5226, type: !1465)
!10682 = !DILocalVariable(name: "nwritten", scope: !10679, file: !3, line: 5227, type: !177)
!10683 = !DILocalVariable(name: "buf0", scope: !10646, file: !3, line: 5240, type: !10684)
!10684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 8192, elements: !10685)
!10685 = !{!10686}
!10686 = !DISubrange(count: 1024)
!10687 = !DILocalVariable(name: "buf1", scope: !10646, file: !3, line: 5241, type: !10684)
!10688 = !DILocalVariable(name: "buf2", scope: !10646, file: !3, line: 5242, type: !10684)
!10689 = !DILocalVariable(name: "error_from_target", scope: !10646, file: !3, line: 5253, type: !177)
!10690 = !DILocalVariable(name: "socket_error", scope: !10646, file: !3, line: 5254, type: !177)
!10691 = !DILocalVariable(name: "del_idx", scope: !10646, file: !3, line: 5255, type: !177)
!10692 = !DILocalVariable(name: "errbuf", scope: !10693, file: !3, line: 5275, type: !178)
!10693 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 5273, column: 37)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 5273, column: 17)
!10695 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 5271, column: 9)
!10696 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 5268, column: 13)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 5263, column: 36)
!10698 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 5263, column: 5)
!10699 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5263, column: 5)
!10700 = !DILocation(line: 5063, column: 29, scope: !10646)
!10701 = !DILocation(line: 5065, column: 9, scope: !10646)
!10702 = !DILocation(line: 5065, column: 19, scope: !10646)
!10703 = !DILocation(line: 5066, column: 11, scope: !10646)
!10704 = !DILocation(line: 5067, column: 5, scope: !10646)
!10705 = !DILocation(line: 5068, column: 5, scope: !10646)
!10706 = !DILocation(line: 5069, column: 12, scope: !10646)
!10707 = !DILocation(line: 5070, column: 12, scope: !10646)
!10708 = !DILocation(line: 5071, column: 12, scope: !10646)
!10709 = !DILocation(line: 5072, column: 5, scope: !10646)
!10710 = !DILocation(line: 5073, column: 9, scope: !10646)
!10711 = !DILocation(line: 5074, column: 9, scope: !10646)
!10712 = !DILocation(line: 5075, column: 9, scope: !10646)
!10713 = !DILocation(line: 5078, column: 9, scope: !10646)
!10714 = !DILocation(line: 5079, column: 9, scope: !10646)
!10715 = !DILocation(line: 5065, column: 32, scope: !10646)
!10716 = !DILocation(line: 5082, column: 10, scope: !10669)
!10717 = !DILocation(line: 5082, column: 24, scope: !10668)
!10718 = !DILocation(line: 5082, column: 19, scope: !10668)
!10719 = !DILocation(line: 5082, column: 5, scope: !10669)
!10720 = !DILocation(line: 0, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5112, column: 9)
!10722 = !DILocation(line: 5083, column: 26, scope: !10667)
!10723 = !DILocation(line: 5084, column: 25, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 5084, column: 13)
!10725 = !DILocation(line: 5084, column: 37, scope: !10724)
!10726 = !DILocation(line: 5084, column: 14, scope: !10724)
!10727 = !DILocation(line: 5084, column: 13, scope: !10667)
!10728 = !DILocation(line: 5086, column: 21, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 5086, column: 20)
!10730 = !DILocation(line: 5086, column: 20, scope: !10724)
!10731 = !DILocation(line: 5088, column: 21, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 5088, column: 20)
!10733 = !DILocation(line: 5088, column: 20, scope: !10729)
!10734 = !DILocation(line: 5089, column: 17, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 5088, column: 57)
!10736 = !DILocation(line: 5090, column: 35, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 5089, column: 28)
!10738 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 5089, column: 17)
!10739 = !DILocation(line: 5090, column: 17, scope: !10737)
!10740 = !DILocation(line: 5091, column: 17, scope: !10737)
!10741 = !DILocation(line: 5093, column: 14, scope: !10735)
!10742 = !DILocation(line: 5094, column: 24, scope: !10735)
!10743 = !DILocation(line: 5094, column: 36, scope: !10735)
!10744 = !DILocation(line: 5095, column: 21, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 5095, column: 20)
!10746 = !DILocation(line: 5095, column: 20, scope: !10732)
!10747 = !DILocation(line: 5096, column: 24, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 5096, column: 17)
!10749 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 5095, column: 57)
!10750 = !DILocation(line: 5096, column: 36, scope: !10748)
!10751 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10752)
!10752 = distinct !DILocation(line: 5096, column: 17, scope: !10748)
!10753 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10752)
!10754 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10752)
!10755 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10752)
!10756 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10752)
!10757 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10752)
!10758 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10752)
!10759 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10752)
!10760 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10752)
!10761 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10752)
!10762 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10752)
!10763 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10752)
!10764 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10752)
!10765 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10752)
!10766 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10752)
!10767 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10752)
!10768 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10752)
!10769 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10752)
!10770 = !DILocation(line: 101, column: 5, scope: !1483, inlinedAt: !10752)
!10771 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10752)
!10772 = !DILocation(line: 5096, column: 17, scope: !10749)
!10773 = !DILocation(line: 0, scope: !1496, inlinedAt: !10752)
!10774 = !DILocation(line: 0, scope: !10748)
!10775 = !DILocation(line: 5096, column: 41, scope: !10748)
!10776 = !DILocation(line: 5097, column: 17, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 5096, column: 47)
!10778 = !DILocation(line: 5100, column: 17, scope: !10777)
!10779 = !DILocation(line: 5106, column: 31, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 5105, column: 16)
!10781 = !DILocation(line: 5106, column: 13, scope: !10780)
!10782 = !DILocation(line: 5107, column: 13, scope: !10780)
!10783 = !DILocation(line: 0, scope: !10737)
!10784 = !DILocation(line: 5102, column: 26, scope: !10749)
!10785 = !DILocation(line: 5103, column: 36, scope: !10749)
!10786 = !DILocation(line: 5104, column: 13, scope: !10749)
!10787 = !DILocation(line: 0, scope: !10646)
!10788 = !DILocation(line: 0, scope: !10669)
!10789 = !DILocation(line: 0, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 5084, column: 50)
!10791 = !DILocation(line: 5109, column: 5, scope: !10668)
!10792 = !DILocation(line: 5082, column: 31, scope: !10668)
!10793 = !DILocation(line: 5082, column: 5, scope: !10668)
!10794 = distinct !{!10794, !10719, !10795}
!10795 = !DILocation(line: 5109, column: 5, scope: !10669)
!10796 = !DILocation(line: 5112, column: 36, scope: !10721)
!10797 = !DILocation(line: 5067, column: 10, scope: !10646)
!10798 = !DILocation(line: 5112, column: 9, scope: !10721)
!10799 = !DILocation(line: 5112, column: 62, scope: !10721)
!10800 = !DILocation(line: 5112, column: 70, scope: !10721)
!10801 = !DILocation(line: 5113, column: 39, scope: !10721)
!10802 = !DILocation(line: 5113, column: 36, scope: !10721)
!10803 = !DILocation(line: 5068, column: 10, scope: !10646)
!10804 = !DILocation(line: 5113, column: 9, scope: !10721)
!10805 = !DILocation(line: 5113, column: 59, scope: !10721)
!10806 = !DILocation(line: 5112, column: 9, scope: !10646)
!10807 = !DILocation(line: 5117, column: 9, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5117, column: 9)
!10809 = !DILocation(line: 5117, column: 17, scope: !10808)
!10810 = !DILocation(line: 5117, column: 9, scope: !10646)
!10811 = !DILocation(line: 5117, column: 31, scope: !10808)
!10812 = !DILocation(line: 5117, column: 23, scope: !10808)
!10813 = !DILocation(line: 5124, column: 36, scope: !10646)
!10814 = !DILocation(line: 5124, column: 35, scope: !10646)
!10815 = !DILocation(line: 5124, column: 10, scope: !10646)
!10816 = !DILocation(line: 5125, column: 10, scope: !10646)
!10817 = !DILocation(line: 5126, column: 9, scope: !10646)
!10818 = !DILocation(line: 5128, column: 10, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5128, column: 5)
!10820 = !DILocation(line: 5128, column: 19, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 5128, column: 5)
!10822 = !DILocation(line: 5128, column: 5, scope: !10819)
!10823 = !DILocation(line: 5135, column: 9, scope: !10646)
!10824 = !DILocation(line: 5129, column: 40, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 5129, column: 13)
!10826 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 5128, column: 36)
!10827 = !DILocation(line: 5129, column: 46, scope: !10825)
!10828 = !DILocation(line: 5129, column: 60, scope: !10825)
!10829 = !DILocation(line: 5129, column: 43, scope: !10825)
!10830 = !DILocation(line: 5129, column: 23, scope: !10825)
!10831 = !DILocation(line: 5129, column: 14, scope: !10825)
!10832 = !DILocation(line: 5129, column: 21, scope: !10825)
!10833 = !DILocation(line: 5129, column: 66, scope: !10825)
!10834 = !DILocation(line: 5129, column: 13, scope: !10826)
!10835 = !DILocation(line: 5130, column: 25, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 5129, column: 75)
!10837 = !DILocation(line: 5130, column: 22, scope: !10836)
!10838 = !DILocation(line: 5130, column: 13, scope: !10836)
!10839 = !DILocation(line: 5130, column: 20, scope: !10836)
!10840 = !DILocation(line: 5131, column: 15, scope: !10836)
!10841 = !DILocation(line: 5132, column: 9, scope: !10836)
!10842 = !DILocation(line: 5128, column: 32, scope: !10821)
!10843 = !DILocation(line: 5128, column: 5, scope: !10821)
!10844 = distinct !{!10844, !10822, !10845}
!10845 = !DILocation(line: 5133, column: 5, scope: !10819)
!10846 = !DILocation(line: 5135, column: 18, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5135, column: 9)
!10848 = !DILocation(line: 5145, column: 32, scope: !10646)
!10849 = !DILocation(line: 5145, column: 29, scope: !10646)
!10850 = !DILocation(line: 5145, column: 40, scope: !10646)
!10851 = !DILocation(line: 5145, column: 51, scope: !10646)
!10852 = !DILocation(line: 5145, column: 10, scope: !10646)
!10853 = !DILocation(line: 5064, column: 26, scope: !10646)
!10854 = !DILocation(line: 5146, column: 12, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5146, column: 9)
!10856 = !DILocation(line: 5146, column: 9, scope: !10646)
!10857 = !DILocation(line: 5136, column: 9, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10847, file: !3, line: 5135, column: 24)
!10859 = !DILocation(line: 5136, column: 20, scope: !10858)
!10860 = !DILocation(line: 5137, column: 23, scope: !10858)
!10861 = !DILocation(line: 5137, column: 9, scope: !10858)
!10862 = !DILocation(line: 5138, column: 9, scope: !10858)
!10863 = !DILocation(line: 5147, column: 9, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 5146, column: 21)
!10865 = !DILocation(line: 5147, column: 20, scope: !10864)
!10866 = !DILocation(line: 5148, column: 9, scope: !10864)
!10867 = !DILocation(line: 5151, column: 28, scope: !10646)
!10868 = !DILocation(line: 5072, column: 9, scope: !10646)
!10869 = !DILocation(line: 5151, column: 5, scope: !10646)
!10870 = !DILocation(line: 5154, column: 9, scope: !10646)
!10871 = !DILocation(line: 5155, column: 9, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 5154, column: 19)
!10873 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5154, column: 9)
!10874 = !DILocation(line: 5156, column: 9, scope: !10872)
!10875 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10876)
!10876 = distinct !DILocation(line: 5157, column: 9, scope: !10872)
!10877 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10876)
!10878 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10876)
!10879 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10876)
!10880 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10876)
!10881 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10876)
!10882 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10876)
!10883 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10876)
!10884 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10876)
!10885 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10876)
!10886 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10876)
!10887 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10876)
!10888 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10876)
!10889 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10876)
!10890 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10876)
!10891 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10876)
!10892 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10876)
!10893 = !DILocation(line: 0, scope: !1496, inlinedAt: !10876)
!10894 = !DILocation(line: 0, scope: !10872)
!10895 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10876)
!10896 = !DILocation(line: 5157, column: 9, scope: !10872)
!10897 = !DILocation(line: 5162, column: 22, scope: !10646)
!10898 = !DILocation(line: 5162, column: 35, scope: !10646)
!10899 = !DILocation(line: 5162, column: 32, scope: !10646)
!10900 = !DILocation(line: 5163, column: 9, scope: !10646)
!10901 = !DILocation(line: 5164, column: 9, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 5163, column: 17)
!10903 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5163, column: 9)
!10904 = !DILocation(line: 5165, column: 9, scope: !10902)
!10905 = !DILocation(line: 5166, column: 9, scope: !10902)
!10906 = !DILocation(line: 5169, column: 9, scope: !10646)
!10907 = !DILocation(line: 5175, column: 10, scope: !10676)
!10908 = !DILocation(line: 5175, column: 19, scope: !10675)
!10909 = !DILocation(line: 5175, column: 5, scope: !10676)
!10910 = !DILocation(line: 5177, column: 43, scope: !10674)
!10911 = !DILocation(line: 5176, column: 19, scope: !10674)
!10912 = !DILocation(line: 5177, column: 46, scope: !10674)
!10913 = !DILocation(line: 5177, column: 30, scope: !10674)
!10914 = !DILocation(line: 5177, column: 19, scope: !10674)
!10915 = !DILocation(line: 5179, column: 22, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 5179, column: 13)
!10917 = !DILocation(line: 5179, column: 13, scope: !10674)
!10918 = !DILocation(line: 5180, column: 28, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 5179, column: 29)
!10920 = !DILocation(line: 5180, column: 27, scope: !10919)
!10921 = !DILocation(line: 5181, column: 21, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 5181, column: 17)
!10923 = !DILocation(line: 5181, column: 17, scope: !10919)
!10924 = !DILocation(line: 5184, column: 21, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 5184, column: 17)
!10926 = !DILocation(line: 5184, column: 17, scope: !10919)
!10927 = !DILocation(line: 5184, column: 26, scope: !10925)
!10928 = !DILocation(line: 0, scope: !10674)
!10929 = !DILocation(line: 5190, column: 29, scope: !10674)
!10930 = !DILocation(line: 5190, column: 23, scope: !10674)
!10931 = !DILocation(line: 5190, column: 9, scope: !10674)
!10932 = !DILocation(line: 5190, column: 27, scope: !10674)
!10933 = !DILocation(line: 5192, column: 9, scope: !10674)
!10934 = !DILocation(line: 5195, column: 20, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 5195, column: 13)
!10936 = !DILocation(line: 5195, column: 13, scope: !10935)
!10937 = !DILocation(line: 5195, column: 13, scope: !10674)
!10938 = !DILocation(line: 5196, column: 13, scope: !10935)
!10939 = !DILocation(line: 5199, column: 13, scope: !10935)
!10940 = !DILocation(line: 5200, column: 9, scope: !10674)
!10941 = !DILocation(line: 5201, column: 9, scope: !10674)
!10942 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10943)
!10943 = distinct !DILocation(line: 5201, column: 9, scope: !10674)
!10944 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10943)
!10945 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10943)
!10946 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10943)
!10947 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10943)
!10948 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10943)
!10949 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10943)
!10950 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10943)
!10951 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10943)
!10952 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10943)
!10953 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10943)
!10954 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10943)
!10955 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10943)
!10956 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10943)
!10957 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10943)
!10958 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10943)
!10959 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10943)
!10960 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10943)
!10961 = !DILocation(line: 0, scope: !1496, inlinedAt: !10943)
!10962 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10943)
!10963 = !DILocation(line: 5203, column: 9, scope: !10674)
!10964 = !DILocation(line: 5207, column: 36, scope: !10674)
!10965 = !DILocation(line: 5207, column: 42, scope: !10674)
!10966 = !DILocation(line: 5072, column: 14, scope: !10646)
!10967 = !DILocation(line: 5207, column: 9, scope: !10674)
!10968 = !DILocation(line: 5208, column: 9, scope: !10674)
!10969 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !10970)
!10970 = distinct !DILocation(line: 5208, column: 9, scope: !10674)
!10971 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !10970)
!10972 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !10970)
!10973 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !10970)
!10974 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !10970)
!10975 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !10970)
!10976 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !10970)
!10977 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !10970)
!10978 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !10970)
!10979 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !10970)
!10980 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !10970)
!10981 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !10970)
!10982 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !10970)
!10983 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !10970)
!10984 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !10970)
!10985 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !10970)
!10986 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !10970)
!10987 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !10970)
!10988 = !DILocation(line: 0, scope: !1496, inlinedAt: !10970)
!10989 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !10970)
!10990 = !DILocation(line: 5211, column: 35, scope: !10674)
!10991 = !DILocation(line: 5211, column: 9, scope: !10674)
!10992 = !DILocation(line: 5215, column: 13, scope: !10674)
!10993 = !DILocation(line: 5216, column: 13, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 5215, column: 13)
!10995 = !DILocation(line: 0, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10922, file: !3, line: 5181, column: 26)
!10997 = !DILocation(line: 5175, column: 32, scope: !10675)
!10998 = !DILocation(line: 5175, column: 5, scope: !10675)
!10999 = distinct !{!10999, !10909, !11000}
!11000 = !DILocation(line: 5217, column: 5, scope: !10676)
!11001 = !DILocation(line: 5223, column: 5, scope: !10646)
!11002 = !DILocation(line: 5223, column: 11, scope: !10646)
!11003 = !DILocation(line: 5225, column: 33, scope: !10679)
!11004 = !DILocation(line: 5225, column: 13, scope: !10679)
!11005 = !DILocation(line: 5226, column: 16, scope: !10679)
!11006 = !DILocation(line: 5227, column: 13, scope: !10679)
!11007 = !DILocation(line: 5229, column: 9, scope: !10679)
!11008 = !DILocation(line: 0, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 5229, column: 49)
!11010 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !11011)
!11011 = distinct !DILocation(line: 5229, column: 27, scope: !10679)
!11012 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !11011)
!11013 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !11011)
!11014 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !11011)
!11015 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !11011)
!11016 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !11011)
!11017 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !11011)
!11018 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !11011)
!11019 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !11011)
!11020 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !11011)
!11021 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !11011)
!11022 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !11011)
!11023 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !11011)
!11024 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !11011)
!11025 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !11011)
!11026 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !11011)
!11027 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !11011)
!11028 = !DILocation(line: 0, scope: !1496, inlinedAt: !11011)
!11029 = !DILocation(line: 0, scope: !10679)
!11030 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !11011)
!11031 = !DILocation(line: 5229, column: 38, scope: !10679)
!11032 = !DILocation(line: 5226, column: 25, scope: !10679)
!11033 = !DILocation(line: 5229, column: 44, scope: !10679)
!11034 = !DILocation(line: 5230, column: 24, scope: !11009)
!11035 = !DILocation(line: 5231, column: 38, scope: !11009)
!11036 = !DILocation(line: 5231, column: 44, scope: !11009)
!11037 = !DILocation(line: 5231, column: 57, scope: !11009)
!11038 = !DILocation(line: 5231, column: 24, scope: !11009)
!11039 = !DILocation(line: 5232, column: 29, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 5232, column: 17)
!11041 = !DILocation(line: 5232, column: 26, scope: !11040)
!11042 = !DILocation(line: 5232, column: 17, scope: !11009)
!11043 = !DILocation(line: 5236, column: 20, scope: !11009)
!11044 = !DILocation(line: 5236, column: 17, scope: !11009)
!11045 = distinct !{!11045, !11007, !11046}
!11046 = !DILocation(line: 5237, column: 9, scope: !10679)
!11047 = !DILocation(line: 5234, column: 17, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11040, file: !3, line: 5232, column: 46)
!11049 = !DILocation(line: 5238, column: 5, scope: !10646)
!11050 = !DILocation(line: 5240, column: 10, scope: !10646)
!11051 = !DILocation(line: 5241, column: 10, scope: !10646)
!11052 = !DILocation(line: 5242, column: 10, scope: !10646)
!11053 = !DILocation(line: 5245, column: 18, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5245, column: 9)
!11055 = !DILocation(line: 5245, column: 38, scope: !11054)
!11056 = !DILocation(line: 5245, column: 62, scope: !11054)
!11057 = !DILocation(line: 5245, column: 21, scope: !11054)
!11058 = !DILocation(line: 5245, column: 71, scope: !11054)
!11059 = !DILocation(line: 5245, column: 9, scope: !10646)
!11060 = !DILocation(line: 5249, column: 16, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5249, column: 9)
!11062 = !DILocation(line: 5249, column: 36, scope: !11061)
!11063 = !DILocation(line: 5249, column: 60, scope: !11061)
!11064 = !DILocation(line: 5249, column: 19, scope: !11061)
!11065 = !DILocation(line: 5249, column: 69, scope: !11061)
!11066 = !DILocation(line: 5249, column: 9, scope: !10646)
!11067 = !DILocation(line: 5253, column: 9, scope: !10646)
!11068 = !DILocation(line: 5254, column: 9, scope: !10646)
!11069 = !DILocation(line: 5255, column: 9, scope: !10646)
!11070 = !DILocation(line: 5261, column: 9, scope: !10646)
!11071 = !DILocation(line: 5261, column: 57, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5261, column: 9)
!11073 = !DILocation(line: 5261, column: 48, scope: !11072)
!11074 = !DILocation(line: 5261, column: 47, scope: !11072)
!11075 = !DILocation(line: 5261, column: 26, scope: !11072)
!11076 = !DILocation(line: 5261, column: 16, scope: !11072)
!11077 = !DILocation(line: 0, scope: !11072)
!11078 = !DILocation(line: 5263, column: 10, scope: !10699)
!11079 = !DILocation(line: 5263, column: 19, scope: !10698)
!11080 = !DILocation(line: 5263, column: 5, scope: !10699)
!11081 = !DILocation(line: 5264, column: 30, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 5264, column: 13)
!11083 = !DILocation(line: 5264, column: 54, scope: !11082)
!11084 = !DILocation(line: 5264, column: 13, scope: !11082)
!11085 = !DILocation(line: 5264, column: 63, scope: !11082)
!11086 = !DILocation(line: 5264, column: 13, scope: !10697)
!11087 = !DILocation(line: 0, scope: !10696)
!11088 = !DILocation(line: 5268, column: 23, scope: !10696)
!11089 = !DILocation(line: 5268, column: 26, scope: !10696)
!11090 = !DILocation(line: 5268, column: 34, scope: !10696)
!11091 = !DILocation(line: 5268, column: 42, scope: !10696)
!11092 = !DILocation(line: 5269, column: 21, scope: !10696)
!11093 = !DILocation(line: 5269, column: 24, scope: !10696)
!11094 = !DILocation(line: 5269, column: 32, scope: !10696)
!11095 = !DILocation(line: 5269, column: 40, scope: !10696)
!11096 = !DILocation(line: 5270, column: 13, scope: !10696)
!11097 = !DILocation(line: 5270, column: 21, scope: !10696)
!11098 = !DILocation(line: 5268, column: 13, scope: !10697)
!11099 = !DILocation(line: 5273, column: 18, scope: !10694)
!11100 = !DILocation(line: 5273, column: 17, scope: !10695)
!11101 = !DILocation(line: 5274, column: 31, scope: !10693)
!11102 = !DILocation(line: 5276, column: 30, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 5276, column: 21)
!11104 = !DILocation(line: 5276, column: 33, scope: !11103)
!11105 = !DILocation(line: 5276, column: 41, scope: !11103)
!11106 = !DILocation(line: 5276, column: 21, scope: !10693)
!11107 = !DILocation(line: 5277, column: 33, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 5277, column: 26)
!11109 = !DILocation(line: 5277, column: 36, scope: !11108)
!11110 = !DILocation(line: 5277, column: 44, scope: !11108)
!11111 = !DILocation(line: 5277, column: 26, scope: !11103)
!11112 = !DILocation(line: 5275, column: 23, scope: !10693)
!11113 = !DILocation(line: 0, scope: !11108)
!11114 = !DILocation(line: 5282, column: 27, scope: !10693)
!11115 = !DILocation(line: 5281, column: 17, scope: !10693)
!11116 = !DILocation(line: 5283, column: 13, scope: !10693)
!11117 = !DILocation(line: 5285, column: 17, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 5284, column: 16)
!11119 = !DILocation(line: 5287, column: 29, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 5285, column: 24)
!11121 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 5285, column: 17)
!11122 = !DILocation(line: 5287, column: 32, scope: !11120)
!11123 = !DILocation(line: 5287, column: 17, scope: !11120)
!11124 = !DILocation(line: 5288, column: 38, scope: !11120)
!11125 = !DILocation(line: 5288, column: 41, scope: !11120)
!11126 = !DILocation(line: 5288, column: 17, scope: !11120)
!11127 = !DILocation(line: 5289, column: 29, scope: !11120)
!11128 = !DILocation(line: 5292, column: 38, scope: !11120)
!11129 = !DILocation(line: 5292, column: 32, scope: !11120)
!11130 = !DILocation(line: 5292, column: 17, scope: !11120)
!11131 = !DILocation(line: 5292, column: 36, scope: !11120)
!11132 = !DILocation(line: 5293, column: 30, scope: !11120)
!11133 = !DILocation(line: 5293, column: 17, scope: !11120)
!11134 = !DILocation(line: 5294, column: 13, scope: !11120)
!11135 = !DILocation(line: 0, scope: !11120)
!11136 = !DILocation(line: 5263, column: 32, scope: !10698)
!11137 = !DILocation(line: 5263, column: 5, scope: !10698)
!11138 = distinct !{!11138, !11080, !11139}
!11139 = !DILocation(line: 5296, column: 5, scope: !10699)
!11140 = !DILocation(line: 5301, column: 10, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5301, column: 9)
!11142 = !DILocation(line: 0, scope: !10698)
!11143 = !DILocation(line: 5301, column: 28, scope: !11141)
!11144 = !DILocation(line: 5301, column: 49, scope: !11141)
!11145 = !DILocation(line: 5301, column: 57, scope: !11141)
!11146 = !DILocation(line: 5302, column: 9, scope: !11141)
!11147 = !DILocation(line: 5302, column: 15, scope: !11141)
!11148 = !DILocation(line: 5301, column: 9, scope: !10646)
!11149 = !DILocation(line: 5310, column: 9, scope: !10646)
!11150 = !DILocation(line: 5310, column: 45, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5310, column: 9)
!11152 = !DILocation(line: 5310, column: 42, scope: !11151)
!11153 = !DILocation(line: 5310, column: 53, scope: !11151)
!11154 = !DILocation(line: 5310, column: 23, scope: !11151)
!11155 = !DILocation(line: 5312, column: 9, scope: !10646)
!11156 = !DILocation(line: 5316, column: 21, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11158, file: !3, line: 5316, column: 13)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 5312, column: 16)
!11159 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5312, column: 9)
!11160 = !DILocation(line: 5316, column: 13, scope: !11158)
!11161 = !DILocation(line: 5317, column: 26, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11157, file: !3, line: 5316, column: 26)
!11163 = !DILocation(line: 5317, column: 24, scope: !11162)
!11164 = !DILocation(line: 5319, column: 13, scope: !11162)
!11165 = !DILocation(line: 5321, column: 9, scope: !11162)
!11166 = !DILocation(line: 5323, column: 13, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11157, file: !3, line: 5321, column: 16)
!11168 = !DILocation(line: 5326, column: 5, scope: !11158)
!11169 = !DILocation(line: 0, scope: !11158)
!11170 = !DILocation(line: 0, scope: !11162)
!11171 = !DILocation(line: 5331, column: 28, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5331, column: 9)
!11173 = !DILocation(line: 5336, column: 9, scope: !10646)
!11174 = !DILocation(line: 5343, column: 25, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11176, file: !3, line: 5336, column: 29)
!11176 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5336, column: 9)
!11177 = !DILocation(line: 5343, column: 23, scope: !11175)
!11178 = !DILocation(line: 5344, column: 27, scope: !11175)
!11179 = !DILocation(line: 5344, column: 9, scope: !11175)
!11180 = !DILocation(line: 5345, column: 5, scope: !11175)
!11181 = !DILocation(line: 5350, column: 27, scope: !10646)
!11182 = !DILocation(line: 5350, column: 5, scope: !10646)
!11183 = !DILocation(line: 5351, column: 5, scope: !10646)
!11184 = !DILocation(line: 5351, column: 16, scope: !10646)
!11185 = !DILocation(line: 5351, column: 27, scope: !10646)
!11186 = !DILocation(line: 5352, column: 5, scope: !10646)
!11187 = !DILocation(line: 0, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 5331, column: 45)
!11189 = !DILocation(line: 5360, column: 27, scope: !10646)
!11190 = !DILocation(line: 5360, column: 5, scope: !10646)
!11191 = !DILocation(line: 5366, column: 10, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5366, column: 9)
!11193 = !DILocation(line: 5366, column: 9, scope: !10646)
!11194 = !DILocation(line: 5366, column: 48, scope: !11192)
!11195 = !DILocation(line: 5366, column: 45, scope: !11192)
!11196 = !DILocation(line: 5366, column: 56, scope: !11192)
!11197 = !DILocation(line: 5366, column: 26, scope: !11192)
!11198 = !DILocation(line: 5367, column: 5, scope: !10646)
!11199 = !DILocation(line: 5372, column: 9, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 5372, column: 9)
!11201 = !DILocation(line: 5372, column: 15, scope: !11200)
!11202 = !DILocation(line: 5372, column: 31, scope: !11200)
!11203 = !DILocation(line: 5372, column: 28, scope: !11200)
!11204 = !DILocation(line: 5374, column: 9, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !3, line: 5372, column: 42)
!11206 = !DILocation(line: 5378, column: 5, scope: !10646)
!11207 = !DILocation(line: 5378, column: 16, scope: !10646)
!11208 = !DILocation(line: 5380, column: 22, scope: !10646)
!11209 = !DILocation(line: 5382, column: 13, scope: !10646)
!11210 = !DILocation(line: 5380, column: 9, scope: !10646)
!11211 = !DILocation(line: 5379, column: 5, scope: !10646)
!11212 = !DILocation(line: 5383, column: 5, scope: !10646)
!11213 = !DILocation(line: 0, scope: !10858)
!11214 = !DILocation(line: 5384, column: 1, scope: !10646)
!11215 = distinct !DISubprogram(name: "askingCommand", scope: !3, file: !3, line: 5394, type: !8263, isLocal: false, isDefinition: true, scopeLine: 5394, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11216)
!11216 = !{!11217}
!11217 = !DILocalVariable(name: "c", arg: 1, scope: !11215, file: !3, line: 5394, type: !8228)
!11218 = !DILocation(line: 5394, column: 28, scope: !11215)
!11219 = !DILocation(line: 5395, column: 16, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 5395, column: 9)
!11221 = !DILocation(line: 5395, column: 32, scope: !11220)
!11222 = !DILocation(line: 5395, column: 9, scope: !11215)
!11223 = !DILocation(line: 5396, column: 9, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 5395, column: 38)
!11225 = !DILocation(line: 5397, column: 9, scope: !11224)
!11226 = !DILocation(line: 5399, column: 8, scope: !11215)
!11227 = !DILocation(line: 5399, column: 14, scope: !11215)
!11228 = !{!8638, !709, i64 160}
!11229 = !DILocation(line: 5400, column: 23, scope: !11215)
!11230 = !DILocation(line: 5400, column: 5, scope: !11215)
!11231 = !DILocation(line: 5401, column: 1, scope: !11215)
!11232 = !DILocation(line: 0, scope: !11224)
!11233 = distinct !DISubprogram(name: "readonlyCommand", scope: !3, file: !3, line: 5406, type: !8263, isLocal: false, isDefinition: true, scopeLine: 5406, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11234)
!11234 = !{!11235}
!11235 = !DILocalVariable(name: "c", arg: 1, scope: !11233, file: !3, line: 5406, type: !8228)
!11236 = !DILocation(line: 5406, column: 30, scope: !11233)
!11237 = !DILocation(line: 5407, column: 16, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11233, file: !3, line: 5407, column: 9)
!11239 = !DILocation(line: 5407, column: 32, scope: !11238)
!11240 = !DILocation(line: 5407, column: 9, scope: !11233)
!11241 = !DILocation(line: 5408, column: 9, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11238, file: !3, line: 5407, column: 38)
!11243 = !DILocation(line: 5409, column: 9, scope: !11242)
!11244 = !DILocation(line: 5411, column: 8, scope: !11233)
!11245 = !DILocation(line: 5411, column: 14, scope: !11233)
!11246 = !DILocation(line: 5412, column: 23, scope: !11233)
!11247 = !DILocation(line: 5412, column: 5, scope: !11233)
!11248 = !DILocation(line: 5413, column: 1, scope: !11233)
!11249 = !DILocation(line: 0, scope: !11242)
!11250 = distinct !DISubprogram(name: "readwriteCommand", scope: !3, file: !3, line: 5416, type: !8263, isLocal: false, isDefinition: true, scopeLine: 5416, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11251)
!11251 = !{!11252}
!11252 = !DILocalVariable(name: "c", arg: 1, scope: !11250, file: !3, line: 5416, type: !8228)
!11253 = !DILocation(line: 5416, column: 31, scope: !11250)
!11254 = !DILocation(line: 5417, column: 8, scope: !11250)
!11255 = !DILocation(line: 5417, column: 14, scope: !11250)
!11256 = !DILocation(line: 5418, column: 23, scope: !11250)
!11257 = !DILocation(line: 5418, column: 5, scope: !11250)
!11258 = !DILocation(line: 5419, column: 1, scope: !11250)
!11259 = distinct !DISubprogram(name: "getNodeByQuery", scope: !3, file: !3, line: 5453, type: !11260, isLocal: false, isDefinition: true, scopeLine: 5453, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11262)
!11260 = !DISubroutineType(types: !11261)
!11261 = !{!378, !8228, !8256, !8254, !177, !8273, !8273}
!11262 = !{!11263, !11264, !11265, !11266, !11267, !11268, !11269, !11270, !11271, !11272, !11274, !11275, !11276, !11277, !11278, !11279, !11280, !11281, !11285, !11286, !11287, !11288, !11289, !11290, !11294}
!11263 = !DILocalVariable(name: "c", arg: 1, scope: !11259, file: !3, line: 5453, type: !8228)
!11264 = !DILocalVariable(name: "cmd", arg: 2, scope: !11259, file: !3, line: 5453, type: !8256)
!11265 = !DILocalVariable(name: "argv", arg: 3, scope: !11259, file: !3, line: 5453, type: !8254)
!11266 = !DILocalVariable(name: "argc", arg: 4, scope: !11259, file: !3, line: 5453, type: !177)
!11267 = !DILocalVariable(name: "hashslot", arg: 5, scope: !11259, file: !3, line: 5453, type: !8273)
!11268 = !DILocalVariable(name: "error_code", arg: 6, scope: !11259, file: !3, line: 5453, type: !8273)
!11269 = !DILocalVariable(name: "n", scope: !11259, file: !3, line: 5454, type: !378)
!11270 = !DILocalVariable(name: "firstkey", scope: !11259, file: !3, line: 5455, type: !4388)
!11271 = !DILocalVariable(name: "multiple_keys", scope: !11259, file: !3, line: 5456, type: !177)
!11272 = !DILocalVariable(name: "ms", scope: !11259, file: !3, line: 5457, type: !11273)
!11273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8310, size: 64)
!11274 = !DILocalVariable(name: "_ms", scope: !11259, file: !3, line: 5457, type: !8310)
!11275 = !DILocalVariable(name: "mc", scope: !11259, file: !3, line: 5458, type: !8315)
!11276 = !DILocalVariable(name: "i", scope: !11259, file: !3, line: 5459, type: !177)
!11277 = !DILocalVariable(name: "slot", scope: !11259, file: !3, line: 5459, type: !177)
!11278 = !DILocalVariable(name: "migrating_slot", scope: !11259, file: !3, line: 5459, type: !177)
!11279 = !DILocalVariable(name: "importing_slot", scope: !11259, file: !3, line: 5459, type: !177)
!11280 = !DILocalVariable(name: "missing_keys", scope: !11259, file: !3, line: 5459, type: !177)
!11281 = !DILocalVariable(name: "mcmd", scope: !11282, file: !3, line: 5494, type: !8256)
!11282 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 5493, column: 37)
!11283 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 5493, column: 5)
!11284 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5493, column: 5)
!11285 = !DILocalVariable(name: "margv", scope: !11282, file: !3, line: 5495, type: !8254)
!11286 = !DILocalVariable(name: "margc", scope: !11282, file: !3, line: 5496, type: !177)
!11287 = !DILocalVariable(name: "keyindex", scope: !11282, file: !3, line: 5496, type: !8273)
!11288 = !DILocalVariable(name: "numkeys", scope: !11282, file: !3, line: 5496, type: !177)
!11289 = !DILocalVariable(name: "j", scope: !11282, file: !3, line: 5496, type: !177)
!11290 = !DILocalVariable(name: "thiskey", scope: !11291, file: !3, line: 5504, type: !4388)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 5503, column: 39)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 5503, column: 9)
!11293 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 5503, column: 9)
!11294 = !DILocalVariable(name: "thisslot", scope: !11291, file: !3, line: 5505, type: !177)
!11295 = !DILocation(line: 5453, column: 37, scope: !11259)
!11296 = !DILocation(line: 5453, column: 61, scope: !11259)
!11297 = !DILocation(line: 5453, column: 73, scope: !11259)
!11298 = !DILocation(line: 5453, column: 83, scope: !11259)
!11299 = !DILocation(line: 5453, column: 94, scope: !11259)
!11300 = !DILocation(line: 5453, column: 109, scope: !11259)
!11301 = !DILocation(line: 5454, column: 18, scope: !11259)
!11302 = !DILocation(line: 5455, column: 11, scope: !11259)
!11303 = !DILocation(line: 5456, column: 9, scope: !11259)
!11304 = !DILocation(line: 5457, column: 5, scope: !11259)
!11305 = !DILocation(line: 5458, column: 5, scope: !11259)
!11306 = !DILocation(line: 5459, column: 12, scope: !11259)
!11307 = !DILocation(line: 5459, column: 22, scope: !11259)
!11308 = !DILocation(line: 5459, column: 42, scope: !11259)
!11309 = !DILocation(line: 5459, column: 62, scope: !11259)
!11310 = !DILocation(line: 5462, column: 16, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5462, column: 9)
!11312 = !DILocation(line: 5462, column: 37, scope: !11311)
!11313 = !DILocation(line: 5462, column: 9, scope: !11259)
!11314 = !DILocation(line: 5463, column: 16, scope: !11311)
!11315 = !DILocation(line: 5463, column: 9, scope: !11311)
!11316 = !DILocation(line: 5466, column: 9, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5466, column: 9)
!11318 = !DILocation(line: 5466, column: 9, scope: !11259)
!11319 = !DILocation(line: 5466, column: 33, scope: !11317)
!11320 = !DILocation(line: 5466, column: 21, scope: !11317)
!11321 = !DILocation(line: 5474, column: 14, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5474, column: 9)
!11323 = !{!11324, !761, i64 8}
!11324 = !{!"redisCommand", !761, i64 0, !761, i64 8, !709, i64 16, !761, i64 24, !709, i64 32, !761, i64 40, !709, i64 48, !709, i64 52, !709, i64 56, !790, i64 64, !790, i64 72}
!11325 = !DILocation(line: 5474, column: 19, scope: !11322)
!11326 = !DILocation(line: 5474, column: 9, scope: !11259)
!11327 = !DILocation(line: 5477, column: 18, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 5477, column: 13)
!11329 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 5474, column: 35)
!11330 = !DILocation(line: 5477, column: 24, scope: !11328)
!11331 = !DILocation(line: 5477, column: 13, scope: !11329)
!11332 = !DILocation(line: 5477, column: 48, scope: !11328)
!11333 = !DILocation(line: 5477, column: 41, scope: !11328)
!11334 = !DILocation(line: 5457, column: 17, scope: !11259)
!11335 = !DILocation(line: 5484, column: 13, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 5479, column: 12)
!11337 = !DILocation(line: 5484, column: 22, scope: !11336)
!11338 = !{!8639, !761, i64 0}
!11339 = !DILocation(line: 5485, column: 13, scope: !11336)
!11340 = !DILocation(line: 5485, column: 19, scope: !11336)
!11341 = !{!8639, !709, i64 8}
!11342 = !DILocation(line: 5486, column: 12, scope: !11336)
!11343 = !DILocation(line: 5486, column: 17, scope: !11336)
!11344 = !{!11345, !761, i64 0}
!11345 = !{!"multiCmd", !761, i64 0, !709, i64 8, !761, i64 16}
!11346 = !DILocation(line: 5487, column: 12, scope: !11336)
!11347 = !DILocation(line: 5487, column: 17, scope: !11336)
!11348 = !{!11345, !709, i64 8}
!11349 = !DILocation(line: 5488, column: 12, scope: !11336)
!11350 = !DILocation(line: 5488, column: 16, scope: !11336)
!11351 = !{!11345, !761, i64 16}
!11352 = !DILocation(line: 5459, column: 9, scope: !11259)
!11353 = !DILocation(line: 5493, column: 10, scope: !11284)
!11354 = !DILocation(line: 5493, column: 5, scope: !11284)
!11355 = !DILocation(line: 5478, column: 18, scope: !11329)
!11356 = !DILocation(line: 5479, column: 5, scope: !11329)
!11357 = !DILocation(line: 5493, column: 25, scope: !11283)
!11358 = !DILocation(line: 5493, column: 19, scope: !11283)
!11359 = !DILocation(line: 5568, column: 9, scope: !11259)
!11360 = !DILocation(line: 5496, column: 9, scope: !11282)
!11361 = !DILocation(line: 5498, column: 20, scope: !11282)
!11362 = !DILocation(line: 5498, column: 32, scope: !11282)
!11363 = !DILocation(line: 5494, column: 30, scope: !11282)
!11364 = !DILocation(line: 5499, column: 33, scope: !11282)
!11365 = !DILocation(line: 5496, column: 13, scope: !11282)
!11366 = !DILocation(line: 5500, column: 33, scope: !11282)
!11367 = !DILocation(line: 5495, column: 16, scope: !11282)
!11368 = !DILocation(line: 5496, column: 31, scope: !11282)
!11369 = !DILocation(line: 5502, column: 20, scope: !11282)
!11370 = !DILocation(line: 5496, column: 21, scope: !11282)
!11371 = !DILocation(line: 5496, column: 40, scope: !11282)
!11372 = !DILocation(line: 5503, column: 14, scope: !11293)
!11373 = !DILocation(line: 5503, column: 25, scope: !11292)
!11374 = !DILocation(line: 5503, column: 23, scope: !11292)
!11375 = !DILocation(line: 5503, column: 9, scope: !11293)
!11376 = !DILocation(line: 5504, column: 35, scope: !11291)
!11377 = !DILocation(line: 5504, column: 29, scope: !11291)
!11378 = !DILocation(line: 5504, column: 19, scope: !11291)
!11379 = !DILocation(line: 5505, column: 56, scope: !11291)
!11380 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !11381)
!11381 = distinct !DILocation(line: 5506, column: 40, scope: !11291)
!11382 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !11381)
!11383 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !11381)
!11384 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !11381)
!11385 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !11381)
!11386 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !11381)
!11387 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !11381)
!11388 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !11381)
!11389 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !11381)
!11390 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !11381)
!11391 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !11381)
!11392 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !11381)
!11393 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !11381)
!11394 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !11381)
!11395 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !11381)
!11396 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !11381)
!11397 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !11381)
!11398 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !11381)
!11399 = !DILocation(line: 0, scope: !1496, inlinedAt: !11381)
!11400 = !DILocation(line: 0, scope: !11291)
!11401 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !11381)
!11402 = !DILocation(line: 5506, column: 40, scope: !11291)
!11403 = !DILocation(line: 5505, column: 28, scope: !11291)
!11404 = !DILocation(line: 5505, column: 17, scope: !11291)
!11405 = !DILocation(line: 5508, column: 26, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 5508, column: 17)
!11407 = !DILocation(line: 5508, column: 17, scope: !11291)
!11408 = !DILocation(line: 5513, column: 28, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 5508, column: 35)
!11410 = !DILocation(line: 5513, column: 21, scope: !11409)
!11411 = !DILocation(line: 5519, column: 23, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 5519, column: 21)
!11413 = !DILocation(line: 5519, column: 21, scope: !11409)
!11414 = !DILocation(line: 5520, column: 21, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11412, file: !3, line: 5519, column: 32)
!11416 = !DILocation(line: 5521, column: 25, scope: !11415)
!11417 = !DILocation(line: 5522, column: 37, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 5521, column: 25)
!11419 = !DILocation(line: 5522, column: 25, scope: !11418)
!11420 = !DILocation(line: 5531, column: 26, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 5531, column: 21)
!11422 = !DILocation(line: 5531, column: 23, scope: !11421)
!11423 = !DILocation(line: 5531, column: 33, scope: !11421)
!11424 = !DILocation(line: 5532, column: 21, scope: !11421)
!11425 = !DILocation(line: 5532, column: 62, scope: !11421)
!11426 = !DILocation(line: 5531, column: 21, scope: !11409)
!11427 = !DILocation(line: 5535, column: 17, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 5533, column: 17)
!11429 = !DILocation(line: 5535, column: 28, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 5535, column: 28)
!11431 = !DILocation(line: 5535, column: 71, scope: !11430)
!11432 = !DILocation(line: 5535, column: 28, scope: !11421)
!11433 = !DILocation(line: 5537, column: 17, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 5535, column: 80)
!11435 = !DILocation(line: 5541, column: 22, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !3, line: 5541, column: 21)
!11437 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 5538, column: 20)
!11438 = !DILocation(line: 5541, column: 21, scope: !11437)
!11439 = !DILocation(line: 5542, column: 30, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !3, line: 5542, column: 25)
!11441 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 5541, column: 60)
!11442 = !DILocation(line: 5542, column: 25, scope: !11441)
!11443 = !DILocation(line: 5544, column: 25, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 5542, column: 43)
!11445 = !DILocation(line: 5545, column: 29, scope: !11444)
!11446 = !DILocation(line: 5546, column: 41, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 5545, column: 29)
!11448 = !DILocation(line: 5546, column: 29, scope: !11447)
!11449 = !DILocation(line: 5553, column: 17, scope: !11441)
!11450 = !DILocation(line: 0, scope: !11259)
!11451 = !DILocation(line: 0, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 5548, column: 28)
!11453 = !DILocation(line: 5557, column: 33, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 5557, column: 17)
!11455 = !DILocation(line: 5558, column: 39, scope: !11454)
!11456 = !DILocation(line: 5558, column: 17, scope: !11454)
!11457 = !DILocation(line: 5558, column: 54, scope: !11454)
!11458 = !DILocation(line: 5557, column: 17, scope: !11291)
!11459 = !DILocation(line: 5560, column: 29, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11454, file: !3, line: 5559, column: 13)
!11461 = !DILocation(line: 5561, column: 13, scope: !11460)
!11462 = !DILocation(line: 5562, column: 9, scope: !11292)
!11463 = !DILocation(line: 5503, column: 35, scope: !11292)
!11464 = !DILocation(line: 5503, column: 9, scope: !11292)
!11465 = distinct !{!11465, !11375, !11466}
!11466 = !DILocation(line: 5562, column: 9, scope: !11293)
!11467 = !DILocation(line: 0, scope: !11444)
!11468 = !DILocation(line: 5564, column: 5, scope: !11283)
!11469 = !DILocation(line: 0, scope: !11409)
!11470 = !DILocation(line: 5563, column: 9, scope: !11282)
!11471 = !DILocation(line: 5493, column: 33, scope: !11283)
!11472 = !DILocation(line: 5493, column: 5, scope: !11283)
!11473 = distinct !{!11473, !11354, !11474}
!11474 = !DILocation(line: 5564, column: 5, scope: !11284)
!11475 = !DILocation(line: 5568, column: 11, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5568, column: 9)
!11477 = !DILocation(line: 5568, column: 27, scope: !11476)
!11478 = !DILocation(line: 5568, column: 20, scope: !11476)
!11479 = !DILocation(line: 5571, column: 16, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5571, column: 9)
!11481 = !DILocation(line: 5571, column: 25, scope: !11480)
!11482 = !DILocation(line: 5571, column: 31, scope: !11480)
!11483 = !DILocation(line: 5571, column: 9, scope: !11259)
!11484 = !DILocation(line: 5572, column: 13, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 5571, column: 46)
!11486 = !DILocation(line: 5572, column: 37, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11485, file: !3, line: 5572, column: 13)
!11488 = !DILocation(line: 5572, column: 25, scope: !11487)
!11489 = !DILocation(line: 5577, column: 9, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5577, column: 9)
!11491 = !DILocation(line: 5577, column: 9, scope: !11259)
!11492 = !DILocation(line: 5577, column: 29, scope: !11490)
!11493 = !DILocation(line: 5577, column: 19, scope: !11490)
!11494 = !DILocation(line: 5582, column: 10, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5582, column: 9)
!11496 = !DILocation(line: 5582, column: 28, scope: !11495)
!11497 = !DILocation(line: 5582, column: 25, scope: !11495)
!11498 = !DILocation(line: 5582, column: 52, scope: !11495)
!11499 = !DILocation(line: 5582, column: 57, scope: !11495)
!11500 = !DILocation(line: 5582, column: 9, scope: !11259)
!11501 = !DILocation(line: 5583, column: 16, scope: !11495)
!11502 = !DILocation(line: 5583, column: 9, scope: !11495)
!11503 = !DILocation(line: 5587, column: 27, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5587, column: 9)
!11505 = !DILocation(line: 5587, column: 24, scope: !11504)
!11506 = !DILocation(line: 0, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5596, column: 9)
!11508 = !DILocation(line: 5588, column: 13, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 5587, column: 41)
!11510 = !DILocation(line: 5588, column: 37, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 5588, column: 13)
!11512 = !DILocation(line: 5588, column: 25, scope: !11511)
!11513 = !DILocation(line: 5589, column: 16, scope: !11509)
!11514 = !DILocation(line: 5589, column: 9, scope: !11509)
!11515 = !DILocation(line: 5596, column: 24, scope: !11507)
!11516 = !DILocation(line: 5597, column: 19, scope: !11507)
!11517 = !DILocation(line: 5597, column: 35, scope: !11507)
!11518 = !DILocation(line: 5597, column: 43, scope: !11507)
!11519 = !{!11324, !709, i64 32}
!11520 = !DILocation(line: 5597, column: 49, scope: !11507)
!11521 = !DILocation(line: 5596, column: 9, scope: !11259)
!11522 = !DILocation(line: 5599, column: 13, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 5599, column: 13)
!11524 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 5598, column: 5)
!11525 = !DILocation(line: 5599, column: 27, scope: !11523)
!11526 = !DILocation(line: 5600, column: 17, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 5599, column: 44)
!11528 = !DILocation(line: 5600, column: 41, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 5600, column: 17)
!11530 = !DILocation(line: 5600, column: 29, scope: !11529)
!11531 = !DILocation(line: 5603, column: 20, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 5602, column: 16)
!11533 = !DILocation(line: 5603, column: 13, scope: !11532)
!11534 = !DILocation(line: 5610, column: 18, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5610, column: 9)
!11536 = !DILocation(line: 5610, column: 36, scope: !11535)
!11537 = !DILocation(line: 5611, column: 15, scope: !11535)
!11538 = !DILocation(line: 5611, column: 21, scope: !11535)
!11539 = !DILocation(line: 5611, column: 36, scope: !11535)
!11540 = !DILocation(line: 5611, column: 44, scope: !11535)
!11541 = !DILocation(line: 5611, column: 49, scope: !11535)
!11542 = !DILocation(line: 5611, column: 64, scope: !11535)
!11543 = !DILocation(line: 5612, column: 20, scope: !11535)
!11544 = !DILocation(line: 5612, column: 39, scope: !11535)
!11545 = !DILocation(line: 5613, column: 9, scope: !11535)
!11546 = !DILocation(line: 5613, column: 29, scope: !11535)
!11547 = !DILocation(line: 5614, column: 17, scope: !11535)
!11548 = !DILocation(line: 5614, column: 25, scope: !11535)
!11549 = !DILocation(line: 5610, column: 9, scope: !11259)
!11550 = !DILocation(line: 5621, column: 14, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11259, file: !3, line: 5621, column: 9)
!11552 = !DILocation(line: 5621, column: 11, scope: !11551)
!11553 = !DILocation(line: 5621, column: 21, scope: !11551)
!11554 = !DILocation(line: 5621, column: 48, scope: !11551)
!11555 = !DILocation(line: 5621, column: 36, scope: !11551)
!11556 = !DILocation(line: 0, scope: !11328)
!11557 = !DILocation(line: 5623, column: 1, scope: !11259)
!11558 = distinct !DISubprogram(name: "clusterRedirectClient", scope: !3, file: !3, line: 5632, type: !11559, isLocal: false, isDefinition: true, scopeLine: 5632, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11561)
!11559 = !DISubroutineType(types: !11560)
!11560 = !{null, !8228, !378, !177, !177}
!11561 = !{!11562, !11563, !11564, !11565}
!11562 = !DILocalVariable(name: "c", arg: 1, scope: !11558, file: !3, line: 5632, type: !8228)
!11563 = !DILocalVariable(name: "n", arg: 2, scope: !11558, file: !3, line: 5632, type: !378)
!11564 = !DILocalVariable(name: "hashslot", arg: 3, scope: !11558, file: !3, line: 5632, type: !177)
!11565 = !DILocalVariable(name: "error_code", arg: 4, scope: !11558, file: !3, line: 5632, type: !177)
!11566 = !DILocation(line: 5632, column: 36, scope: !11558)
!11567 = !DILocation(line: 5632, column: 52, scope: !11558)
!11568 = !DILocation(line: 5632, column: 59, scope: !11558)
!11569 = !DILocation(line: 5632, column: 73, scope: !11558)
!11570 = !DILocation(line: 5633, column: 20, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 5633, column: 9)
!11572 = !DILocation(line: 5633, column: 9, scope: !11558)
!11573 = !DILocation(line: 5634, column: 23, scope: !11574)
!11574 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 5633, column: 49)
!11575 = !DILocation(line: 5634, column: 9, scope: !11574)
!11576 = !DILocation(line: 5635, column: 5, scope: !11574)
!11577 = !DILocation(line: 5635, column: 27, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 5635, column: 16)
!11579 = !DILocation(line: 5635, column: 16, scope: !11571)
!11580 = !DILocation(line: 5639, column: 23, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 5635, column: 54)
!11582 = !DILocation(line: 5639, column: 9, scope: !11581)
!11583 = !DILocation(line: 5640, column: 5, scope: !11581)
!11584 = !DILocation(line: 5640, column: 27, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 5640, column: 16)
!11586 = !DILocation(line: 5640, column: 16, scope: !11578)
!11587 = !DILocation(line: 5641, column: 23, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5640, column: 56)
!11589 = !DILocation(line: 5641, column: 9, scope: !11588)
!11590 = !DILocation(line: 5642, column: 5, scope: !11588)
!11591 = !DILocation(line: 5642, column: 27, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 5642, column: 16)
!11593 = !DILocation(line: 5642, column: 16, scope: !11585)
!11594 = !DILocation(line: 5643, column: 23, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 5642, column: 58)
!11596 = !DILocation(line: 5643, column: 9, scope: !11595)
!11597 = !DILocation(line: 5644, column: 5, scope: !11595)
!11598 = !DILocation(line: 5644, column: 50, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 5644, column: 16)
!11600 = !DILocation(line: 5645, column: 27, scope: !11599)
!11601 = !DILocation(line: 5647, column: 36, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 5646, column: 5)
!11603 = !DILocation(line: 5649, column: 13, scope: !11602)
!11604 = !DILocation(line: 5650, column: 22, scope: !11602)
!11605 = !DILocation(line: 5650, column: 31, scope: !11602)
!11606 = !DILocation(line: 5647, column: 23, scope: !11602)
!11607 = !DILocation(line: 5647, column: 9, scope: !11602)
!11608 = !DILocation(line: 5652, column: 9, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 5651, column: 12)
!11610 = !DILocation(line: 5654, column: 1, scope: !11558)
!11611 = distinct !DISubprogram(name: "clusterRedirectBlockedClientIfNeeded", scope: !3, file: !3, line: 5667, type: !11612, isLocal: false, isDefinition: true, scopeLine: 5667, flags: DIFlagPrototyped, isOptimized: true, unit: !2, retainedNodes: !11614)
!11612 = !DISubroutineType(types: !11613)
!11613 = !{!177, !8228}
!11614 = !{!11615, !11616, !11619, !11620, !11623, !11624}
!11615 = !DILocalVariable(name: "c", arg: 1, scope: !11611, file: !3, line: 5667, type: !8228)
!11616 = !DILocalVariable(name: "de", scope: !11617, file: !3, line: 5673, type: !340)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !3, line: 5672, column: 5)
!11618 = distinct !DILexicalBlock(scope: !11611, file: !3, line: 5668, column: 9)
!11619 = !DILocalVariable(name: "di", scope: !11617, file: !3, line: 5674, type: !297)
!11620 = !DILocalVariable(name: "key", scope: !11621, file: !3, line: 5685, type: !4388)
!11621 = distinct !DILexicalBlock(scope: !11622, file: !3, line: 5684, column: 42)
!11622 = distinct !DILexicalBlock(scope: !11617, file: !3, line: 5684, column: 13)
!11623 = !DILocalVariable(name: "slot", scope: !11621, file: !3, line: 5686, type: !177)
!11624 = !DILocalVariable(name: "node", scope: !11621, file: !3, line: 5687, type: !378)
!11625 = !DILocation(line: 5667, column: 50, scope: !11611)
!11626 = !DILocation(line: 5668, column: 12, scope: !11618)
!11627 = !DILocation(line: 5668, column: 18, scope: !11618)
!11628 = !DILocation(line: 5668, column: 35, scope: !11618)
!11629 = !DILocation(line: 5669, column: 13, scope: !11618)
!11630 = !{!8638, !709, i64 384}
!11631 = !DILocation(line: 5669, column: 19, scope: !11618)
!11632 = !DILocation(line: 5669, column: 35, scope: !11618)
!11633 = !DILocation(line: 5670, column: 19, scope: !11618)
!11634 = !DILocation(line: 5670, column: 35, scope: !11618)
!11635 = !DILocation(line: 5671, column: 19, scope: !11618)
!11636 = !DILocation(line: 5668, column: 9, scope: !11611)
!11637 = !DILocation(line: 5677, column: 20, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11617, file: !3, line: 5677, column: 13)
!11639 = !DILocation(line: 5677, column: 29, scope: !11638)
!11640 = !DILocation(line: 5677, column: 35, scope: !11638)
!11641 = !DILocation(line: 5677, column: 13, scope: !11617)
!11642 = !DILocation(line: 5632, column: 36, scope: !11558, inlinedAt: !11643)
!11643 = distinct !DILocation(line: 5678, column: 13, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 5677, column: 52)
!11645 = !DILocation(line: 5632, column: 52, scope: !11558, inlinedAt: !11643)
!11646 = !DILocation(line: 5632, column: 59, scope: !11558, inlinedAt: !11643)
!11647 = !DILocation(line: 5632, column: 73, scope: !11558, inlinedAt: !11643)
!11648 = !DILocation(line: 5633, column: 9, scope: !11558, inlinedAt: !11643)
!11649 = !DILocation(line: 5635, column: 16, scope: !11571, inlinedAt: !11643)
!11650 = !DILocation(line: 5640, column: 16, scope: !11578, inlinedAt: !11643)
!11651 = !DILocation(line: 5641, column: 23, scope: !11588, inlinedAt: !11643)
!11652 = !DILocation(line: 5641, column: 9, scope: !11588, inlinedAt: !11643)
!11653 = !DILocation(line: 5642, column: 5, scope: !11588, inlinedAt: !11643)
!11654 = !DILocation(line: 5679, column: 13, scope: !11644)
!11655 = !DILocation(line: 5683, column: 38, scope: !11617)
!11656 = !{!8638, !761, i64 400}
!11657 = !DILocation(line: 5683, column: 14, scope: !11617)
!11658 = !DILocation(line: 5674, column: 23, scope: !11617)
!11659 = !DILocation(line: 5684, column: 19, scope: !11622)
!11660 = !DILocation(line: 5673, column: 20, scope: !11617)
!11661 = !DILocation(line: 5684, column: 33, scope: !11622)
!11662 = !DILocation(line: 5684, column: 13, scope: !11617)
!11663 = !DILocation(line: 5685, column: 25, scope: !11621)
!11664 = !DILocation(line: 5685, column: 19, scope: !11621)
!11665 = !DILocation(line: 5686, column: 48, scope: !11621)
!11666 = !DILocation(line: 87, column: 39, scope: !1483, inlinedAt: !11667)
!11667 = distinct !DILocation(line: 5686, column: 53, scope: !11621)
!11668 = !DILocation(line: 88, column: 27, scope: !1483, inlinedAt: !11667)
!11669 = !DILocation(line: 88, column: 19, scope: !1483, inlinedAt: !11667)
!11670 = !DILocation(line: 89, column: 5, scope: !1483, inlinedAt: !11667)
!11671 = !DILocation(line: 91, column: 20, scope: !1496, inlinedAt: !11667)
!11672 = !DILocation(line: 91, column: 13, scope: !1496, inlinedAt: !11667)
!11673 = !DILocation(line: 93, column: 20, scope: !1496, inlinedAt: !11667)
!11674 = !DILocation(line: 93, column: 34, scope: !1496, inlinedAt: !11667)
!11675 = !DILocation(line: 93, column: 13, scope: !1496, inlinedAt: !11667)
!11676 = !DILocation(line: 95, column: 20, scope: !1496, inlinedAt: !11667)
!11677 = !DILocation(line: 95, column: 35, scope: !1496, inlinedAt: !11667)
!11678 = !DILocation(line: 95, column: 13, scope: !1496, inlinedAt: !11667)
!11679 = !DILocation(line: 97, column: 20, scope: !1496, inlinedAt: !11667)
!11680 = !DILocation(line: 97, column: 35, scope: !1496, inlinedAt: !11667)
!11681 = !DILocation(line: 97, column: 13, scope: !1496, inlinedAt: !11667)
!11682 = !DILocation(line: 99, column: 20, scope: !1496, inlinedAt: !11667)
!11683 = !DILocation(line: 99, column: 35, scope: !1496, inlinedAt: !11667)
!11684 = !DILocation(line: 99, column: 13, scope: !1496, inlinedAt: !11667)
!11685 = !DILocation(line: 0, scope: !1496, inlinedAt: !11667)
!11686 = !DILocation(line: 0, scope: !11621)
!11687 = !DILocation(line: 102, column: 1, scope: !1483, inlinedAt: !11667)
!11688 = !DILocation(line: 5686, column: 53, scope: !11621)
!11689 = !DILocation(line: 5686, column: 24, scope: !11621)
!11690 = !DILocation(line: 5686, column: 17, scope: !11621)
!11691 = !DILocation(line: 5687, column: 40, scope: !11621)
!11692 = !DILocation(line: 5687, column: 33, scope: !11621)
!11693 = !DILocation(line: 5687, column: 26, scope: !11621)
!11694 = !DILocation(line: 5692, column: 25, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11621, file: !3, line: 5692, column: 17)
!11696 = !DILocation(line: 5692, column: 22, scope: !11695)
!11697 = !DILocation(line: 5692, column: 32, scope: !11695)
!11698 = !DILocation(line: 5693, column: 17, scope: !11695)
!11699 = !DILocation(line: 5693, column: 60, scope: !11695)
!11700 = !DILocation(line: 5692, column: 17, scope: !11621)
!11701 = !DILocation(line: 5695, column: 26, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !3, line: 5695, column: 21)
!11703 = distinct !DILexicalBlock(scope: !11695, file: !3, line: 5694, column: 13)
!11704 = !DILocation(line: 5695, column: 21, scope: !11703)
!11705 = !DILocation(line: 5632, column: 36, scope: !11558, inlinedAt: !11706)
!11706 = distinct !DILocation(line: 5696, column: 21, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 5695, column: 35)
!11708 = !DILocation(line: 5632, column: 36, scope: !11558, inlinedAt: !11709)
!11709 = distinct !DILocation(line: 5699, column: 21, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11702, file: !3, line: 5698, column: 24)
!11711 = !DILocation(line: 5633, column: 9, scope: !11558, inlinedAt: !11706)
!11712 = !DILocation(line: 5635, column: 16, scope: !11571, inlinedAt: !11706)
!11713 = !DILocation(line: 5640, column: 16, scope: !11578, inlinedAt: !11706)
!11714 = !DILocation(line: 5642, column: 16, scope: !11585, inlinedAt: !11706)
!11715 = !DILocation(line: 5632, column: 52, scope: !11558, inlinedAt: !11706)
!11716 = !DILocation(line: 5632, column: 59, scope: !11558, inlinedAt: !11706)
!11717 = !DILocation(line: 5632, column: 73, scope: !11558, inlinedAt: !11706)
!11718 = !DILocation(line: 5643, column: 23, scope: !11595, inlinedAt: !11706)
!11719 = !DILocation(line: 5643, column: 9, scope: !11595, inlinedAt: !11706)
!11720 = !DILocation(line: 5698, column: 17, scope: !11707)
!11721 = !DILocation(line: 5632, column: 52, scope: !11558, inlinedAt: !11709)
!11722 = !DILocation(line: 5632, column: 59, scope: !11558, inlinedAt: !11709)
!11723 = !DILocation(line: 5632, column: 73, scope: !11558, inlinedAt: !11709)
!11724 = !DILocation(line: 5644, column: 50, scope: !11599, inlinedAt: !11709)
!11725 = !DILocation(line: 5647, column: 36, scope: !11602, inlinedAt: !11709)
!11726 = !DILocation(line: 5650, column: 22, scope: !11602, inlinedAt: !11709)
!11727 = !DILocation(line: 5650, column: 31, scope: !11602, inlinedAt: !11709)
!11728 = !DILocation(line: 5647, column: 23, scope: !11602, inlinedAt: !11709)
!11729 = !DILocation(line: 5647, column: 9, scope: !11602, inlinedAt: !11709)
!11730 = !DILocation(line: 5705, column: 9, scope: !11622)
!11731 = !DILocation(line: 5654, column: 1, scope: !11558, inlinedAt: !11706)
!11732 = !DILocation(line: 5702, column: 17, scope: !11703)
!11733 = !DILocation(line: 0, scope: !11703)
!11734 = !DILocation(line: 5706, column: 9, scope: !11617)
!11735 = !DILocation(line: 5707, column: 5, scope: !11618)
!11736 = !DILocation(line: 0, scope: !11644)
!11737 = !DILocation(line: 5709, column: 1, scope: !11611)
